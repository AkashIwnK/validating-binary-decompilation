; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0xab0f28_type = type <{ [1 x i8] }>
%G_0xab0fe0_type = type <{ [8 x i8] }>
%G__0x582d00_type = type <{ [8 x i8] }>
%G__0x582d3a_type = type <{ [8 x i8] }>
%G__0x582d63_type = type <{ [8 x i8] }>
%G__0xafdfc0_type = type <{ [8 x i8] }>
%G__0xb01180_type = type <{ [8 x i8] }>
%G__0xb4bd20_type = type <{ [8 x i8] }>
%G__0xb9a0a0_type = type <{ [8 x i8] }>
%G__0xb9d8f0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0xab0f28 = global %G_0xab0f28_type zeroinitializer
@G_0xab0fe0 = global %G_0xab0fe0_type zeroinitializer
@G__0x582d00 = global %G__0x582d00_type zeroinitializer
@G__0x582d3a = global %G__0x582d3a_type zeroinitializer
@G__0x582d63 = global %G__0x582d63_type zeroinitializer
@G__0xafdfc0 = global %G__0xafdfc0_type zeroinitializer
@G__0xb01180 = global %G__0xb01180_type zeroinitializer
@G__0xb4bd20 = global %G__0xb4bd20_type zeroinitializer
@G__0xb9a0a0 = global %G__0xb9a0a0_type zeroinitializer
@G__0xb9d8f0 = global %G__0xb9d8f0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_451db0.gprintf(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_439550.find_eye_dragons(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_431fb0.owl_attack_move_reason_known(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_44cb30.owl_does_attack(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_433fe0.add_gain_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_434680.add_owl_attack_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_432040.owl_defense_move_reason_known(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_44c3c0.owl_does_defend(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4341e0.add_loss_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4347a0.add_owl_defense_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_423120.are_neighbor_dragons(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @find_more_owl_attack_and_defense_moves(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_47d170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_47d170, %struct.Memory** %MEMORY
  %loadMem_47d171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1184 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1185 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1184
  %27 = load i64, i64* %PC.i1183
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1183
  store i64 %26, i64* %RBP.i1185, align 8
  store %struct.Memory* %loadMem_47d171, %struct.Memory** %MEMORY
  %loadMem_47d174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1182 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1182
  %36 = load i64, i64* %PC.i1181
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1181
  %38 = sub i64 %35, 128
  store i64 %38, i64* %RSP.i1182, align 8
  %39 = icmp ult i64 %35, 128
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 128, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_47d174, %struct.Memory** %MEMORY
  %loadMem_47d17b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i1180 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i1180
  %77 = sub i64 %76, 4
  %78 = load i32, i32* %EDI.i
  %79 = zext i32 %78 to i64
  %80 = load i64, i64* %PC.i1179
  %81 = add i64 %80, 3
  store i64 %81, i64* %PC.i1179
  %82 = inttoptr i64 %77 to i32*
  store i32 %78, i32* %82
  store %struct.Memory* %loadMem_47d17b, %struct.Memory** %MEMORY
  %loadMem_47d17e = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 15
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %RBP.i1178 = bitcast %union.anon* %88 to i64*
  %89 = load i64, i64* %RBP.i1178
  %90 = sub i64 %89, 32
  %91 = load i64, i64* %PC.i1177
  %92 = add i64 %91, 7
  store i64 %92, i64* %PC.i1177
  %93 = inttoptr i64 %90 to i32*
  store i32 0, i32* %93
  store %struct.Memory* %loadMem_47d17e, %struct.Memory** %MEMORY
  %loadMem_47d185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %95 = getelementptr inbounds %struct.GPR, %struct.GPR* %94, i32 0, i32 33
  %96 = getelementptr inbounds %struct.Reg, %struct.Reg* %95, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %96 to i64*
  %97 = load i64, i64* %PC.i1176
  %98 = add i64 %97, 8
  store i64 %98, i64* %PC.i1176
  %99 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %100, align 1
  %101 = and i32 %99, 255
  %102 = call i32 @llvm.ctpop.i32(i32 %101)
  %103 = trunc i32 %102 to i8
  %104 = and i8 %103, 1
  %105 = xor i8 %104, 1
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %105, i8* %106, align 1
  %107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %107, align 1
  %108 = icmp eq i32 %99, 0
  %109 = zext i1 %108 to i8
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %109, i8* %110, align 1
  %111 = lshr i32 %99, 31
  %112 = trunc i32 %111 to i8
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %112, i8* %113, align 1
  %114 = lshr i32 %99, 31
  %115 = xor i32 %111, %114
  %116 = add i32 %115, %114
  %117 = icmp eq i32 %116, 2
  %118 = zext i1 %117 to i8
  %119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %118, i8* %119, align 1
  store %struct.Memory* %loadMem_47d185, %struct.Memory** %MEMORY
  %loadMem_47d18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 33
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %122 to i64*
  %123 = load i64, i64* %PC.i1175
  %124 = add i64 %123, 11
  %125 = load i64, i64* %PC.i1175
  %126 = add i64 %125, 6
  %127 = load i64, i64* %PC.i1175
  %128 = add i64 %127, 6
  store i64 %128, i64* %PC.i1175
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %130 = load i8, i8* %129, align 1
  %131 = icmp eq i8 %130, 0
  %132 = zext i1 %131 to i8
  store i8 %132, i8* %BRANCH_TAKEN, align 1
  %133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %134 = select i1 %131, i64 %124, i64 %126
  store i64 %134, i64* %133, align 8
  store %struct.Memory* %loadMem_47d18d, %struct.Memory** %MEMORY
  %loadBr_47d18d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d18d = icmp eq i8 %loadBr_47d18d, 1
  br i1 %cmpBr_47d18d, label %block_.L_47d198, label %block_47d193

block_47d193:                                     ; preds = %entry
  %loadMem_47d193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %137 to i64*
  %138 = load i64, i64* %PC.i1174
  %139 = add i64 %138, 25
  %140 = load i64, i64* %PC.i1174
  %141 = add i64 %140, 5
  store i64 %141, i64* %PC.i1174
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %139, i64* %142, align 8
  store %struct.Memory* %loadMem_47d193, %struct.Memory** %MEMORY
  br label %block_.L_47d1ac

block_.L_47d198:                                  ; preds = %entry
  %loadMem_47d198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %144 = getelementptr inbounds %struct.GPR, %struct.GPR* %143, i32 0, i32 33
  %145 = getelementptr inbounds %struct.Reg, %struct.Reg* %144, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %145 to i64*
  %146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %147 = getelementptr inbounds %struct.GPR, %struct.GPR* %146, i32 0, i32 11
  %148 = getelementptr inbounds %struct.Reg, %struct.Reg* %147, i32 0, i32 0
  %RDI.i1173 = bitcast %union.anon* %148 to i64*
  %149 = load i64, i64* %PC.i1172
  %150 = add i64 %149, 10
  store i64 %150, i64* %PC.i1172
  store i64 ptrtoint (%G__0x582d00_type* @G__0x582d00 to i64), i64* %RDI.i1173, align 8
  store %struct.Memory* %loadMem_47d198, %struct.Memory** %MEMORY
  %loadMem_47d1a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %152 = getelementptr inbounds %struct.GPR, %struct.GPR* %151, i32 0, i32 33
  %153 = getelementptr inbounds %struct.Reg, %struct.Reg* %152, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %153 to i64*
  %154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %155 = getelementptr inbounds %struct.GPR, %struct.GPR* %154, i32 0, i32 1
  %156 = getelementptr inbounds %struct.Reg, %struct.Reg* %155, i32 0, i32 0
  %157 = bitcast %union.anon* %156 to %struct.anon.2*
  %AL.i1171 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %157, i32 0, i32 0
  %158 = load i64, i64* %PC.i1170
  %159 = add i64 %158, 2
  store i64 %159, i64* %PC.i1170
  store i8 0, i8* %AL.i1171, align 1
  store %struct.Memory* %loadMem_47d1a2, %struct.Memory** %MEMORY
  %loadMem1_47d1a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %161 = getelementptr inbounds %struct.GPR, %struct.GPR* %160, i32 0, i32 33
  %162 = getelementptr inbounds %struct.Reg, %struct.Reg* %161, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %162 to i64*
  %163 = load i64, i64* %PC.i1169
  %164 = add i64 %163, -177140
  %165 = load i64, i64* %PC.i1169
  %166 = add i64 %165, 5
  %167 = load i64, i64* %PC.i1169
  %168 = add i64 %167, 5
  store i64 %168, i64* %PC.i1169
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %170 = load i64, i64* %169, align 8
  %171 = add i64 %170, -8
  %172 = inttoptr i64 %171 to i64*
  store i64 %166, i64* %172
  store i64 %171, i64* %169, align 8
  %173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %164, i64* %173, align 8
  store %struct.Memory* %loadMem1_47d1a4, %struct.Memory** %MEMORY
  %loadMem2_47d1a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d1a4 = load i64, i64* %3
  %call2_47d1a4 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_47d1a4, %struct.Memory* %loadMem2_47d1a4)
  store %struct.Memory* %call2_47d1a4, %struct.Memory** %MEMORY
  %loadMem_47d1a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 33
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %176 to i64*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 1
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %EAX.i1167 = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 15
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %RBP.i1168 = bitcast %union.anon* %182 to i64*
  %183 = load i64, i64* %RBP.i1168
  %184 = sub i64 %183, 100
  %185 = load i32, i32* %EAX.i1167
  %186 = zext i32 %185 to i64
  %187 = load i64, i64* %PC.i1166
  %188 = add i64 %187, 3
  store i64 %188, i64* %PC.i1166
  %189 = inttoptr i64 %184 to i32*
  store i32 %185, i32* %189
  store %struct.Memory* %loadMem_47d1a9, %struct.Memory** %MEMORY
  br label %block_.L_47d1ac

block_.L_47d1ac:                                  ; preds = %block_.L_47d198, %block_47d193
  %loadMem_47d1ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %191 = getelementptr inbounds %struct.GPR, %struct.GPR* %190, i32 0, i32 33
  %192 = getelementptr inbounds %struct.Reg, %struct.Reg* %191, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %192 to i64*
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %194 = getelementptr inbounds %struct.GPR, %struct.GPR* %193, i32 0, i32 15
  %195 = getelementptr inbounds %struct.Reg, %struct.Reg* %194, i32 0, i32 0
  %RBP.i1165 = bitcast %union.anon* %195 to i64*
  %196 = load i64, i64* %RBP.i1165
  %197 = sub i64 %196, 8
  %198 = load i64, i64* %PC.i1164
  %199 = add i64 %198, 7
  store i64 %199, i64* %PC.i1164
  %200 = inttoptr i64 %197 to i32*
  store i32 21, i32* %200
  store %struct.Memory* %loadMem_47d1ac, %struct.Memory** %MEMORY
  br label %block_.L_47d1b3

block_.L_47d1b3:                                  ; preds = %block_.L_47d820, %block_.L_47d1ac
  %loadMem_47d1b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 33
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 15
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RBP.i1163 = bitcast %union.anon* %206 to i64*
  %207 = load i64, i64* %RBP.i1163
  %208 = sub i64 %207, 8
  %209 = load i64, i64* %PC.i1162
  %210 = add i64 %209, 7
  store i64 %210, i64* %PC.i1162
  %211 = inttoptr i64 %208 to i32*
  %212 = load i32, i32* %211
  %213 = sub i32 %212, 400
  %214 = icmp ult i32 %212, 400
  %215 = zext i1 %214 to i8
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %215, i8* %216, align 1
  %217 = and i32 %213, 255
  %218 = call i32 @llvm.ctpop.i32(i32 %217)
  %219 = trunc i32 %218 to i8
  %220 = and i8 %219, 1
  %221 = xor i8 %220, 1
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %221, i8* %222, align 1
  %223 = xor i32 %212, 400
  %224 = xor i32 %223, %213
  %225 = lshr i32 %224, 4
  %226 = trunc i32 %225 to i8
  %227 = and i8 %226, 1
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %227, i8* %228, align 1
  %229 = icmp eq i32 %213, 0
  %230 = zext i1 %229 to i8
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %230, i8* %231, align 1
  %232 = lshr i32 %213, 31
  %233 = trunc i32 %232 to i8
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %233, i8* %234, align 1
  %235 = lshr i32 %212, 31
  %236 = xor i32 %232, %235
  %237 = add i32 %236, %235
  %238 = icmp eq i32 %237, 2
  %239 = zext i1 %238 to i8
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %239, i8* %240, align 1
  store %struct.Memory* %loadMem_47d1b3, %struct.Memory** %MEMORY
  %loadMem_47d1ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %242 = getelementptr inbounds %struct.GPR, %struct.GPR* %241, i32 0, i32 33
  %243 = getelementptr inbounds %struct.Reg, %struct.Reg* %242, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %243 to i64*
  %244 = load i64, i64* %PC.i1161
  %245 = add i64 %244, 1652
  %246 = load i64, i64* %PC.i1161
  %247 = add i64 %246, 6
  %248 = load i64, i64* %PC.i1161
  %249 = add i64 %248, 6
  store i64 %249, i64* %PC.i1161
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %251 = load i8, i8* %250, align 1
  %252 = icmp ne i8 %251, 0
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %254 = load i8, i8* %253, align 1
  %255 = icmp ne i8 %254, 0
  %256 = xor i1 %252, %255
  %257 = xor i1 %256, true
  %258 = zext i1 %257 to i8
  store i8 %258, i8* %BRANCH_TAKEN, align 1
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %260 = select i1 %256, i64 %247, i64 %245
  store i64 %260, i64* %259, align 8
  store %struct.Memory* %loadMem_47d1ba, %struct.Memory** %MEMORY
  %loadBr_47d1ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d1ba = icmp eq i8 %loadBr_47d1ba, 1
  br i1 %cmpBr_47d1ba, label %block_.L_47d82e, label %block_47d1c0

block_47d1c0:                                     ; preds = %block_.L_47d1b3
  %loadMem_47d1c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %262 = getelementptr inbounds %struct.GPR, %struct.GPR* %261, i32 0, i32 33
  %263 = getelementptr inbounds %struct.Reg, %struct.Reg* %262, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %263 to i64*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %265 = getelementptr inbounds %struct.GPR, %struct.GPR* %264, i32 0, i32 1
  %266 = getelementptr inbounds %struct.Reg, %struct.Reg* %265, i32 0, i32 0
  %RAX.i1159 = bitcast %union.anon* %266 to i64*
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %268 = getelementptr inbounds %struct.GPR, %struct.GPR* %267, i32 0, i32 15
  %269 = getelementptr inbounds %struct.Reg, %struct.Reg* %268, i32 0, i32 0
  %RBP.i1160 = bitcast %union.anon* %269 to i64*
  %270 = load i64, i64* %RBP.i1160
  %271 = sub i64 %270, 8
  %272 = load i64, i64* %PC.i1158
  %273 = add i64 %272, 4
  store i64 %273, i64* %PC.i1158
  %274 = inttoptr i64 %271 to i32*
  %275 = load i32, i32* %274
  %276 = sext i32 %275 to i64
  store i64 %276, i64* %RAX.i1159, align 8
  store %struct.Memory* %loadMem_47d1c0, %struct.Memory** %MEMORY
  %loadMem_47d1c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %278 = getelementptr inbounds %struct.GPR, %struct.GPR* %277, i32 0, i32 33
  %279 = getelementptr inbounds %struct.Reg, %struct.Reg* %278, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %279 to i64*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %281 = getelementptr inbounds %struct.GPR, %struct.GPR* %280, i32 0, i32 1
  %282 = getelementptr inbounds %struct.Reg, %struct.Reg* %281, i32 0, i32 0
  %RAX.i1156 = bitcast %union.anon* %282 to i64*
  %283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %284 = getelementptr inbounds %struct.GPR, %struct.GPR* %283, i32 0, i32 5
  %285 = getelementptr inbounds %struct.Reg, %struct.Reg* %284, i32 0, i32 0
  %RCX.i1157 = bitcast %union.anon* %285 to i64*
  %286 = load i64, i64* %RAX.i1156
  %287 = add i64 %286, 12099168
  %288 = load i64, i64* %PC.i1155
  %289 = add i64 %288, 8
  store i64 %289, i64* %PC.i1155
  %290 = inttoptr i64 %287 to i8*
  %291 = load i8, i8* %290
  %292 = zext i8 %291 to i64
  store i64 %292, i64* %RCX.i1157, align 8
  store %struct.Memory* %loadMem_47d1c4, %struct.Memory** %MEMORY
  %loadMem_47d1cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %294 = getelementptr inbounds %struct.GPR, %struct.GPR* %293, i32 0, i32 33
  %295 = getelementptr inbounds %struct.Reg, %struct.Reg* %294, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %295 to i64*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %297 = getelementptr inbounds %struct.GPR, %struct.GPR* %296, i32 0, i32 5
  %298 = getelementptr inbounds %struct.Reg, %struct.Reg* %297, i32 0, i32 0
  %ECX.i1154 = bitcast %union.anon* %298 to i32*
  %299 = load i32, i32* %ECX.i1154
  %300 = zext i32 %299 to i64
  %301 = load i64, i64* %PC.i1153
  %302 = add i64 %301, 3
  store i64 %302, i64* %PC.i1153
  %303 = sub i32 %299, 3
  %304 = icmp ult i32 %299, 3
  %305 = zext i1 %304 to i8
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %305, i8* %306, align 1
  %307 = and i32 %303, 255
  %308 = call i32 @llvm.ctpop.i32(i32 %307)
  %309 = trunc i32 %308 to i8
  %310 = and i8 %309, 1
  %311 = xor i8 %310, 1
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %311, i8* %312, align 1
  %313 = xor i64 3, %300
  %314 = trunc i64 %313 to i32
  %315 = xor i32 %314, %303
  %316 = lshr i32 %315, 4
  %317 = trunc i32 %316 to i8
  %318 = and i8 %317, 1
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %318, i8* %319, align 1
  %320 = icmp eq i32 %303, 0
  %321 = zext i1 %320 to i8
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %321, i8* %322, align 1
  %323 = lshr i32 %303, 31
  %324 = trunc i32 %323 to i8
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %324, i8* %325, align 1
  %326 = lshr i32 %299, 31
  %327 = xor i32 %323, %326
  %328 = add i32 %327, %326
  %329 = icmp eq i32 %328, 2
  %330 = zext i1 %329 to i8
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %330, i8* %331, align 1
  store %struct.Memory* %loadMem_47d1cc, %struct.Memory** %MEMORY
  %loadMem_47d1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %333 = getelementptr inbounds %struct.GPR, %struct.GPR* %332, i32 0, i32 33
  %334 = getelementptr inbounds %struct.Reg, %struct.Reg* %333, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %334 to i64*
  %335 = load i64, i64* %PC.i1152
  %336 = add i64 %335, 11
  %337 = load i64, i64* %PC.i1152
  %338 = add i64 %337, 6
  %339 = load i64, i64* %PC.i1152
  %340 = add i64 %339, 6
  store i64 %340, i64* %PC.i1152
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %342 = load i8, i8* %341, align 1
  %343 = icmp eq i8 %342, 0
  %344 = zext i1 %343 to i8
  store i8 %344, i8* %BRANCH_TAKEN, align 1
  %345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %346 = select i1 %343, i64 %336, i64 %338
  store i64 %346, i64* %345, align 8
  store %struct.Memory* %loadMem_47d1cf, %struct.Memory** %MEMORY
  %loadBr_47d1cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d1cf = icmp eq i8 %loadBr_47d1cf, 1
  br i1 %cmpBr_47d1cf, label %block_.L_47d1da, label %block_47d1d5

block_47d1d5:                                     ; preds = %block_47d1c0
  %loadMem_47d1d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %348 = getelementptr inbounds %struct.GPR, %struct.GPR* %347, i32 0, i32 33
  %349 = getelementptr inbounds %struct.Reg, %struct.Reg* %348, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %349 to i64*
  %350 = load i64, i64* %PC.i1151
  %351 = add i64 %350, 1611
  %352 = load i64, i64* %PC.i1151
  %353 = add i64 %352, 5
  store i64 %353, i64* %PC.i1151
  %354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %351, i64* %354, align 8
  store %struct.Memory* %loadMem_47d1d5, %struct.Memory** %MEMORY
  br label %block_.L_47d820

block_.L_47d1da:                                  ; preds = %block_47d1c0
  %loadMem_47d1da = load %struct.Memory*, %struct.Memory** %MEMORY
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %356 = getelementptr inbounds %struct.GPR, %struct.GPR* %355, i32 0, i32 33
  %357 = getelementptr inbounds %struct.Reg, %struct.Reg* %356, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %357 to i64*
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %359 = getelementptr inbounds %struct.GPR, %struct.GPR* %358, i32 0, i32 15
  %360 = getelementptr inbounds %struct.Reg, %struct.Reg* %359, i32 0, i32 0
  %RBP.i1150 = bitcast %union.anon* %360 to i64*
  %361 = load i64, i64* %RBP.i1150
  %362 = sub i64 %361, 16
  %363 = load i64, i64* %PC.i1149
  %364 = add i64 %363, 7
  store i64 %364, i64* %PC.i1149
  %365 = inttoptr i64 %362 to i32*
  store i32 0, i32* %365
  store %struct.Memory* %loadMem_47d1da, %struct.Memory** %MEMORY
  br label %block_.L_47d1e1

block_.L_47d1e1:                                  ; preds = %block_.L_47d80d, %block_.L_47d1da
  %loadMem_47d1e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %367 = getelementptr inbounds %struct.GPR, %struct.GPR* %366, i32 0, i32 33
  %368 = getelementptr inbounds %struct.Reg, %struct.Reg* %367, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %368 to i64*
  %369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %370 = getelementptr inbounds %struct.GPR, %struct.GPR* %369, i32 0, i32 15
  %371 = getelementptr inbounds %struct.Reg, %struct.Reg* %370, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %371 to i64*
  %372 = load i64, i64* %RBP.i1148
  %373 = sub i64 %372, 16
  %374 = load i64, i64* %PC.i1147
  %375 = add i64 %374, 4
  store i64 %375, i64* %PC.i1147
  %376 = inttoptr i64 %373 to i32*
  %377 = load i32, i32* %376
  %378 = sub i32 %377, 120
  %379 = icmp ult i32 %377, 120
  %380 = zext i1 %379 to i8
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %380, i8* %381, align 1
  %382 = and i32 %378, 255
  %383 = call i32 @llvm.ctpop.i32(i32 %382)
  %384 = trunc i32 %383 to i8
  %385 = and i8 %384, 1
  %386 = xor i8 %385, 1
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %386, i8* %387, align 1
  %388 = xor i32 %377, 120
  %389 = xor i32 %388, %378
  %390 = lshr i32 %389, 4
  %391 = trunc i32 %390 to i8
  %392 = and i8 %391, 1
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %392, i8* %393, align 1
  %394 = icmp eq i32 %378, 0
  %395 = zext i1 %394 to i8
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %395, i8* %396, align 1
  %397 = lshr i32 %378, 31
  %398 = trunc i32 %397 to i8
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %398, i8* %399, align 1
  %400 = lshr i32 %377, 31
  %401 = xor i32 %397, %400
  %402 = add i32 %401, %400
  %403 = icmp eq i32 %402, 2
  %404 = zext i1 %403 to i8
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %404, i8* %405, align 1
  store %struct.Memory* %loadMem_47d1e1, %struct.Memory** %MEMORY
  %loadMem_47d1e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %407 = getelementptr inbounds %struct.GPR, %struct.GPR* %406, i32 0, i32 33
  %408 = getelementptr inbounds %struct.Reg, %struct.Reg* %407, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %408 to i64*
  %409 = load i64, i64* %PC.i1146
  %410 = add i64 %409, 1590
  %411 = load i64, i64* %PC.i1146
  %412 = add i64 %411, 6
  %413 = load i64, i64* %PC.i1146
  %414 = add i64 %413, 6
  store i64 %414, i64* %PC.i1146
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %416 = load i8, i8* %415, align 1
  %417 = icmp ne i8 %416, 0
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %419 = load i8, i8* %418, align 1
  %420 = icmp ne i8 %419, 0
  %421 = xor i1 %417, %420
  %422 = xor i1 %421, true
  %423 = zext i1 %422 to i8
  store i8 %423, i8* %BRANCH_TAKEN, align 1
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %425 = select i1 %421, i64 %412, i64 %410
  store i64 %425, i64* %424, align 8
  store %struct.Memory* %loadMem_47d1e5, %struct.Memory** %MEMORY
  %loadBr_47d1e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d1e5 = icmp eq i8 %loadBr_47d1e5, 1
  br i1 %cmpBr_47d1e5, label %block_.L_47d81b, label %block_47d1eb

block_47d1eb:                                     ; preds = %block_.L_47d1e1
  %loadMem_47d1eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %427 = getelementptr inbounds %struct.GPR, %struct.GPR* %426, i32 0, i32 33
  %428 = getelementptr inbounds %struct.Reg, %struct.Reg* %427, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %428 to i64*
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %430 = getelementptr inbounds %struct.GPR, %struct.GPR* %429, i32 0, i32 1
  %431 = getelementptr inbounds %struct.Reg, %struct.Reg* %430, i32 0, i32 0
  %RAX.i1145 = bitcast %union.anon* %431 to i64*
  %432 = load i64, i64* %PC.i1144
  %433 = add i64 %432, 10
  store i64 %433, i64* %PC.i1144
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1145, align 8
  store %struct.Memory* %loadMem_47d1eb, %struct.Memory** %MEMORY
  %loadMem_47d1f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %435 = getelementptr inbounds %struct.GPR, %struct.GPR* %434, i32 0, i32 33
  %436 = getelementptr inbounds %struct.Reg, %struct.Reg* %435, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %436 to i64*
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %438 = getelementptr inbounds %struct.GPR, %struct.GPR* %437, i32 0, i32 5
  %439 = getelementptr inbounds %struct.Reg, %struct.Reg* %438, i32 0, i32 0
  %RCX.i1142 = bitcast %union.anon* %439 to i64*
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %441 = getelementptr inbounds %struct.GPR, %struct.GPR* %440, i32 0, i32 15
  %442 = getelementptr inbounds %struct.Reg, %struct.Reg* %441, i32 0, i32 0
  %RBP.i1143 = bitcast %union.anon* %442 to i64*
  %443 = load i64, i64* %RBP.i1143
  %444 = sub i64 %443, 8
  %445 = load i64, i64* %PC.i1141
  %446 = add i64 %445, 4
  store i64 %446, i64* %PC.i1141
  %447 = inttoptr i64 %444 to i32*
  %448 = load i32, i32* %447
  %449 = sext i32 %448 to i64
  store i64 %449, i64* %RCX.i1142, align 8
  store %struct.Memory* %loadMem_47d1f5, %struct.Memory** %MEMORY
  %loadMem_47d1f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %451 = getelementptr inbounds %struct.GPR, %struct.GPR* %450, i32 0, i32 33
  %452 = getelementptr inbounds %struct.Reg, %struct.Reg* %451, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %452 to i64*
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %454 = getelementptr inbounds %struct.GPR, %struct.GPR* %453, i32 0, i32 5
  %455 = getelementptr inbounds %struct.Reg, %struct.Reg* %454, i32 0, i32 0
  %RCX.i1140 = bitcast %union.anon* %455 to i64*
  %456 = load i64, i64* %RCX.i1140
  %457 = load i64, i64* %PC.i1139
  %458 = add i64 %457, 7
  store i64 %458, i64* %PC.i1139
  %459 = sext i64 %456 to i128
  %460 = and i128 %459, -18446744073709551616
  %461 = zext i64 %456 to i128
  %462 = or i128 %460, %461
  %463 = mul i128 564, %462
  %464 = trunc i128 %463 to i64
  store i64 %464, i64* %RCX.i1140, align 8
  %465 = sext i64 %464 to i128
  %466 = icmp ne i128 %465, %463
  %467 = zext i1 %466 to i8
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %467, i8* %468, align 1
  %469 = trunc i128 %463 to i32
  %470 = and i32 %469, 255
  %471 = call i32 @llvm.ctpop.i32(i32 %470)
  %472 = trunc i32 %471 to i8
  %473 = and i8 %472, 1
  %474 = xor i8 %473, 1
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %474, i8* %475, align 1
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %476, align 1
  %477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %477, align 1
  %478 = lshr i64 %464, 63
  %479 = trunc i64 %478 to i8
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %479, i8* %480, align 1
  %481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %467, i8* %481, align 1
  store %struct.Memory* %loadMem_47d1f9, %struct.Memory** %MEMORY
  %loadMem_47d200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %483 = getelementptr inbounds %struct.GPR, %struct.GPR* %482, i32 0, i32 33
  %484 = getelementptr inbounds %struct.Reg, %struct.Reg* %483, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %484 to i64*
  %485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %486 = getelementptr inbounds %struct.GPR, %struct.GPR* %485, i32 0, i32 1
  %487 = getelementptr inbounds %struct.Reg, %struct.Reg* %486, i32 0, i32 0
  %RAX.i1137 = bitcast %union.anon* %487 to i64*
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %489 = getelementptr inbounds %struct.GPR, %struct.GPR* %488, i32 0, i32 5
  %490 = getelementptr inbounds %struct.Reg, %struct.Reg* %489, i32 0, i32 0
  %RCX.i1138 = bitcast %union.anon* %490 to i64*
  %491 = load i64, i64* %RAX.i1137
  %492 = load i64, i64* %RCX.i1138
  %493 = load i64, i64* %PC.i1136
  %494 = add i64 %493, 3
  store i64 %494, i64* %PC.i1136
  %495 = add i64 %492, %491
  store i64 %495, i64* %RAX.i1137, align 8
  %496 = icmp ult i64 %495, %491
  %497 = icmp ult i64 %495, %492
  %498 = or i1 %496, %497
  %499 = zext i1 %498 to i8
  %500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %499, i8* %500, align 1
  %501 = trunc i64 %495 to i32
  %502 = and i32 %501, 255
  %503 = call i32 @llvm.ctpop.i32(i32 %502)
  %504 = trunc i32 %503 to i8
  %505 = and i8 %504, 1
  %506 = xor i8 %505, 1
  %507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %506, i8* %507, align 1
  %508 = xor i64 %492, %491
  %509 = xor i64 %508, %495
  %510 = lshr i64 %509, 4
  %511 = trunc i64 %510 to i8
  %512 = and i8 %511, 1
  %513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %512, i8* %513, align 1
  %514 = icmp eq i64 %495, 0
  %515 = zext i1 %514 to i8
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %515, i8* %516, align 1
  %517 = lshr i64 %495, 63
  %518 = trunc i64 %517 to i8
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %518, i8* %519, align 1
  %520 = lshr i64 %491, 63
  %521 = lshr i64 %492, 63
  %522 = xor i64 %517, %520
  %523 = xor i64 %517, %521
  %524 = add i64 %522, %523
  %525 = icmp eq i64 %524, 2
  %526 = zext i1 %525 to i8
  %527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %526, i8* %527, align 1
  store %struct.Memory* %loadMem_47d200, %struct.Memory** %MEMORY
  %loadMem_47d203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %529 = getelementptr inbounds %struct.GPR, %struct.GPR* %528, i32 0, i32 33
  %530 = getelementptr inbounds %struct.Reg, %struct.Reg* %529, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %530 to i64*
  %531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %532 = getelementptr inbounds %struct.GPR, %struct.GPR* %531, i32 0, i32 5
  %533 = getelementptr inbounds %struct.Reg, %struct.Reg* %532, i32 0, i32 0
  %RCX.i1134 = bitcast %union.anon* %533 to i64*
  %534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %535 = getelementptr inbounds %struct.GPR, %struct.GPR* %534, i32 0, i32 15
  %536 = getelementptr inbounds %struct.Reg, %struct.Reg* %535, i32 0, i32 0
  %RBP.i1135 = bitcast %union.anon* %536 to i64*
  %537 = load i64, i64* %RBP.i1135
  %538 = sub i64 %537, 16
  %539 = load i64, i64* %PC.i1133
  %540 = add i64 %539, 4
  store i64 %540, i64* %PC.i1133
  %541 = inttoptr i64 %538 to i32*
  %542 = load i32, i32* %541
  %543 = sext i32 %542 to i64
  store i64 %543, i64* %RCX.i1134, align 8
  store %struct.Memory* %loadMem_47d203, %struct.Memory** %MEMORY
  %loadMem_47d207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %545 = getelementptr inbounds %struct.GPR, %struct.GPR* %544, i32 0, i32 33
  %546 = getelementptr inbounds %struct.Reg, %struct.Reg* %545, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %546 to i64*
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %548 = getelementptr inbounds %struct.GPR, %struct.GPR* %547, i32 0, i32 1
  %549 = getelementptr inbounds %struct.Reg, %struct.Reg* %548, i32 0, i32 0
  %RAX.i1130 = bitcast %union.anon* %549 to i64*
  %550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %551 = getelementptr inbounds %struct.GPR, %struct.GPR* %550, i32 0, i32 5
  %552 = getelementptr inbounds %struct.Reg, %struct.Reg* %551, i32 0, i32 0
  %RCX.i1131 = bitcast %union.anon* %552 to i64*
  %553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %554 = getelementptr inbounds %struct.GPR, %struct.GPR* %553, i32 0, i32 7
  %555 = getelementptr inbounds %struct.Reg, %struct.Reg* %554, i32 0, i32 0
  %RDX.i1132 = bitcast %union.anon* %555 to i64*
  %556 = load i64, i64* %RAX.i1130
  %557 = load i64, i64* %RCX.i1131
  %558 = mul i64 %557, 4
  %559 = add i64 %556, 72
  %560 = add i64 %559, %558
  %561 = load i64, i64* %PC.i1129
  %562 = add i64 %561, 4
  store i64 %562, i64* %PC.i1129
  %563 = inttoptr i64 %560 to i32*
  %564 = load i32, i32* %563
  %565 = zext i32 %564 to i64
  store i64 %565, i64* %RDX.i1132, align 8
  store %struct.Memory* %loadMem_47d207, %struct.Memory** %MEMORY
  %loadMem_47d20b = load %struct.Memory*, %struct.Memory** %MEMORY
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %567 = getelementptr inbounds %struct.GPR, %struct.GPR* %566, i32 0, i32 33
  %568 = getelementptr inbounds %struct.Reg, %struct.Reg* %567, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %568 to i64*
  %569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %570 = getelementptr inbounds %struct.GPR, %struct.GPR* %569, i32 0, i32 7
  %571 = getelementptr inbounds %struct.Reg, %struct.Reg* %570, i32 0, i32 0
  %EDX.i1127 = bitcast %union.anon* %571 to i32*
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 15
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %RBP.i1128 = bitcast %union.anon* %574 to i64*
  %575 = load i64, i64* %RBP.i1128
  %576 = sub i64 %575, 40
  %577 = load i32, i32* %EDX.i1127
  %578 = zext i32 %577 to i64
  %579 = load i64, i64* %PC.i1126
  %580 = add i64 %579, 3
  store i64 %580, i64* %PC.i1126
  %581 = inttoptr i64 %576 to i32*
  store i32 %577, i32* %581
  store %struct.Memory* %loadMem_47d20b, %struct.Memory** %MEMORY
  %loadMem_47d20e = load %struct.Memory*, %struct.Memory** %MEMORY
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %583 = getelementptr inbounds %struct.GPR, %struct.GPR* %582, i32 0, i32 33
  %584 = getelementptr inbounds %struct.Reg, %struct.Reg* %583, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %584 to i64*
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %586 = getelementptr inbounds %struct.GPR, %struct.GPR* %585, i32 0, i32 15
  %587 = getelementptr inbounds %struct.Reg, %struct.Reg* %586, i32 0, i32 0
  %RBP.i1125 = bitcast %union.anon* %587 to i64*
  %588 = load i64, i64* %RBP.i1125
  %589 = sub i64 %588, 24
  %590 = load i64, i64* %PC.i1124
  %591 = add i64 %590, 7
  store i64 %591, i64* %PC.i1124
  %592 = inttoptr i64 %589 to i32*
  store i32 0, i32* %592
  store %struct.Memory* %loadMem_47d20e, %struct.Memory** %MEMORY
  %loadMem_47d215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %594 = getelementptr inbounds %struct.GPR, %struct.GPR* %593, i32 0, i32 33
  %595 = getelementptr inbounds %struct.Reg, %struct.Reg* %594, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %595 to i64*
  %596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %597 = getelementptr inbounds %struct.GPR, %struct.GPR* %596, i32 0, i32 15
  %598 = getelementptr inbounds %struct.Reg, %struct.Reg* %597, i32 0, i32 0
  %RBP.i1123 = bitcast %union.anon* %598 to i64*
  %599 = load i64, i64* %RBP.i1123
  %600 = sub i64 %599, 28
  %601 = load i64, i64* %PC.i1122
  %602 = add i64 %601, 7
  store i64 %602, i64* %PC.i1122
  %603 = inttoptr i64 %600 to i32*
  store i32 0, i32* %603
  store %struct.Memory* %loadMem_47d215, %struct.Memory** %MEMORY
  %loadMem_47d21c = load %struct.Memory*, %struct.Memory** %MEMORY
  %604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %605 = getelementptr inbounds %struct.GPR, %struct.GPR* %604, i32 0, i32 33
  %606 = getelementptr inbounds %struct.Reg, %struct.Reg* %605, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %606 to i64*
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %608 = getelementptr inbounds %struct.GPR, %struct.GPR* %607, i32 0, i32 15
  %609 = getelementptr inbounds %struct.Reg, %struct.Reg* %608, i32 0, i32 0
  %RBP.i1121 = bitcast %union.anon* %609 to i64*
  %610 = load i64, i64* %RBP.i1121
  %611 = sub i64 %610, 40
  %612 = load i64, i64* %PC.i1120
  %613 = add i64 %612, 4
  store i64 %613, i64* %PC.i1120
  %614 = inttoptr i64 %611 to i32*
  %615 = load i32, i32* %614
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %616, align 1
  %617 = and i32 %615, 255
  %618 = call i32 @llvm.ctpop.i32(i32 %617)
  %619 = trunc i32 %618 to i8
  %620 = and i8 %619, 1
  %621 = xor i8 %620, 1
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %621, i8* %622, align 1
  %623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %623, align 1
  %624 = icmp eq i32 %615, 0
  %625 = zext i1 %624 to i8
  %626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %625, i8* %626, align 1
  %627 = lshr i32 %615, 31
  %628 = trunc i32 %627 to i8
  %629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %628, i8* %629, align 1
  %630 = lshr i32 %615, 31
  %631 = xor i32 %627, %630
  %632 = add i32 %631, %630
  %633 = icmp eq i32 %632, 2
  %634 = zext i1 %633 to i8
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %634, i8* %635, align 1
  store %struct.Memory* %loadMem_47d21c, %struct.Memory** %MEMORY
  %loadMem_47d220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %637 = getelementptr inbounds %struct.GPR, %struct.GPR* %636, i32 0, i32 33
  %638 = getelementptr inbounds %struct.Reg, %struct.Reg* %637, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %638 to i64*
  %639 = load i64, i64* %PC.i1119
  %640 = add i64 %639, 11
  %641 = load i64, i64* %PC.i1119
  %642 = add i64 %641, 6
  %643 = load i64, i64* %PC.i1119
  %644 = add i64 %643, 6
  store i64 %644, i64* %PC.i1119
  %645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %646 = load i8, i8* %645, align 1
  %647 = icmp ne i8 %646, 0
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %649 = load i8, i8* %648, align 1
  %650 = icmp ne i8 %649, 0
  %651 = xor i1 %647, %650
  %652 = xor i1 %651, true
  %653 = zext i1 %652 to i8
  store i8 %653, i8* %BRANCH_TAKEN, align 1
  %654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %655 = select i1 %651, i64 %642, i64 %640
  store i64 %655, i64* %654, align 8
  store %struct.Memory* %loadMem_47d220, %struct.Memory** %MEMORY
  %loadBr_47d220 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d220 = icmp eq i8 %loadBr_47d220, 1
  br i1 %cmpBr_47d220, label %block_.L_47d22b, label %block_47d226

block_47d226:                                     ; preds = %block_47d1eb
  %loadMem_47d226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %657 = getelementptr inbounds %struct.GPR, %struct.GPR* %656, i32 0, i32 33
  %658 = getelementptr inbounds %struct.Reg, %struct.Reg* %657, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %658 to i64*
  %659 = load i64, i64* %PC.i1118
  %660 = add i64 %659, 1525
  %661 = load i64, i64* %PC.i1118
  %662 = add i64 %661, 5
  store i64 %662, i64* %PC.i1118
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %660, i64* %663, align 8
  store %struct.Memory* %loadMem_47d226, %struct.Memory** %MEMORY
  br label %block_.L_47d81b

block_.L_47d22b:                                  ; preds = %block_47d1eb
  %loadMem_47d22b = load %struct.Memory*, %struct.Memory** %MEMORY
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %665 = getelementptr inbounds %struct.GPR, %struct.GPR* %664, i32 0, i32 33
  %666 = getelementptr inbounds %struct.Reg, %struct.Reg* %665, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %666 to i64*
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %668 = getelementptr inbounds %struct.GPR, %struct.GPR* %667, i32 0, i32 1
  %669 = getelementptr inbounds %struct.Reg, %struct.Reg* %668, i32 0, i32 0
  %RAX.i1117 = bitcast %union.anon* %669 to i64*
  %670 = load i64, i64* %PC.i1116
  %671 = add i64 %670, 10
  store i64 %671, i64* %PC.i1116
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i1117, align 8
  store %struct.Memory* %loadMem_47d22b, %struct.Memory** %MEMORY
  %loadMem_47d235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %673 = getelementptr inbounds %struct.GPR, %struct.GPR* %672, i32 0, i32 33
  %674 = getelementptr inbounds %struct.Reg, %struct.Reg* %673, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %674 to i64*
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %676 = getelementptr inbounds %struct.GPR, %struct.GPR* %675, i32 0, i32 5
  %677 = getelementptr inbounds %struct.Reg, %struct.Reg* %676, i32 0, i32 0
  %RCX.i1114 = bitcast %union.anon* %677 to i64*
  %678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %679 = getelementptr inbounds %struct.GPR, %struct.GPR* %678, i32 0, i32 15
  %680 = getelementptr inbounds %struct.Reg, %struct.Reg* %679, i32 0, i32 0
  %RBP.i1115 = bitcast %union.anon* %680 to i64*
  %681 = load i64, i64* %RBP.i1115
  %682 = sub i64 %681, 40
  %683 = load i64, i64* %PC.i1113
  %684 = add i64 %683, 4
  store i64 %684, i64* %PC.i1113
  %685 = inttoptr i64 %682 to i32*
  %686 = load i32, i32* %685
  %687 = sext i32 %686 to i64
  store i64 %687, i64* %RCX.i1114, align 8
  store %struct.Memory* %loadMem_47d235, %struct.Memory** %MEMORY
  %loadMem_47d239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %689 = getelementptr inbounds %struct.GPR, %struct.GPR* %688, i32 0, i32 33
  %690 = getelementptr inbounds %struct.Reg, %struct.Reg* %689, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %690 to i64*
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %692 = getelementptr inbounds %struct.GPR, %struct.GPR* %691, i32 0, i32 5
  %693 = getelementptr inbounds %struct.Reg, %struct.Reg* %692, i32 0, i32 0
  %RCX.i1112 = bitcast %union.anon* %693 to i64*
  %694 = load i64, i64* %RCX.i1112
  %695 = load i64, i64* %PC.i1111
  %696 = add i64 %695, 4
  store i64 %696, i64* %PC.i1111
  %697 = sext i64 %694 to i128
  %698 = and i128 %697, -18446744073709551616
  %699 = zext i64 %694 to i128
  %700 = or i128 %698, %699
  %701 = mul i128 12, %700
  %702 = trunc i128 %701 to i64
  store i64 %702, i64* %RCX.i1112, align 8
  %703 = sext i64 %702 to i128
  %704 = icmp ne i128 %703, %701
  %705 = zext i1 %704 to i8
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %705, i8* %706, align 1
  %707 = trunc i128 %701 to i32
  %708 = and i32 %707, 255
  %709 = call i32 @llvm.ctpop.i32(i32 %708)
  %710 = trunc i32 %709 to i8
  %711 = and i8 %710, 1
  %712 = xor i8 %711, 1
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %712, i8* %713, align 1
  %714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %714, align 1
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %715, align 1
  %716 = lshr i64 %702, 63
  %717 = trunc i64 %716 to i8
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %717, i8* %718, align 1
  %719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %705, i8* %719, align 1
  store %struct.Memory* %loadMem_47d239, %struct.Memory** %MEMORY
  %loadMem_47d23d = load %struct.Memory*, %struct.Memory** %MEMORY
  %720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %721 = getelementptr inbounds %struct.GPR, %struct.GPR* %720, i32 0, i32 33
  %722 = getelementptr inbounds %struct.Reg, %struct.Reg* %721, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %722 to i64*
  %723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %724 = getelementptr inbounds %struct.GPR, %struct.GPR* %723, i32 0, i32 1
  %725 = getelementptr inbounds %struct.Reg, %struct.Reg* %724, i32 0, i32 0
  %RAX.i1109 = bitcast %union.anon* %725 to i64*
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %727 = getelementptr inbounds %struct.GPR, %struct.GPR* %726, i32 0, i32 7
  %728 = getelementptr inbounds %struct.Reg, %struct.Reg* %727, i32 0, i32 0
  %RDX.i1110 = bitcast %union.anon* %728 to i64*
  %729 = load i64, i64* %RAX.i1109
  %730 = load i64, i64* %PC.i1108
  %731 = add i64 %730, 3
  store i64 %731, i64* %PC.i1108
  store i64 %729, i64* %RDX.i1110, align 8
  store %struct.Memory* %loadMem_47d23d, %struct.Memory** %MEMORY
  %loadMem_47d240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %733 = getelementptr inbounds %struct.GPR, %struct.GPR* %732, i32 0, i32 33
  %734 = getelementptr inbounds %struct.Reg, %struct.Reg* %733, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %734 to i64*
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %736 = getelementptr inbounds %struct.GPR, %struct.GPR* %735, i32 0, i32 5
  %737 = getelementptr inbounds %struct.Reg, %struct.Reg* %736, i32 0, i32 0
  %RCX.i1106 = bitcast %union.anon* %737 to i64*
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %739 = getelementptr inbounds %struct.GPR, %struct.GPR* %738, i32 0, i32 7
  %740 = getelementptr inbounds %struct.Reg, %struct.Reg* %739, i32 0, i32 0
  %RDX.i1107 = bitcast %union.anon* %740 to i64*
  %741 = load i64, i64* %RDX.i1107
  %742 = load i64, i64* %RCX.i1106
  %743 = load i64, i64* %PC.i1105
  %744 = add i64 %743, 3
  store i64 %744, i64* %PC.i1105
  %745 = add i64 %742, %741
  store i64 %745, i64* %RDX.i1107, align 8
  %746 = icmp ult i64 %745, %741
  %747 = icmp ult i64 %745, %742
  %748 = or i1 %746, %747
  %749 = zext i1 %748 to i8
  %750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %749, i8* %750, align 1
  %751 = trunc i64 %745 to i32
  %752 = and i32 %751, 255
  %753 = call i32 @llvm.ctpop.i32(i32 %752)
  %754 = trunc i32 %753 to i8
  %755 = and i8 %754, 1
  %756 = xor i8 %755, 1
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %756, i8* %757, align 1
  %758 = xor i64 %742, %741
  %759 = xor i64 %758, %745
  %760 = lshr i64 %759, 4
  %761 = trunc i64 %760 to i8
  %762 = and i8 %761, 1
  %763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %762, i8* %763, align 1
  %764 = icmp eq i64 %745, 0
  %765 = zext i1 %764 to i8
  %766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %765, i8* %766, align 1
  %767 = lshr i64 %745, 63
  %768 = trunc i64 %767 to i8
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %768, i8* %769, align 1
  %770 = lshr i64 %741, 63
  %771 = lshr i64 %742, 63
  %772 = xor i64 %767, %770
  %773 = xor i64 %767, %771
  %774 = add i64 %772, %773
  %775 = icmp eq i64 %774, 2
  %776 = zext i1 %775 to i8
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %776, i8* %777, align 1
  store %struct.Memory* %loadMem_47d240, %struct.Memory** %MEMORY
  %loadMem_47d243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %779 = getelementptr inbounds %struct.GPR, %struct.GPR* %778, i32 0, i32 33
  %780 = getelementptr inbounds %struct.Reg, %struct.Reg* %779, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %780 to i64*
  %781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %782 = getelementptr inbounds %struct.GPR, %struct.GPR* %781, i32 0, i32 7
  %783 = getelementptr inbounds %struct.Reg, %struct.Reg* %782, i32 0, i32 0
  %RDX.i1103 = bitcast %union.anon* %783 to i64*
  %784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %785 = getelementptr inbounds %struct.GPR, %struct.GPR* %784, i32 0, i32 9
  %786 = getelementptr inbounds %struct.Reg, %struct.Reg* %785, i32 0, i32 0
  %RSI.i1104 = bitcast %union.anon* %786 to i64*
  %787 = load i64, i64* %RDX.i1103
  %788 = add i64 %787, 4
  %789 = load i64, i64* %PC.i1102
  %790 = add i64 %789, 3
  store i64 %790, i64* %PC.i1102
  %791 = inttoptr i64 %788 to i32*
  %792 = load i32, i32* %791
  %793 = zext i32 %792 to i64
  store i64 %793, i64* %RSI.i1104, align 8
  store %struct.Memory* %loadMem_47d243, %struct.Memory** %MEMORY
  %loadMem_47d246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 33
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %796 to i64*
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %798 = getelementptr inbounds %struct.GPR, %struct.GPR* %797, i32 0, i32 9
  %799 = getelementptr inbounds %struct.Reg, %struct.Reg* %798, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %799 to i32*
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 15
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %RBP.i1101 = bitcast %union.anon* %802 to i64*
  %803 = load i64, i64* %RBP.i1101
  %804 = sub i64 %803, 44
  %805 = load i32, i32* %ESI.i
  %806 = zext i32 %805 to i64
  %807 = load i64, i64* %PC.i1100
  %808 = add i64 %807, 3
  store i64 %808, i64* %PC.i1100
  %809 = inttoptr i64 %804 to i32*
  store i32 %805, i32* %809
  store %struct.Memory* %loadMem_47d246, %struct.Memory** %MEMORY
  %loadMem_47d249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %811 = getelementptr inbounds %struct.GPR, %struct.GPR* %810, i32 0, i32 33
  %812 = getelementptr inbounds %struct.Reg, %struct.Reg* %811, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %812 to i64*
  %813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %814 = getelementptr inbounds %struct.GPR, %struct.GPR* %813, i32 0, i32 5
  %815 = getelementptr inbounds %struct.Reg, %struct.Reg* %814, i32 0, i32 0
  %RCX.i1098 = bitcast %union.anon* %815 to i64*
  %816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %817 = getelementptr inbounds %struct.GPR, %struct.GPR* %816, i32 0, i32 15
  %818 = getelementptr inbounds %struct.Reg, %struct.Reg* %817, i32 0, i32 0
  %RBP.i1099 = bitcast %union.anon* %818 to i64*
  %819 = load i64, i64* %RBP.i1099
  %820 = sub i64 %819, 40
  %821 = load i64, i64* %PC.i1097
  %822 = add i64 %821, 4
  store i64 %822, i64* %PC.i1097
  %823 = inttoptr i64 %820 to i32*
  %824 = load i32, i32* %823
  %825 = sext i32 %824 to i64
  store i64 %825, i64* %RCX.i1098, align 8
  store %struct.Memory* %loadMem_47d249, %struct.Memory** %MEMORY
  %loadMem_47d24d = load %struct.Memory*, %struct.Memory** %MEMORY
  %826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %827 = getelementptr inbounds %struct.GPR, %struct.GPR* %826, i32 0, i32 33
  %828 = getelementptr inbounds %struct.Reg, %struct.Reg* %827, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %828 to i64*
  %829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %830 = getelementptr inbounds %struct.GPR, %struct.GPR* %829, i32 0, i32 5
  %831 = getelementptr inbounds %struct.Reg, %struct.Reg* %830, i32 0, i32 0
  %RCX.i1096 = bitcast %union.anon* %831 to i64*
  %832 = load i64, i64* %RCX.i1096
  %833 = load i64, i64* %PC.i1095
  %834 = add i64 %833, 4
  store i64 %834, i64* %PC.i1095
  %835 = sext i64 %832 to i128
  %836 = and i128 %835, -18446744073709551616
  %837 = zext i64 %832 to i128
  %838 = or i128 %836, %837
  %839 = mul i128 12, %838
  %840 = trunc i128 %839 to i64
  store i64 %840, i64* %RCX.i1096, align 8
  %841 = sext i64 %840 to i128
  %842 = icmp ne i128 %841, %839
  %843 = zext i1 %842 to i8
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %843, i8* %844, align 1
  %845 = trunc i128 %839 to i32
  %846 = and i32 %845, 255
  %847 = call i32 @llvm.ctpop.i32(i32 %846)
  %848 = trunc i32 %847 to i8
  %849 = and i8 %848, 1
  %850 = xor i8 %849, 1
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %850, i8* %851, align 1
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %852, align 1
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %853, align 1
  %854 = lshr i64 %840, 63
  %855 = trunc i64 %854 to i8
  %856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %855, i8* %856, align 1
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %843, i8* %857, align 1
  store %struct.Memory* %loadMem_47d24d, %struct.Memory** %MEMORY
  %loadMem_47d251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 33
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %860 to i64*
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 1
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %RAX.i1093 = bitcast %union.anon* %863 to i64*
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %865 = getelementptr inbounds %struct.GPR, %struct.GPR* %864, i32 0, i32 5
  %866 = getelementptr inbounds %struct.Reg, %struct.Reg* %865, i32 0, i32 0
  %RCX.i1094 = bitcast %union.anon* %866 to i64*
  %867 = load i64, i64* %RAX.i1093
  %868 = load i64, i64* %RCX.i1094
  %869 = load i64, i64* %PC.i1092
  %870 = add i64 %869, 3
  store i64 %870, i64* %PC.i1092
  %871 = add i64 %868, %867
  store i64 %871, i64* %RAX.i1093, align 8
  %872 = icmp ult i64 %871, %867
  %873 = icmp ult i64 %871, %868
  %874 = or i1 %872, %873
  %875 = zext i1 %874 to i8
  %876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %875, i8* %876, align 1
  %877 = trunc i64 %871 to i32
  %878 = and i32 %877, 255
  %879 = call i32 @llvm.ctpop.i32(i32 %878)
  %880 = trunc i32 %879 to i8
  %881 = and i8 %880, 1
  %882 = xor i8 %881, 1
  %883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %882, i8* %883, align 1
  %884 = xor i64 %868, %867
  %885 = xor i64 %884, %871
  %886 = lshr i64 %885, 4
  %887 = trunc i64 %886 to i8
  %888 = and i8 %887, 1
  %889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %888, i8* %889, align 1
  %890 = icmp eq i64 %871, 0
  %891 = zext i1 %890 to i8
  %892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %891, i8* %892, align 1
  %893 = lshr i64 %871, 63
  %894 = trunc i64 %893 to i8
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %894, i8* %895, align 1
  %896 = lshr i64 %867, 63
  %897 = lshr i64 %868, 63
  %898 = xor i64 %893, %896
  %899 = xor i64 %893, %897
  %900 = add i64 %898, %899
  %901 = icmp eq i64 %900, 2
  %902 = zext i1 %901 to i8
  %903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %902, i8* %903, align 1
  store %struct.Memory* %loadMem_47d251, %struct.Memory** %MEMORY
  %loadMem_47d254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %905 = getelementptr inbounds %struct.GPR, %struct.GPR* %904, i32 0, i32 33
  %906 = getelementptr inbounds %struct.Reg, %struct.Reg* %905, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %906 to i64*
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %908 = getelementptr inbounds %struct.GPR, %struct.GPR* %907, i32 0, i32 1
  %909 = getelementptr inbounds %struct.Reg, %struct.Reg* %908, i32 0, i32 0
  %RAX.i1091 = bitcast %union.anon* %909 to i64*
  %910 = load i64, i64* %RAX.i1091
  %911 = load i64, i64* %PC.i1090
  %912 = add i64 %911, 3
  store i64 %912, i64* %PC.i1090
  %913 = inttoptr i64 %910 to i32*
  %914 = load i32, i32* %913
  %915 = sub i32 %914, 44
  %916 = icmp ult i32 %914, 44
  %917 = zext i1 %916 to i8
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %917, i8* %918, align 1
  %919 = and i32 %915, 255
  %920 = call i32 @llvm.ctpop.i32(i32 %919)
  %921 = trunc i32 %920 to i8
  %922 = and i8 %921, 1
  %923 = xor i8 %922, 1
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %923, i8* %924, align 1
  %925 = xor i32 %914, 44
  %926 = xor i32 %925, %915
  %927 = lshr i32 %926, 4
  %928 = trunc i32 %927 to i8
  %929 = and i8 %928, 1
  %930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %929, i8* %930, align 1
  %931 = icmp eq i32 %915, 0
  %932 = zext i1 %931 to i8
  %933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %932, i8* %933, align 1
  %934 = lshr i32 %915, 31
  %935 = trunc i32 %934 to i8
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %935, i8* %936, align 1
  %937 = lshr i32 %914, 31
  %938 = xor i32 %934, %937
  %939 = add i32 %938, %937
  %940 = icmp eq i32 %939, 2
  %941 = zext i1 %940 to i8
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %941, i8* %942, align 1
  store %struct.Memory* %loadMem_47d254, %struct.Memory** %MEMORY
  %loadMem_47d257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %944 = getelementptr inbounds %struct.GPR, %struct.GPR* %943, i32 0, i32 33
  %945 = getelementptr inbounds %struct.Reg, %struct.Reg* %944, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %945 to i64*
  %946 = load i64, i64* %PC.i1089
  %947 = add i64 %946, 36
  %948 = load i64, i64* %PC.i1089
  %949 = add i64 %948, 6
  %950 = load i64, i64* %PC.i1089
  %951 = add i64 %950, 6
  store i64 %951, i64* %PC.i1089
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %953 = load i8, i8* %952, align 1
  store i8 %953, i8* %BRANCH_TAKEN, align 1
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %955 = icmp ne i8 %953, 0
  %956 = select i1 %955, i64 %947, i64 %949
  store i64 %956, i64* %954, align 8
  store %struct.Memory* %loadMem_47d257, %struct.Memory** %MEMORY
  %loadBr_47d257 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d257 = icmp eq i8 %loadBr_47d257, 1
  br i1 %cmpBr_47d257, label %block_.L_47d27b, label %block_47d25d

block_47d25d:                                     ; preds = %block_.L_47d22b
  %loadMem_47d25d = load %struct.Memory*, %struct.Memory** %MEMORY
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %958 = getelementptr inbounds %struct.GPR, %struct.GPR* %957, i32 0, i32 33
  %959 = getelementptr inbounds %struct.Reg, %struct.Reg* %958, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %959 to i64*
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %961 = getelementptr inbounds %struct.GPR, %struct.GPR* %960, i32 0, i32 1
  %962 = getelementptr inbounds %struct.Reg, %struct.Reg* %961, i32 0, i32 0
  %RAX.i1088 = bitcast %union.anon* %962 to i64*
  %963 = load i64, i64* %PC.i1087
  %964 = add i64 %963, 10
  store i64 %964, i64* %PC.i1087
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i1088, align 8
  store %struct.Memory* %loadMem_47d25d, %struct.Memory** %MEMORY
  %loadMem_47d267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %966 = getelementptr inbounds %struct.GPR, %struct.GPR* %965, i32 0, i32 33
  %967 = getelementptr inbounds %struct.Reg, %struct.Reg* %966, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %967 to i64*
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %969 = getelementptr inbounds %struct.GPR, %struct.GPR* %968, i32 0, i32 5
  %970 = getelementptr inbounds %struct.Reg, %struct.Reg* %969, i32 0, i32 0
  %RCX.i1085 = bitcast %union.anon* %970 to i64*
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %972 = getelementptr inbounds %struct.GPR, %struct.GPR* %971, i32 0, i32 15
  %973 = getelementptr inbounds %struct.Reg, %struct.Reg* %972, i32 0, i32 0
  %RBP.i1086 = bitcast %union.anon* %973 to i64*
  %974 = load i64, i64* %RBP.i1086
  %975 = sub i64 %974, 40
  %976 = load i64, i64* %PC.i1084
  %977 = add i64 %976, 4
  store i64 %977, i64* %PC.i1084
  %978 = inttoptr i64 %975 to i32*
  %979 = load i32, i32* %978
  %980 = sext i32 %979 to i64
  store i64 %980, i64* %RCX.i1085, align 8
  store %struct.Memory* %loadMem_47d267, %struct.Memory** %MEMORY
  %loadMem_47d26b = load %struct.Memory*, %struct.Memory** %MEMORY
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %982 = getelementptr inbounds %struct.GPR, %struct.GPR* %981, i32 0, i32 33
  %983 = getelementptr inbounds %struct.Reg, %struct.Reg* %982, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %983 to i64*
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %985 = getelementptr inbounds %struct.GPR, %struct.GPR* %984, i32 0, i32 5
  %986 = getelementptr inbounds %struct.Reg, %struct.Reg* %985, i32 0, i32 0
  %RCX.i1083 = bitcast %union.anon* %986 to i64*
  %987 = load i64, i64* %RCX.i1083
  %988 = load i64, i64* %PC.i1082
  %989 = add i64 %988, 4
  store i64 %989, i64* %PC.i1082
  %990 = sext i64 %987 to i128
  %991 = and i128 %990, -18446744073709551616
  %992 = zext i64 %987 to i128
  %993 = or i128 %991, %992
  %994 = mul i128 12, %993
  %995 = trunc i128 %994 to i64
  store i64 %995, i64* %RCX.i1083, align 8
  %996 = sext i64 %995 to i128
  %997 = icmp ne i128 %996, %994
  %998 = zext i1 %997 to i8
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %998, i8* %999, align 1
  %1000 = trunc i128 %994 to i32
  %1001 = and i32 %1000, 255
  %1002 = call i32 @llvm.ctpop.i32(i32 %1001)
  %1003 = trunc i32 %1002 to i8
  %1004 = and i8 %1003, 1
  %1005 = xor i8 %1004, 1
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1005, i8* %1006, align 1
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1007, align 1
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1008, align 1
  %1009 = lshr i64 %995, 63
  %1010 = trunc i64 %1009 to i8
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1010, i8* %1011, align 1
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %998, i8* %1012, align 1
  store %struct.Memory* %loadMem_47d26b, %struct.Memory** %MEMORY
  %loadMem_47d26f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1014 = getelementptr inbounds %struct.GPR, %struct.GPR* %1013, i32 0, i32 33
  %1015 = getelementptr inbounds %struct.Reg, %struct.Reg* %1014, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %1015 to i64*
  %1016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1017 = getelementptr inbounds %struct.GPR, %struct.GPR* %1016, i32 0, i32 1
  %1018 = getelementptr inbounds %struct.Reg, %struct.Reg* %1017, i32 0, i32 0
  %RAX.i1080 = bitcast %union.anon* %1018 to i64*
  %1019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1020 = getelementptr inbounds %struct.GPR, %struct.GPR* %1019, i32 0, i32 5
  %1021 = getelementptr inbounds %struct.Reg, %struct.Reg* %1020, i32 0, i32 0
  %RCX.i1081 = bitcast %union.anon* %1021 to i64*
  %1022 = load i64, i64* %RAX.i1080
  %1023 = load i64, i64* %RCX.i1081
  %1024 = load i64, i64* %PC.i1079
  %1025 = add i64 %1024, 3
  store i64 %1025, i64* %PC.i1079
  %1026 = add i64 %1023, %1022
  store i64 %1026, i64* %RAX.i1080, align 8
  %1027 = icmp ult i64 %1026, %1022
  %1028 = icmp ult i64 %1026, %1023
  %1029 = or i1 %1027, %1028
  %1030 = zext i1 %1029 to i8
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1030, i8* %1031, align 1
  %1032 = trunc i64 %1026 to i32
  %1033 = and i32 %1032, 255
  %1034 = call i32 @llvm.ctpop.i32(i32 %1033)
  %1035 = trunc i32 %1034 to i8
  %1036 = and i8 %1035, 1
  %1037 = xor i8 %1036, 1
  %1038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1037, i8* %1038, align 1
  %1039 = xor i64 %1023, %1022
  %1040 = xor i64 %1039, %1026
  %1041 = lshr i64 %1040, 4
  %1042 = trunc i64 %1041 to i8
  %1043 = and i8 %1042, 1
  %1044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1043, i8* %1044, align 1
  %1045 = icmp eq i64 %1026, 0
  %1046 = zext i1 %1045 to i8
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1046, i8* %1047, align 1
  %1048 = lshr i64 %1026, 63
  %1049 = trunc i64 %1048 to i8
  %1050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1049, i8* %1050, align 1
  %1051 = lshr i64 %1022, 63
  %1052 = lshr i64 %1023, 63
  %1053 = xor i64 %1048, %1051
  %1054 = xor i64 %1048, %1052
  %1055 = add i64 %1053, %1054
  %1056 = icmp eq i64 %1055, 2
  %1057 = zext i1 %1056 to i8
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1057, i8* %1058, align 1
  store %struct.Memory* %loadMem_47d26f, %struct.Memory** %MEMORY
  %loadMem_47d272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1060 = getelementptr inbounds %struct.GPR, %struct.GPR* %1059, i32 0, i32 33
  %1061 = getelementptr inbounds %struct.Reg, %struct.Reg* %1060, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %1061 to i64*
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1063 = getelementptr inbounds %struct.GPR, %struct.GPR* %1062, i32 0, i32 1
  %1064 = getelementptr inbounds %struct.Reg, %struct.Reg* %1063, i32 0, i32 0
  %RAX.i1078 = bitcast %union.anon* %1064 to i64*
  %1065 = load i64, i64* %RAX.i1078
  %1066 = load i64, i64* %PC.i1077
  %1067 = add i64 %1066, 3
  store i64 %1067, i64* %PC.i1077
  %1068 = inttoptr i64 %1065 to i32*
  %1069 = load i32, i32* %1068
  %1070 = sub i32 %1069, 46
  %1071 = icmp ult i32 %1069, 46
  %1072 = zext i1 %1071 to i8
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1072, i8* %1073, align 1
  %1074 = and i32 %1070, 255
  %1075 = call i32 @llvm.ctpop.i32(i32 %1074)
  %1076 = trunc i32 %1075 to i8
  %1077 = and i8 %1076, 1
  %1078 = xor i8 %1077, 1
  %1079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1078, i8* %1079, align 1
  %1080 = xor i32 %1069, 46
  %1081 = xor i32 %1080, %1070
  %1082 = lshr i32 %1081, 4
  %1083 = trunc i32 %1082 to i8
  %1084 = and i8 %1083, 1
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1084, i8* %1085, align 1
  %1086 = icmp eq i32 %1070, 0
  %1087 = zext i1 %1086 to i8
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1087, i8* %1088, align 1
  %1089 = lshr i32 %1070, 31
  %1090 = trunc i32 %1089 to i8
  %1091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1090, i8* %1091, align 1
  %1092 = lshr i32 %1069, 31
  %1093 = xor i32 %1089, %1092
  %1094 = add i32 %1093, %1092
  %1095 = icmp eq i32 %1094, 2
  %1096 = zext i1 %1095 to i8
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1096, i8* %1097, align 1
  store %struct.Memory* %loadMem_47d272, %struct.Memory** %MEMORY
  %loadMem_47d275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1099 = getelementptr inbounds %struct.GPR, %struct.GPR* %1098, i32 0, i32 33
  %1100 = getelementptr inbounds %struct.Reg, %struct.Reg* %1099, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %1100 to i64*
  %1101 = load i64, i64* %PC.i1076
  %1102 = add i64 %1101, 17
  %1103 = load i64, i64* %PC.i1076
  %1104 = add i64 %1103, 6
  %1105 = load i64, i64* %PC.i1076
  %1106 = add i64 %1105, 6
  store i64 %1106, i64* %PC.i1076
  %1107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1108 = load i8, i8* %1107, align 1
  %1109 = icmp eq i8 %1108, 0
  %1110 = zext i1 %1109 to i8
  store i8 %1110, i8* %BRANCH_TAKEN, align 1
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1112 = select i1 %1109, i64 %1102, i64 %1104
  store i64 %1112, i64* %1111, align 8
  store %struct.Memory* %loadMem_47d275, %struct.Memory** %MEMORY
  %loadBr_47d275 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d275 = icmp eq i8 %loadBr_47d275, 1
  br i1 %cmpBr_47d275, label %block_.L_47d286, label %block_.L_47d27b

block_.L_47d27b:                                  ; preds = %block_47d25d, %block_.L_47d22b
  %loadMem_47d27b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1114 = getelementptr inbounds %struct.GPR, %struct.GPR* %1113, i32 0, i32 33
  %1115 = getelementptr inbounds %struct.Reg, %struct.Reg* %1114, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %1115 to i64*
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1117 = getelementptr inbounds %struct.GPR, %struct.GPR* %1116, i32 0, i32 1
  %1118 = getelementptr inbounds %struct.Reg, %struct.Reg* %1117, i32 0, i32 0
  %RAX.i1074 = bitcast %union.anon* %1118 to i64*
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1120 = getelementptr inbounds %struct.GPR, %struct.GPR* %1119, i32 0, i32 15
  %1121 = getelementptr inbounds %struct.Reg, %struct.Reg* %1120, i32 0, i32 0
  %RBP.i1075 = bitcast %union.anon* %1121 to i64*
  %1122 = load i64, i64* %RBP.i1075
  %1123 = sub i64 %1122, 44
  %1124 = load i64, i64* %PC.i1073
  %1125 = add i64 %1124, 3
  store i64 %1125, i64* %PC.i1073
  %1126 = inttoptr i64 %1123 to i32*
  %1127 = load i32, i32* %1126
  %1128 = zext i32 %1127 to i64
  store i64 %1128, i64* %RAX.i1074, align 8
  store %struct.Memory* %loadMem_47d27b, %struct.Memory** %MEMORY
  %loadMem_47d27e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1130 = getelementptr inbounds %struct.GPR, %struct.GPR* %1129, i32 0, i32 33
  %1131 = getelementptr inbounds %struct.Reg, %struct.Reg* %1130, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %1131 to i64*
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1133 = getelementptr inbounds %struct.GPR, %struct.GPR* %1132, i32 0, i32 1
  %1134 = getelementptr inbounds %struct.Reg, %struct.Reg* %1133, i32 0, i32 0
  %EAX.i1071 = bitcast %union.anon* %1134 to i32*
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 15
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %RBP.i1072 = bitcast %union.anon* %1137 to i64*
  %1138 = load i64, i64* %RBP.i1072
  %1139 = sub i64 %1138, 24
  %1140 = load i32, i32* %EAX.i1071
  %1141 = zext i32 %1140 to i64
  %1142 = load i64, i64* %PC.i1070
  %1143 = add i64 %1142, 3
  store i64 %1143, i64* %PC.i1070
  %1144 = inttoptr i64 %1139 to i32*
  store i32 %1140, i32* %1144
  store %struct.Memory* %loadMem_47d27e, %struct.Memory** %MEMORY
  %loadMem_47d281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1146 = getelementptr inbounds %struct.GPR, %struct.GPR* %1145, i32 0, i32 33
  %1147 = getelementptr inbounds %struct.Reg, %struct.Reg* %1146, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %1147 to i64*
  %1148 = load i64, i64* %PC.i1069
  %1149 = add i64 %1148, 509
  %1150 = load i64, i64* %PC.i1069
  %1151 = add i64 %1150, 5
  store i64 %1151, i64* %PC.i1069
  %1152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1149, i64* %1152, align 8
  store %struct.Memory* %loadMem_47d281, %struct.Memory** %MEMORY
  br label %block_.L_47d47e

block_.L_47d286:                                  ; preds = %block_47d25d
  %loadMem_47d286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1154 = getelementptr inbounds %struct.GPR, %struct.GPR* %1153, i32 0, i32 33
  %1155 = getelementptr inbounds %struct.Reg, %struct.Reg* %1154, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %1155 to i64*
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1157 = getelementptr inbounds %struct.GPR, %struct.GPR* %1156, i32 0, i32 1
  %1158 = getelementptr inbounds %struct.Reg, %struct.Reg* %1157, i32 0, i32 0
  %RAX.i1068 = bitcast %union.anon* %1158 to i64*
  %1159 = load i64, i64* %PC.i1067
  %1160 = add i64 %1159, 10
  store i64 %1160, i64* %PC.i1067
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i1068, align 8
  store %struct.Memory* %loadMem_47d286, %struct.Memory** %MEMORY
  %loadMem_47d290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1162 = getelementptr inbounds %struct.GPR, %struct.GPR* %1161, i32 0, i32 33
  %1163 = getelementptr inbounds %struct.Reg, %struct.Reg* %1162, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %1163 to i64*
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1165 = getelementptr inbounds %struct.GPR, %struct.GPR* %1164, i32 0, i32 5
  %1166 = getelementptr inbounds %struct.Reg, %struct.Reg* %1165, i32 0, i32 0
  %RCX.i1065 = bitcast %union.anon* %1166 to i64*
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 15
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %RBP.i1066 = bitcast %union.anon* %1169 to i64*
  %1170 = load i64, i64* %RBP.i1066
  %1171 = sub i64 %1170, 40
  %1172 = load i64, i64* %PC.i1064
  %1173 = add i64 %1172, 4
  store i64 %1173, i64* %PC.i1064
  %1174 = inttoptr i64 %1171 to i32*
  %1175 = load i32, i32* %1174
  %1176 = sext i32 %1175 to i64
  store i64 %1176, i64* %RCX.i1065, align 8
  store %struct.Memory* %loadMem_47d290, %struct.Memory** %MEMORY
  %loadMem_47d294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1178 = getelementptr inbounds %struct.GPR, %struct.GPR* %1177, i32 0, i32 33
  %1179 = getelementptr inbounds %struct.Reg, %struct.Reg* %1178, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %1179 to i64*
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1181 = getelementptr inbounds %struct.GPR, %struct.GPR* %1180, i32 0, i32 5
  %1182 = getelementptr inbounds %struct.Reg, %struct.Reg* %1181, i32 0, i32 0
  %RCX.i1063 = bitcast %union.anon* %1182 to i64*
  %1183 = load i64, i64* %RCX.i1063
  %1184 = load i64, i64* %PC.i1062
  %1185 = add i64 %1184, 4
  store i64 %1185, i64* %PC.i1062
  %1186 = sext i64 %1183 to i128
  %1187 = and i128 %1186, -18446744073709551616
  %1188 = zext i64 %1183 to i128
  %1189 = or i128 %1187, %1188
  %1190 = mul i128 12, %1189
  %1191 = trunc i128 %1190 to i64
  store i64 %1191, i64* %RCX.i1063, align 8
  %1192 = sext i64 %1191 to i128
  %1193 = icmp ne i128 %1192, %1190
  %1194 = zext i1 %1193 to i8
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1194, i8* %1195, align 1
  %1196 = trunc i128 %1190 to i32
  %1197 = and i32 %1196, 255
  %1198 = call i32 @llvm.ctpop.i32(i32 %1197)
  %1199 = trunc i32 %1198 to i8
  %1200 = and i8 %1199, 1
  %1201 = xor i8 %1200, 1
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1201, i8* %1202, align 1
  %1203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1203, align 1
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1204, align 1
  %1205 = lshr i64 %1191, 63
  %1206 = trunc i64 %1205 to i8
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1206, i8* %1207, align 1
  %1208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1194, i8* %1208, align 1
  store %struct.Memory* %loadMem_47d294, %struct.Memory** %MEMORY
  %loadMem_47d298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1210 = getelementptr inbounds %struct.GPR, %struct.GPR* %1209, i32 0, i32 33
  %1211 = getelementptr inbounds %struct.Reg, %struct.Reg* %1210, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %1211 to i64*
  %1212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1213 = getelementptr inbounds %struct.GPR, %struct.GPR* %1212, i32 0, i32 1
  %1214 = getelementptr inbounds %struct.Reg, %struct.Reg* %1213, i32 0, i32 0
  %RAX.i1060 = bitcast %union.anon* %1214 to i64*
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1216 = getelementptr inbounds %struct.GPR, %struct.GPR* %1215, i32 0, i32 5
  %1217 = getelementptr inbounds %struct.Reg, %struct.Reg* %1216, i32 0, i32 0
  %RCX.i1061 = bitcast %union.anon* %1217 to i64*
  %1218 = load i64, i64* %RAX.i1060
  %1219 = load i64, i64* %RCX.i1061
  %1220 = load i64, i64* %PC.i1059
  %1221 = add i64 %1220, 3
  store i64 %1221, i64* %PC.i1059
  %1222 = add i64 %1219, %1218
  store i64 %1222, i64* %RAX.i1060, align 8
  %1223 = icmp ult i64 %1222, %1218
  %1224 = icmp ult i64 %1222, %1219
  %1225 = or i1 %1223, %1224
  %1226 = zext i1 %1225 to i8
  %1227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1226, i8* %1227, align 1
  %1228 = trunc i64 %1222 to i32
  %1229 = and i32 %1228, 255
  %1230 = call i32 @llvm.ctpop.i32(i32 %1229)
  %1231 = trunc i32 %1230 to i8
  %1232 = and i8 %1231, 1
  %1233 = xor i8 %1232, 1
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1233, i8* %1234, align 1
  %1235 = xor i64 %1219, %1218
  %1236 = xor i64 %1235, %1222
  %1237 = lshr i64 %1236, 4
  %1238 = trunc i64 %1237 to i8
  %1239 = and i8 %1238, 1
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1239, i8* %1240, align 1
  %1241 = icmp eq i64 %1222, 0
  %1242 = zext i1 %1241 to i8
  %1243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1242, i8* %1243, align 1
  %1244 = lshr i64 %1222, 63
  %1245 = trunc i64 %1244 to i8
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1245, i8* %1246, align 1
  %1247 = lshr i64 %1218, 63
  %1248 = lshr i64 %1219, 63
  %1249 = xor i64 %1244, %1247
  %1250 = xor i64 %1244, %1248
  %1251 = add i64 %1249, %1250
  %1252 = icmp eq i64 %1251, 2
  %1253 = zext i1 %1252 to i8
  %1254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1253, i8* %1254, align 1
  store %struct.Memory* %loadMem_47d298, %struct.Memory** %MEMORY
  %loadMem_47d29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 33
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %1257 to i64*
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1259 = getelementptr inbounds %struct.GPR, %struct.GPR* %1258, i32 0, i32 1
  %1260 = getelementptr inbounds %struct.Reg, %struct.Reg* %1259, i32 0, i32 0
  %RAX.i1058 = bitcast %union.anon* %1260 to i64*
  %1261 = load i64, i64* %RAX.i1058
  %1262 = load i64, i64* %PC.i1057
  %1263 = add i64 %1262, 3
  store i64 %1263, i64* %PC.i1057
  %1264 = inttoptr i64 %1261 to i32*
  %1265 = load i32, i32* %1264
  %1266 = sub i32 %1265, 2
  %1267 = icmp ult i32 %1265, 2
  %1268 = zext i1 %1267 to i8
  %1269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1268, i8* %1269, align 1
  %1270 = and i32 %1266, 255
  %1271 = call i32 @llvm.ctpop.i32(i32 %1270)
  %1272 = trunc i32 %1271 to i8
  %1273 = and i8 %1272, 1
  %1274 = xor i8 %1273, 1
  %1275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1274, i8* %1275, align 1
  %1276 = xor i32 %1265, 2
  %1277 = xor i32 %1276, %1266
  %1278 = lshr i32 %1277, 4
  %1279 = trunc i32 %1278 to i8
  %1280 = and i8 %1279, 1
  %1281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1280, i8* %1281, align 1
  %1282 = icmp eq i32 %1266, 0
  %1283 = zext i1 %1282 to i8
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1283, i8* %1284, align 1
  %1285 = lshr i32 %1266, 31
  %1286 = trunc i32 %1285 to i8
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1286, i8* %1287, align 1
  %1288 = lshr i32 %1265, 31
  %1289 = xor i32 %1285, %1288
  %1290 = add i32 %1289, %1288
  %1291 = icmp eq i32 %1290, 2
  %1292 = zext i1 %1291 to i8
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1292, i8* %1293, align 1
  store %struct.Memory* %loadMem_47d29b, %struct.Memory** %MEMORY
  %loadMem_47d29e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1295 = getelementptr inbounds %struct.GPR, %struct.GPR* %1294, i32 0, i32 33
  %1296 = getelementptr inbounds %struct.Reg, %struct.Reg* %1295, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %1296 to i64*
  %1297 = load i64, i64* %PC.i1056
  %1298 = add i64 %1297, 156
  %1299 = load i64, i64* %PC.i1056
  %1300 = add i64 %1299, 6
  %1301 = load i64, i64* %PC.i1056
  %1302 = add i64 %1301, 6
  store i64 %1302, i64* %PC.i1056
  %1303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1304 = load i8, i8* %1303, align 1
  store i8 %1304, i8* %BRANCH_TAKEN, align 1
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1306 = icmp ne i8 %1304, 0
  %1307 = select i1 %1306, i64 %1298, i64 %1300
  store i64 %1307, i64* %1305, align 8
  store %struct.Memory* %loadMem_47d29e, %struct.Memory** %MEMORY
  %loadBr_47d29e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d29e = icmp eq i8 %loadBr_47d29e, 1
  br i1 %cmpBr_47d29e, label %block_.L_47d33a, label %block_47d2a4

block_47d2a4:                                     ; preds = %block_.L_47d286
  %loadMem_47d2a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1309 = getelementptr inbounds %struct.GPR, %struct.GPR* %1308, i32 0, i32 33
  %1310 = getelementptr inbounds %struct.Reg, %struct.Reg* %1309, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %1310 to i64*
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1312 = getelementptr inbounds %struct.GPR, %struct.GPR* %1311, i32 0, i32 1
  %1313 = getelementptr inbounds %struct.Reg, %struct.Reg* %1312, i32 0, i32 0
  %RAX.i1055 = bitcast %union.anon* %1313 to i64*
  %1314 = load i64, i64* %PC.i1054
  %1315 = add i64 %1314, 10
  store i64 %1315, i64* %PC.i1054
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i1055, align 8
  store %struct.Memory* %loadMem_47d2a4, %struct.Memory** %MEMORY
  %loadMem_47d2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1317 = getelementptr inbounds %struct.GPR, %struct.GPR* %1316, i32 0, i32 33
  %1318 = getelementptr inbounds %struct.Reg, %struct.Reg* %1317, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %1318 to i64*
  %1319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1320 = getelementptr inbounds %struct.GPR, %struct.GPR* %1319, i32 0, i32 5
  %1321 = getelementptr inbounds %struct.Reg, %struct.Reg* %1320, i32 0, i32 0
  %RCX.i1052 = bitcast %union.anon* %1321 to i64*
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1323 = getelementptr inbounds %struct.GPR, %struct.GPR* %1322, i32 0, i32 15
  %1324 = getelementptr inbounds %struct.Reg, %struct.Reg* %1323, i32 0, i32 0
  %RBP.i1053 = bitcast %union.anon* %1324 to i64*
  %1325 = load i64, i64* %RBP.i1053
  %1326 = sub i64 %1325, 40
  %1327 = load i64, i64* %PC.i1051
  %1328 = add i64 %1327, 4
  store i64 %1328, i64* %PC.i1051
  %1329 = inttoptr i64 %1326 to i32*
  %1330 = load i32, i32* %1329
  %1331 = sext i32 %1330 to i64
  store i64 %1331, i64* %RCX.i1052, align 8
  store %struct.Memory* %loadMem_47d2ae, %struct.Memory** %MEMORY
  %loadMem_47d2b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 33
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %1334 to i64*
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 5
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %RCX.i1050 = bitcast %union.anon* %1337 to i64*
  %1338 = load i64, i64* %RCX.i1050
  %1339 = load i64, i64* %PC.i1049
  %1340 = add i64 %1339, 4
  store i64 %1340, i64* %PC.i1049
  %1341 = sext i64 %1338 to i128
  %1342 = and i128 %1341, -18446744073709551616
  %1343 = zext i64 %1338 to i128
  %1344 = or i128 %1342, %1343
  %1345 = mul i128 12, %1344
  %1346 = trunc i128 %1345 to i64
  store i64 %1346, i64* %RCX.i1050, align 8
  %1347 = sext i64 %1346 to i128
  %1348 = icmp ne i128 %1347, %1345
  %1349 = zext i1 %1348 to i8
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1349, i8* %1350, align 1
  %1351 = trunc i128 %1345 to i32
  %1352 = and i32 %1351, 255
  %1353 = call i32 @llvm.ctpop.i32(i32 %1352)
  %1354 = trunc i32 %1353 to i8
  %1355 = and i8 %1354, 1
  %1356 = xor i8 %1355, 1
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1356, i8* %1357, align 1
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1358, align 1
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1359, align 1
  %1360 = lshr i64 %1346, 63
  %1361 = trunc i64 %1360 to i8
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1361, i8* %1362, align 1
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1349, i8* %1363, align 1
  store %struct.Memory* %loadMem_47d2b2, %struct.Memory** %MEMORY
  %loadMem_47d2b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1365 = getelementptr inbounds %struct.GPR, %struct.GPR* %1364, i32 0, i32 33
  %1366 = getelementptr inbounds %struct.Reg, %struct.Reg* %1365, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %1366 to i64*
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1368 = getelementptr inbounds %struct.GPR, %struct.GPR* %1367, i32 0, i32 1
  %1369 = getelementptr inbounds %struct.Reg, %struct.Reg* %1368, i32 0, i32 0
  %RAX.i1047 = bitcast %union.anon* %1369 to i64*
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1371 = getelementptr inbounds %struct.GPR, %struct.GPR* %1370, i32 0, i32 5
  %1372 = getelementptr inbounds %struct.Reg, %struct.Reg* %1371, i32 0, i32 0
  %RCX.i1048 = bitcast %union.anon* %1372 to i64*
  %1373 = load i64, i64* %RAX.i1047
  %1374 = load i64, i64* %RCX.i1048
  %1375 = load i64, i64* %PC.i1046
  %1376 = add i64 %1375, 3
  store i64 %1376, i64* %PC.i1046
  %1377 = add i64 %1374, %1373
  store i64 %1377, i64* %RAX.i1047, align 8
  %1378 = icmp ult i64 %1377, %1373
  %1379 = icmp ult i64 %1377, %1374
  %1380 = or i1 %1378, %1379
  %1381 = zext i1 %1380 to i8
  %1382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1381, i8* %1382, align 1
  %1383 = trunc i64 %1377 to i32
  %1384 = and i32 %1383, 255
  %1385 = call i32 @llvm.ctpop.i32(i32 %1384)
  %1386 = trunc i32 %1385 to i8
  %1387 = and i8 %1386, 1
  %1388 = xor i8 %1387, 1
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1388, i8* %1389, align 1
  %1390 = xor i64 %1374, %1373
  %1391 = xor i64 %1390, %1377
  %1392 = lshr i64 %1391, 4
  %1393 = trunc i64 %1392 to i8
  %1394 = and i8 %1393, 1
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1394, i8* %1395, align 1
  %1396 = icmp eq i64 %1377, 0
  %1397 = zext i1 %1396 to i8
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1397, i8* %1398, align 1
  %1399 = lshr i64 %1377, 63
  %1400 = trunc i64 %1399 to i8
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1400, i8* %1401, align 1
  %1402 = lshr i64 %1373, 63
  %1403 = lshr i64 %1374, 63
  %1404 = xor i64 %1399, %1402
  %1405 = xor i64 %1399, %1403
  %1406 = add i64 %1404, %1405
  %1407 = icmp eq i64 %1406, 2
  %1408 = zext i1 %1407 to i8
  %1409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1408, i8* %1409, align 1
  store %struct.Memory* %loadMem_47d2b6, %struct.Memory** %MEMORY
  %loadMem_47d2b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1411 = getelementptr inbounds %struct.GPR, %struct.GPR* %1410, i32 0, i32 33
  %1412 = getelementptr inbounds %struct.Reg, %struct.Reg* %1411, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %1412 to i64*
  %1413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1414 = getelementptr inbounds %struct.GPR, %struct.GPR* %1413, i32 0, i32 1
  %1415 = getelementptr inbounds %struct.Reg, %struct.Reg* %1414, i32 0, i32 0
  %RAX.i1045 = bitcast %union.anon* %1415 to i64*
  %1416 = load i64, i64* %RAX.i1045
  %1417 = load i64, i64* %PC.i1044
  %1418 = add i64 %1417, 3
  store i64 %1418, i64* %PC.i1044
  %1419 = inttoptr i64 %1416 to i32*
  %1420 = load i32, i32* %1419
  %1421 = sub i32 %1420, 4
  %1422 = icmp ult i32 %1420, 4
  %1423 = zext i1 %1422 to i8
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1423, i8* %1424, align 1
  %1425 = and i32 %1421, 255
  %1426 = call i32 @llvm.ctpop.i32(i32 %1425)
  %1427 = trunc i32 %1426 to i8
  %1428 = and i8 %1427, 1
  %1429 = xor i8 %1428, 1
  %1430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1429, i8* %1430, align 1
  %1431 = xor i32 %1420, 4
  %1432 = xor i32 %1431, %1421
  %1433 = lshr i32 %1432, 4
  %1434 = trunc i32 %1433 to i8
  %1435 = and i8 %1434, 1
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1435, i8* %1436, align 1
  %1437 = icmp eq i32 %1421, 0
  %1438 = zext i1 %1437 to i8
  %1439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1438, i8* %1439, align 1
  %1440 = lshr i32 %1421, 31
  %1441 = trunc i32 %1440 to i8
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1441, i8* %1442, align 1
  %1443 = lshr i32 %1420, 31
  %1444 = xor i32 %1440, %1443
  %1445 = add i32 %1444, %1443
  %1446 = icmp eq i32 %1445, 2
  %1447 = zext i1 %1446 to i8
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1447, i8* %1448, align 1
  store %struct.Memory* %loadMem_47d2b9, %struct.Memory** %MEMORY
  %loadMem_47d2bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1450 = getelementptr inbounds %struct.GPR, %struct.GPR* %1449, i32 0, i32 33
  %1451 = getelementptr inbounds %struct.Reg, %struct.Reg* %1450, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %1451 to i64*
  %1452 = load i64, i64* %PC.i1043
  %1453 = add i64 %1452, 126
  %1454 = load i64, i64* %PC.i1043
  %1455 = add i64 %1454, 6
  %1456 = load i64, i64* %PC.i1043
  %1457 = add i64 %1456, 6
  store i64 %1457, i64* %PC.i1043
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1459 = load i8, i8* %1458, align 1
  store i8 %1459, i8* %BRANCH_TAKEN, align 1
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1461 = icmp ne i8 %1459, 0
  %1462 = select i1 %1461, i64 %1453, i64 %1455
  store i64 %1462, i64* %1460, align 8
  store %struct.Memory* %loadMem_47d2bc, %struct.Memory** %MEMORY
  %loadBr_47d2bc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d2bc = icmp eq i8 %loadBr_47d2bc, 1
  br i1 %cmpBr_47d2bc, label %block_.L_47d33a, label %block_47d2c2

block_47d2c2:                                     ; preds = %block_47d2a4
  %loadMem_47d2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1464 = getelementptr inbounds %struct.GPR, %struct.GPR* %1463, i32 0, i32 33
  %1465 = getelementptr inbounds %struct.Reg, %struct.Reg* %1464, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %1465 to i64*
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1467 = getelementptr inbounds %struct.GPR, %struct.GPR* %1466, i32 0, i32 1
  %1468 = getelementptr inbounds %struct.Reg, %struct.Reg* %1467, i32 0, i32 0
  %RAX.i1042 = bitcast %union.anon* %1468 to i64*
  %1469 = load i64, i64* %PC.i1041
  %1470 = add i64 %1469, 10
  store i64 %1470, i64* %PC.i1041
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i1042, align 8
  store %struct.Memory* %loadMem_47d2c2, %struct.Memory** %MEMORY
  %loadMem_47d2cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1472 = getelementptr inbounds %struct.GPR, %struct.GPR* %1471, i32 0, i32 33
  %1473 = getelementptr inbounds %struct.Reg, %struct.Reg* %1472, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %1473 to i64*
  %1474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1475 = getelementptr inbounds %struct.GPR, %struct.GPR* %1474, i32 0, i32 5
  %1476 = getelementptr inbounds %struct.Reg, %struct.Reg* %1475, i32 0, i32 0
  %RCX.i1039 = bitcast %union.anon* %1476 to i64*
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1478 = getelementptr inbounds %struct.GPR, %struct.GPR* %1477, i32 0, i32 15
  %1479 = getelementptr inbounds %struct.Reg, %struct.Reg* %1478, i32 0, i32 0
  %RBP.i1040 = bitcast %union.anon* %1479 to i64*
  %1480 = load i64, i64* %RBP.i1040
  %1481 = sub i64 %1480, 40
  %1482 = load i64, i64* %PC.i1038
  %1483 = add i64 %1482, 4
  store i64 %1483, i64* %PC.i1038
  %1484 = inttoptr i64 %1481 to i32*
  %1485 = load i32, i32* %1484
  %1486 = sext i32 %1485 to i64
  store i64 %1486, i64* %RCX.i1039, align 8
  store %struct.Memory* %loadMem_47d2cc, %struct.Memory** %MEMORY
  %loadMem_47d2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1488 = getelementptr inbounds %struct.GPR, %struct.GPR* %1487, i32 0, i32 33
  %1489 = getelementptr inbounds %struct.Reg, %struct.Reg* %1488, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %1489 to i64*
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1491 = getelementptr inbounds %struct.GPR, %struct.GPR* %1490, i32 0, i32 5
  %1492 = getelementptr inbounds %struct.Reg, %struct.Reg* %1491, i32 0, i32 0
  %RCX.i1037 = bitcast %union.anon* %1492 to i64*
  %1493 = load i64, i64* %RCX.i1037
  %1494 = load i64, i64* %PC.i1036
  %1495 = add i64 %1494, 4
  store i64 %1495, i64* %PC.i1036
  %1496 = sext i64 %1493 to i128
  %1497 = and i128 %1496, -18446744073709551616
  %1498 = zext i64 %1493 to i128
  %1499 = or i128 %1497, %1498
  %1500 = mul i128 12, %1499
  %1501 = trunc i128 %1500 to i64
  store i64 %1501, i64* %RCX.i1037, align 8
  %1502 = sext i64 %1501 to i128
  %1503 = icmp ne i128 %1502, %1500
  %1504 = zext i1 %1503 to i8
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1504, i8* %1505, align 1
  %1506 = trunc i128 %1500 to i32
  %1507 = and i32 %1506, 255
  %1508 = call i32 @llvm.ctpop.i32(i32 %1507)
  %1509 = trunc i32 %1508 to i8
  %1510 = and i8 %1509, 1
  %1511 = xor i8 %1510, 1
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1511, i8* %1512, align 1
  %1513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1513, align 1
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1514, align 1
  %1515 = lshr i64 %1501, 63
  %1516 = trunc i64 %1515 to i8
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1516, i8* %1517, align 1
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1504, i8* %1518, align 1
  store %struct.Memory* %loadMem_47d2d0, %struct.Memory** %MEMORY
  %loadMem_47d2d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1520 = getelementptr inbounds %struct.GPR, %struct.GPR* %1519, i32 0, i32 33
  %1521 = getelementptr inbounds %struct.Reg, %struct.Reg* %1520, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %1521 to i64*
  %1522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1523 = getelementptr inbounds %struct.GPR, %struct.GPR* %1522, i32 0, i32 1
  %1524 = getelementptr inbounds %struct.Reg, %struct.Reg* %1523, i32 0, i32 0
  %RAX.i1034 = bitcast %union.anon* %1524 to i64*
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1526 = getelementptr inbounds %struct.GPR, %struct.GPR* %1525, i32 0, i32 5
  %1527 = getelementptr inbounds %struct.Reg, %struct.Reg* %1526, i32 0, i32 0
  %RCX.i1035 = bitcast %union.anon* %1527 to i64*
  %1528 = load i64, i64* %RAX.i1034
  %1529 = load i64, i64* %RCX.i1035
  %1530 = load i64, i64* %PC.i1033
  %1531 = add i64 %1530, 3
  store i64 %1531, i64* %PC.i1033
  %1532 = add i64 %1529, %1528
  store i64 %1532, i64* %RAX.i1034, align 8
  %1533 = icmp ult i64 %1532, %1528
  %1534 = icmp ult i64 %1532, %1529
  %1535 = or i1 %1533, %1534
  %1536 = zext i1 %1535 to i8
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1536, i8* %1537, align 1
  %1538 = trunc i64 %1532 to i32
  %1539 = and i32 %1538, 255
  %1540 = call i32 @llvm.ctpop.i32(i32 %1539)
  %1541 = trunc i32 %1540 to i8
  %1542 = and i8 %1541, 1
  %1543 = xor i8 %1542, 1
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1543, i8* %1544, align 1
  %1545 = xor i64 %1529, %1528
  %1546 = xor i64 %1545, %1532
  %1547 = lshr i64 %1546, 4
  %1548 = trunc i64 %1547 to i8
  %1549 = and i8 %1548, 1
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1549, i8* %1550, align 1
  %1551 = icmp eq i64 %1532, 0
  %1552 = zext i1 %1551 to i8
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1552, i8* %1553, align 1
  %1554 = lshr i64 %1532, 63
  %1555 = trunc i64 %1554 to i8
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1555, i8* %1556, align 1
  %1557 = lshr i64 %1528, 63
  %1558 = lshr i64 %1529, 63
  %1559 = xor i64 %1554, %1557
  %1560 = xor i64 %1554, %1558
  %1561 = add i64 %1559, %1560
  %1562 = icmp eq i64 %1561, 2
  %1563 = zext i1 %1562 to i8
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1563, i8* %1564, align 1
  store %struct.Memory* %loadMem_47d2d4, %struct.Memory** %MEMORY
  %loadMem_47d2d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1566 = getelementptr inbounds %struct.GPR, %struct.GPR* %1565, i32 0, i32 33
  %1567 = getelementptr inbounds %struct.Reg, %struct.Reg* %1566, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %1567 to i64*
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1569 = getelementptr inbounds %struct.GPR, %struct.GPR* %1568, i32 0, i32 1
  %1570 = getelementptr inbounds %struct.Reg, %struct.Reg* %1569, i32 0, i32 0
  %RAX.i1032 = bitcast %union.anon* %1570 to i64*
  %1571 = load i64, i64* %RAX.i1032
  %1572 = load i64, i64* %PC.i1031
  %1573 = add i64 %1572, 3
  store i64 %1573, i64* %PC.i1031
  %1574 = inttoptr i64 %1571 to i32*
  %1575 = load i32, i32* %1574
  %1576 = sub i32 %1575, 6
  %1577 = icmp ult i32 %1575, 6
  %1578 = zext i1 %1577 to i8
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1578, i8* %1579, align 1
  %1580 = and i32 %1576, 255
  %1581 = call i32 @llvm.ctpop.i32(i32 %1580)
  %1582 = trunc i32 %1581 to i8
  %1583 = and i8 %1582, 1
  %1584 = xor i8 %1583, 1
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1584, i8* %1585, align 1
  %1586 = xor i32 %1575, 6
  %1587 = xor i32 %1586, %1576
  %1588 = lshr i32 %1587, 4
  %1589 = trunc i32 %1588 to i8
  %1590 = and i8 %1589, 1
  %1591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1590, i8* %1591, align 1
  %1592 = icmp eq i32 %1576, 0
  %1593 = zext i1 %1592 to i8
  %1594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1593, i8* %1594, align 1
  %1595 = lshr i32 %1576, 31
  %1596 = trunc i32 %1595 to i8
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1596, i8* %1597, align 1
  %1598 = lshr i32 %1575, 31
  %1599 = xor i32 %1595, %1598
  %1600 = add i32 %1599, %1598
  %1601 = icmp eq i32 %1600, 2
  %1602 = zext i1 %1601 to i8
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1602, i8* %1603, align 1
  store %struct.Memory* %loadMem_47d2d7, %struct.Memory** %MEMORY
  %loadMem_47d2da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1605 = getelementptr inbounds %struct.GPR, %struct.GPR* %1604, i32 0, i32 33
  %1606 = getelementptr inbounds %struct.Reg, %struct.Reg* %1605, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %1606 to i64*
  %1607 = load i64, i64* %PC.i1030
  %1608 = add i64 %1607, 96
  %1609 = load i64, i64* %PC.i1030
  %1610 = add i64 %1609, 6
  %1611 = load i64, i64* %PC.i1030
  %1612 = add i64 %1611, 6
  store i64 %1612, i64* %PC.i1030
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1614 = load i8, i8* %1613, align 1
  store i8 %1614, i8* %BRANCH_TAKEN, align 1
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1616 = icmp ne i8 %1614, 0
  %1617 = select i1 %1616, i64 %1608, i64 %1610
  store i64 %1617, i64* %1615, align 8
  store %struct.Memory* %loadMem_47d2da, %struct.Memory** %MEMORY
  %loadBr_47d2da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d2da = icmp eq i8 %loadBr_47d2da, 1
  br i1 %cmpBr_47d2da, label %block_.L_47d33a, label %block_47d2e0

block_47d2e0:                                     ; preds = %block_47d2c2
  %loadMem_47d2e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1619 = getelementptr inbounds %struct.GPR, %struct.GPR* %1618, i32 0, i32 33
  %1620 = getelementptr inbounds %struct.Reg, %struct.Reg* %1619, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %1620 to i64*
  %1621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1622 = getelementptr inbounds %struct.GPR, %struct.GPR* %1621, i32 0, i32 1
  %1623 = getelementptr inbounds %struct.Reg, %struct.Reg* %1622, i32 0, i32 0
  %RAX.i1029 = bitcast %union.anon* %1623 to i64*
  %1624 = load i64, i64* %PC.i1028
  %1625 = add i64 %1624, 10
  store i64 %1625, i64* %PC.i1028
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i1029, align 8
  store %struct.Memory* %loadMem_47d2e0, %struct.Memory** %MEMORY
  %loadMem_47d2ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %1626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1627 = getelementptr inbounds %struct.GPR, %struct.GPR* %1626, i32 0, i32 33
  %1628 = getelementptr inbounds %struct.Reg, %struct.Reg* %1627, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %1628 to i64*
  %1629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1630 = getelementptr inbounds %struct.GPR, %struct.GPR* %1629, i32 0, i32 5
  %1631 = getelementptr inbounds %struct.Reg, %struct.Reg* %1630, i32 0, i32 0
  %RCX.i1026 = bitcast %union.anon* %1631 to i64*
  %1632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1633 = getelementptr inbounds %struct.GPR, %struct.GPR* %1632, i32 0, i32 15
  %1634 = getelementptr inbounds %struct.Reg, %struct.Reg* %1633, i32 0, i32 0
  %RBP.i1027 = bitcast %union.anon* %1634 to i64*
  %1635 = load i64, i64* %RBP.i1027
  %1636 = sub i64 %1635, 40
  %1637 = load i64, i64* %PC.i1025
  %1638 = add i64 %1637, 4
  store i64 %1638, i64* %PC.i1025
  %1639 = inttoptr i64 %1636 to i32*
  %1640 = load i32, i32* %1639
  %1641 = sext i32 %1640 to i64
  store i64 %1641, i64* %RCX.i1026, align 8
  store %struct.Memory* %loadMem_47d2ea, %struct.Memory** %MEMORY
  %loadMem_47d2ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %1642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1643 = getelementptr inbounds %struct.GPR, %struct.GPR* %1642, i32 0, i32 33
  %1644 = getelementptr inbounds %struct.Reg, %struct.Reg* %1643, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %1644 to i64*
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1646 = getelementptr inbounds %struct.GPR, %struct.GPR* %1645, i32 0, i32 5
  %1647 = getelementptr inbounds %struct.Reg, %struct.Reg* %1646, i32 0, i32 0
  %RCX.i1024 = bitcast %union.anon* %1647 to i64*
  %1648 = load i64, i64* %RCX.i1024
  %1649 = load i64, i64* %PC.i1023
  %1650 = add i64 %1649, 4
  store i64 %1650, i64* %PC.i1023
  %1651 = sext i64 %1648 to i128
  %1652 = and i128 %1651, -18446744073709551616
  %1653 = zext i64 %1648 to i128
  %1654 = or i128 %1652, %1653
  %1655 = mul i128 12, %1654
  %1656 = trunc i128 %1655 to i64
  store i64 %1656, i64* %RCX.i1024, align 8
  %1657 = sext i64 %1656 to i128
  %1658 = icmp ne i128 %1657, %1655
  %1659 = zext i1 %1658 to i8
  %1660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1659, i8* %1660, align 1
  %1661 = trunc i128 %1655 to i32
  %1662 = and i32 %1661, 255
  %1663 = call i32 @llvm.ctpop.i32(i32 %1662)
  %1664 = trunc i32 %1663 to i8
  %1665 = and i8 %1664, 1
  %1666 = xor i8 %1665, 1
  %1667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1666, i8* %1667, align 1
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1668, align 1
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1669, align 1
  %1670 = lshr i64 %1656, 63
  %1671 = trunc i64 %1670 to i8
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1671, i8* %1672, align 1
  %1673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1659, i8* %1673, align 1
  store %struct.Memory* %loadMem_47d2ee, %struct.Memory** %MEMORY
  %loadMem_47d2f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1675 = getelementptr inbounds %struct.GPR, %struct.GPR* %1674, i32 0, i32 33
  %1676 = getelementptr inbounds %struct.Reg, %struct.Reg* %1675, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %1676 to i64*
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1678 = getelementptr inbounds %struct.GPR, %struct.GPR* %1677, i32 0, i32 1
  %1679 = getelementptr inbounds %struct.Reg, %struct.Reg* %1678, i32 0, i32 0
  %RAX.i1021 = bitcast %union.anon* %1679 to i64*
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1681 = getelementptr inbounds %struct.GPR, %struct.GPR* %1680, i32 0, i32 5
  %1682 = getelementptr inbounds %struct.Reg, %struct.Reg* %1681, i32 0, i32 0
  %RCX.i1022 = bitcast %union.anon* %1682 to i64*
  %1683 = load i64, i64* %RAX.i1021
  %1684 = load i64, i64* %RCX.i1022
  %1685 = load i64, i64* %PC.i1020
  %1686 = add i64 %1685, 3
  store i64 %1686, i64* %PC.i1020
  %1687 = add i64 %1684, %1683
  store i64 %1687, i64* %RAX.i1021, align 8
  %1688 = icmp ult i64 %1687, %1683
  %1689 = icmp ult i64 %1687, %1684
  %1690 = or i1 %1688, %1689
  %1691 = zext i1 %1690 to i8
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1691, i8* %1692, align 1
  %1693 = trunc i64 %1687 to i32
  %1694 = and i32 %1693, 255
  %1695 = call i32 @llvm.ctpop.i32(i32 %1694)
  %1696 = trunc i32 %1695 to i8
  %1697 = and i8 %1696, 1
  %1698 = xor i8 %1697, 1
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1698, i8* %1699, align 1
  %1700 = xor i64 %1684, %1683
  %1701 = xor i64 %1700, %1687
  %1702 = lshr i64 %1701, 4
  %1703 = trunc i64 %1702 to i8
  %1704 = and i8 %1703, 1
  %1705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1704, i8* %1705, align 1
  %1706 = icmp eq i64 %1687, 0
  %1707 = zext i1 %1706 to i8
  %1708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1707, i8* %1708, align 1
  %1709 = lshr i64 %1687, 63
  %1710 = trunc i64 %1709 to i8
  %1711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1710, i8* %1711, align 1
  %1712 = lshr i64 %1683, 63
  %1713 = lshr i64 %1684, 63
  %1714 = xor i64 %1709, %1712
  %1715 = xor i64 %1709, %1713
  %1716 = add i64 %1714, %1715
  %1717 = icmp eq i64 %1716, 2
  %1718 = zext i1 %1717 to i8
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1718, i8* %1719, align 1
  store %struct.Memory* %loadMem_47d2f2, %struct.Memory** %MEMORY
  %loadMem_47d2f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1721 = getelementptr inbounds %struct.GPR, %struct.GPR* %1720, i32 0, i32 33
  %1722 = getelementptr inbounds %struct.Reg, %struct.Reg* %1721, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %1722 to i64*
  %1723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1724 = getelementptr inbounds %struct.GPR, %struct.GPR* %1723, i32 0, i32 1
  %1725 = getelementptr inbounds %struct.Reg, %struct.Reg* %1724, i32 0, i32 0
  %RAX.i1019 = bitcast %union.anon* %1725 to i64*
  %1726 = load i64, i64* %RAX.i1019
  %1727 = load i64, i64* %PC.i1018
  %1728 = add i64 %1727, 3
  store i64 %1728, i64* %PC.i1018
  %1729 = inttoptr i64 %1726 to i32*
  %1730 = load i32, i32* %1729
  %1731 = sub i32 %1730, 8
  %1732 = icmp ult i32 %1730, 8
  %1733 = zext i1 %1732 to i8
  %1734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1733, i8* %1734, align 1
  %1735 = and i32 %1731, 255
  %1736 = call i32 @llvm.ctpop.i32(i32 %1735)
  %1737 = trunc i32 %1736 to i8
  %1738 = and i8 %1737, 1
  %1739 = xor i8 %1738, 1
  %1740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1739, i8* %1740, align 1
  %1741 = xor i32 %1730, 8
  %1742 = xor i32 %1741, %1731
  %1743 = lshr i32 %1742, 4
  %1744 = trunc i32 %1743 to i8
  %1745 = and i8 %1744, 1
  %1746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1745, i8* %1746, align 1
  %1747 = icmp eq i32 %1731, 0
  %1748 = zext i1 %1747 to i8
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1748, i8* %1749, align 1
  %1750 = lshr i32 %1731, 31
  %1751 = trunc i32 %1750 to i8
  %1752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1751, i8* %1752, align 1
  %1753 = lshr i32 %1730, 31
  %1754 = xor i32 %1750, %1753
  %1755 = add i32 %1754, %1753
  %1756 = icmp eq i32 %1755, 2
  %1757 = zext i1 %1756 to i8
  %1758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1757, i8* %1758, align 1
  store %struct.Memory* %loadMem_47d2f5, %struct.Memory** %MEMORY
  %loadMem_47d2f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 33
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %1761 to i64*
  %1762 = load i64, i64* %PC.i1017
  %1763 = add i64 %1762, 66
  %1764 = load i64, i64* %PC.i1017
  %1765 = add i64 %1764, 6
  %1766 = load i64, i64* %PC.i1017
  %1767 = add i64 %1766, 6
  store i64 %1767, i64* %PC.i1017
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1769 = load i8, i8* %1768, align 1
  store i8 %1769, i8* %BRANCH_TAKEN, align 1
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1771 = icmp ne i8 %1769, 0
  %1772 = select i1 %1771, i64 %1763, i64 %1765
  store i64 %1772, i64* %1770, align 8
  store %struct.Memory* %loadMem_47d2f8, %struct.Memory** %MEMORY
  %loadBr_47d2f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d2f8 = icmp eq i8 %loadBr_47d2f8, 1
  br i1 %cmpBr_47d2f8, label %block_.L_47d33a, label %block_47d2fe

block_47d2fe:                                     ; preds = %block_47d2e0
  %loadMem_47d2fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1774 = getelementptr inbounds %struct.GPR, %struct.GPR* %1773, i32 0, i32 33
  %1775 = getelementptr inbounds %struct.Reg, %struct.Reg* %1774, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %1775 to i64*
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1777 = getelementptr inbounds %struct.GPR, %struct.GPR* %1776, i32 0, i32 1
  %1778 = getelementptr inbounds %struct.Reg, %struct.Reg* %1777, i32 0, i32 0
  %RAX.i1016 = bitcast %union.anon* %1778 to i64*
  %1779 = load i64, i64* %PC.i1015
  %1780 = add i64 %1779, 10
  store i64 %1780, i64* %PC.i1015
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i1016, align 8
  store %struct.Memory* %loadMem_47d2fe, %struct.Memory** %MEMORY
  %loadMem_47d308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1782 = getelementptr inbounds %struct.GPR, %struct.GPR* %1781, i32 0, i32 33
  %1783 = getelementptr inbounds %struct.Reg, %struct.Reg* %1782, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %1783 to i64*
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1785 = getelementptr inbounds %struct.GPR, %struct.GPR* %1784, i32 0, i32 5
  %1786 = getelementptr inbounds %struct.Reg, %struct.Reg* %1785, i32 0, i32 0
  %RCX.i1013 = bitcast %union.anon* %1786 to i64*
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1788 = getelementptr inbounds %struct.GPR, %struct.GPR* %1787, i32 0, i32 15
  %1789 = getelementptr inbounds %struct.Reg, %struct.Reg* %1788, i32 0, i32 0
  %RBP.i1014 = bitcast %union.anon* %1789 to i64*
  %1790 = load i64, i64* %RBP.i1014
  %1791 = sub i64 %1790, 40
  %1792 = load i64, i64* %PC.i1012
  %1793 = add i64 %1792, 4
  store i64 %1793, i64* %PC.i1012
  %1794 = inttoptr i64 %1791 to i32*
  %1795 = load i32, i32* %1794
  %1796 = sext i32 %1795 to i64
  store i64 %1796, i64* %RCX.i1013, align 8
  store %struct.Memory* %loadMem_47d308, %struct.Memory** %MEMORY
  %loadMem_47d30c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1798 = getelementptr inbounds %struct.GPR, %struct.GPR* %1797, i32 0, i32 33
  %1799 = getelementptr inbounds %struct.Reg, %struct.Reg* %1798, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %1799 to i64*
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1801 = getelementptr inbounds %struct.GPR, %struct.GPR* %1800, i32 0, i32 5
  %1802 = getelementptr inbounds %struct.Reg, %struct.Reg* %1801, i32 0, i32 0
  %RCX.i1011 = bitcast %union.anon* %1802 to i64*
  %1803 = load i64, i64* %RCX.i1011
  %1804 = load i64, i64* %PC.i1010
  %1805 = add i64 %1804, 4
  store i64 %1805, i64* %PC.i1010
  %1806 = sext i64 %1803 to i128
  %1807 = and i128 %1806, -18446744073709551616
  %1808 = zext i64 %1803 to i128
  %1809 = or i128 %1807, %1808
  %1810 = mul i128 12, %1809
  %1811 = trunc i128 %1810 to i64
  store i64 %1811, i64* %RCX.i1011, align 8
  %1812 = sext i64 %1811 to i128
  %1813 = icmp ne i128 %1812, %1810
  %1814 = zext i1 %1813 to i8
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1814, i8* %1815, align 1
  %1816 = trunc i128 %1810 to i32
  %1817 = and i32 %1816, 255
  %1818 = call i32 @llvm.ctpop.i32(i32 %1817)
  %1819 = trunc i32 %1818 to i8
  %1820 = and i8 %1819, 1
  %1821 = xor i8 %1820, 1
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1821, i8* %1822, align 1
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1823, align 1
  %1824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1824, align 1
  %1825 = lshr i64 %1811, 63
  %1826 = trunc i64 %1825 to i8
  %1827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1826, i8* %1827, align 1
  %1828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1814, i8* %1828, align 1
  store %struct.Memory* %loadMem_47d30c, %struct.Memory** %MEMORY
  %loadMem_47d310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1830 = getelementptr inbounds %struct.GPR, %struct.GPR* %1829, i32 0, i32 33
  %1831 = getelementptr inbounds %struct.Reg, %struct.Reg* %1830, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %1831 to i64*
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1833 = getelementptr inbounds %struct.GPR, %struct.GPR* %1832, i32 0, i32 1
  %1834 = getelementptr inbounds %struct.Reg, %struct.Reg* %1833, i32 0, i32 0
  %RAX.i1008 = bitcast %union.anon* %1834 to i64*
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1836 = getelementptr inbounds %struct.GPR, %struct.GPR* %1835, i32 0, i32 5
  %1837 = getelementptr inbounds %struct.Reg, %struct.Reg* %1836, i32 0, i32 0
  %RCX.i1009 = bitcast %union.anon* %1837 to i64*
  %1838 = load i64, i64* %RAX.i1008
  %1839 = load i64, i64* %RCX.i1009
  %1840 = load i64, i64* %PC.i1007
  %1841 = add i64 %1840, 3
  store i64 %1841, i64* %PC.i1007
  %1842 = add i64 %1839, %1838
  store i64 %1842, i64* %RAX.i1008, align 8
  %1843 = icmp ult i64 %1842, %1838
  %1844 = icmp ult i64 %1842, %1839
  %1845 = or i1 %1843, %1844
  %1846 = zext i1 %1845 to i8
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1846, i8* %1847, align 1
  %1848 = trunc i64 %1842 to i32
  %1849 = and i32 %1848, 255
  %1850 = call i32 @llvm.ctpop.i32(i32 %1849)
  %1851 = trunc i32 %1850 to i8
  %1852 = and i8 %1851, 1
  %1853 = xor i8 %1852, 1
  %1854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1853, i8* %1854, align 1
  %1855 = xor i64 %1839, %1838
  %1856 = xor i64 %1855, %1842
  %1857 = lshr i64 %1856, 4
  %1858 = trunc i64 %1857 to i8
  %1859 = and i8 %1858, 1
  %1860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1859, i8* %1860, align 1
  %1861 = icmp eq i64 %1842, 0
  %1862 = zext i1 %1861 to i8
  %1863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1862, i8* %1863, align 1
  %1864 = lshr i64 %1842, 63
  %1865 = trunc i64 %1864 to i8
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1865, i8* %1866, align 1
  %1867 = lshr i64 %1838, 63
  %1868 = lshr i64 %1839, 63
  %1869 = xor i64 %1864, %1867
  %1870 = xor i64 %1864, %1868
  %1871 = add i64 %1869, %1870
  %1872 = icmp eq i64 %1871, 2
  %1873 = zext i1 %1872 to i8
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1873, i8* %1874, align 1
  store %struct.Memory* %loadMem_47d310, %struct.Memory** %MEMORY
  %loadMem_47d313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1876 = getelementptr inbounds %struct.GPR, %struct.GPR* %1875, i32 0, i32 33
  %1877 = getelementptr inbounds %struct.Reg, %struct.Reg* %1876, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %1877 to i64*
  %1878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1879 = getelementptr inbounds %struct.GPR, %struct.GPR* %1878, i32 0, i32 1
  %1880 = getelementptr inbounds %struct.Reg, %struct.Reg* %1879, i32 0, i32 0
  %RAX.i1006 = bitcast %union.anon* %1880 to i64*
  %1881 = load i64, i64* %RAX.i1006
  %1882 = load i64, i64* %PC.i1005
  %1883 = add i64 %1882, 3
  store i64 %1883, i64* %PC.i1005
  %1884 = inttoptr i64 %1881 to i32*
  %1885 = load i32, i32* %1884
  %1886 = sub i32 %1885, 10
  %1887 = icmp ult i32 %1885, 10
  %1888 = zext i1 %1887 to i8
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1888, i8* %1889, align 1
  %1890 = and i32 %1886, 255
  %1891 = call i32 @llvm.ctpop.i32(i32 %1890)
  %1892 = trunc i32 %1891 to i8
  %1893 = and i8 %1892, 1
  %1894 = xor i8 %1893, 1
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1894, i8* %1895, align 1
  %1896 = xor i32 %1885, 10
  %1897 = xor i32 %1896, %1886
  %1898 = lshr i32 %1897, 4
  %1899 = trunc i32 %1898 to i8
  %1900 = and i8 %1899, 1
  %1901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1900, i8* %1901, align 1
  %1902 = icmp eq i32 %1886, 0
  %1903 = zext i1 %1902 to i8
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1903, i8* %1904, align 1
  %1905 = lshr i32 %1886, 31
  %1906 = trunc i32 %1905 to i8
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1906, i8* %1907, align 1
  %1908 = lshr i32 %1885, 31
  %1909 = xor i32 %1905, %1908
  %1910 = add i32 %1909, %1908
  %1911 = icmp eq i32 %1910, 2
  %1912 = zext i1 %1911 to i8
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1912, i8* %1913, align 1
  store %struct.Memory* %loadMem_47d313, %struct.Memory** %MEMORY
  %loadMem_47d316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1915 = getelementptr inbounds %struct.GPR, %struct.GPR* %1914, i32 0, i32 33
  %1916 = getelementptr inbounds %struct.Reg, %struct.Reg* %1915, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %1916 to i64*
  %1917 = load i64, i64* %PC.i1004
  %1918 = add i64 %1917, 36
  %1919 = load i64, i64* %PC.i1004
  %1920 = add i64 %1919, 6
  %1921 = load i64, i64* %PC.i1004
  %1922 = add i64 %1921, 6
  store i64 %1922, i64* %PC.i1004
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1924 = load i8, i8* %1923, align 1
  store i8 %1924, i8* %BRANCH_TAKEN, align 1
  %1925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1926 = icmp ne i8 %1924, 0
  %1927 = select i1 %1926, i64 %1918, i64 %1920
  store i64 %1927, i64* %1925, align 8
  store %struct.Memory* %loadMem_47d316, %struct.Memory** %MEMORY
  %loadBr_47d316 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d316 = icmp eq i8 %loadBr_47d316, 1
  br i1 %cmpBr_47d316, label %block_.L_47d33a, label %block_47d31c

block_47d31c:                                     ; preds = %block_47d2fe
  %loadMem_47d31c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1929 = getelementptr inbounds %struct.GPR, %struct.GPR* %1928, i32 0, i32 33
  %1930 = getelementptr inbounds %struct.Reg, %struct.Reg* %1929, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %1930 to i64*
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1932 = getelementptr inbounds %struct.GPR, %struct.GPR* %1931, i32 0, i32 1
  %1933 = getelementptr inbounds %struct.Reg, %struct.Reg* %1932, i32 0, i32 0
  %RAX.i1003 = bitcast %union.anon* %1933 to i64*
  %1934 = load i64, i64* %PC.i1002
  %1935 = add i64 %1934, 10
  store i64 %1935, i64* %PC.i1002
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i1003, align 8
  store %struct.Memory* %loadMem_47d31c, %struct.Memory** %MEMORY
  %loadMem_47d326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1937 = getelementptr inbounds %struct.GPR, %struct.GPR* %1936, i32 0, i32 33
  %1938 = getelementptr inbounds %struct.Reg, %struct.Reg* %1937, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %1938 to i64*
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1940 = getelementptr inbounds %struct.GPR, %struct.GPR* %1939, i32 0, i32 5
  %1941 = getelementptr inbounds %struct.Reg, %struct.Reg* %1940, i32 0, i32 0
  %RCX.i1000 = bitcast %union.anon* %1941 to i64*
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 15
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %1944 to i64*
  %1945 = load i64, i64* %RBP.i1001
  %1946 = sub i64 %1945, 40
  %1947 = load i64, i64* %PC.i999
  %1948 = add i64 %1947, 4
  store i64 %1948, i64* %PC.i999
  %1949 = inttoptr i64 %1946 to i32*
  %1950 = load i32, i32* %1949
  %1951 = sext i32 %1950 to i64
  store i64 %1951, i64* %RCX.i1000, align 8
  store %struct.Memory* %loadMem_47d326, %struct.Memory** %MEMORY
  %loadMem_47d32a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1953 = getelementptr inbounds %struct.GPR, %struct.GPR* %1952, i32 0, i32 33
  %1954 = getelementptr inbounds %struct.Reg, %struct.Reg* %1953, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %1954 to i64*
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1956 = getelementptr inbounds %struct.GPR, %struct.GPR* %1955, i32 0, i32 5
  %1957 = getelementptr inbounds %struct.Reg, %struct.Reg* %1956, i32 0, i32 0
  %RCX.i998 = bitcast %union.anon* %1957 to i64*
  %1958 = load i64, i64* %RCX.i998
  %1959 = load i64, i64* %PC.i997
  %1960 = add i64 %1959, 4
  store i64 %1960, i64* %PC.i997
  %1961 = sext i64 %1958 to i128
  %1962 = and i128 %1961, -18446744073709551616
  %1963 = zext i64 %1958 to i128
  %1964 = or i128 %1962, %1963
  %1965 = mul i128 12, %1964
  %1966 = trunc i128 %1965 to i64
  store i64 %1966, i64* %RCX.i998, align 8
  %1967 = sext i64 %1966 to i128
  %1968 = icmp ne i128 %1967, %1965
  %1969 = zext i1 %1968 to i8
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1969, i8* %1970, align 1
  %1971 = trunc i128 %1965 to i32
  %1972 = and i32 %1971, 255
  %1973 = call i32 @llvm.ctpop.i32(i32 %1972)
  %1974 = trunc i32 %1973 to i8
  %1975 = and i8 %1974, 1
  %1976 = xor i8 %1975, 1
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1976, i8* %1977, align 1
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1978, align 1
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1979, align 1
  %1980 = lshr i64 %1966, 63
  %1981 = trunc i64 %1980 to i8
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1981, i8* %1982, align 1
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1969, i8* %1983, align 1
  store %struct.Memory* %loadMem_47d32a, %struct.Memory** %MEMORY
  %loadMem_47d32e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1985 = getelementptr inbounds %struct.GPR, %struct.GPR* %1984, i32 0, i32 33
  %1986 = getelementptr inbounds %struct.Reg, %struct.Reg* %1985, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %1986 to i64*
  %1987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1988 = getelementptr inbounds %struct.GPR, %struct.GPR* %1987, i32 0, i32 1
  %1989 = getelementptr inbounds %struct.Reg, %struct.Reg* %1988, i32 0, i32 0
  %RAX.i995 = bitcast %union.anon* %1989 to i64*
  %1990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1991 = getelementptr inbounds %struct.GPR, %struct.GPR* %1990, i32 0, i32 5
  %1992 = getelementptr inbounds %struct.Reg, %struct.Reg* %1991, i32 0, i32 0
  %RCX.i996 = bitcast %union.anon* %1992 to i64*
  %1993 = load i64, i64* %RAX.i995
  %1994 = load i64, i64* %RCX.i996
  %1995 = load i64, i64* %PC.i994
  %1996 = add i64 %1995, 3
  store i64 %1996, i64* %PC.i994
  %1997 = add i64 %1994, %1993
  store i64 %1997, i64* %RAX.i995, align 8
  %1998 = icmp ult i64 %1997, %1993
  %1999 = icmp ult i64 %1997, %1994
  %2000 = or i1 %1998, %1999
  %2001 = zext i1 %2000 to i8
  %2002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2001, i8* %2002, align 1
  %2003 = trunc i64 %1997 to i32
  %2004 = and i32 %2003, 255
  %2005 = call i32 @llvm.ctpop.i32(i32 %2004)
  %2006 = trunc i32 %2005 to i8
  %2007 = and i8 %2006, 1
  %2008 = xor i8 %2007, 1
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2008, i8* %2009, align 1
  %2010 = xor i64 %1994, %1993
  %2011 = xor i64 %2010, %1997
  %2012 = lshr i64 %2011, 4
  %2013 = trunc i64 %2012 to i8
  %2014 = and i8 %2013, 1
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2014, i8* %2015, align 1
  %2016 = icmp eq i64 %1997, 0
  %2017 = zext i1 %2016 to i8
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2017, i8* %2018, align 1
  %2019 = lshr i64 %1997, 63
  %2020 = trunc i64 %2019 to i8
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2020, i8* %2021, align 1
  %2022 = lshr i64 %1993, 63
  %2023 = lshr i64 %1994, 63
  %2024 = xor i64 %2019, %2022
  %2025 = xor i64 %2019, %2023
  %2026 = add i64 %2024, %2025
  %2027 = icmp eq i64 %2026, 2
  %2028 = zext i1 %2027 to i8
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2028, i8* %2029, align 1
  store %struct.Memory* %loadMem_47d32e, %struct.Memory** %MEMORY
  %loadMem_47d331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2031 = getelementptr inbounds %struct.GPR, %struct.GPR* %2030, i32 0, i32 33
  %2032 = getelementptr inbounds %struct.Reg, %struct.Reg* %2031, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %2032 to i64*
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2034 = getelementptr inbounds %struct.GPR, %struct.GPR* %2033, i32 0, i32 1
  %2035 = getelementptr inbounds %struct.Reg, %struct.Reg* %2034, i32 0, i32 0
  %RAX.i993 = bitcast %union.anon* %2035 to i64*
  %2036 = load i64, i64* %RAX.i993
  %2037 = load i64, i64* %PC.i992
  %2038 = add i64 %2037, 3
  store i64 %2038, i64* %PC.i992
  %2039 = inttoptr i64 %2036 to i32*
  %2040 = load i32, i32* %2039
  %2041 = sub i32 %2040, 12
  %2042 = icmp ult i32 %2040, 12
  %2043 = zext i1 %2042 to i8
  %2044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2043, i8* %2044, align 1
  %2045 = and i32 %2041, 255
  %2046 = call i32 @llvm.ctpop.i32(i32 %2045)
  %2047 = trunc i32 %2046 to i8
  %2048 = and i8 %2047, 1
  %2049 = xor i8 %2048, 1
  %2050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2049, i8* %2050, align 1
  %2051 = xor i32 %2040, 12
  %2052 = xor i32 %2051, %2041
  %2053 = lshr i32 %2052, 4
  %2054 = trunc i32 %2053 to i8
  %2055 = and i8 %2054, 1
  %2056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2055, i8* %2056, align 1
  %2057 = icmp eq i32 %2041, 0
  %2058 = zext i1 %2057 to i8
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2058, i8* %2059, align 1
  %2060 = lshr i32 %2041, 31
  %2061 = trunc i32 %2060 to i8
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2061, i8* %2062, align 1
  %2063 = lshr i32 %2040, 31
  %2064 = xor i32 %2060, %2063
  %2065 = add i32 %2064, %2063
  %2066 = icmp eq i32 %2065, 2
  %2067 = zext i1 %2066 to i8
  %2068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2067, i8* %2068, align 1
  store %struct.Memory* %loadMem_47d331, %struct.Memory** %MEMORY
  %loadMem_47d334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2070 = getelementptr inbounds %struct.GPR, %struct.GPR* %2069, i32 0, i32 33
  %2071 = getelementptr inbounds %struct.Reg, %struct.Reg* %2070, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %2071 to i64*
  %2072 = load i64, i64* %PC.i991
  %2073 = add i64 %2072, 17
  %2074 = load i64, i64* %PC.i991
  %2075 = add i64 %2074, 6
  %2076 = load i64, i64* %PC.i991
  %2077 = add i64 %2076, 6
  store i64 %2077, i64* %PC.i991
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2079 = load i8, i8* %2078, align 1
  %2080 = icmp eq i8 %2079, 0
  %2081 = zext i1 %2080 to i8
  store i8 %2081, i8* %BRANCH_TAKEN, align 1
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2083 = select i1 %2080, i64 %2073, i64 %2075
  store i64 %2083, i64* %2082, align 8
  store %struct.Memory* %loadMem_47d334, %struct.Memory** %MEMORY
  %loadBr_47d334 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d334 = icmp eq i8 %loadBr_47d334, 1
  br i1 %cmpBr_47d334, label %block_.L_47d345, label %block_.L_47d33a

block_.L_47d33a:                                  ; preds = %block_47d31c, %block_47d2fe, %block_47d2e0, %block_47d2c2, %block_47d2a4, %block_.L_47d286
  %loadMem_47d33a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2085 = getelementptr inbounds %struct.GPR, %struct.GPR* %2084, i32 0, i32 33
  %2086 = getelementptr inbounds %struct.Reg, %struct.Reg* %2085, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %2086 to i64*
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2088 = getelementptr inbounds %struct.GPR, %struct.GPR* %2087, i32 0, i32 1
  %2089 = getelementptr inbounds %struct.Reg, %struct.Reg* %2088, i32 0, i32 0
  %RAX.i989 = bitcast %union.anon* %2089 to i64*
  %2090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2091 = getelementptr inbounds %struct.GPR, %struct.GPR* %2090, i32 0, i32 15
  %2092 = getelementptr inbounds %struct.Reg, %struct.Reg* %2091, i32 0, i32 0
  %RBP.i990 = bitcast %union.anon* %2092 to i64*
  %2093 = load i64, i64* %RBP.i990
  %2094 = sub i64 %2093, 44
  %2095 = load i64, i64* %PC.i988
  %2096 = add i64 %2095, 3
  store i64 %2096, i64* %PC.i988
  %2097 = inttoptr i64 %2094 to i32*
  %2098 = load i32, i32* %2097
  %2099 = zext i32 %2098 to i64
  store i64 %2099, i64* %RAX.i989, align 8
  store %struct.Memory* %loadMem_47d33a, %struct.Memory** %MEMORY
  %loadMem_47d33d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2101 = getelementptr inbounds %struct.GPR, %struct.GPR* %2100, i32 0, i32 33
  %2102 = getelementptr inbounds %struct.Reg, %struct.Reg* %2101, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %2102 to i64*
  %2103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2104 = getelementptr inbounds %struct.GPR, %struct.GPR* %2103, i32 0, i32 1
  %2105 = getelementptr inbounds %struct.Reg, %struct.Reg* %2104, i32 0, i32 0
  %EAX.i986 = bitcast %union.anon* %2105 to i32*
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2107 = getelementptr inbounds %struct.GPR, %struct.GPR* %2106, i32 0, i32 15
  %2108 = getelementptr inbounds %struct.Reg, %struct.Reg* %2107, i32 0, i32 0
  %RBP.i987 = bitcast %union.anon* %2108 to i64*
  %2109 = load i64, i64* %RBP.i987
  %2110 = sub i64 %2109, 24
  %2111 = load i32, i32* %EAX.i986
  %2112 = zext i32 %2111 to i64
  %2113 = load i64, i64* %PC.i985
  %2114 = add i64 %2113, 3
  store i64 %2114, i64* %PC.i985
  %2115 = inttoptr i64 %2110 to i32*
  store i32 %2111, i32* %2115
  store %struct.Memory* %loadMem_47d33d, %struct.Memory** %MEMORY
  %loadMem_47d340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2117 = getelementptr inbounds %struct.GPR, %struct.GPR* %2116, i32 0, i32 33
  %2118 = getelementptr inbounds %struct.Reg, %struct.Reg* %2117, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %2118 to i64*
  %2119 = load i64, i64* %PC.i984
  %2120 = add i64 %2119, 313
  %2121 = load i64, i64* %PC.i984
  %2122 = add i64 %2121, 5
  store i64 %2122, i64* %PC.i984
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2120, i64* %2123, align 8
  store %struct.Memory* %loadMem_47d340, %struct.Memory** %MEMORY
  br label %block_.L_47d479

block_.L_47d345:                                  ; preds = %block_47d31c
  %loadMem_47d345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2125 = getelementptr inbounds %struct.GPR, %struct.GPR* %2124, i32 0, i32 33
  %2126 = getelementptr inbounds %struct.Reg, %struct.Reg* %2125, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %2126 to i64*
  %2127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2128 = getelementptr inbounds %struct.GPR, %struct.GPR* %2127, i32 0, i32 1
  %2129 = getelementptr inbounds %struct.Reg, %struct.Reg* %2128, i32 0, i32 0
  %RAX.i983 = bitcast %union.anon* %2129 to i64*
  %2130 = load i64, i64* %PC.i982
  %2131 = add i64 %2130, 10
  store i64 %2131, i64* %PC.i982
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i983, align 8
  store %struct.Memory* %loadMem_47d345, %struct.Memory** %MEMORY
  %loadMem_47d34f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2133 = getelementptr inbounds %struct.GPR, %struct.GPR* %2132, i32 0, i32 33
  %2134 = getelementptr inbounds %struct.Reg, %struct.Reg* %2133, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %2134 to i64*
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 5
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %RCX.i980 = bitcast %union.anon* %2137 to i64*
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2139 = getelementptr inbounds %struct.GPR, %struct.GPR* %2138, i32 0, i32 15
  %2140 = getelementptr inbounds %struct.Reg, %struct.Reg* %2139, i32 0, i32 0
  %RBP.i981 = bitcast %union.anon* %2140 to i64*
  %2141 = load i64, i64* %RBP.i981
  %2142 = sub i64 %2141, 40
  %2143 = load i64, i64* %PC.i979
  %2144 = add i64 %2143, 4
  store i64 %2144, i64* %PC.i979
  %2145 = inttoptr i64 %2142 to i32*
  %2146 = load i32, i32* %2145
  %2147 = sext i32 %2146 to i64
  store i64 %2147, i64* %RCX.i980, align 8
  store %struct.Memory* %loadMem_47d34f, %struct.Memory** %MEMORY
  %loadMem_47d353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2149 = getelementptr inbounds %struct.GPR, %struct.GPR* %2148, i32 0, i32 33
  %2150 = getelementptr inbounds %struct.Reg, %struct.Reg* %2149, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %2150 to i64*
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2152 = getelementptr inbounds %struct.GPR, %struct.GPR* %2151, i32 0, i32 5
  %2153 = getelementptr inbounds %struct.Reg, %struct.Reg* %2152, i32 0, i32 0
  %RCX.i978 = bitcast %union.anon* %2153 to i64*
  %2154 = load i64, i64* %RCX.i978
  %2155 = load i64, i64* %PC.i977
  %2156 = add i64 %2155, 4
  store i64 %2156, i64* %PC.i977
  %2157 = sext i64 %2154 to i128
  %2158 = and i128 %2157, -18446744073709551616
  %2159 = zext i64 %2154 to i128
  %2160 = or i128 %2158, %2159
  %2161 = mul i128 12, %2160
  %2162 = trunc i128 %2161 to i64
  store i64 %2162, i64* %RCX.i978, align 8
  %2163 = sext i64 %2162 to i128
  %2164 = icmp ne i128 %2163, %2161
  %2165 = zext i1 %2164 to i8
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2165, i8* %2166, align 1
  %2167 = trunc i128 %2161 to i32
  %2168 = and i32 %2167, 255
  %2169 = call i32 @llvm.ctpop.i32(i32 %2168)
  %2170 = trunc i32 %2169 to i8
  %2171 = and i8 %2170, 1
  %2172 = xor i8 %2171, 1
  %2173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2172, i8* %2173, align 1
  %2174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2174, align 1
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2175, align 1
  %2176 = lshr i64 %2162, 63
  %2177 = trunc i64 %2176 to i8
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2177, i8* %2178, align 1
  %2179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2165, i8* %2179, align 1
  store %struct.Memory* %loadMem_47d353, %struct.Memory** %MEMORY
  %loadMem_47d357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2181 = getelementptr inbounds %struct.GPR, %struct.GPR* %2180, i32 0, i32 33
  %2182 = getelementptr inbounds %struct.Reg, %struct.Reg* %2181, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %2182 to i64*
  %2183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2184 = getelementptr inbounds %struct.GPR, %struct.GPR* %2183, i32 0, i32 1
  %2185 = getelementptr inbounds %struct.Reg, %struct.Reg* %2184, i32 0, i32 0
  %RAX.i975 = bitcast %union.anon* %2185 to i64*
  %2186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2187 = getelementptr inbounds %struct.GPR, %struct.GPR* %2186, i32 0, i32 5
  %2188 = getelementptr inbounds %struct.Reg, %struct.Reg* %2187, i32 0, i32 0
  %RCX.i976 = bitcast %union.anon* %2188 to i64*
  %2189 = load i64, i64* %RAX.i975
  %2190 = load i64, i64* %RCX.i976
  %2191 = load i64, i64* %PC.i974
  %2192 = add i64 %2191, 3
  store i64 %2192, i64* %PC.i974
  %2193 = add i64 %2190, %2189
  store i64 %2193, i64* %RAX.i975, align 8
  %2194 = icmp ult i64 %2193, %2189
  %2195 = icmp ult i64 %2193, %2190
  %2196 = or i1 %2194, %2195
  %2197 = zext i1 %2196 to i8
  %2198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2197, i8* %2198, align 1
  %2199 = trunc i64 %2193 to i32
  %2200 = and i32 %2199, 255
  %2201 = call i32 @llvm.ctpop.i32(i32 %2200)
  %2202 = trunc i32 %2201 to i8
  %2203 = and i8 %2202, 1
  %2204 = xor i8 %2203, 1
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2204, i8* %2205, align 1
  %2206 = xor i64 %2190, %2189
  %2207 = xor i64 %2206, %2193
  %2208 = lshr i64 %2207, 4
  %2209 = trunc i64 %2208 to i8
  %2210 = and i8 %2209, 1
  %2211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2210, i8* %2211, align 1
  %2212 = icmp eq i64 %2193, 0
  %2213 = zext i1 %2212 to i8
  %2214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2213, i8* %2214, align 1
  %2215 = lshr i64 %2193, 63
  %2216 = trunc i64 %2215 to i8
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2216, i8* %2217, align 1
  %2218 = lshr i64 %2189, 63
  %2219 = lshr i64 %2190, 63
  %2220 = xor i64 %2215, %2218
  %2221 = xor i64 %2215, %2219
  %2222 = add i64 %2220, %2221
  %2223 = icmp eq i64 %2222, 2
  %2224 = zext i1 %2223 to i8
  %2225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2224, i8* %2225, align 1
  store %struct.Memory* %loadMem_47d357, %struct.Memory** %MEMORY
  %loadMem_47d35a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2227 = getelementptr inbounds %struct.GPR, %struct.GPR* %2226, i32 0, i32 33
  %2228 = getelementptr inbounds %struct.Reg, %struct.Reg* %2227, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %2228 to i64*
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2230 = getelementptr inbounds %struct.GPR, %struct.GPR* %2229, i32 0, i32 1
  %2231 = getelementptr inbounds %struct.Reg, %struct.Reg* %2230, i32 0, i32 0
  %RAX.i973 = bitcast %union.anon* %2231 to i64*
  %2232 = load i64, i64* %RAX.i973
  %2233 = load i64, i64* %PC.i972
  %2234 = add i64 %2233, 3
  store i64 %2234, i64* %PC.i972
  %2235 = inttoptr i64 %2232 to i32*
  %2236 = load i32, i32* %2235
  %2237 = sub i32 %2236, 54
  %2238 = icmp ult i32 %2236, 54
  %2239 = zext i1 %2238 to i8
  %2240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2239, i8* %2240, align 1
  %2241 = and i32 %2237, 255
  %2242 = call i32 @llvm.ctpop.i32(i32 %2241)
  %2243 = trunc i32 %2242 to i8
  %2244 = and i8 %2243, 1
  %2245 = xor i8 %2244, 1
  %2246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2245, i8* %2246, align 1
  %2247 = xor i32 %2236, 54
  %2248 = xor i32 %2247, %2237
  %2249 = lshr i32 %2248, 4
  %2250 = trunc i32 %2249 to i8
  %2251 = and i8 %2250, 1
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2251, i8* %2252, align 1
  %2253 = icmp eq i32 %2237, 0
  %2254 = zext i1 %2253 to i8
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2254, i8* %2255, align 1
  %2256 = lshr i32 %2237, 31
  %2257 = trunc i32 %2256 to i8
  %2258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2257, i8* %2258, align 1
  %2259 = lshr i32 %2236, 31
  %2260 = xor i32 %2256, %2259
  %2261 = add i32 %2260, %2259
  %2262 = icmp eq i32 %2261, 2
  %2263 = zext i1 %2262 to i8
  %2264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2263, i8* %2264, align 1
  store %struct.Memory* %loadMem_47d35a, %struct.Memory** %MEMORY
  %loadMem_47d35d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2266 = getelementptr inbounds %struct.GPR, %struct.GPR* %2265, i32 0, i32 33
  %2267 = getelementptr inbounds %struct.Reg, %struct.Reg* %2266, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %2267 to i64*
  %2268 = load i64, i64* %PC.i971
  %2269 = add i64 %2268, 140
  %2270 = load i64, i64* %PC.i971
  %2271 = add i64 %2270, 6
  %2272 = load i64, i64* %PC.i971
  %2273 = add i64 %2272, 6
  store i64 %2273, i64* %PC.i971
  %2274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2275 = load i8, i8* %2274, align 1
  %2276 = icmp eq i8 %2275, 0
  %2277 = zext i1 %2276 to i8
  store i8 %2277, i8* %BRANCH_TAKEN, align 1
  %2278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2279 = select i1 %2276, i64 %2269, i64 %2271
  store i64 %2279, i64* %2278, align 8
  store %struct.Memory* %loadMem_47d35d, %struct.Memory** %MEMORY
  %loadBr_47d35d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d35d = icmp eq i8 %loadBr_47d35d, 1
  br i1 %cmpBr_47d35d, label %block_.L_47d3e9, label %block_47d363

block_47d363:                                     ; preds = %block_.L_47d345
  %loadMem_47d363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2281 = getelementptr inbounds %struct.GPR, %struct.GPR* %2280, i32 0, i32 33
  %2282 = getelementptr inbounds %struct.Reg, %struct.Reg* %2281, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %2282 to i64*
  %2283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2284 = getelementptr inbounds %struct.GPR, %struct.GPR* %2283, i32 0, i32 1
  %2285 = getelementptr inbounds %struct.Reg, %struct.Reg* %2284, i32 0, i32 0
  %RAX.i969 = bitcast %union.anon* %2285 to i64*
  %2286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2287 = getelementptr inbounds %struct.GPR, %struct.GPR* %2286, i32 0, i32 15
  %2288 = getelementptr inbounds %struct.Reg, %struct.Reg* %2287, i32 0, i32 0
  %RBP.i970 = bitcast %union.anon* %2288 to i64*
  %2289 = load i64, i64* %RBP.i970
  %2290 = sub i64 %2289, 44
  %2291 = load i64, i64* %PC.i968
  %2292 = add i64 %2291, 4
  store i64 %2292, i64* %PC.i968
  %2293 = inttoptr i64 %2290 to i32*
  %2294 = load i32, i32* %2293
  %2295 = sext i32 %2294 to i64
  store i64 %2295, i64* %RAX.i969, align 8
  store %struct.Memory* %loadMem_47d363, %struct.Memory** %MEMORY
  %loadMem_47d367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 33
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %2298 to i64*
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 1
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %RAX.i966 = bitcast %union.anon* %2301 to i64*
  %2302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2303 = getelementptr inbounds %struct.GPR, %struct.GPR* %2302, i32 0, i32 5
  %2304 = getelementptr inbounds %struct.Reg, %struct.Reg* %2303, i32 0, i32 0
  %RCX.i967 = bitcast %union.anon* %2304 to i64*
  %2305 = load i64, i64* %RAX.i966
  %2306 = mul i64 %2305, 4
  %2307 = add i64 %2306, 12105088
  %2308 = load i64, i64* %PC.i965
  %2309 = add i64 %2308, 7
  store i64 %2309, i64* %PC.i965
  %2310 = inttoptr i64 %2307 to i32*
  %2311 = load i32, i32* %2310
  %2312 = zext i32 %2311 to i64
  store i64 %2312, i64* %RCX.i967, align 8
  store %struct.Memory* %loadMem_47d367, %struct.Memory** %MEMORY
  %loadMem_47d36e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2314 = getelementptr inbounds %struct.GPR, %struct.GPR* %2313, i32 0, i32 33
  %2315 = getelementptr inbounds %struct.Reg, %struct.Reg* %2314, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %2315 to i64*
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2317 = getelementptr inbounds %struct.GPR, %struct.GPR* %2316, i32 0, i32 5
  %2318 = getelementptr inbounds %struct.Reg, %struct.Reg* %2317, i32 0, i32 0
  %ECX.i963 = bitcast %union.anon* %2318 to i32*
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2320 = getelementptr inbounds %struct.GPR, %struct.GPR* %2319, i32 0, i32 15
  %2321 = getelementptr inbounds %struct.Reg, %struct.Reg* %2320, i32 0, i32 0
  %RBP.i964 = bitcast %union.anon* %2321 to i64*
  %2322 = load i64, i64* %RBP.i964
  %2323 = sub i64 %2322, 48
  %2324 = load i32, i32* %ECX.i963
  %2325 = zext i32 %2324 to i64
  %2326 = load i64, i64* %PC.i962
  %2327 = add i64 %2326, 3
  store i64 %2327, i64* %PC.i962
  %2328 = inttoptr i64 %2323 to i32*
  store i32 %2324, i32* %2328
  store %struct.Memory* %loadMem_47d36e, %struct.Memory** %MEMORY
  %loadMem_47d371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2330 = getelementptr inbounds %struct.GPR, %struct.GPR* %2329, i32 0, i32 33
  %2331 = getelementptr inbounds %struct.Reg, %struct.Reg* %2330, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %2331 to i64*
  %2332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2333 = getelementptr inbounds %struct.GPR, %struct.GPR* %2332, i32 0, i32 1
  %2334 = getelementptr inbounds %struct.Reg, %struct.Reg* %2333, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %2334 to i64*
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2336 = getelementptr inbounds %struct.GPR, %struct.GPR* %2335, i32 0, i32 15
  %2337 = getelementptr inbounds %struct.Reg, %struct.Reg* %2336, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %2337 to i64*
  %2338 = load i64, i64* %RBP.i961
  %2339 = sub i64 %2338, 44
  %2340 = load i64, i64* %PC.i959
  %2341 = add i64 %2340, 4
  store i64 %2341, i64* %PC.i959
  %2342 = inttoptr i64 %2339 to i32*
  %2343 = load i32, i32* %2342
  %2344 = sext i32 %2343 to i64
  store i64 %2344, i64* %RAX.i960, align 8
  store %struct.Memory* %loadMem_47d371, %struct.Memory** %MEMORY
  %loadMem_47d375 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2346 = getelementptr inbounds %struct.GPR, %struct.GPR* %2345, i32 0, i32 33
  %2347 = getelementptr inbounds %struct.Reg, %struct.Reg* %2346, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %2347 to i64*
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2349 = getelementptr inbounds %struct.GPR, %struct.GPR* %2348, i32 0, i32 1
  %2350 = getelementptr inbounds %struct.Reg, %struct.Reg* %2349, i32 0, i32 0
  %RAX.i957 = bitcast %union.anon* %2350 to i64*
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2352 = getelementptr inbounds %struct.GPR, %struct.GPR* %2351, i32 0, i32 5
  %2353 = getelementptr inbounds %struct.Reg, %struct.Reg* %2352, i32 0, i32 0
  %RCX.i958 = bitcast %union.anon* %2353 to i64*
  %2354 = load i64, i64* %RAX.i957
  %2355 = mul i64 %2354, 4
  %2356 = add i64 %2355, 11538080
  %2357 = load i64, i64* %PC.i956
  %2358 = add i64 %2357, 7
  store i64 %2358, i64* %PC.i956
  %2359 = inttoptr i64 %2356 to i32*
  %2360 = load i32, i32* %2359
  %2361 = zext i32 %2360 to i64
  store i64 %2361, i64* %RCX.i958, align 8
  store %struct.Memory* %loadMem_47d375, %struct.Memory** %MEMORY
  %loadMem_47d37c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2363 = getelementptr inbounds %struct.GPR, %struct.GPR* %2362, i32 0, i32 33
  %2364 = getelementptr inbounds %struct.Reg, %struct.Reg* %2363, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %2364 to i64*
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2366 = getelementptr inbounds %struct.GPR, %struct.GPR* %2365, i32 0, i32 5
  %2367 = getelementptr inbounds %struct.Reg, %struct.Reg* %2366, i32 0, i32 0
  %ECX.i954 = bitcast %union.anon* %2367 to i32*
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2369 = getelementptr inbounds %struct.GPR, %struct.GPR* %2368, i32 0, i32 15
  %2370 = getelementptr inbounds %struct.Reg, %struct.Reg* %2369, i32 0, i32 0
  %RBP.i955 = bitcast %union.anon* %2370 to i64*
  %2371 = load i64, i64* %RBP.i955
  %2372 = sub i64 %2371, 52
  %2373 = load i32, i32* %ECX.i954
  %2374 = zext i32 %2373 to i64
  %2375 = load i64, i64* %PC.i953
  %2376 = add i64 %2375, 3
  store i64 %2376, i64* %PC.i953
  %2377 = inttoptr i64 %2372 to i32*
  store i32 %2373, i32* %2377
  store %struct.Memory* %loadMem_47d37c, %struct.Memory** %MEMORY
  %loadMem_47d37f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2379 = getelementptr inbounds %struct.GPR, %struct.GPR* %2378, i32 0, i32 33
  %2380 = getelementptr inbounds %struct.Reg, %struct.Reg* %2379, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %2380 to i64*
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2382 = getelementptr inbounds %struct.GPR, %struct.GPR* %2381, i32 0, i32 15
  %2383 = getelementptr inbounds %struct.Reg, %struct.Reg* %2382, i32 0, i32 0
  %RBP.i952 = bitcast %union.anon* %2383 to i64*
  %2384 = load i64, i64* %RBP.i952
  %2385 = sub i64 %2384, 52
  %2386 = load i64, i64* %PC.i951
  %2387 = add i64 %2386, 4
  store i64 %2387, i64* %PC.i951
  %2388 = inttoptr i64 %2385 to i32*
  %2389 = load i32, i32* %2388
  %2390 = sub i32 %2389, 1
  %2391 = icmp ult i32 %2389, 1
  %2392 = zext i1 %2391 to i8
  %2393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2392, i8* %2393, align 1
  %2394 = and i32 %2390, 255
  %2395 = call i32 @llvm.ctpop.i32(i32 %2394)
  %2396 = trunc i32 %2395 to i8
  %2397 = and i8 %2396, 1
  %2398 = xor i8 %2397, 1
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2398, i8* %2399, align 1
  %2400 = xor i32 %2389, 1
  %2401 = xor i32 %2400, %2390
  %2402 = lshr i32 %2401, 4
  %2403 = trunc i32 %2402 to i8
  %2404 = and i8 %2403, 1
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2404, i8* %2405, align 1
  %2406 = icmp eq i32 %2390, 0
  %2407 = zext i1 %2406 to i8
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2407, i8* %2408, align 1
  %2409 = lshr i32 %2390, 31
  %2410 = trunc i32 %2409 to i8
  %2411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2410, i8* %2411, align 1
  %2412 = lshr i32 %2389, 31
  %2413 = xor i32 %2409, %2412
  %2414 = add i32 %2413, %2412
  %2415 = icmp eq i32 %2414, 2
  %2416 = zext i1 %2415 to i8
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2416, i8* %2417, align 1
  store %struct.Memory* %loadMem_47d37f, %struct.Memory** %MEMORY
  %loadMem_47d383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2419 = getelementptr inbounds %struct.GPR, %struct.GPR* %2418, i32 0, i32 33
  %2420 = getelementptr inbounds %struct.Reg, %struct.Reg* %2419, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %2420 to i64*
  %2421 = load i64, i64* %PC.i950
  %2422 = add i64 %2421, 46
  %2423 = load i64, i64* %PC.i950
  %2424 = add i64 %2423, 6
  %2425 = load i64, i64* %PC.i950
  %2426 = add i64 %2425, 6
  store i64 %2426, i64* %PC.i950
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2428 = load i8, i8* %2427, align 1
  %2429 = icmp eq i8 %2428, 0
  %2430 = zext i1 %2429 to i8
  store i8 %2430, i8* %BRANCH_TAKEN, align 1
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2432 = select i1 %2429, i64 %2422, i64 %2424
  store i64 %2432, i64* %2431, align 8
  store %struct.Memory* %loadMem_47d383, %struct.Memory** %MEMORY
  %loadBr_47d383 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d383 = icmp eq i8 %loadBr_47d383, 1
  br i1 %cmpBr_47d383, label %block_.L_47d3b1, label %block_47d389

block_47d389:                                     ; preds = %block_47d363
  %loadMem_47d389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2434 = getelementptr inbounds %struct.GPR, %struct.GPR* %2433, i32 0, i32 33
  %2435 = getelementptr inbounds %struct.Reg, %struct.Reg* %2434, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %2435 to i64*
  %2436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2437 = getelementptr inbounds %struct.GPR, %struct.GPR* %2436, i32 0, i32 9
  %2438 = getelementptr inbounds %struct.Reg, %struct.Reg* %2437, i32 0, i32 0
  %RSI.i949 = bitcast %union.anon* %2438 to i64*
  %2439 = load i64, i64* %PC.i948
  %2440 = add i64 %2439, 10
  store i64 %2440, i64* %PC.i948
  store i64 ptrtoint (%G__0xb9a0a0_type* @G__0xb9a0a0 to i64), i64* %RSI.i949, align 8
  store %struct.Memory* %loadMem_47d389, %struct.Memory** %MEMORY
  %loadMem_47d393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2442 = getelementptr inbounds %struct.GPR, %struct.GPR* %2441, i32 0, i32 33
  %2443 = getelementptr inbounds %struct.Reg, %struct.Reg* %2442, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %2443 to i64*
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2445 = getelementptr inbounds %struct.GPR, %struct.GPR* %2444, i32 0, i32 1
  %2446 = getelementptr inbounds %struct.Reg, %struct.Reg* %2445, i32 0, i32 0
  %RAX.i947 = bitcast %union.anon* %2446 to i64*
  %2447 = load i64, i64* %PC.i946
  %2448 = add i64 %2447, 5
  store i64 %2448, i64* %PC.i946
  store i64 1, i64* %RAX.i947, align 8
  store %struct.Memory* %loadMem_47d393, %struct.Memory** %MEMORY
  %loadMem_47d398 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2450 = getelementptr inbounds %struct.GPR, %struct.GPR* %2449, i32 0, i32 33
  %2451 = getelementptr inbounds %struct.Reg, %struct.Reg* %2450, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %2451 to i64*
  %2452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2453 = getelementptr inbounds %struct.GPR, %struct.GPR* %2452, i32 0, i32 5
  %2454 = getelementptr inbounds %struct.Reg, %struct.Reg* %2453, i32 0, i32 0
  %RCX.i944 = bitcast %union.anon* %2454 to i64*
  %2455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2456 = getelementptr inbounds %struct.GPR, %struct.GPR* %2455, i32 0, i32 15
  %2457 = getelementptr inbounds %struct.Reg, %struct.Reg* %2456, i32 0, i32 0
  %RBP.i945 = bitcast %union.anon* %2457 to i64*
  %2458 = load i64, i64* %RBP.i945
  %2459 = sub i64 %2458, 24
  %2460 = load i64, i64* %PC.i943
  %2461 = add i64 %2460, 4
  store i64 %2461, i64* %PC.i943
  store i64 %2459, i64* %RCX.i944, align 8
  store %struct.Memory* %loadMem_47d398, %struct.Memory** %MEMORY
  %loadMem_47d39c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2463 = getelementptr inbounds %struct.GPR, %struct.GPR* %2462, i32 0, i32 33
  %2464 = getelementptr inbounds %struct.Reg, %struct.Reg* %2463, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %2464 to i64*
  %2465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2466 = getelementptr inbounds %struct.GPR, %struct.GPR* %2465, i32 0, i32 11
  %2467 = getelementptr inbounds %struct.Reg, %struct.Reg* %2466, i32 0, i32 0
  %RDI.i941 = bitcast %union.anon* %2467 to i64*
  %2468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2469 = getelementptr inbounds %struct.GPR, %struct.GPR* %2468, i32 0, i32 15
  %2470 = getelementptr inbounds %struct.Reg, %struct.Reg* %2469, i32 0, i32 0
  %RBP.i942 = bitcast %union.anon* %2470 to i64*
  %2471 = load i64, i64* %RBP.i942
  %2472 = sub i64 %2471, 48
  %2473 = load i64, i64* %PC.i940
  %2474 = add i64 %2473, 3
  store i64 %2474, i64* %PC.i940
  %2475 = inttoptr i64 %2472 to i32*
  %2476 = load i32, i32* %2475
  %2477 = zext i32 %2476 to i64
  store i64 %2477, i64* %RDI.i941, align 8
  store %struct.Memory* %loadMem_47d39c, %struct.Memory** %MEMORY
  %loadMem_47d39f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2479 = getelementptr inbounds %struct.GPR, %struct.GPR* %2478, i32 0, i32 33
  %2480 = getelementptr inbounds %struct.Reg, %struct.Reg* %2479, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %2480 to i64*
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2482 = getelementptr inbounds %struct.GPR, %struct.GPR* %2481, i32 0, i32 1
  %2483 = getelementptr inbounds %struct.Reg, %struct.Reg* %2482, i32 0, i32 0
  %EAX.i938 = bitcast %union.anon* %2483 to i32*
  %2484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2485 = getelementptr inbounds %struct.GPR, %struct.GPR* %2484, i32 0, i32 7
  %2486 = getelementptr inbounds %struct.Reg, %struct.Reg* %2485, i32 0, i32 0
  %RDX.i939 = bitcast %union.anon* %2486 to i64*
  %2487 = load i32, i32* %EAX.i938
  %2488 = zext i32 %2487 to i64
  %2489 = load i64, i64* %PC.i937
  %2490 = add i64 %2489, 2
  store i64 %2490, i64* %PC.i937
  %2491 = and i64 %2488, 4294967295
  store i64 %2491, i64* %RDX.i939, align 8
  store %struct.Memory* %loadMem_47d39f, %struct.Memory** %MEMORY
  %loadMem_47d3a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2493 = getelementptr inbounds %struct.GPR, %struct.GPR* %2492, i32 0, i32 33
  %2494 = getelementptr inbounds %struct.Reg, %struct.Reg* %2493, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %2494 to i64*
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2496 = getelementptr inbounds %struct.GPR, %struct.GPR* %2495, i32 0, i32 1
  %2497 = getelementptr inbounds %struct.Reg, %struct.Reg* %2496, i32 0, i32 0
  %EAX.i935 = bitcast %union.anon* %2497 to i32*
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2499 = getelementptr inbounds %struct.GPR, %struct.GPR* %2498, i32 0, i32 17
  %2500 = getelementptr inbounds %struct.Reg, %struct.Reg* %2499, i32 0, i32 0
  %R8D.i936 = bitcast %union.anon* %2500 to i32*
  %2501 = bitcast i32* %R8D.i936 to i64*
  %2502 = load i32, i32* %EAX.i935
  %2503 = zext i32 %2502 to i64
  %2504 = load i64, i64* %PC.i934
  %2505 = add i64 %2504, 3
  store i64 %2505, i64* %PC.i934
  %2506 = and i64 %2503, 4294967295
  store i64 %2506, i64* %2501, align 8
  store %struct.Memory* %loadMem_47d3a1, %struct.Memory** %MEMORY
  %loadMem1_47d3a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2508 = getelementptr inbounds %struct.GPR, %struct.GPR* %2507, i32 0, i32 33
  %2509 = getelementptr inbounds %struct.Reg, %struct.Reg* %2508, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %2509 to i64*
  %2510 = load i64, i64* %PC.i933
  %2511 = add i64 %2510, -278100
  %2512 = load i64, i64* %PC.i933
  %2513 = add i64 %2512, 5
  %2514 = load i64, i64* %PC.i933
  %2515 = add i64 %2514, 5
  store i64 %2515, i64* %PC.i933
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2517 = load i64, i64* %2516, align 8
  %2518 = add i64 %2517, -8
  %2519 = inttoptr i64 %2518 to i64*
  store i64 %2513, i64* %2519
  store i64 %2518, i64* %2516, align 8
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2511, i64* %2520, align 8
  store %struct.Memory* %loadMem1_47d3a4, %struct.Memory** %MEMORY
  %loadMem2_47d3a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d3a4 = load i64, i64* %3
  %call2_47d3a4 = call %struct.Memory* @sub_439550.find_eye_dragons(%struct.State* %0, i64 %loadPC_47d3a4, %struct.Memory* %loadMem2_47d3a4)
  store %struct.Memory* %call2_47d3a4, %struct.Memory** %MEMORY
  %loadMem_47d3a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2522 = getelementptr inbounds %struct.GPR, %struct.GPR* %2521, i32 0, i32 33
  %2523 = getelementptr inbounds %struct.Reg, %struct.Reg* %2522, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %2523 to i64*
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2525 = getelementptr inbounds %struct.GPR, %struct.GPR* %2524, i32 0, i32 1
  %2526 = getelementptr inbounds %struct.Reg, %struct.Reg* %2525, i32 0, i32 0
  %EAX.i931 = bitcast %union.anon* %2526 to i32*
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2528 = getelementptr inbounds %struct.GPR, %struct.GPR* %2527, i32 0, i32 15
  %2529 = getelementptr inbounds %struct.Reg, %struct.Reg* %2528, i32 0, i32 0
  %RBP.i932 = bitcast %union.anon* %2529 to i64*
  %2530 = load i64, i64* %RBP.i932
  %2531 = sub i64 %2530, 104
  %2532 = load i32, i32* %EAX.i931
  %2533 = zext i32 %2532 to i64
  %2534 = load i64, i64* %PC.i930
  %2535 = add i64 %2534, 3
  store i64 %2535, i64* %PC.i930
  %2536 = inttoptr i64 %2531 to i32*
  store i32 %2532, i32* %2536
  store %struct.Memory* %loadMem_47d3a9, %struct.Memory** %MEMORY
  %loadMem_47d3ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2538 = getelementptr inbounds %struct.GPR, %struct.GPR* %2537, i32 0, i32 33
  %2539 = getelementptr inbounds %struct.Reg, %struct.Reg* %2538, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %2539 to i64*
  %2540 = load i64, i64* %PC.i929
  %2541 = add i64 %2540, 41
  %2542 = load i64, i64* %PC.i929
  %2543 = add i64 %2542, 5
  store i64 %2543, i64* %PC.i929
  %2544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2541, i64* %2544, align 8
  store %struct.Memory* %loadMem_47d3ac, %struct.Memory** %MEMORY
  br label %block_.L_47d3d5

block_.L_47d3b1:                                  ; preds = %block_47d363
  %loadMem_47d3b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2546 = getelementptr inbounds %struct.GPR, %struct.GPR* %2545, i32 0, i32 33
  %2547 = getelementptr inbounds %struct.Reg, %struct.Reg* %2546, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %2547 to i64*
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2549 = getelementptr inbounds %struct.GPR, %struct.GPR* %2548, i32 0, i32 9
  %2550 = getelementptr inbounds %struct.Reg, %struct.Reg* %2549, i32 0, i32 0
  %RSI.i928 = bitcast %union.anon* %2550 to i64*
  %2551 = load i64, i64* %PC.i927
  %2552 = add i64 %2551, 10
  store i64 %2552, i64* %PC.i927
  store i64 ptrtoint (%G__0xb01180_type* @G__0xb01180 to i64), i64* %RSI.i928, align 8
  store %struct.Memory* %loadMem_47d3b1, %struct.Memory** %MEMORY
  %loadMem_47d3bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2554 = getelementptr inbounds %struct.GPR, %struct.GPR* %2553, i32 0, i32 33
  %2555 = getelementptr inbounds %struct.Reg, %struct.Reg* %2554, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %2555 to i64*
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2557 = getelementptr inbounds %struct.GPR, %struct.GPR* %2556, i32 0, i32 7
  %2558 = getelementptr inbounds %struct.Reg, %struct.Reg* %2557, i32 0, i32 0
  %RDX.i926 = bitcast %union.anon* %2558 to i64*
  %2559 = load i64, i64* %PC.i925
  %2560 = add i64 %2559, 5
  store i64 %2560, i64* %PC.i925
  store i64 2, i64* %RDX.i926, align 8
  store %struct.Memory* %loadMem_47d3bb, %struct.Memory** %MEMORY
  %loadMem_47d3c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2562 = getelementptr inbounds %struct.GPR, %struct.GPR* %2561, i32 0, i32 33
  %2563 = getelementptr inbounds %struct.Reg, %struct.Reg* %2562, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %2563 to i64*
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2565 = getelementptr inbounds %struct.GPR, %struct.GPR* %2564, i32 0, i32 5
  %2566 = getelementptr inbounds %struct.Reg, %struct.Reg* %2565, i32 0, i32 0
  %RCX.i923 = bitcast %union.anon* %2566 to i64*
  %2567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2568 = getelementptr inbounds %struct.GPR, %struct.GPR* %2567, i32 0, i32 15
  %2569 = getelementptr inbounds %struct.Reg, %struct.Reg* %2568, i32 0, i32 0
  %RBP.i924 = bitcast %union.anon* %2569 to i64*
  %2570 = load i64, i64* %RBP.i924
  %2571 = sub i64 %2570, 24
  %2572 = load i64, i64* %PC.i922
  %2573 = add i64 %2572, 4
  store i64 %2573, i64* %PC.i922
  store i64 %2571, i64* %RCX.i923, align 8
  store %struct.Memory* %loadMem_47d3c0, %struct.Memory** %MEMORY
  %loadMem_47d3c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2575 = getelementptr inbounds %struct.GPR, %struct.GPR* %2574, i32 0, i32 33
  %2576 = getelementptr inbounds %struct.Reg, %struct.Reg* %2575, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %2576 to i64*
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2578 = getelementptr inbounds %struct.GPR, %struct.GPR* %2577, i32 0, i32 17
  %2579 = getelementptr inbounds %struct.Reg, %struct.Reg* %2578, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %2579 to i32*
  %2580 = bitcast i32* %R8D.i to i64*
  %2581 = load i64, i64* %PC.i921
  %2582 = add i64 %2581, 6
  store i64 %2582, i64* %PC.i921
  store i64 1, i64* %2580, align 8
  store %struct.Memory* %loadMem_47d3c4, %struct.Memory** %MEMORY
  %loadMem_47d3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2584 = getelementptr inbounds %struct.GPR, %struct.GPR* %2583, i32 0, i32 33
  %2585 = getelementptr inbounds %struct.Reg, %struct.Reg* %2584, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %2585 to i64*
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2587 = getelementptr inbounds %struct.GPR, %struct.GPR* %2586, i32 0, i32 11
  %2588 = getelementptr inbounds %struct.Reg, %struct.Reg* %2587, i32 0, i32 0
  %RDI.i919 = bitcast %union.anon* %2588 to i64*
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2590 = getelementptr inbounds %struct.GPR, %struct.GPR* %2589, i32 0, i32 15
  %2591 = getelementptr inbounds %struct.Reg, %struct.Reg* %2590, i32 0, i32 0
  %RBP.i920 = bitcast %union.anon* %2591 to i64*
  %2592 = load i64, i64* %RBP.i920
  %2593 = sub i64 %2592, 48
  %2594 = load i64, i64* %PC.i918
  %2595 = add i64 %2594, 3
  store i64 %2595, i64* %PC.i918
  %2596 = inttoptr i64 %2593 to i32*
  %2597 = load i32, i32* %2596
  %2598 = zext i32 %2597 to i64
  store i64 %2598, i64* %RDI.i919, align 8
  store %struct.Memory* %loadMem_47d3ca, %struct.Memory** %MEMORY
  %loadMem1_47d3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2600 = getelementptr inbounds %struct.GPR, %struct.GPR* %2599, i32 0, i32 33
  %2601 = getelementptr inbounds %struct.Reg, %struct.Reg* %2600, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %2601 to i64*
  %2602 = load i64, i64* %PC.i917
  %2603 = add i64 %2602, -278141
  %2604 = load i64, i64* %PC.i917
  %2605 = add i64 %2604, 5
  %2606 = load i64, i64* %PC.i917
  %2607 = add i64 %2606, 5
  store i64 %2607, i64* %PC.i917
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2609 = load i64, i64* %2608, align 8
  %2610 = add i64 %2609, -8
  %2611 = inttoptr i64 %2610 to i64*
  store i64 %2605, i64* %2611
  store i64 %2610, i64* %2608, align 8
  %2612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2603, i64* %2612, align 8
  store %struct.Memory* %loadMem1_47d3cd, %struct.Memory** %MEMORY
  %loadMem2_47d3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d3cd = load i64, i64* %3
  %call2_47d3cd = call %struct.Memory* @sub_439550.find_eye_dragons(%struct.State* %0, i64 %loadPC_47d3cd, %struct.Memory* %loadMem2_47d3cd)
  store %struct.Memory* %call2_47d3cd, %struct.Memory** %MEMORY
  %loadMem_47d3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2614 = getelementptr inbounds %struct.GPR, %struct.GPR* %2613, i32 0, i32 33
  %2615 = getelementptr inbounds %struct.Reg, %struct.Reg* %2614, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %2615 to i64*
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2617 = getelementptr inbounds %struct.GPR, %struct.GPR* %2616, i32 0, i32 1
  %2618 = getelementptr inbounds %struct.Reg, %struct.Reg* %2617, i32 0, i32 0
  %EAX.i915 = bitcast %union.anon* %2618 to i32*
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2620 = getelementptr inbounds %struct.GPR, %struct.GPR* %2619, i32 0, i32 15
  %2621 = getelementptr inbounds %struct.Reg, %struct.Reg* %2620, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %2621 to i64*
  %2622 = load i64, i64* %RBP.i916
  %2623 = sub i64 %2622, 108
  %2624 = load i32, i32* %EAX.i915
  %2625 = zext i32 %2624 to i64
  %2626 = load i64, i64* %PC.i914
  %2627 = add i64 %2626, 3
  store i64 %2627, i64* %PC.i914
  %2628 = inttoptr i64 %2623 to i32*
  store i32 %2624, i32* %2628
  store %struct.Memory* %loadMem_47d3d2, %struct.Memory** %MEMORY
  br label %block_.L_47d3d5

block_.L_47d3d5:                                  ; preds = %block_.L_47d3b1, %block_47d389
  %loadMem_47d3d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2630 = getelementptr inbounds %struct.GPR, %struct.GPR* %2629, i32 0, i32 33
  %2631 = getelementptr inbounds %struct.Reg, %struct.Reg* %2630, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %2631 to i64*
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2633 = getelementptr inbounds %struct.GPR, %struct.GPR* %2632, i32 0, i32 15
  %2634 = getelementptr inbounds %struct.Reg, %struct.Reg* %2633, i32 0, i32 0
  %RBP.i913 = bitcast %union.anon* %2634 to i64*
  %2635 = load i64, i64* %RBP.i913
  %2636 = sub i64 %2635, 24
  %2637 = load i64, i64* %PC.i912
  %2638 = add i64 %2637, 4
  store i64 %2638, i64* %PC.i912
  %2639 = inttoptr i64 %2636 to i32*
  %2640 = load i32, i32* %2639
  %2641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2641, align 1
  %2642 = and i32 %2640, 255
  %2643 = call i32 @llvm.ctpop.i32(i32 %2642)
  %2644 = trunc i32 %2643 to i8
  %2645 = and i8 %2644, 1
  %2646 = xor i8 %2645, 1
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2646, i8* %2647, align 1
  %2648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2648, align 1
  %2649 = icmp eq i32 %2640, 0
  %2650 = zext i1 %2649 to i8
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2650, i8* %2651, align 1
  %2652 = lshr i32 %2640, 31
  %2653 = trunc i32 %2652 to i8
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2653, i8* %2654, align 1
  %2655 = lshr i32 %2640, 31
  %2656 = xor i32 %2652, %2655
  %2657 = add i32 %2656, %2655
  %2658 = icmp eq i32 %2657, 2
  %2659 = zext i1 %2658 to i8
  %2660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2659, i8* %2660, align 1
  store %struct.Memory* %loadMem_47d3d5, %struct.Memory** %MEMORY
  %loadMem_47d3d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2662 = getelementptr inbounds %struct.GPR, %struct.GPR* %2661, i32 0, i32 33
  %2663 = getelementptr inbounds %struct.Reg, %struct.Reg* %2662, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %2663 to i64*
  %2664 = load i64, i64* %PC.i911
  %2665 = add i64 %2664, 11
  %2666 = load i64, i64* %PC.i911
  %2667 = add i64 %2666, 6
  %2668 = load i64, i64* %PC.i911
  %2669 = add i64 %2668, 6
  store i64 %2669, i64* %PC.i911
  %2670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2671 = load i8, i8* %2670, align 1
  %2672 = icmp eq i8 %2671, 0
  %2673 = zext i1 %2672 to i8
  store i8 %2673, i8* %BRANCH_TAKEN, align 1
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2675 = select i1 %2672, i64 %2665, i64 %2667
  store i64 %2675, i64* %2674, align 8
  store %struct.Memory* %loadMem_47d3d9, %struct.Memory** %MEMORY
  %loadBr_47d3d9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d3d9 = icmp eq i8 %loadBr_47d3d9, 1
  br i1 %cmpBr_47d3d9, label %block_.L_47d3e4, label %block_47d3df

block_47d3df:                                     ; preds = %block_.L_47d3d5
  %loadMem_47d3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %2676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2677 = getelementptr inbounds %struct.GPR, %struct.GPR* %2676, i32 0, i32 33
  %2678 = getelementptr inbounds %struct.Reg, %struct.Reg* %2677, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %2678 to i64*
  %2679 = load i64, i64* %PC.i910
  %2680 = add i64 %2679, 1070
  %2681 = load i64, i64* %PC.i910
  %2682 = add i64 %2681, 5
  store i64 %2682, i64* %PC.i910
  %2683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2680, i64* %2683, align 8
  store %struct.Memory* %loadMem_47d3df, %struct.Memory** %MEMORY
  br label %block_.L_47d80d

block_.L_47d3e4:                                  ; preds = %block_.L_47d3d5
  %loadMem_47d3e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2685 = getelementptr inbounds %struct.GPR, %struct.GPR* %2684, i32 0, i32 33
  %2686 = getelementptr inbounds %struct.Reg, %struct.Reg* %2685, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %2686 to i64*
  %2687 = load i64, i64* %PC.i909
  %2688 = add i64 %2687, 144
  %2689 = load i64, i64* %PC.i909
  %2690 = add i64 %2689, 5
  store i64 %2690, i64* %PC.i909
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2688, i64* %2691, align 8
  store %struct.Memory* %loadMem_47d3e4, %struct.Memory** %MEMORY
  br label %block_.L_47d474

block_.L_47d3e9:                                  ; preds = %block_.L_47d345
  %loadMem_47d3e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2693 = getelementptr inbounds %struct.GPR, %struct.GPR* %2692, i32 0, i32 33
  %2694 = getelementptr inbounds %struct.Reg, %struct.Reg* %2693, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %2694 to i64*
  %2695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2696 = getelementptr inbounds %struct.GPR, %struct.GPR* %2695, i32 0, i32 1
  %2697 = getelementptr inbounds %struct.Reg, %struct.Reg* %2696, i32 0, i32 0
  %RAX.i908 = bitcast %union.anon* %2697 to i64*
  %2698 = load i64, i64* %PC.i907
  %2699 = add i64 %2698, 10
  store i64 %2699, i64* %PC.i907
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i908, align 8
  store %struct.Memory* %loadMem_47d3e9, %struct.Memory** %MEMORY
  %loadMem_47d3f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2701 = getelementptr inbounds %struct.GPR, %struct.GPR* %2700, i32 0, i32 33
  %2702 = getelementptr inbounds %struct.Reg, %struct.Reg* %2701, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %2702 to i64*
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2704 = getelementptr inbounds %struct.GPR, %struct.GPR* %2703, i32 0, i32 5
  %2705 = getelementptr inbounds %struct.Reg, %struct.Reg* %2704, i32 0, i32 0
  %RCX.i905 = bitcast %union.anon* %2705 to i64*
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2707 = getelementptr inbounds %struct.GPR, %struct.GPR* %2706, i32 0, i32 15
  %2708 = getelementptr inbounds %struct.Reg, %struct.Reg* %2707, i32 0, i32 0
  %RBP.i906 = bitcast %union.anon* %2708 to i64*
  %2709 = load i64, i64* %RBP.i906
  %2710 = sub i64 %2709, 40
  %2711 = load i64, i64* %PC.i904
  %2712 = add i64 %2711, 4
  store i64 %2712, i64* %PC.i904
  %2713 = inttoptr i64 %2710 to i32*
  %2714 = load i32, i32* %2713
  %2715 = sext i32 %2714 to i64
  store i64 %2715, i64* %RCX.i905, align 8
  store %struct.Memory* %loadMem_47d3f3, %struct.Memory** %MEMORY
  %loadMem_47d3f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2717 = getelementptr inbounds %struct.GPR, %struct.GPR* %2716, i32 0, i32 33
  %2718 = getelementptr inbounds %struct.Reg, %struct.Reg* %2717, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %2718 to i64*
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2720 = getelementptr inbounds %struct.GPR, %struct.GPR* %2719, i32 0, i32 5
  %2721 = getelementptr inbounds %struct.Reg, %struct.Reg* %2720, i32 0, i32 0
  %RCX.i903 = bitcast %union.anon* %2721 to i64*
  %2722 = load i64, i64* %RCX.i903
  %2723 = load i64, i64* %PC.i902
  %2724 = add i64 %2723, 4
  store i64 %2724, i64* %PC.i902
  %2725 = sext i64 %2722 to i128
  %2726 = and i128 %2725, -18446744073709551616
  %2727 = zext i64 %2722 to i128
  %2728 = or i128 %2726, %2727
  %2729 = mul i128 12, %2728
  %2730 = trunc i128 %2729 to i64
  store i64 %2730, i64* %RCX.i903, align 8
  %2731 = sext i64 %2730 to i128
  %2732 = icmp ne i128 %2731, %2729
  %2733 = zext i1 %2732 to i8
  %2734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2733, i8* %2734, align 1
  %2735 = trunc i128 %2729 to i32
  %2736 = and i32 %2735, 255
  %2737 = call i32 @llvm.ctpop.i32(i32 %2736)
  %2738 = trunc i32 %2737 to i8
  %2739 = and i8 %2738, 1
  %2740 = xor i8 %2739, 1
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2740, i8* %2741, align 1
  %2742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2742, align 1
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2743, align 1
  %2744 = lshr i64 %2730, 63
  %2745 = trunc i64 %2744 to i8
  %2746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2745, i8* %2746, align 1
  %2747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2733, i8* %2747, align 1
  store %struct.Memory* %loadMem_47d3f7, %struct.Memory** %MEMORY
  %loadMem_47d3fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2749 = getelementptr inbounds %struct.GPR, %struct.GPR* %2748, i32 0, i32 33
  %2750 = getelementptr inbounds %struct.Reg, %struct.Reg* %2749, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %2750 to i64*
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2752 = getelementptr inbounds %struct.GPR, %struct.GPR* %2751, i32 0, i32 1
  %2753 = getelementptr inbounds %struct.Reg, %struct.Reg* %2752, i32 0, i32 0
  %RAX.i900 = bitcast %union.anon* %2753 to i64*
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2755 = getelementptr inbounds %struct.GPR, %struct.GPR* %2754, i32 0, i32 5
  %2756 = getelementptr inbounds %struct.Reg, %struct.Reg* %2755, i32 0, i32 0
  %RCX.i901 = bitcast %union.anon* %2756 to i64*
  %2757 = load i64, i64* %RAX.i900
  %2758 = load i64, i64* %RCX.i901
  %2759 = load i64, i64* %PC.i899
  %2760 = add i64 %2759, 3
  store i64 %2760, i64* %PC.i899
  %2761 = add i64 %2758, %2757
  store i64 %2761, i64* %RAX.i900, align 8
  %2762 = icmp ult i64 %2761, %2757
  %2763 = icmp ult i64 %2761, %2758
  %2764 = or i1 %2762, %2763
  %2765 = zext i1 %2764 to i8
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2765, i8* %2766, align 1
  %2767 = trunc i64 %2761 to i32
  %2768 = and i32 %2767, 255
  %2769 = call i32 @llvm.ctpop.i32(i32 %2768)
  %2770 = trunc i32 %2769 to i8
  %2771 = and i8 %2770, 1
  %2772 = xor i8 %2771, 1
  %2773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2772, i8* %2773, align 1
  %2774 = xor i64 %2758, %2757
  %2775 = xor i64 %2774, %2761
  %2776 = lshr i64 %2775, 4
  %2777 = trunc i64 %2776 to i8
  %2778 = and i8 %2777, 1
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2778, i8* %2779, align 1
  %2780 = icmp eq i64 %2761, 0
  %2781 = zext i1 %2780 to i8
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2781, i8* %2782, align 1
  %2783 = lshr i64 %2761, 63
  %2784 = trunc i64 %2783 to i8
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2784, i8* %2785, align 1
  %2786 = lshr i64 %2757, 63
  %2787 = lshr i64 %2758, 63
  %2788 = xor i64 %2783, %2786
  %2789 = xor i64 %2783, %2787
  %2790 = add i64 %2788, %2789
  %2791 = icmp eq i64 %2790, 2
  %2792 = zext i1 %2791 to i8
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2792, i8* %2793, align 1
  store %struct.Memory* %loadMem_47d3fb, %struct.Memory** %MEMORY
  %loadMem_47d3fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2795 = getelementptr inbounds %struct.GPR, %struct.GPR* %2794, i32 0, i32 33
  %2796 = getelementptr inbounds %struct.Reg, %struct.Reg* %2795, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %2796 to i64*
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2798 = getelementptr inbounds %struct.GPR, %struct.GPR* %2797, i32 0, i32 1
  %2799 = getelementptr inbounds %struct.Reg, %struct.Reg* %2798, i32 0, i32 0
  %RAX.i898 = bitcast %union.anon* %2799 to i64*
  %2800 = load i64, i64* %RAX.i898
  %2801 = load i64, i64* %PC.i897
  %2802 = add i64 %2801, 3
  store i64 %2802, i64* %PC.i897
  %2803 = inttoptr i64 %2800 to i32*
  %2804 = load i32, i32* %2803
  %2805 = sub i32 %2804, 14
  %2806 = icmp ult i32 %2804, 14
  %2807 = zext i1 %2806 to i8
  %2808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2807, i8* %2808, align 1
  %2809 = and i32 %2805, 255
  %2810 = call i32 @llvm.ctpop.i32(i32 %2809)
  %2811 = trunc i32 %2810 to i8
  %2812 = and i8 %2811, 1
  %2813 = xor i8 %2812, 1
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2813, i8* %2814, align 1
  %2815 = xor i32 %2804, 14
  %2816 = xor i32 %2815, %2805
  %2817 = lshr i32 %2816, 4
  %2818 = trunc i32 %2817 to i8
  %2819 = and i8 %2818, 1
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2819, i8* %2820, align 1
  %2821 = icmp eq i32 %2805, 0
  %2822 = zext i1 %2821 to i8
  %2823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2822, i8* %2823, align 1
  %2824 = lshr i32 %2805, 31
  %2825 = trunc i32 %2824 to i8
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2825, i8* %2826, align 1
  %2827 = lshr i32 %2804, 31
  %2828 = xor i32 %2824, %2827
  %2829 = add i32 %2828, %2827
  %2830 = icmp eq i32 %2829, 2
  %2831 = zext i1 %2830 to i8
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2831, i8* %2832, align 1
  store %struct.Memory* %loadMem_47d3fe, %struct.Memory** %MEMORY
  %loadMem_47d401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2834 = getelementptr inbounds %struct.GPR, %struct.GPR* %2833, i32 0, i32 33
  %2835 = getelementptr inbounds %struct.Reg, %struct.Reg* %2834, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %2835 to i64*
  %2836 = load i64, i64* %PC.i896
  %2837 = add i64 %2836, 105
  %2838 = load i64, i64* %PC.i896
  %2839 = add i64 %2838, 6
  %2840 = load i64, i64* %PC.i896
  %2841 = add i64 %2840, 6
  store i64 %2841, i64* %PC.i896
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2843 = load i8, i8* %2842, align 1
  %2844 = icmp eq i8 %2843, 0
  %2845 = zext i1 %2844 to i8
  store i8 %2845, i8* %BRANCH_TAKEN, align 1
  %2846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2847 = select i1 %2844, i64 %2837, i64 %2839
  store i64 %2847, i64* %2846, align 8
  store %struct.Memory* %loadMem_47d401, %struct.Memory** %MEMORY
  %loadBr_47d401 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d401 = icmp eq i8 %loadBr_47d401, 1
  br i1 %cmpBr_47d401, label %block_.L_47d46a, label %block_47d407

block_47d407:                                     ; preds = %block_.L_47d3e9
  %loadMem_47d407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2849 = getelementptr inbounds %struct.GPR, %struct.GPR* %2848, i32 0, i32 33
  %2850 = getelementptr inbounds %struct.Reg, %struct.Reg* %2849, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %2850 to i64*
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2852 = getelementptr inbounds %struct.GPR, %struct.GPR* %2851, i32 0, i32 1
  %2853 = getelementptr inbounds %struct.Reg, %struct.Reg* %2852, i32 0, i32 0
  %RAX.i895 = bitcast %union.anon* %2853 to i64*
  %2854 = load i64, i64* %PC.i894
  %2855 = add i64 %2854, 10
  store i64 %2855, i64* %PC.i894
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i895, align 8
  store %struct.Memory* %loadMem_47d407, %struct.Memory** %MEMORY
  %loadMem_47d411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2857 = getelementptr inbounds %struct.GPR, %struct.GPR* %2856, i32 0, i32 33
  %2858 = getelementptr inbounds %struct.Reg, %struct.Reg* %2857, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %2858 to i64*
  %2859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2860 = getelementptr inbounds %struct.GPR, %struct.GPR* %2859, i32 0, i32 5
  %2861 = getelementptr inbounds %struct.Reg, %struct.Reg* %2860, i32 0, i32 0
  %RCX.i892 = bitcast %union.anon* %2861 to i64*
  %2862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2863 = getelementptr inbounds %struct.GPR, %struct.GPR* %2862, i32 0, i32 15
  %2864 = getelementptr inbounds %struct.Reg, %struct.Reg* %2863, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %2864 to i64*
  %2865 = load i64, i64* %RBP.i893
  %2866 = sub i64 %2865, 44
  %2867 = load i64, i64* %PC.i891
  %2868 = add i64 %2867, 4
  store i64 %2868, i64* %PC.i891
  %2869 = inttoptr i64 %2866 to i32*
  %2870 = load i32, i32* %2869
  %2871 = sext i32 %2870 to i64
  store i64 %2871, i64* %RCX.i892, align 8
  store %struct.Memory* %loadMem_47d411, %struct.Memory** %MEMORY
  %loadMem_47d415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2873 = getelementptr inbounds %struct.GPR, %struct.GPR* %2872, i32 0, i32 33
  %2874 = getelementptr inbounds %struct.Reg, %struct.Reg* %2873, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %2874 to i64*
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2876 = getelementptr inbounds %struct.GPR, %struct.GPR* %2875, i32 0, i32 5
  %2877 = getelementptr inbounds %struct.Reg, %struct.Reg* %2876, i32 0, i32 0
  %RCX.i889 = bitcast %union.anon* %2877 to i64*
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2879 = getelementptr inbounds %struct.GPR, %struct.GPR* %2878, i32 0, i32 7
  %2880 = getelementptr inbounds %struct.Reg, %struct.Reg* %2879, i32 0, i32 0
  %RDX.i890 = bitcast %union.anon* %2880 to i64*
  %2881 = load i64, i64* %RCX.i889
  %2882 = mul i64 %2881, 4
  %2883 = add i64 %2882, 12099600
  %2884 = load i64, i64* %PC.i888
  %2885 = add i64 %2884, 7
  store i64 %2885, i64* %PC.i888
  %2886 = inttoptr i64 %2883 to i32*
  %2887 = load i32, i32* %2886
  %2888 = zext i32 %2887 to i64
  store i64 %2888, i64* %RDX.i890, align 8
  store %struct.Memory* %loadMem_47d415, %struct.Memory** %MEMORY
  %loadMem_47d41c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2890 = getelementptr inbounds %struct.GPR, %struct.GPR* %2889, i32 0, i32 33
  %2891 = getelementptr inbounds %struct.Reg, %struct.Reg* %2890, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %2891 to i64*
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2893 = getelementptr inbounds %struct.GPR, %struct.GPR* %2892, i32 0, i32 7
  %2894 = getelementptr inbounds %struct.Reg, %struct.Reg* %2893, i32 0, i32 0
  %EDX.i886 = bitcast %union.anon* %2894 to i32*
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2896 = getelementptr inbounds %struct.GPR, %struct.GPR* %2895, i32 0, i32 15
  %2897 = getelementptr inbounds %struct.Reg, %struct.Reg* %2896, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %2897 to i64*
  %2898 = load i64, i64* %RBP.i887
  %2899 = sub i64 %2898, 56
  %2900 = load i32, i32* %EDX.i886
  %2901 = zext i32 %2900 to i64
  %2902 = load i64, i64* %PC.i885
  %2903 = add i64 %2902, 3
  store i64 %2903, i64* %PC.i885
  %2904 = inttoptr i64 %2899 to i32*
  store i32 %2900, i32* %2904
  store %struct.Memory* %loadMem_47d41c, %struct.Memory** %MEMORY
  %loadMem_47d41f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2906 = getelementptr inbounds %struct.GPR, %struct.GPR* %2905, i32 0, i32 33
  %2907 = getelementptr inbounds %struct.Reg, %struct.Reg* %2906, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %2907 to i64*
  %2908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2909 = getelementptr inbounds %struct.GPR, %struct.GPR* %2908, i32 0, i32 5
  %2910 = getelementptr inbounds %struct.Reg, %struct.Reg* %2909, i32 0, i32 0
  %RCX.i883 = bitcast %union.anon* %2910 to i64*
  %2911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2912 = getelementptr inbounds %struct.GPR, %struct.GPR* %2911, i32 0, i32 15
  %2913 = getelementptr inbounds %struct.Reg, %struct.Reg* %2912, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %2913 to i64*
  %2914 = load i64, i64* %RBP.i884
  %2915 = sub i64 %2914, 44
  %2916 = load i64, i64* %PC.i882
  %2917 = add i64 %2916, 4
  store i64 %2917, i64* %PC.i882
  %2918 = inttoptr i64 %2915 to i32*
  %2919 = load i32, i32* %2918
  %2920 = sext i32 %2919 to i64
  store i64 %2920, i64* %RCX.i883, align 8
  store %struct.Memory* %loadMem_47d41f, %struct.Memory** %MEMORY
  %loadMem_47d423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2922 = getelementptr inbounds %struct.GPR, %struct.GPR* %2921, i32 0, i32 33
  %2923 = getelementptr inbounds %struct.Reg, %struct.Reg* %2922, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %2923 to i64*
  %2924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2925 = getelementptr inbounds %struct.GPR, %struct.GPR* %2924, i32 0, i32 5
  %2926 = getelementptr inbounds %struct.Reg, %struct.Reg* %2925, i32 0, i32 0
  %RCX.i880 = bitcast %union.anon* %2926 to i64*
  %2927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2928 = getelementptr inbounds %struct.GPR, %struct.GPR* %2927, i32 0, i32 7
  %2929 = getelementptr inbounds %struct.Reg, %struct.Reg* %2928, i32 0, i32 0
  %RDX.i881 = bitcast %union.anon* %2929 to i64*
  %2930 = load i64, i64* %RCX.i880
  %2931 = mul i64 %2930, 4
  %2932 = add i64 %2931, 11555248
  %2933 = load i64, i64* %PC.i879
  %2934 = add i64 %2933, 7
  store i64 %2934, i64* %PC.i879
  %2935 = inttoptr i64 %2932 to i32*
  %2936 = load i32, i32* %2935
  %2937 = zext i32 %2936 to i64
  store i64 %2937, i64* %RDX.i881, align 8
  store %struct.Memory* %loadMem_47d423, %struct.Memory** %MEMORY
  %loadMem_47d42a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2939 = getelementptr inbounds %struct.GPR, %struct.GPR* %2938, i32 0, i32 33
  %2940 = getelementptr inbounds %struct.Reg, %struct.Reg* %2939, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %2940 to i64*
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2942 = getelementptr inbounds %struct.GPR, %struct.GPR* %2941, i32 0, i32 7
  %2943 = getelementptr inbounds %struct.Reg, %struct.Reg* %2942, i32 0, i32 0
  %EDX.i877 = bitcast %union.anon* %2943 to i32*
  %2944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2945 = getelementptr inbounds %struct.GPR, %struct.GPR* %2944, i32 0, i32 15
  %2946 = getelementptr inbounds %struct.Reg, %struct.Reg* %2945, i32 0, i32 0
  %RBP.i878 = bitcast %union.anon* %2946 to i64*
  %2947 = load i64, i64* %RBP.i878
  %2948 = sub i64 %2947, 60
  %2949 = load i32, i32* %EDX.i877
  %2950 = zext i32 %2949 to i64
  %2951 = load i64, i64* %PC.i876
  %2952 = add i64 %2951, 3
  store i64 %2952, i64* %PC.i876
  %2953 = inttoptr i64 %2948 to i32*
  store i32 %2949, i32* %2953
  store %struct.Memory* %loadMem_47d42a, %struct.Memory** %MEMORY
  %loadMem_47d42d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2955 = getelementptr inbounds %struct.GPR, %struct.GPR* %2954, i32 0, i32 33
  %2956 = getelementptr inbounds %struct.Reg, %struct.Reg* %2955, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %2956 to i64*
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2958 = getelementptr inbounds %struct.GPR, %struct.GPR* %2957, i32 0, i32 5
  %2959 = getelementptr inbounds %struct.Reg, %struct.Reg* %2958, i32 0, i32 0
  %RCX.i874 = bitcast %union.anon* %2959 to i64*
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2961 = getelementptr inbounds %struct.GPR, %struct.GPR* %2960, i32 0, i32 15
  %2962 = getelementptr inbounds %struct.Reg, %struct.Reg* %2961, i32 0, i32 0
  %RBP.i875 = bitcast %union.anon* %2962 to i64*
  %2963 = load i64, i64* %RBP.i875
  %2964 = sub i64 %2963, 56
  %2965 = load i64, i64* %PC.i873
  %2966 = add i64 %2965, 4
  store i64 %2966, i64* %PC.i873
  %2967 = inttoptr i64 %2964 to i32*
  %2968 = load i32, i32* %2967
  %2969 = sext i32 %2968 to i64
  store i64 %2969, i64* %RCX.i874, align 8
  store %struct.Memory* %loadMem_47d42d, %struct.Memory** %MEMORY
  %loadMem_47d431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2971 = getelementptr inbounds %struct.GPR, %struct.GPR* %2970, i32 0, i32 33
  %2972 = getelementptr inbounds %struct.Reg, %struct.Reg* %2971, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %2972 to i64*
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2974 = getelementptr inbounds %struct.GPR, %struct.GPR* %2973, i32 0, i32 5
  %2975 = getelementptr inbounds %struct.Reg, %struct.Reg* %2974, i32 0, i32 0
  %RCX.i872 = bitcast %union.anon* %2975 to i64*
  %2976 = load i64, i64* %RCX.i872
  %2977 = load i64, i64* %PC.i871
  %2978 = add i64 %2977, 4
  store i64 %2978, i64* %PC.i871
  %2979 = sext i64 %2976 to i128
  %2980 = and i128 %2979, -18446744073709551616
  %2981 = zext i64 %2976 to i128
  %2982 = or i128 %2980, %2981
  %2983 = mul i128 76, %2982
  %2984 = trunc i128 %2983 to i64
  store i64 %2984, i64* %RCX.i872, align 8
  %2985 = sext i64 %2984 to i128
  %2986 = icmp ne i128 %2985, %2983
  %2987 = zext i1 %2986 to i8
  %2988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2987, i8* %2988, align 1
  %2989 = trunc i128 %2983 to i32
  %2990 = and i32 %2989, 255
  %2991 = call i32 @llvm.ctpop.i32(i32 %2990)
  %2992 = trunc i32 %2991 to i8
  %2993 = and i8 %2992, 1
  %2994 = xor i8 %2993, 1
  %2995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2994, i8* %2995, align 1
  %2996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2996, align 1
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2997, align 1
  %2998 = lshr i64 %2984, 63
  %2999 = trunc i64 %2998 to i8
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2999, i8* %3000, align 1
  %3001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2987, i8* %3001, align 1
  store %struct.Memory* %loadMem_47d431, %struct.Memory** %MEMORY
  %loadMem_47d435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3003 = getelementptr inbounds %struct.GPR, %struct.GPR* %3002, i32 0, i32 33
  %3004 = getelementptr inbounds %struct.Reg, %struct.Reg* %3003, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %3004 to i64*
  %3005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3006 = getelementptr inbounds %struct.GPR, %struct.GPR* %3005, i32 0, i32 1
  %3007 = getelementptr inbounds %struct.Reg, %struct.Reg* %3006, i32 0, i32 0
  %RAX.i869 = bitcast %union.anon* %3007 to i64*
  %3008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3009 = getelementptr inbounds %struct.GPR, %struct.GPR* %3008, i32 0, i32 9
  %3010 = getelementptr inbounds %struct.Reg, %struct.Reg* %3009, i32 0, i32 0
  %RSI.i870 = bitcast %union.anon* %3010 to i64*
  %3011 = load i64, i64* %RAX.i869
  %3012 = load i64, i64* %PC.i868
  %3013 = add i64 %3012, 3
  store i64 %3013, i64* %PC.i868
  store i64 %3011, i64* %RSI.i870, align 8
  store %struct.Memory* %loadMem_47d435, %struct.Memory** %MEMORY
  %loadMem_47d438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3015 = getelementptr inbounds %struct.GPR, %struct.GPR* %3014, i32 0, i32 33
  %3016 = getelementptr inbounds %struct.Reg, %struct.Reg* %3015, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %3016 to i64*
  %3017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3018 = getelementptr inbounds %struct.GPR, %struct.GPR* %3017, i32 0, i32 5
  %3019 = getelementptr inbounds %struct.Reg, %struct.Reg* %3018, i32 0, i32 0
  %RCX.i866 = bitcast %union.anon* %3019 to i64*
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3021 = getelementptr inbounds %struct.GPR, %struct.GPR* %3020, i32 0, i32 9
  %3022 = getelementptr inbounds %struct.Reg, %struct.Reg* %3021, i32 0, i32 0
  %RSI.i867 = bitcast %union.anon* %3022 to i64*
  %3023 = load i64, i64* %RSI.i867
  %3024 = load i64, i64* %RCX.i866
  %3025 = load i64, i64* %PC.i865
  %3026 = add i64 %3025, 3
  store i64 %3026, i64* %PC.i865
  %3027 = add i64 %3024, %3023
  store i64 %3027, i64* %RSI.i867, align 8
  %3028 = icmp ult i64 %3027, %3023
  %3029 = icmp ult i64 %3027, %3024
  %3030 = or i1 %3028, %3029
  %3031 = zext i1 %3030 to i8
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3031, i8* %3032, align 1
  %3033 = trunc i64 %3027 to i32
  %3034 = and i32 %3033, 255
  %3035 = call i32 @llvm.ctpop.i32(i32 %3034)
  %3036 = trunc i32 %3035 to i8
  %3037 = and i8 %3036, 1
  %3038 = xor i8 %3037, 1
  %3039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3038, i8* %3039, align 1
  %3040 = xor i64 %3024, %3023
  %3041 = xor i64 %3040, %3027
  %3042 = lshr i64 %3041, 4
  %3043 = trunc i64 %3042 to i8
  %3044 = and i8 %3043, 1
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3044, i8* %3045, align 1
  %3046 = icmp eq i64 %3027, 0
  %3047 = zext i1 %3046 to i8
  %3048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3047, i8* %3048, align 1
  %3049 = lshr i64 %3027, 63
  %3050 = trunc i64 %3049 to i8
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3050, i8* %3051, align 1
  %3052 = lshr i64 %3023, 63
  %3053 = lshr i64 %3024, 63
  %3054 = xor i64 %3049, %3052
  %3055 = xor i64 %3049, %3053
  %3056 = add i64 %3054, %3055
  %3057 = icmp eq i64 %3056, 2
  %3058 = zext i1 %3057 to i8
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3058, i8* %3059, align 1
  store %struct.Memory* %loadMem_47d438, %struct.Memory** %MEMORY
  %loadMem_47d43b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3061 = getelementptr inbounds %struct.GPR, %struct.GPR* %3060, i32 0, i32 33
  %3062 = getelementptr inbounds %struct.Reg, %struct.Reg* %3061, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %3062 to i64*
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3064 = getelementptr inbounds %struct.GPR, %struct.GPR* %3063, i32 0, i32 7
  %3065 = getelementptr inbounds %struct.Reg, %struct.Reg* %3064, i32 0, i32 0
  %RDX.i863 = bitcast %union.anon* %3065 to i64*
  %3066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3067 = getelementptr inbounds %struct.GPR, %struct.GPR* %3066, i32 0, i32 9
  %3068 = getelementptr inbounds %struct.Reg, %struct.Reg* %3067, i32 0, i32 0
  %RSI.i864 = bitcast %union.anon* %3068 to i64*
  %3069 = load i64, i64* %RSI.i864
  %3070 = add i64 %3069, 8
  %3071 = load i64, i64* %PC.i862
  %3072 = add i64 %3071, 3
  store i64 %3072, i64* %PC.i862
  %3073 = inttoptr i64 %3070 to i32*
  %3074 = load i32, i32* %3073
  %3075 = zext i32 %3074 to i64
  store i64 %3075, i64* %RDX.i863, align 8
  store %struct.Memory* %loadMem_47d43b, %struct.Memory** %MEMORY
  %loadMem_47d43e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3077 = getelementptr inbounds %struct.GPR, %struct.GPR* %3076, i32 0, i32 33
  %3078 = getelementptr inbounds %struct.Reg, %struct.Reg* %3077, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %3078 to i64*
  %3079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3080 = getelementptr inbounds %struct.GPR, %struct.GPR* %3079, i32 0, i32 7
  %3081 = getelementptr inbounds %struct.Reg, %struct.Reg* %3080, i32 0, i32 0
  %EDX.i860 = bitcast %union.anon* %3081 to i32*
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3083 = getelementptr inbounds %struct.GPR, %struct.GPR* %3082, i32 0, i32 15
  %3084 = getelementptr inbounds %struct.Reg, %struct.Reg* %3083, i32 0, i32 0
  %RBP.i861 = bitcast %union.anon* %3084 to i64*
  %3085 = load i64, i64* %RBP.i861
  %3086 = sub i64 %3085, 24
  %3087 = load i32, i32* %EDX.i860
  %3088 = zext i32 %3087 to i64
  %3089 = load i64, i64* %PC.i859
  %3090 = add i64 %3089, 3
  store i64 %3090, i64* %PC.i859
  %3091 = inttoptr i64 %3086 to i32*
  store i32 %3087, i32* %3091
  store %struct.Memory* %loadMem_47d43e, %struct.Memory** %MEMORY
  %loadMem_47d441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3093 = getelementptr inbounds %struct.GPR, %struct.GPR* %3092, i32 0, i32 33
  %3094 = getelementptr inbounds %struct.Reg, %struct.Reg* %3093, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %3094 to i64*
  %3095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3096 = getelementptr inbounds %struct.GPR, %struct.GPR* %3095, i32 0, i32 5
  %3097 = getelementptr inbounds %struct.Reg, %struct.Reg* %3096, i32 0, i32 0
  %RCX.i857 = bitcast %union.anon* %3097 to i64*
  %3098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3099 = getelementptr inbounds %struct.GPR, %struct.GPR* %3098, i32 0, i32 15
  %3100 = getelementptr inbounds %struct.Reg, %struct.Reg* %3099, i32 0, i32 0
  %RBP.i858 = bitcast %union.anon* %3100 to i64*
  %3101 = load i64, i64* %RBP.i858
  %3102 = sub i64 %3101, 60
  %3103 = load i64, i64* %PC.i856
  %3104 = add i64 %3103, 4
  store i64 %3104, i64* %PC.i856
  %3105 = inttoptr i64 %3102 to i32*
  %3106 = load i32, i32* %3105
  %3107 = sext i32 %3106 to i64
  store i64 %3107, i64* %RCX.i857, align 8
  store %struct.Memory* %loadMem_47d441, %struct.Memory** %MEMORY
  %loadMem_47d445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3109 = getelementptr inbounds %struct.GPR, %struct.GPR* %3108, i32 0, i32 33
  %3110 = getelementptr inbounds %struct.Reg, %struct.Reg* %3109, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %3110 to i64*
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3112 = getelementptr inbounds %struct.GPR, %struct.GPR* %3111, i32 0, i32 5
  %3113 = getelementptr inbounds %struct.Reg, %struct.Reg* %3112, i32 0, i32 0
  %RCX.i855 = bitcast %union.anon* %3113 to i64*
  %3114 = load i64, i64* %RCX.i855
  %3115 = load i64, i64* %PC.i854
  %3116 = add i64 %3115, 4
  store i64 %3116, i64* %PC.i854
  %3117 = sext i64 %3114 to i128
  %3118 = and i128 %3117, -18446744073709551616
  %3119 = zext i64 %3114 to i128
  %3120 = or i128 %3118, %3119
  %3121 = mul i128 76, %3120
  %3122 = trunc i128 %3121 to i64
  store i64 %3122, i64* %RCX.i855, align 8
  %3123 = sext i64 %3122 to i128
  %3124 = icmp ne i128 %3123, %3121
  %3125 = zext i1 %3124 to i8
  %3126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3125, i8* %3126, align 1
  %3127 = trunc i128 %3121 to i32
  %3128 = and i32 %3127, 255
  %3129 = call i32 @llvm.ctpop.i32(i32 %3128)
  %3130 = trunc i32 %3129 to i8
  %3131 = and i8 %3130, 1
  %3132 = xor i8 %3131, 1
  %3133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3132, i8* %3133, align 1
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3134, align 1
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3135, align 1
  %3136 = lshr i64 %3122, 63
  %3137 = trunc i64 %3136 to i8
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3137, i8* %3138, align 1
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3125, i8* %3139, align 1
  store %struct.Memory* %loadMem_47d445, %struct.Memory** %MEMORY
  %loadMem_47d449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3141 = getelementptr inbounds %struct.GPR, %struct.GPR* %3140, i32 0, i32 33
  %3142 = getelementptr inbounds %struct.Reg, %struct.Reg* %3141, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %3142 to i64*
  %3143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3144 = getelementptr inbounds %struct.GPR, %struct.GPR* %3143, i32 0, i32 1
  %3145 = getelementptr inbounds %struct.Reg, %struct.Reg* %3144, i32 0, i32 0
  %RAX.i852 = bitcast %union.anon* %3145 to i64*
  %3146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3147 = getelementptr inbounds %struct.GPR, %struct.GPR* %3146, i32 0, i32 5
  %3148 = getelementptr inbounds %struct.Reg, %struct.Reg* %3147, i32 0, i32 0
  %RCX.i853 = bitcast %union.anon* %3148 to i64*
  %3149 = load i64, i64* %RAX.i852
  %3150 = load i64, i64* %RCX.i853
  %3151 = load i64, i64* %PC.i851
  %3152 = add i64 %3151, 3
  store i64 %3152, i64* %PC.i851
  %3153 = add i64 %3150, %3149
  store i64 %3153, i64* %RAX.i852, align 8
  %3154 = icmp ult i64 %3153, %3149
  %3155 = icmp ult i64 %3153, %3150
  %3156 = or i1 %3154, %3155
  %3157 = zext i1 %3156 to i8
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3157, i8* %3158, align 1
  %3159 = trunc i64 %3153 to i32
  %3160 = and i32 %3159, 255
  %3161 = call i32 @llvm.ctpop.i32(i32 %3160)
  %3162 = trunc i32 %3161 to i8
  %3163 = and i8 %3162, 1
  %3164 = xor i8 %3163, 1
  %3165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3164, i8* %3165, align 1
  %3166 = xor i64 %3150, %3149
  %3167 = xor i64 %3166, %3153
  %3168 = lshr i64 %3167, 4
  %3169 = trunc i64 %3168 to i8
  %3170 = and i8 %3169, 1
  %3171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3170, i8* %3171, align 1
  %3172 = icmp eq i64 %3153, 0
  %3173 = zext i1 %3172 to i8
  %3174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3173, i8* %3174, align 1
  %3175 = lshr i64 %3153, 63
  %3176 = trunc i64 %3175 to i8
  %3177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3176, i8* %3177, align 1
  %3178 = lshr i64 %3149, 63
  %3179 = lshr i64 %3150, 63
  %3180 = xor i64 %3175, %3178
  %3181 = xor i64 %3175, %3179
  %3182 = add i64 %3180, %3181
  %3183 = icmp eq i64 %3182, 2
  %3184 = zext i1 %3183 to i8
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3184, i8* %3185, align 1
  store %struct.Memory* %loadMem_47d449, %struct.Memory** %MEMORY
  %loadMem_47d44c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3187 = getelementptr inbounds %struct.GPR, %struct.GPR* %3186, i32 0, i32 33
  %3188 = getelementptr inbounds %struct.Reg, %struct.Reg* %3187, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %3188 to i64*
  %3189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3190 = getelementptr inbounds %struct.GPR, %struct.GPR* %3189, i32 0, i32 1
  %3191 = getelementptr inbounds %struct.Reg, %struct.Reg* %3190, i32 0, i32 0
  %RAX.i849 = bitcast %union.anon* %3191 to i64*
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3193 = getelementptr inbounds %struct.GPR, %struct.GPR* %3192, i32 0, i32 7
  %3194 = getelementptr inbounds %struct.Reg, %struct.Reg* %3193, i32 0, i32 0
  %RDX.i850 = bitcast %union.anon* %3194 to i64*
  %3195 = load i64, i64* %RAX.i849
  %3196 = add i64 %3195, 8
  %3197 = load i64, i64* %PC.i848
  %3198 = add i64 %3197, 3
  store i64 %3198, i64* %PC.i848
  %3199 = inttoptr i64 %3196 to i32*
  %3200 = load i32, i32* %3199
  %3201 = zext i32 %3200 to i64
  store i64 %3201, i64* %RDX.i850, align 8
  store %struct.Memory* %loadMem_47d44c, %struct.Memory** %MEMORY
  %loadMem_47d44f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3203 = getelementptr inbounds %struct.GPR, %struct.GPR* %3202, i32 0, i32 33
  %3204 = getelementptr inbounds %struct.Reg, %struct.Reg* %3203, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %3204 to i64*
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3206 = getelementptr inbounds %struct.GPR, %struct.GPR* %3205, i32 0, i32 7
  %3207 = getelementptr inbounds %struct.Reg, %struct.Reg* %3206, i32 0, i32 0
  %EDX.i846 = bitcast %union.anon* %3207 to i32*
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3209 = getelementptr inbounds %struct.GPR, %struct.GPR* %3208, i32 0, i32 15
  %3210 = getelementptr inbounds %struct.Reg, %struct.Reg* %3209, i32 0, i32 0
  %RBP.i847 = bitcast %union.anon* %3210 to i64*
  %3211 = load i64, i64* %RBP.i847
  %3212 = sub i64 %3211, 28
  %3213 = load i32, i32* %EDX.i846
  %3214 = zext i32 %3213 to i64
  %3215 = load i64, i64* %PC.i845
  %3216 = add i64 %3215, 3
  store i64 %3216, i64* %PC.i845
  %3217 = inttoptr i64 %3212 to i32*
  store i32 %3213, i32* %3217
  store %struct.Memory* %loadMem_47d44f, %struct.Memory** %MEMORY
  %loadMem_47d452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3219 = getelementptr inbounds %struct.GPR, %struct.GPR* %3218, i32 0, i32 33
  %3220 = getelementptr inbounds %struct.Reg, %struct.Reg* %3219, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %3220 to i64*
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3222 = getelementptr inbounds %struct.GPR, %struct.GPR* %3221, i32 0, i32 7
  %3223 = getelementptr inbounds %struct.Reg, %struct.Reg* %3222, i32 0, i32 0
  %RDX.i843 = bitcast %union.anon* %3223 to i64*
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3225 = getelementptr inbounds %struct.GPR, %struct.GPR* %3224, i32 0, i32 15
  %3226 = getelementptr inbounds %struct.Reg, %struct.Reg* %3225, i32 0, i32 0
  %RBP.i844 = bitcast %union.anon* %3226 to i64*
  %3227 = load i64, i64* %RBP.i844
  %3228 = sub i64 %3227, 24
  %3229 = load i64, i64* %PC.i842
  %3230 = add i64 %3229, 3
  store i64 %3230, i64* %PC.i842
  %3231 = inttoptr i64 %3228 to i32*
  %3232 = load i32, i32* %3231
  %3233 = zext i32 %3232 to i64
  store i64 %3233, i64* %RDX.i843, align 8
  store %struct.Memory* %loadMem_47d452, %struct.Memory** %MEMORY
  %loadMem_47d455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3235 = getelementptr inbounds %struct.GPR, %struct.GPR* %3234, i32 0, i32 33
  %3236 = getelementptr inbounds %struct.Reg, %struct.Reg* %3235, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %3236 to i64*
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3238 = getelementptr inbounds %struct.GPR, %struct.GPR* %3237, i32 0, i32 7
  %3239 = getelementptr inbounds %struct.Reg, %struct.Reg* %3238, i32 0, i32 0
  %EDX.i840 = bitcast %union.anon* %3239 to i32*
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3241 = getelementptr inbounds %struct.GPR, %struct.GPR* %3240, i32 0, i32 15
  %3242 = getelementptr inbounds %struct.Reg, %struct.Reg* %3241, i32 0, i32 0
  %RBP.i841 = bitcast %union.anon* %3242 to i64*
  %3243 = load i32, i32* %EDX.i840
  %3244 = zext i32 %3243 to i64
  %3245 = load i64, i64* %RBP.i841
  %3246 = sub i64 %3245, 28
  %3247 = load i64, i64* %PC.i839
  %3248 = add i64 %3247, 3
  store i64 %3248, i64* %PC.i839
  %3249 = inttoptr i64 %3246 to i32*
  %3250 = load i32, i32* %3249
  %3251 = sub i32 %3243, %3250
  %3252 = icmp ult i32 %3243, %3250
  %3253 = zext i1 %3252 to i8
  %3254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3253, i8* %3254, align 1
  %3255 = and i32 %3251, 255
  %3256 = call i32 @llvm.ctpop.i32(i32 %3255)
  %3257 = trunc i32 %3256 to i8
  %3258 = and i8 %3257, 1
  %3259 = xor i8 %3258, 1
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3259, i8* %3260, align 1
  %3261 = xor i32 %3250, %3243
  %3262 = xor i32 %3261, %3251
  %3263 = lshr i32 %3262, 4
  %3264 = trunc i32 %3263 to i8
  %3265 = and i8 %3264, 1
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3265, i8* %3266, align 1
  %3267 = icmp eq i32 %3251, 0
  %3268 = zext i1 %3267 to i8
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3268, i8* %3269, align 1
  %3270 = lshr i32 %3251, 31
  %3271 = trunc i32 %3270 to i8
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3271, i8* %3272, align 1
  %3273 = lshr i32 %3243, 31
  %3274 = lshr i32 %3250, 31
  %3275 = xor i32 %3274, %3273
  %3276 = xor i32 %3270, %3273
  %3277 = add i32 %3276, %3275
  %3278 = icmp eq i32 %3277, 2
  %3279 = zext i1 %3278 to i8
  %3280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3279, i8* %3280, align 1
  store %struct.Memory* %loadMem_47d455, %struct.Memory** %MEMORY
  %loadMem_47d458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3282 = getelementptr inbounds %struct.GPR, %struct.GPR* %3281, i32 0, i32 33
  %3283 = getelementptr inbounds %struct.Reg, %struct.Reg* %3282, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %3283 to i64*
  %3284 = load i64, i64* %PC.i838
  %3285 = add i64 %3284, 13
  %3286 = load i64, i64* %PC.i838
  %3287 = add i64 %3286, 6
  %3288 = load i64, i64* %PC.i838
  %3289 = add i64 %3288, 6
  store i64 %3289, i64* %PC.i838
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3291 = load i8, i8* %3290, align 1
  %3292 = icmp eq i8 %3291, 0
  %3293 = zext i1 %3292 to i8
  store i8 %3293, i8* %BRANCH_TAKEN, align 1
  %3294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3295 = select i1 %3292, i64 %3285, i64 %3287
  store i64 %3295, i64* %3294, align 8
  store %struct.Memory* %loadMem_47d458, %struct.Memory** %MEMORY
  %loadBr_47d458 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d458 = icmp eq i8 %loadBr_47d458, 1
  br i1 %cmpBr_47d458, label %block_.L_47d465, label %block_47d45e

block_47d45e:                                     ; preds = %block_47d407
  %loadMem_47d45e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3297 = getelementptr inbounds %struct.GPR, %struct.GPR* %3296, i32 0, i32 33
  %3298 = getelementptr inbounds %struct.Reg, %struct.Reg* %3297, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %3298 to i64*
  %3299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3300 = getelementptr inbounds %struct.GPR, %struct.GPR* %3299, i32 0, i32 15
  %3301 = getelementptr inbounds %struct.Reg, %struct.Reg* %3300, i32 0, i32 0
  %RBP.i837 = bitcast %union.anon* %3301 to i64*
  %3302 = load i64, i64* %RBP.i837
  %3303 = sub i64 %3302, 28
  %3304 = load i64, i64* %PC.i836
  %3305 = add i64 %3304, 7
  store i64 %3305, i64* %PC.i836
  %3306 = inttoptr i64 %3303 to i32*
  store i32 0, i32* %3306
  store %struct.Memory* %loadMem_47d45e, %struct.Memory** %MEMORY
  br label %block_.L_47d465

block_.L_47d465:                                  ; preds = %block_47d45e, %block_47d407
  %loadMem_47d465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3308 = getelementptr inbounds %struct.GPR, %struct.GPR* %3307, i32 0, i32 33
  %3309 = getelementptr inbounds %struct.Reg, %struct.Reg* %3308, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %3309 to i64*
  %3310 = load i64, i64* %PC.i835
  %3311 = add i64 %3310, 10
  %3312 = load i64, i64* %PC.i835
  %3313 = add i64 %3312, 5
  store i64 %3313, i64* %PC.i835
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3311, i64* %3314, align 8
  store %struct.Memory* %loadMem_47d465, %struct.Memory** %MEMORY
  br label %block_.L_47d46f

block_.L_47d46a:                                  ; preds = %block_.L_47d3e9
  %loadMem_47d46a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3316 = getelementptr inbounds %struct.GPR, %struct.GPR* %3315, i32 0, i32 33
  %3317 = getelementptr inbounds %struct.Reg, %struct.Reg* %3316, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %3317 to i64*
  %3318 = load i64, i64* %PC.i834
  %3319 = add i64 %3318, 931
  %3320 = load i64, i64* %PC.i834
  %3321 = add i64 %3320, 5
  store i64 %3321, i64* %PC.i834
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3319, i64* %3322, align 8
  store %struct.Memory* %loadMem_47d46a, %struct.Memory** %MEMORY
  br label %block_.L_47d80d

block_.L_47d46f:                                  ; preds = %block_.L_47d465
  %loadMem_47d46f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3324 = getelementptr inbounds %struct.GPR, %struct.GPR* %3323, i32 0, i32 33
  %3325 = getelementptr inbounds %struct.Reg, %struct.Reg* %3324, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %3325 to i64*
  %3326 = load i64, i64* %PC.i833
  %3327 = add i64 %3326, 5
  %3328 = load i64, i64* %PC.i833
  %3329 = add i64 %3328, 5
  store i64 %3329, i64* %PC.i833
  %3330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3327, i64* %3330, align 8
  store %struct.Memory* %loadMem_47d46f, %struct.Memory** %MEMORY
  br label %block_.L_47d474

block_.L_47d474:                                  ; preds = %block_.L_47d46f, %block_.L_47d3e4
  %loadMem_47d474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3332 = getelementptr inbounds %struct.GPR, %struct.GPR* %3331, i32 0, i32 33
  %3333 = getelementptr inbounds %struct.Reg, %struct.Reg* %3332, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %3333 to i64*
  %3334 = load i64, i64* %PC.i832
  %3335 = add i64 %3334, 5
  %3336 = load i64, i64* %PC.i832
  %3337 = add i64 %3336, 5
  store i64 %3337, i64* %PC.i832
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3335, i64* %3338, align 8
  store %struct.Memory* %loadMem_47d474, %struct.Memory** %MEMORY
  br label %block_.L_47d479

block_.L_47d479:                                  ; preds = %block_.L_47d474, %block_.L_47d33a
  %loadMem_47d479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 33
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %3341 to i64*
  %3342 = load i64, i64* %PC.i831
  %3343 = add i64 %3342, 5
  %3344 = load i64, i64* %PC.i831
  %3345 = add i64 %3344, 5
  store i64 %3345, i64* %PC.i831
  %3346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3343, i64* %3346, align 8
  store %struct.Memory* %loadMem_47d479, %struct.Memory** %MEMORY
  br label %block_.L_47d47e

block_.L_47d47e:                                  ; preds = %block_.L_47d479, %block_.L_47d27b
  %loadMem_47d47e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3348 = getelementptr inbounds %struct.GPR, %struct.GPR* %3347, i32 0, i32 33
  %3349 = getelementptr inbounds %struct.Reg, %struct.Reg* %3348, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %3349 to i64*
  %3350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3351 = getelementptr inbounds %struct.GPR, %struct.GPR* %3350, i32 0, i32 15
  %3352 = getelementptr inbounds %struct.Reg, %struct.Reg* %3351, i32 0, i32 0
  %RBP.i830 = bitcast %union.anon* %3352 to i64*
  %3353 = load i64, i64* %RBP.i830
  %3354 = sub i64 %3353, 20
  %3355 = load i64, i64* %PC.i829
  %3356 = add i64 %3355, 7
  store i64 %3356, i64* %PC.i829
  %3357 = inttoptr i64 %3354 to i32*
  store i32 0, i32* %3357
  store %struct.Memory* %loadMem_47d47e, %struct.Memory** %MEMORY
  br label %block_.L_47d485

block_.L_47d485:                                  ; preds = %block_.L_47d7fa, %block_.L_47d47e
  %loadMem_47d485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3359 = getelementptr inbounds %struct.GPR, %struct.GPR* %3358, i32 0, i32 33
  %3360 = getelementptr inbounds %struct.Reg, %struct.Reg* %3359, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %3360 to i64*
  %3361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3362 = getelementptr inbounds %struct.GPR, %struct.GPR* %3361, i32 0, i32 15
  %3363 = getelementptr inbounds %struct.Reg, %struct.Reg* %3362, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %3363 to i64*
  %3364 = load i64, i64* %RBP.i828
  %3365 = sub i64 %3364, 20
  %3366 = load i64, i64* %PC.i827
  %3367 = add i64 %3366, 4
  store i64 %3367, i64* %PC.i827
  %3368 = inttoptr i64 %3365 to i32*
  %3369 = load i32, i32* %3368
  %3370 = sub i32 %3369, 2
  %3371 = icmp ult i32 %3369, 2
  %3372 = zext i1 %3371 to i8
  %3373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3372, i8* %3373, align 1
  %3374 = and i32 %3370, 255
  %3375 = call i32 @llvm.ctpop.i32(i32 %3374)
  %3376 = trunc i32 %3375 to i8
  %3377 = and i8 %3376, 1
  %3378 = xor i8 %3377, 1
  %3379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3378, i8* %3379, align 1
  %3380 = xor i32 %3369, 2
  %3381 = xor i32 %3380, %3370
  %3382 = lshr i32 %3381, 4
  %3383 = trunc i32 %3382 to i8
  %3384 = and i8 %3383, 1
  %3385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3384, i8* %3385, align 1
  %3386 = icmp eq i32 %3370, 0
  %3387 = zext i1 %3386 to i8
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3387, i8* %3388, align 1
  %3389 = lshr i32 %3370, 31
  %3390 = trunc i32 %3389 to i8
  %3391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3390, i8* %3391, align 1
  %3392 = lshr i32 %3369, 31
  %3393 = xor i32 %3389, %3392
  %3394 = add i32 %3393, %3392
  %3395 = icmp eq i32 %3394, 2
  %3396 = zext i1 %3395 to i8
  %3397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3396, i8* %3397, align 1
  store %struct.Memory* %loadMem_47d485, %struct.Memory** %MEMORY
  %loadMem_47d489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3399 = getelementptr inbounds %struct.GPR, %struct.GPR* %3398, i32 0, i32 33
  %3400 = getelementptr inbounds %struct.Reg, %struct.Reg* %3399, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %3400 to i64*
  %3401 = load i64, i64* %PC.i826
  %3402 = add i64 %3401, 895
  %3403 = load i64, i64* %PC.i826
  %3404 = add i64 %3403, 6
  %3405 = load i64, i64* %PC.i826
  %3406 = add i64 %3405, 6
  store i64 %3406, i64* %PC.i826
  %3407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3408 = load i8, i8* %3407, align 1
  %3409 = icmp ne i8 %3408, 0
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3411 = load i8, i8* %3410, align 1
  %3412 = icmp ne i8 %3411, 0
  %3413 = xor i1 %3409, %3412
  %3414 = xor i1 %3413, true
  %3415 = zext i1 %3414 to i8
  store i8 %3415, i8* %BRANCH_TAKEN, align 1
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3417 = select i1 %3413, i64 %3404, i64 %3402
  store i64 %3417, i64* %3416, align 8
  store %struct.Memory* %loadMem_47d489, %struct.Memory** %MEMORY
  %loadBr_47d489 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d489 = icmp eq i8 %loadBr_47d489, 1
  br i1 %cmpBr_47d489, label %block_.L_47d808, label %block_47d48f

block_47d48f:                                     ; preds = %block_.L_47d485
  %loadMem_47d48f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3419 = getelementptr inbounds %struct.GPR, %struct.GPR* %3418, i32 0, i32 33
  %3420 = getelementptr inbounds %struct.Reg, %struct.Reg* %3419, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %3420 to i64*
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3422 = getelementptr inbounds %struct.GPR, %struct.GPR* %3421, i32 0, i32 15
  %3423 = getelementptr inbounds %struct.Reg, %struct.Reg* %3422, i32 0, i32 0
  %RBP.i825 = bitcast %union.anon* %3423 to i64*
  %3424 = load i64, i64* %RBP.i825
  %3425 = sub i64 %3424, 20
  %3426 = load i64, i64* %PC.i824
  %3427 = add i64 %3426, 4
  store i64 %3427, i64* %PC.i824
  %3428 = inttoptr i64 %3425 to i32*
  %3429 = load i32, i32* %3428
  %3430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3430, align 1
  %3431 = and i32 %3429, 255
  %3432 = call i32 @llvm.ctpop.i32(i32 %3431)
  %3433 = trunc i32 %3432 to i8
  %3434 = and i8 %3433, 1
  %3435 = xor i8 %3434, 1
  %3436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3435, i8* %3436, align 1
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3437, align 1
  %3438 = icmp eq i32 %3429, 0
  %3439 = zext i1 %3438 to i8
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3439, i8* %3440, align 1
  %3441 = lshr i32 %3429, 31
  %3442 = trunc i32 %3441 to i8
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3442, i8* %3443, align 1
  %3444 = lshr i32 %3429, 31
  %3445 = xor i32 %3441, %3444
  %3446 = add i32 %3445, %3444
  %3447 = icmp eq i32 %3446, 2
  %3448 = zext i1 %3447 to i8
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3448, i8* %3449, align 1
  store %struct.Memory* %loadMem_47d48f, %struct.Memory** %MEMORY
  %loadMem_47d493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3451 = getelementptr inbounds %struct.GPR, %struct.GPR* %3450, i32 0, i32 33
  %3452 = getelementptr inbounds %struct.Reg, %struct.Reg* %3451, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %3452 to i64*
  %3453 = load i64, i64* %PC.i823
  %3454 = add i64 %3453, 17
  %3455 = load i64, i64* %PC.i823
  %3456 = add i64 %3455, 6
  %3457 = load i64, i64* %PC.i823
  %3458 = add i64 %3457, 6
  store i64 %3458, i64* %PC.i823
  %3459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3460 = load i8, i8* %3459, align 1
  %3461 = icmp eq i8 %3460, 0
  %3462 = zext i1 %3461 to i8
  store i8 %3462, i8* %BRANCH_TAKEN, align 1
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3464 = select i1 %3461, i64 %3454, i64 %3456
  store i64 %3464, i64* %3463, align 8
  store %struct.Memory* %loadMem_47d493, %struct.Memory** %MEMORY
  %loadBr_47d493 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d493 = icmp eq i8 %loadBr_47d493, 1
  br i1 %cmpBr_47d493, label %block_.L_47d4a4, label %block_47d499

block_47d499:                                     ; preds = %block_47d48f
  %loadMem_47d499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3466 = getelementptr inbounds %struct.GPR, %struct.GPR* %3465, i32 0, i32 33
  %3467 = getelementptr inbounds %struct.Reg, %struct.Reg* %3466, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %3467 to i64*
  %3468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3469 = getelementptr inbounds %struct.GPR, %struct.GPR* %3468, i32 0, i32 1
  %3470 = getelementptr inbounds %struct.Reg, %struct.Reg* %3469, i32 0, i32 0
  %RAX.i821 = bitcast %union.anon* %3470 to i64*
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3472 = getelementptr inbounds %struct.GPR, %struct.GPR* %3471, i32 0, i32 15
  %3473 = getelementptr inbounds %struct.Reg, %struct.Reg* %3472, i32 0, i32 0
  %RBP.i822 = bitcast %union.anon* %3473 to i64*
  %3474 = load i64, i64* %RBP.i822
  %3475 = sub i64 %3474, 24
  %3476 = load i64, i64* %PC.i820
  %3477 = add i64 %3476, 3
  store i64 %3477, i64* %PC.i820
  %3478 = inttoptr i64 %3475 to i32*
  %3479 = load i32, i32* %3478
  %3480 = zext i32 %3479 to i64
  store i64 %3480, i64* %RAX.i821, align 8
  store %struct.Memory* %loadMem_47d499, %struct.Memory** %MEMORY
  %loadMem_47d49c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3482 = getelementptr inbounds %struct.GPR, %struct.GPR* %3481, i32 0, i32 33
  %3483 = getelementptr inbounds %struct.Reg, %struct.Reg* %3482, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %3483 to i64*
  %3484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3485 = getelementptr inbounds %struct.GPR, %struct.GPR* %3484, i32 0, i32 1
  %3486 = getelementptr inbounds %struct.Reg, %struct.Reg* %3485, i32 0, i32 0
  %EAX.i818 = bitcast %union.anon* %3486 to i32*
  %3487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3488 = getelementptr inbounds %struct.GPR, %struct.GPR* %3487, i32 0, i32 15
  %3489 = getelementptr inbounds %struct.Reg, %struct.Reg* %3488, i32 0, i32 0
  %RBP.i819 = bitcast %union.anon* %3489 to i64*
  %3490 = load i64, i64* %RBP.i819
  %3491 = sub i64 %3490, 32
  %3492 = load i32, i32* %EAX.i818
  %3493 = zext i32 %3492 to i64
  %3494 = load i64, i64* %PC.i817
  %3495 = add i64 %3494, 3
  store i64 %3495, i64* %PC.i817
  %3496 = inttoptr i64 %3491 to i32*
  store i32 %3492, i32* %3496
  store %struct.Memory* %loadMem_47d49c, %struct.Memory** %MEMORY
  %loadMem_47d49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3498 = getelementptr inbounds %struct.GPR, %struct.GPR* %3497, i32 0, i32 33
  %3499 = getelementptr inbounds %struct.Reg, %struct.Reg* %3498, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %3499 to i64*
  %3500 = load i64, i64* %PC.i816
  %3501 = add i64 %3500, 11
  %3502 = load i64, i64* %PC.i816
  %3503 = add i64 %3502, 5
  store i64 %3503, i64* %PC.i816
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3501, i64* %3504, align 8
  store %struct.Memory* %loadMem_47d49f, %struct.Memory** %MEMORY
  br label %block_.L_47d4aa

block_.L_47d4a4:                                  ; preds = %block_47d48f
  %loadMem_47d4a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3506 = getelementptr inbounds %struct.GPR, %struct.GPR* %3505, i32 0, i32 33
  %3507 = getelementptr inbounds %struct.Reg, %struct.Reg* %3506, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %3507 to i64*
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 1
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %RAX.i814 = bitcast %union.anon* %3510 to i64*
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3512 = getelementptr inbounds %struct.GPR, %struct.GPR* %3511, i32 0, i32 15
  %3513 = getelementptr inbounds %struct.Reg, %struct.Reg* %3512, i32 0, i32 0
  %RBP.i815 = bitcast %union.anon* %3513 to i64*
  %3514 = load i64, i64* %RBP.i815
  %3515 = sub i64 %3514, 28
  %3516 = load i64, i64* %PC.i813
  %3517 = add i64 %3516, 3
  store i64 %3517, i64* %PC.i813
  %3518 = inttoptr i64 %3515 to i32*
  %3519 = load i32, i32* %3518
  %3520 = zext i32 %3519 to i64
  store i64 %3520, i64* %RAX.i814, align 8
  store %struct.Memory* %loadMem_47d4a4, %struct.Memory** %MEMORY
  %loadMem_47d4a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3522 = getelementptr inbounds %struct.GPR, %struct.GPR* %3521, i32 0, i32 33
  %3523 = getelementptr inbounds %struct.Reg, %struct.Reg* %3522, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %3523 to i64*
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3525 = getelementptr inbounds %struct.GPR, %struct.GPR* %3524, i32 0, i32 1
  %3526 = getelementptr inbounds %struct.Reg, %struct.Reg* %3525, i32 0, i32 0
  %EAX.i811 = bitcast %union.anon* %3526 to i32*
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3528 = getelementptr inbounds %struct.GPR, %struct.GPR* %3527, i32 0, i32 15
  %3529 = getelementptr inbounds %struct.Reg, %struct.Reg* %3528, i32 0, i32 0
  %RBP.i812 = bitcast %union.anon* %3529 to i64*
  %3530 = load i64, i64* %RBP.i812
  %3531 = sub i64 %3530, 32
  %3532 = load i32, i32* %EAX.i811
  %3533 = zext i32 %3532 to i64
  %3534 = load i64, i64* %PC.i810
  %3535 = add i64 %3534, 3
  store i64 %3535, i64* %PC.i810
  %3536 = inttoptr i64 %3531 to i32*
  store i32 %3532, i32* %3536
  store %struct.Memory* %loadMem_47d4a7, %struct.Memory** %MEMORY
  br label %block_.L_47d4aa

block_.L_47d4aa:                                  ; preds = %block_.L_47d4a4, %block_47d499
  %loadMem_47d4aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3538 = getelementptr inbounds %struct.GPR, %struct.GPR* %3537, i32 0, i32 33
  %3539 = getelementptr inbounds %struct.Reg, %struct.Reg* %3538, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %3539 to i64*
  %3540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3541 = getelementptr inbounds %struct.GPR, %struct.GPR* %3540, i32 0, i32 15
  %3542 = getelementptr inbounds %struct.Reg, %struct.Reg* %3541, i32 0, i32 0
  %RBP.i809 = bitcast %union.anon* %3542 to i64*
  %3543 = load i64, i64* %RBP.i809
  %3544 = sub i64 %3543, 32
  %3545 = load i64, i64* %PC.i808
  %3546 = add i64 %3545, 4
  store i64 %3546, i64* %PC.i808
  %3547 = inttoptr i64 %3544 to i32*
  %3548 = load i32, i32* %3547
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3549, align 1
  %3550 = and i32 %3548, 255
  %3551 = call i32 @llvm.ctpop.i32(i32 %3550)
  %3552 = trunc i32 %3551 to i8
  %3553 = and i8 %3552, 1
  %3554 = xor i8 %3553, 1
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3554, i8* %3555, align 1
  %3556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3556, align 1
  %3557 = icmp eq i32 %3548, 0
  %3558 = zext i1 %3557 to i8
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3558, i8* %3559, align 1
  %3560 = lshr i32 %3548, 31
  %3561 = trunc i32 %3560 to i8
  %3562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3561, i8* %3562, align 1
  %3563 = lshr i32 %3548, 31
  %3564 = xor i32 %3560, %3563
  %3565 = add i32 %3564, %3563
  %3566 = icmp eq i32 %3565, 2
  %3567 = zext i1 %3566 to i8
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3567, i8* %3568, align 1
  store %struct.Memory* %loadMem_47d4aa, %struct.Memory** %MEMORY
  %loadMem_47d4ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3570 = getelementptr inbounds %struct.GPR, %struct.GPR* %3569, i32 0, i32 33
  %3571 = getelementptr inbounds %struct.Reg, %struct.Reg* %3570, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %3571 to i64*
  %3572 = load i64, i64* %PC.i807
  %3573 = add i64 %3572, 11
  %3574 = load i64, i64* %PC.i807
  %3575 = add i64 %3574, 6
  %3576 = load i64, i64* %PC.i807
  %3577 = add i64 %3576, 6
  store i64 %3577, i64* %PC.i807
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3579 = load i8, i8* %3578, align 1
  %3580 = icmp eq i8 %3579, 0
  %3581 = zext i1 %3580 to i8
  store i8 %3581, i8* %BRANCH_TAKEN, align 1
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3583 = select i1 %3580, i64 %3573, i64 %3575
  store i64 %3583, i64* %3582, align 8
  store %struct.Memory* %loadMem_47d4ae, %struct.Memory** %MEMORY
  %loadBr_47d4ae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d4ae = icmp eq i8 %loadBr_47d4ae, 1
  br i1 %cmpBr_47d4ae, label %block_.L_47d4b9, label %block_47d4b4

block_47d4b4:                                     ; preds = %block_.L_47d4aa
  %loadMem_47d4b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3585 = getelementptr inbounds %struct.GPR, %struct.GPR* %3584, i32 0, i32 33
  %3586 = getelementptr inbounds %struct.Reg, %struct.Reg* %3585, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %3586 to i64*
  %3587 = load i64, i64* %PC.i806
  %3588 = add i64 %3587, 838
  %3589 = load i64, i64* %PC.i806
  %3590 = add i64 %3589, 5
  store i64 %3590, i64* %PC.i806
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3588, i64* %3591, align 8
  store %struct.Memory* %loadMem_47d4b4, %struct.Memory** %MEMORY
  br label %block_.L_47d7fa

block_.L_47d4b9:                                  ; preds = %block_.L_47d4aa
  %loadMem_47d4b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3593 = getelementptr inbounds %struct.GPR, %struct.GPR* %3592, i32 0, i32 33
  %3594 = getelementptr inbounds %struct.Reg, %struct.Reg* %3593, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %3594 to i64*
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3596 = getelementptr inbounds %struct.GPR, %struct.GPR* %3595, i32 0, i32 1
  %3597 = getelementptr inbounds %struct.Reg, %struct.Reg* %3596, i32 0, i32 0
  %RAX.i805 = bitcast %union.anon* %3597 to i64*
  %3598 = load i64, i64* %PC.i804
  %3599 = add i64 %3598, 10
  store i64 %3599, i64* %PC.i804
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i805, align 8
  store %struct.Memory* %loadMem_47d4b9, %struct.Memory** %MEMORY
  %loadMem_47d4c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3601 = getelementptr inbounds %struct.GPR, %struct.GPR* %3600, i32 0, i32 33
  %3602 = getelementptr inbounds %struct.Reg, %struct.Reg* %3601, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %3602 to i64*
  %3603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3604 = getelementptr inbounds %struct.GPR, %struct.GPR* %3603, i32 0, i32 5
  %3605 = getelementptr inbounds %struct.Reg, %struct.Reg* %3604, i32 0, i32 0
  %RCX.i803 = bitcast %union.anon* %3605 to i64*
  %3606 = load i64, i64* %PC.i802
  %3607 = add i64 %3606, 8
  store i64 %3607, i64* %PC.i802
  %3608 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %3608, i64* %RCX.i803, align 8
  store %struct.Memory* %loadMem_47d4c3, %struct.Memory** %MEMORY
  %loadMem_47d4cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3610 = getelementptr inbounds %struct.GPR, %struct.GPR* %3609, i32 0, i32 33
  %3611 = getelementptr inbounds %struct.Reg, %struct.Reg* %3610, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %3611 to i64*
  %3612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3613 = getelementptr inbounds %struct.GPR, %struct.GPR* %3612, i32 0, i32 7
  %3614 = getelementptr inbounds %struct.Reg, %struct.Reg* %3613, i32 0, i32 0
  %RDX.i800 = bitcast %union.anon* %3614 to i64*
  %3615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3616 = getelementptr inbounds %struct.GPR, %struct.GPR* %3615, i32 0, i32 15
  %3617 = getelementptr inbounds %struct.Reg, %struct.Reg* %3616, i32 0, i32 0
  %RBP.i801 = bitcast %union.anon* %3617 to i64*
  %3618 = load i64, i64* %RBP.i801
  %3619 = sub i64 %3618, 32
  %3620 = load i64, i64* %PC.i799
  %3621 = add i64 %3620, 4
  store i64 %3621, i64* %PC.i799
  %3622 = inttoptr i64 %3619 to i32*
  %3623 = load i32, i32* %3622
  %3624 = sext i32 %3623 to i64
  store i64 %3624, i64* %RDX.i800, align 8
  store %struct.Memory* %loadMem_47d4cb, %struct.Memory** %MEMORY
  %loadMem_47d4cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3626 = getelementptr inbounds %struct.GPR, %struct.GPR* %3625, i32 0, i32 33
  %3627 = getelementptr inbounds %struct.Reg, %struct.Reg* %3626, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %3627 to i64*
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3629 = getelementptr inbounds %struct.GPR, %struct.GPR* %3628, i32 0, i32 7
  %3630 = getelementptr inbounds %struct.Reg, %struct.Reg* %3629, i32 0, i32 0
  %RDX.i798 = bitcast %union.anon* %3630 to i64*
  %3631 = load i64, i64* %RDX.i798
  %3632 = load i64, i64* %PC.i797
  %3633 = add i64 %3632, 4
  store i64 %3633, i64* %PC.i797
  %3634 = sext i64 %3631 to i128
  %3635 = and i128 %3634, -18446744073709551616
  %3636 = zext i64 %3631 to i128
  %3637 = or i128 %3635, %3636
  %3638 = mul i128 76, %3637
  %3639 = trunc i128 %3638 to i64
  store i64 %3639, i64* %RDX.i798, align 8
  %3640 = sext i64 %3639 to i128
  %3641 = icmp ne i128 %3640, %3638
  %3642 = zext i1 %3641 to i8
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3642, i8* %3643, align 1
  %3644 = trunc i128 %3638 to i32
  %3645 = and i32 %3644, 255
  %3646 = call i32 @llvm.ctpop.i32(i32 %3645)
  %3647 = trunc i32 %3646 to i8
  %3648 = and i8 %3647, 1
  %3649 = xor i8 %3648, 1
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3649, i8* %3650, align 1
  %3651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3651, align 1
  %3652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3652, align 1
  %3653 = lshr i64 %3639, 63
  %3654 = trunc i64 %3653 to i8
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3654, i8* %3655, align 1
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3642, i8* %3656, align 1
  store %struct.Memory* %loadMem_47d4cf, %struct.Memory** %MEMORY
  %loadMem_47d4d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3658 = getelementptr inbounds %struct.GPR, %struct.GPR* %3657, i32 0, i32 33
  %3659 = getelementptr inbounds %struct.Reg, %struct.Reg* %3658, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %3659 to i64*
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3661 = getelementptr inbounds %struct.GPR, %struct.GPR* %3660, i32 0, i32 1
  %3662 = getelementptr inbounds %struct.Reg, %struct.Reg* %3661, i32 0, i32 0
  %RAX.i795 = bitcast %union.anon* %3662 to i64*
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3664 = getelementptr inbounds %struct.GPR, %struct.GPR* %3663, i32 0, i32 7
  %3665 = getelementptr inbounds %struct.Reg, %struct.Reg* %3664, i32 0, i32 0
  %RDX.i796 = bitcast %union.anon* %3665 to i64*
  %3666 = load i64, i64* %RAX.i795
  %3667 = load i64, i64* %RDX.i796
  %3668 = load i64, i64* %PC.i794
  %3669 = add i64 %3668, 3
  store i64 %3669, i64* %PC.i794
  %3670 = add i64 %3667, %3666
  store i64 %3670, i64* %RAX.i795, align 8
  %3671 = icmp ult i64 %3670, %3666
  %3672 = icmp ult i64 %3670, %3667
  %3673 = or i1 %3671, %3672
  %3674 = zext i1 %3673 to i8
  %3675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3674, i8* %3675, align 1
  %3676 = trunc i64 %3670 to i32
  %3677 = and i32 %3676, 255
  %3678 = call i32 @llvm.ctpop.i32(i32 %3677)
  %3679 = trunc i32 %3678 to i8
  %3680 = and i8 %3679, 1
  %3681 = xor i8 %3680, 1
  %3682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3681, i8* %3682, align 1
  %3683 = xor i64 %3667, %3666
  %3684 = xor i64 %3683, %3670
  %3685 = lshr i64 %3684, 4
  %3686 = trunc i64 %3685 to i8
  %3687 = and i8 %3686, 1
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3687, i8* %3688, align 1
  %3689 = icmp eq i64 %3670, 0
  %3690 = zext i1 %3689 to i8
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3690, i8* %3691, align 1
  %3692 = lshr i64 %3670, 63
  %3693 = trunc i64 %3692 to i8
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3693, i8* %3694, align 1
  %3695 = lshr i64 %3666, 63
  %3696 = lshr i64 %3667, 63
  %3697 = xor i64 %3692, %3695
  %3698 = xor i64 %3692, %3696
  %3699 = add i64 %3697, %3698
  %3700 = icmp eq i64 %3699, 2
  %3701 = zext i1 %3700 to i8
  %3702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3701, i8* %3702, align 1
  store %struct.Memory* %loadMem_47d4d3, %struct.Memory** %MEMORY
  %loadMem_47d4d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3704 = getelementptr inbounds %struct.GPR, %struct.GPR* %3703, i32 0, i32 33
  %3705 = getelementptr inbounds %struct.Reg, %struct.Reg* %3704, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %3705 to i64*
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3707 = getelementptr inbounds %struct.GPR, %struct.GPR* %3706, i32 0, i32 1
  %3708 = getelementptr inbounds %struct.Reg, %struct.Reg* %3707, i32 0, i32 0
  %RAX.i793 = bitcast %union.anon* %3708 to i64*
  %3709 = load i64, i64* %RAX.i793
  %3710 = add i64 %3709, 4
  %3711 = load i64, i64* %PC.i792
  %3712 = add i64 %3711, 4
  store i64 %3712, i64* %PC.i792
  %3713 = inttoptr i64 %3710 to i32*
  %3714 = load i32, i32* %3713
  %3715 = sext i32 %3714 to i64
  store i64 %3715, i64* %RAX.i793, align 8
  store %struct.Memory* %loadMem_47d4d6, %struct.Memory** %MEMORY
  %loadMem_47d4da = load %struct.Memory*, %struct.Memory** %MEMORY
  %3716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3717 = getelementptr inbounds %struct.GPR, %struct.GPR* %3716, i32 0, i32 33
  %3718 = getelementptr inbounds %struct.Reg, %struct.Reg* %3717, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %3718 to i64*
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3720 = getelementptr inbounds %struct.GPR, %struct.GPR* %3719, i32 0, i32 1
  %3721 = getelementptr inbounds %struct.Reg, %struct.Reg* %3720, i32 0, i32 0
  %RAX.i791 = bitcast %union.anon* %3721 to i64*
  %3722 = load i64, i64* %RAX.i791
  %3723 = load i64, i64* %PC.i790
  %3724 = add i64 %3723, 4
  store i64 %3724, i64* %PC.i790
  %3725 = sext i64 %3722 to i128
  %3726 = and i128 %3725, -18446744073709551616
  %3727 = zext i64 %3722 to i128
  %3728 = or i128 %3726, %3727
  %3729 = mul i128 104, %3728
  %3730 = trunc i128 %3729 to i64
  store i64 %3730, i64* %RAX.i791, align 8
  %3731 = sext i64 %3730 to i128
  %3732 = icmp ne i128 %3731, %3729
  %3733 = zext i1 %3732 to i8
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3733, i8* %3734, align 1
  %3735 = trunc i128 %3729 to i32
  %3736 = and i32 %3735, 255
  %3737 = call i32 @llvm.ctpop.i32(i32 %3736)
  %3738 = trunc i32 %3737 to i8
  %3739 = and i8 %3738, 1
  %3740 = xor i8 %3739, 1
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3740, i8* %3741, align 1
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3742, align 1
  %3743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3743, align 1
  %3744 = lshr i64 %3730, 63
  %3745 = trunc i64 %3744 to i8
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3745, i8* %3746, align 1
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3733, i8* %3747, align 1
  store %struct.Memory* %loadMem_47d4da, %struct.Memory** %MEMORY
  %loadMem_47d4de = load %struct.Memory*, %struct.Memory** %MEMORY
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3749 = getelementptr inbounds %struct.GPR, %struct.GPR* %3748, i32 0, i32 33
  %3750 = getelementptr inbounds %struct.Reg, %struct.Reg* %3749, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %3750 to i64*
  %3751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3752 = getelementptr inbounds %struct.GPR, %struct.GPR* %3751, i32 0, i32 1
  %3753 = getelementptr inbounds %struct.Reg, %struct.Reg* %3752, i32 0, i32 0
  %RAX.i788 = bitcast %union.anon* %3753 to i64*
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3755 = getelementptr inbounds %struct.GPR, %struct.GPR* %3754, i32 0, i32 5
  %3756 = getelementptr inbounds %struct.Reg, %struct.Reg* %3755, i32 0, i32 0
  %RCX.i789 = bitcast %union.anon* %3756 to i64*
  %3757 = load i64, i64* %RCX.i789
  %3758 = load i64, i64* %RAX.i788
  %3759 = load i64, i64* %PC.i787
  %3760 = add i64 %3759, 3
  store i64 %3760, i64* %PC.i787
  %3761 = add i64 %3758, %3757
  store i64 %3761, i64* %RCX.i789, align 8
  %3762 = icmp ult i64 %3761, %3757
  %3763 = icmp ult i64 %3761, %3758
  %3764 = or i1 %3762, %3763
  %3765 = zext i1 %3764 to i8
  %3766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3765, i8* %3766, align 1
  %3767 = trunc i64 %3761 to i32
  %3768 = and i32 %3767, 255
  %3769 = call i32 @llvm.ctpop.i32(i32 %3768)
  %3770 = trunc i32 %3769 to i8
  %3771 = and i8 %3770, 1
  %3772 = xor i8 %3771, 1
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3772, i8* %3773, align 1
  %3774 = xor i64 %3758, %3757
  %3775 = xor i64 %3774, %3761
  %3776 = lshr i64 %3775, 4
  %3777 = trunc i64 %3776 to i8
  %3778 = and i8 %3777, 1
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3778, i8* %3779, align 1
  %3780 = icmp eq i64 %3761, 0
  %3781 = zext i1 %3780 to i8
  %3782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3781, i8* %3782, align 1
  %3783 = lshr i64 %3761, 63
  %3784 = trunc i64 %3783 to i8
  %3785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3784, i8* %3785, align 1
  %3786 = lshr i64 %3757, 63
  %3787 = lshr i64 %3758, 63
  %3788 = xor i64 %3783, %3786
  %3789 = xor i64 %3783, %3787
  %3790 = add i64 %3788, %3789
  %3791 = icmp eq i64 %3790, 2
  %3792 = zext i1 %3791 to i8
  %3793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3792, i8* %3793, align 1
  store %struct.Memory* %loadMem_47d4de, %struct.Memory** %MEMORY
  %loadMem_47d4e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3795 = getelementptr inbounds %struct.GPR, %struct.GPR* %3794, i32 0, i32 33
  %3796 = getelementptr inbounds %struct.Reg, %struct.Reg* %3795, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %3796 to i64*
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3798 = getelementptr inbounds %struct.GPR, %struct.GPR* %3797, i32 0, i32 5
  %3799 = getelementptr inbounds %struct.Reg, %struct.Reg* %3798, i32 0, i32 0
  %RCX.i786 = bitcast %union.anon* %3799 to i64*
  %3800 = load i64, i64* %RCX.i786
  %3801 = add i64 %3800, 60
  %3802 = load i64, i64* %PC.i785
  %3803 = add i64 %3802, 4
  store i64 %3803, i64* %PC.i785
  %3804 = inttoptr i64 %3801 to i32*
  %3805 = load i32, i32* %3804
  %3806 = sub i32 %3805, 5
  %3807 = icmp ult i32 %3805, 5
  %3808 = zext i1 %3807 to i8
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3808, i8* %3809, align 1
  %3810 = and i32 %3806, 255
  %3811 = call i32 @llvm.ctpop.i32(i32 %3810)
  %3812 = trunc i32 %3811 to i8
  %3813 = and i8 %3812, 1
  %3814 = xor i8 %3813, 1
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3814, i8* %3815, align 1
  %3816 = xor i32 %3805, 5
  %3817 = xor i32 %3816, %3806
  %3818 = lshr i32 %3817, 4
  %3819 = trunc i32 %3818 to i8
  %3820 = and i8 %3819, 1
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3820, i8* %3821, align 1
  %3822 = icmp eq i32 %3806, 0
  %3823 = zext i1 %3822 to i8
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3823, i8* %3824, align 1
  %3825 = lshr i32 %3806, 31
  %3826 = trunc i32 %3825 to i8
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3826, i8* %3827, align 1
  %3828 = lshr i32 %3805, 31
  %3829 = xor i32 %3825, %3828
  %3830 = add i32 %3829, %3828
  %3831 = icmp eq i32 %3830, 2
  %3832 = zext i1 %3831 to i8
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3832, i8* %3833, align 1
  store %struct.Memory* %loadMem_47d4e1, %struct.Memory** %MEMORY
  %loadMem_47d4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3835 = getelementptr inbounds %struct.GPR, %struct.GPR* %3834, i32 0, i32 33
  %3836 = getelementptr inbounds %struct.Reg, %struct.Reg* %3835, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %3836 to i64*
  %3837 = load i64, i64* %PC.i784
  %3838 = add i64 %3837, 11
  %3839 = load i64, i64* %PC.i784
  %3840 = add i64 %3839, 6
  %3841 = load i64, i64* %PC.i784
  %3842 = add i64 %3841, 6
  store i64 %3842, i64* %PC.i784
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3844 = load i8, i8* %3843, align 1
  %3845 = icmp eq i8 %3844, 0
  %3846 = zext i1 %3845 to i8
  store i8 %3846, i8* %BRANCH_TAKEN, align 1
  %3847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3848 = select i1 %3845, i64 %3838, i64 %3840
  store i64 %3848, i64* %3847, align 8
  store %struct.Memory* %loadMem_47d4e5, %struct.Memory** %MEMORY
  %loadBr_47d4e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d4e5 = icmp eq i8 %loadBr_47d4e5, 1
  br i1 %cmpBr_47d4e5, label %block_.L_47d4f0, label %block_47d4eb

block_47d4eb:                                     ; preds = %block_.L_47d4b9
  %loadMem_47d4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3850 = getelementptr inbounds %struct.GPR, %struct.GPR* %3849, i32 0, i32 33
  %3851 = getelementptr inbounds %struct.Reg, %struct.Reg* %3850, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %3851 to i64*
  %3852 = load i64, i64* %PC.i783
  %3853 = add i64 %3852, 783
  %3854 = load i64, i64* %PC.i783
  %3855 = add i64 %3854, 5
  store i64 %3855, i64* %PC.i783
  %3856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3853, i64* %3856, align 8
  store %struct.Memory* %loadMem_47d4eb, %struct.Memory** %MEMORY
  br label %block_.L_47d7fa

block_.L_47d4f0:                                  ; preds = %block_.L_47d4b9
  %loadMem_47d4f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3858 = getelementptr inbounds %struct.GPR, %struct.GPR* %3857, i32 0, i32 33
  %3859 = getelementptr inbounds %struct.Reg, %struct.Reg* %3858, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %3859 to i64*
  %3860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3861 = getelementptr inbounds %struct.GPR, %struct.GPR* %3860, i32 0, i32 1
  %3862 = getelementptr inbounds %struct.Reg, %struct.Reg* %3861, i32 0, i32 0
  %RAX.i782 = bitcast %union.anon* %3862 to i64*
  %3863 = load i64, i64* %PC.i781
  %3864 = add i64 %3863, 10
  store i64 %3864, i64* %PC.i781
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i782, align 8
  store %struct.Memory* %loadMem_47d4f0, %struct.Memory** %MEMORY
  %loadMem_47d4fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3866 = getelementptr inbounds %struct.GPR, %struct.GPR* %3865, i32 0, i32 33
  %3867 = getelementptr inbounds %struct.Reg, %struct.Reg* %3866, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %3867 to i64*
  %3868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3869 = getelementptr inbounds %struct.GPR, %struct.GPR* %3868, i32 0, i32 5
  %3870 = getelementptr inbounds %struct.Reg, %struct.Reg* %3869, i32 0, i32 0
  %RCX.i779 = bitcast %union.anon* %3870 to i64*
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3872 = getelementptr inbounds %struct.GPR, %struct.GPR* %3871, i32 0, i32 15
  %3873 = getelementptr inbounds %struct.Reg, %struct.Reg* %3872, i32 0, i32 0
  %RBP.i780 = bitcast %union.anon* %3873 to i64*
  %3874 = load i64, i64* %RBP.i780
  %3875 = sub i64 %3874, 32
  %3876 = load i64, i64* %PC.i778
  %3877 = add i64 %3876, 4
  store i64 %3877, i64* %PC.i778
  %3878 = inttoptr i64 %3875 to i32*
  %3879 = load i32, i32* %3878
  %3880 = sext i32 %3879 to i64
  store i64 %3880, i64* %RCX.i779, align 8
  store %struct.Memory* %loadMem_47d4fa, %struct.Memory** %MEMORY
  %loadMem_47d4fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3882 = getelementptr inbounds %struct.GPR, %struct.GPR* %3881, i32 0, i32 33
  %3883 = getelementptr inbounds %struct.Reg, %struct.Reg* %3882, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %3883 to i64*
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3885 = getelementptr inbounds %struct.GPR, %struct.GPR* %3884, i32 0, i32 5
  %3886 = getelementptr inbounds %struct.Reg, %struct.Reg* %3885, i32 0, i32 0
  %RCX.i777 = bitcast %union.anon* %3886 to i64*
  %3887 = load i64, i64* %RCX.i777
  %3888 = load i64, i64* %PC.i776
  %3889 = add i64 %3888, 4
  store i64 %3889, i64* %PC.i776
  %3890 = sext i64 %3887 to i128
  %3891 = and i128 %3890, -18446744073709551616
  %3892 = zext i64 %3887 to i128
  %3893 = or i128 %3891, %3892
  %3894 = mul i128 76, %3893
  %3895 = trunc i128 %3894 to i64
  store i64 %3895, i64* %RCX.i777, align 8
  %3896 = sext i64 %3895 to i128
  %3897 = icmp ne i128 %3896, %3894
  %3898 = zext i1 %3897 to i8
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3898, i8* %3899, align 1
  %3900 = trunc i128 %3894 to i32
  %3901 = and i32 %3900, 255
  %3902 = call i32 @llvm.ctpop.i32(i32 %3901)
  %3903 = trunc i32 %3902 to i8
  %3904 = and i8 %3903, 1
  %3905 = xor i8 %3904, 1
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3905, i8* %3906, align 1
  %3907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3907, align 1
  %3908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3908, align 1
  %3909 = lshr i64 %3895, 63
  %3910 = trunc i64 %3909 to i8
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3910, i8* %3911, align 1
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3898, i8* %3912, align 1
  store %struct.Memory* %loadMem_47d4fe, %struct.Memory** %MEMORY
  %loadMem_47d502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3914 = getelementptr inbounds %struct.GPR, %struct.GPR* %3913, i32 0, i32 33
  %3915 = getelementptr inbounds %struct.Reg, %struct.Reg* %3914, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %3915 to i64*
  %3916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3917 = getelementptr inbounds %struct.GPR, %struct.GPR* %3916, i32 0, i32 1
  %3918 = getelementptr inbounds %struct.Reg, %struct.Reg* %3917, i32 0, i32 0
  %RAX.i774 = bitcast %union.anon* %3918 to i64*
  %3919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3920 = getelementptr inbounds %struct.GPR, %struct.GPR* %3919, i32 0, i32 5
  %3921 = getelementptr inbounds %struct.Reg, %struct.Reg* %3920, i32 0, i32 0
  %RCX.i775 = bitcast %union.anon* %3921 to i64*
  %3922 = load i64, i64* %RAX.i774
  %3923 = load i64, i64* %RCX.i775
  %3924 = load i64, i64* %PC.i773
  %3925 = add i64 %3924, 3
  store i64 %3925, i64* %PC.i773
  %3926 = add i64 %3923, %3922
  store i64 %3926, i64* %RAX.i774, align 8
  %3927 = icmp ult i64 %3926, %3922
  %3928 = icmp ult i64 %3926, %3923
  %3929 = or i1 %3927, %3928
  %3930 = zext i1 %3929 to i8
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3930, i8* %3931, align 1
  %3932 = trunc i64 %3926 to i32
  %3933 = and i32 %3932, 255
  %3934 = call i32 @llvm.ctpop.i32(i32 %3933)
  %3935 = trunc i32 %3934 to i8
  %3936 = and i8 %3935, 1
  %3937 = xor i8 %3936, 1
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3937, i8* %3938, align 1
  %3939 = xor i64 %3923, %3922
  %3940 = xor i64 %3939, %3926
  %3941 = lshr i64 %3940, 4
  %3942 = trunc i64 %3941 to i8
  %3943 = and i8 %3942, 1
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3943, i8* %3944, align 1
  %3945 = icmp eq i64 %3926, 0
  %3946 = zext i1 %3945 to i8
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3946, i8* %3947, align 1
  %3948 = lshr i64 %3926, 63
  %3949 = trunc i64 %3948 to i8
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3949, i8* %3950, align 1
  %3951 = lshr i64 %3922, 63
  %3952 = lshr i64 %3923, 63
  %3953 = xor i64 %3948, %3951
  %3954 = xor i64 %3948, %3952
  %3955 = add i64 %3953, %3954
  %3956 = icmp eq i64 %3955, 2
  %3957 = zext i1 %3956 to i8
  %3958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3957, i8* %3958, align 1
  store %struct.Memory* %loadMem_47d502, %struct.Memory** %MEMORY
  %loadMem_47d505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3960 = getelementptr inbounds %struct.GPR, %struct.GPR* %3959, i32 0, i32 33
  %3961 = getelementptr inbounds %struct.Reg, %struct.Reg* %3960, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %3961 to i64*
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3963 = getelementptr inbounds %struct.GPR, %struct.GPR* %3962, i32 0, i32 1
  %3964 = getelementptr inbounds %struct.Reg, %struct.Reg* %3963, i32 0, i32 0
  %RAX.i772 = bitcast %union.anon* %3964 to i64*
  %3965 = load i64, i64* %RAX.i772
  %3966 = add i64 %3965, 28
  %3967 = load i64, i64* %PC.i771
  %3968 = add i64 %3967, 4
  store i64 %3968, i64* %PC.i771
  %3969 = inttoptr i64 %3966 to i32*
  %3970 = load i32, i32* %3969
  %3971 = sub i32 %3970, 2
  %3972 = icmp ult i32 %3970, 2
  %3973 = zext i1 %3972 to i8
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3973, i8* %3974, align 1
  %3975 = and i32 %3971, 255
  %3976 = call i32 @llvm.ctpop.i32(i32 %3975)
  %3977 = trunc i32 %3976 to i8
  %3978 = and i8 %3977, 1
  %3979 = xor i8 %3978, 1
  %3980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3979, i8* %3980, align 1
  %3981 = xor i32 %3970, 2
  %3982 = xor i32 %3981, %3971
  %3983 = lshr i32 %3982, 4
  %3984 = trunc i32 %3983 to i8
  %3985 = and i8 %3984, 1
  %3986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3985, i8* %3986, align 1
  %3987 = icmp eq i32 %3971, 0
  %3988 = zext i1 %3987 to i8
  %3989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3988, i8* %3989, align 1
  %3990 = lshr i32 %3971, 31
  %3991 = trunc i32 %3990 to i8
  %3992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3991, i8* %3992, align 1
  %3993 = lshr i32 %3970, 31
  %3994 = xor i32 %3990, %3993
  %3995 = add i32 %3994, %3993
  %3996 = icmp eq i32 %3995, 2
  %3997 = zext i1 %3996 to i8
  %3998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3997, i8* %3998, align 1
  store %struct.Memory* %loadMem_47d505, %struct.Memory** %MEMORY
  %loadMem_47d509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 33
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %4001 to i64*
  %4002 = load i64, i64* %PC.i770
  %4003 = add i64 %4002, 11
  %4004 = load i64, i64* %PC.i770
  %4005 = add i64 %4004, 6
  %4006 = load i64, i64* %PC.i770
  %4007 = add i64 %4006, 6
  store i64 %4007, i64* %PC.i770
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4009 = load i8, i8* %4008, align 1
  store i8 %4009, i8* %BRANCH_TAKEN, align 1
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4011 = icmp ne i8 %4009, 0
  %4012 = select i1 %4011, i64 %4003, i64 %4005
  store i64 %4012, i64* %4010, align 8
  store %struct.Memory* %loadMem_47d509, %struct.Memory** %MEMORY
  %loadBr_47d509 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d509 = icmp eq i8 %loadBr_47d509, 1
  br i1 %cmpBr_47d509, label %block_.L_47d514, label %block_47d50f

block_47d50f:                                     ; preds = %block_.L_47d4f0
  %loadMem_47d50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 33
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %4015 to i64*
  %4016 = load i64, i64* %PC.i769
  %4017 = add i64 %4016, 747
  %4018 = load i64, i64* %PC.i769
  %4019 = add i64 %4018, 5
  store i64 %4019, i64* %PC.i769
  %4020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4017, i64* %4020, align 8
  store %struct.Memory* %loadMem_47d50f, %struct.Memory** %MEMORY
  br label %block_.L_47d7fa

block_.L_47d514:                                  ; preds = %block_.L_47d4f0
  %loadMem_47d514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4022 = getelementptr inbounds %struct.GPR, %struct.GPR* %4021, i32 0, i32 33
  %4023 = getelementptr inbounds %struct.Reg, %struct.Reg* %4022, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %4023 to i64*
  %4024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4025 = getelementptr inbounds %struct.GPR, %struct.GPR* %4024, i32 0, i32 1
  %4026 = getelementptr inbounds %struct.Reg, %struct.Reg* %4025, i32 0, i32 0
  %RAX.i768 = bitcast %union.anon* %4026 to i64*
  %4027 = load i64, i64* %PC.i767
  %4028 = add i64 %4027, 10
  store i64 %4028, i64* %PC.i767
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i768, align 8
  store %struct.Memory* %loadMem_47d514, %struct.Memory** %MEMORY
  %loadMem_47d51e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4030 = getelementptr inbounds %struct.GPR, %struct.GPR* %4029, i32 0, i32 33
  %4031 = getelementptr inbounds %struct.Reg, %struct.Reg* %4030, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %4031 to i64*
  %4032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4033 = getelementptr inbounds %struct.GPR, %struct.GPR* %4032, i32 0, i32 5
  %4034 = getelementptr inbounds %struct.Reg, %struct.Reg* %4033, i32 0, i32 0
  %RCX.i765 = bitcast %union.anon* %4034 to i64*
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4036 = getelementptr inbounds %struct.GPR, %struct.GPR* %4035, i32 0, i32 15
  %4037 = getelementptr inbounds %struct.Reg, %struct.Reg* %4036, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %4037 to i64*
  %4038 = load i64, i64* %RBP.i766
  %4039 = sub i64 %4038, 40
  %4040 = load i64, i64* %PC.i764
  %4041 = add i64 %4040, 4
  store i64 %4041, i64* %PC.i764
  %4042 = inttoptr i64 %4039 to i32*
  %4043 = load i32, i32* %4042
  %4044 = sext i32 %4043 to i64
  store i64 %4044, i64* %RCX.i765, align 8
  store %struct.Memory* %loadMem_47d51e, %struct.Memory** %MEMORY
  %loadMem_47d522 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4046 = getelementptr inbounds %struct.GPR, %struct.GPR* %4045, i32 0, i32 33
  %4047 = getelementptr inbounds %struct.Reg, %struct.Reg* %4046, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %4047 to i64*
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4049 = getelementptr inbounds %struct.GPR, %struct.GPR* %4048, i32 0, i32 5
  %4050 = getelementptr inbounds %struct.Reg, %struct.Reg* %4049, i32 0, i32 0
  %RCX.i763 = bitcast %union.anon* %4050 to i64*
  %4051 = load i64, i64* %RCX.i763
  %4052 = load i64, i64* %PC.i762
  %4053 = add i64 %4052, 4
  store i64 %4053, i64* %PC.i762
  %4054 = sext i64 %4051 to i128
  %4055 = and i128 %4054, -18446744073709551616
  %4056 = zext i64 %4051 to i128
  %4057 = or i128 %4055, %4056
  %4058 = mul i128 12, %4057
  %4059 = trunc i128 %4058 to i64
  store i64 %4059, i64* %RCX.i763, align 8
  %4060 = sext i64 %4059 to i128
  %4061 = icmp ne i128 %4060, %4058
  %4062 = zext i1 %4061 to i8
  %4063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4062, i8* %4063, align 1
  %4064 = trunc i128 %4058 to i32
  %4065 = and i32 %4064, 255
  %4066 = call i32 @llvm.ctpop.i32(i32 %4065)
  %4067 = trunc i32 %4066 to i8
  %4068 = and i8 %4067, 1
  %4069 = xor i8 %4068, 1
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4069, i8* %4070, align 1
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4071, align 1
  %4072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4072, align 1
  %4073 = lshr i64 %4059, 63
  %4074 = trunc i64 %4073 to i8
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4074, i8* %4075, align 1
  %4076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4062, i8* %4076, align 1
  store %struct.Memory* %loadMem_47d522, %struct.Memory** %MEMORY
  %loadMem_47d526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4078 = getelementptr inbounds %struct.GPR, %struct.GPR* %4077, i32 0, i32 33
  %4079 = getelementptr inbounds %struct.Reg, %struct.Reg* %4078, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %4079 to i64*
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4081 = getelementptr inbounds %struct.GPR, %struct.GPR* %4080, i32 0, i32 1
  %4082 = getelementptr inbounds %struct.Reg, %struct.Reg* %4081, i32 0, i32 0
  %RAX.i760 = bitcast %union.anon* %4082 to i64*
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4084 = getelementptr inbounds %struct.GPR, %struct.GPR* %4083, i32 0, i32 5
  %4085 = getelementptr inbounds %struct.Reg, %struct.Reg* %4084, i32 0, i32 0
  %RCX.i761 = bitcast %union.anon* %4085 to i64*
  %4086 = load i64, i64* %RAX.i760
  %4087 = load i64, i64* %RCX.i761
  %4088 = load i64, i64* %PC.i759
  %4089 = add i64 %4088, 3
  store i64 %4089, i64* %PC.i759
  %4090 = add i64 %4087, %4086
  store i64 %4090, i64* %RAX.i760, align 8
  %4091 = icmp ult i64 %4090, %4086
  %4092 = icmp ult i64 %4090, %4087
  %4093 = or i1 %4091, %4092
  %4094 = zext i1 %4093 to i8
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4094, i8* %4095, align 1
  %4096 = trunc i64 %4090 to i32
  %4097 = and i32 %4096, 255
  %4098 = call i32 @llvm.ctpop.i32(i32 %4097)
  %4099 = trunc i32 %4098 to i8
  %4100 = and i8 %4099, 1
  %4101 = xor i8 %4100, 1
  %4102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4101, i8* %4102, align 1
  %4103 = xor i64 %4087, %4086
  %4104 = xor i64 %4103, %4090
  %4105 = lshr i64 %4104, 4
  %4106 = trunc i64 %4105 to i8
  %4107 = and i8 %4106, 1
  %4108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4107, i8* %4108, align 1
  %4109 = icmp eq i64 %4090, 0
  %4110 = zext i1 %4109 to i8
  %4111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4110, i8* %4111, align 1
  %4112 = lshr i64 %4090, 63
  %4113 = trunc i64 %4112 to i8
  %4114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4113, i8* %4114, align 1
  %4115 = lshr i64 %4086, 63
  %4116 = lshr i64 %4087, 63
  %4117 = xor i64 %4112, %4115
  %4118 = xor i64 %4112, %4116
  %4119 = add i64 %4117, %4118
  %4120 = icmp eq i64 %4119, 2
  %4121 = zext i1 %4120 to i8
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4121, i8* %4122, align 1
  store %struct.Memory* %loadMem_47d526, %struct.Memory** %MEMORY
  %loadMem_47d529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4124 = getelementptr inbounds %struct.GPR, %struct.GPR* %4123, i32 0, i32 33
  %4125 = getelementptr inbounds %struct.Reg, %struct.Reg* %4124, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %4125 to i64*
  %4126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4127 = getelementptr inbounds %struct.GPR, %struct.GPR* %4126, i32 0, i32 1
  %4128 = getelementptr inbounds %struct.Reg, %struct.Reg* %4127, i32 0, i32 0
  %RAX.i758 = bitcast %union.anon* %4128 to i64*
  %4129 = load i64, i64* %RAX.i758
  %4130 = load i64, i64* %PC.i757
  %4131 = add i64 %4130, 3
  store i64 %4131, i64* %PC.i757
  %4132 = inttoptr i64 %4129 to i32*
  %4133 = load i32, i32* %4132
  %4134 = sub i32 %4133, 44
  %4135 = icmp ult i32 %4133, 44
  %4136 = zext i1 %4135 to i8
  %4137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4136, i8* %4137, align 1
  %4138 = and i32 %4134, 255
  %4139 = call i32 @llvm.ctpop.i32(i32 %4138)
  %4140 = trunc i32 %4139 to i8
  %4141 = and i8 %4140, 1
  %4142 = xor i8 %4141, 1
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4142, i8* %4143, align 1
  %4144 = xor i32 %4133, 44
  %4145 = xor i32 %4144, %4134
  %4146 = lshr i32 %4145, 4
  %4147 = trunc i32 %4146 to i8
  %4148 = and i8 %4147, 1
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4148, i8* %4149, align 1
  %4150 = icmp eq i32 %4134, 0
  %4151 = zext i1 %4150 to i8
  %4152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4151, i8* %4152, align 1
  %4153 = lshr i32 %4134, 31
  %4154 = trunc i32 %4153 to i8
  %4155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4154, i8* %4155, align 1
  %4156 = lshr i32 %4133, 31
  %4157 = xor i32 %4153, %4156
  %4158 = add i32 %4157, %4156
  %4159 = icmp eq i32 %4158, 2
  %4160 = zext i1 %4159 to i8
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4160, i8* %4161, align 1
  store %struct.Memory* %loadMem_47d529, %struct.Memory** %MEMORY
  %loadMem_47d52c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4163 = getelementptr inbounds %struct.GPR, %struct.GPR* %4162, i32 0, i32 33
  %4164 = getelementptr inbounds %struct.Reg, %struct.Reg* %4163, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %4164 to i64*
  %4165 = load i64, i64* %PC.i756
  %4166 = add i64 %4165, 154
  %4167 = load i64, i64* %PC.i756
  %4168 = add i64 %4167, 6
  %4169 = load i64, i64* %PC.i756
  %4170 = add i64 %4169, 6
  store i64 %4170, i64* %PC.i756
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4172 = load i8, i8* %4171, align 1
  store i8 %4172, i8* %BRANCH_TAKEN, align 1
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4174 = icmp ne i8 %4172, 0
  %4175 = select i1 %4174, i64 %4166, i64 %4168
  store i64 %4175, i64* %4173, align 8
  store %struct.Memory* %loadMem_47d52c, %struct.Memory** %MEMORY
  %loadBr_47d52c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d52c = icmp eq i8 %loadBr_47d52c, 1
  br i1 %cmpBr_47d52c, label %block_.L_47d5c6, label %block_47d532

block_47d532:                                     ; preds = %block_.L_47d514
  %loadMem_47d532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4177 = getelementptr inbounds %struct.GPR, %struct.GPR* %4176, i32 0, i32 33
  %4178 = getelementptr inbounds %struct.Reg, %struct.Reg* %4177, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %4178 to i64*
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4180 = getelementptr inbounds %struct.GPR, %struct.GPR* %4179, i32 0, i32 1
  %4181 = getelementptr inbounds %struct.Reg, %struct.Reg* %4180, i32 0, i32 0
  %RAX.i755 = bitcast %union.anon* %4181 to i64*
  %4182 = load i64, i64* %PC.i754
  %4183 = add i64 %4182, 10
  store i64 %4183, i64* %PC.i754
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i755, align 8
  store %struct.Memory* %loadMem_47d532, %struct.Memory** %MEMORY
  %loadMem_47d53c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4185 = getelementptr inbounds %struct.GPR, %struct.GPR* %4184, i32 0, i32 33
  %4186 = getelementptr inbounds %struct.Reg, %struct.Reg* %4185, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %4186 to i64*
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4188 = getelementptr inbounds %struct.GPR, %struct.GPR* %4187, i32 0, i32 5
  %4189 = getelementptr inbounds %struct.Reg, %struct.Reg* %4188, i32 0, i32 0
  %RCX.i752 = bitcast %union.anon* %4189 to i64*
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4191 = getelementptr inbounds %struct.GPR, %struct.GPR* %4190, i32 0, i32 15
  %4192 = getelementptr inbounds %struct.Reg, %struct.Reg* %4191, i32 0, i32 0
  %RBP.i753 = bitcast %union.anon* %4192 to i64*
  %4193 = load i64, i64* %RBP.i753
  %4194 = sub i64 %4193, 40
  %4195 = load i64, i64* %PC.i751
  %4196 = add i64 %4195, 4
  store i64 %4196, i64* %PC.i751
  %4197 = inttoptr i64 %4194 to i32*
  %4198 = load i32, i32* %4197
  %4199 = sext i32 %4198 to i64
  store i64 %4199, i64* %RCX.i752, align 8
  store %struct.Memory* %loadMem_47d53c, %struct.Memory** %MEMORY
  %loadMem_47d540 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4201 = getelementptr inbounds %struct.GPR, %struct.GPR* %4200, i32 0, i32 33
  %4202 = getelementptr inbounds %struct.Reg, %struct.Reg* %4201, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %4202 to i64*
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4204 = getelementptr inbounds %struct.GPR, %struct.GPR* %4203, i32 0, i32 5
  %4205 = getelementptr inbounds %struct.Reg, %struct.Reg* %4204, i32 0, i32 0
  %RCX.i750 = bitcast %union.anon* %4205 to i64*
  %4206 = load i64, i64* %RCX.i750
  %4207 = load i64, i64* %PC.i749
  %4208 = add i64 %4207, 4
  store i64 %4208, i64* %PC.i749
  %4209 = sext i64 %4206 to i128
  %4210 = and i128 %4209, -18446744073709551616
  %4211 = zext i64 %4206 to i128
  %4212 = or i128 %4210, %4211
  %4213 = mul i128 12, %4212
  %4214 = trunc i128 %4213 to i64
  store i64 %4214, i64* %RCX.i750, align 8
  %4215 = sext i64 %4214 to i128
  %4216 = icmp ne i128 %4215, %4213
  %4217 = zext i1 %4216 to i8
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4217, i8* %4218, align 1
  %4219 = trunc i128 %4213 to i32
  %4220 = and i32 %4219, 255
  %4221 = call i32 @llvm.ctpop.i32(i32 %4220)
  %4222 = trunc i32 %4221 to i8
  %4223 = and i8 %4222, 1
  %4224 = xor i8 %4223, 1
  %4225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4224, i8* %4225, align 1
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4226, align 1
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4227, align 1
  %4228 = lshr i64 %4214, 63
  %4229 = trunc i64 %4228 to i8
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4229, i8* %4230, align 1
  %4231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4217, i8* %4231, align 1
  store %struct.Memory* %loadMem_47d540, %struct.Memory** %MEMORY
  %loadMem_47d544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4233 = getelementptr inbounds %struct.GPR, %struct.GPR* %4232, i32 0, i32 33
  %4234 = getelementptr inbounds %struct.Reg, %struct.Reg* %4233, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %4234 to i64*
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4236 = getelementptr inbounds %struct.GPR, %struct.GPR* %4235, i32 0, i32 1
  %4237 = getelementptr inbounds %struct.Reg, %struct.Reg* %4236, i32 0, i32 0
  %RAX.i747 = bitcast %union.anon* %4237 to i64*
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4239 = getelementptr inbounds %struct.GPR, %struct.GPR* %4238, i32 0, i32 5
  %4240 = getelementptr inbounds %struct.Reg, %struct.Reg* %4239, i32 0, i32 0
  %RCX.i748 = bitcast %union.anon* %4240 to i64*
  %4241 = load i64, i64* %RAX.i747
  %4242 = load i64, i64* %RCX.i748
  %4243 = load i64, i64* %PC.i746
  %4244 = add i64 %4243, 3
  store i64 %4244, i64* %PC.i746
  %4245 = add i64 %4242, %4241
  store i64 %4245, i64* %RAX.i747, align 8
  %4246 = icmp ult i64 %4245, %4241
  %4247 = icmp ult i64 %4245, %4242
  %4248 = or i1 %4246, %4247
  %4249 = zext i1 %4248 to i8
  %4250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4249, i8* %4250, align 1
  %4251 = trunc i64 %4245 to i32
  %4252 = and i32 %4251, 255
  %4253 = call i32 @llvm.ctpop.i32(i32 %4252)
  %4254 = trunc i32 %4253 to i8
  %4255 = and i8 %4254, 1
  %4256 = xor i8 %4255, 1
  %4257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4256, i8* %4257, align 1
  %4258 = xor i64 %4242, %4241
  %4259 = xor i64 %4258, %4245
  %4260 = lshr i64 %4259, 4
  %4261 = trunc i64 %4260 to i8
  %4262 = and i8 %4261, 1
  %4263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4262, i8* %4263, align 1
  %4264 = icmp eq i64 %4245, 0
  %4265 = zext i1 %4264 to i8
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4265, i8* %4266, align 1
  %4267 = lshr i64 %4245, 63
  %4268 = trunc i64 %4267 to i8
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4268, i8* %4269, align 1
  %4270 = lshr i64 %4241, 63
  %4271 = lshr i64 %4242, 63
  %4272 = xor i64 %4267, %4270
  %4273 = xor i64 %4267, %4271
  %4274 = add i64 %4272, %4273
  %4275 = icmp eq i64 %4274, 2
  %4276 = zext i1 %4275 to i8
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4276, i8* %4277, align 1
  store %struct.Memory* %loadMem_47d544, %struct.Memory** %MEMORY
  %loadMem_47d547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4279 = getelementptr inbounds %struct.GPR, %struct.GPR* %4278, i32 0, i32 33
  %4280 = getelementptr inbounds %struct.Reg, %struct.Reg* %4279, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %4280 to i64*
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4282 = getelementptr inbounds %struct.GPR, %struct.GPR* %4281, i32 0, i32 1
  %4283 = getelementptr inbounds %struct.Reg, %struct.Reg* %4282, i32 0, i32 0
  %RAX.i745 = bitcast %union.anon* %4283 to i64*
  %4284 = load i64, i64* %RAX.i745
  %4285 = load i64, i64* %PC.i744
  %4286 = add i64 %4285, 3
  store i64 %4286, i64* %PC.i744
  %4287 = inttoptr i64 %4284 to i32*
  %4288 = load i32, i32* %4287
  %4289 = sub i32 %4288, 2
  %4290 = icmp ult i32 %4288, 2
  %4291 = zext i1 %4290 to i8
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4291, i8* %4292, align 1
  %4293 = and i32 %4289, 255
  %4294 = call i32 @llvm.ctpop.i32(i32 %4293)
  %4295 = trunc i32 %4294 to i8
  %4296 = and i8 %4295, 1
  %4297 = xor i8 %4296, 1
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4297, i8* %4298, align 1
  %4299 = xor i32 %4288, 2
  %4300 = xor i32 %4299, %4289
  %4301 = lshr i32 %4300, 4
  %4302 = trunc i32 %4301 to i8
  %4303 = and i8 %4302, 1
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4303, i8* %4304, align 1
  %4305 = icmp eq i32 %4289, 0
  %4306 = zext i1 %4305 to i8
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4306, i8* %4307, align 1
  %4308 = lshr i32 %4289, 31
  %4309 = trunc i32 %4308 to i8
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4309, i8* %4310, align 1
  %4311 = lshr i32 %4288, 31
  %4312 = xor i32 %4308, %4311
  %4313 = add i32 %4312, %4311
  %4314 = icmp eq i32 %4313, 2
  %4315 = zext i1 %4314 to i8
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4315, i8* %4316, align 1
  store %struct.Memory* %loadMem_47d547, %struct.Memory** %MEMORY
  %loadMem_47d54a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4318 = getelementptr inbounds %struct.GPR, %struct.GPR* %4317, i32 0, i32 33
  %4319 = getelementptr inbounds %struct.Reg, %struct.Reg* %4318, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %4319 to i64*
  %4320 = load i64, i64* %PC.i743
  %4321 = add i64 %4320, 124
  %4322 = load i64, i64* %PC.i743
  %4323 = add i64 %4322, 6
  %4324 = load i64, i64* %PC.i743
  %4325 = add i64 %4324, 6
  store i64 %4325, i64* %PC.i743
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4327 = load i8, i8* %4326, align 1
  store i8 %4327, i8* %BRANCH_TAKEN, align 1
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4329 = icmp ne i8 %4327, 0
  %4330 = select i1 %4329, i64 %4321, i64 %4323
  store i64 %4330, i64* %4328, align 8
  store %struct.Memory* %loadMem_47d54a, %struct.Memory** %MEMORY
  %loadBr_47d54a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d54a = icmp eq i8 %loadBr_47d54a, 1
  br i1 %cmpBr_47d54a, label %block_.L_47d5c6, label %block_47d550

block_47d550:                                     ; preds = %block_47d532
  %loadMem_47d550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 33
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %4333 to i64*
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4335 = getelementptr inbounds %struct.GPR, %struct.GPR* %4334, i32 0, i32 1
  %4336 = getelementptr inbounds %struct.Reg, %struct.Reg* %4335, i32 0, i32 0
  %RAX.i742 = bitcast %union.anon* %4336 to i64*
  %4337 = load i64, i64* %PC.i741
  %4338 = add i64 %4337, 10
  store i64 %4338, i64* %PC.i741
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i742, align 8
  store %struct.Memory* %loadMem_47d550, %struct.Memory** %MEMORY
  %loadMem_47d55a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4340 = getelementptr inbounds %struct.GPR, %struct.GPR* %4339, i32 0, i32 33
  %4341 = getelementptr inbounds %struct.Reg, %struct.Reg* %4340, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %4341 to i64*
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4343 = getelementptr inbounds %struct.GPR, %struct.GPR* %4342, i32 0, i32 5
  %4344 = getelementptr inbounds %struct.Reg, %struct.Reg* %4343, i32 0, i32 0
  %RCX.i739 = bitcast %union.anon* %4344 to i64*
  %4345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4346 = getelementptr inbounds %struct.GPR, %struct.GPR* %4345, i32 0, i32 15
  %4347 = getelementptr inbounds %struct.Reg, %struct.Reg* %4346, i32 0, i32 0
  %RBP.i740 = bitcast %union.anon* %4347 to i64*
  %4348 = load i64, i64* %RBP.i740
  %4349 = sub i64 %4348, 40
  %4350 = load i64, i64* %PC.i738
  %4351 = add i64 %4350, 4
  store i64 %4351, i64* %PC.i738
  %4352 = inttoptr i64 %4349 to i32*
  %4353 = load i32, i32* %4352
  %4354 = sext i32 %4353 to i64
  store i64 %4354, i64* %RCX.i739, align 8
  store %struct.Memory* %loadMem_47d55a, %struct.Memory** %MEMORY
  %loadMem_47d55e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4356 = getelementptr inbounds %struct.GPR, %struct.GPR* %4355, i32 0, i32 33
  %4357 = getelementptr inbounds %struct.Reg, %struct.Reg* %4356, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %4357 to i64*
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4359 = getelementptr inbounds %struct.GPR, %struct.GPR* %4358, i32 0, i32 5
  %4360 = getelementptr inbounds %struct.Reg, %struct.Reg* %4359, i32 0, i32 0
  %RCX.i737 = bitcast %union.anon* %4360 to i64*
  %4361 = load i64, i64* %RCX.i737
  %4362 = load i64, i64* %PC.i736
  %4363 = add i64 %4362, 4
  store i64 %4363, i64* %PC.i736
  %4364 = sext i64 %4361 to i128
  %4365 = and i128 %4364, -18446744073709551616
  %4366 = zext i64 %4361 to i128
  %4367 = or i128 %4365, %4366
  %4368 = mul i128 12, %4367
  %4369 = trunc i128 %4368 to i64
  store i64 %4369, i64* %RCX.i737, align 8
  %4370 = sext i64 %4369 to i128
  %4371 = icmp ne i128 %4370, %4368
  %4372 = zext i1 %4371 to i8
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4372, i8* %4373, align 1
  %4374 = trunc i128 %4368 to i32
  %4375 = and i32 %4374, 255
  %4376 = call i32 @llvm.ctpop.i32(i32 %4375)
  %4377 = trunc i32 %4376 to i8
  %4378 = and i8 %4377, 1
  %4379 = xor i8 %4378, 1
  %4380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4379, i8* %4380, align 1
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4381, align 1
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4382, align 1
  %4383 = lshr i64 %4369, 63
  %4384 = trunc i64 %4383 to i8
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4384, i8* %4385, align 1
  %4386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4372, i8* %4386, align 1
  store %struct.Memory* %loadMem_47d55e, %struct.Memory** %MEMORY
  %loadMem_47d562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4388 = getelementptr inbounds %struct.GPR, %struct.GPR* %4387, i32 0, i32 33
  %4389 = getelementptr inbounds %struct.Reg, %struct.Reg* %4388, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %4389 to i64*
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4391 = getelementptr inbounds %struct.GPR, %struct.GPR* %4390, i32 0, i32 1
  %4392 = getelementptr inbounds %struct.Reg, %struct.Reg* %4391, i32 0, i32 0
  %RAX.i734 = bitcast %union.anon* %4392 to i64*
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4394 = getelementptr inbounds %struct.GPR, %struct.GPR* %4393, i32 0, i32 5
  %4395 = getelementptr inbounds %struct.Reg, %struct.Reg* %4394, i32 0, i32 0
  %RCX.i735 = bitcast %union.anon* %4395 to i64*
  %4396 = load i64, i64* %RAX.i734
  %4397 = load i64, i64* %RCX.i735
  %4398 = load i64, i64* %PC.i733
  %4399 = add i64 %4398, 3
  store i64 %4399, i64* %PC.i733
  %4400 = add i64 %4397, %4396
  store i64 %4400, i64* %RAX.i734, align 8
  %4401 = icmp ult i64 %4400, %4396
  %4402 = icmp ult i64 %4400, %4397
  %4403 = or i1 %4401, %4402
  %4404 = zext i1 %4403 to i8
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4404, i8* %4405, align 1
  %4406 = trunc i64 %4400 to i32
  %4407 = and i32 %4406, 255
  %4408 = call i32 @llvm.ctpop.i32(i32 %4407)
  %4409 = trunc i32 %4408 to i8
  %4410 = and i8 %4409, 1
  %4411 = xor i8 %4410, 1
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4411, i8* %4412, align 1
  %4413 = xor i64 %4397, %4396
  %4414 = xor i64 %4413, %4400
  %4415 = lshr i64 %4414, 4
  %4416 = trunc i64 %4415 to i8
  %4417 = and i8 %4416, 1
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4417, i8* %4418, align 1
  %4419 = icmp eq i64 %4400, 0
  %4420 = zext i1 %4419 to i8
  %4421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4420, i8* %4421, align 1
  %4422 = lshr i64 %4400, 63
  %4423 = trunc i64 %4422 to i8
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4423, i8* %4424, align 1
  %4425 = lshr i64 %4396, 63
  %4426 = lshr i64 %4397, 63
  %4427 = xor i64 %4422, %4425
  %4428 = xor i64 %4422, %4426
  %4429 = add i64 %4427, %4428
  %4430 = icmp eq i64 %4429, 2
  %4431 = zext i1 %4430 to i8
  %4432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4431, i8* %4432, align 1
  store %struct.Memory* %loadMem_47d562, %struct.Memory** %MEMORY
  %loadMem_47d565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4434 = getelementptr inbounds %struct.GPR, %struct.GPR* %4433, i32 0, i32 33
  %4435 = getelementptr inbounds %struct.Reg, %struct.Reg* %4434, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %4435 to i64*
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4437 = getelementptr inbounds %struct.GPR, %struct.GPR* %4436, i32 0, i32 1
  %4438 = getelementptr inbounds %struct.Reg, %struct.Reg* %4437, i32 0, i32 0
  %RAX.i732 = bitcast %union.anon* %4438 to i64*
  %4439 = load i64, i64* %RAX.i732
  %4440 = load i64, i64* %PC.i731
  %4441 = add i64 %4440, 3
  store i64 %4441, i64* %PC.i731
  %4442 = inttoptr i64 %4439 to i32*
  %4443 = load i32, i32* %4442
  %4444 = sub i32 %4443, 4
  %4445 = icmp ult i32 %4443, 4
  %4446 = zext i1 %4445 to i8
  %4447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4446, i8* %4447, align 1
  %4448 = and i32 %4444, 255
  %4449 = call i32 @llvm.ctpop.i32(i32 %4448)
  %4450 = trunc i32 %4449 to i8
  %4451 = and i8 %4450, 1
  %4452 = xor i8 %4451, 1
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4452, i8* %4453, align 1
  %4454 = xor i32 %4443, 4
  %4455 = xor i32 %4454, %4444
  %4456 = lshr i32 %4455, 4
  %4457 = trunc i32 %4456 to i8
  %4458 = and i8 %4457, 1
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4458, i8* %4459, align 1
  %4460 = icmp eq i32 %4444, 0
  %4461 = zext i1 %4460 to i8
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4461, i8* %4462, align 1
  %4463 = lshr i32 %4444, 31
  %4464 = trunc i32 %4463 to i8
  %4465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4464, i8* %4465, align 1
  %4466 = lshr i32 %4443, 31
  %4467 = xor i32 %4463, %4466
  %4468 = add i32 %4467, %4466
  %4469 = icmp eq i32 %4468, 2
  %4470 = zext i1 %4469 to i8
  %4471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4470, i8* %4471, align 1
  store %struct.Memory* %loadMem_47d565, %struct.Memory** %MEMORY
  %loadMem_47d568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4473 = getelementptr inbounds %struct.GPR, %struct.GPR* %4472, i32 0, i32 33
  %4474 = getelementptr inbounds %struct.Reg, %struct.Reg* %4473, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %4474 to i64*
  %4475 = load i64, i64* %PC.i730
  %4476 = add i64 %4475, 94
  %4477 = load i64, i64* %PC.i730
  %4478 = add i64 %4477, 6
  %4479 = load i64, i64* %PC.i730
  %4480 = add i64 %4479, 6
  store i64 %4480, i64* %PC.i730
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4482 = load i8, i8* %4481, align 1
  store i8 %4482, i8* %BRANCH_TAKEN, align 1
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4484 = icmp ne i8 %4482, 0
  %4485 = select i1 %4484, i64 %4476, i64 %4478
  store i64 %4485, i64* %4483, align 8
  store %struct.Memory* %loadMem_47d568, %struct.Memory** %MEMORY
  %loadBr_47d568 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d568 = icmp eq i8 %loadBr_47d568, 1
  br i1 %cmpBr_47d568, label %block_.L_47d5c6, label %block_47d56e

block_47d56e:                                     ; preds = %block_47d550
  %loadMem_47d56e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4487 = getelementptr inbounds %struct.GPR, %struct.GPR* %4486, i32 0, i32 33
  %4488 = getelementptr inbounds %struct.Reg, %struct.Reg* %4487, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %4488 to i64*
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4490 = getelementptr inbounds %struct.GPR, %struct.GPR* %4489, i32 0, i32 1
  %4491 = getelementptr inbounds %struct.Reg, %struct.Reg* %4490, i32 0, i32 0
  %RAX.i729 = bitcast %union.anon* %4491 to i64*
  %4492 = load i64, i64* %PC.i728
  %4493 = add i64 %4492, 10
  store i64 %4493, i64* %PC.i728
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i729, align 8
  store %struct.Memory* %loadMem_47d56e, %struct.Memory** %MEMORY
  %loadMem_47d578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4495 = getelementptr inbounds %struct.GPR, %struct.GPR* %4494, i32 0, i32 33
  %4496 = getelementptr inbounds %struct.Reg, %struct.Reg* %4495, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %4496 to i64*
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4498 = getelementptr inbounds %struct.GPR, %struct.GPR* %4497, i32 0, i32 5
  %4499 = getelementptr inbounds %struct.Reg, %struct.Reg* %4498, i32 0, i32 0
  %RCX.i726 = bitcast %union.anon* %4499 to i64*
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4501 = getelementptr inbounds %struct.GPR, %struct.GPR* %4500, i32 0, i32 15
  %4502 = getelementptr inbounds %struct.Reg, %struct.Reg* %4501, i32 0, i32 0
  %RBP.i727 = bitcast %union.anon* %4502 to i64*
  %4503 = load i64, i64* %RBP.i727
  %4504 = sub i64 %4503, 40
  %4505 = load i64, i64* %PC.i725
  %4506 = add i64 %4505, 4
  store i64 %4506, i64* %PC.i725
  %4507 = inttoptr i64 %4504 to i32*
  %4508 = load i32, i32* %4507
  %4509 = sext i32 %4508 to i64
  store i64 %4509, i64* %RCX.i726, align 8
  store %struct.Memory* %loadMem_47d578, %struct.Memory** %MEMORY
  %loadMem_47d57c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4511 = getelementptr inbounds %struct.GPR, %struct.GPR* %4510, i32 0, i32 33
  %4512 = getelementptr inbounds %struct.Reg, %struct.Reg* %4511, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %4512 to i64*
  %4513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4514 = getelementptr inbounds %struct.GPR, %struct.GPR* %4513, i32 0, i32 5
  %4515 = getelementptr inbounds %struct.Reg, %struct.Reg* %4514, i32 0, i32 0
  %RCX.i724 = bitcast %union.anon* %4515 to i64*
  %4516 = load i64, i64* %RCX.i724
  %4517 = load i64, i64* %PC.i723
  %4518 = add i64 %4517, 4
  store i64 %4518, i64* %PC.i723
  %4519 = sext i64 %4516 to i128
  %4520 = and i128 %4519, -18446744073709551616
  %4521 = zext i64 %4516 to i128
  %4522 = or i128 %4520, %4521
  %4523 = mul i128 12, %4522
  %4524 = trunc i128 %4523 to i64
  store i64 %4524, i64* %RCX.i724, align 8
  %4525 = sext i64 %4524 to i128
  %4526 = icmp ne i128 %4525, %4523
  %4527 = zext i1 %4526 to i8
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4527, i8* %4528, align 1
  %4529 = trunc i128 %4523 to i32
  %4530 = and i32 %4529, 255
  %4531 = call i32 @llvm.ctpop.i32(i32 %4530)
  %4532 = trunc i32 %4531 to i8
  %4533 = and i8 %4532, 1
  %4534 = xor i8 %4533, 1
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4534, i8* %4535, align 1
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4536, align 1
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4537, align 1
  %4538 = lshr i64 %4524, 63
  %4539 = trunc i64 %4538 to i8
  %4540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4539, i8* %4540, align 1
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4527, i8* %4541, align 1
  store %struct.Memory* %loadMem_47d57c, %struct.Memory** %MEMORY
  %loadMem_47d580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4543 = getelementptr inbounds %struct.GPR, %struct.GPR* %4542, i32 0, i32 33
  %4544 = getelementptr inbounds %struct.Reg, %struct.Reg* %4543, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %4544 to i64*
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4546 = getelementptr inbounds %struct.GPR, %struct.GPR* %4545, i32 0, i32 1
  %4547 = getelementptr inbounds %struct.Reg, %struct.Reg* %4546, i32 0, i32 0
  %RAX.i721 = bitcast %union.anon* %4547 to i64*
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4549 = getelementptr inbounds %struct.GPR, %struct.GPR* %4548, i32 0, i32 5
  %4550 = getelementptr inbounds %struct.Reg, %struct.Reg* %4549, i32 0, i32 0
  %RCX.i722 = bitcast %union.anon* %4550 to i64*
  %4551 = load i64, i64* %RAX.i721
  %4552 = load i64, i64* %RCX.i722
  %4553 = load i64, i64* %PC.i720
  %4554 = add i64 %4553, 3
  store i64 %4554, i64* %PC.i720
  %4555 = add i64 %4552, %4551
  store i64 %4555, i64* %RAX.i721, align 8
  %4556 = icmp ult i64 %4555, %4551
  %4557 = icmp ult i64 %4555, %4552
  %4558 = or i1 %4556, %4557
  %4559 = zext i1 %4558 to i8
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4559, i8* %4560, align 1
  %4561 = trunc i64 %4555 to i32
  %4562 = and i32 %4561, 255
  %4563 = call i32 @llvm.ctpop.i32(i32 %4562)
  %4564 = trunc i32 %4563 to i8
  %4565 = and i8 %4564, 1
  %4566 = xor i8 %4565, 1
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4566, i8* %4567, align 1
  %4568 = xor i64 %4552, %4551
  %4569 = xor i64 %4568, %4555
  %4570 = lshr i64 %4569, 4
  %4571 = trunc i64 %4570 to i8
  %4572 = and i8 %4571, 1
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4572, i8* %4573, align 1
  %4574 = icmp eq i64 %4555, 0
  %4575 = zext i1 %4574 to i8
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4575, i8* %4576, align 1
  %4577 = lshr i64 %4555, 63
  %4578 = trunc i64 %4577 to i8
  %4579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4578, i8* %4579, align 1
  %4580 = lshr i64 %4551, 63
  %4581 = lshr i64 %4552, 63
  %4582 = xor i64 %4577, %4580
  %4583 = xor i64 %4577, %4581
  %4584 = add i64 %4582, %4583
  %4585 = icmp eq i64 %4584, 2
  %4586 = zext i1 %4585 to i8
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4586, i8* %4587, align 1
  store %struct.Memory* %loadMem_47d580, %struct.Memory** %MEMORY
  %loadMem_47d583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4589 = getelementptr inbounds %struct.GPR, %struct.GPR* %4588, i32 0, i32 33
  %4590 = getelementptr inbounds %struct.Reg, %struct.Reg* %4589, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %4590 to i64*
  %4591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4592 = getelementptr inbounds %struct.GPR, %struct.GPR* %4591, i32 0, i32 1
  %4593 = getelementptr inbounds %struct.Reg, %struct.Reg* %4592, i32 0, i32 0
  %RAX.i719 = bitcast %union.anon* %4593 to i64*
  %4594 = load i64, i64* %RAX.i719
  %4595 = load i64, i64* %PC.i718
  %4596 = add i64 %4595, 3
  store i64 %4596, i64* %PC.i718
  %4597 = inttoptr i64 %4594 to i32*
  %4598 = load i32, i32* %4597
  %4599 = sub i32 %4598, 6
  %4600 = icmp ult i32 %4598, 6
  %4601 = zext i1 %4600 to i8
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4601, i8* %4602, align 1
  %4603 = and i32 %4599, 255
  %4604 = call i32 @llvm.ctpop.i32(i32 %4603)
  %4605 = trunc i32 %4604 to i8
  %4606 = and i8 %4605, 1
  %4607 = xor i8 %4606, 1
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4607, i8* %4608, align 1
  %4609 = xor i32 %4598, 6
  %4610 = xor i32 %4609, %4599
  %4611 = lshr i32 %4610, 4
  %4612 = trunc i32 %4611 to i8
  %4613 = and i8 %4612, 1
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4613, i8* %4614, align 1
  %4615 = icmp eq i32 %4599, 0
  %4616 = zext i1 %4615 to i8
  %4617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4616, i8* %4617, align 1
  %4618 = lshr i32 %4599, 31
  %4619 = trunc i32 %4618 to i8
  %4620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4619, i8* %4620, align 1
  %4621 = lshr i32 %4598, 31
  %4622 = xor i32 %4618, %4621
  %4623 = add i32 %4622, %4621
  %4624 = icmp eq i32 %4623, 2
  %4625 = zext i1 %4624 to i8
  %4626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4625, i8* %4626, align 1
  store %struct.Memory* %loadMem_47d583, %struct.Memory** %MEMORY
  %loadMem_47d586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4628 = getelementptr inbounds %struct.GPR, %struct.GPR* %4627, i32 0, i32 33
  %4629 = getelementptr inbounds %struct.Reg, %struct.Reg* %4628, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %4629 to i64*
  %4630 = load i64, i64* %PC.i717
  %4631 = add i64 %4630, 64
  %4632 = load i64, i64* %PC.i717
  %4633 = add i64 %4632, 6
  %4634 = load i64, i64* %PC.i717
  %4635 = add i64 %4634, 6
  store i64 %4635, i64* %PC.i717
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4637 = load i8, i8* %4636, align 1
  store i8 %4637, i8* %BRANCH_TAKEN, align 1
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4639 = icmp ne i8 %4637, 0
  %4640 = select i1 %4639, i64 %4631, i64 %4633
  store i64 %4640, i64* %4638, align 8
  store %struct.Memory* %loadMem_47d586, %struct.Memory** %MEMORY
  %loadBr_47d586 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d586 = icmp eq i8 %loadBr_47d586, 1
  br i1 %cmpBr_47d586, label %block_.L_47d5c6, label %block_47d58c

block_47d58c:                                     ; preds = %block_47d56e
  %loadMem_47d58c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4642 = getelementptr inbounds %struct.GPR, %struct.GPR* %4641, i32 0, i32 33
  %4643 = getelementptr inbounds %struct.Reg, %struct.Reg* %4642, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %4643 to i64*
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4645 = getelementptr inbounds %struct.GPR, %struct.GPR* %4644, i32 0, i32 1
  %4646 = getelementptr inbounds %struct.Reg, %struct.Reg* %4645, i32 0, i32 0
  %RAX.i716 = bitcast %union.anon* %4646 to i64*
  %4647 = load i64, i64* %PC.i715
  %4648 = add i64 %4647, 10
  store i64 %4648, i64* %PC.i715
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i716, align 8
  store %struct.Memory* %loadMem_47d58c, %struct.Memory** %MEMORY
  %loadMem_47d596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4650 = getelementptr inbounds %struct.GPR, %struct.GPR* %4649, i32 0, i32 33
  %4651 = getelementptr inbounds %struct.Reg, %struct.Reg* %4650, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %4651 to i64*
  %4652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4653 = getelementptr inbounds %struct.GPR, %struct.GPR* %4652, i32 0, i32 5
  %4654 = getelementptr inbounds %struct.Reg, %struct.Reg* %4653, i32 0, i32 0
  %RCX.i713 = bitcast %union.anon* %4654 to i64*
  %4655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4656 = getelementptr inbounds %struct.GPR, %struct.GPR* %4655, i32 0, i32 15
  %4657 = getelementptr inbounds %struct.Reg, %struct.Reg* %4656, i32 0, i32 0
  %RBP.i714 = bitcast %union.anon* %4657 to i64*
  %4658 = load i64, i64* %RBP.i714
  %4659 = sub i64 %4658, 40
  %4660 = load i64, i64* %PC.i712
  %4661 = add i64 %4660, 4
  store i64 %4661, i64* %PC.i712
  %4662 = inttoptr i64 %4659 to i32*
  %4663 = load i32, i32* %4662
  %4664 = sext i32 %4663 to i64
  store i64 %4664, i64* %RCX.i713, align 8
  store %struct.Memory* %loadMem_47d596, %struct.Memory** %MEMORY
  %loadMem_47d59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4666 = getelementptr inbounds %struct.GPR, %struct.GPR* %4665, i32 0, i32 33
  %4667 = getelementptr inbounds %struct.Reg, %struct.Reg* %4666, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %4667 to i64*
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4669 = getelementptr inbounds %struct.GPR, %struct.GPR* %4668, i32 0, i32 5
  %4670 = getelementptr inbounds %struct.Reg, %struct.Reg* %4669, i32 0, i32 0
  %RCX.i711 = bitcast %union.anon* %4670 to i64*
  %4671 = load i64, i64* %RCX.i711
  %4672 = load i64, i64* %PC.i710
  %4673 = add i64 %4672, 4
  store i64 %4673, i64* %PC.i710
  %4674 = sext i64 %4671 to i128
  %4675 = and i128 %4674, -18446744073709551616
  %4676 = zext i64 %4671 to i128
  %4677 = or i128 %4675, %4676
  %4678 = mul i128 12, %4677
  %4679 = trunc i128 %4678 to i64
  store i64 %4679, i64* %RCX.i711, align 8
  %4680 = sext i64 %4679 to i128
  %4681 = icmp ne i128 %4680, %4678
  %4682 = zext i1 %4681 to i8
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4682, i8* %4683, align 1
  %4684 = trunc i128 %4678 to i32
  %4685 = and i32 %4684, 255
  %4686 = call i32 @llvm.ctpop.i32(i32 %4685)
  %4687 = trunc i32 %4686 to i8
  %4688 = and i8 %4687, 1
  %4689 = xor i8 %4688, 1
  %4690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4689, i8* %4690, align 1
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4691, align 1
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4692, align 1
  %4693 = lshr i64 %4679, 63
  %4694 = trunc i64 %4693 to i8
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4694, i8* %4695, align 1
  %4696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4682, i8* %4696, align 1
  store %struct.Memory* %loadMem_47d59a, %struct.Memory** %MEMORY
  %loadMem_47d59e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4698 = getelementptr inbounds %struct.GPR, %struct.GPR* %4697, i32 0, i32 33
  %4699 = getelementptr inbounds %struct.Reg, %struct.Reg* %4698, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %4699 to i64*
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4701 = getelementptr inbounds %struct.GPR, %struct.GPR* %4700, i32 0, i32 1
  %4702 = getelementptr inbounds %struct.Reg, %struct.Reg* %4701, i32 0, i32 0
  %RAX.i708 = bitcast %union.anon* %4702 to i64*
  %4703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4704 = getelementptr inbounds %struct.GPR, %struct.GPR* %4703, i32 0, i32 5
  %4705 = getelementptr inbounds %struct.Reg, %struct.Reg* %4704, i32 0, i32 0
  %RCX.i709 = bitcast %union.anon* %4705 to i64*
  %4706 = load i64, i64* %RAX.i708
  %4707 = load i64, i64* %RCX.i709
  %4708 = load i64, i64* %PC.i707
  %4709 = add i64 %4708, 3
  store i64 %4709, i64* %PC.i707
  %4710 = add i64 %4707, %4706
  store i64 %4710, i64* %RAX.i708, align 8
  %4711 = icmp ult i64 %4710, %4706
  %4712 = icmp ult i64 %4710, %4707
  %4713 = or i1 %4711, %4712
  %4714 = zext i1 %4713 to i8
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4714, i8* %4715, align 1
  %4716 = trunc i64 %4710 to i32
  %4717 = and i32 %4716, 255
  %4718 = call i32 @llvm.ctpop.i32(i32 %4717)
  %4719 = trunc i32 %4718 to i8
  %4720 = and i8 %4719, 1
  %4721 = xor i8 %4720, 1
  %4722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4721, i8* %4722, align 1
  %4723 = xor i64 %4707, %4706
  %4724 = xor i64 %4723, %4710
  %4725 = lshr i64 %4724, 4
  %4726 = trunc i64 %4725 to i8
  %4727 = and i8 %4726, 1
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4727, i8* %4728, align 1
  %4729 = icmp eq i64 %4710, 0
  %4730 = zext i1 %4729 to i8
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4730, i8* %4731, align 1
  %4732 = lshr i64 %4710, 63
  %4733 = trunc i64 %4732 to i8
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4733, i8* %4734, align 1
  %4735 = lshr i64 %4706, 63
  %4736 = lshr i64 %4707, 63
  %4737 = xor i64 %4732, %4735
  %4738 = xor i64 %4732, %4736
  %4739 = add i64 %4737, %4738
  %4740 = icmp eq i64 %4739, 2
  %4741 = zext i1 %4740 to i8
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4741, i8* %4742, align 1
  store %struct.Memory* %loadMem_47d59e, %struct.Memory** %MEMORY
  %loadMem_47d5a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4744 = getelementptr inbounds %struct.GPR, %struct.GPR* %4743, i32 0, i32 33
  %4745 = getelementptr inbounds %struct.Reg, %struct.Reg* %4744, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %4745 to i64*
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4747 = getelementptr inbounds %struct.GPR, %struct.GPR* %4746, i32 0, i32 1
  %4748 = getelementptr inbounds %struct.Reg, %struct.Reg* %4747, i32 0, i32 0
  %RAX.i706 = bitcast %union.anon* %4748 to i64*
  %4749 = load i64, i64* %RAX.i706
  %4750 = load i64, i64* %PC.i705
  %4751 = add i64 %4750, 3
  store i64 %4751, i64* %PC.i705
  %4752 = inttoptr i64 %4749 to i32*
  %4753 = load i32, i32* %4752
  %4754 = sub i32 %4753, 54
  %4755 = icmp ult i32 %4753, 54
  %4756 = zext i1 %4755 to i8
  %4757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4756, i8* %4757, align 1
  %4758 = and i32 %4754, 255
  %4759 = call i32 @llvm.ctpop.i32(i32 %4758)
  %4760 = trunc i32 %4759 to i8
  %4761 = and i8 %4760, 1
  %4762 = xor i8 %4761, 1
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4762, i8* %4763, align 1
  %4764 = xor i32 %4753, 54
  %4765 = xor i32 %4764, %4754
  %4766 = lshr i32 %4765, 4
  %4767 = trunc i32 %4766 to i8
  %4768 = and i8 %4767, 1
  %4769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4768, i8* %4769, align 1
  %4770 = icmp eq i32 %4754, 0
  %4771 = zext i1 %4770 to i8
  %4772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4771, i8* %4772, align 1
  %4773 = lshr i32 %4754, 31
  %4774 = trunc i32 %4773 to i8
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4774, i8* %4775, align 1
  %4776 = lshr i32 %4753, 31
  %4777 = xor i32 %4773, %4776
  %4778 = add i32 %4777, %4776
  %4779 = icmp eq i32 %4778, 2
  %4780 = zext i1 %4779 to i8
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4780, i8* %4781, align 1
  store %struct.Memory* %loadMem_47d5a1, %struct.Memory** %MEMORY
  %loadMem_47d5a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4783 = getelementptr inbounds %struct.GPR, %struct.GPR* %4782, i32 0, i32 33
  %4784 = getelementptr inbounds %struct.Reg, %struct.Reg* %4783, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %4784 to i64*
  %4785 = load i64, i64* %PC.i704
  %4786 = add i64 %4785, 213
  %4787 = load i64, i64* %PC.i704
  %4788 = add i64 %4787, 6
  %4789 = load i64, i64* %PC.i704
  %4790 = add i64 %4789, 6
  store i64 %4790, i64* %PC.i704
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4792 = load i8, i8* %4791, align 1
  %4793 = icmp eq i8 %4792, 0
  %4794 = zext i1 %4793 to i8
  store i8 %4794, i8* %BRANCH_TAKEN, align 1
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4796 = select i1 %4793, i64 %4786, i64 %4788
  store i64 %4796, i64* %4795, align 8
  store %struct.Memory* %loadMem_47d5a4, %struct.Memory** %MEMORY
  %loadBr_47d5a4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d5a4 = icmp eq i8 %loadBr_47d5a4, 1
  br i1 %cmpBr_47d5a4, label %block_.L_47d679, label %block_47d5aa

block_47d5aa:                                     ; preds = %block_47d58c
  %loadMem_47d5aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4798 = getelementptr inbounds %struct.GPR, %struct.GPR* %4797, i32 0, i32 33
  %4799 = getelementptr inbounds %struct.Reg, %struct.Reg* %4798, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %4799 to i64*
  %4800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4801 = getelementptr inbounds %struct.GPR, %struct.GPR* %4800, i32 0, i32 1
  %4802 = getelementptr inbounds %struct.Reg, %struct.Reg* %4801, i32 0, i32 0
  %RAX.i703 = bitcast %union.anon* %4802 to i64*
  %4803 = load i64, i64* %PC.i702
  %4804 = add i64 %4803, 5
  store i64 %4804, i64* %PC.i702
  store i64 3, i64* %RAX.i703, align 8
  store %struct.Memory* %loadMem_47d5aa, %struct.Memory** %MEMORY
  %loadMem_47d5af = load %struct.Memory*, %struct.Memory** %MEMORY
  %4805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4806 = getelementptr inbounds %struct.GPR, %struct.GPR* %4805, i32 0, i32 33
  %4807 = getelementptr inbounds %struct.Reg, %struct.Reg* %4806, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %4807 to i64*
  %4808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4809 = getelementptr inbounds %struct.GPR, %struct.GPR* %4808, i32 0, i32 5
  %4810 = getelementptr inbounds %struct.Reg, %struct.Reg* %4809, i32 0, i32 0
  %RCX.i700 = bitcast %union.anon* %4810 to i64*
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4812 = getelementptr inbounds %struct.GPR, %struct.GPR* %4811, i32 0, i32 15
  %4813 = getelementptr inbounds %struct.Reg, %struct.Reg* %4812, i32 0, i32 0
  %RBP.i701 = bitcast %union.anon* %4813 to i64*
  %4814 = load i64, i64* %RBP.i701
  %4815 = sub i64 %4814, 32
  %4816 = load i64, i64* %PC.i699
  %4817 = add i64 %4816, 4
  store i64 %4817, i64* %PC.i699
  %4818 = inttoptr i64 %4815 to i32*
  %4819 = load i32, i32* %4818
  %4820 = sext i32 %4819 to i64
  store i64 %4820, i64* %RCX.i700, align 8
  store %struct.Memory* %loadMem_47d5af, %struct.Memory** %MEMORY
  %loadMem_47d5b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4822 = getelementptr inbounds %struct.GPR, %struct.GPR* %4821, i32 0, i32 33
  %4823 = getelementptr inbounds %struct.Reg, %struct.Reg* %4822, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %4823 to i64*
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4825 = getelementptr inbounds %struct.GPR, %struct.GPR* %4824, i32 0, i32 5
  %4826 = getelementptr inbounds %struct.Reg, %struct.Reg* %4825, i32 0, i32 0
  %RCX.i697 = bitcast %union.anon* %4826 to i64*
  %4827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4828 = getelementptr inbounds %struct.GPR, %struct.GPR* %4827, i32 0, i32 7
  %4829 = getelementptr inbounds %struct.Reg, %struct.Reg* %4828, i32 0, i32 0
  %RDX.i698 = bitcast %union.anon* %4829 to i64*
  %4830 = load i64, i64* %RCX.i697
  %4831 = add i64 %4830, 12099168
  %4832 = load i64, i64* %PC.i696
  %4833 = add i64 %4832, 8
  store i64 %4833, i64* %PC.i696
  %4834 = inttoptr i64 %4831 to i8*
  %4835 = load i8, i8* %4834
  %4836 = zext i8 %4835 to i64
  store i64 %4836, i64* %RDX.i698, align 8
  store %struct.Memory* %loadMem_47d5b3, %struct.Memory** %MEMORY
  %loadMem_47d5bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4838 = getelementptr inbounds %struct.GPR, %struct.GPR* %4837, i32 0, i32 33
  %4839 = getelementptr inbounds %struct.Reg, %struct.Reg* %4838, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %4839 to i64*
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4841 = getelementptr inbounds %struct.GPR, %struct.GPR* %4840, i32 0, i32 1
  %4842 = getelementptr inbounds %struct.Reg, %struct.Reg* %4841, i32 0, i32 0
  %RAX.i694 = bitcast %union.anon* %4842 to i64*
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4844 = getelementptr inbounds %struct.GPR, %struct.GPR* %4843, i32 0, i32 15
  %4845 = getelementptr inbounds %struct.Reg, %struct.Reg* %4844, i32 0, i32 0
  %RBP.i695 = bitcast %union.anon* %4845 to i64*
  %4846 = load i64, i64* %RAX.i694
  %4847 = load i64, i64* %RBP.i695
  %4848 = sub i64 %4847, 4
  %4849 = load i64, i64* %PC.i693
  %4850 = add i64 %4849, 3
  store i64 %4850, i64* %PC.i693
  %4851 = trunc i64 %4846 to i32
  %4852 = inttoptr i64 %4848 to i32*
  %4853 = load i32, i32* %4852
  %4854 = sub i32 %4851, %4853
  %4855 = zext i32 %4854 to i64
  store i64 %4855, i64* %RAX.i694, align 8
  %4856 = icmp ult i32 %4851, %4853
  %4857 = zext i1 %4856 to i8
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4857, i8* %4858, align 1
  %4859 = and i32 %4854, 255
  %4860 = call i32 @llvm.ctpop.i32(i32 %4859)
  %4861 = trunc i32 %4860 to i8
  %4862 = and i8 %4861, 1
  %4863 = xor i8 %4862, 1
  %4864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4863, i8* %4864, align 1
  %4865 = xor i32 %4853, %4851
  %4866 = xor i32 %4865, %4854
  %4867 = lshr i32 %4866, 4
  %4868 = trunc i32 %4867 to i8
  %4869 = and i8 %4868, 1
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4869, i8* %4870, align 1
  %4871 = icmp eq i32 %4854, 0
  %4872 = zext i1 %4871 to i8
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4872, i8* %4873, align 1
  %4874 = lshr i32 %4854, 31
  %4875 = trunc i32 %4874 to i8
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4875, i8* %4876, align 1
  %4877 = lshr i32 %4851, 31
  %4878 = lshr i32 %4853, 31
  %4879 = xor i32 %4878, %4877
  %4880 = xor i32 %4874, %4877
  %4881 = add i32 %4880, %4879
  %4882 = icmp eq i32 %4881, 2
  %4883 = zext i1 %4882 to i8
  %4884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4883, i8* %4884, align 1
  store %struct.Memory* %loadMem_47d5bb, %struct.Memory** %MEMORY
  %loadMem_47d5be = load %struct.Memory*, %struct.Memory** %MEMORY
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4886 = getelementptr inbounds %struct.GPR, %struct.GPR* %4885, i32 0, i32 33
  %4887 = getelementptr inbounds %struct.Reg, %struct.Reg* %4886, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %4887 to i64*
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4889 = getelementptr inbounds %struct.GPR, %struct.GPR* %4888, i32 0, i32 1
  %4890 = getelementptr inbounds %struct.Reg, %struct.Reg* %4889, i32 0, i32 0
  %EAX.i691 = bitcast %union.anon* %4890 to i32*
  %4891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4892 = getelementptr inbounds %struct.GPR, %struct.GPR* %4891, i32 0, i32 7
  %4893 = getelementptr inbounds %struct.Reg, %struct.Reg* %4892, i32 0, i32 0
  %EDX.i692 = bitcast %union.anon* %4893 to i32*
  %4894 = load i32, i32* %EDX.i692
  %4895 = zext i32 %4894 to i64
  %4896 = load i32, i32* %EAX.i691
  %4897 = zext i32 %4896 to i64
  %4898 = load i64, i64* %PC.i690
  %4899 = add i64 %4898, 2
  store i64 %4899, i64* %PC.i690
  %4900 = sub i32 %4894, %4896
  %4901 = icmp ult i32 %4894, %4896
  %4902 = zext i1 %4901 to i8
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4902, i8* %4903, align 1
  %4904 = and i32 %4900, 255
  %4905 = call i32 @llvm.ctpop.i32(i32 %4904)
  %4906 = trunc i32 %4905 to i8
  %4907 = and i8 %4906, 1
  %4908 = xor i8 %4907, 1
  %4909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4908, i8* %4909, align 1
  %4910 = xor i64 %4897, %4895
  %4911 = trunc i64 %4910 to i32
  %4912 = xor i32 %4911, %4900
  %4913 = lshr i32 %4912, 4
  %4914 = trunc i32 %4913 to i8
  %4915 = and i8 %4914, 1
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4915, i8* %4916, align 1
  %4917 = icmp eq i32 %4900, 0
  %4918 = zext i1 %4917 to i8
  %4919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4918, i8* %4919, align 1
  %4920 = lshr i32 %4900, 31
  %4921 = trunc i32 %4920 to i8
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4921, i8* %4922, align 1
  %4923 = lshr i32 %4894, 31
  %4924 = lshr i32 %4896, 31
  %4925 = xor i32 %4924, %4923
  %4926 = xor i32 %4920, %4923
  %4927 = add i32 %4926, %4925
  %4928 = icmp eq i32 %4927, 2
  %4929 = zext i1 %4928 to i8
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4929, i8* %4930, align 1
  store %struct.Memory* %loadMem_47d5be, %struct.Memory** %MEMORY
  %loadMem_47d5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4932 = getelementptr inbounds %struct.GPR, %struct.GPR* %4931, i32 0, i32 33
  %4933 = getelementptr inbounds %struct.Reg, %struct.Reg* %4932, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %4933 to i64*
  %4934 = load i64, i64* %PC.i689
  %4935 = add i64 %4934, 185
  %4936 = load i64, i64* %PC.i689
  %4937 = add i64 %4936, 6
  %4938 = load i64, i64* %PC.i689
  %4939 = add i64 %4938, 6
  store i64 %4939, i64* %PC.i689
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4941 = load i8, i8* %4940, align 1
  %4942 = icmp eq i8 %4941, 0
  %4943 = zext i1 %4942 to i8
  store i8 %4943, i8* %BRANCH_TAKEN, align 1
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4945 = select i1 %4942, i64 %4935, i64 %4937
  store i64 %4945, i64* %4944, align 8
  store %struct.Memory* %loadMem_47d5c0, %struct.Memory** %MEMORY
  %loadBr_47d5c0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d5c0 = icmp eq i8 %loadBr_47d5c0, 1
  br i1 %cmpBr_47d5c0, label %block_.L_47d679, label %block_.L_47d5c6

block_.L_47d5c6:                                  ; preds = %block_47d5aa, %block_47d56e, %block_47d550, %block_47d532, %block_.L_47d514
  %loadMem_47d5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4947 = getelementptr inbounds %struct.GPR, %struct.GPR* %4946, i32 0, i32 33
  %4948 = getelementptr inbounds %struct.Reg, %struct.Reg* %4947, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %4948 to i64*
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4950 = getelementptr inbounds %struct.GPR, %struct.GPR* %4949, i32 0, i32 11
  %4951 = getelementptr inbounds %struct.Reg, %struct.Reg* %4950, i32 0, i32 0
  %RDI.i687 = bitcast %union.anon* %4951 to i64*
  %4952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4953 = getelementptr inbounds %struct.GPR, %struct.GPR* %4952, i32 0, i32 15
  %4954 = getelementptr inbounds %struct.Reg, %struct.Reg* %4953, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %4954 to i64*
  %4955 = load i64, i64* %RBP.i688
  %4956 = sub i64 %4955, 8
  %4957 = load i64, i64* %PC.i686
  %4958 = add i64 %4957, 3
  store i64 %4958, i64* %PC.i686
  %4959 = inttoptr i64 %4956 to i32*
  %4960 = load i32, i32* %4959
  %4961 = zext i32 %4960 to i64
  store i64 %4961, i64* %RDI.i687, align 8
  store %struct.Memory* %loadMem_47d5c6, %struct.Memory** %MEMORY
  %loadMem_47d5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4963 = getelementptr inbounds %struct.GPR, %struct.GPR* %4962, i32 0, i32 33
  %4964 = getelementptr inbounds %struct.Reg, %struct.Reg* %4963, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %4964 to i64*
  %4965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4966 = getelementptr inbounds %struct.GPR, %struct.GPR* %4965, i32 0, i32 9
  %4967 = getelementptr inbounds %struct.Reg, %struct.Reg* %4966, i32 0, i32 0
  %RSI.i684 = bitcast %union.anon* %4967 to i64*
  %4968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4969 = getelementptr inbounds %struct.GPR, %struct.GPR* %4968, i32 0, i32 15
  %4970 = getelementptr inbounds %struct.Reg, %struct.Reg* %4969, i32 0, i32 0
  %RBP.i685 = bitcast %union.anon* %4970 to i64*
  %4971 = load i64, i64* %RBP.i685
  %4972 = sub i64 %4971, 32
  %4973 = load i64, i64* %PC.i683
  %4974 = add i64 %4973, 3
  store i64 %4974, i64* %PC.i683
  %4975 = inttoptr i64 %4972 to i32*
  %4976 = load i32, i32* %4975
  %4977 = zext i32 %4976 to i64
  store i64 %4977, i64* %RSI.i684, align 8
  store %struct.Memory* %loadMem_47d5c9, %struct.Memory** %MEMORY
  %loadMem1_47d5cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4979 = getelementptr inbounds %struct.GPR, %struct.GPR* %4978, i32 0, i32 33
  %4980 = getelementptr inbounds %struct.Reg, %struct.Reg* %4979, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %4980 to i64*
  %4981 = load i64, i64* %PC.i682
  %4982 = add i64 %4981, -308764
  %4983 = load i64, i64* %PC.i682
  %4984 = add i64 %4983, 5
  %4985 = load i64, i64* %PC.i682
  %4986 = add i64 %4985, 5
  store i64 %4986, i64* %PC.i682
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4988 = load i64, i64* %4987, align 8
  %4989 = add i64 %4988, -8
  %4990 = inttoptr i64 %4989 to i64*
  store i64 %4984, i64* %4990
  store i64 %4989, i64* %4987, align 8
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4982, i64* %4991, align 8
  store %struct.Memory* %loadMem1_47d5cc, %struct.Memory** %MEMORY
  %loadMem2_47d5cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d5cc = load i64, i64* %3
  %call2_47d5cc = call %struct.Memory* @sub_431fb0.owl_attack_move_reason_known(%struct.State* %0, i64 %loadPC_47d5cc, %struct.Memory* %loadMem2_47d5cc)
  store %struct.Memory* %call2_47d5cc, %struct.Memory** %MEMORY
  %loadMem_47d5d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4993 = getelementptr inbounds %struct.GPR, %struct.GPR* %4992, i32 0, i32 33
  %4994 = getelementptr inbounds %struct.Reg, %struct.Reg* %4993, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %4994 to i64*
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4996 = getelementptr inbounds %struct.GPR, %struct.GPR* %4995, i32 0, i32 1
  %4997 = getelementptr inbounds %struct.Reg, %struct.Reg* %4996, i32 0, i32 0
  %EAX.i681 = bitcast %union.anon* %4997 to i32*
  %4998 = load i32, i32* %EAX.i681
  %4999 = zext i32 %4998 to i64
  %5000 = load i64, i64* %PC.i680
  %5001 = add i64 %5000, 3
  store i64 %5001, i64* %PC.i680
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5002, align 1
  %5003 = and i32 %4998, 255
  %5004 = call i32 @llvm.ctpop.i32(i32 %5003)
  %5005 = trunc i32 %5004 to i8
  %5006 = and i8 %5005, 1
  %5007 = xor i8 %5006, 1
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5007, i8* %5008, align 1
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5009, align 1
  %5010 = icmp eq i32 %4998, 0
  %5011 = zext i1 %5010 to i8
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5011, i8* %5012, align 1
  %5013 = lshr i32 %4998, 31
  %5014 = trunc i32 %5013 to i8
  %5015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5014, i8* %5015, align 1
  %5016 = lshr i32 %4998, 31
  %5017 = xor i32 %5013, %5016
  %5018 = add i32 %5017, %5016
  %5019 = icmp eq i32 %5018, 2
  %5020 = zext i1 %5019 to i8
  %5021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5020, i8* %5021, align 1
  store %struct.Memory* %loadMem_47d5d1, %struct.Memory** %MEMORY
  %loadMem_47d5d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 33
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %5024 to i64*
  %5025 = load i64, i64* %PC.i679
  %5026 = add i64 %5025, 165
  %5027 = load i64, i64* %PC.i679
  %5028 = add i64 %5027, 6
  %5029 = load i64, i64* %PC.i679
  %5030 = add i64 %5029, 6
  store i64 %5030, i64* %PC.i679
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5032 = load i8, i8* %5031, align 1
  %5033 = icmp eq i8 %5032, 0
  %5034 = zext i1 %5033 to i8
  store i8 %5034, i8* %BRANCH_TAKEN, align 1
  %5035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5036 = select i1 %5033, i64 %5026, i64 %5028
  store i64 %5036, i64* %5035, align 8
  store %struct.Memory* %loadMem_47d5d4, %struct.Memory** %MEMORY
  %loadBr_47d5d4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d5d4 = icmp eq i8 %loadBr_47d5d4, 1
  br i1 %cmpBr_47d5d4, label %block_.L_47d679, label %block_47d5da

block_47d5da:                                     ; preds = %block_.L_47d5c6
  %loadMem_47d5da = load %struct.Memory*, %struct.Memory** %MEMORY
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5038 = getelementptr inbounds %struct.GPR, %struct.GPR* %5037, i32 0, i32 33
  %5039 = getelementptr inbounds %struct.Reg, %struct.Reg* %5038, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %5039 to i64*
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5041 = getelementptr inbounds %struct.GPR, %struct.GPR* %5040, i32 0, i32 7
  %5042 = getelementptr inbounds %struct.Reg, %struct.Reg* %5041, i32 0, i32 0
  %RDX.i677 = bitcast %union.anon* %5042 to i64*
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5044 = getelementptr inbounds %struct.GPR, %struct.GPR* %5043, i32 0, i32 15
  %5045 = getelementptr inbounds %struct.Reg, %struct.Reg* %5044, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %5045 to i64*
  %5046 = load i64, i64* %RBP.i678
  %5047 = sub i64 %5046, 64
  %5048 = load i64, i64* %PC.i676
  %5049 = add i64 %5048, 4
  store i64 %5049, i64* %PC.i676
  store i64 %5047, i64* %RDX.i677, align 8
  store %struct.Memory* %loadMem_47d5da, %struct.Memory** %MEMORY
  %loadMem_47d5de = load %struct.Memory*, %struct.Memory** %MEMORY
  %5050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5051 = getelementptr inbounds %struct.GPR, %struct.GPR* %5050, i32 0, i32 33
  %5052 = getelementptr inbounds %struct.Reg, %struct.Reg* %5051, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %5052 to i64*
  %5053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5054 = getelementptr inbounds %struct.GPR, %struct.GPR* %5053, i32 0, i32 15
  %5055 = getelementptr inbounds %struct.Reg, %struct.Reg* %5054, i32 0, i32 0
  %RBP.i675 = bitcast %union.anon* %5055 to i64*
  %5056 = load i64, i64* %RBP.i675
  %5057 = sub i64 %5056, 64
  %5058 = load i64, i64* %PC.i674
  %5059 = add i64 %5058, 7
  store i64 %5059, i64* %PC.i674
  %5060 = inttoptr i64 %5057 to i32*
  store i32 0, i32* %5060
  store %struct.Memory* %loadMem_47d5de, %struct.Memory** %MEMORY
  %loadMem_47d5e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5062 = getelementptr inbounds %struct.GPR, %struct.GPR* %5061, i32 0, i32 33
  %5063 = getelementptr inbounds %struct.Reg, %struct.Reg* %5062, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %5063 to i64*
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5065 = getelementptr inbounds %struct.GPR, %struct.GPR* %5064, i32 0, i32 11
  %5066 = getelementptr inbounds %struct.Reg, %struct.Reg* %5065, i32 0, i32 0
  %RDI.i672 = bitcast %union.anon* %5066 to i64*
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5068 = getelementptr inbounds %struct.GPR, %struct.GPR* %5067, i32 0, i32 15
  %5069 = getelementptr inbounds %struct.Reg, %struct.Reg* %5068, i32 0, i32 0
  %RBP.i673 = bitcast %union.anon* %5069 to i64*
  %5070 = load i64, i64* %RBP.i673
  %5071 = sub i64 %5070, 8
  %5072 = load i64, i64* %PC.i671
  %5073 = add i64 %5072, 3
  store i64 %5073, i64* %PC.i671
  %5074 = inttoptr i64 %5071 to i32*
  %5075 = load i32, i32* %5074
  %5076 = zext i32 %5075 to i64
  store i64 %5076, i64* %RDI.i672, align 8
  store %struct.Memory* %loadMem_47d5e5, %struct.Memory** %MEMORY
  %loadMem_47d5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5078 = getelementptr inbounds %struct.GPR, %struct.GPR* %5077, i32 0, i32 33
  %5079 = getelementptr inbounds %struct.Reg, %struct.Reg* %5078, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %5079 to i64*
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5081 = getelementptr inbounds %struct.GPR, %struct.GPR* %5080, i32 0, i32 9
  %5082 = getelementptr inbounds %struct.Reg, %struct.Reg* %5081, i32 0, i32 0
  %RSI.i669 = bitcast %union.anon* %5082 to i64*
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5084 = getelementptr inbounds %struct.GPR, %struct.GPR* %5083, i32 0, i32 15
  %5085 = getelementptr inbounds %struct.Reg, %struct.Reg* %5084, i32 0, i32 0
  %RBP.i670 = bitcast %union.anon* %5085 to i64*
  %5086 = load i64, i64* %RBP.i670
  %5087 = sub i64 %5086, 32
  %5088 = load i64, i64* %PC.i668
  %5089 = add i64 %5088, 3
  store i64 %5089, i64* %PC.i668
  %5090 = inttoptr i64 %5087 to i32*
  %5091 = load i32, i32* %5090
  %5092 = zext i32 %5091 to i64
  store i64 %5092, i64* %RSI.i669, align 8
  store %struct.Memory* %loadMem_47d5e8, %struct.Memory** %MEMORY
  %loadMem1_47d5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5094 = getelementptr inbounds %struct.GPR, %struct.GPR* %5093, i32 0, i32 33
  %5095 = getelementptr inbounds %struct.Reg, %struct.Reg* %5094, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %5095 to i64*
  %5096 = load i64, i64* %PC.i667
  %5097 = add i64 %5096, -199355
  %5098 = load i64, i64* %PC.i667
  %5099 = add i64 %5098, 5
  %5100 = load i64, i64* %PC.i667
  %5101 = add i64 %5100, 5
  store i64 %5101, i64* %PC.i667
  %5102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5103 = load i64, i64* %5102, align 8
  %5104 = add i64 %5103, -8
  %5105 = inttoptr i64 %5104 to i64*
  store i64 %5099, i64* %5105
  store i64 %5104, i64* %5102, align 8
  %5106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5097, i64* %5106, align 8
  store %struct.Memory* %loadMem1_47d5eb, %struct.Memory** %MEMORY
  %loadMem2_47d5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d5eb = load i64, i64* %3
  %call2_47d5eb = call %struct.Memory* @sub_44cb30.owl_does_attack(%struct.State* %0, i64 %loadPC_47d5eb, %struct.Memory* %loadMem2_47d5eb)
  store %struct.Memory* %call2_47d5eb, %struct.Memory** %MEMORY
  %loadMem_47d5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5108 = getelementptr inbounds %struct.GPR, %struct.GPR* %5107, i32 0, i32 33
  %5109 = getelementptr inbounds %struct.Reg, %struct.Reg* %5108, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %5109 to i64*
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5111 = getelementptr inbounds %struct.GPR, %struct.GPR* %5110, i32 0, i32 7
  %5112 = getelementptr inbounds %struct.Reg, %struct.Reg* %5111, i32 0, i32 0
  %RDX.i666 = bitcast %union.anon* %5112 to i64*
  %5113 = load i64, i64* %PC.i665
  %5114 = add i64 %5113, 10
  store i64 %5114, i64* %PC.i665
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RDX.i666, align 8
  store %struct.Memory* %loadMem_47d5f0, %struct.Memory** %MEMORY
  %loadMem_47d5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5116 = getelementptr inbounds %struct.GPR, %struct.GPR* %5115, i32 0, i32 33
  %5117 = getelementptr inbounds %struct.Reg, %struct.Reg* %5116, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %5117 to i64*
  %5118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5119 = getelementptr inbounds %struct.GPR, %struct.GPR* %5118, i32 0, i32 1
  %5120 = getelementptr inbounds %struct.Reg, %struct.Reg* %5119, i32 0, i32 0
  %EAX.i663 = bitcast %union.anon* %5120 to i32*
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5122 = getelementptr inbounds %struct.GPR, %struct.GPR* %5121, i32 0, i32 15
  %5123 = getelementptr inbounds %struct.Reg, %struct.Reg* %5122, i32 0, i32 0
  %RBP.i664 = bitcast %union.anon* %5123 to i64*
  %5124 = load i64, i64* %RBP.i664
  %5125 = sub i64 %5124, 68
  %5126 = load i32, i32* %EAX.i663
  %5127 = zext i32 %5126 to i64
  %5128 = load i64, i64* %PC.i662
  %5129 = add i64 %5128, 3
  store i64 %5129, i64* %PC.i662
  %5130 = inttoptr i64 %5125 to i32*
  store i32 %5126, i32* %5130
  store %struct.Memory* %loadMem_47d5fa, %struct.Memory** %MEMORY
  %loadMem_47d5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5132 = getelementptr inbounds %struct.GPR, %struct.GPR* %5131, i32 0, i32 33
  %5133 = getelementptr inbounds %struct.Reg, %struct.Reg* %5132, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %5133 to i64*
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5135 = getelementptr inbounds %struct.GPR, %struct.GPR* %5134, i32 0, i32 1
  %5136 = getelementptr inbounds %struct.Reg, %struct.Reg* %5135, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %5136 to i64*
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5138 = getelementptr inbounds %struct.GPR, %struct.GPR* %5137, i32 0, i32 15
  %5139 = getelementptr inbounds %struct.Reg, %struct.Reg* %5138, i32 0, i32 0
  %RBP.i661 = bitcast %union.anon* %5139 to i64*
  %5140 = load i64, i64* %RBP.i661
  %5141 = sub i64 %5140, 68
  %5142 = load i64, i64* %PC.i659
  %5143 = add i64 %5142, 3
  store i64 %5143, i64* %PC.i659
  %5144 = inttoptr i64 %5141 to i32*
  %5145 = load i32, i32* %5144
  %5146 = zext i32 %5145 to i64
  store i64 %5146, i64* %RAX.i660, align 8
  store %struct.Memory* %loadMem_47d5fd, %struct.Memory** %MEMORY
  %loadMem_47d600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5148 = getelementptr inbounds %struct.GPR, %struct.GPR* %5147, i32 0, i32 33
  %5149 = getelementptr inbounds %struct.Reg, %struct.Reg* %5148, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %5149 to i64*
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5151 = getelementptr inbounds %struct.GPR, %struct.GPR* %5150, i32 0, i32 5
  %5152 = getelementptr inbounds %struct.Reg, %struct.Reg* %5151, i32 0, i32 0
  %RCX.i657 = bitcast %union.anon* %5152 to i64*
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 15
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %RBP.i658 = bitcast %union.anon* %5155 to i64*
  %5156 = load i64, i64* %RBP.i658
  %5157 = sub i64 %5156, 32
  %5158 = load i64, i64* %PC.i656
  %5159 = add i64 %5158, 4
  store i64 %5159, i64* %PC.i656
  %5160 = inttoptr i64 %5157 to i32*
  %5161 = load i32, i32* %5160
  %5162 = sext i32 %5161 to i64
  store i64 %5162, i64* %RCX.i657, align 8
  store %struct.Memory* %loadMem_47d600, %struct.Memory** %MEMORY
  %loadMem_47d604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5164 = getelementptr inbounds %struct.GPR, %struct.GPR* %5163, i32 0, i32 33
  %5165 = getelementptr inbounds %struct.Reg, %struct.Reg* %5164, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %5165 to i64*
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5167 = getelementptr inbounds %struct.GPR, %struct.GPR* %5166, i32 0, i32 5
  %5168 = getelementptr inbounds %struct.Reg, %struct.Reg* %5167, i32 0, i32 0
  %RCX.i655 = bitcast %union.anon* %5168 to i64*
  %5169 = load i64, i64* %RCX.i655
  %5170 = load i64, i64* %PC.i654
  %5171 = add i64 %5170, 4
  store i64 %5171, i64* %PC.i654
  %5172 = sext i64 %5169 to i128
  %5173 = and i128 %5172, -18446744073709551616
  %5174 = zext i64 %5169 to i128
  %5175 = or i128 %5173, %5174
  %5176 = mul i128 76, %5175
  %5177 = trunc i128 %5176 to i64
  store i64 %5177, i64* %RCX.i655, align 8
  %5178 = sext i64 %5177 to i128
  %5179 = icmp ne i128 %5178, %5176
  %5180 = zext i1 %5179 to i8
  %5181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5180, i8* %5181, align 1
  %5182 = trunc i128 %5176 to i32
  %5183 = and i32 %5182, 255
  %5184 = call i32 @llvm.ctpop.i32(i32 %5183)
  %5185 = trunc i32 %5184 to i8
  %5186 = and i8 %5185, 1
  %5187 = xor i8 %5186, 1
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5187, i8* %5188, align 1
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5189, align 1
  %5190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5190, align 1
  %5191 = lshr i64 %5177, 63
  %5192 = trunc i64 %5191 to i8
  %5193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5192, i8* %5193, align 1
  %5194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5180, i8* %5194, align 1
  store %struct.Memory* %loadMem_47d604, %struct.Memory** %MEMORY
  %loadMem_47d608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5196 = getelementptr inbounds %struct.GPR, %struct.GPR* %5195, i32 0, i32 33
  %5197 = getelementptr inbounds %struct.Reg, %struct.Reg* %5196, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %5197 to i64*
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5199 = getelementptr inbounds %struct.GPR, %struct.GPR* %5198, i32 0, i32 5
  %5200 = getelementptr inbounds %struct.Reg, %struct.Reg* %5199, i32 0, i32 0
  %RCX.i652 = bitcast %union.anon* %5200 to i64*
  %5201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5202 = getelementptr inbounds %struct.GPR, %struct.GPR* %5201, i32 0, i32 7
  %5203 = getelementptr inbounds %struct.Reg, %struct.Reg* %5202, i32 0, i32 0
  %RDX.i653 = bitcast %union.anon* %5203 to i64*
  %5204 = load i64, i64* %RDX.i653
  %5205 = load i64, i64* %RCX.i652
  %5206 = load i64, i64* %PC.i651
  %5207 = add i64 %5206, 3
  store i64 %5207, i64* %PC.i651
  %5208 = add i64 %5205, %5204
  store i64 %5208, i64* %RDX.i653, align 8
  %5209 = icmp ult i64 %5208, %5204
  %5210 = icmp ult i64 %5208, %5205
  %5211 = or i1 %5209, %5210
  %5212 = zext i1 %5211 to i8
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5212, i8* %5213, align 1
  %5214 = trunc i64 %5208 to i32
  %5215 = and i32 %5214, 255
  %5216 = call i32 @llvm.ctpop.i32(i32 %5215)
  %5217 = trunc i32 %5216 to i8
  %5218 = and i8 %5217, 1
  %5219 = xor i8 %5218, 1
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5219, i8* %5220, align 1
  %5221 = xor i64 %5205, %5204
  %5222 = xor i64 %5221, %5208
  %5223 = lshr i64 %5222, 4
  %5224 = trunc i64 %5223 to i8
  %5225 = and i8 %5224, 1
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5225, i8* %5226, align 1
  %5227 = icmp eq i64 %5208, 0
  %5228 = zext i1 %5227 to i8
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5228, i8* %5229, align 1
  %5230 = lshr i64 %5208, 63
  %5231 = trunc i64 %5230 to i8
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5231, i8* %5232, align 1
  %5233 = lshr i64 %5204, 63
  %5234 = lshr i64 %5205, 63
  %5235 = xor i64 %5230, %5233
  %5236 = xor i64 %5230, %5234
  %5237 = add i64 %5235, %5236
  %5238 = icmp eq i64 %5237, 2
  %5239 = zext i1 %5238 to i8
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5239, i8* %5240, align 1
  store %struct.Memory* %loadMem_47d608, %struct.Memory** %MEMORY
  %loadMem_47d60b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5242 = getelementptr inbounds %struct.GPR, %struct.GPR* %5241, i32 0, i32 33
  %5243 = getelementptr inbounds %struct.Reg, %struct.Reg* %5242, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %5243 to i64*
  %5244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5245 = getelementptr inbounds %struct.GPR, %struct.GPR* %5244, i32 0, i32 1
  %5246 = getelementptr inbounds %struct.Reg, %struct.Reg* %5245, i32 0, i32 0
  %EAX.i649 = bitcast %union.anon* %5246 to i32*
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5248 = getelementptr inbounds %struct.GPR, %struct.GPR* %5247, i32 0, i32 7
  %5249 = getelementptr inbounds %struct.Reg, %struct.Reg* %5248, i32 0, i32 0
  %RDX.i650 = bitcast %union.anon* %5249 to i64*
  %5250 = load i32, i32* %EAX.i649
  %5251 = zext i32 %5250 to i64
  %5252 = load i64, i64* %RDX.i650
  %5253 = add i64 %5252, 36
  %5254 = load i64, i64* %PC.i648
  %5255 = add i64 %5254, 3
  store i64 %5255, i64* %PC.i648
  %5256 = inttoptr i64 %5253 to i32*
  %5257 = load i32, i32* %5256
  %5258 = sub i32 %5250, %5257
  %5259 = icmp ult i32 %5250, %5257
  %5260 = zext i1 %5259 to i8
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5260, i8* %5261, align 1
  %5262 = and i32 %5258, 255
  %5263 = call i32 @llvm.ctpop.i32(i32 %5262)
  %5264 = trunc i32 %5263 to i8
  %5265 = and i8 %5264, 1
  %5266 = xor i8 %5265, 1
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5266, i8* %5267, align 1
  %5268 = xor i32 %5257, %5250
  %5269 = xor i32 %5268, %5258
  %5270 = lshr i32 %5269, 4
  %5271 = trunc i32 %5270 to i8
  %5272 = and i8 %5271, 1
  %5273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5272, i8* %5273, align 1
  %5274 = icmp eq i32 %5258, 0
  %5275 = zext i1 %5274 to i8
  %5276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5275, i8* %5276, align 1
  %5277 = lshr i32 %5258, 31
  %5278 = trunc i32 %5277 to i8
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5278, i8* %5279, align 1
  %5280 = lshr i32 %5250, 31
  %5281 = lshr i32 %5257, 31
  %5282 = xor i32 %5281, %5280
  %5283 = xor i32 %5277, %5280
  %5284 = add i32 %5283, %5282
  %5285 = icmp eq i32 %5284, 2
  %5286 = zext i1 %5285 to i8
  %5287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5286, i8* %5287, align 1
  store %struct.Memory* %loadMem_47d60b, %struct.Memory** %MEMORY
  %loadMem_47d60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5289 = getelementptr inbounds %struct.GPR, %struct.GPR* %5288, i32 0, i32 33
  %5290 = getelementptr inbounds %struct.Reg, %struct.Reg* %5289, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %5290 to i64*
  %5291 = load i64, i64* %PC.i647
  %5292 = add i64 %5291, 102
  %5293 = load i64, i64* %PC.i647
  %5294 = add i64 %5293, 6
  %5295 = load i64, i64* %PC.i647
  %5296 = add i64 %5295, 6
  store i64 %5296, i64* %PC.i647
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5298 = load i8, i8* %5297, align 1
  %5299 = icmp ne i8 %5298, 0
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5301 = load i8, i8* %5300, align 1
  %5302 = icmp ne i8 %5301, 0
  %5303 = xor i1 %5299, %5302
  %5304 = zext i1 %5303 to i8
  store i8 %5304, i8* %BRANCH_TAKEN, align 1
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5306 = select i1 %5303, i64 %5292, i64 %5294
  store i64 %5306, i64* %5305, align 8
  store %struct.Memory* %loadMem_47d60e, %struct.Memory** %MEMORY
  %loadBr_47d60e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d60e = icmp eq i8 %loadBr_47d60e, 1
  br i1 %cmpBr_47d60e, label %block_.L_47d674, label %block_47d614

block_47d614:                                     ; preds = %block_47d5da
  %loadMem_47d614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5308 = getelementptr inbounds %struct.GPR, %struct.GPR* %5307, i32 0, i32 33
  %5309 = getelementptr inbounds %struct.Reg, %struct.Reg* %5308, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %5309 to i64*
  %5310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5311 = getelementptr inbounds %struct.GPR, %struct.GPR* %5310, i32 0, i32 15
  %5312 = getelementptr inbounds %struct.Reg, %struct.Reg* %5311, i32 0, i32 0
  %RBP.i646 = bitcast %union.anon* %5312 to i64*
  %5313 = load i64, i64* %RBP.i646
  %5314 = sub i64 %5313, 68
  %5315 = load i64, i64* %PC.i645
  %5316 = add i64 %5315, 4
  store i64 %5316, i64* %PC.i645
  %5317 = inttoptr i64 %5314 to i32*
  %5318 = load i32, i32* %5317
  %5319 = sub i32 %5318, 3
  %5320 = icmp ult i32 %5318, 3
  %5321 = zext i1 %5320 to i8
  %5322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5321, i8* %5322, align 1
  %5323 = and i32 %5319, 255
  %5324 = call i32 @llvm.ctpop.i32(i32 %5323)
  %5325 = trunc i32 %5324 to i8
  %5326 = and i8 %5325, 1
  %5327 = xor i8 %5326, 1
  %5328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5327, i8* %5328, align 1
  %5329 = xor i32 %5318, 3
  %5330 = xor i32 %5329, %5319
  %5331 = lshr i32 %5330, 4
  %5332 = trunc i32 %5331 to i8
  %5333 = and i8 %5332, 1
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5333, i8* %5334, align 1
  %5335 = icmp eq i32 %5319, 0
  %5336 = zext i1 %5335 to i8
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5336, i8* %5337, align 1
  %5338 = lshr i32 %5319, 31
  %5339 = trunc i32 %5338 to i8
  %5340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5339, i8* %5340, align 1
  %5341 = lshr i32 %5318, 31
  %5342 = xor i32 %5338, %5341
  %5343 = add i32 %5342, %5341
  %5344 = icmp eq i32 %5343, 2
  %5345 = zext i1 %5344 to i8
  %5346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5345, i8* %5346, align 1
  store %struct.Memory* %loadMem_47d614, %struct.Memory** %MEMORY
  %loadMem_47d618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5348 = getelementptr inbounds %struct.GPR, %struct.GPR* %5347, i32 0, i32 33
  %5349 = getelementptr inbounds %struct.Reg, %struct.Reg* %5348, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %5349 to i64*
  %5350 = load i64, i64* %PC.i644
  %5351 = add i64 %5350, 25
  %5352 = load i64, i64* %PC.i644
  %5353 = add i64 %5352, 6
  %5354 = load i64, i64* %PC.i644
  %5355 = add i64 %5354, 6
  store i64 %5355, i64* %PC.i644
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5357 = load i8, i8* %5356, align 1
  %5358 = icmp eq i8 %5357, 0
  %5359 = zext i1 %5358 to i8
  store i8 %5359, i8* %BRANCH_TAKEN, align 1
  %5360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5361 = select i1 %5358, i64 %5351, i64 %5353
  store i64 %5361, i64* %5360, align 8
  store %struct.Memory* %loadMem_47d618, %struct.Memory** %MEMORY
  %loadBr_47d618 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d618 = icmp eq i8 %loadBr_47d618, 1
  br i1 %cmpBr_47d618, label %block_.L_47d631, label %block_47d61e

block_47d61e:                                     ; preds = %block_47d614
  %loadMem_47d61e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5363 = getelementptr inbounds %struct.GPR, %struct.GPR* %5362, i32 0, i32 33
  %5364 = getelementptr inbounds %struct.Reg, %struct.Reg* %5363, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %5364 to i64*
  %5365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5366 = getelementptr inbounds %struct.GPR, %struct.GPR* %5365, i32 0, i32 11
  %5367 = getelementptr inbounds %struct.Reg, %struct.Reg* %5366, i32 0, i32 0
  %RDI.i642 = bitcast %union.anon* %5367 to i64*
  %5368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5369 = getelementptr inbounds %struct.GPR, %struct.GPR* %5368, i32 0, i32 15
  %5370 = getelementptr inbounds %struct.Reg, %struct.Reg* %5369, i32 0, i32 0
  %RBP.i643 = bitcast %union.anon* %5370 to i64*
  %5371 = load i64, i64* %RBP.i643
  %5372 = sub i64 %5371, 8
  %5373 = load i64, i64* %PC.i641
  %5374 = add i64 %5373, 3
  store i64 %5374, i64* %PC.i641
  %5375 = inttoptr i64 %5372 to i32*
  %5376 = load i32, i32* %5375
  %5377 = zext i32 %5376 to i64
  store i64 %5377, i64* %RDI.i642, align 8
  store %struct.Memory* %loadMem_47d61e, %struct.Memory** %MEMORY
  %loadMem_47d621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5379 = getelementptr inbounds %struct.GPR, %struct.GPR* %5378, i32 0, i32 33
  %5380 = getelementptr inbounds %struct.Reg, %struct.Reg* %5379, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %5380 to i64*
  %5381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5382 = getelementptr inbounds %struct.GPR, %struct.GPR* %5381, i32 0, i32 9
  %5383 = getelementptr inbounds %struct.Reg, %struct.Reg* %5382, i32 0, i32 0
  %RSI.i639 = bitcast %union.anon* %5383 to i64*
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 15
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %RBP.i640 = bitcast %union.anon* %5386 to i64*
  %5387 = load i64, i64* %RBP.i640
  %5388 = sub i64 %5387, 32
  %5389 = load i64, i64* %PC.i638
  %5390 = add i64 %5389, 3
  store i64 %5390, i64* %PC.i638
  %5391 = inttoptr i64 %5388 to i32*
  %5392 = load i32, i32* %5391
  %5393 = zext i32 %5392 to i64
  store i64 %5393, i64* %RSI.i639, align 8
  store %struct.Memory* %loadMem_47d621, %struct.Memory** %MEMORY
  %loadMem_47d624 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5395 = getelementptr inbounds %struct.GPR, %struct.GPR* %5394, i32 0, i32 33
  %5396 = getelementptr inbounds %struct.Reg, %struct.Reg* %5395, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %5396 to i64*
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5398 = getelementptr inbounds %struct.GPR, %struct.GPR* %5397, i32 0, i32 7
  %5399 = getelementptr inbounds %struct.Reg, %struct.Reg* %5398, i32 0, i32 0
  %RDX.i636 = bitcast %union.anon* %5399 to i64*
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5401 = getelementptr inbounds %struct.GPR, %struct.GPR* %5400, i32 0, i32 15
  %5402 = getelementptr inbounds %struct.Reg, %struct.Reg* %5401, i32 0, i32 0
  %RBP.i637 = bitcast %union.anon* %5402 to i64*
  %5403 = load i64, i64* %RBP.i637
  %5404 = sub i64 %5403, 64
  %5405 = load i64, i64* %PC.i635
  %5406 = add i64 %5405, 3
  store i64 %5406, i64* %PC.i635
  %5407 = inttoptr i64 %5404 to i32*
  %5408 = load i32, i32* %5407
  %5409 = zext i32 %5408 to i64
  store i64 %5409, i64* %RDX.i636, align 8
  store %struct.Memory* %loadMem_47d624, %struct.Memory** %MEMORY
  %loadMem1_47d627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5411 = getelementptr inbounds %struct.GPR, %struct.GPR* %5410, i32 0, i32 33
  %5412 = getelementptr inbounds %struct.Reg, %struct.Reg* %5411, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %5412 to i64*
  %5413 = load i64, i64* %PC.i634
  %5414 = add i64 %5413, -300615
  %5415 = load i64, i64* %PC.i634
  %5416 = add i64 %5415, 5
  %5417 = load i64, i64* %PC.i634
  %5418 = add i64 %5417, 5
  store i64 %5418, i64* %PC.i634
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5420 = load i64, i64* %5419, align 8
  %5421 = add i64 %5420, -8
  %5422 = inttoptr i64 %5421 to i64*
  store i64 %5416, i64* %5422
  store i64 %5421, i64* %5419, align 8
  %5423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5414, i64* %5423, align 8
  store %struct.Memory* %loadMem1_47d627, %struct.Memory** %MEMORY
  %loadMem2_47d627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d627 = load i64, i64* %3
  %call2_47d627 = call %struct.Memory* @sub_433fe0.add_gain_move(%struct.State* %0, i64 %loadPC_47d627, %struct.Memory* %loadMem2_47d627)
  store %struct.Memory* %call2_47d627, %struct.Memory** %MEMORY
  %loadMem_47d62c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5425 = getelementptr inbounds %struct.GPR, %struct.GPR* %5424, i32 0, i32 33
  %5426 = getelementptr inbounds %struct.Reg, %struct.Reg* %5425, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %5426 to i64*
  %5427 = load i64, i64* %PC.i633
  %5428 = add i64 %5427, 19
  %5429 = load i64, i64* %PC.i633
  %5430 = add i64 %5429, 5
  store i64 %5430, i64* %PC.i633
  %5431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5428, i64* %5431, align 8
  store %struct.Memory* %loadMem_47d62c, %struct.Memory** %MEMORY
  br label %block_.L_47d63f

block_.L_47d631:                                  ; preds = %block_47d614
  %loadMem_47d631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5433 = getelementptr inbounds %struct.GPR, %struct.GPR* %5432, i32 0, i32 33
  %5434 = getelementptr inbounds %struct.Reg, %struct.Reg* %5433, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %5434 to i64*
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5436 = getelementptr inbounds %struct.GPR, %struct.GPR* %5435, i32 0, i32 11
  %5437 = getelementptr inbounds %struct.Reg, %struct.Reg* %5436, i32 0, i32 0
  %RDI.i631 = bitcast %union.anon* %5437 to i64*
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5439 = getelementptr inbounds %struct.GPR, %struct.GPR* %5438, i32 0, i32 15
  %5440 = getelementptr inbounds %struct.Reg, %struct.Reg* %5439, i32 0, i32 0
  %RBP.i632 = bitcast %union.anon* %5440 to i64*
  %5441 = load i64, i64* %RBP.i632
  %5442 = sub i64 %5441, 8
  %5443 = load i64, i64* %PC.i630
  %5444 = add i64 %5443, 3
  store i64 %5444, i64* %PC.i630
  %5445 = inttoptr i64 %5442 to i32*
  %5446 = load i32, i32* %5445
  %5447 = zext i32 %5446 to i64
  store i64 %5447, i64* %RDI.i631, align 8
  store %struct.Memory* %loadMem_47d631, %struct.Memory** %MEMORY
  %loadMem_47d634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5449 = getelementptr inbounds %struct.GPR, %struct.GPR* %5448, i32 0, i32 33
  %5450 = getelementptr inbounds %struct.Reg, %struct.Reg* %5449, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %5450 to i64*
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5452 = getelementptr inbounds %struct.GPR, %struct.GPR* %5451, i32 0, i32 9
  %5453 = getelementptr inbounds %struct.Reg, %struct.Reg* %5452, i32 0, i32 0
  %RSI.i628 = bitcast %union.anon* %5453 to i64*
  %5454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5455 = getelementptr inbounds %struct.GPR, %struct.GPR* %5454, i32 0, i32 15
  %5456 = getelementptr inbounds %struct.Reg, %struct.Reg* %5455, i32 0, i32 0
  %RBP.i629 = bitcast %union.anon* %5456 to i64*
  %5457 = load i64, i64* %RBP.i629
  %5458 = sub i64 %5457, 32
  %5459 = load i64, i64* %PC.i627
  %5460 = add i64 %5459, 3
  store i64 %5460, i64* %PC.i627
  %5461 = inttoptr i64 %5458 to i32*
  %5462 = load i32, i32* %5461
  %5463 = zext i32 %5462 to i64
  store i64 %5463, i64* %RSI.i628, align 8
  store %struct.Memory* %loadMem_47d634, %struct.Memory** %MEMORY
  %loadMem_47d637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5465 = getelementptr inbounds %struct.GPR, %struct.GPR* %5464, i32 0, i32 33
  %5466 = getelementptr inbounds %struct.Reg, %struct.Reg* %5465, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %5466 to i64*
  %5467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5468 = getelementptr inbounds %struct.GPR, %struct.GPR* %5467, i32 0, i32 7
  %5469 = getelementptr inbounds %struct.Reg, %struct.Reg* %5468, i32 0, i32 0
  %RDX.i625 = bitcast %union.anon* %5469 to i64*
  %5470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5471 = getelementptr inbounds %struct.GPR, %struct.GPR* %5470, i32 0, i32 15
  %5472 = getelementptr inbounds %struct.Reg, %struct.Reg* %5471, i32 0, i32 0
  %RBP.i626 = bitcast %union.anon* %5472 to i64*
  %5473 = load i64, i64* %RBP.i626
  %5474 = sub i64 %5473, 68
  %5475 = load i64, i64* %PC.i624
  %5476 = add i64 %5475, 3
  store i64 %5476, i64* %PC.i624
  %5477 = inttoptr i64 %5474 to i32*
  %5478 = load i32, i32* %5477
  %5479 = zext i32 %5478 to i64
  store i64 %5479, i64* %RDX.i625, align 8
  store %struct.Memory* %loadMem_47d637, %struct.Memory** %MEMORY
  %loadMem1_47d63a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5481 = getelementptr inbounds %struct.GPR, %struct.GPR* %5480, i32 0, i32 33
  %5482 = getelementptr inbounds %struct.Reg, %struct.Reg* %5481, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %5482 to i64*
  %5483 = load i64, i64* %PC.i623
  %5484 = add i64 %5483, -298938
  %5485 = load i64, i64* %PC.i623
  %5486 = add i64 %5485, 5
  %5487 = load i64, i64* %PC.i623
  %5488 = add i64 %5487, 5
  store i64 %5488, i64* %PC.i623
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5490 = load i64, i64* %5489, align 8
  %5491 = add i64 %5490, -8
  %5492 = inttoptr i64 %5491 to i64*
  store i64 %5486, i64* %5492
  store i64 %5491, i64* %5489, align 8
  %5493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5484, i64* %5493, align 8
  store %struct.Memory* %loadMem1_47d63a, %struct.Memory** %MEMORY
  %loadMem2_47d63a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d63a = load i64, i64* %3
  %call2_47d63a = call %struct.Memory* @sub_434680.add_owl_attack_move(%struct.State* %0, i64 %loadPC_47d63a, %struct.Memory* %loadMem2_47d63a)
  store %struct.Memory* %call2_47d63a, %struct.Memory** %MEMORY
  br label %block_.L_47d63f

block_.L_47d63f:                                  ; preds = %block_.L_47d631, %block_47d61e
  %loadMem_47d63f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5495 = getelementptr inbounds %struct.GPR, %struct.GPR* %5494, i32 0, i32 33
  %5496 = getelementptr inbounds %struct.Reg, %struct.Reg* %5495, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %5496 to i64*
  %5497 = load i64, i64* %PC.i622
  %5498 = add i64 %5497, 8
  store i64 %5498, i64* %PC.i622
  %5499 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5500, align 1
  %5501 = and i32 %5499, 255
  %5502 = call i32 @llvm.ctpop.i32(i32 %5501)
  %5503 = trunc i32 %5502 to i8
  %5504 = and i8 %5503, 1
  %5505 = xor i8 %5504, 1
  %5506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5505, i8* %5506, align 1
  %5507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5507, align 1
  %5508 = icmp eq i32 %5499, 0
  %5509 = zext i1 %5508 to i8
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5509, i8* %5510, align 1
  %5511 = lshr i32 %5499, 31
  %5512 = trunc i32 %5511 to i8
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5512, i8* %5513, align 1
  %5514 = lshr i32 %5499, 31
  %5515 = xor i32 %5511, %5514
  %5516 = add i32 %5515, %5514
  %5517 = icmp eq i32 %5516, 2
  %5518 = zext i1 %5517 to i8
  %5519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5518, i8* %5519, align 1
  store %struct.Memory* %loadMem_47d63f, %struct.Memory** %MEMORY
  %loadMem_47d647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5521 = getelementptr inbounds %struct.GPR, %struct.GPR* %5520, i32 0, i32 33
  %5522 = getelementptr inbounds %struct.Reg, %struct.Reg* %5521, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %5522 to i64*
  %5523 = load i64, i64* %PC.i621
  %5524 = add i64 %5523, 11
  %5525 = load i64, i64* %PC.i621
  %5526 = add i64 %5525, 6
  %5527 = load i64, i64* %PC.i621
  %5528 = add i64 %5527, 6
  store i64 %5528, i64* %PC.i621
  %5529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5530 = load i8, i8* %5529, align 1
  %5531 = icmp eq i8 %5530, 0
  %5532 = zext i1 %5531 to i8
  store i8 %5532, i8* %BRANCH_TAKEN, align 1
  %5533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5534 = select i1 %5531, i64 %5524, i64 %5526
  store i64 %5534, i64* %5533, align 8
  store %struct.Memory* %loadMem_47d647, %struct.Memory** %MEMORY
  %loadBr_47d647 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d647 = icmp eq i8 %loadBr_47d647, 1
  br i1 %cmpBr_47d647, label %block_.L_47d652, label %block_47d64d

block_47d64d:                                     ; preds = %block_.L_47d63f
  %loadMem_47d64d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5536 = getelementptr inbounds %struct.GPR, %struct.GPR* %5535, i32 0, i32 33
  %5537 = getelementptr inbounds %struct.Reg, %struct.Reg* %5536, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %5537 to i64*
  %5538 = load i64, i64* %PC.i620
  %5539 = add i64 %5538, 34
  %5540 = load i64, i64* %PC.i620
  %5541 = add i64 %5540, 5
  store i64 %5541, i64* %PC.i620
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5539, i64* %5542, align 8
  store %struct.Memory* %loadMem_47d64d, %struct.Memory** %MEMORY
  br label %block_.L_47d66f

block_.L_47d652:                                  ; preds = %block_.L_47d63f
  %loadMem_47d652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5544 = getelementptr inbounds %struct.GPR, %struct.GPR* %5543, i32 0, i32 33
  %5545 = getelementptr inbounds %struct.Reg, %struct.Reg* %5544, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %5545 to i64*
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5547 = getelementptr inbounds %struct.GPR, %struct.GPR* %5546, i32 0, i32 11
  %5548 = getelementptr inbounds %struct.Reg, %struct.Reg* %5547, i32 0, i32 0
  %RDI.i619 = bitcast %union.anon* %5548 to i64*
  %5549 = load i64, i64* %PC.i618
  %5550 = add i64 %5549, 10
  store i64 %5550, i64* %PC.i618
  store i64 ptrtoint (%G__0x582d3a_type* @G__0x582d3a to i64), i64* %RDI.i619, align 8
  store %struct.Memory* %loadMem_47d652, %struct.Memory** %MEMORY
  %loadMem_47d65c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5552 = getelementptr inbounds %struct.GPR, %struct.GPR* %5551, i32 0, i32 33
  %5553 = getelementptr inbounds %struct.Reg, %struct.Reg* %5552, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %5553 to i64*
  %5554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5555 = getelementptr inbounds %struct.GPR, %struct.GPR* %5554, i32 0, i32 9
  %5556 = getelementptr inbounds %struct.Reg, %struct.Reg* %5555, i32 0, i32 0
  %RSI.i616 = bitcast %union.anon* %5556 to i64*
  %5557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5558 = getelementptr inbounds %struct.GPR, %struct.GPR* %5557, i32 0, i32 15
  %5559 = getelementptr inbounds %struct.Reg, %struct.Reg* %5558, i32 0, i32 0
  %RBP.i617 = bitcast %union.anon* %5559 to i64*
  %5560 = load i64, i64* %RBP.i617
  %5561 = sub i64 %5560, 8
  %5562 = load i64, i64* %PC.i615
  %5563 = add i64 %5562, 3
  store i64 %5563, i64* %PC.i615
  %5564 = inttoptr i64 %5561 to i32*
  %5565 = load i32, i32* %5564
  %5566 = zext i32 %5565 to i64
  store i64 %5566, i64* %RSI.i616, align 8
  store %struct.Memory* %loadMem_47d65c, %struct.Memory** %MEMORY
  %loadMem_47d65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5568 = getelementptr inbounds %struct.GPR, %struct.GPR* %5567, i32 0, i32 33
  %5569 = getelementptr inbounds %struct.Reg, %struct.Reg* %5568, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %5569 to i64*
  %5570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5571 = getelementptr inbounds %struct.GPR, %struct.GPR* %5570, i32 0, i32 7
  %5572 = getelementptr inbounds %struct.Reg, %struct.Reg* %5571, i32 0, i32 0
  %RDX.i613 = bitcast %union.anon* %5572 to i64*
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5574 = getelementptr inbounds %struct.GPR, %struct.GPR* %5573, i32 0, i32 15
  %5575 = getelementptr inbounds %struct.Reg, %struct.Reg* %5574, i32 0, i32 0
  %RBP.i614 = bitcast %union.anon* %5575 to i64*
  %5576 = load i64, i64* %RBP.i614
  %5577 = sub i64 %5576, 32
  %5578 = load i64, i64* %PC.i612
  %5579 = add i64 %5578, 3
  store i64 %5579, i64* %PC.i612
  %5580 = inttoptr i64 %5577 to i32*
  %5581 = load i32, i32* %5580
  %5582 = zext i32 %5581 to i64
  store i64 %5582, i64* %RDX.i613, align 8
  store %struct.Memory* %loadMem_47d65f, %struct.Memory** %MEMORY
  %loadMem_47d662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5584 = getelementptr inbounds %struct.GPR, %struct.GPR* %5583, i32 0, i32 33
  %5585 = getelementptr inbounds %struct.Reg, %struct.Reg* %5584, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %5585 to i64*
  %5586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5587 = getelementptr inbounds %struct.GPR, %struct.GPR* %5586, i32 0, i32 5
  %5588 = getelementptr inbounds %struct.Reg, %struct.Reg* %5587, i32 0, i32 0
  %RCX.i610 = bitcast %union.anon* %5588 to i64*
  %5589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5590 = getelementptr inbounds %struct.GPR, %struct.GPR* %5589, i32 0, i32 15
  %5591 = getelementptr inbounds %struct.Reg, %struct.Reg* %5590, i32 0, i32 0
  %RBP.i611 = bitcast %union.anon* %5591 to i64*
  %5592 = load i64, i64* %RBP.i611
  %5593 = sub i64 %5592, 68
  %5594 = load i64, i64* %PC.i609
  %5595 = add i64 %5594, 3
  store i64 %5595, i64* %PC.i609
  %5596 = inttoptr i64 %5593 to i32*
  %5597 = load i32, i32* %5596
  %5598 = zext i32 %5597 to i64
  store i64 %5598, i64* %RCX.i610, align 8
  store %struct.Memory* %loadMem_47d662, %struct.Memory** %MEMORY
  %loadMem_47d665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5600 = getelementptr inbounds %struct.GPR, %struct.GPR* %5599, i32 0, i32 33
  %5601 = getelementptr inbounds %struct.Reg, %struct.Reg* %5600, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %5601 to i64*
  %5602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5603 = getelementptr inbounds %struct.GPR, %struct.GPR* %5602, i32 0, i32 1
  %5604 = getelementptr inbounds %struct.Reg, %struct.Reg* %5603, i32 0, i32 0
  %5605 = bitcast %union.anon* %5604 to %struct.anon.2*
  %AL.i608 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5605, i32 0, i32 0
  %5606 = load i64, i64* %PC.i607
  %5607 = add i64 %5606, 2
  store i64 %5607, i64* %PC.i607
  store i8 0, i8* %AL.i608, align 1
  store %struct.Memory* %loadMem_47d665, %struct.Memory** %MEMORY
  %loadMem1_47d667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5609 = getelementptr inbounds %struct.GPR, %struct.GPR* %5608, i32 0, i32 33
  %5610 = getelementptr inbounds %struct.Reg, %struct.Reg* %5609, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %5610 to i64*
  %5611 = load i64, i64* %PC.i606
  %5612 = add i64 %5611, -178359
  %5613 = load i64, i64* %PC.i606
  %5614 = add i64 %5613, 5
  %5615 = load i64, i64* %PC.i606
  %5616 = add i64 %5615, 5
  store i64 %5616, i64* %PC.i606
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5618 = load i64, i64* %5617, align 8
  %5619 = add i64 %5618, -8
  %5620 = inttoptr i64 %5619 to i64*
  store i64 %5614, i64* %5620
  store i64 %5619, i64* %5617, align 8
  %5621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5612, i64* %5621, align 8
  store %struct.Memory* %loadMem1_47d667, %struct.Memory** %MEMORY
  %loadMem2_47d667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d667 = load i64, i64* %3
  %call2_47d667 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_47d667, %struct.Memory* %loadMem2_47d667)
  store %struct.Memory* %call2_47d667, %struct.Memory** %MEMORY
  %loadMem_47d66c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5623 = getelementptr inbounds %struct.GPR, %struct.GPR* %5622, i32 0, i32 33
  %5624 = getelementptr inbounds %struct.Reg, %struct.Reg* %5623, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %5624 to i64*
  %5625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5626 = getelementptr inbounds %struct.GPR, %struct.GPR* %5625, i32 0, i32 1
  %5627 = getelementptr inbounds %struct.Reg, %struct.Reg* %5626, i32 0, i32 0
  %EAX.i604 = bitcast %union.anon* %5627 to i32*
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5629 = getelementptr inbounds %struct.GPR, %struct.GPR* %5628, i32 0, i32 15
  %5630 = getelementptr inbounds %struct.Reg, %struct.Reg* %5629, i32 0, i32 0
  %RBP.i605 = bitcast %union.anon* %5630 to i64*
  %5631 = load i64, i64* %RBP.i605
  %5632 = sub i64 %5631, 112
  %5633 = load i32, i32* %EAX.i604
  %5634 = zext i32 %5633 to i64
  %5635 = load i64, i64* %PC.i603
  %5636 = add i64 %5635, 3
  store i64 %5636, i64* %PC.i603
  %5637 = inttoptr i64 %5632 to i32*
  store i32 %5633, i32* %5637
  store %struct.Memory* %loadMem_47d66c, %struct.Memory** %MEMORY
  br label %block_.L_47d66f

block_.L_47d66f:                                  ; preds = %block_.L_47d652, %block_47d64d
  %loadMem_47d66f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5639 = getelementptr inbounds %struct.GPR, %struct.GPR* %5638, i32 0, i32 33
  %5640 = getelementptr inbounds %struct.Reg, %struct.Reg* %5639, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %5640 to i64*
  %5641 = load i64, i64* %PC.i602
  %5642 = add i64 %5641, 5
  %5643 = load i64, i64* %PC.i602
  %5644 = add i64 %5643, 5
  store i64 %5644, i64* %PC.i602
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5642, i64* %5645, align 8
  store %struct.Memory* %loadMem_47d66f, %struct.Memory** %MEMORY
  br label %block_.L_47d674

block_.L_47d674:                                  ; preds = %block_.L_47d66f, %block_47d5da
  %loadMem_47d674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5647 = getelementptr inbounds %struct.GPR, %struct.GPR* %5646, i32 0, i32 33
  %5648 = getelementptr inbounds %struct.Reg, %struct.Reg* %5647, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %5648 to i64*
  %5649 = load i64, i64* %PC.i601
  %5650 = add i64 %5649, 5
  %5651 = load i64, i64* %PC.i601
  %5652 = add i64 %5651, 5
  store i64 %5652, i64* %PC.i601
  %5653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5650, i64* %5653, align 8
  store %struct.Memory* %loadMem_47d674, %struct.Memory** %MEMORY
  br label %block_.L_47d679

block_.L_47d679:                                  ; preds = %block_.L_47d674, %block_.L_47d5c6, %block_47d5aa, %block_47d58c
  %loadMem_47d679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5655 = getelementptr inbounds %struct.GPR, %struct.GPR* %5654, i32 0, i32 33
  %5656 = getelementptr inbounds %struct.Reg, %struct.Reg* %5655, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %5656 to i64*
  %5657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5658 = getelementptr inbounds %struct.GPR, %struct.GPR* %5657, i32 0, i32 1
  %5659 = getelementptr inbounds %struct.Reg, %struct.Reg* %5658, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %5659 to i64*
  %5660 = load i64, i64* %PC.i599
  %5661 = add i64 %5660, 10
  store i64 %5661, i64* %PC.i599
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i600, align 8
  store %struct.Memory* %loadMem_47d679, %struct.Memory** %MEMORY
  %loadMem_47d683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5663 = getelementptr inbounds %struct.GPR, %struct.GPR* %5662, i32 0, i32 33
  %5664 = getelementptr inbounds %struct.Reg, %struct.Reg* %5663, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %5664 to i64*
  %5665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5666 = getelementptr inbounds %struct.GPR, %struct.GPR* %5665, i32 0, i32 5
  %5667 = getelementptr inbounds %struct.Reg, %struct.Reg* %5666, i32 0, i32 0
  %RCX.i597 = bitcast %union.anon* %5667 to i64*
  %5668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5669 = getelementptr inbounds %struct.GPR, %struct.GPR* %5668, i32 0, i32 15
  %5670 = getelementptr inbounds %struct.Reg, %struct.Reg* %5669, i32 0, i32 0
  %RBP.i598 = bitcast %union.anon* %5670 to i64*
  %5671 = load i64, i64* %RBP.i598
  %5672 = sub i64 %5671, 40
  %5673 = load i64, i64* %PC.i596
  %5674 = add i64 %5673, 4
  store i64 %5674, i64* %PC.i596
  %5675 = inttoptr i64 %5672 to i32*
  %5676 = load i32, i32* %5675
  %5677 = sext i32 %5676 to i64
  store i64 %5677, i64* %RCX.i597, align 8
  store %struct.Memory* %loadMem_47d683, %struct.Memory** %MEMORY
  %loadMem_47d687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5679 = getelementptr inbounds %struct.GPR, %struct.GPR* %5678, i32 0, i32 33
  %5680 = getelementptr inbounds %struct.Reg, %struct.Reg* %5679, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %5680 to i64*
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5682 = getelementptr inbounds %struct.GPR, %struct.GPR* %5681, i32 0, i32 5
  %5683 = getelementptr inbounds %struct.Reg, %struct.Reg* %5682, i32 0, i32 0
  %RCX.i595 = bitcast %union.anon* %5683 to i64*
  %5684 = load i64, i64* %RCX.i595
  %5685 = load i64, i64* %PC.i594
  %5686 = add i64 %5685, 4
  store i64 %5686, i64* %PC.i594
  %5687 = sext i64 %5684 to i128
  %5688 = and i128 %5687, -18446744073709551616
  %5689 = zext i64 %5684 to i128
  %5690 = or i128 %5688, %5689
  %5691 = mul i128 12, %5690
  %5692 = trunc i128 %5691 to i64
  store i64 %5692, i64* %RCX.i595, align 8
  %5693 = sext i64 %5692 to i128
  %5694 = icmp ne i128 %5693, %5691
  %5695 = zext i1 %5694 to i8
  %5696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5695, i8* %5696, align 1
  %5697 = trunc i128 %5691 to i32
  %5698 = and i32 %5697, 255
  %5699 = call i32 @llvm.ctpop.i32(i32 %5698)
  %5700 = trunc i32 %5699 to i8
  %5701 = and i8 %5700, 1
  %5702 = xor i8 %5701, 1
  %5703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5702, i8* %5703, align 1
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5704, align 1
  %5705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5705, align 1
  %5706 = lshr i64 %5692, 63
  %5707 = trunc i64 %5706 to i8
  %5708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5707, i8* %5708, align 1
  %5709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5695, i8* %5709, align 1
  store %struct.Memory* %loadMem_47d687, %struct.Memory** %MEMORY
  %loadMem_47d68b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5711 = getelementptr inbounds %struct.GPR, %struct.GPR* %5710, i32 0, i32 33
  %5712 = getelementptr inbounds %struct.Reg, %struct.Reg* %5711, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %5712 to i64*
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5714 = getelementptr inbounds %struct.GPR, %struct.GPR* %5713, i32 0, i32 1
  %5715 = getelementptr inbounds %struct.Reg, %struct.Reg* %5714, i32 0, i32 0
  %RAX.i592 = bitcast %union.anon* %5715 to i64*
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5717 = getelementptr inbounds %struct.GPR, %struct.GPR* %5716, i32 0, i32 5
  %5718 = getelementptr inbounds %struct.Reg, %struct.Reg* %5717, i32 0, i32 0
  %RCX.i593 = bitcast %union.anon* %5718 to i64*
  %5719 = load i64, i64* %RAX.i592
  %5720 = load i64, i64* %RCX.i593
  %5721 = load i64, i64* %PC.i591
  %5722 = add i64 %5721, 3
  store i64 %5722, i64* %PC.i591
  %5723 = add i64 %5720, %5719
  store i64 %5723, i64* %RAX.i592, align 8
  %5724 = icmp ult i64 %5723, %5719
  %5725 = icmp ult i64 %5723, %5720
  %5726 = or i1 %5724, %5725
  %5727 = zext i1 %5726 to i8
  %5728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5727, i8* %5728, align 1
  %5729 = trunc i64 %5723 to i32
  %5730 = and i32 %5729, 255
  %5731 = call i32 @llvm.ctpop.i32(i32 %5730)
  %5732 = trunc i32 %5731 to i8
  %5733 = and i8 %5732, 1
  %5734 = xor i8 %5733, 1
  %5735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5734, i8* %5735, align 1
  %5736 = xor i64 %5720, %5719
  %5737 = xor i64 %5736, %5723
  %5738 = lshr i64 %5737, 4
  %5739 = trunc i64 %5738 to i8
  %5740 = and i8 %5739, 1
  %5741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5740, i8* %5741, align 1
  %5742 = icmp eq i64 %5723, 0
  %5743 = zext i1 %5742 to i8
  %5744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5743, i8* %5744, align 1
  %5745 = lshr i64 %5723, 63
  %5746 = trunc i64 %5745 to i8
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5746, i8* %5747, align 1
  %5748 = lshr i64 %5719, 63
  %5749 = lshr i64 %5720, 63
  %5750 = xor i64 %5745, %5748
  %5751 = xor i64 %5745, %5749
  %5752 = add i64 %5750, %5751
  %5753 = icmp eq i64 %5752, 2
  %5754 = zext i1 %5753 to i8
  %5755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5754, i8* %5755, align 1
  store %struct.Memory* %loadMem_47d68b, %struct.Memory** %MEMORY
  %loadMem_47d68e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5757 = getelementptr inbounds %struct.GPR, %struct.GPR* %5756, i32 0, i32 33
  %5758 = getelementptr inbounds %struct.Reg, %struct.Reg* %5757, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %5758 to i64*
  %5759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5760 = getelementptr inbounds %struct.GPR, %struct.GPR* %5759, i32 0, i32 1
  %5761 = getelementptr inbounds %struct.Reg, %struct.Reg* %5760, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %5761 to i64*
  %5762 = load i64, i64* %RAX.i590
  %5763 = load i64, i64* %PC.i589
  %5764 = add i64 %5763, 3
  store i64 %5764, i64* %PC.i589
  %5765 = inttoptr i64 %5762 to i32*
  %5766 = load i32, i32* %5765
  %5767 = sub i32 %5766, 46
  %5768 = icmp ult i32 %5766, 46
  %5769 = zext i1 %5768 to i8
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5769, i8* %5770, align 1
  %5771 = and i32 %5767, 255
  %5772 = call i32 @llvm.ctpop.i32(i32 %5771)
  %5773 = trunc i32 %5772 to i8
  %5774 = and i8 %5773, 1
  %5775 = xor i8 %5774, 1
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5775, i8* %5776, align 1
  %5777 = xor i32 %5766, 46
  %5778 = xor i32 %5777, %5767
  %5779 = lshr i32 %5778, 4
  %5780 = trunc i32 %5779 to i8
  %5781 = and i8 %5780, 1
  %5782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5781, i8* %5782, align 1
  %5783 = icmp eq i32 %5767, 0
  %5784 = zext i1 %5783 to i8
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5784, i8* %5785, align 1
  %5786 = lshr i32 %5767, 31
  %5787 = trunc i32 %5786 to i8
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5787, i8* %5788, align 1
  %5789 = lshr i32 %5766, 31
  %5790 = xor i32 %5786, %5789
  %5791 = add i32 %5790, %5789
  %5792 = icmp eq i32 %5791, 2
  %5793 = zext i1 %5792 to i8
  %5794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5793, i8* %5794, align 1
  store %struct.Memory* %loadMem_47d68e, %struct.Memory** %MEMORY
  %loadMem_47d691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5796 = getelementptr inbounds %struct.GPR, %struct.GPR* %5795, i32 0, i32 33
  %5797 = getelementptr inbounds %struct.Reg, %struct.Reg* %5796, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %5797 to i64*
  %5798 = load i64, i64* %PC.i588
  %5799 = add i64 %5798, 177
  %5800 = load i64, i64* %PC.i588
  %5801 = add i64 %5800, 6
  %5802 = load i64, i64* %PC.i588
  %5803 = add i64 %5802, 6
  store i64 %5803, i64* %PC.i588
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5805 = load i8, i8* %5804, align 1
  store i8 %5805, i8* %BRANCH_TAKEN, align 1
  %5806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5807 = icmp ne i8 %5805, 0
  %5808 = select i1 %5807, i64 %5799, i64 %5801
  store i64 %5808, i64* %5806, align 8
  store %struct.Memory* %loadMem_47d691, %struct.Memory** %MEMORY
  %loadBr_47d691 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d691 = icmp eq i8 %loadBr_47d691, 1
  br i1 %cmpBr_47d691, label %block_.L_47d742, label %block_47d697

block_47d697:                                     ; preds = %block_.L_47d679
  %loadMem_47d697 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5810 = getelementptr inbounds %struct.GPR, %struct.GPR* %5809, i32 0, i32 33
  %5811 = getelementptr inbounds %struct.Reg, %struct.Reg* %5810, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %5811 to i64*
  %5812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5813 = getelementptr inbounds %struct.GPR, %struct.GPR* %5812, i32 0, i32 1
  %5814 = getelementptr inbounds %struct.Reg, %struct.Reg* %5813, i32 0, i32 0
  %RAX.i587 = bitcast %union.anon* %5814 to i64*
  %5815 = load i64, i64* %PC.i586
  %5816 = add i64 %5815, 10
  store i64 %5816, i64* %PC.i586
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i587, align 8
  store %struct.Memory* %loadMem_47d697, %struct.Memory** %MEMORY
  %loadMem_47d6a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5818 = getelementptr inbounds %struct.GPR, %struct.GPR* %5817, i32 0, i32 33
  %5819 = getelementptr inbounds %struct.Reg, %struct.Reg* %5818, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %5819 to i64*
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 5
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %RCX.i584 = bitcast %union.anon* %5822 to i64*
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5824 = getelementptr inbounds %struct.GPR, %struct.GPR* %5823, i32 0, i32 15
  %5825 = getelementptr inbounds %struct.Reg, %struct.Reg* %5824, i32 0, i32 0
  %RBP.i585 = bitcast %union.anon* %5825 to i64*
  %5826 = load i64, i64* %RBP.i585
  %5827 = sub i64 %5826, 40
  %5828 = load i64, i64* %PC.i583
  %5829 = add i64 %5828, 4
  store i64 %5829, i64* %PC.i583
  %5830 = inttoptr i64 %5827 to i32*
  %5831 = load i32, i32* %5830
  %5832 = sext i32 %5831 to i64
  store i64 %5832, i64* %RCX.i584, align 8
  store %struct.Memory* %loadMem_47d6a1, %struct.Memory** %MEMORY
  %loadMem_47d6a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5834 = getelementptr inbounds %struct.GPR, %struct.GPR* %5833, i32 0, i32 33
  %5835 = getelementptr inbounds %struct.Reg, %struct.Reg* %5834, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %5835 to i64*
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5837 = getelementptr inbounds %struct.GPR, %struct.GPR* %5836, i32 0, i32 5
  %5838 = getelementptr inbounds %struct.Reg, %struct.Reg* %5837, i32 0, i32 0
  %RCX.i582 = bitcast %union.anon* %5838 to i64*
  %5839 = load i64, i64* %RCX.i582
  %5840 = load i64, i64* %PC.i581
  %5841 = add i64 %5840, 4
  store i64 %5841, i64* %PC.i581
  %5842 = sext i64 %5839 to i128
  %5843 = and i128 %5842, -18446744073709551616
  %5844 = zext i64 %5839 to i128
  %5845 = or i128 %5843, %5844
  %5846 = mul i128 12, %5845
  %5847 = trunc i128 %5846 to i64
  store i64 %5847, i64* %RCX.i582, align 8
  %5848 = sext i64 %5847 to i128
  %5849 = icmp ne i128 %5848, %5846
  %5850 = zext i1 %5849 to i8
  %5851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5850, i8* %5851, align 1
  %5852 = trunc i128 %5846 to i32
  %5853 = and i32 %5852, 255
  %5854 = call i32 @llvm.ctpop.i32(i32 %5853)
  %5855 = trunc i32 %5854 to i8
  %5856 = and i8 %5855, 1
  %5857 = xor i8 %5856, 1
  %5858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5857, i8* %5858, align 1
  %5859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5859, align 1
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5860, align 1
  %5861 = lshr i64 %5847, 63
  %5862 = trunc i64 %5861 to i8
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5862, i8* %5863, align 1
  %5864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5850, i8* %5864, align 1
  store %struct.Memory* %loadMem_47d6a5, %struct.Memory** %MEMORY
  %loadMem_47d6a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5866 = getelementptr inbounds %struct.GPR, %struct.GPR* %5865, i32 0, i32 33
  %5867 = getelementptr inbounds %struct.Reg, %struct.Reg* %5866, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %5867 to i64*
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5869 = getelementptr inbounds %struct.GPR, %struct.GPR* %5868, i32 0, i32 1
  %5870 = getelementptr inbounds %struct.Reg, %struct.Reg* %5869, i32 0, i32 0
  %RAX.i579 = bitcast %union.anon* %5870 to i64*
  %5871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5872 = getelementptr inbounds %struct.GPR, %struct.GPR* %5871, i32 0, i32 5
  %5873 = getelementptr inbounds %struct.Reg, %struct.Reg* %5872, i32 0, i32 0
  %RCX.i580 = bitcast %union.anon* %5873 to i64*
  %5874 = load i64, i64* %RAX.i579
  %5875 = load i64, i64* %RCX.i580
  %5876 = load i64, i64* %PC.i578
  %5877 = add i64 %5876, 3
  store i64 %5877, i64* %PC.i578
  %5878 = add i64 %5875, %5874
  store i64 %5878, i64* %RAX.i579, align 8
  %5879 = icmp ult i64 %5878, %5874
  %5880 = icmp ult i64 %5878, %5875
  %5881 = or i1 %5879, %5880
  %5882 = zext i1 %5881 to i8
  %5883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5882, i8* %5883, align 1
  %5884 = trunc i64 %5878 to i32
  %5885 = and i32 %5884, 255
  %5886 = call i32 @llvm.ctpop.i32(i32 %5885)
  %5887 = trunc i32 %5886 to i8
  %5888 = and i8 %5887, 1
  %5889 = xor i8 %5888, 1
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5889, i8* %5890, align 1
  %5891 = xor i64 %5875, %5874
  %5892 = xor i64 %5891, %5878
  %5893 = lshr i64 %5892, 4
  %5894 = trunc i64 %5893 to i8
  %5895 = and i8 %5894, 1
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5895, i8* %5896, align 1
  %5897 = icmp eq i64 %5878, 0
  %5898 = zext i1 %5897 to i8
  %5899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5898, i8* %5899, align 1
  %5900 = lshr i64 %5878, 63
  %5901 = trunc i64 %5900 to i8
  %5902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5901, i8* %5902, align 1
  %5903 = lshr i64 %5874, 63
  %5904 = lshr i64 %5875, 63
  %5905 = xor i64 %5900, %5903
  %5906 = xor i64 %5900, %5904
  %5907 = add i64 %5905, %5906
  %5908 = icmp eq i64 %5907, 2
  %5909 = zext i1 %5908 to i8
  %5910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5909, i8* %5910, align 1
  store %struct.Memory* %loadMem_47d6a9, %struct.Memory** %MEMORY
  %loadMem_47d6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5912 = getelementptr inbounds %struct.GPR, %struct.GPR* %5911, i32 0, i32 33
  %5913 = getelementptr inbounds %struct.Reg, %struct.Reg* %5912, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %5913 to i64*
  %5914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5915 = getelementptr inbounds %struct.GPR, %struct.GPR* %5914, i32 0, i32 1
  %5916 = getelementptr inbounds %struct.Reg, %struct.Reg* %5915, i32 0, i32 0
  %RAX.i577 = bitcast %union.anon* %5916 to i64*
  %5917 = load i64, i64* %RAX.i577
  %5918 = load i64, i64* %PC.i576
  %5919 = add i64 %5918, 3
  store i64 %5919, i64* %PC.i576
  %5920 = inttoptr i64 %5917 to i32*
  %5921 = load i32, i32* %5920
  %5922 = sub i32 %5921, 14
  %5923 = icmp ult i32 %5921, 14
  %5924 = zext i1 %5923 to i8
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5924, i8* %5925, align 1
  %5926 = and i32 %5922, 255
  %5927 = call i32 @llvm.ctpop.i32(i32 %5926)
  %5928 = trunc i32 %5927 to i8
  %5929 = and i8 %5928, 1
  %5930 = xor i8 %5929, 1
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5930, i8* %5931, align 1
  %5932 = xor i32 %5921, 14
  %5933 = xor i32 %5932, %5922
  %5934 = lshr i32 %5933, 4
  %5935 = trunc i32 %5934 to i8
  %5936 = and i8 %5935, 1
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5936, i8* %5937, align 1
  %5938 = icmp eq i32 %5922, 0
  %5939 = zext i1 %5938 to i8
  %5940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5939, i8* %5940, align 1
  %5941 = lshr i32 %5922, 31
  %5942 = trunc i32 %5941 to i8
  %5943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5942, i8* %5943, align 1
  %5944 = lshr i32 %5921, 31
  %5945 = xor i32 %5941, %5944
  %5946 = add i32 %5945, %5944
  %5947 = icmp eq i32 %5946, 2
  %5948 = zext i1 %5947 to i8
  %5949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5948, i8* %5949, align 1
  store %struct.Memory* %loadMem_47d6ac, %struct.Memory** %MEMORY
  %loadMem_47d6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5951 = getelementptr inbounds %struct.GPR, %struct.GPR* %5950, i32 0, i32 33
  %5952 = getelementptr inbounds %struct.Reg, %struct.Reg* %5951, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %5952 to i64*
  %5953 = load i64, i64* %PC.i575
  %5954 = add i64 %5953, 147
  %5955 = load i64, i64* %PC.i575
  %5956 = add i64 %5955, 6
  %5957 = load i64, i64* %PC.i575
  %5958 = add i64 %5957, 6
  store i64 %5958, i64* %PC.i575
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5960 = load i8, i8* %5959, align 1
  store i8 %5960, i8* %BRANCH_TAKEN, align 1
  %5961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5962 = icmp ne i8 %5960, 0
  %5963 = select i1 %5962, i64 %5954, i64 %5956
  store i64 %5963, i64* %5961, align 8
  store %struct.Memory* %loadMem_47d6af, %struct.Memory** %MEMORY
  %loadBr_47d6af = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d6af = icmp eq i8 %loadBr_47d6af, 1
  br i1 %cmpBr_47d6af, label %block_.L_47d742, label %block_47d6b5

block_47d6b5:                                     ; preds = %block_47d697
  %loadMem_47d6b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5965 = getelementptr inbounds %struct.GPR, %struct.GPR* %5964, i32 0, i32 33
  %5966 = getelementptr inbounds %struct.Reg, %struct.Reg* %5965, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %5966 to i64*
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5968 = getelementptr inbounds %struct.GPR, %struct.GPR* %5967, i32 0, i32 1
  %5969 = getelementptr inbounds %struct.Reg, %struct.Reg* %5968, i32 0, i32 0
  %RAX.i574 = bitcast %union.anon* %5969 to i64*
  %5970 = load i64, i64* %PC.i573
  %5971 = add i64 %5970, 10
  store i64 %5971, i64* %PC.i573
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i574, align 8
  store %struct.Memory* %loadMem_47d6b5, %struct.Memory** %MEMORY
  %loadMem_47d6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5973 = getelementptr inbounds %struct.GPR, %struct.GPR* %5972, i32 0, i32 33
  %5974 = getelementptr inbounds %struct.Reg, %struct.Reg* %5973, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %5974 to i64*
  %5975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5976 = getelementptr inbounds %struct.GPR, %struct.GPR* %5975, i32 0, i32 5
  %5977 = getelementptr inbounds %struct.Reg, %struct.Reg* %5976, i32 0, i32 0
  %RCX.i571 = bitcast %union.anon* %5977 to i64*
  %5978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5979 = getelementptr inbounds %struct.GPR, %struct.GPR* %5978, i32 0, i32 15
  %5980 = getelementptr inbounds %struct.Reg, %struct.Reg* %5979, i32 0, i32 0
  %RBP.i572 = bitcast %union.anon* %5980 to i64*
  %5981 = load i64, i64* %RBP.i572
  %5982 = sub i64 %5981, 40
  %5983 = load i64, i64* %PC.i570
  %5984 = add i64 %5983, 4
  store i64 %5984, i64* %PC.i570
  %5985 = inttoptr i64 %5982 to i32*
  %5986 = load i32, i32* %5985
  %5987 = sext i32 %5986 to i64
  store i64 %5987, i64* %RCX.i571, align 8
  store %struct.Memory* %loadMem_47d6bf, %struct.Memory** %MEMORY
  %loadMem_47d6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5989 = getelementptr inbounds %struct.GPR, %struct.GPR* %5988, i32 0, i32 33
  %5990 = getelementptr inbounds %struct.Reg, %struct.Reg* %5989, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %5990 to i64*
  %5991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5992 = getelementptr inbounds %struct.GPR, %struct.GPR* %5991, i32 0, i32 5
  %5993 = getelementptr inbounds %struct.Reg, %struct.Reg* %5992, i32 0, i32 0
  %RCX.i569 = bitcast %union.anon* %5993 to i64*
  %5994 = load i64, i64* %RCX.i569
  %5995 = load i64, i64* %PC.i568
  %5996 = add i64 %5995, 4
  store i64 %5996, i64* %PC.i568
  %5997 = sext i64 %5994 to i128
  %5998 = and i128 %5997, -18446744073709551616
  %5999 = zext i64 %5994 to i128
  %6000 = or i128 %5998, %5999
  %6001 = mul i128 12, %6000
  %6002 = trunc i128 %6001 to i64
  store i64 %6002, i64* %RCX.i569, align 8
  %6003 = sext i64 %6002 to i128
  %6004 = icmp ne i128 %6003, %6001
  %6005 = zext i1 %6004 to i8
  %6006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6005, i8* %6006, align 1
  %6007 = trunc i128 %6001 to i32
  %6008 = and i32 %6007, 255
  %6009 = call i32 @llvm.ctpop.i32(i32 %6008)
  %6010 = trunc i32 %6009 to i8
  %6011 = and i8 %6010, 1
  %6012 = xor i8 %6011, 1
  %6013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6012, i8* %6013, align 1
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6014, align 1
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6015, align 1
  %6016 = lshr i64 %6002, 63
  %6017 = trunc i64 %6016 to i8
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6017, i8* %6018, align 1
  %6019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6005, i8* %6019, align 1
  store %struct.Memory* %loadMem_47d6c3, %struct.Memory** %MEMORY
  %loadMem_47d6c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6021 = getelementptr inbounds %struct.GPR, %struct.GPR* %6020, i32 0, i32 33
  %6022 = getelementptr inbounds %struct.Reg, %struct.Reg* %6021, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %6022 to i64*
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6024 = getelementptr inbounds %struct.GPR, %struct.GPR* %6023, i32 0, i32 1
  %6025 = getelementptr inbounds %struct.Reg, %struct.Reg* %6024, i32 0, i32 0
  %RAX.i566 = bitcast %union.anon* %6025 to i64*
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 5
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %RCX.i567 = bitcast %union.anon* %6028 to i64*
  %6029 = load i64, i64* %RAX.i566
  %6030 = load i64, i64* %RCX.i567
  %6031 = load i64, i64* %PC.i565
  %6032 = add i64 %6031, 3
  store i64 %6032, i64* %PC.i565
  %6033 = add i64 %6030, %6029
  store i64 %6033, i64* %RAX.i566, align 8
  %6034 = icmp ult i64 %6033, %6029
  %6035 = icmp ult i64 %6033, %6030
  %6036 = or i1 %6034, %6035
  %6037 = zext i1 %6036 to i8
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6037, i8* %6038, align 1
  %6039 = trunc i64 %6033 to i32
  %6040 = and i32 %6039, 255
  %6041 = call i32 @llvm.ctpop.i32(i32 %6040)
  %6042 = trunc i32 %6041 to i8
  %6043 = and i8 %6042, 1
  %6044 = xor i8 %6043, 1
  %6045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6044, i8* %6045, align 1
  %6046 = xor i64 %6030, %6029
  %6047 = xor i64 %6046, %6033
  %6048 = lshr i64 %6047, 4
  %6049 = trunc i64 %6048 to i8
  %6050 = and i8 %6049, 1
  %6051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6050, i8* %6051, align 1
  %6052 = icmp eq i64 %6033, 0
  %6053 = zext i1 %6052 to i8
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6053, i8* %6054, align 1
  %6055 = lshr i64 %6033, 63
  %6056 = trunc i64 %6055 to i8
  %6057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6056, i8* %6057, align 1
  %6058 = lshr i64 %6029, 63
  %6059 = lshr i64 %6030, 63
  %6060 = xor i64 %6055, %6058
  %6061 = xor i64 %6055, %6059
  %6062 = add i64 %6060, %6061
  %6063 = icmp eq i64 %6062, 2
  %6064 = zext i1 %6063 to i8
  %6065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6064, i8* %6065, align 1
  store %struct.Memory* %loadMem_47d6c7, %struct.Memory** %MEMORY
  %loadMem_47d6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6067 = getelementptr inbounds %struct.GPR, %struct.GPR* %6066, i32 0, i32 33
  %6068 = getelementptr inbounds %struct.Reg, %struct.Reg* %6067, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %6068 to i64*
  %6069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6070 = getelementptr inbounds %struct.GPR, %struct.GPR* %6069, i32 0, i32 1
  %6071 = getelementptr inbounds %struct.Reg, %struct.Reg* %6070, i32 0, i32 0
  %RAX.i564 = bitcast %union.anon* %6071 to i64*
  %6072 = load i64, i64* %RAX.i564
  %6073 = load i64, i64* %PC.i563
  %6074 = add i64 %6073, 3
  store i64 %6074, i64* %PC.i563
  %6075 = inttoptr i64 %6072 to i32*
  %6076 = load i32, i32* %6075
  %6077 = sub i32 %6076, 8
  %6078 = icmp ult i32 %6076, 8
  %6079 = zext i1 %6078 to i8
  %6080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6079, i8* %6080, align 1
  %6081 = and i32 %6077, 255
  %6082 = call i32 @llvm.ctpop.i32(i32 %6081)
  %6083 = trunc i32 %6082 to i8
  %6084 = and i8 %6083, 1
  %6085 = xor i8 %6084, 1
  %6086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6085, i8* %6086, align 1
  %6087 = xor i32 %6076, 8
  %6088 = xor i32 %6087, %6077
  %6089 = lshr i32 %6088, 4
  %6090 = trunc i32 %6089 to i8
  %6091 = and i8 %6090, 1
  %6092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6091, i8* %6092, align 1
  %6093 = icmp eq i32 %6077, 0
  %6094 = zext i1 %6093 to i8
  %6095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6094, i8* %6095, align 1
  %6096 = lshr i32 %6077, 31
  %6097 = trunc i32 %6096 to i8
  %6098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6097, i8* %6098, align 1
  %6099 = lshr i32 %6076, 31
  %6100 = xor i32 %6096, %6099
  %6101 = add i32 %6100, %6099
  %6102 = icmp eq i32 %6101, 2
  %6103 = zext i1 %6102 to i8
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6103, i8* %6104, align 1
  store %struct.Memory* %loadMem_47d6ca, %struct.Memory** %MEMORY
  %loadMem_47d6cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6106 = getelementptr inbounds %struct.GPR, %struct.GPR* %6105, i32 0, i32 33
  %6107 = getelementptr inbounds %struct.Reg, %struct.Reg* %6106, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %6107 to i64*
  %6108 = load i64, i64* %PC.i562
  %6109 = add i64 %6108, 117
  %6110 = load i64, i64* %PC.i562
  %6111 = add i64 %6110, 6
  %6112 = load i64, i64* %PC.i562
  %6113 = add i64 %6112, 6
  store i64 %6113, i64* %PC.i562
  %6114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6115 = load i8, i8* %6114, align 1
  store i8 %6115, i8* %BRANCH_TAKEN, align 1
  %6116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6117 = icmp ne i8 %6115, 0
  %6118 = select i1 %6117, i64 %6109, i64 %6111
  store i64 %6118, i64* %6116, align 8
  store %struct.Memory* %loadMem_47d6cd, %struct.Memory** %MEMORY
  %loadBr_47d6cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d6cd = icmp eq i8 %loadBr_47d6cd, 1
  br i1 %cmpBr_47d6cd, label %block_.L_47d742, label %block_47d6d3

block_47d6d3:                                     ; preds = %block_47d6b5
  %loadMem_47d6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6120 = getelementptr inbounds %struct.GPR, %struct.GPR* %6119, i32 0, i32 33
  %6121 = getelementptr inbounds %struct.Reg, %struct.Reg* %6120, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %6121 to i64*
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6123 = getelementptr inbounds %struct.GPR, %struct.GPR* %6122, i32 0, i32 1
  %6124 = getelementptr inbounds %struct.Reg, %struct.Reg* %6123, i32 0, i32 0
  %RAX.i561 = bitcast %union.anon* %6124 to i64*
  %6125 = load i64, i64* %PC.i560
  %6126 = add i64 %6125, 10
  store i64 %6126, i64* %PC.i560
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i561, align 8
  store %struct.Memory* %loadMem_47d6d3, %struct.Memory** %MEMORY
  %loadMem_47d6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6128 = getelementptr inbounds %struct.GPR, %struct.GPR* %6127, i32 0, i32 33
  %6129 = getelementptr inbounds %struct.Reg, %struct.Reg* %6128, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %6129 to i64*
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6131 = getelementptr inbounds %struct.GPR, %struct.GPR* %6130, i32 0, i32 5
  %6132 = getelementptr inbounds %struct.Reg, %struct.Reg* %6131, i32 0, i32 0
  %RCX.i558 = bitcast %union.anon* %6132 to i64*
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6134 = getelementptr inbounds %struct.GPR, %struct.GPR* %6133, i32 0, i32 15
  %6135 = getelementptr inbounds %struct.Reg, %struct.Reg* %6134, i32 0, i32 0
  %RBP.i559 = bitcast %union.anon* %6135 to i64*
  %6136 = load i64, i64* %RBP.i559
  %6137 = sub i64 %6136, 40
  %6138 = load i64, i64* %PC.i557
  %6139 = add i64 %6138, 4
  store i64 %6139, i64* %PC.i557
  %6140 = inttoptr i64 %6137 to i32*
  %6141 = load i32, i32* %6140
  %6142 = sext i32 %6141 to i64
  store i64 %6142, i64* %RCX.i558, align 8
  store %struct.Memory* %loadMem_47d6dd, %struct.Memory** %MEMORY
  %loadMem_47d6e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6144 = getelementptr inbounds %struct.GPR, %struct.GPR* %6143, i32 0, i32 33
  %6145 = getelementptr inbounds %struct.Reg, %struct.Reg* %6144, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %6145 to i64*
  %6146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6147 = getelementptr inbounds %struct.GPR, %struct.GPR* %6146, i32 0, i32 5
  %6148 = getelementptr inbounds %struct.Reg, %struct.Reg* %6147, i32 0, i32 0
  %RCX.i556 = bitcast %union.anon* %6148 to i64*
  %6149 = load i64, i64* %RCX.i556
  %6150 = load i64, i64* %PC.i555
  %6151 = add i64 %6150, 4
  store i64 %6151, i64* %PC.i555
  %6152 = sext i64 %6149 to i128
  %6153 = and i128 %6152, -18446744073709551616
  %6154 = zext i64 %6149 to i128
  %6155 = or i128 %6153, %6154
  %6156 = mul i128 12, %6155
  %6157 = trunc i128 %6156 to i64
  store i64 %6157, i64* %RCX.i556, align 8
  %6158 = sext i64 %6157 to i128
  %6159 = icmp ne i128 %6158, %6156
  %6160 = zext i1 %6159 to i8
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6160, i8* %6161, align 1
  %6162 = trunc i128 %6156 to i32
  %6163 = and i32 %6162, 255
  %6164 = call i32 @llvm.ctpop.i32(i32 %6163)
  %6165 = trunc i32 %6164 to i8
  %6166 = and i8 %6165, 1
  %6167 = xor i8 %6166, 1
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6167, i8* %6168, align 1
  %6169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6169, align 1
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6170, align 1
  %6171 = lshr i64 %6157, 63
  %6172 = trunc i64 %6171 to i8
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6172, i8* %6173, align 1
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6160, i8* %6174, align 1
  store %struct.Memory* %loadMem_47d6e1, %struct.Memory** %MEMORY
  %loadMem_47d6e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6176 = getelementptr inbounds %struct.GPR, %struct.GPR* %6175, i32 0, i32 33
  %6177 = getelementptr inbounds %struct.Reg, %struct.Reg* %6176, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %6177 to i64*
  %6178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6179 = getelementptr inbounds %struct.GPR, %struct.GPR* %6178, i32 0, i32 1
  %6180 = getelementptr inbounds %struct.Reg, %struct.Reg* %6179, i32 0, i32 0
  %RAX.i553 = bitcast %union.anon* %6180 to i64*
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6182 = getelementptr inbounds %struct.GPR, %struct.GPR* %6181, i32 0, i32 5
  %6183 = getelementptr inbounds %struct.Reg, %struct.Reg* %6182, i32 0, i32 0
  %RCX.i554 = bitcast %union.anon* %6183 to i64*
  %6184 = load i64, i64* %RAX.i553
  %6185 = load i64, i64* %RCX.i554
  %6186 = load i64, i64* %PC.i552
  %6187 = add i64 %6186, 3
  store i64 %6187, i64* %PC.i552
  %6188 = add i64 %6185, %6184
  store i64 %6188, i64* %RAX.i553, align 8
  %6189 = icmp ult i64 %6188, %6184
  %6190 = icmp ult i64 %6188, %6185
  %6191 = or i1 %6189, %6190
  %6192 = zext i1 %6191 to i8
  %6193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6192, i8* %6193, align 1
  %6194 = trunc i64 %6188 to i32
  %6195 = and i32 %6194, 255
  %6196 = call i32 @llvm.ctpop.i32(i32 %6195)
  %6197 = trunc i32 %6196 to i8
  %6198 = and i8 %6197, 1
  %6199 = xor i8 %6198, 1
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6199, i8* %6200, align 1
  %6201 = xor i64 %6185, %6184
  %6202 = xor i64 %6201, %6188
  %6203 = lshr i64 %6202, 4
  %6204 = trunc i64 %6203 to i8
  %6205 = and i8 %6204, 1
  %6206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6205, i8* %6206, align 1
  %6207 = icmp eq i64 %6188, 0
  %6208 = zext i1 %6207 to i8
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6208, i8* %6209, align 1
  %6210 = lshr i64 %6188, 63
  %6211 = trunc i64 %6210 to i8
  %6212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6211, i8* %6212, align 1
  %6213 = lshr i64 %6184, 63
  %6214 = lshr i64 %6185, 63
  %6215 = xor i64 %6210, %6213
  %6216 = xor i64 %6210, %6214
  %6217 = add i64 %6215, %6216
  %6218 = icmp eq i64 %6217, 2
  %6219 = zext i1 %6218 to i8
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6219, i8* %6220, align 1
  store %struct.Memory* %loadMem_47d6e5, %struct.Memory** %MEMORY
  %loadMem_47d6e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6222 = getelementptr inbounds %struct.GPR, %struct.GPR* %6221, i32 0, i32 33
  %6223 = getelementptr inbounds %struct.Reg, %struct.Reg* %6222, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %6223 to i64*
  %6224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6225 = getelementptr inbounds %struct.GPR, %struct.GPR* %6224, i32 0, i32 1
  %6226 = getelementptr inbounds %struct.Reg, %struct.Reg* %6225, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %6226 to i64*
  %6227 = load i64, i64* %RAX.i551
  %6228 = load i64, i64* %PC.i550
  %6229 = add i64 %6228, 3
  store i64 %6229, i64* %PC.i550
  %6230 = inttoptr i64 %6227 to i32*
  %6231 = load i32, i32* %6230
  %6232 = sub i32 %6231, 10
  %6233 = icmp ult i32 %6231, 10
  %6234 = zext i1 %6233 to i8
  %6235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6234, i8* %6235, align 1
  %6236 = and i32 %6232, 255
  %6237 = call i32 @llvm.ctpop.i32(i32 %6236)
  %6238 = trunc i32 %6237 to i8
  %6239 = and i8 %6238, 1
  %6240 = xor i8 %6239, 1
  %6241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6240, i8* %6241, align 1
  %6242 = xor i32 %6231, 10
  %6243 = xor i32 %6242, %6232
  %6244 = lshr i32 %6243, 4
  %6245 = trunc i32 %6244 to i8
  %6246 = and i8 %6245, 1
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6246, i8* %6247, align 1
  %6248 = icmp eq i32 %6232, 0
  %6249 = zext i1 %6248 to i8
  %6250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6249, i8* %6250, align 1
  %6251 = lshr i32 %6232, 31
  %6252 = trunc i32 %6251 to i8
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6252, i8* %6253, align 1
  %6254 = lshr i32 %6231, 31
  %6255 = xor i32 %6251, %6254
  %6256 = add i32 %6255, %6254
  %6257 = icmp eq i32 %6256, 2
  %6258 = zext i1 %6257 to i8
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6258, i8* %6259, align 1
  store %struct.Memory* %loadMem_47d6e8, %struct.Memory** %MEMORY
  %loadMem_47d6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6261 = getelementptr inbounds %struct.GPR, %struct.GPR* %6260, i32 0, i32 33
  %6262 = getelementptr inbounds %struct.Reg, %struct.Reg* %6261, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %6262 to i64*
  %6263 = load i64, i64* %PC.i549
  %6264 = add i64 %6263, 87
  %6265 = load i64, i64* %PC.i549
  %6266 = add i64 %6265, 6
  %6267 = load i64, i64* %PC.i549
  %6268 = add i64 %6267, 6
  store i64 %6268, i64* %PC.i549
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6270 = load i8, i8* %6269, align 1
  store i8 %6270, i8* %BRANCH_TAKEN, align 1
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6272 = icmp ne i8 %6270, 0
  %6273 = select i1 %6272, i64 %6264, i64 %6266
  store i64 %6273, i64* %6271, align 8
  store %struct.Memory* %loadMem_47d6eb, %struct.Memory** %MEMORY
  %loadBr_47d6eb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d6eb = icmp eq i8 %loadBr_47d6eb, 1
  br i1 %cmpBr_47d6eb, label %block_.L_47d742, label %block_47d6f1

block_47d6f1:                                     ; preds = %block_47d6d3
  %loadMem_47d6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6275 = getelementptr inbounds %struct.GPR, %struct.GPR* %6274, i32 0, i32 33
  %6276 = getelementptr inbounds %struct.Reg, %struct.Reg* %6275, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %6276 to i64*
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6278 = getelementptr inbounds %struct.GPR, %struct.GPR* %6277, i32 0, i32 1
  %6279 = getelementptr inbounds %struct.Reg, %struct.Reg* %6278, i32 0, i32 0
  %RAX.i548 = bitcast %union.anon* %6279 to i64*
  %6280 = load i64, i64* %PC.i547
  %6281 = add i64 %6280, 10
  store i64 %6281, i64* %PC.i547
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i548, align 8
  store %struct.Memory* %loadMem_47d6f1, %struct.Memory** %MEMORY
  %loadMem_47d6fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6283 = getelementptr inbounds %struct.GPR, %struct.GPR* %6282, i32 0, i32 33
  %6284 = getelementptr inbounds %struct.Reg, %struct.Reg* %6283, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %6284 to i64*
  %6285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6286 = getelementptr inbounds %struct.GPR, %struct.GPR* %6285, i32 0, i32 5
  %6287 = getelementptr inbounds %struct.Reg, %struct.Reg* %6286, i32 0, i32 0
  %RCX.i545 = bitcast %union.anon* %6287 to i64*
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6289 = getelementptr inbounds %struct.GPR, %struct.GPR* %6288, i32 0, i32 15
  %6290 = getelementptr inbounds %struct.Reg, %struct.Reg* %6289, i32 0, i32 0
  %RBP.i546 = bitcast %union.anon* %6290 to i64*
  %6291 = load i64, i64* %RBP.i546
  %6292 = sub i64 %6291, 40
  %6293 = load i64, i64* %PC.i544
  %6294 = add i64 %6293, 4
  store i64 %6294, i64* %PC.i544
  %6295 = inttoptr i64 %6292 to i32*
  %6296 = load i32, i32* %6295
  %6297 = sext i32 %6296 to i64
  store i64 %6297, i64* %RCX.i545, align 8
  store %struct.Memory* %loadMem_47d6fb, %struct.Memory** %MEMORY
  %loadMem_47d6ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6299 = getelementptr inbounds %struct.GPR, %struct.GPR* %6298, i32 0, i32 33
  %6300 = getelementptr inbounds %struct.Reg, %struct.Reg* %6299, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %6300 to i64*
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6302 = getelementptr inbounds %struct.GPR, %struct.GPR* %6301, i32 0, i32 5
  %6303 = getelementptr inbounds %struct.Reg, %struct.Reg* %6302, i32 0, i32 0
  %RCX.i543 = bitcast %union.anon* %6303 to i64*
  %6304 = load i64, i64* %RCX.i543
  %6305 = load i64, i64* %PC.i542
  %6306 = add i64 %6305, 4
  store i64 %6306, i64* %PC.i542
  %6307 = sext i64 %6304 to i128
  %6308 = and i128 %6307, -18446744073709551616
  %6309 = zext i64 %6304 to i128
  %6310 = or i128 %6308, %6309
  %6311 = mul i128 12, %6310
  %6312 = trunc i128 %6311 to i64
  store i64 %6312, i64* %RCX.i543, align 8
  %6313 = sext i64 %6312 to i128
  %6314 = icmp ne i128 %6313, %6311
  %6315 = zext i1 %6314 to i8
  %6316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6315, i8* %6316, align 1
  %6317 = trunc i128 %6311 to i32
  %6318 = and i32 %6317, 255
  %6319 = call i32 @llvm.ctpop.i32(i32 %6318)
  %6320 = trunc i32 %6319 to i8
  %6321 = and i8 %6320, 1
  %6322 = xor i8 %6321, 1
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6322, i8* %6323, align 1
  %6324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6324, align 1
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6325, align 1
  %6326 = lshr i64 %6312, 63
  %6327 = trunc i64 %6326 to i8
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6327, i8* %6328, align 1
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6315, i8* %6329, align 1
  store %struct.Memory* %loadMem_47d6ff, %struct.Memory** %MEMORY
  %loadMem_47d703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 33
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %6332 to i64*
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6334 = getelementptr inbounds %struct.GPR, %struct.GPR* %6333, i32 0, i32 1
  %6335 = getelementptr inbounds %struct.Reg, %struct.Reg* %6334, i32 0, i32 0
  %RAX.i540 = bitcast %union.anon* %6335 to i64*
  %6336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6337 = getelementptr inbounds %struct.GPR, %struct.GPR* %6336, i32 0, i32 5
  %6338 = getelementptr inbounds %struct.Reg, %struct.Reg* %6337, i32 0, i32 0
  %RCX.i541 = bitcast %union.anon* %6338 to i64*
  %6339 = load i64, i64* %RAX.i540
  %6340 = load i64, i64* %RCX.i541
  %6341 = load i64, i64* %PC.i539
  %6342 = add i64 %6341, 3
  store i64 %6342, i64* %PC.i539
  %6343 = add i64 %6340, %6339
  store i64 %6343, i64* %RAX.i540, align 8
  %6344 = icmp ult i64 %6343, %6339
  %6345 = icmp ult i64 %6343, %6340
  %6346 = or i1 %6344, %6345
  %6347 = zext i1 %6346 to i8
  %6348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6347, i8* %6348, align 1
  %6349 = trunc i64 %6343 to i32
  %6350 = and i32 %6349, 255
  %6351 = call i32 @llvm.ctpop.i32(i32 %6350)
  %6352 = trunc i32 %6351 to i8
  %6353 = and i8 %6352, 1
  %6354 = xor i8 %6353, 1
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6354, i8* %6355, align 1
  %6356 = xor i64 %6340, %6339
  %6357 = xor i64 %6356, %6343
  %6358 = lshr i64 %6357, 4
  %6359 = trunc i64 %6358 to i8
  %6360 = and i8 %6359, 1
  %6361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6360, i8* %6361, align 1
  %6362 = icmp eq i64 %6343, 0
  %6363 = zext i1 %6362 to i8
  %6364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6363, i8* %6364, align 1
  %6365 = lshr i64 %6343, 63
  %6366 = trunc i64 %6365 to i8
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6366, i8* %6367, align 1
  %6368 = lshr i64 %6339, 63
  %6369 = lshr i64 %6340, 63
  %6370 = xor i64 %6365, %6368
  %6371 = xor i64 %6365, %6369
  %6372 = add i64 %6370, %6371
  %6373 = icmp eq i64 %6372, 2
  %6374 = zext i1 %6373 to i8
  %6375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6374, i8* %6375, align 1
  store %struct.Memory* %loadMem_47d703, %struct.Memory** %MEMORY
  %loadMem_47d706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6377 = getelementptr inbounds %struct.GPR, %struct.GPR* %6376, i32 0, i32 33
  %6378 = getelementptr inbounds %struct.Reg, %struct.Reg* %6377, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %6378 to i64*
  %6379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6380 = getelementptr inbounds %struct.GPR, %struct.GPR* %6379, i32 0, i32 1
  %6381 = getelementptr inbounds %struct.Reg, %struct.Reg* %6380, i32 0, i32 0
  %RAX.i538 = bitcast %union.anon* %6381 to i64*
  %6382 = load i64, i64* %RAX.i538
  %6383 = load i64, i64* %PC.i537
  %6384 = add i64 %6383, 3
  store i64 %6384, i64* %PC.i537
  %6385 = inttoptr i64 %6382 to i32*
  %6386 = load i32, i32* %6385
  %6387 = sub i32 %6386, 12
  %6388 = icmp ult i32 %6386, 12
  %6389 = zext i1 %6388 to i8
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6389, i8* %6390, align 1
  %6391 = and i32 %6387, 255
  %6392 = call i32 @llvm.ctpop.i32(i32 %6391)
  %6393 = trunc i32 %6392 to i8
  %6394 = and i8 %6393, 1
  %6395 = xor i8 %6394, 1
  %6396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6395, i8* %6396, align 1
  %6397 = xor i32 %6386, 12
  %6398 = xor i32 %6397, %6387
  %6399 = lshr i32 %6398, 4
  %6400 = trunc i32 %6399 to i8
  %6401 = and i8 %6400, 1
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6401, i8* %6402, align 1
  %6403 = icmp eq i32 %6387, 0
  %6404 = zext i1 %6403 to i8
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6404, i8* %6405, align 1
  %6406 = lshr i32 %6387, 31
  %6407 = trunc i32 %6406 to i8
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6407, i8* %6408, align 1
  %6409 = lshr i32 %6386, 31
  %6410 = xor i32 %6406, %6409
  %6411 = add i32 %6410, %6409
  %6412 = icmp eq i32 %6411, 2
  %6413 = zext i1 %6412 to i8
  %6414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6413, i8* %6414, align 1
  store %struct.Memory* %loadMem_47d706, %struct.Memory** %MEMORY
  %loadMem_47d709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6416 = getelementptr inbounds %struct.GPR, %struct.GPR* %6415, i32 0, i32 33
  %6417 = getelementptr inbounds %struct.Reg, %struct.Reg* %6416, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %6417 to i64*
  %6418 = load i64, i64* %PC.i536
  %6419 = add i64 %6418, 57
  %6420 = load i64, i64* %PC.i536
  %6421 = add i64 %6420, 6
  %6422 = load i64, i64* %PC.i536
  %6423 = add i64 %6422, 6
  store i64 %6423, i64* %PC.i536
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6425 = load i8, i8* %6424, align 1
  store i8 %6425, i8* %BRANCH_TAKEN, align 1
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6427 = icmp ne i8 %6425, 0
  %6428 = select i1 %6427, i64 %6419, i64 %6421
  store i64 %6428, i64* %6426, align 8
  store %struct.Memory* %loadMem_47d709, %struct.Memory** %MEMORY
  %loadBr_47d709 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d709 = icmp eq i8 %loadBr_47d709, 1
  br i1 %cmpBr_47d709, label %block_.L_47d742, label %block_47d70f

block_47d70f:                                     ; preds = %block_47d6f1
  %loadMem_47d70f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6430 = getelementptr inbounds %struct.GPR, %struct.GPR* %6429, i32 0, i32 33
  %6431 = getelementptr inbounds %struct.Reg, %struct.Reg* %6430, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %6431 to i64*
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6433 = getelementptr inbounds %struct.GPR, %struct.GPR* %6432, i32 0, i32 1
  %6434 = getelementptr inbounds %struct.Reg, %struct.Reg* %6433, i32 0, i32 0
  %RAX.i535 = bitcast %union.anon* %6434 to i64*
  %6435 = load i64, i64* %PC.i534
  %6436 = add i64 %6435, 10
  store i64 %6436, i64* %PC.i534
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i535, align 8
  store %struct.Memory* %loadMem_47d70f, %struct.Memory** %MEMORY
  %loadMem_47d719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6438 = getelementptr inbounds %struct.GPR, %struct.GPR* %6437, i32 0, i32 33
  %6439 = getelementptr inbounds %struct.Reg, %struct.Reg* %6438, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %6439 to i64*
  %6440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6441 = getelementptr inbounds %struct.GPR, %struct.GPR* %6440, i32 0, i32 5
  %6442 = getelementptr inbounds %struct.Reg, %struct.Reg* %6441, i32 0, i32 0
  %RCX.i532 = bitcast %union.anon* %6442 to i64*
  %6443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6444 = getelementptr inbounds %struct.GPR, %struct.GPR* %6443, i32 0, i32 15
  %6445 = getelementptr inbounds %struct.Reg, %struct.Reg* %6444, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %6445 to i64*
  %6446 = load i64, i64* %RBP.i533
  %6447 = sub i64 %6446, 40
  %6448 = load i64, i64* %PC.i531
  %6449 = add i64 %6448, 4
  store i64 %6449, i64* %PC.i531
  %6450 = inttoptr i64 %6447 to i32*
  %6451 = load i32, i32* %6450
  %6452 = sext i32 %6451 to i64
  store i64 %6452, i64* %RCX.i532, align 8
  store %struct.Memory* %loadMem_47d719, %struct.Memory** %MEMORY
  %loadMem_47d71d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6454 = getelementptr inbounds %struct.GPR, %struct.GPR* %6453, i32 0, i32 33
  %6455 = getelementptr inbounds %struct.Reg, %struct.Reg* %6454, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %6455 to i64*
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6457 = getelementptr inbounds %struct.GPR, %struct.GPR* %6456, i32 0, i32 5
  %6458 = getelementptr inbounds %struct.Reg, %struct.Reg* %6457, i32 0, i32 0
  %RCX.i530 = bitcast %union.anon* %6458 to i64*
  %6459 = load i64, i64* %RCX.i530
  %6460 = load i64, i64* %PC.i529
  %6461 = add i64 %6460, 4
  store i64 %6461, i64* %PC.i529
  %6462 = sext i64 %6459 to i128
  %6463 = and i128 %6462, -18446744073709551616
  %6464 = zext i64 %6459 to i128
  %6465 = or i128 %6463, %6464
  %6466 = mul i128 12, %6465
  %6467 = trunc i128 %6466 to i64
  store i64 %6467, i64* %RCX.i530, align 8
  %6468 = sext i64 %6467 to i128
  %6469 = icmp ne i128 %6468, %6466
  %6470 = zext i1 %6469 to i8
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6470, i8* %6471, align 1
  %6472 = trunc i128 %6466 to i32
  %6473 = and i32 %6472, 255
  %6474 = call i32 @llvm.ctpop.i32(i32 %6473)
  %6475 = trunc i32 %6474 to i8
  %6476 = and i8 %6475, 1
  %6477 = xor i8 %6476, 1
  %6478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6477, i8* %6478, align 1
  %6479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6479, align 1
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6480, align 1
  %6481 = lshr i64 %6467, 63
  %6482 = trunc i64 %6481 to i8
  %6483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6482, i8* %6483, align 1
  %6484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6470, i8* %6484, align 1
  store %struct.Memory* %loadMem_47d71d, %struct.Memory** %MEMORY
  %loadMem_47d721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6486 = getelementptr inbounds %struct.GPR, %struct.GPR* %6485, i32 0, i32 33
  %6487 = getelementptr inbounds %struct.Reg, %struct.Reg* %6486, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %6487 to i64*
  %6488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6489 = getelementptr inbounds %struct.GPR, %struct.GPR* %6488, i32 0, i32 1
  %6490 = getelementptr inbounds %struct.Reg, %struct.Reg* %6489, i32 0, i32 0
  %RAX.i527 = bitcast %union.anon* %6490 to i64*
  %6491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6492 = getelementptr inbounds %struct.GPR, %struct.GPR* %6491, i32 0, i32 5
  %6493 = getelementptr inbounds %struct.Reg, %struct.Reg* %6492, i32 0, i32 0
  %RCX.i528 = bitcast %union.anon* %6493 to i64*
  %6494 = load i64, i64* %RAX.i527
  %6495 = load i64, i64* %RCX.i528
  %6496 = load i64, i64* %PC.i526
  %6497 = add i64 %6496, 3
  store i64 %6497, i64* %PC.i526
  %6498 = add i64 %6495, %6494
  store i64 %6498, i64* %RAX.i527, align 8
  %6499 = icmp ult i64 %6498, %6494
  %6500 = icmp ult i64 %6498, %6495
  %6501 = or i1 %6499, %6500
  %6502 = zext i1 %6501 to i8
  %6503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6502, i8* %6503, align 1
  %6504 = trunc i64 %6498 to i32
  %6505 = and i32 %6504, 255
  %6506 = call i32 @llvm.ctpop.i32(i32 %6505)
  %6507 = trunc i32 %6506 to i8
  %6508 = and i8 %6507, 1
  %6509 = xor i8 %6508, 1
  %6510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6509, i8* %6510, align 1
  %6511 = xor i64 %6495, %6494
  %6512 = xor i64 %6511, %6498
  %6513 = lshr i64 %6512, 4
  %6514 = trunc i64 %6513 to i8
  %6515 = and i8 %6514, 1
  %6516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6515, i8* %6516, align 1
  %6517 = icmp eq i64 %6498, 0
  %6518 = zext i1 %6517 to i8
  %6519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6518, i8* %6519, align 1
  %6520 = lshr i64 %6498, 63
  %6521 = trunc i64 %6520 to i8
  %6522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6521, i8* %6522, align 1
  %6523 = lshr i64 %6494, 63
  %6524 = lshr i64 %6495, 63
  %6525 = xor i64 %6520, %6523
  %6526 = xor i64 %6520, %6524
  %6527 = add i64 %6525, %6526
  %6528 = icmp eq i64 %6527, 2
  %6529 = zext i1 %6528 to i8
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6529, i8* %6530, align 1
  store %struct.Memory* %loadMem_47d721, %struct.Memory** %MEMORY
  %loadMem_47d724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6532 = getelementptr inbounds %struct.GPR, %struct.GPR* %6531, i32 0, i32 33
  %6533 = getelementptr inbounds %struct.Reg, %struct.Reg* %6532, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %6533 to i64*
  %6534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6535 = getelementptr inbounds %struct.GPR, %struct.GPR* %6534, i32 0, i32 1
  %6536 = getelementptr inbounds %struct.Reg, %struct.Reg* %6535, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %6536 to i64*
  %6537 = load i64, i64* %RAX.i525
  %6538 = load i64, i64* %PC.i524
  %6539 = add i64 %6538, 3
  store i64 %6539, i64* %PC.i524
  %6540 = inttoptr i64 %6537 to i32*
  %6541 = load i32, i32* %6540
  %6542 = sub i32 %6541, 54
  %6543 = icmp ult i32 %6541, 54
  %6544 = zext i1 %6543 to i8
  %6545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6544, i8* %6545, align 1
  %6546 = and i32 %6542, 255
  %6547 = call i32 @llvm.ctpop.i32(i32 %6546)
  %6548 = trunc i32 %6547 to i8
  %6549 = and i8 %6548, 1
  %6550 = xor i8 %6549, 1
  %6551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6550, i8* %6551, align 1
  %6552 = xor i32 %6541, 54
  %6553 = xor i32 %6552, %6542
  %6554 = lshr i32 %6553, 4
  %6555 = trunc i32 %6554 to i8
  %6556 = and i8 %6555, 1
  %6557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6556, i8* %6557, align 1
  %6558 = icmp eq i32 %6542, 0
  %6559 = zext i1 %6558 to i8
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6559, i8* %6560, align 1
  %6561 = lshr i32 %6542, 31
  %6562 = trunc i32 %6561 to i8
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6562, i8* %6563, align 1
  %6564 = lshr i32 %6541, 31
  %6565 = xor i32 %6561, %6564
  %6566 = add i32 %6565, %6564
  %6567 = icmp eq i32 %6566, 2
  %6568 = zext i1 %6567 to i8
  %6569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6568, i8* %6569, align 1
  store %struct.Memory* %loadMem_47d724, %struct.Memory** %MEMORY
  %loadMem_47d727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6571 = getelementptr inbounds %struct.GPR, %struct.GPR* %6570, i32 0, i32 33
  %6572 = getelementptr inbounds %struct.Reg, %struct.Reg* %6571, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %6572 to i64*
  %6573 = load i64, i64* %PC.i523
  %6574 = add i64 %6573, 206
  %6575 = load i64, i64* %PC.i523
  %6576 = add i64 %6575, 6
  %6577 = load i64, i64* %PC.i523
  %6578 = add i64 %6577, 6
  store i64 %6578, i64* %PC.i523
  %6579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6580 = load i8, i8* %6579, align 1
  %6581 = icmp eq i8 %6580, 0
  %6582 = zext i1 %6581 to i8
  store i8 %6582, i8* %BRANCH_TAKEN, align 1
  %6583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6584 = select i1 %6581, i64 %6574, i64 %6576
  store i64 %6584, i64* %6583, align 8
  store %struct.Memory* %loadMem_47d727, %struct.Memory** %MEMORY
  %loadBr_47d727 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d727 = icmp eq i8 %loadBr_47d727, 1
  br i1 %cmpBr_47d727, label %block_.L_47d7f5, label %block_47d72d

block_47d72d:                                     ; preds = %block_47d70f
  %loadMem_47d72d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6586 = getelementptr inbounds %struct.GPR, %struct.GPR* %6585, i32 0, i32 33
  %6587 = getelementptr inbounds %struct.Reg, %struct.Reg* %6586, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %6587 to i64*
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6589 = getelementptr inbounds %struct.GPR, %struct.GPR* %6588, i32 0, i32 1
  %6590 = getelementptr inbounds %struct.Reg, %struct.Reg* %6589, i32 0, i32 0
  %RAX.i521 = bitcast %union.anon* %6590 to i64*
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6592 = getelementptr inbounds %struct.GPR, %struct.GPR* %6591, i32 0, i32 15
  %6593 = getelementptr inbounds %struct.Reg, %struct.Reg* %6592, i32 0, i32 0
  %RBP.i522 = bitcast %union.anon* %6593 to i64*
  %6594 = load i64, i64* %RBP.i522
  %6595 = sub i64 %6594, 32
  %6596 = load i64, i64* %PC.i520
  %6597 = add i64 %6596, 4
  store i64 %6597, i64* %PC.i520
  %6598 = inttoptr i64 %6595 to i32*
  %6599 = load i32, i32* %6598
  %6600 = sext i32 %6599 to i64
  store i64 %6600, i64* %RAX.i521, align 8
  store %struct.Memory* %loadMem_47d72d, %struct.Memory** %MEMORY
  %loadMem_47d731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6602 = getelementptr inbounds %struct.GPR, %struct.GPR* %6601, i32 0, i32 33
  %6603 = getelementptr inbounds %struct.Reg, %struct.Reg* %6602, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %6603 to i64*
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6605 = getelementptr inbounds %struct.GPR, %struct.GPR* %6604, i32 0, i32 1
  %6606 = getelementptr inbounds %struct.Reg, %struct.Reg* %6605, i32 0, i32 0
  %RAX.i518 = bitcast %union.anon* %6606 to i64*
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6608 = getelementptr inbounds %struct.GPR, %struct.GPR* %6607, i32 0, i32 5
  %6609 = getelementptr inbounds %struct.Reg, %struct.Reg* %6608, i32 0, i32 0
  %RCX.i519 = bitcast %union.anon* %6609 to i64*
  %6610 = load i64, i64* %RAX.i518
  %6611 = add i64 %6610, 12099168
  %6612 = load i64, i64* %PC.i517
  %6613 = add i64 %6612, 8
  store i64 %6613, i64* %PC.i517
  %6614 = inttoptr i64 %6611 to i8*
  %6615 = load i8, i8* %6614
  %6616 = zext i8 %6615 to i64
  store i64 %6616, i64* %RCX.i519, align 8
  store %struct.Memory* %loadMem_47d731, %struct.Memory** %MEMORY
  %loadMem_47d739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6618 = getelementptr inbounds %struct.GPR, %struct.GPR* %6617, i32 0, i32 33
  %6619 = getelementptr inbounds %struct.Reg, %struct.Reg* %6618, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %6619 to i64*
  %6620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6621 = getelementptr inbounds %struct.GPR, %struct.GPR* %6620, i32 0, i32 5
  %6622 = getelementptr inbounds %struct.Reg, %struct.Reg* %6621, i32 0, i32 0
  %ECX.i515 = bitcast %union.anon* %6622 to i32*
  %6623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6624 = getelementptr inbounds %struct.GPR, %struct.GPR* %6623, i32 0, i32 15
  %6625 = getelementptr inbounds %struct.Reg, %struct.Reg* %6624, i32 0, i32 0
  %RBP.i516 = bitcast %union.anon* %6625 to i64*
  %6626 = load i32, i32* %ECX.i515
  %6627 = zext i32 %6626 to i64
  %6628 = load i64, i64* %RBP.i516
  %6629 = sub i64 %6628, 4
  %6630 = load i64, i64* %PC.i514
  %6631 = add i64 %6630, 3
  store i64 %6631, i64* %PC.i514
  %6632 = inttoptr i64 %6629 to i32*
  %6633 = load i32, i32* %6632
  %6634 = sub i32 %6626, %6633
  %6635 = icmp ult i32 %6626, %6633
  %6636 = zext i1 %6635 to i8
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6636, i8* %6637, align 1
  %6638 = and i32 %6634, 255
  %6639 = call i32 @llvm.ctpop.i32(i32 %6638)
  %6640 = trunc i32 %6639 to i8
  %6641 = and i8 %6640, 1
  %6642 = xor i8 %6641, 1
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6642, i8* %6643, align 1
  %6644 = xor i32 %6633, %6626
  %6645 = xor i32 %6644, %6634
  %6646 = lshr i32 %6645, 4
  %6647 = trunc i32 %6646 to i8
  %6648 = and i8 %6647, 1
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6648, i8* %6649, align 1
  %6650 = icmp eq i32 %6634, 0
  %6651 = zext i1 %6650 to i8
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6651, i8* %6652, align 1
  %6653 = lshr i32 %6634, 31
  %6654 = trunc i32 %6653 to i8
  %6655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6654, i8* %6655, align 1
  %6656 = lshr i32 %6626, 31
  %6657 = lshr i32 %6633, 31
  %6658 = xor i32 %6657, %6656
  %6659 = xor i32 %6653, %6656
  %6660 = add i32 %6659, %6658
  %6661 = icmp eq i32 %6660, 2
  %6662 = zext i1 %6661 to i8
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6662, i8* %6663, align 1
  store %struct.Memory* %loadMem_47d739, %struct.Memory** %MEMORY
  %loadMem_47d73c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6665 = getelementptr inbounds %struct.GPR, %struct.GPR* %6664, i32 0, i32 33
  %6666 = getelementptr inbounds %struct.Reg, %struct.Reg* %6665, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %6666 to i64*
  %6667 = load i64, i64* %PC.i513
  %6668 = add i64 %6667, 185
  %6669 = load i64, i64* %PC.i513
  %6670 = add i64 %6669, 6
  %6671 = load i64, i64* %PC.i513
  %6672 = add i64 %6671, 6
  store i64 %6672, i64* %PC.i513
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6674 = load i8, i8* %6673, align 1
  %6675 = icmp eq i8 %6674, 0
  %6676 = zext i1 %6675 to i8
  store i8 %6676, i8* %BRANCH_TAKEN, align 1
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6678 = select i1 %6675, i64 %6668, i64 %6670
  store i64 %6678, i64* %6677, align 8
  store %struct.Memory* %loadMem_47d73c, %struct.Memory** %MEMORY
  %loadBr_47d73c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d73c = icmp eq i8 %loadBr_47d73c, 1
  br i1 %cmpBr_47d73c, label %block_.L_47d7f5, label %block_.L_47d742

block_.L_47d742:                                  ; preds = %block_47d72d, %block_47d6f1, %block_47d6d3, %block_47d6b5, %block_47d697, %block_.L_47d679
  %loadMem_47d742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6680 = getelementptr inbounds %struct.GPR, %struct.GPR* %6679, i32 0, i32 33
  %6681 = getelementptr inbounds %struct.Reg, %struct.Reg* %6680, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %6681 to i64*
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6683 = getelementptr inbounds %struct.GPR, %struct.GPR* %6682, i32 0, i32 11
  %6684 = getelementptr inbounds %struct.Reg, %struct.Reg* %6683, i32 0, i32 0
  %RDI.i511 = bitcast %union.anon* %6684 to i64*
  %6685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6686 = getelementptr inbounds %struct.GPR, %struct.GPR* %6685, i32 0, i32 15
  %6687 = getelementptr inbounds %struct.Reg, %struct.Reg* %6686, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %6687 to i64*
  %6688 = load i64, i64* %RBP.i512
  %6689 = sub i64 %6688, 8
  %6690 = load i64, i64* %PC.i510
  %6691 = add i64 %6690, 3
  store i64 %6691, i64* %PC.i510
  %6692 = inttoptr i64 %6689 to i32*
  %6693 = load i32, i32* %6692
  %6694 = zext i32 %6693 to i64
  store i64 %6694, i64* %RDI.i511, align 8
  store %struct.Memory* %loadMem_47d742, %struct.Memory** %MEMORY
  %loadMem_47d745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6696 = getelementptr inbounds %struct.GPR, %struct.GPR* %6695, i32 0, i32 33
  %6697 = getelementptr inbounds %struct.Reg, %struct.Reg* %6696, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %6697 to i64*
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6699 = getelementptr inbounds %struct.GPR, %struct.GPR* %6698, i32 0, i32 9
  %6700 = getelementptr inbounds %struct.Reg, %struct.Reg* %6699, i32 0, i32 0
  %RSI.i508 = bitcast %union.anon* %6700 to i64*
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6702 = getelementptr inbounds %struct.GPR, %struct.GPR* %6701, i32 0, i32 15
  %6703 = getelementptr inbounds %struct.Reg, %struct.Reg* %6702, i32 0, i32 0
  %RBP.i509 = bitcast %union.anon* %6703 to i64*
  %6704 = load i64, i64* %RBP.i509
  %6705 = sub i64 %6704, 32
  %6706 = load i64, i64* %PC.i507
  %6707 = add i64 %6706, 3
  store i64 %6707, i64* %PC.i507
  %6708 = inttoptr i64 %6705 to i32*
  %6709 = load i32, i32* %6708
  %6710 = zext i32 %6709 to i64
  store i64 %6710, i64* %RSI.i508, align 8
  store %struct.Memory* %loadMem_47d745, %struct.Memory** %MEMORY
  %loadMem1_47d748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6712 = getelementptr inbounds %struct.GPR, %struct.GPR* %6711, i32 0, i32 33
  %6713 = getelementptr inbounds %struct.Reg, %struct.Reg* %6712, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %6713 to i64*
  %6714 = load i64, i64* %PC.i506
  %6715 = add i64 %6714, -309000
  %6716 = load i64, i64* %PC.i506
  %6717 = add i64 %6716, 5
  %6718 = load i64, i64* %PC.i506
  %6719 = add i64 %6718, 5
  store i64 %6719, i64* %PC.i506
  %6720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6721 = load i64, i64* %6720, align 8
  %6722 = add i64 %6721, -8
  %6723 = inttoptr i64 %6722 to i64*
  store i64 %6717, i64* %6723
  store i64 %6722, i64* %6720, align 8
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6715, i64* %6724, align 8
  store %struct.Memory* %loadMem1_47d748, %struct.Memory** %MEMORY
  %loadMem2_47d748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d748 = load i64, i64* %3
  %call2_47d748 = call %struct.Memory* @sub_432040.owl_defense_move_reason_known(%struct.State* %0, i64 %loadPC_47d748, %struct.Memory* %loadMem2_47d748)
  store %struct.Memory* %call2_47d748, %struct.Memory** %MEMORY
  %loadMem_47d74d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6726 = getelementptr inbounds %struct.GPR, %struct.GPR* %6725, i32 0, i32 33
  %6727 = getelementptr inbounds %struct.Reg, %struct.Reg* %6726, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %6727 to i64*
  %6728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6729 = getelementptr inbounds %struct.GPR, %struct.GPR* %6728, i32 0, i32 1
  %6730 = getelementptr inbounds %struct.Reg, %struct.Reg* %6729, i32 0, i32 0
  %EAX.i505 = bitcast %union.anon* %6730 to i32*
  %6731 = load i32, i32* %EAX.i505
  %6732 = zext i32 %6731 to i64
  %6733 = load i64, i64* %PC.i504
  %6734 = add i64 %6733, 3
  store i64 %6734, i64* %PC.i504
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6735, align 1
  %6736 = and i32 %6731, 255
  %6737 = call i32 @llvm.ctpop.i32(i32 %6736)
  %6738 = trunc i32 %6737 to i8
  %6739 = and i8 %6738, 1
  %6740 = xor i8 %6739, 1
  %6741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6740, i8* %6741, align 1
  %6742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6742, align 1
  %6743 = icmp eq i32 %6731, 0
  %6744 = zext i1 %6743 to i8
  %6745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6744, i8* %6745, align 1
  %6746 = lshr i32 %6731, 31
  %6747 = trunc i32 %6746 to i8
  %6748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6747, i8* %6748, align 1
  %6749 = lshr i32 %6731, 31
  %6750 = xor i32 %6746, %6749
  %6751 = add i32 %6750, %6749
  %6752 = icmp eq i32 %6751, 2
  %6753 = zext i1 %6752 to i8
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6753, i8* %6754, align 1
  store %struct.Memory* %loadMem_47d74d, %struct.Memory** %MEMORY
  %loadMem_47d750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6756 = getelementptr inbounds %struct.GPR, %struct.GPR* %6755, i32 0, i32 33
  %6757 = getelementptr inbounds %struct.Reg, %struct.Reg* %6756, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %6757 to i64*
  %6758 = load i64, i64* %PC.i503
  %6759 = add i64 %6758, 165
  %6760 = load i64, i64* %PC.i503
  %6761 = add i64 %6760, 6
  %6762 = load i64, i64* %PC.i503
  %6763 = add i64 %6762, 6
  store i64 %6763, i64* %PC.i503
  %6764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6765 = load i8, i8* %6764, align 1
  %6766 = icmp eq i8 %6765, 0
  %6767 = zext i1 %6766 to i8
  store i8 %6767, i8* %BRANCH_TAKEN, align 1
  %6768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6769 = select i1 %6766, i64 %6759, i64 %6761
  store i64 %6769, i64* %6768, align 8
  store %struct.Memory* %loadMem_47d750, %struct.Memory** %MEMORY
  %loadBr_47d750 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d750 = icmp eq i8 %loadBr_47d750, 1
  br i1 %cmpBr_47d750, label %block_.L_47d7f5, label %block_47d756

block_47d756:                                     ; preds = %block_.L_47d742
  %loadMem_47d756 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6771 = getelementptr inbounds %struct.GPR, %struct.GPR* %6770, i32 0, i32 33
  %6772 = getelementptr inbounds %struct.Reg, %struct.Reg* %6771, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %6772 to i64*
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6774 = getelementptr inbounds %struct.GPR, %struct.GPR* %6773, i32 0, i32 7
  %6775 = getelementptr inbounds %struct.Reg, %struct.Reg* %6774, i32 0, i32 0
  %RDX.i501 = bitcast %union.anon* %6775 to i64*
  %6776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6777 = getelementptr inbounds %struct.GPR, %struct.GPR* %6776, i32 0, i32 15
  %6778 = getelementptr inbounds %struct.Reg, %struct.Reg* %6777, i32 0, i32 0
  %RBP.i502 = bitcast %union.anon* %6778 to i64*
  %6779 = load i64, i64* %RBP.i502
  %6780 = sub i64 %6779, 72
  %6781 = load i64, i64* %PC.i500
  %6782 = add i64 %6781, 4
  store i64 %6782, i64* %PC.i500
  store i64 %6780, i64* %RDX.i501, align 8
  store %struct.Memory* %loadMem_47d756, %struct.Memory** %MEMORY
  %loadMem_47d75a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6784 = getelementptr inbounds %struct.GPR, %struct.GPR* %6783, i32 0, i32 33
  %6785 = getelementptr inbounds %struct.Reg, %struct.Reg* %6784, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %6785 to i64*
  %6786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6787 = getelementptr inbounds %struct.GPR, %struct.GPR* %6786, i32 0, i32 15
  %6788 = getelementptr inbounds %struct.Reg, %struct.Reg* %6787, i32 0, i32 0
  %RBP.i499 = bitcast %union.anon* %6788 to i64*
  %6789 = load i64, i64* %RBP.i499
  %6790 = sub i64 %6789, 72
  %6791 = load i64, i64* %PC.i498
  %6792 = add i64 %6791, 7
  store i64 %6792, i64* %PC.i498
  %6793 = inttoptr i64 %6790 to i32*
  store i32 0, i32* %6793
  store %struct.Memory* %loadMem_47d75a, %struct.Memory** %MEMORY
  %loadMem_47d761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6795 = getelementptr inbounds %struct.GPR, %struct.GPR* %6794, i32 0, i32 33
  %6796 = getelementptr inbounds %struct.Reg, %struct.Reg* %6795, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %6796 to i64*
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6798 = getelementptr inbounds %struct.GPR, %struct.GPR* %6797, i32 0, i32 11
  %6799 = getelementptr inbounds %struct.Reg, %struct.Reg* %6798, i32 0, i32 0
  %RDI.i496 = bitcast %union.anon* %6799 to i64*
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6801 = getelementptr inbounds %struct.GPR, %struct.GPR* %6800, i32 0, i32 15
  %6802 = getelementptr inbounds %struct.Reg, %struct.Reg* %6801, i32 0, i32 0
  %RBP.i497 = bitcast %union.anon* %6802 to i64*
  %6803 = load i64, i64* %RBP.i497
  %6804 = sub i64 %6803, 8
  %6805 = load i64, i64* %PC.i495
  %6806 = add i64 %6805, 3
  store i64 %6806, i64* %PC.i495
  %6807 = inttoptr i64 %6804 to i32*
  %6808 = load i32, i32* %6807
  %6809 = zext i32 %6808 to i64
  store i64 %6809, i64* %RDI.i496, align 8
  store %struct.Memory* %loadMem_47d761, %struct.Memory** %MEMORY
  %loadMem_47d764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6811 = getelementptr inbounds %struct.GPR, %struct.GPR* %6810, i32 0, i32 33
  %6812 = getelementptr inbounds %struct.Reg, %struct.Reg* %6811, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %6812 to i64*
  %6813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6814 = getelementptr inbounds %struct.GPR, %struct.GPR* %6813, i32 0, i32 9
  %6815 = getelementptr inbounds %struct.Reg, %struct.Reg* %6814, i32 0, i32 0
  %RSI.i493 = bitcast %union.anon* %6815 to i64*
  %6816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6817 = getelementptr inbounds %struct.GPR, %struct.GPR* %6816, i32 0, i32 15
  %6818 = getelementptr inbounds %struct.Reg, %struct.Reg* %6817, i32 0, i32 0
  %RBP.i494 = bitcast %union.anon* %6818 to i64*
  %6819 = load i64, i64* %RBP.i494
  %6820 = sub i64 %6819, 32
  %6821 = load i64, i64* %PC.i492
  %6822 = add i64 %6821, 3
  store i64 %6822, i64* %PC.i492
  %6823 = inttoptr i64 %6820 to i32*
  %6824 = load i32, i32* %6823
  %6825 = zext i32 %6824 to i64
  store i64 %6825, i64* %RSI.i493, align 8
  store %struct.Memory* %loadMem_47d764, %struct.Memory** %MEMORY
  %loadMem1_47d767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 33
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %6828 to i64*
  %6829 = load i64, i64* %PC.i491
  %6830 = add i64 %6829, -201639
  %6831 = load i64, i64* %PC.i491
  %6832 = add i64 %6831, 5
  %6833 = load i64, i64* %PC.i491
  %6834 = add i64 %6833, 5
  store i64 %6834, i64* %PC.i491
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6836 = load i64, i64* %6835, align 8
  %6837 = add i64 %6836, -8
  %6838 = inttoptr i64 %6837 to i64*
  store i64 %6832, i64* %6838
  store i64 %6837, i64* %6835, align 8
  %6839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6830, i64* %6839, align 8
  store %struct.Memory* %loadMem1_47d767, %struct.Memory** %MEMORY
  %loadMem2_47d767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d767 = load i64, i64* %3
  %call2_47d767 = call %struct.Memory* @sub_44c3c0.owl_does_defend(%struct.State* %0, i64 %loadPC_47d767, %struct.Memory* %loadMem2_47d767)
  store %struct.Memory* %call2_47d767, %struct.Memory** %MEMORY
  %loadMem_47d76c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6841 = getelementptr inbounds %struct.GPR, %struct.GPR* %6840, i32 0, i32 33
  %6842 = getelementptr inbounds %struct.Reg, %struct.Reg* %6841, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %6842 to i64*
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6844 = getelementptr inbounds %struct.GPR, %struct.GPR* %6843, i32 0, i32 7
  %6845 = getelementptr inbounds %struct.Reg, %struct.Reg* %6844, i32 0, i32 0
  %RDX.i490 = bitcast %union.anon* %6845 to i64*
  %6846 = load i64, i64* %PC.i489
  %6847 = add i64 %6846, 10
  store i64 %6847, i64* %PC.i489
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RDX.i490, align 8
  store %struct.Memory* %loadMem_47d76c, %struct.Memory** %MEMORY
  %loadMem_47d776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 33
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %6850 to i64*
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6852 = getelementptr inbounds %struct.GPR, %struct.GPR* %6851, i32 0, i32 1
  %6853 = getelementptr inbounds %struct.Reg, %struct.Reg* %6852, i32 0, i32 0
  %EAX.i487 = bitcast %union.anon* %6853 to i32*
  %6854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6855 = getelementptr inbounds %struct.GPR, %struct.GPR* %6854, i32 0, i32 15
  %6856 = getelementptr inbounds %struct.Reg, %struct.Reg* %6855, i32 0, i32 0
  %RBP.i488 = bitcast %union.anon* %6856 to i64*
  %6857 = load i64, i64* %RBP.i488
  %6858 = sub i64 %6857, 76
  %6859 = load i32, i32* %EAX.i487
  %6860 = zext i32 %6859 to i64
  %6861 = load i64, i64* %PC.i486
  %6862 = add i64 %6861, 3
  store i64 %6862, i64* %PC.i486
  %6863 = inttoptr i64 %6858 to i32*
  store i32 %6859, i32* %6863
  store %struct.Memory* %loadMem_47d776, %struct.Memory** %MEMORY
  %loadMem_47d779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6865 = getelementptr inbounds %struct.GPR, %struct.GPR* %6864, i32 0, i32 33
  %6866 = getelementptr inbounds %struct.Reg, %struct.Reg* %6865, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %6866 to i64*
  %6867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6868 = getelementptr inbounds %struct.GPR, %struct.GPR* %6867, i32 0, i32 1
  %6869 = getelementptr inbounds %struct.Reg, %struct.Reg* %6868, i32 0, i32 0
  %RAX.i484 = bitcast %union.anon* %6869 to i64*
  %6870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6871 = getelementptr inbounds %struct.GPR, %struct.GPR* %6870, i32 0, i32 15
  %6872 = getelementptr inbounds %struct.Reg, %struct.Reg* %6871, i32 0, i32 0
  %RBP.i485 = bitcast %union.anon* %6872 to i64*
  %6873 = load i64, i64* %RBP.i485
  %6874 = sub i64 %6873, 76
  %6875 = load i64, i64* %PC.i483
  %6876 = add i64 %6875, 3
  store i64 %6876, i64* %PC.i483
  %6877 = inttoptr i64 %6874 to i32*
  %6878 = load i32, i32* %6877
  %6879 = zext i32 %6878 to i64
  store i64 %6879, i64* %RAX.i484, align 8
  store %struct.Memory* %loadMem_47d779, %struct.Memory** %MEMORY
  %loadMem_47d77c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6881 = getelementptr inbounds %struct.GPR, %struct.GPR* %6880, i32 0, i32 33
  %6882 = getelementptr inbounds %struct.Reg, %struct.Reg* %6881, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %6882 to i64*
  %6883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6884 = getelementptr inbounds %struct.GPR, %struct.GPR* %6883, i32 0, i32 5
  %6885 = getelementptr inbounds %struct.Reg, %struct.Reg* %6884, i32 0, i32 0
  %RCX.i481 = bitcast %union.anon* %6885 to i64*
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6887 = getelementptr inbounds %struct.GPR, %struct.GPR* %6886, i32 0, i32 15
  %6888 = getelementptr inbounds %struct.Reg, %struct.Reg* %6887, i32 0, i32 0
  %RBP.i482 = bitcast %union.anon* %6888 to i64*
  %6889 = load i64, i64* %RBP.i482
  %6890 = sub i64 %6889, 32
  %6891 = load i64, i64* %PC.i480
  %6892 = add i64 %6891, 4
  store i64 %6892, i64* %PC.i480
  %6893 = inttoptr i64 %6890 to i32*
  %6894 = load i32, i32* %6893
  %6895 = sext i32 %6894 to i64
  store i64 %6895, i64* %RCX.i481, align 8
  store %struct.Memory* %loadMem_47d77c, %struct.Memory** %MEMORY
  %loadMem_47d780 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6897 = getelementptr inbounds %struct.GPR, %struct.GPR* %6896, i32 0, i32 33
  %6898 = getelementptr inbounds %struct.Reg, %struct.Reg* %6897, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %6898 to i64*
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6900 = getelementptr inbounds %struct.GPR, %struct.GPR* %6899, i32 0, i32 5
  %6901 = getelementptr inbounds %struct.Reg, %struct.Reg* %6900, i32 0, i32 0
  %RCX.i479 = bitcast %union.anon* %6901 to i64*
  %6902 = load i64, i64* %RCX.i479
  %6903 = load i64, i64* %PC.i478
  %6904 = add i64 %6903, 4
  store i64 %6904, i64* %PC.i478
  %6905 = sext i64 %6902 to i128
  %6906 = and i128 %6905, -18446744073709551616
  %6907 = zext i64 %6902 to i128
  %6908 = or i128 %6906, %6907
  %6909 = mul i128 76, %6908
  %6910 = trunc i128 %6909 to i64
  store i64 %6910, i64* %RCX.i479, align 8
  %6911 = sext i64 %6910 to i128
  %6912 = icmp ne i128 %6911, %6909
  %6913 = zext i1 %6912 to i8
  %6914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6913, i8* %6914, align 1
  %6915 = trunc i128 %6909 to i32
  %6916 = and i32 %6915, 255
  %6917 = call i32 @llvm.ctpop.i32(i32 %6916)
  %6918 = trunc i32 %6917 to i8
  %6919 = and i8 %6918, 1
  %6920 = xor i8 %6919, 1
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6920, i8* %6921, align 1
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6922, align 1
  %6923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6923, align 1
  %6924 = lshr i64 %6910, 63
  %6925 = trunc i64 %6924 to i8
  %6926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6925, i8* %6926, align 1
  %6927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6913, i8* %6927, align 1
  store %struct.Memory* %loadMem_47d780, %struct.Memory** %MEMORY
  %loadMem_47d784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6929 = getelementptr inbounds %struct.GPR, %struct.GPR* %6928, i32 0, i32 33
  %6930 = getelementptr inbounds %struct.Reg, %struct.Reg* %6929, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %6930 to i64*
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6932 = getelementptr inbounds %struct.GPR, %struct.GPR* %6931, i32 0, i32 5
  %6933 = getelementptr inbounds %struct.Reg, %struct.Reg* %6932, i32 0, i32 0
  %RCX.i476 = bitcast %union.anon* %6933 to i64*
  %6934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6935 = getelementptr inbounds %struct.GPR, %struct.GPR* %6934, i32 0, i32 7
  %6936 = getelementptr inbounds %struct.Reg, %struct.Reg* %6935, i32 0, i32 0
  %RDX.i477 = bitcast %union.anon* %6936 to i64*
  %6937 = load i64, i64* %RDX.i477
  %6938 = load i64, i64* %RCX.i476
  %6939 = load i64, i64* %PC.i475
  %6940 = add i64 %6939, 3
  store i64 %6940, i64* %PC.i475
  %6941 = add i64 %6938, %6937
  store i64 %6941, i64* %RDX.i477, align 8
  %6942 = icmp ult i64 %6941, %6937
  %6943 = icmp ult i64 %6941, %6938
  %6944 = or i1 %6942, %6943
  %6945 = zext i1 %6944 to i8
  %6946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6945, i8* %6946, align 1
  %6947 = trunc i64 %6941 to i32
  %6948 = and i32 %6947, 255
  %6949 = call i32 @llvm.ctpop.i32(i32 %6948)
  %6950 = trunc i32 %6949 to i8
  %6951 = and i8 %6950, 1
  %6952 = xor i8 %6951, 1
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6952, i8* %6953, align 1
  %6954 = xor i64 %6938, %6937
  %6955 = xor i64 %6954, %6941
  %6956 = lshr i64 %6955, 4
  %6957 = trunc i64 %6956 to i8
  %6958 = and i8 %6957, 1
  %6959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6958, i8* %6959, align 1
  %6960 = icmp eq i64 %6941, 0
  %6961 = zext i1 %6960 to i8
  %6962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6961, i8* %6962, align 1
  %6963 = lshr i64 %6941, 63
  %6964 = trunc i64 %6963 to i8
  %6965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6964, i8* %6965, align 1
  %6966 = lshr i64 %6937, 63
  %6967 = lshr i64 %6938, 63
  %6968 = xor i64 %6963, %6966
  %6969 = xor i64 %6963, %6967
  %6970 = add i64 %6968, %6969
  %6971 = icmp eq i64 %6970, 2
  %6972 = zext i1 %6971 to i8
  %6973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6972, i8* %6973, align 1
  store %struct.Memory* %loadMem_47d784, %struct.Memory** %MEMORY
  %loadMem_47d787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6975 = getelementptr inbounds %struct.GPR, %struct.GPR* %6974, i32 0, i32 33
  %6976 = getelementptr inbounds %struct.Reg, %struct.Reg* %6975, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %6976 to i64*
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6978 = getelementptr inbounds %struct.GPR, %struct.GPR* %6977, i32 0, i32 1
  %6979 = getelementptr inbounds %struct.Reg, %struct.Reg* %6978, i32 0, i32 0
  %EAX.i473 = bitcast %union.anon* %6979 to i32*
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 7
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %RDX.i474 = bitcast %union.anon* %6982 to i64*
  %6983 = load i32, i32* %EAX.i473
  %6984 = zext i32 %6983 to i64
  %6985 = load i64, i64* %RDX.i474
  %6986 = add i64 %6985, 52
  %6987 = load i64, i64* %PC.i472
  %6988 = add i64 %6987, 3
  store i64 %6988, i64* %PC.i472
  %6989 = inttoptr i64 %6986 to i32*
  %6990 = load i32, i32* %6989
  %6991 = sub i32 %6983, %6990
  %6992 = icmp ult i32 %6983, %6990
  %6993 = zext i1 %6992 to i8
  %6994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6993, i8* %6994, align 1
  %6995 = and i32 %6991, 255
  %6996 = call i32 @llvm.ctpop.i32(i32 %6995)
  %6997 = trunc i32 %6996 to i8
  %6998 = and i8 %6997, 1
  %6999 = xor i8 %6998, 1
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6999, i8* %7000, align 1
  %7001 = xor i32 %6990, %6983
  %7002 = xor i32 %7001, %6991
  %7003 = lshr i32 %7002, 4
  %7004 = trunc i32 %7003 to i8
  %7005 = and i8 %7004, 1
  %7006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7005, i8* %7006, align 1
  %7007 = icmp eq i32 %6991, 0
  %7008 = zext i1 %7007 to i8
  %7009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7008, i8* %7009, align 1
  %7010 = lshr i32 %6991, 31
  %7011 = trunc i32 %7010 to i8
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7011, i8* %7012, align 1
  %7013 = lshr i32 %6983, 31
  %7014 = lshr i32 %6990, 31
  %7015 = xor i32 %7014, %7013
  %7016 = xor i32 %7010, %7013
  %7017 = add i32 %7016, %7015
  %7018 = icmp eq i32 %7017, 2
  %7019 = zext i1 %7018 to i8
  %7020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7019, i8* %7020, align 1
  store %struct.Memory* %loadMem_47d787, %struct.Memory** %MEMORY
  %loadMem_47d78a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7022 = getelementptr inbounds %struct.GPR, %struct.GPR* %7021, i32 0, i32 33
  %7023 = getelementptr inbounds %struct.Reg, %struct.Reg* %7022, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %7023 to i64*
  %7024 = load i64, i64* %PC.i471
  %7025 = add i64 %7024, 102
  %7026 = load i64, i64* %PC.i471
  %7027 = add i64 %7026, 6
  %7028 = load i64, i64* %PC.i471
  %7029 = add i64 %7028, 6
  store i64 %7029, i64* %PC.i471
  %7030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7031 = load i8, i8* %7030, align 1
  %7032 = icmp ne i8 %7031, 0
  %7033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7034 = load i8, i8* %7033, align 1
  %7035 = icmp ne i8 %7034, 0
  %7036 = xor i1 %7032, %7035
  %7037 = zext i1 %7036 to i8
  store i8 %7037, i8* %BRANCH_TAKEN, align 1
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7039 = select i1 %7036, i64 %7025, i64 %7027
  store i64 %7039, i64* %7038, align 8
  store %struct.Memory* %loadMem_47d78a, %struct.Memory** %MEMORY
  %loadBr_47d78a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d78a = icmp eq i8 %loadBr_47d78a, 1
  br i1 %cmpBr_47d78a, label %block_.L_47d7f0, label %block_47d790

block_47d790:                                     ; preds = %block_47d756
  %loadMem_47d790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7041 = getelementptr inbounds %struct.GPR, %struct.GPR* %7040, i32 0, i32 33
  %7042 = getelementptr inbounds %struct.Reg, %struct.Reg* %7041, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %7042 to i64*
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7044 = getelementptr inbounds %struct.GPR, %struct.GPR* %7043, i32 0, i32 15
  %7045 = getelementptr inbounds %struct.Reg, %struct.Reg* %7044, i32 0, i32 0
  %RBP.i470 = bitcast %union.anon* %7045 to i64*
  %7046 = load i64, i64* %RBP.i470
  %7047 = sub i64 %7046, 76
  %7048 = load i64, i64* %PC.i469
  %7049 = add i64 %7048, 4
  store i64 %7049, i64* %PC.i469
  %7050 = inttoptr i64 %7047 to i32*
  %7051 = load i32, i32* %7050
  %7052 = sub i32 %7051, 2
  %7053 = icmp ult i32 %7051, 2
  %7054 = zext i1 %7053 to i8
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7054, i8* %7055, align 1
  %7056 = and i32 %7052, 255
  %7057 = call i32 @llvm.ctpop.i32(i32 %7056)
  %7058 = trunc i32 %7057 to i8
  %7059 = and i8 %7058, 1
  %7060 = xor i8 %7059, 1
  %7061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7060, i8* %7061, align 1
  %7062 = xor i32 %7051, 2
  %7063 = xor i32 %7062, %7052
  %7064 = lshr i32 %7063, 4
  %7065 = trunc i32 %7064 to i8
  %7066 = and i8 %7065, 1
  %7067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7066, i8* %7067, align 1
  %7068 = icmp eq i32 %7052, 0
  %7069 = zext i1 %7068 to i8
  %7070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7069, i8* %7070, align 1
  %7071 = lshr i32 %7052, 31
  %7072 = trunc i32 %7071 to i8
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7072, i8* %7073, align 1
  %7074 = lshr i32 %7051, 31
  %7075 = xor i32 %7071, %7074
  %7076 = add i32 %7075, %7074
  %7077 = icmp eq i32 %7076, 2
  %7078 = zext i1 %7077 to i8
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7078, i8* %7079, align 1
  store %struct.Memory* %loadMem_47d790, %struct.Memory** %MEMORY
  %loadMem_47d794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7081 = getelementptr inbounds %struct.GPR, %struct.GPR* %7080, i32 0, i32 33
  %7082 = getelementptr inbounds %struct.Reg, %struct.Reg* %7081, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %7082 to i64*
  %7083 = load i64, i64* %PC.i468
  %7084 = add i64 %7083, 25
  %7085 = load i64, i64* %PC.i468
  %7086 = add i64 %7085, 6
  %7087 = load i64, i64* %PC.i468
  %7088 = add i64 %7087, 6
  store i64 %7088, i64* %PC.i468
  %7089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7090 = load i8, i8* %7089, align 1
  %7091 = icmp eq i8 %7090, 0
  %7092 = zext i1 %7091 to i8
  store i8 %7092, i8* %BRANCH_TAKEN, align 1
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7094 = select i1 %7091, i64 %7084, i64 %7086
  store i64 %7094, i64* %7093, align 8
  store %struct.Memory* %loadMem_47d794, %struct.Memory** %MEMORY
  %loadBr_47d794 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d794 = icmp eq i8 %loadBr_47d794, 1
  br i1 %cmpBr_47d794, label %block_.L_47d7ad, label %block_47d79a

block_47d79a:                                     ; preds = %block_47d790
  %loadMem_47d79a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7096 = getelementptr inbounds %struct.GPR, %struct.GPR* %7095, i32 0, i32 33
  %7097 = getelementptr inbounds %struct.Reg, %struct.Reg* %7096, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %7097 to i64*
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7099 = getelementptr inbounds %struct.GPR, %struct.GPR* %7098, i32 0, i32 11
  %7100 = getelementptr inbounds %struct.Reg, %struct.Reg* %7099, i32 0, i32 0
  %RDI.i466 = bitcast %union.anon* %7100 to i64*
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7102 = getelementptr inbounds %struct.GPR, %struct.GPR* %7101, i32 0, i32 15
  %7103 = getelementptr inbounds %struct.Reg, %struct.Reg* %7102, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %7103 to i64*
  %7104 = load i64, i64* %RBP.i467
  %7105 = sub i64 %7104, 8
  %7106 = load i64, i64* %PC.i465
  %7107 = add i64 %7106, 3
  store i64 %7107, i64* %PC.i465
  %7108 = inttoptr i64 %7105 to i32*
  %7109 = load i32, i32* %7108
  %7110 = zext i32 %7109 to i64
  store i64 %7110, i64* %RDI.i466, align 8
  store %struct.Memory* %loadMem_47d79a, %struct.Memory** %MEMORY
  %loadMem_47d79d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7112 = getelementptr inbounds %struct.GPR, %struct.GPR* %7111, i32 0, i32 33
  %7113 = getelementptr inbounds %struct.Reg, %struct.Reg* %7112, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %7113 to i64*
  %7114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7115 = getelementptr inbounds %struct.GPR, %struct.GPR* %7114, i32 0, i32 9
  %7116 = getelementptr inbounds %struct.Reg, %struct.Reg* %7115, i32 0, i32 0
  %RSI.i463 = bitcast %union.anon* %7116 to i64*
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7118 = getelementptr inbounds %struct.GPR, %struct.GPR* %7117, i32 0, i32 15
  %7119 = getelementptr inbounds %struct.Reg, %struct.Reg* %7118, i32 0, i32 0
  %RBP.i464 = bitcast %union.anon* %7119 to i64*
  %7120 = load i64, i64* %RBP.i464
  %7121 = sub i64 %7120, 32
  %7122 = load i64, i64* %PC.i462
  %7123 = add i64 %7122, 3
  store i64 %7123, i64* %PC.i462
  %7124 = inttoptr i64 %7121 to i32*
  %7125 = load i32, i32* %7124
  %7126 = zext i32 %7125 to i64
  store i64 %7126, i64* %RSI.i463, align 8
  store %struct.Memory* %loadMem_47d79d, %struct.Memory** %MEMORY
  %loadMem_47d7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7128 = getelementptr inbounds %struct.GPR, %struct.GPR* %7127, i32 0, i32 33
  %7129 = getelementptr inbounds %struct.Reg, %struct.Reg* %7128, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %7129 to i64*
  %7130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7131 = getelementptr inbounds %struct.GPR, %struct.GPR* %7130, i32 0, i32 7
  %7132 = getelementptr inbounds %struct.Reg, %struct.Reg* %7131, i32 0, i32 0
  %RDX.i460 = bitcast %union.anon* %7132 to i64*
  %7133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7134 = getelementptr inbounds %struct.GPR, %struct.GPR* %7133, i32 0, i32 15
  %7135 = getelementptr inbounds %struct.Reg, %struct.Reg* %7134, i32 0, i32 0
  %RBP.i461 = bitcast %union.anon* %7135 to i64*
  %7136 = load i64, i64* %RBP.i461
  %7137 = sub i64 %7136, 72
  %7138 = load i64, i64* %PC.i459
  %7139 = add i64 %7138, 3
  store i64 %7139, i64* %PC.i459
  %7140 = inttoptr i64 %7137 to i32*
  %7141 = load i32, i32* %7140
  %7142 = zext i32 %7141 to i64
  store i64 %7142, i64* %RDX.i460, align 8
  store %struct.Memory* %loadMem_47d7a0, %struct.Memory** %MEMORY
  %loadMem1_47d7a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7144 = getelementptr inbounds %struct.GPR, %struct.GPR* %7143, i32 0, i32 33
  %7145 = getelementptr inbounds %struct.Reg, %struct.Reg* %7144, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %7145 to i64*
  %7146 = load i64, i64* %PC.i458
  %7147 = add i64 %7146, -300483
  %7148 = load i64, i64* %PC.i458
  %7149 = add i64 %7148, 5
  %7150 = load i64, i64* %PC.i458
  %7151 = add i64 %7150, 5
  store i64 %7151, i64* %PC.i458
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7153 = load i64, i64* %7152, align 8
  %7154 = add i64 %7153, -8
  %7155 = inttoptr i64 %7154 to i64*
  store i64 %7149, i64* %7155
  store i64 %7154, i64* %7152, align 8
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7147, i64* %7156, align 8
  store %struct.Memory* %loadMem1_47d7a3, %struct.Memory** %MEMORY
  %loadMem2_47d7a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d7a3 = load i64, i64* %3
  %call2_47d7a3 = call %struct.Memory* @sub_4341e0.add_loss_move(%struct.State* %0, i64 %loadPC_47d7a3, %struct.Memory* %loadMem2_47d7a3)
  store %struct.Memory* %call2_47d7a3, %struct.Memory** %MEMORY
  %loadMem_47d7a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7158 = getelementptr inbounds %struct.GPR, %struct.GPR* %7157, i32 0, i32 33
  %7159 = getelementptr inbounds %struct.Reg, %struct.Reg* %7158, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %7159 to i64*
  %7160 = load i64, i64* %PC.i457
  %7161 = add i64 %7160, 19
  %7162 = load i64, i64* %PC.i457
  %7163 = add i64 %7162, 5
  store i64 %7163, i64* %PC.i457
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7161, i64* %7164, align 8
  store %struct.Memory* %loadMem_47d7a8, %struct.Memory** %MEMORY
  br label %block_.L_47d7bb

block_.L_47d7ad:                                  ; preds = %block_47d790
  %loadMem_47d7ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7166 = getelementptr inbounds %struct.GPR, %struct.GPR* %7165, i32 0, i32 33
  %7167 = getelementptr inbounds %struct.Reg, %struct.Reg* %7166, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %7167 to i64*
  %7168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7169 = getelementptr inbounds %struct.GPR, %struct.GPR* %7168, i32 0, i32 11
  %7170 = getelementptr inbounds %struct.Reg, %struct.Reg* %7169, i32 0, i32 0
  %RDI.i455 = bitcast %union.anon* %7170 to i64*
  %7171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7172 = getelementptr inbounds %struct.GPR, %struct.GPR* %7171, i32 0, i32 15
  %7173 = getelementptr inbounds %struct.Reg, %struct.Reg* %7172, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %7173 to i64*
  %7174 = load i64, i64* %RBP.i456
  %7175 = sub i64 %7174, 8
  %7176 = load i64, i64* %PC.i454
  %7177 = add i64 %7176, 3
  store i64 %7177, i64* %PC.i454
  %7178 = inttoptr i64 %7175 to i32*
  %7179 = load i32, i32* %7178
  %7180 = zext i32 %7179 to i64
  store i64 %7180, i64* %RDI.i455, align 8
  store %struct.Memory* %loadMem_47d7ad, %struct.Memory** %MEMORY
  %loadMem_47d7b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7182 = getelementptr inbounds %struct.GPR, %struct.GPR* %7181, i32 0, i32 33
  %7183 = getelementptr inbounds %struct.Reg, %struct.Reg* %7182, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %7183 to i64*
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7185 = getelementptr inbounds %struct.GPR, %struct.GPR* %7184, i32 0, i32 9
  %7186 = getelementptr inbounds %struct.Reg, %struct.Reg* %7185, i32 0, i32 0
  %RSI.i452 = bitcast %union.anon* %7186 to i64*
  %7187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7188 = getelementptr inbounds %struct.GPR, %struct.GPR* %7187, i32 0, i32 15
  %7189 = getelementptr inbounds %struct.Reg, %struct.Reg* %7188, i32 0, i32 0
  %RBP.i453 = bitcast %union.anon* %7189 to i64*
  %7190 = load i64, i64* %RBP.i453
  %7191 = sub i64 %7190, 32
  %7192 = load i64, i64* %PC.i451
  %7193 = add i64 %7192, 3
  store i64 %7193, i64* %PC.i451
  %7194 = inttoptr i64 %7191 to i32*
  %7195 = load i32, i32* %7194
  %7196 = zext i32 %7195 to i64
  store i64 %7196, i64* %RSI.i452, align 8
  store %struct.Memory* %loadMem_47d7b0, %struct.Memory** %MEMORY
  %loadMem_47d7b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7198 = getelementptr inbounds %struct.GPR, %struct.GPR* %7197, i32 0, i32 33
  %7199 = getelementptr inbounds %struct.Reg, %struct.Reg* %7198, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %7199 to i64*
  %7200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7201 = getelementptr inbounds %struct.GPR, %struct.GPR* %7200, i32 0, i32 7
  %7202 = getelementptr inbounds %struct.Reg, %struct.Reg* %7201, i32 0, i32 0
  %RDX.i449 = bitcast %union.anon* %7202 to i64*
  %7203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7204 = getelementptr inbounds %struct.GPR, %struct.GPR* %7203, i32 0, i32 15
  %7205 = getelementptr inbounds %struct.Reg, %struct.Reg* %7204, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %7205 to i64*
  %7206 = load i64, i64* %RBP.i450
  %7207 = sub i64 %7206, 76
  %7208 = load i64, i64* %PC.i448
  %7209 = add i64 %7208, 3
  store i64 %7209, i64* %PC.i448
  %7210 = inttoptr i64 %7207 to i32*
  %7211 = load i32, i32* %7210
  %7212 = zext i32 %7211 to i64
  store i64 %7212, i64* %RDX.i449, align 8
  store %struct.Memory* %loadMem_47d7b3, %struct.Memory** %MEMORY
  %loadMem1_47d7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7214 = getelementptr inbounds %struct.GPR, %struct.GPR* %7213, i32 0, i32 33
  %7215 = getelementptr inbounds %struct.Reg, %struct.Reg* %7214, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %7215 to i64*
  %7216 = load i64, i64* %PC.i447
  %7217 = add i64 %7216, -299030
  %7218 = load i64, i64* %PC.i447
  %7219 = add i64 %7218, 5
  %7220 = load i64, i64* %PC.i447
  %7221 = add i64 %7220, 5
  store i64 %7221, i64* %PC.i447
  %7222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7223 = load i64, i64* %7222, align 8
  %7224 = add i64 %7223, -8
  %7225 = inttoptr i64 %7224 to i64*
  store i64 %7219, i64* %7225
  store i64 %7224, i64* %7222, align 8
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7217, i64* %7226, align 8
  store %struct.Memory* %loadMem1_47d7b6, %struct.Memory** %MEMORY
  %loadMem2_47d7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d7b6 = load i64, i64* %3
  %call2_47d7b6 = call %struct.Memory* @sub_4347a0.add_owl_defense_move(%struct.State* %0, i64 %loadPC_47d7b6, %struct.Memory* %loadMem2_47d7b6)
  store %struct.Memory* %call2_47d7b6, %struct.Memory** %MEMORY
  br label %block_.L_47d7bb

block_.L_47d7bb:                                  ; preds = %block_.L_47d7ad, %block_47d79a
  %loadMem_47d7bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7228 = getelementptr inbounds %struct.GPR, %struct.GPR* %7227, i32 0, i32 33
  %7229 = getelementptr inbounds %struct.Reg, %struct.Reg* %7228, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %7229 to i64*
  %7230 = load i64, i64* %PC.i446
  %7231 = add i64 %7230, 8
  store i64 %7231, i64* %PC.i446
  %7232 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %7233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7233, align 1
  %7234 = and i32 %7232, 255
  %7235 = call i32 @llvm.ctpop.i32(i32 %7234)
  %7236 = trunc i32 %7235 to i8
  %7237 = and i8 %7236, 1
  %7238 = xor i8 %7237, 1
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7238, i8* %7239, align 1
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7240, align 1
  %7241 = icmp eq i32 %7232, 0
  %7242 = zext i1 %7241 to i8
  %7243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7242, i8* %7243, align 1
  %7244 = lshr i32 %7232, 31
  %7245 = trunc i32 %7244 to i8
  %7246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7245, i8* %7246, align 1
  %7247 = lshr i32 %7232, 31
  %7248 = xor i32 %7244, %7247
  %7249 = add i32 %7248, %7247
  %7250 = icmp eq i32 %7249, 2
  %7251 = zext i1 %7250 to i8
  %7252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7251, i8* %7252, align 1
  store %struct.Memory* %loadMem_47d7bb, %struct.Memory** %MEMORY
  %loadMem_47d7c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7254 = getelementptr inbounds %struct.GPR, %struct.GPR* %7253, i32 0, i32 33
  %7255 = getelementptr inbounds %struct.Reg, %struct.Reg* %7254, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %7255 to i64*
  %7256 = load i64, i64* %PC.i445
  %7257 = add i64 %7256, 11
  %7258 = load i64, i64* %PC.i445
  %7259 = add i64 %7258, 6
  %7260 = load i64, i64* %PC.i445
  %7261 = add i64 %7260, 6
  store i64 %7261, i64* %PC.i445
  %7262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7263 = load i8, i8* %7262, align 1
  %7264 = icmp eq i8 %7263, 0
  %7265 = zext i1 %7264 to i8
  store i8 %7265, i8* %BRANCH_TAKEN, align 1
  %7266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7267 = select i1 %7264, i64 %7257, i64 %7259
  store i64 %7267, i64* %7266, align 8
  store %struct.Memory* %loadMem_47d7c3, %struct.Memory** %MEMORY
  %loadBr_47d7c3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d7c3 = icmp eq i8 %loadBr_47d7c3, 1
  br i1 %cmpBr_47d7c3, label %block_.L_47d7ce, label %block_47d7c9

block_47d7c9:                                     ; preds = %block_.L_47d7bb
  %loadMem_47d7c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7269 = getelementptr inbounds %struct.GPR, %struct.GPR* %7268, i32 0, i32 33
  %7270 = getelementptr inbounds %struct.Reg, %struct.Reg* %7269, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %7270 to i64*
  %7271 = load i64, i64* %PC.i444
  %7272 = add i64 %7271, 34
  %7273 = load i64, i64* %PC.i444
  %7274 = add i64 %7273, 5
  store i64 %7274, i64* %PC.i444
  %7275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7272, i64* %7275, align 8
  store %struct.Memory* %loadMem_47d7c9, %struct.Memory** %MEMORY
  br label %block_.L_47d7eb

block_.L_47d7ce:                                  ; preds = %block_.L_47d7bb
  %loadMem_47d7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7277 = getelementptr inbounds %struct.GPR, %struct.GPR* %7276, i32 0, i32 33
  %7278 = getelementptr inbounds %struct.Reg, %struct.Reg* %7277, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %7278 to i64*
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7280 = getelementptr inbounds %struct.GPR, %struct.GPR* %7279, i32 0, i32 11
  %7281 = getelementptr inbounds %struct.Reg, %struct.Reg* %7280, i32 0, i32 0
  %RDI.i443 = bitcast %union.anon* %7281 to i64*
  %7282 = load i64, i64* %PC.i442
  %7283 = add i64 %7282, 10
  store i64 %7283, i64* %PC.i442
  store i64 ptrtoint (%G__0x582d63_type* @G__0x582d63 to i64), i64* %RDI.i443, align 8
  store %struct.Memory* %loadMem_47d7ce, %struct.Memory** %MEMORY
  %loadMem_47d7d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 33
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %7286 to i64*
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 9
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %RSI.i440 = bitcast %union.anon* %7289 to i64*
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7291 = getelementptr inbounds %struct.GPR, %struct.GPR* %7290, i32 0, i32 15
  %7292 = getelementptr inbounds %struct.Reg, %struct.Reg* %7291, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %7292 to i64*
  %7293 = load i64, i64* %RBP.i441
  %7294 = sub i64 %7293, 8
  %7295 = load i64, i64* %PC.i439
  %7296 = add i64 %7295, 3
  store i64 %7296, i64* %PC.i439
  %7297 = inttoptr i64 %7294 to i32*
  %7298 = load i32, i32* %7297
  %7299 = zext i32 %7298 to i64
  store i64 %7299, i64* %RSI.i440, align 8
  store %struct.Memory* %loadMem_47d7d8, %struct.Memory** %MEMORY
  %loadMem_47d7db = load %struct.Memory*, %struct.Memory** %MEMORY
  %7300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7301 = getelementptr inbounds %struct.GPR, %struct.GPR* %7300, i32 0, i32 33
  %7302 = getelementptr inbounds %struct.Reg, %struct.Reg* %7301, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %7302 to i64*
  %7303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7304 = getelementptr inbounds %struct.GPR, %struct.GPR* %7303, i32 0, i32 7
  %7305 = getelementptr inbounds %struct.Reg, %struct.Reg* %7304, i32 0, i32 0
  %RDX.i437 = bitcast %union.anon* %7305 to i64*
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7307 = getelementptr inbounds %struct.GPR, %struct.GPR* %7306, i32 0, i32 15
  %7308 = getelementptr inbounds %struct.Reg, %struct.Reg* %7307, i32 0, i32 0
  %RBP.i438 = bitcast %union.anon* %7308 to i64*
  %7309 = load i64, i64* %RBP.i438
  %7310 = sub i64 %7309, 32
  %7311 = load i64, i64* %PC.i436
  %7312 = add i64 %7311, 3
  store i64 %7312, i64* %PC.i436
  %7313 = inttoptr i64 %7310 to i32*
  %7314 = load i32, i32* %7313
  %7315 = zext i32 %7314 to i64
  store i64 %7315, i64* %RDX.i437, align 8
  store %struct.Memory* %loadMem_47d7db, %struct.Memory** %MEMORY
  %loadMem_47d7de = load %struct.Memory*, %struct.Memory** %MEMORY
  %7316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7317 = getelementptr inbounds %struct.GPR, %struct.GPR* %7316, i32 0, i32 33
  %7318 = getelementptr inbounds %struct.Reg, %struct.Reg* %7317, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %7318 to i64*
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7320 = getelementptr inbounds %struct.GPR, %struct.GPR* %7319, i32 0, i32 5
  %7321 = getelementptr inbounds %struct.Reg, %struct.Reg* %7320, i32 0, i32 0
  %RCX.i434 = bitcast %union.anon* %7321 to i64*
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7323 = getelementptr inbounds %struct.GPR, %struct.GPR* %7322, i32 0, i32 15
  %7324 = getelementptr inbounds %struct.Reg, %struct.Reg* %7323, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %7324 to i64*
  %7325 = load i64, i64* %RBP.i435
  %7326 = sub i64 %7325, 76
  %7327 = load i64, i64* %PC.i433
  %7328 = add i64 %7327, 3
  store i64 %7328, i64* %PC.i433
  %7329 = inttoptr i64 %7326 to i32*
  %7330 = load i32, i32* %7329
  %7331 = zext i32 %7330 to i64
  store i64 %7331, i64* %RCX.i434, align 8
  store %struct.Memory* %loadMem_47d7de, %struct.Memory** %MEMORY
  %loadMem_47d7e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7333 = getelementptr inbounds %struct.GPR, %struct.GPR* %7332, i32 0, i32 33
  %7334 = getelementptr inbounds %struct.Reg, %struct.Reg* %7333, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %7334 to i64*
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 1
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %7338 = bitcast %union.anon* %7337 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7338, i32 0, i32 0
  %7339 = load i64, i64* %PC.i432
  %7340 = add i64 %7339, 2
  store i64 %7340, i64* %PC.i432
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_47d7e1, %struct.Memory** %MEMORY
  %loadMem1_47d7e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7342 = getelementptr inbounds %struct.GPR, %struct.GPR* %7341, i32 0, i32 33
  %7343 = getelementptr inbounds %struct.Reg, %struct.Reg* %7342, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %7343 to i64*
  %7344 = load i64, i64* %PC.i431
  %7345 = add i64 %7344, -178739
  %7346 = load i64, i64* %PC.i431
  %7347 = add i64 %7346, 5
  %7348 = load i64, i64* %PC.i431
  %7349 = add i64 %7348, 5
  store i64 %7349, i64* %PC.i431
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7351 = load i64, i64* %7350, align 8
  %7352 = add i64 %7351, -8
  %7353 = inttoptr i64 %7352 to i64*
  store i64 %7347, i64* %7353
  store i64 %7352, i64* %7350, align 8
  %7354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7345, i64* %7354, align 8
  store %struct.Memory* %loadMem1_47d7e3, %struct.Memory** %MEMORY
  %loadMem2_47d7e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d7e3 = load i64, i64* %3
  %call2_47d7e3 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_47d7e3, %struct.Memory* %loadMem2_47d7e3)
  store %struct.Memory* %call2_47d7e3, %struct.Memory** %MEMORY
  %loadMem_47d7e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 33
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %7357 to i64*
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7359 = getelementptr inbounds %struct.GPR, %struct.GPR* %7358, i32 0, i32 1
  %7360 = getelementptr inbounds %struct.Reg, %struct.Reg* %7359, i32 0, i32 0
  %EAX.i429 = bitcast %union.anon* %7360 to i32*
  %7361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7362 = getelementptr inbounds %struct.GPR, %struct.GPR* %7361, i32 0, i32 15
  %7363 = getelementptr inbounds %struct.Reg, %struct.Reg* %7362, i32 0, i32 0
  %RBP.i430 = bitcast %union.anon* %7363 to i64*
  %7364 = load i64, i64* %RBP.i430
  %7365 = sub i64 %7364, 116
  %7366 = load i32, i32* %EAX.i429
  %7367 = zext i32 %7366 to i64
  %7368 = load i64, i64* %PC.i428
  %7369 = add i64 %7368, 3
  store i64 %7369, i64* %PC.i428
  %7370 = inttoptr i64 %7365 to i32*
  store i32 %7366, i32* %7370
  store %struct.Memory* %loadMem_47d7e8, %struct.Memory** %MEMORY
  br label %block_.L_47d7eb

block_.L_47d7eb:                                  ; preds = %block_.L_47d7ce, %block_47d7c9
  %loadMem_47d7eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7372 = getelementptr inbounds %struct.GPR, %struct.GPR* %7371, i32 0, i32 33
  %7373 = getelementptr inbounds %struct.Reg, %struct.Reg* %7372, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %7373 to i64*
  %7374 = load i64, i64* %PC.i427
  %7375 = add i64 %7374, 5
  %7376 = load i64, i64* %PC.i427
  %7377 = add i64 %7376, 5
  store i64 %7377, i64* %PC.i427
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7375, i64* %7378, align 8
  store %struct.Memory* %loadMem_47d7eb, %struct.Memory** %MEMORY
  br label %block_.L_47d7f0

block_.L_47d7f0:                                  ; preds = %block_.L_47d7eb, %block_47d756
  %loadMem_47d7f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7380 = getelementptr inbounds %struct.GPR, %struct.GPR* %7379, i32 0, i32 33
  %7381 = getelementptr inbounds %struct.Reg, %struct.Reg* %7380, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %7381 to i64*
  %7382 = load i64, i64* %PC.i426
  %7383 = add i64 %7382, 5
  %7384 = load i64, i64* %PC.i426
  %7385 = add i64 %7384, 5
  store i64 %7385, i64* %PC.i426
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7383, i64* %7386, align 8
  store %struct.Memory* %loadMem_47d7f0, %struct.Memory** %MEMORY
  br label %block_.L_47d7f5

block_.L_47d7f5:                                  ; preds = %block_.L_47d7f0, %block_.L_47d742, %block_47d72d, %block_47d70f
  %loadMem_47d7f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7388 = getelementptr inbounds %struct.GPR, %struct.GPR* %7387, i32 0, i32 33
  %7389 = getelementptr inbounds %struct.Reg, %struct.Reg* %7388, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %7389 to i64*
  %7390 = load i64, i64* %PC.i425
  %7391 = add i64 %7390, 5
  %7392 = load i64, i64* %PC.i425
  %7393 = add i64 %7392, 5
  store i64 %7393, i64* %PC.i425
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7391, i64* %7394, align 8
  store %struct.Memory* %loadMem_47d7f5, %struct.Memory** %MEMORY
  br label %block_.L_47d7fa

block_.L_47d7fa:                                  ; preds = %block_.L_47d7f5, %block_47d50f, %block_47d4eb, %block_47d4b4
  %loadMem_47d7fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7396 = getelementptr inbounds %struct.GPR, %struct.GPR* %7395, i32 0, i32 33
  %7397 = getelementptr inbounds %struct.Reg, %struct.Reg* %7396, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %7397 to i64*
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7399 = getelementptr inbounds %struct.GPR, %struct.GPR* %7398, i32 0, i32 1
  %7400 = getelementptr inbounds %struct.Reg, %struct.Reg* %7399, i32 0, i32 0
  %RAX.i423 = bitcast %union.anon* %7400 to i64*
  %7401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7402 = getelementptr inbounds %struct.GPR, %struct.GPR* %7401, i32 0, i32 15
  %7403 = getelementptr inbounds %struct.Reg, %struct.Reg* %7402, i32 0, i32 0
  %RBP.i424 = bitcast %union.anon* %7403 to i64*
  %7404 = load i64, i64* %RBP.i424
  %7405 = sub i64 %7404, 20
  %7406 = load i64, i64* %PC.i422
  %7407 = add i64 %7406, 3
  store i64 %7407, i64* %PC.i422
  %7408 = inttoptr i64 %7405 to i32*
  %7409 = load i32, i32* %7408
  %7410 = zext i32 %7409 to i64
  store i64 %7410, i64* %RAX.i423, align 8
  store %struct.Memory* %loadMem_47d7fa, %struct.Memory** %MEMORY
  %loadMem_47d7fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7412 = getelementptr inbounds %struct.GPR, %struct.GPR* %7411, i32 0, i32 33
  %7413 = getelementptr inbounds %struct.Reg, %struct.Reg* %7412, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %7413 to i64*
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7415 = getelementptr inbounds %struct.GPR, %struct.GPR* %7414, i32 0, i32 1
  %7416 = getelementptr inbounds %struct.Reg, %struct.Reg* %7415, i32 0, i32 0
  %RAX.i421 = bitcast %union.anon* %7416 to i64*
  %7417 = load i64, i64* %RAX.i421
  %7418 = load i64, i64* %PC.i420
  %7419 = add i64 %7418, 3
  store i64 %7419, i64* %PC.i420
  %7420 = trunc i64 %7417 to i32
  %7421 = add i32 1, %7420
  %7422 = zext i32 %7421 to i64
  store i64 %7422, i64* %RAX.i421, align 8
  %7423 = icmp ult i32 %7421, %7420
  %7424 = icmp ult i32 %7421, 1
  %7425 = or i1 %7423, %7424
  %7426 = zext i1 %7425 to i8
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7426, i8* %7427, align 1
  %7428 = and i32 %7421, 255
  %7429 = call i32 @llvm.ctpop.i32(i32 %7428)
  %7430 = trunc i32 %7429 to i8
  %7431 = and i8 %7430, 1
  %7432 = xor i8 %7431, 1
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7432, i8* %7433, align 1
  %7434 = xor i64 1, %7417
  %7435 = trunc i64 %7434 to i32
  %7436 = xor i32 %7435, %7421
  %7437 = lshr i32 %7436, 4
  %7438 = trunc i32 %7437 to i8
  %7439 = and i8 %7438, 1
  %7440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7439, i8* %7440, align 1
  %7441 = icmp eq i32 %7421, 0
  %7442 = zext i1 %7441 to i8
  %7443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7442, i8* %7443, align 1
  %7444 = lshr i32 %7421, 31
  %7445 = trunc i32 %7444 to i8
  %7446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7445, i8* %7446, align 1
  %7447 = lshr i32 %7420, 31
  %7448 = xor i32 %7444, %7447
  %7449 = add i32 %7448, %7444
  %7450 = icmp eq i32 %7449, 2
  %7451 = zext i1 %7450 to i8
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7451, i8* %7452, align 1
  store %struct.Memory* %loadMem_47d7fd, %struct.Memory** %MEMORY
  %loadMem_47d800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7454 = getelementptr inbounds %struct.GPR, %struct.GPR* %7453, i32 0, i32 33
  %7455 = getelementptr inbounds %struct.Reg, %struct.Reg* %7454, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %7455 to i64*
  %7456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7457 = getelementptr inbounds %struct.GPR, %struct.GPR* %7456, i32 0, i32 1
  %7458 = getelementptr inbounds %struct.Reg, %struct.Reg* %7457, i32 0, i32 0
  %EAX.i418 = bitcast %union.anon* %7458 to i32*
  %7459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7460 = getelementptr inbounds %struct.GPR, %struct.GPR* %7459, i32 0, i32 15
  %7461 = getelementptr inbounds %struct.Reg, %struct.Reg* %7460, i32 0, i32 0
  %RBP.i419 = bitcast %union.anon* %7461 to i64*
  %7462 = load i64, i64* %RBP.i419
  %7463 = sub i64 %7462, 20
  %7464 = load i32, i32* %EAX.i418
  %7465 = zext i32 %7464 to i64
  %7466 = load i64, i64* %PC.i417
  %7467 = add i64 %7466, 3
  store i64 %7467, i64* %PC.i417
  %7468 = inttoptr i64 %7463 to i32*
  store i32 %7464, i32* %7468
  store %struct.Memory* %loadMem_47d800, %struct.Memory** %MEMORY
  %loadMem_47d803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7470 = getelementptr inbounds %struct.GPR, %struct.GPR* %7469, i32 0, i32 33
  %7471 = getelementptr inbounds %struct.Reg, %struct.Reg* %7470, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %7471 to i64*
  %7472 = load i64, i64* %PC.i416
  %7473 = add i64 %7472, -894
  %7474 = load i64, i64* %PC.i416
  %7475 = add i64 %7474, 5
  store i64 %7475, i64* %PC.i416
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7473, i64* %7476, align 8
  store %struct.Memory* %loadMem_47d803, %struct.Memory** %MEMORY
  br label %block_.L_47d485

block_.L_47d808:                                  ; preds = %block_.L_47d485
  %loadMem_47d808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7478 = getelementptr inbounds %struct.GPR, %struct.GPR* %7477, i32 0, i32 33
  %7479 = getelementptr inbounds %struct.Reg, %struct.Reg* %7478, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %7479 to i64*
  %7480 = load i64, i64* %PC.i415
  %7481 = add i64 %7480, 5
  %7482 = load i64, i64* %PC.i415
  %7483 = add i64 %7482, 5
  store i64 %7483, i64* %PC.i415
  %7484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7481, i64* %7484, align 8
  store %struct.Memory* %loadMem_47d808, %struct.Memory** %MEMORY
  br label %block_.L_47d80d

block_.L_47d80d:                                  ; preds = %block_.L_47d808, %block_.L_47d46a, %block_47d3df
  %loadMem_47d80d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7486 = getelementptr inbounds %struct.GPR, %struct.GPR* %7485, i32 0, i32 33
  %7487 = getelementptr inbounds %struct.Reg, %struct.Reg* %7486, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %7487 to i64*
  %7488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7489 = getelementptr inbounds %struct.GPR, %struct.GPR* %7488, i32 0, i32 1
  %7490 = getelementptr inbounds %struct.Reg, %struct.Reg* %7489, i32 0, i32 0
  %RAX.i413 = bitcast %union.anon* %7490 to i64*
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7492 = getelementptr inbounds %struct.GPR, %struct.GPR* %7491, i32 0, i32 15
  %7493 = getelementptr inbounds %struct.Reg, %struct.Reg* %7492, i32 0, i32 0
  %RBP.i414 = bitcast %union.anon* %7493 to i64*
  %7494 = load i64, i64* %RBP.i414
  %7495 = sub i64 %7494, 16
  %7496 = load i64, i64* %PC.i412
  %7497 = add i64 %7496, 3
  store i64 %7497, i64* %PC.i412
  %7498 = inttoptr i64 %7495 to i32*
  %7499 = load i32, i32* %7498
  %7500 = zext i32 %7499 to i64
  store i64 %7500, i64* %RAX.i413, align 8
  store %struct.Memory* %loadMem_47d80d, %struct.Memory** %MEMORY
  %loadMem_47d810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7502 = getelementptr inbounds %struct.GPR, %struct.GPR* %7501, i32 0, i32 33
  %7503 = getelementptr inbounds %struct.Reg, %struct.Reg* %7502, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %7503 to i64*
  %7504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7505 = getelementptr inbounds %struct.GPR, %struct.GPR* %7504, i32 0, i32 1
  %7506 = getelementptr inbounds %struct.Reg, %struct.Reg* %7505, i32 0, i32 0
  %RAX.i411 = bitcast %union.anon* %7506 to i64*
  %7507 = load i64, i64* %RAX.i411
  %7508 = load i64, i64* %PC.i410
  %7509 = add i64 %7508, 3
  store i64 %7509, i64* %PC.i410
  %7510 = trunc i64 %7507 to i32
  %7511 = add i32 1, %7510
  %7512 = zext i32 %7511 to i64
  store i64 %7512, i64* %RAX.i411, align 8
  %7513 = icmp ult i32 %7511, %7510
  %7514 = icmp ult i32 %7511, 1
  %7515 = or i1 %7513, %7514
  %7516 = zext i1 %7515 to i8
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7516, i8* %7517, align 1
  %7518 = and i32 %7511, 255
  %7519 = call i32 @llvm.ctpop.i32(i32 %7518)
  %7520 = trunc i32 %7519 to i8
  %7521 = and i8 %7520, 1
  %7522 = xor i8 %7521, 1
  %7523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7522, i8* %7523, align 1
  %7524 = xor i64 1, %7507
  %7525 = trunc i64 %7524 to i32
  %7526 = xor i32 %7525, %7511
  %7527 = lshr i32 %7526, 4
  %7528 = trunc i32 %7527 to i8
  %7529 = and i8 %7528, 1
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7529, i8* %7530, align 1
  %7531 = icmp eq i32 %7511, 0
  %7532 = zext i1 %7531 to i8
  %7533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7532, i8* %7533, align 1
  %7534 = lshr i32 %7511, 31
  %7535 = trunc i32 %7534 to i8
  %7536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7535, i8* %7536, align 1
  %7537 = lshr i32 %7510, 31
  %7538 = xor i32 %7534, %7537
  %7539 = add i32 %7538, %7534
  %7540 = icmp eq i32 %7539, 2
  %7541 = zext i1 %7540 to i8
  %7542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7541, i8* %7542, align 1
  store %struct.Memory* %loadMem_47d810, %struct.Memory** %MEMORY
  %loadMem_47d813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7544 = getelementptr inbounds %struct.GPR, %struct.GPR* %7543, i32 0, i32 33
  %7545 = getelementptr inbounds %struct.Reg, %struct.Reg* %7544, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %7545 to i64*
  %7546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7547 = getelementptr inbounds %struct.GPR, %struct.GPR* %7546, i32 0, i32 1
  %7548 = getelementptr inbounds %struct.Reg, %struct.Reg* %7547, i32 0, i32 0
  %EAX.i408 = bitcast %union.anon* %7548 to i32*
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7550 = getelementptr inbounds %struct.GPR, %struct.GPR* %7549, i32 0, i32 15
  %7551 = getelementptr inbounds %struct.Reg, %struct.Reg* %7550, i32 0, i32 0
  %RBP.i409 = bitcast %union.anon* %7551 to i64*
  %7552 = load i64, i64* %RBP.i409
  %7553 = sub i64 %7552, 16
  %7554 = load i32, i32* %EAX.i408
  %7555 = zext i32 %7554 to i64
  %7556 = load i64, i64* %PC.i407
  %7557 = add i64 %7556, 3
  store i64 %7557, i64* %PC.i407
  %7558 = inttoptr i64 %7553 to i32*
  store i32 %7554, i32* %7558
  store %struct.Memory* %loadMem_47d813, %struct.Memory** %MEMORY
  %loadMem_47d816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7560 = getelementptr inbounds %struct.GPR, %struct.GPR* %7559, i32 0, i32 33
  %7561 = getelementptr inbounds %struct.Reg, %struct.Reg* %7560, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %7561 to i64*
  %7562 = load i64, i64* %PC.i406
  %7563 = add i64 %7562, -1589
  %7564 = load i64, i64* %PC.i406
  %7565 = add i64 %7564, 5
  store i64 %7565, i64* %PC.i406
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7563, i64* %7566, align 8
  store %struct.Memory* %loadMem_47d816, %struct.Memory** %MEMORY
  br label %block_.L_47d1e1

block_.L_47d81b:                                  ; preds = %block_47d226, %block_.L_47d1e1
  %loadMem_47d81b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7568 = getelementptr inbounds %struct.GPR, %struct.GPR* %7567, i32 0, i32 33
  %7569 = getelementptr inbounds %struct.Reg, %struct.Reg* %7568, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %7569 to i64*
  %7570 = load i64, i64* %PC.i405
  %7571 = add i64 %7570, 5
  %7572 = load i64, i64* %PC.i405
  %7573 = add i64 %7572, 5
  store i64 %7573, i64* %PC.i405
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7571, i64* %7574, align 8
  store %struct.Memory* %loadMem_47d81b, %struct.Memory** %MEMORY
  br label %block_.L_47d820

block_.L_47d820:                                  ; preds = %block_.L_47d81b, %block_47d1d5
  %loadMem_47d820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7576 = getelementptr inbounds %struct.GPR, %struct.GPR* %7575, i32 0, i32 33
  %7577 = getelementptr inbounds %struct.Reg, %struct.Reg* %7576, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %7577 to i64*
  %7578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7579 = getelementptr inbounds %struct.GPR, %struct.GPR* %7578, i32 0, i32 1
  %7580 = getelementptr inbounds %struct.Reg, %struct.Reg* %7579, i32 0, i32 0
  %RAX.i403 = bitcast %union.anon* %7580 to i64*
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7582 = getelementptr inbounds %struct.GPR, %struct.GPR* %7581, i32 0, i32 15
  %7583 = getelementptr inbounds %struct.Reg, %struct.Reg* %7582, i32 0, i32 0
  %RBP.i404 = bitcast %union.anon* %7583 to i64*
  %7584 = load i64, i64* %RBP.i404
  %7585 = sub i64 %7584, 8
  %7586 = load i64, i64* %PC.i402
  %7587 = add i64 %7586, 3
  store i64 %7587, i64* %PC.i402
  %7588 = inttoptr i64 %7585 to i32*
  %7589 = load i32, i32* %7588
  %7590 = zext i32 %7589 to i64
  store i64 %7590, i64* %RAX.i403, align 8
  store %struct.Memory* %loadMem_47d820, %struct.Memory** %MEMORY
  %loadMem_47d823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7592 = getelementptr inbounds %struct.GPR, %struct.GPR* %7591, i32 0, i32 33
  %7593 = getelementptr inbounds %struct.Reg, %struct.Reg* %7592, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %7593 to i64*
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7595 = getelementptr inbounds %struct.GPR, %struct.GPR* %7594, i32 0, i32 1
  %7596 = getelementptr inbounds %struct.Reg, %struct.Reg* %7595, i32 0, i32 0
  %RAX.i401 = bitcast %union.anon* %7596 to i64*
  %7597 = load i64, i64* %RAX.i401
  %7598 = load i64, i64* %PC.i400
  %7599 = add i64 %7598, 3
  store i64 %7599, i64* %PC.i400
  %7600 = trunc i64 %7597 to i32
  %7601 = add i32 1, %7600
  %7602 = zext i32 %7601 to i64
  store i64 %7602, i64* %RAX.i401, align 8
  %7603 = icmp ult i32 %7601, %7600
  %7604 = icmp ult i32 %7601, 1
  %7605 = or i1 %7603, %7604
  %7606 = zext i1 %7605 to i8
  %7607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7606, i8* %7607, align 1
  %7608 = and i32 %7601, 255
  %7609 = call i32 @llvm.ctpop.i32(i32 %7608)
  %7610 = trunc i32 %7609 to i8
  %7611 = and i8 %7610, 1
  %7612 = xor i8 %7611, 1
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7612, i8* %7613, align 1
  %7614 = xor i64 1, %7597
  %7615 = trunc i64 %7614 to i32
  %7616 = xor i32 %7615, %7601
  %7617 = lshr i32 %7616, 4
  %7618 = trunc i32 %7617 to i8
  %7619 = and i8 %7618, 1
  %7620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7619, i8* %7620, align 1
  %7621 = icmp eq i32 %7601, 0
  %7622 = zext i1 %7621 to i8
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7622, i8* %7623, align 1
  %7624 = lshr i32 %7601, 31
  %7625 = trunc i32 %7624 to i8
  %7626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7625, i8* %7626, align 1
  %7627 = lshr i32 %7600, 31
  %7628 = xor i32 %7624, %7627
  %7629 = add i32 %7628, %7624
  %7630 = icmp eq i32 %7629, 2
  %7631 = zext i1 %7630 to i8
  %7632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7631, i8* %7632, align 1
  store %struct.Memory* %loadMem_47d823, %struct.Memory** %MEMORY
  %loadMem_47d826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7634 = getelementptr inbounds %struct.GPR, %struct.GPR* %7633, i32 0, i32 33
  %7635 = getelementptr inbounds %struct.Reg, %struct.Reg* %7634, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %7635 to i64*
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7637 = getelementptr inbounds %struct.GPR, %struct.GPR* %7636, i32 0, i32 1
  %7638 = getelementptr inbounds %struct.Reg, %struct.Reg* %7637, i32 0, i32 0
  %EAX.i398 = bitcast %union.anon* %7638 to i32*
  %7639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7640 = getelementptr inbounds %struct.GPR, %struct.GPR* %7639, i32 0, i32 15
  %7641 = getelementptr inbounds %struct.Reg, %struct.Reg* %7640, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %7641 to i64*
  %7642 = load i64, i64* %RBP.i399
  %7643 = sub i64 %7642, 8
  %7644 = load i32, i32* %EAX.i398
  %7645 = zext i32 %7644 to i64
  %7646 = load i64, i64* %PC.i397
  %7647 = add i64 %7646, 3
  store i64 %7647, i64* %PC.i397
  %7648 = inttoptr i64 %7643 to i32*
  store i32 %7644, i32* %7648
  store %struct.Memory* %loadMem_47d826, %struct.Memory** %MEMORY
  %loadMem_47d829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7650 = getelementptr inbounds %struct.GPR, %struct.GPR* %7649, i32 0, i32 33
  %7651 = getelementptr inbounds %struct.Reg, %struct.Reg* %7650, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %7651 to i64*
  %7652 = load i64, i64* %PC.i396
  %7653 = add i64 %7652, -1654
  %7654 = load i64, i64* %PC.i396
  %7655 = add i64 %7654, 5
  store i64 %7655, i64* %PC.i396
  %7656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7653, i64* %7656, align 8
  store %struct.Memory* %loadMem_47d829, %struct.Memory** %MEMORY
  br label %block_.L_47d1b3

block_.L_47d82e:                                  ; preds = %block_.L_47d1b3
  %loadMem_47d82e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7658 = getelementptr inbounds %struct.GPR, %struct.GPR* %7657, i32 0, i32 33
  %7659 = getelementptr inbounds %struct.Reg, %struct.Reg* %7658, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %7659 to i64*
  %7660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7661 = getelementptr inbounds %struct.GPR, %struct.GPR* %7660, i32 0, i32 15
  %7662 = getelementptr inbounds %struct.Reg, %struct.Reg* %7661, i32 0, i32 0
  %RBP.i395 = bitcast %union.anon* %7662 to i64*
  %7663 = load i64, i64* %RBP.i395
  %7664 = sub i64 %7663, 8
  %7665 = load i64, i64* %PC.i394
  %7666 = add i64 %7665, 7
  store i64 %7666, i64* %PC.i394
  %7667 = inttoptr i64 %7664 to i32*
  store i32 21, i32* %7667
  store %struct.Memory* %loadMem_47d82e, %struct.Memory** %MEMORY
  br label %block_.L_47d835

block_.L_47d835:                                  ; preds = %block_.L_47db8c, %block_.L_47d82e
  %loadMem_47d835 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7669 = getelementptr inbounds %struct.GPR, %struct.GPR* %7668, i32 0, i32 33
  %7670 = getelementptr inbounds %struct.Reg, %struct.Reg* %7669, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %7670 to i64*
  %7671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7672 = getelementptr inbounds %struct.GPR, %struct.GPR* %7671, i32 0, i32 15
  %7673 = getelementptr inbounds %struct.Reg, %struct.Reg* %7672, i32 0, i32 0
  %RBP.i393 = bitcast %union.anon* %7673 to i64*
  %7674 = load i64, i64* %RBP.i393
  %7675 = sub i64 %7674, 8
  %7676 = load i64, i64* %PC.i392
  %7677 = add i64 %7676, 7
  store i64 %7677, i64* %PC.i392
  %7678 = inttoptr i64 %7675 to i32*
  %7679 = load i32, i32* %7678
  %7680 = sub i32 %7679, 400
  %7681 = icmp ult i32 %7679, 400
  %7682 = zext i1 %7681 to i8
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7682, i8* %7683, align 1
  %7684 = and i32 %7680, 255
  %7685 = call i32 @llvm.ctpop.i32(i32 %7684)
  %7686 = trunc i32 %7685 to i8
  %7687 = and i8 %7686, 1
  %7688 = xor i8 %7687, 1
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7688, i8* %7689, align 1
  %7690 = xor i32 %7679, 400
  %7691 = xor i32 %7690, %7680
  %7692 = lshr i32 %7691, 4
  %7693 = trunc i32 %7692 to i8
  %7694 = and i8 %7693, 1
  %7695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7694, i8* %7695, align 1
  %7696 = icmp eq i32 %7680, 0
  %7697 = zext i1 %7696 to i8
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7697, i8* %7698, align 1
  %7699 = lshr i32 %7680, 31
  %7700 = trunc i32 %7699 to i8
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7700, i8* %7701, align 1
  %7702 = lshr i32 %7679, 31
  %7703 = xor i32 %7699, %7702
  %7704 = add i32 %7703, %7702
  %7705 = icmp eq i32 %7704, 2
  %7706 = zext i1 %7705 to i8
  %7707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7706, i8* %7707, align 1
  store %struct.Memory* %loadMem_47d835, %struct.Memory** %MEMORY
  %loadMem_47d83c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7709 = getelementptr inbounds %struct.GPR, %struct.GPR* %7708, i32 0, i32 33
  %7710 = getelementptr inbounds %struct.Reg, %struct.Reg* %7709, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %7710 to i64*
  %7711 = load i64, i64* %PC.i391
  %7712 = add i64 %7711, 862
  %7713 = load i64, i64* %PC.i391
  %7714 = add i64 %7713, 6
  %7715 = load i64, i64* %PC.i391
  %7716 = add i64 %7715, 6
  store i64 %7716, i64* %PC.i391
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7718 = load i8, i8* %7717, align 1
  %7719 = icmp ne i8 %7718, 0
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7721 = load i8, i8* %7720, align 1
  %7722 = icmp ne i8 %7721, 0
  %7723 = xor i1 %7719, %7722
  %7724 = xor i1 %7723, true
  %7725 = zext i1 %7724 to i8
  store i8 %7725, i8* %BRANCH_TAKEN, align 1
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7727 = select i1 %7723, i64 %7714, i64 %7712
  store i64 %7727, i64* %7726, align 8
  store %struct.Memory* %loadMem_47d83c, %struct.Memory** %MEMORY
  %loadBr_47d83c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d83c = icmp eq i8 %loadBr_47d83c, 1
  br i1 %cmpBr_47d83c, label %block_.L_47db9a, label %block_47d842

block_47d842:                                     ; preds = %block_.L_47d835
  %loadMem_47d842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7729 = getelementptr inbounds %struct.GPR, %struct.GPR* %7728, i32 0, i32 33
  %7730 = getelementptr inbounds %struct.Reg, %struct.Reg* %7729, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %7730 to i64*
  %7731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7732 = getelementptr inbounds %struct.GPR, %struct.GPR* %7731, i32 0, i32 1
  %7733 = getelementptr inbounds %struct.Reg, %struct.Reg* %7732, i32 0, i32 0
  %RAX.i389 = bitcast %union.anon* %7733 to i64*
  %7734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7735 = getelementptr inbounds %struct.GPR, %struct.GPR* %7734, i32 0, i32 15
  %7736 = getelementptr inbounds %struct.Reg, %struct.Reg* %7735, i32 0, i32 0
  %RBP.i390 = bitcast %union.anon* %7736 to i64*
  %7737 = load i64, i64* %RBP.i390
  %7738 = sub i64 %7737, 8
  %7739 = load i64, i64* %PC.i388
  %7740 = add i64 %7739, 4
  store i64 %7740, i64* %PC.i388
  %7741 = inttoptr i64 %7738 to i32*
  %7742 = load i32, i32* %7741
  %7743 = sext i32 %7742 to i64
  store i64 %7743, i64* %RAX.i389, align 8
  store %struct.Memory* %loadMem_47d842, %struct.Memory** %MEMORY
  %loadMem_47d846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7745 = getelementptr inbounds %struct.GPR, %struct.GPR* %7744, i32 0, i32 33
  %7746 = getelementptr inbounds %struct.Reg, %struct.Reg* %7745, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %7746 to i64*
  %7747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7748 = getelementptr inbounds %struct.GPR, %struct.GPR* %7747, i32 0, i32 1
  %7749 = getelementptr inbounds %struct.Reg, %struct.Reg* %7748, i32 0, i32 0
  %RAX.i386 = bitcast %union.anon* %7749 to i64*
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7751 = getelementptr inbounds %struct.GPR, %struct.GPR* %7750, i32 0, i32 5
  %7752 = getelementptr inbounds %struct.Reg, %struct.Reg* %7751, i32 0, i32 0
  %RCX.i387 = bitcast %union.anon* %7752 to i64*
  %7753 = load i64, i64* %RAX.i386
  %7754 = add i64 %7753, 12099168
  %7755 = load i64, i64* %PC.i385
  %7756 = add i64 %7755, 8
  store i64 %7756, i64* %PC.i385
  %7757 = inttoptr i64 %7754 to i8*
  %7758 = load i8, i8* %7757
  %7759 = zext i8 %7758 to i64
  store i64 %7759, i64* %RCX.i387, align 8
  store %struct.Memory* %loadMem_47d846, %struct.Memory** %MEMORY
  %loadMem_47d84e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7761 = getelementptr inbounds %struct.GPR, %struct.GPR* %7760, i32 0, i32 33
  %7762 = getelementptr inbounds %struct.Reg, %struct.Reg* %7761, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %7762 to i64*
  %7763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7764 = getelementptr inbounds %struct.GPR, %struct.GPR* %7763, i32 0, i32 5
  %7765 = getelementptr inbounds %struct.Reg, %struct.Reg* %7764, i32 0, i32 0
  %ECX.i384 = bitcast %union.anon* %7765 to i32*
  %7766 = load i32, i32* %ECX.i384
  %7767 = zext i32 %7766 to i64
  %7768 = load i64, i64* %PC.i383
  %7769 = add i64 %7768, 3
  store i64 %7769, i64* %PC.i383
  %7770 = sub i32 %7766, 1
  %7771 = icmp ult i32 %7766, 1
  %7772 = zext i1 %7771 to i8
  %7773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7772, i8* %7773, align 1
  %7774 = and i32 %7770, 255
  %7775 = call i32 @llvm.ctpop.i32(i32 %7774)
  %7776 = trunc i32 %7775 to i8
  %7777 = and i8 %7776, 1
  %7778 = xor i8 %7777, 1
  %7779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7778, i8* %7779, align 1
  %7780 = xor i64 1, %7767
  %7781 = trunc i64 %7780 to i32
  %7782 = xor i32 %7781, %7770
  %7783 = lshr i32 %7782, 4
  %7784 = trunc i32 %7783 to i8
  %7785 = and i8 %7784, 1
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7785, i8* %7786, align 1
  %7787 = icmp eq i32 %7770, 0
  %7788 = zext i1 %7787 to i8
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7788, i8* %7789, align 1
  %7790 = lshr i32 %7770, 31
  %7791 = trunc i32 %7790 to i8
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7791, i8* %7792, align 1
  %7793 = lshr i32 %7766, 31
  %7794 = xor i32 %7790, %7793
  %7795 = add i32 %7794, %7793
  %7796 = icmp eq i32 %7795, 2
  %7797 = zext i1 %7796 to i8
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7797, i8* %7798, align 1
  store %struct.Memory* %loadMem_47d84e, %struct.Memory** %MEMORY
  %loadMem_47d851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7800 = getelementptr inbounds %struct.GPR, %struct.GPR* %7799, i32 0, i32 33
  %7801 = getelementptr inbounds %struct.Reg, %struct.Reg* %7800, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %7801 to i64*
  %7802 = load i64, i64* %PC.i382
  %7803 = add i64 %7802, 27
  %7804 = load i64, i64* %PC.i382
  %7805 = add i64 %7804, 6
  %7806 = load i64, i64* %PC.i382
  %7807 = add i64 %7806, 6
  store i64 %7807, i64* %PC.i382
  %7808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7809 = load i8, i8* %7808, align 1
  store i8 %7809, i8* %BRANCH_TAKEN, align 1
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7811 = icmp ne i8 %7809, 0
  %7812 = select i1 %7811, i64 %7803, i64 %7805
  store i64 %7812, i64* %7810, align 8
  store %struct.Memory* %loadMem_47d851, %struct.Memory** %MEMORY
  %loadBr_47d851 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d851 = icmp eq i8 %loadBr_47d851, 1
  br i1 %cmpBr_47d851, label %block_.L_47d86c, label %block_47d857

block_47d857:                                     ; preds = %block_47d842
  %loadMem_47d857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7814 = getelementptr inbounds %struct.GPR, %struct.GPR* %7813, i32 0, i32 33
  %7815 = getelementptr inbounds %struct.Reg, %struct.Reg* %7814, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %7815 to i64*
  %7816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7817 = getelementptr inbounds %struct.GPR, %struct.GPR* %7816, i32 0, i32 1
  %7818 = getelementptr inbounds %struct.Reg, %struct.Reg* %7817, i32 0, i32 0
  %RAX.i380 = bitcast %union.anon* %7818 to i64*
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7820 = getelementptr inbounds %struct.GPR, %struct.GPR* %7819, i32 0, i32 15
  %7821 = getelementptr inbounds %struct.Reg, %struct.Reg* %7820, i32 0, i32 0
  %RBP.i381 = bitcast %union.anon* %7821 to i64*
  %7822 = load i64, i64* %RBP.i381
  %7823 = sub i64 %7822, 8
  %7824 = load i64, i64* %PC.i379
  %7825 = add i64 %7824, 4
  store i64 %7825, i64* %PC.i379
  %7826 = inttoptr i64 %7823 to i32*
  %7827 = load i32, i32* %7826
  %7828 = sext i32 %7827 to i64
  store i64 %7828, i64* %RAX.i380, align 8
  store %struct.Memory* %loadMem_47d857, %struct.Memory** %MEMORY
  %loadMem_47d85b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7830 = getelementptr inbounds %struct.GPR, %struct.GPR* %7829, i32 0, i32 33
  %7831 = getelementptr inbounds %struct.Reg, %struct.Reg* %7830, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %7831 to i64*
  %7832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7833 = getelementptr inbounds %struct.GPR, %struct.GPR* %7832, i32 0, i32 1
  %7834 = getelementptr inbounds %struct.Reg, %struct.Reg* %7833, i32 0, i32 0
  %RAX.i377 = bitcast %union.anon* %7834 to i64*
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7836 = getelementptr inbounds %struct.GPR, %struct.GPR* %7835, i32 0, i32 5
  %7837 = getelementptr inbounds %struct.Reg, %struct.Reg* %7836, i32 0, i32 0
  %RCX.i378 = bitcast %union.anon* %7837 to i64*
  %7838 = load i64, i64* %RAX.i377
  %7839 = add i64 %7838, 12099168
  %7840 = load i64, i64* %PC.i376
  %7841 = add i64 %7840, 8
  store i64 %7841, i64* %PC.i376
  %7842 = inttoptr i64 %7839 to i8*
  %7843 = load i8, i8* %7842
  %7844 = zext i8 %7843 to i64
  store i64 %7844, i64* %RCX.i378, align 8
  store %struct.Memory* %loadMem_47d85b, %struct.Memory** %MEMORY
  %loadMem_47d863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 33
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %7847 to i64*
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 5
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %ECX.i375 = bitcast %union.anon* %7850 to i32*
  %7851 = load i32, i32* %ECX.i375
  %7852 = zext i32 %7851 to i64
  %7853 = load i64, i64* %PC.i374
  %7854 = add i64 %7853, 3
  store i64 %7854, i64* %PC.i374
  %7855 = sub i32 %7851, 2
  %7856 = icmp ult i32 %7851, 2
  %7857 = zext i1 %7856 to i8
  %7858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7857, i8* %7858, align 1
  %7859 = and i32 %7855, 255
  %7860 = call i32 @llvm.ctpop.i32(i32 %7859)
  %7861 = trunc i32 %7860 to i8
  %7862 = and i8 %7861, 1
  %7863 = xor i8 %7862, 1
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7863, i8* %7864, align 1
  %7865 = xor i64 2, %7852
  %7866 = trunc i64 %7865 to i32
  %7867 = xor i32 %7866, %7855
  %7868 = lshr i32 %7867, 4
  %7869 = trunc i32 %7868 to i8
  %7870 = and i8 %7869, 1
  %7871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7870, i8* %7871, align 1
  %7872 = icmp eq i32 %7855, 0
  %7873 = zext i1 %7872 to i8
  %7874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7873, i8* %7874, align 1
  %7875 = lshr i32 %7855, 31
  %7876 = trunc i32 %7875 to i8
  %7877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7876, i8* %7877, align 1
  %7878 = lshr i32 %7851, 31
  %7879 = xor i32 %7875, %7878
  %7880 = add i32 %7879, %7878
  %7881 = icmp eq i32 %7880, 2
  %7882 = zext i1 %7881 to i8
  %7883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7882, i8* %7883, align 1
  store %struct.Memory* %loadMem_47d863, %struct.Memory** %MEMORY
  %loadMem_47d866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7885 = getelementptr inbounds %struct.GPR, %struct.GPR* %7884, i32 0, i32 33
  %7886 = getelementptr inbounds %struct.Reg, %struct.Reg* %7885, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %7886 to i64*
  %7887 = load i64, i64* %PC.i373
  %7888 = add i64 %7887, 801
  %7889 = load i64, i64* %PC.i373
  %7890 = add i64 %7889, 6
  %7891 = load i64, i64* %PC.i373
  %7892 = add i64 %7891, 6
  store i64 %7892, i64* %PC.i373
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7894 = load i8, i8* %7893, align 1
  %7895 = icmp eq i8 %7894, 0
  %7896 = zext i1 %7895 to i8
  store i8 %7896, i8* %BRANCH_TAKEN, align 1
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7898 = select i1 %7895, i64 %7888, i64 %7890
  store i64 %7898, i64* %7897, align 8
  store %struct.Memory* %loadMem_47d866, %struct.Memory** %MEMORY
  %loadBr_47d866 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d866 = icmp eq i8 %loadBr_47d866, 1
  br i1 %cmpBr_47d866, label %block_.L_47db87, label %block_.L_47d86c

block_.L_47d86c:                                  ; preds = %block_47d857, %block_47d842
  %loadMem_47d86c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7900 = getelementptr inbounds %struct.GPR, %struct.GPR* %7899, i32 0, i32 33
  %7901 = getelementptr inbounds %struct.Reg, %struct.Reg* %7900, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %7901 to i64*
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 1
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %RAX.i372 = bitcast %union.anon* %7904 to i64*
  %7905 = load i64, i64* %PC.i371
  %7906 = add i64 %7905, 10
  store i64 %7906, i64* %PC.i371
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i372, align 8
  store %struct.Memory* %loadMem_47d86c, %struct.Memory** %MEMORY
  %loadMem_47d876 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7908 = getelementptr inbounds %struct.GPR, %struct.GPR* %7907, i32 0, i32 33
  %7909 = getelementptr inbounds %struct.Reg, %struct.Reg* %7908, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %7909 to i64*
  %7910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7911 = getelementptr inbounds %struct.GPR, %struct.GPR* %7910, i32 0, i32 5
  %7912 = getelementptr inbounds %struct.Reg, %struct.Reg* %7911, i32 0, i32 0
  %RCX.i369 = bitcast %union.anon* %7912 to i64*
  %7913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7914 = getelementptr inbounds %struct.GPR, %struct.GPR* %7913, i32 0, i32 15
  %7915 = getelementptr inbounds %struct.Reg, %struct.Reg* %7914, i32 0, i32 0
  %RBP.i370 = bitcast %union.anon* %7915 to i64*
  %7916 = load i64, i64* %RBP.i370
  %7917 = sub i64 %7916, 8
  %7918 = load i64, i64* %PC.i368
  %7919 = add i64 %7918, 4
  store i64 %7919, i64* %PC.i368
  %7920 = inttoptr i64 %7917 to i32*
  %7921 = load i32, i32* %7920
  %7922 = sext i32 %7921 to i64
  store i64 %7922, i64* %RCX.i369, align 8
  store %struct.Memory* %loadMem_47d876, %struct.Memory** %MEMORY
  %loadMem_47d87a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7924 = getelementptr inbounds %struct.GPR, %struct.GPR* %7923, i32 0, i32 33
  %7925 = getelementptr inbounds %struct.Reg, %struct.Reg* %7924, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %7925 to i64*
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 5
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %RCX.i367 = bitcast %union.anon* %7928 to i64*
  %7929 = load i64, i64* %RCX.i367
  %7930 = load i64, i64* %PC.i366
  %7931 = add i64 %7930, 4
  store i64 %7931, i64* %PC.i366
  %7932 = sext i64 %7929 to i128
  %7933 = and i128 %7932, -18446744073709551616
  %7934 = zext i64 %7929 to i128
  %7935 = or i128 %7933, %7934
  %7936 = mul i128 76, %7935
  %7937 = trunc i128 %7936 to i64
  store i64 %7937, i64* %RCX.i367, align 8
  %7938 = sext i64 %7937 to i128
  %7939 = icmp ne i128 %7938, %7936
  %7940 = zext i1 %7939 to i8
  %7941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7940, i8* %7941, align 1
  %7942 = trunc i128 %7936 to i32
  %7943 = and i32 %7942, 255
  %7944 = call i32 @llvm.ctpop.i32(i32 %7943)
  %7945 = trunc i32 %7944 to i8
  %7946 = and i8 %7945, 1
  %7947 = xor i8 %7946, 1
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7947, i8* %7948, align 1
  %7949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7949, align 1
  %7950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7950, align 1
  %7951 = lshr i64 %7937, 63
  %7952 = trunc i64 %7951 to i8
  %7953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7952, i8* %7953, align 1
  %7954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7940, i8* %7954, align 1
  store %struct.Memory* %loadMem_47d87a, %struct.Memory** %MEMORY
  %loadMem_47d87e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7956 = getelementptr inbounds %struct.GPR, %struct.GPR* %7955, i32 0, i32 33
  %7957 = getelementptr inbounds %struct.Reg, %struct.Reg* %7956, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %7957 to i64*
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7959 = getelementptr inbounds %struct.GPR, %struct.GPR* %7958, i32 0, i32 1
  %7960 = getelementptr inbounds %struct.Reg, %struct.Reg* %7959, i32 0, i32 0
  %RAX.i364 = bitcast %union.anon* %7960 to i64*
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7962 = getelementptr inbounds %struct.GPR, %struct.GPR* %7961, i32 0, i32 5
  %7963 = getelementptr inbounds %struct.Reg, %struct.Reg* %7962, i32 0, i32 0
  %RCX.i365 = bitcast %union.anon* %7963 to i64*
  %7964 = load i64, i64* %RAX.i364
  %7965 = load i64, i64* %RCX.i365
  %7966 = load i64, i64* %PC.i363
  %7967 = add i64 %7966, 3
  store i64 %7967, i64* %PC.i363
  %7968 = add i64 %7965, %7964
  store i64 %7968, i64* %RAX.i364, align 8
  %7969 = icmp ult i64 %7968, %7964
  %7970 = icmp ult i64 %7968, %7965
  %7971 = or i1 %7969, %7970
  %7972 = zext i1 %7971 to i8
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7972, i8* %7973, align 1
  %7974 = trunc i64 %7968 to i32
  %7975 = and i32 %7974, 255
  %7976 = call i32 @llvm.ctpop.i32(i32 %7975)
  %7977 = trunc i32 %7976 to i8
  %7978 = and i8 %7977, 1
  %7979 = xor i8 %7978, 1
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7979, i8* %7980, align 1
  %7981 = xor i64 %7965, %7964
  %7982 = xor i64 %7981, %7968
  %7983 = lshr i64 %7982, 4
  %7984 = trunc i64 %7983 to i8
  %7985 = and i8 %7984, 1
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7985, i8* %7986, align 1
  %7987 = icmp eq i64 %7968, 0
  %7988 = zext i1 %7987 to i8
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7988, i8* %7989, align 1
  %7990 = lshr i64 %7968, 63
  %7991 = trunc i64 %7990 to i8
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7991, i8* %7992, align 1
  %7993 = lshr i64 %7964, 63
  %7994 = lshr i64 %7965, 63
  %7995 = xor i64 %7990, %7993
  %7996 = xor i64 %7990, %7994
  %7997 = add i64 %7995, %7996
  %7998 = icmp eq i64 %7997, 2
  %7999 = zext i1 %7998 to i8
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7999, i8* %8000, align 1
  store %struct.Memory* %loadMem_47d87e, %struct.Memory** %MEMORY
  %loadMem_47d881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8002 = getelementptr inbounds %struct.GPR, %struct.GPR* %8001, i32 0, i32 33
  %8003 = getelementptr inbounds %struct.Reg, %struct.Reg* %8002, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %8003 to i64*
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8005 = getelementptr inbounds %struct.GPR, %struct.GPR* %8004, i32 0, i32 1
  %8006 = getelementptr inbounds %struct.Reg, %struct.Reg* %8005, i32 0, i32 0
  %RAX.i361 = bitcast %union.anon* %8006 to i64*
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8008 = getelementptr inbounds %struct.GPR, %struct.GPR* %8007, i32 0, i32 7
  %8009 = getelementptr inbounds %struct.Reg, %struct.Reg* %8008, i32 0, i32 0
  %RDX.i362 = bitcast %union.anon* %8009 to i64*
  %8010 = load i64, i64* %RAX.i361
  %8011 = add i64 %8010, 8
  %8012 = load i64, i64* %PC.i360
  %8013 = add i64 %8012, 3
  store i64 %8013, i64* %PC.i360
  %8014 = inttoptr i64 %8011 to i32*
  %8015 = load i32, i32* %8014
  %8016 = zext i32 %8015 to i64
  store i64 %8016, i64* %RDX.i362, align 8
  store %struct.Memory* %loadMem_47d881, %struct.Memory** %MEMORY
  %loadMem_47d884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8018 = getelementptr inbounds %struct.GPR, %struct.GPR* %8017, i32 0, i32 33
  %8019 = getelementptr inbounds %struct.Reg, %struct.Reg* %8018, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %8019 to i64*
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8021 = getelementptr inbounds %struct.GPR, %struct.GPR* %8020, i32 0, i32 7
  %8022 = getelementptr inbounds %struct.Reg, %struct.Reg* %8021, i32 0, i32 0
  %EDX.i358 = bitcast %union.anon* %8022 to i32*
  %8023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8024 = getelementptr inbounds %struct.GPR, %struct.GPR* %8023, i32 0, i32 15
  %8025 = getelementptr inbounds %struct.Reg, %struct.Reg* %8024, i32 0, i32 0
  %RBP.i359 = bitcast %union.anon* %8025 to i64*
  %8026 = load i32, i32* %EDX.i358
  %8027 = zext i32 %8026 to i64
  %8028 = load i64, i64* %RBP.i359
  %8029 = sub i64 %8028, 8
  %8030 = load i64, i64* %PC.i357
  %8031 = add i64 %8030, 3
  store i64 %8031, i64* %PC.i357
  %8032 = inttoptr i64 %8029 to i32*
  %8033 = load i32, i32* %8032
  %8034 = sub i32 %8026, %8033
  %8035 = icmp ult i32 %8026, %8033
  %8036 = zext i1 %8035 to i8
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8036, i8* %8037, align 1
  %8038 = and i32 %8034, 255
  %8039 = call i32 @llvm.ctpop.i32(i32 %8038)
  %8040 = trunc i32 %8039 to i8
  %8041 = and i8 %8040, 1
  %8042 = xor i8 %8041, 1
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8042, i8* %8043, align 1
  %8044 = xor i32 %8033, %8026
  %8045 = xor i32 %8044, %8034
  %8046 = lshr i32 %8045, 4
  %8047 = trunc i32 %8046 to i8
  %8048 = and i8 %8047, 1
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8048, i8* %8049, align 1
  %8050 = icmp eq i32 %8034, 0
  %8051 = zext i1 %8050 to i8
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8051, i8* %8052, align 1
  %8053 = lshr i32 %8034, 31
  %8054 = trunc i32 %8053 to i8
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8054, i8* %8055, align 1
  %8056 = lshr i32 %8026, 31
  %8057 = lshr i32 %8033, 31
  %8058 = xor i32 %8057, %8056
  %8059 = xor i32 %8053, %8056
  %8060 = add i32 %8059, %8058
  %8061 = icmp eq i32 %8060, 2
  %8062 = zext i1 %8061 to i8
  %8063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8062, i8* %8063, align 1
  store %struct.Memory* %loadMem_47d884, %struct.Memory** %MEMORY
  %loadMem_47d887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8065 = getelementptr inbounds %struct.GPR, %struct.GPR* %8064, i32 0, i32 33
  %8066 = getelementptr inbounds %struct.Reg, %struct.Reg* %8065, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %8066 to i64*
  %8067 = load i64, i64* %PC.i356
  %8068 = add i64 %8067, 768
  %8069 = load i64, i64* %PC.i356
  %8070 = add i64 %8069, 6
  %8071 = load i64, i64* %PC.i356
  %8072 = add i64 %8071, 6
  store i64 %8072, i64* %PC.i356
  %8073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8074 = load i8, i8* %8073, align 1
  %8075 = icmp eq i8 %8074, 0
  %8076 = zext i1 %8075 to i8
  store i8 %8076, i8* %BRANCH_TAKEN, align 1
  %8077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8078 = select i1 %8075, i64 %8068, i64 %8070
  store i64 %8078, i64* %8077, align 8
  store %struct.Memory* %loadMem_47d887, %struct.Memory** %MEMORY
  %loadBr_47d887 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d887 = icmp eq i8 %loadBr_47d887, 1
  br i1 %cmpBr_47d887, label %block_.L_47db87, label %block_47d88d

block_47d88d:                                     ; preds = %block_.L_47d86c
  %loadMem_47d88d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8080 = getelementptr inbounds %struct.GPR, %struct.GPR* %8079, i32 0, i32 33
  %8081 = getelementptr inbounds %struct.Reg, %struct.Reg* %8080, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %8081 to i64*
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8083 = getelementptr inbounds %struct.GPR, %struct.GPR* %8082, i32 0, i32 1
  %8084 = getelementptr inbounds %struct.Reg, %struct.Reg* %8083, i32 0, i32 0
  %RAX.i355 = bitcast %union.anon* %8084 to i64*
  %8085 = load i64, i64* %PC.i354
  %8086 = add i64 %8085, 10
  store i64 %8086, i64* %PC.i354
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i355, align 8
  store %struct.Memory* %loadMem_47d88d, %struct.Memory** %MEMORY
  %loadMem_47d897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8088 = getelementptr inbounds %struct.GPR, %struct.GPR* %8087, i32 0, i32 33
  %8089 = getelementptr inbounds %struct.Reg, %struct.Reg* %8088, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %8089 to i64*
  %8090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8091 = getelementptr inbounds %struct.GPR, %struct.GPR* %8090, i32 0, i32 5
  %8092 = getelementptr inbounds %struct.Reg, %struct.Reg* %8091, i32 0, i32 0
  %RCX.i352 = bitcast %union.anon* %8092 to i64*
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8094 = getelementptr inbounds %struct.GPR, %struct.GPR* %8093, i32 0, i32 15
  %8095 = getelementptr inbounds %struct.Reg, %struct.Reg* %8094, i32 0, i32 0
  %RBP.i353 = bitcast %union.anon* %8095 to i64*
  %8096 = load i64, i64* %RBP.i353
  %8097 = sub i64 %8096, 8
  %8098 = load i64, i64* %PC.i351
  %8099 = add i64 %8098, 4
  store i64 %8099, i64* %PC.i351
  %8100 = inttoptr i64 %8097 to i32*
  %8101 = load i32, i32* %8100
  %8102 = sext i32 %8101 to i64
  store i64 %8102, i64* %RCX.i352, align 8
  store %struct.Memory* %loadMem_47d897, %struct.Memory** %MEMORY
  %loadMem_47d89b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8104 = getelementptr inbounds %struct.GPR, %struct.GPR* %8103, i32 0, i32 33
  %8105 = getelementptr inbounds %struct.Reg, %struct.Reg* %8104, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %8105 to i64*
  %8106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8107 = getelementptr inbounds %struct.GPR, %struct.GPR* %8106, i32 0, i32 5
  %8108 = getelementptr inbounds %struct.Reg, %struct.Reg* %8107, i32 0, i32 0
  %RCX.i350 = bitcast %union.anon* %8108 to i64*
  %8109 = load i64, i64* %RCX.i350
  %8110 = load i64, i64* %PC.i349
  %8111 = add i64 %8110, 4
  store i64 %8111, i64* %PC.i349
  %8112 = sext i64 %8109 to i128
  %8113 = and i128 %8112, -18446744073709551616
  %8114 = zext i64 %8109 to i128
  %8115 = or i128 %8113, %8114
  %8116 = mul i128 76, %8115
  %8117 = trunc i128 %8116 to i64
  store i64 %8117, i64* %RCX.i350, align 8
  %8118 = sext i64 %8117 to i128
  %8119 = icmp ne i128 %8118, %8116
  %8120 = zext i1 %8119 to i8
  %8121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8120, i8* %8121, align 1
  %8122 = trunc i128 %8116 to i32
  %8123 = and i32 %8122, 255
  %8124 = call i32 @llvm.ctpop.i32(i32 %8123)
  %8125 = trunc i32 %8124 to i8
  %8126 = and i8 %8125, 1
  %8127 = xor i8 %8126, 1
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8127, i8* %8128, align 1
  %8129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8129, align 1
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8130, align 1
  %8131 = lshr i64 %8117, 63
  %8132 = trunc i64 %8131 to i8
  %8133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8132, i8* %8133, align 1
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8120, i8* %8134, align 1
  store %struct.Memory* %loadMem_47d89b, %struct.Memory** %MEMORY
  %loadMem_47d89f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8136 = getelementptr inbounds %struct.GPR, %struct.GPR* %8135, i32 0, i32 33
  %8137 = getelementptr inbounds %struct.Reg, %struct.Reg* %8136, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %8137 to i64*
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8139 = getelementptr inbounds %struct.GPR, %struct.GPR* %8138, i32 0, i32 1
  %8140 = getelementptr inbounds %struct.Reg, %struct.Reg* %8139, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %8140 to i64*
  %8141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8142 = getelementptr inbounds %struct.GPR, %struct.GPR* %8141, i32 0, i32 5
  %8143 = getelementptr inbounds %struct.Reg, %struct.Reg* %8142, i32 0, i32 0
  %RCX.i348 = bitcast %union.anon* %8143 to i64*
  %8144 = load i64, i64* %RAX.i347
  %8145 = load i64, i64* %RCX.i348
  %8146 = load i64, i64* %PC.i346
  %8147 = add i64 %8146, 3
  store i64 %8147, i64* %PC.i346
  %8148 = add i64 %8145, %8144
  store i64 %8148, i64* %RAX.i347, align 8
  %8149 = icmp ult i64 %8148, %8144
  %8150 = icmp ult i64 %8148, %8145
  %8151 = or i1 %8149, %8150
  %8152 = zext i1 %8151 to i8
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8152, i8* %8153, align 1
  %8154 = trunc i64 %8148 to i32
  %8155 = and i32 %8154, 255
  %8156 = call i32 @llvm.ctpop.i32(i32 %8155)
  %8157 = trunc i32 %8156 to i8
  %8158 = and i8 %8157, 1
  %8159 = xor i8 %8158, 1
  %8160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8159, i8* %8160, align 1
  %8161 = xor i64 %8145, %8144
  %8162 = xor i64 %8161, %8148
  %8163 = lshr i64 %8162, 4
  %8164 = trunc i64 %8163 to i8
  %8165 = and i8 %8164, 1
  %8166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8165, i8* %8166, align 1
  %8167 = icmp eq i64 %8148, 0
  %8168 = zext i1 %8167 to i8
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8168, i8* %8169, align 1
  %8170 = lshr i64 %8148, 63
  %8171 = trunc i64 %8170 to i8
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8171, i8* %8172, align 1
  %8173 = lshr i64 %8144, 63
  %8174 = lshr i64 %8145, 63
  %8175 = xor i64 %8170, %8173
  %8176 = xor i64 %8170, %8174
  %8177 = add i64 %8175, %8176
  %8178 = icmp eq i64 %8177, 2
  %8179 = zext i1 %8178 to i8
  %8180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8179, i8* %8180, align 1
  store %struct.Memory* %loadMem_47d89f, %struct.Memory** %MEMORY
  %loadMem_47d8a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8182 = getelementptr inbounds %struct.GPR, %struct.GPR* %8181, i32 0, i32 33
  %8183 = getelementptr inbounds %struct.Reg, %struct.Reg* %8182, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %8183 to i64*
  %8184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8185 = getelementptr inbounds %struct.GPR, %struct.GPR* %8184, i32 0, i32 1
  %8186 = getelementptr inbounds %struct.Reg, %struct.Reg* %8185, i32 0, i32 0
  %RAX.i345 = bitcast %union.anon* %8186 to i64*
  %8187 = load i64, i64* %RAX.i345
  %8188 = add i64 %8187, 28
  %8189 = load i64, i64* %PC.i344
  %8190 = add i64 %8189, 4
  store i64 %8190, i64* %PC.i344
  %8191 = inttoptr i64 %8188 to i32*
  %8192 = load i32, i32* %8191
  %8193 = sub i32 %8192, 2
  %8194 = icmp ult i32 %8192, 2
  %8195 = zext i1 %8194 to i8
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8195, i8* %8196, align 1
  %8197 = and i32 %8193, 255
  %8198 = call i32 @llvm.ctpop.i32(i32 %8197)
  %8199 = trunc i32 %8198 to i8
  %8200 = and i8 %8199, 1
  %8201 = xor i8 %8200, 1
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8201, i8* %8202, align 1
  %8203 = xor i32 %8192, 2
  %8204 = xor i32 %8203, %8193
  %8205 = lshr i32 %8204, 4
  %8206 = trunc i32 %8205 to i8
  %8207 = and i8 %8206, 1
  %8208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8207, i8* %8208, align 1
  %8209 = icmp eq i32 %8193, 0
  %8210 = zext i1 %8209 to i8
  %8211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8210, i8* %8211, align 1
  %8212 = lshr i32 %8193, 31
  %8213 = trunc i32 %8212 to i8
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8213, i8* %8214, align 1
  %8215 = lshr i32 %8192, 31
  %8216 = xor i32 %8212, %8215
  %8217 = add i32 %8216, %8215
  %8218 = icmp eq i32 %8217, 2
  %8219 = zext i1 %8218 to i8
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8219, i8* %8220, align 1
  store %struct.Memory* %loadMem_47d8a2, %struct.Memory** %MEMORY
  %loadMem_47d8a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8222 = getelementptr inbounds %struct.GPR, %struct.GPR* %8221, i32 0, i32 33
  %8223 = getelementptr inbounds %struct.Reg, %struct.Reg* %8222, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %8223 to i64*
  %8224 = load i64, i64* %PC.i343
  %8225 = add i64 %8224, 737
  %8226 = load i64, i64* %PC.i343
  %8227 = add i64 %8226, 6
  %8228 = load i64, i64* %PC.i343
  %8229 = add i64 %8228, 6
  store i64 %8229, i64* %PC.i343
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8231 = load i8, i8* %8230, align 1
  %8232 = icmp eq i8 %8231, 0
  %8233 = zext i1 %8232 to i8
  store i8 %8233, i8* %BRANCH_TAKEN, align 1
  %8234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8235 = select i1 %8232, i64 %8225, i64 %8227
  store i64 %8235, i64* %8234, align 8
  store %struct.Memory* %loadMem_47d8a6, %struct.Memory** %MEMORY
  %loadBr_47d8a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d8a6 = icmp eq i8 %loadBr_47d8a6, 1
  br i1 %cmpBr_47d8a6, label %block_.L_47db87, label %block_47d8ac

block_47d8ac:                                     ; preds = %block_47d88d
  %loadMem_47d8ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8237 = getelementptr inbounds %struct.GPR, %struct.GPR* %8236, i32 0, i32 33
  %8238 = getelementptr inbounds %struct.Reg, %struct.Reg* %8237, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %8238 to i64*
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8240 = getelementptr inbounds %struct.GPR, %struct.GPR* %8239, i32 0, i32 15
  %8241 = getelementptr inbounds %struct.Reg, %struct.Reg* %8240, i32 0, i32 0
  %RBP.i342 = bitcast %union.anon* %8241 to i64*
  %8242 = load i64, i64* %RBP.i342
  %8243 = sub i64 %8242, 12
  %8244 = load i64, i64* %PC.i341
  %8245 = add i64 %8244, 7
  store i64 %8245, i64* %PC.i341
  %8246 = inttoptr i64 %8243 to i32*
  store i32 21, i32* %8246
  store %struct.Memory* %loadMem_47d8ac, %struct.Memory** %MEMORY
  br label %block_.L_47d8b3

block_.L_47d8b3:                                  ; preds = %block_.L_47db74, %block_47d8ac
  %loadMem_47d8b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8248 = getelementptr inbounds %struct.GPR, %struct.GPR* %8247, i32 0, i32 33
  %8249 = getelementptr inbounds %struct.Reg, %struct.Reg* %8248, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %8249 to i64*
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8251 = getelementptr inbounds %struct.GPR, %struct.GPR* %8250, i32 0, i32 15
  %8252 = getelementptr inbounds %struct.Reg, %struct.Reg* %8251, i32 0, i32 0
  %RBP.i340 = bitcast %union.anon* %8252 to i64*
  %8253 = load i64, i64* %RBP.i340
  %8254 = sub i64 %8253, 12
  %8255 = load i64, i64* %PC.i339
  %8256 = add i64 %8255, 7
  store i64 %8256, i64* %PC.i339
  %8257 = inttoptr i64 %8254 to i32*
  %8258 = load i32, i32* %8257
  %8259 = sub i32 %8258, 400
  %8260 = icmp ult i32 %8258, 400
  %8261 = zext i1 %8260 to i8
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8261, i8* %8262, align 1
  %8263 = and i32 %8259, 255
  %8264 = call i32 @llvm.ctpop.i32(i32 %8263)
  %8265 = trunc i32 %8264 to i8
  %8266 = and i8 %8265, 1
  %8267 = xor i8 %8266, 1
  %8268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8267, i8* %8268, align 1
  %8269 = xor i32 %8258, 400
  %8270 = xor i32 %8269, %8259
  %8271 = lshr i32 %8270, 4
  %8272 = trunc i32 %8271 to i8
  %8273 = and i8 %8272, 1
  %8274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8273, i8* %8274, align 1
  %8275 = icmp eq i32 %8259, 0
  %8276 = zext i1 %8275 to i8
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8276, i8* %8277, align 1
  %8278 = lshr i32 %8259, 31
  %8279 = trunc i32 %8278 to i8
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8279, i8* %8280, align 1
  %8281 = lshr i32 %8258, 31
  %8282 = xor i32 %8278, %8281
  %8283 = add i32 %8282, %8281
  %8284 = icmp eq i32 %8283, 2
  %8285 = zext i1 %8284 to i8
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8285, i8* %8286, align 1
  store %struct.Memory* %loadMem_47d8b3, %struct.Memory** %MEMORY
  %loadMem_47d8ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %8287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8288 = getelementptr inbounds %struct.GPR, %struct.GPR* %8287, i32 0, i32 33
  %8289 = getelementptr inbounds %struct.Reg, %struct.Reg* %8288, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %8289 to i64*
  %8290 = load i64, i64* %PC.i338
  %8291 = add i64 %8290, 712
  %8292 = load i64, i64* %PC.i338
  %8293 = add i64 %8292, 6
  %8294 = load i64, i64* %PC.i338
  %8295 = add i64 %8294, 6
  store i64 %8295, i64* %PC.i338
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8297 = load i8, i8* %8296, align 1
  %8298 = icmp ne i8 %8297, 0
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8300 = load i8, i8* %8299, align 1
  %8301 = icmp ne i8 %8300, 0
  %8302 = xor i1 %8298, %8301
  %8303 = xor i1 %8302, true
  %8304 = zext i1 %8303 to i8
  store i8 %8304, i8* %BRANCH_TAKEN, align 1
  %8305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8306 = select i1 %8302, i64 %8293, i64 %8291
  store i64 %8306, i64* %8305, align 8
  store %struct.Memory* %loadMem_47d8ba, %struct.Memory** %MEMORY
  %loadBr_47d8ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d8ba = icmp eq i8 %loadBr_47d8ba, 1
  br i1 %cmpBr_47d8ba, label %block_.L_47db82, label %block_47d8c0

block_47d8c0:                                     ; preds = %block_.L_47d8b3
  %loadMem_47d8c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8308 = getelementptr inbounds %struct.GPR, %struct.GPR* %8307, i32 0, i32 33
  %8309 = getelementptr inbounds %struct.Reg, %struct.Reg* %8308, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %8309 to i64*
  %8310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8311 = getelementptr inbounds %struct.GPR, %struct.GPR* %8310, i32 0, i32 1
  %8312 = getelementptr inbounds %struct.Reg, %struct.Reg* %8311, i32 0, i32 0
  %RAX.i336 = bitcast %union.anon* %8312 to i64*
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8314 = getelementptr inbounds %struct.GPR, %struct.GPR* %8313, i32 0, i32 15
  %8315 = getelementptr inbounds %struct.Reg, %struct.Reg* %8314, i32 0, i32 0
  %RBP.i337 = bitcast %union.anon* %8315 to i64*
  %8316 = load i64, i64* %RBP.i337
  %8317 = sub i64 %8316, 12
  %8318 = load i64, i64* %PC.i335
  %8319 = add i64 %8318, 4
  store i64 %8319, i64* %PC.i335
  %8320 = inttoptr i64 %8317 to i32*
  %8321 = load i32, i32* %8320
  %8322 = sext i32 %8321 to i64
  store i64 %8322, i64* %RAX.i336, align 8
  store %struct.Memory* %loadMem_47d8c0, %struct.Memory** %MEMORY
  %loadMem_47d8c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8324 = getelementptr inbounds %struct.GPR, %struct.GPR* %8323, i32 0, i32 33
  %8325 = getelementptr inbounds %struct.Reg, %struct.Reg* %8324, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %8325 to i64*
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8327 = getelementptr inbounds %struct.GPR, %struct.GPR* %8326, i32 0, i32 1
  %8328 = getelementptr inbounds %struct.Reg, %struct.Reg* %8327, i32 0, i32 0
  %RAX.i333 = bitcast %union.anon* %8328 to i64*
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8330 = getelementptr inbounds %struct.GPR, %struct.GPR* %8329, i32 0, i32 5
  %8331 = getelementptr inbounds %struct.Reg, %struct.Reg* %8330, i32 0, i32 0
  %RCX.i334 = bitcast %union.anon* %8331 to i64*
  %8332 = load i64, i64* %RAX.i333
  %8333 = add i64 %8332, 12099168
  %8334 = load i64, i64* %PC.i332
  %8335 = add i64 %8334, 8
  store i64 %8335, i64* %PC.i332
  %8336 = inttoptr i64 %8333 to i8*
  %8337 = load i8, i8* %8336
  %8338 = zext i8 %8337 to i64
  store i64 %8338, i64* %RCX.i334, align 8
  store %struct.Memory* %loadMem_47d8c4, %struct.Memory** %MEMORY
  %loadMem_47d8cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8340 = getelementptr inbounds %struct.GPR, %struct.GPR* %8339, i32 0, i32 33
  %8341 = getelementptr inbounds %struct.Reg, %struct.Reg* %8340, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %8341 to i64*
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8343 = getelementptr inbounds %struct.GPR, %struct.GPR* %8342, i32 0, i32 5
  %8344 = getelementptr inbounds %struct.Reg, %struct.Reg* %8343, i32 0, i32 0
  %ECX.i331 = bitcast %union.anon* %8344 to i32*
  %8345 = load i32, i32* %ECX.i331
  %8346 = zext i32 %8345 to i64
  %8347 = load i64, i64* %PC.i330
  %8348 = add i64 %8347, 3
  store i64 %8348, i64* %PC.i330
  %8349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8349, align 1
  %8350 = and i32 %8345, 255
  %8351 = call i32 @llvm.ctpop.i32(i32 %8350)
  %8352 = trunc i32 %8351 to i8
  %8353 = and i8 %8352, 1
  %8354 = xor i8 %8353, 1
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8354, i8* %8355, align 1
  %8356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8356, align 1
  %8357 = icmp eq i32 %8345, 0
  %8358 = zext i1 %8357 to i8
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8358, i8* %8359, align 1
  %8360 = lshr i32 %8345, 31
  %8361 = trunc i32 %8360 to i8
  %8362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8361, i8* %8362, align 1
  %8363 = lshr i32 %8345, 31
  %8364 = xor i32 %8360, %8363
  %8365 = add i32 %8364, %8363
  %8366 = icmp eq i32 %8365, 2
  %8367 = zext i1 %8366 to i8
  %8368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8367, i8* %8368, align 1
  store %struct.Memory* %loadMem_47d8cc, %struct.Memory** %MEMORY
  %loadMem_47d8cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8370 = getelementptr inbounds %struct.GPR, %struct.GPR* %8369, i32 0, i32 33
  %8371 = getelementptr inbounds %struct.Reg, %struct.Reg* %8370, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %8371 to i64*
  %8372 = load i64, i64* %PC.i329
  %8373 = add i64 %8372, 11
  %8374 = load i64, i64* %PC.i329
  %8375 = add i64 %8374, 6
  %8376 = load i64, i64* %PC.i329
  %8377 = add i64 %8376, 6
  store i64 %8377, i64* %PC.i329
  %8378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8379 = load i8, i8* %8378, align 1
  store i8 %8379, i8* %BRANCH_TAKEN, align 1
  %8380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8381 = icmp ne i8 %8379, 0
  %8382 = select i1 %8381, i64 %8373, i64 %8375
  store i64 %8382, i64* %8380, align 8
  store %struct.Memory* %loadMem_47d8cf, %struct.Memory** %MEMORY
  %loadBr_47d8cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d8cf = icmp eq i8 %loadBr_47d8cf, 1
  br i1 %cmpBr_47d8cf, label %block_.L_47d8da, label %block_47d8d5

block_47d8d5:                                     ; preds = %block_47d8c0
  %loadMem_47d8d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8384 = getelementptr inbounds %struct.GPR, %struct.GPR* %8383, i32 0, i32 33
  %8385 = getelementptr inbounds %struct.Reg, %struct.Reg* %8384, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %8385 to i64*
  %8386 = load i64, i64* %PC.i328
  %8387 = add i64 %8386, 671
  %8388 = load i64, i64* %PC.i328
  %8389 = add i64 %8388, 5
  store i64 %8389, i64* %PC.i328
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8387, i64* %8390, align 8
  store %struct.Memory* %loadMem_47d8d5, %struct.Memory** %MEMORY
  br label %block_.L_47db74

block_.L_47d8da:                                  ; preds = %block_47d8c0
  %loadMem_47d8da = load %struct.Memory*, %struct.Memory** %MEMORY
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8392 = getelementptr inbounds %struct.GPR, %struct.GPR* %8391, i32 0, i32 33
  %8393 = getelementptr inbounds %struct.Reg, %struct.Reg* %8392, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %8393 to i64*
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8395 = getelementptr inbounds %struct.GPR, %struct.GPR* %8394, i32 0, i32 15
  %8396 = getelementptr inbounds %struct.Reg, %struct.Reg* %8395, i32 0, i32 0
  %RBP.i327 = bitcast %union.anon* %8396 to i64*
  %8397 = load i64, i64* %RBP.i327
  %8398 = sub i64 %8397, 36
  %8399 = load i64, i64* %PC.i326
  %8400 = add i64 %8399, 7
  store i64 %8400, i64* %PC.i326
  %8401 = inttoptr i64 %8398 to i32*
  store i32 0, i32* %8401
  store %struct.Memory* %loadMem_47d8da, %struct.Memory** %MEMORY
  %loadMem_47d8e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8403 = getelementptr inbounds %struct.GPR, %struct.GPR* %8402, i32 0, i32 33
  %8404 = getelementptr inbounds %struct.Reg, %struct.Reg* %8403, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %8404 to i64*
  %8405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8406 = getelementptr inbounds %struct.GPR, %struct.GPR* %8405, i32 0, i32 15
  %8407 = getelementptr inbounds %struct.Reg, %struct.Reg* %8406, i32 0, i32 0
  %RBP.i325 = bitcast %union.anon* %8407 to i64*
  %8408 = load i64, i64* %RBP.i325
  %8409 = sub i64 %8408, 16
  %8410 = load i64, i64* %PC.i324
  %8411 = add i64 %8410, 7
  store i64 %8411, i64* %PC.i324
  %8412 = inttoptr i64 %8409 to i32*
  store i32 0, i32* %8412
  store %struct.Memory* %loadMem_47d8e1, %struct.Memory** %MEMORY
  br label %block_.L_47d8e8

block_.L_47d8e8:                                  ; preds = %block_.L_47da1d, %block_.L_47d8da
  %loadMem_47d8e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8414 = getelementptr inbounds %struct.GPR, %struct.GPR* %8413, i32 0, i32 33
  %8415 = getelementptr inbounds %struct.Reg, %struct.Reg* %8414, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %8415 to i64*
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8417 = getelementptr inbounds %struct.GPR, %struct.GPR* %8416, i32 0, i32 15
  %8418 = getelementptr inbounds %struct.Reg, %struct.Reg* %8417, i32 0, i32 0
  %RBP.i323 = bitcast %union.anon* %8418 to i64*
  %8419 = load i64, i64* %RBP.i323
  %8420 = sub i64 %8419, 16
  %8421 = load i64, i64* %PC.i322
  %8422 = add i64 %8421, 4
  store i64 %8422, i64* %PC.i322
  %8423 = inttoptr i64 %8420 to i32*
  %8424 = load i32, i32* %8423
  %8425 = sub i32 %8424, 120
  %8426 = icmp ult i32 %8424, 120
  %8427 = zext i1 %8426 to i8
  %8428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8427, i8* %8428, align 1
  %8429 = and i32 %8425, 255
  %8430 = call i32 @llvm.ctpop.i32(i32 %8429)
  %8431 = trunc i32 %8430 to i8
  %8432 = and i8 %8431, 1
  %8433 = xor i8 %8432, 1
  %8434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8433, i8* %8434, align 1
  %8435 = xor i32 %8424, 120
  %8436 = xor i32 %8435, %8425
  %8437 = lshr i32 %8436, 4
  %8438 = trunc i32 %8437 to i8
  %8439 = and i8 %8438, 1
  %8440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8439, i8* %8440, align 1
  %8441 = icmp eq i32 %8425, 0
  %8442 = zext i1 %8441 to i8
  %8443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8442, i8* %8443, align 1
  %8444 = lshr i32 %8425, 31
  %8445 = trunc i32 %8444 to i8
  %8446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8445, i8* %8446, align 1
  %8447 = lshr i32 %8424, 31
  %8448 = xor i32 %8444, %8447
  %8449 = add i32 %8448, %8447
  %8450 = icmp eq i32 %8449, 2
  %8451 = zext i1 %8450 to i8
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8451, i8* %8452, align 1
  store %struct.Memory* %loadMem_47d8e8, %struct.Memory** %MEMORY
  %loadMem_47d8ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8454 = getelementptr inbounds %struct.GPR, %struct.GPR* %8453, i32 0, i32 33
  %8455 = getelementptr inbounds %struct.Reg, %struct.Reg* %8454, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %8455 to i64*
  %8456 = load i64, i64* %PC.i321
  %8457 = add i64 %8456, 319
  %8458 = load i64, i64* %PC.i321
  %8459 = add i64 %8458, 6
  %8460 = load i64, i64* %PC.i321
  %8461 = add i64 %8460, 6
  store i64 %8461, i64* %PC.i321
  %8462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8463 = load i8, i8* %8462, align 1
  %8464 = icmp ne i8 %8463, 0
  %8465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8466 = load i8, i8* %8465, align 1
  %8467 = icmp ne i8 %8466, 0
  %8468 = xor i1 %8464, %8467
  %8469 = xor i1 %8468, true
  %8470 = zext i1 %8469 to i8
  store i8 %8470, i8* %BRANCH_TAKEN, align 1
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8472 = select i1 %8468, i64 %8459, i64 %8457
  store i64 %8472, i64* %8471, align 8
  store %struct.Memory* %loadMem_47d8ec, %struct.Memory** %MEMORY
  %loadBr_47d8ec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d8ec = icmp eq i8 %loadBr_47d8ec, 1
  br i1 %cmpBr_47d8ec, label %block_.L_47da2b, label %block_47d8f2

block_47d8f2:                                     ; preds = %block_.L_47d8e8
  %loadMem_47d8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8474 = getelementptr inbounds %struct.GPR, %struct.GPR* %8473, i32 0, i32 33
  %8475 = getelementptr inbounds %struct.Reg, %struct.Reg* %8474, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %8475 to i64*
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8477 = getelementptr inbounds %struct.GPR, %struct.GPR* %8476, i32 0, i32 1
  %8478 = getelementptr inbounds %struct.Reg, %struct.Reg* %8477, i32 0, i32 0
  %RAX.i320 = bitcast %union.anon* %8478 to i64*
  %8479 = load i64, i64* %PC.i319
  %8480 = add i64 %8479, 10
  store i64 %8480, i64* %PC.i319
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i320, align 8
  store %struct.Memory* %loadMem_47d8f2, %struct.Memory** %MEMORY
  %loadMem_47d8fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8482 = getelementptr inbounds %struct.GPR, %struct.GPR* %8481, i32 0, i32 33
  %8483 = getelementptr inbounds %struct.Reg, %struct.Reg* %8482, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %8483 to i64*
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8485 = getelementptr inbounds %struct.GPR, %struct.GPR* %8484, i32 0, i32 5
  %8486 = getelementptr inbounds %struct.Reg, %struct.Reg* %8485, i32 0, i32 0
  %RCX.i317 = bitcast %union.anon* %8486 to i64*
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 15
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %RBP.i318 = bitcast %union.anon* %8489 to i64*
  %8490 = load i64, i64* %RBP.i318
  %8491 = sub i64 %8490, 12
  %8492 = load i64, i64* %PC.i316
  %8493 = add i64 %8492, 4
  store i64 %8493, i64* %PC.i316
  %8494 = inttoptr i64 %8491 to i32*
  %8495 = load i32, i32* %8494
  %8496 = sext i32 %8495 to i64
  store i64 %8496, i64* %RCX.i317, align 8
  store %struct.Memory* %loadMem_47d8fc, %struct.Memory** %MEMORY
  %loadMem_47d900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8498 = getelementptr inbounds %struct.GPR, %struct.GPR* %8497, i32 0, i32 33
  %8499 = getelementptr inbounds %struct.Reg, %struct.Reg* %8498, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %8499 to i64*
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8501 = getelementptr inbounds %struct.GPR, %struct.GPR* %8500, i32 0, i32 5
  %8502 = getelementptr inbounds %struct.Reg, %struct.Reg* %8501, i32 0, i32 0
  %RCX.i315 = bitcast %union.anon* %8502 to i64*
  %8503 = load i64, i64* %RCX.i315
  %8504 = load i64, i64* %PC.i314
  %8505 = add i64 %8504, 7
  store i64 %8505, i64* %PC.i314
  %8506 = sext i64 %8503 to i128
  %8507 = and i128 %8506, -18446744073709551616
  %8508 = zext i64 %8503 to i128
  %8509 = or i128 %8507, %8508
  %8510 = mul i128 564, %8509
  %8511 = trunc i128 %8510 to i64
  store i64 %8511, i64* %RCX.i315, align 8
  %8512 = sext i64 %8511 to i128
  %8513 = icmp ne i128 %8512, %8510
  %8514 = zext i1 %8513 to i8
  %8515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8514, i8* %8515, align 1
  %8516 = trunc i128 %8510 to i32
  %8517 = and i32 %8516, 255
  %8518 = call i32 @llvm.ctpop.i32(i32 %8517)
  %8519 = trunc i32 %8518 to i8
  %8520 = and i8 %8519, 1
  %8521 = xor i8 %8520, 1
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8521, i8* %8522, align 1
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8523, align 1
  %8524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8524, align 1
  %8525 = lshr i64 %8511, 63
  %8526 = trunc i64 %8525 to i8
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8526, i8* %8527, align 1
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8514, i8* %8528, align 1
  store %struct.Memory* %loadMem_47d900, %struct.Memory** %MEMORY
  %loadMem_47d907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8530 = getelementptr inbounds %struct.GPR, %struct.GPR* %8529, i32 0, i32 33
  %8531 = getelementptr inbounds %struct.Reg, %struct.Reg* %8530, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %8531 to i64*
  %8532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8533 = getelementptr inbounds %struct.GPR, %struct.GPR* %8532, i32 0, i32 1
  %8534 = getelementptr inbounds %struct.Reg, %struct.Reg* %8533, i32 0, i32 0
  %RAX.i312 = bitcast %union.anon* %8534 to i64*
  %8535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8536 = getelementptr inbounds %struct.GPR, %struct.GPR* %8535, i32 0, i32 5
  %8537 = getelementptr inbounds %struct.Reg, %struct.Reg* %8536, i32 0, i32 0
  %RCX.i313 = bitcast %union.anon* %8537 to i64*
  %8538 = load i64, i64* %RAX.i312
  %8539 = load i64, i64* %RCX.i313
  %8540 = load i64, i64* %PC.i311
  %8541 = add i64 %8540, 3
  store i64 %8541, i64* %PC.i311
  %8542 = add i64 %8539, %8538
  store i64 %8542, i64* %RAX.i312, align 8
  %8543 = icmp ult i64 %8542, %8538
  %8544 = icmp ult i64 %8542, %8539
  %8545 = or i1 %8543, %8544
  %8546 = zext i1 %8545 to i8
  %8547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8546, i8* %8547, align 1
  %8548 = trunc i64 %8542 to i32
  %8549 = and i32 %8548, 255
  %8550 = call i32 @llvm.ctpop.i32(i32 %8549)
  %8551 = trunc i32 %8550 to i8
  %8552 = and i8 %8551, 1
  %8553 = xor i8 %8552, 1
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8553, i8* %8554, align 1
  %8555 = xor i64 %8539, %8538
  %8556 = xor i64 %8555, %8542
  %8557 = lshr i64 %8556, 4
  %8558 = trunc i64 %8557 to i8
  %8559 = and i8 %8558, 1
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8559, i8* %8560, align 1
  %8561 = icmp eq i64 %8542, 0
  %8562 = zext i1 %8561 to i8
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8562, i8* %8563, align 1
  %8564 = lshr i64 %8542, 63
  %8565 = trunc i64 %8564 to i8
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8565, i8* %8566, align 1
  %8567 = lshr i64 %8538, 63
  %8568 = lshr i64 %8539, 63
  %8569 = xor i64 %8564, %8567
  %8570 = xor i64 %8564, %8568
  %8571 = add i64 %8569, %8570
  %8572 = icmp eq i64 %8571, 2
  %8573 = zext i1 %8572 to i8
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8573, i8* %8574, align 1
  store %struct.Memory* %loadMem_47d907, %struct.Memory** %MEMORY
  %loadMem_47d90a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8576 = getelementptr inbounds %struct.GPR, %struct.GPR* %8575, i32 0, i32 33
  %8577 = getelementptr inbounds %struct.Reg, %struct.Reg* %8576, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %8577 to i64*
  %8578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8579 = getelementptr inbounds %struct.GPR, %struct.GPR* %8578, i32 0, i32 5
  %8580 = getelementptr inbounds %struct.Reg, %struct.Reg* %8579, i32 0, i32 0
  %RCX.i309 = bitcast %union.anon* %8580 to i64*
  %8581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8582 = getelementptr inbounds %struct.GPR, %struct.GPR* %8581, i32 0, i32 15
  %8583 = getelementptr inbounds %struct.Reg, %struct.Reg* %8582, i32 0, i32 0
  %RBP.i310 = bitcast %union.anon* %8583 to i64*
  %8584 = load i64, i64* %RBP.i310
  %8585 = sub i64 %8584, 16
  %8586 = load i64, i64* %PC.i308
  %8587 = add i64 %8586, 4
  store i64 %8587, i64* %PC.i308
  %8588 = inttoptr i64 %8585 to i32*
  %8589 = load i32, i32* %8588
  %8590 = sext i32 %8589 to i64
  store i64 %8590, i64* %RCX.i309, align 8
  store %struct.Memory* %loadMem_47d90a, %struct.Memory** %MEMORY
  %loadMem_47d90e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8592 = getelementptr inbounds %struct.GPR, %struct.GPR* %8591, i32 0, i32 33
  %8593 = getelementptr inbounds %struct.Reg, %struct.Reg* %8592, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %8593 to i64*
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8595 = getelementptr inbounds %struct.GPR, %struct.GPR* %8594, i32 0, i32 1
  %8596 = getelementptr inbounds %struct.Reg, %struct.Reg* %8595, i32 0, i32 0
  %RAX.i305 = bitcast %union.anon* %8596 to i64*
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8598 = getelementptr inbounds %struct.GPR, %struct.GPR* %8597, i32 0, i32 5
  %8599 = getelementptr inbounds %struct.Reg, %struct.Reg* %8598, i32 0, i32 0
  %RCX.i306 = bitcast %union.anon* %8599 to i64*
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8601 = getelementptr inbounds %struct.GPR, %struct.GPR* %8600, i32 0, i32 7
  %8602 = getelementptr inbounds %struct.Reg, %struct.Reg* %8601, i32 0, i32 0
  %RDX.i307 = bitcast %union.anon* %8602 to i64*
  %8603 = load i64, i64* %RAX.i305
  %8604 = load i64, i64* %RCX.i306
  %8605 = mul i64 %8604, 4
  %8606 = add i64 %8603, 72
  %8607 = add i64 %8606, %8605
  %8608 = load i64, i64* %PC.i304
  %8609 = add i64 %8608, 4
  store i64 %8609, i64* %PC.i304
  %8610 = inttoptr i64 %8607 to i32*
  %8611 = load i32, i32* %8610
  %8612 = zext i32 %8611 to i64
  store i64 %8612, i64* %RDX.i307, align 8
  store %struct.Memory* %loadMem_47d90e, %struct.Memory** %MEMORY
  %loadMem_47d912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8614 = getelementptr inbounds %struct.GPR, %struct.GPR* %8613, i32 0, i32 33
  %8615 = getelementptr inbounds %struct.Reg, %struct.Reg* %8614, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %8615 to i64*
  %8616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8617 = getelementptr inbounds %struct.GPR, %struct.GPR* %8616, i32 0, i32 7
  %8618 = getelementptr inbounds %struct.Reg, %struct.Reg* %8617, i32 0, i32 0
  %EDX.i302 = bitcast %union.anon* %8618 to i32*
  %8619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8620 = getelementptr inbounds %struct.GPR, %struct.GPR* %8619, i32 0, i32 15
  %8621 = getelementptr inbounds %struct.Reg, %struct.Reg* %8620, i32 0, i32 0
  %RBP.i303 = bitcast %union.anon* %8621 to i64*
  %8622 = load i64, i64* %RBP.i303
  %8623 = sub i64 %8622, 80
  %8624 = load i32, i32* %EDX.i302
  %8625 = zext i32 %8624 to i64
  %8626 = load i64, i64* %PC.i301
  %8627 = add i64 %8626, 3
  store i64 %8627, i64* %PC.i301
  %8628 = inttoptr i64 %8623 to i32*
  store i32 %8624, i32* %8628
  store %struct.Memory* %loadMem_47d912, %struct.Memory** %MEMORY
  %loadMem_47d915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8630 = getelementptr inbounds %struct.GPR, %struct.GPR* %8629, i32 0, i32 33
  %8631 = getelementptr inbounds %struct.Reg, %struct.Reg* %8630, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %8631 to i64*
  %8632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8633 = getelementptr inbounds %struct.GPR, %struct.GPR* %8632, i32 0, i32 15
  %8634 = getelementptr inbounds %struct.Reg, %struct.Reg* %8633, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %8634 to i64*
  %8635 = load i64, i64* %RBP.i300
  %8636 = sub i64 %8635, 80
  %8637 = load i64, i64* %PC.i299
  %8638 = add i64 %8637, 4
  store i64 %8638, i64* %PC.i299
  %8639 = inttoptr i64 %8636 to i32*
  %8640 = load i32, i32* %8639
  %8641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8641, align 1
  %8642 = and i32 %8640, 255
  %8643 = call i32 @llvm.ctpop.i32(i32 %8642)
  %8644 = trunc i32 %8643 to i8
  %8645 = and i8 %8644, 1
  %8646 = xor i8 %8645, 1
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8646, i8* %8647, align 1
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8648, align 1
  %8649 = icmp eq i32 %8640, 0
  %8650 = zext i1 %8649 to i8
  %8651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8650, i8* %8651, align 1
  %8652 = lshr i32 %8640, 31
  %8653 = trunc i32 %8652 to i8
  %8654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8653, i8* %8654, align 1
  %8655 = lshr i32 %8640, 31
  %8656 = xor i32 %8652, %8655
  %8657 = add i32 %8656, %8655
  %8658 = icmp eq i32 %8657, 2
  %8659 = zext i1 %8658 to i8
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8659, i8* %8660, align 1
  store %struct.Memory* %loadMem_47d915, %struct.Memory** %MEMORY
  %loadMem_47d919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8662 = getelementptr inbounds %struct.GPR, %struct.GPR* %8661, i32 0, i32 33
  %8663 = getelementptr inbounds %struct.Reg, %struct.Reg* %8662, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %8663 to i64*
  %8664 = load i64, i64* %PC.i298
  %8665 = add i64 %8664, 11
  %8666 = load i64, i64* %PC.i298
  %8667 = add i64 %8666, 6
  %8668 = load i64, i64* %PC.i298
  %8669 = add i64 %8668, 6
  store i64 %8669, i64* %PC.i298
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8671 = load i8, i8* %8670, align 1
  %8672 = icmp ne i8 %8671, 0
  %8673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8674 = load i8, i8* %8673, align 1
  %8675 = icmp ne i8 %8674, 0
  %8676 = xor i1 %8672, %8675
  %8677 = xor i1 %8676, true
  %8678 = zext i1 %8677 to i8
  store i8 %8678, i8* %BRANCH_TAKEN, align 1
  %8679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8680 = select i1 %8676, i64 %8667, i64 %8665
  store i64 %8680, i64* %8679, align 8
  store %struct.Memory* %loadMem_47d919, %struct.Memory** %MEMORY
  %loadBr_47d919 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d919 = icmp eq i8 %loadBr_47d919, 1
  br i1 %cmpBr_47d919, label %block_.L_47d924, label %block_47d91f

block_47d91f:                                     ; preds = %block_47d8f2
  %loadMem_47d91f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8682 = getelementptr inbounds %struct.GPR, %struct.GPR* %8681, i32 0, i32 33
  %8683 = getelementptr inbounds %struct.Reg, %struct.Reg* %8682, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %8683 to i64*
  %8684 = load i64, i64* %PC.i297
  %8685 = add i64 %8684, 268
  %8686 = load i64, i64* %PC.i297
  %8687 = add i64 %8686, 5
  store i64 %8687, i64* %PC.i297
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8685, i64* %8688, align 8
  store %struct.Memory* %loadMem_47d91f, %struct.Memory** %MEMORY
  br label %block_.L_47da2b

block_.L_47d924:                                  ; preds = %block_47d8f2
  %loadMem_47d924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8690 = getelementptr inbounds %struct.GPR, %struct.GPR* %8689, i32 0, i32 33
  %8691 = getelementptr inbounds %struct.Reg, %struct.Reg* %8690, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %8691 to i64*
  %8692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8693 = getelementptr inbounds %struct.GPR, %struct.GPR* %8692, i32 0, i32 1
  %8694 = getelementptr inbounds %struct.Reg, %struct.Reg* %8693, i32 0, i32 0
  %RAX.i296 = bitcast %union.anon* %8694 to i64*
  %8695 = load i64, i64* %PC.i295
  %8696 = add i64 %8695, 10
  store i64 %8696, i64* %PC.i295
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i296, align 8
  store %struct.Memory* %loadMem_47d924, %struct.Memory** %MEMORY
  %loadMem_47d92e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8698 = getelementptr inbounds %struct.GPR, %struct.GPR* %8697, i32 0, i32 33
  %8699 = getelementptr inbounds %struct.Reg, %struct.Reg* %8698, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %8699 to i64*
  %8700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8701 = getelementptr inbounds %struct.GPR, %struct.GPR* %8700, i32 0, i32 5
  %8702 = getelementptr inbounds %struct.Reg, %struct.Reg* %8701, i32 0, i32 0
  %RCX.i293 = bitcast %union.anon* %8702 to i64*
  %8703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8704 = getelementptr inbounds %struct.GPR, %struct.GPR* %8703, i32 0, i32 15
  %8705 = getelementptr inbounds %struct.Reg, %struct.Reg* %8704, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %8705 to i64*
  %8706 = load i64, i64* %RBP.i294
  %8707 = sub i64 %8706, 80
  %8708 = load i64, i64* %PC.i292
  %8709 = add i64 %8708, 4
  store i64 %8709, i64* %PC.i292
  %8710 = inttoptr i64 %8707 to i32*
  %8711 = load i32, i32* %8710
  %8712 = sext i32 %8711 to i64
  store i64 %8712, i64* %RCX.i293, align 8
  store %struct.Memory* %loadMem_47d92e, %struct.Memory** %MEMORY
  %loadMem_47d932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8714 = getelementptr inbounds %struct.GPR, %struct.GPR* %8713, i32 0, i32 33
  %8715 = getelementptr inbounds %struct.Reg, %struct.Reg* %8714, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %8715 to i64*
  %8716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8717 = getelementptr inbounds %struct.GPR, %struct.GPR* %8716, i32 0, i32 5
  %8718 = getelementptr inbounds %struct.Reg, %struct.Reg* %8717, i32 0, i32 0
  %RCX.i291 = bitcast %union.anon* %8718 to i64*
  %8719 = load i64, i64* %RCX.i291
  %8720 = load i64, i64* %PC.i290
  %8721 = add i64 %8720, 4
  store i64 %8721, i64* %PC.i290
  %8722 = sext i64 %8719 to i128
  %8723 = and i128 %8722, -18446744073709551616
  %8724 = zext i64 %8719 to i128
  %8725 = or i128 %8723, %8724
  %8726 = mul i128 12, %8725
  %8727 = trunc i128 %8726 to i64
  store i64 %8727, i64* %RCX.i291, align 8
  %8728 = sext i64 %8727 to i128
  %8729 = icmp ne i128 %8728, %8726
  %8730 = zext i1 %8729 to i8
  %8731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8730, i8* %8731, align 1
  %8732 = trunc i128 %8726 to i32
  %8733 = and i32 %8732, 255
  %8734 = call i32 @llvm.ctpop.i32(i32 %8733)
  %8735 = trunc i32 %8734 to i8
  %8736 = and i8 %8735, 1
  %8737 = xor i8 %8736, 1
  %8738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8737, i8* %8738, align 1
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8739, align 1
  %8740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8740, align 1
  %8741 = lshr i64 %8727, 63
  %8742 = trunc i64 %8741 to i8
  %8743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8742, i8* %8743, align 1
  %8744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8730, i8* %8744, align 1
  store %struct.Memory* %loadMem_47d932, %struct.Memory** %MEMORY
  %loadMem_47d936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8746 = getelementptr inbounds %struct.GPR, %struct.GPR* %8745, i32 0, i32 33
  %8747 = getelementptr inbounds %struct.Reg, %struct.Reg* %8746, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %8747 to i64*
  %8748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8749 = getelementptr inbounds %struct.GPR, %struct.GPR* %8748, i32 0, i32 1
  %8750 = getelementptr inbounds %struct.Reg, %struct.Reg* %8749, i32 0, i32 0
  %RAX.i288 = bitcast %union.anon* %8750 to i64*
  %8751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8752 = getelementptr inbounds %struct.GPR, %struct.GPR* %8751, i32 0, i32 5
  %8753 = getelementptr inbounds %struct.Reg, %struct.Reg* %8752, i32 0, i32 0
  %RCX.i289 = bitcast %union.anon* %8753 to i64*
  %8754 = load i64, i64* %RAX.i288
  %8755 = load i64, i64* %RCX.i289
  %8756 = load i64, i64* %PC.i287
  %8757 = add i64 %8756, 3
  store i64 %8757, i64* %PC.i287
  %8758 = add i64 %8755, %8754
  store i64 %8758, i64* %RAX.i288, align 8
  %8759 = icmp ult i64 %8758, %8754
  %8760 = icmp ult i64 %8758, %8755
  %8761 = or i1 %8759, %8760
  %8762 = zext i1 %8761 to i8
  %8763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8762, i8* %8763, align 1
  %8764 = trunc i64 %8758 to i32
  %8765 = and i32 %8764, 255
  %8766 = call i32 @llvm.ctpop.i32(i32 %8765)
  %8767 = trunc i32 %8766 to i8
  %8768 = and i8 %8767, 1
  %8769 = xor i8 %8768, 1
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8769, i8* %8770, align 1
  %8771 = xor i64 %8755, %8754
  %8772 = xor i64 %8771, %8758
  %8773 = lshr i64 %8772, 4
  %8774 = trunc i64 %8773 to i8
  %8775 = and i8 %8774, 1
  %8776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8775, i8* %8776, align 1
  %8777 = icmp eq i64 %8758, 0
  %8778 = zext i1 %8777 to i8
  %8779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8778, i8* %8779, align 1
  %8780 = lshr i64 %8758, 63
  %8781 = trunc i64 %8780 to i8
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8781, i8* %8782, align 1
  %8783 = lshr i64 %8754, 63
  %8784 = lshr i64 %8755, 63
  %8785 = xor i64 %8780, %8783
  %8786 = xor i64 %8780, %8784
  %8787 = add i64 %8785, %8786
  %8788 = icmp eq i64 %8787, 2
  %8789 = zext i1 %8788 to i8
  %8790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8789, i8* %8790, align 1
  store %struct.Memory* %loadMem_47d936, %struct.Memory** %MEMORY
  %loadMem_47d939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8792 = getelementptr inbounds %struct.GPR, %struct.GPR* %8791, i32 0, i32 33
  %8793 = getelementptr inbounds %struct.Reg, %struct.Reg* %8792, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %8793 to i64*
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8795 = getelementptr inbounds %struct.GPR, %struct.GPR* %8794, i32 0, i32 1
  %8796 = getelementptr inbounds %struct.Reg, %struct.Reg* %8795, i32 0, i32 0
  %RAX.i286 = bitcast %union.anon* %8796 to i64*
  %8797 = load i64, i64* %RAX.i286
  %8798 = load i64, i64* %PC.i285
  %8799 = add i64 %8798, 3
  store i64 %8799, i64* %PC.i285
  %8800 = inttoptr i64 %8797 to i32*
  %8801 = load i32, i32* %8800
  %8802 = sub i32 %8801, 26
  %8803 = icmp ult i32 %8801, 26
  %8804 = zext i1 %8803 to i8
  %8805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8804, i8* %8805, align 1
  %8806 = and i32 %8802, 255
  %8807 = call i32 @llvm.ctpop.i32(i32 %8806)
  %8808 = trunc i32 %8807 to i8
  %8809 = and i8 %8808, 1
  %8810 = xor i8 %8809, 1
  %8811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8810, i8* %8811, align 1
  %8812 = xor i32 %8801, 26
  %8813 = xor i32 %8812, %8802
  %8814 = lshr i32 %8813, 4
  %8815 = trunc i32 %8814 to i8
  %8816 = and i8 %8815, 1
  %8817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8816, i8* %8817, align 1
  %8818 = icmp eq i32 %8802, 0
  %8819 = zext i1 %8818 to i8
  %8820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8819, i8* %8820, align 1
  %8821 = lshr i32 %8802, 31
  %8822 = trunc i32 %8821 to i8
  %8823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8822, i8* %8823, align 1
  %8824 = lshr i32 %8801, 31
  %8825 = xor i32 %8821, %8824
  %8826 = add i32 %8825, %8824
  %8827 = icmp eq i32 %8826, 2
  %8828 = zext i1 %8827 to i8
  %8829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8828, i8* %8829, align 1
  store %struct.Memory* %loadMem_47d939, %struct.Memory** %MEMORY
  %loadMem_47d93c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8831 = getelementptr inbounds %struct.GPR, %struct.GPR* %8830, i32 0, i32 33
  %8832 = getelementptr inbounds %struct.Reg, %struct.Reg* %8831, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %8832 to i64*
  %8833 = load i64, i64* %PC.i284
  %8834 = add i64 %8833, 156
  %8835 = load i64, i64* %PC.i284
  %8836 = add i64 %8835, 6
  %8837 = load i64, i64* %PC.i284
  %8838 = add i64 %8837, 6
  store i64 %8838, i64* %PC.i284
  %8839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8840 = load i8, i8* %8839, align 1
  store i8 %8840, i8* %BRANCH_TAKEN, align 1
  %8841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8842 = icmp ne i8 %8840, 0
  %8843 = select i1 %8842, i64 %8834, i64 %8836
  store i64 %8843, i64* %8841, align 8
  store %struct.Memory* %loadMem_47d93c, %struct.Memory** %MEMORY
  %loadBr_47d93c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d93c = icmp eq i8 %loadBr_47d93c, 1
  br i1 %cmpBr_47d93c, label %block_.L_47d9d8, label %block_47d942

block_47d942:                                     ; preds = %block_.L_47d924
  %loadMem_47d942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8845 = getelementptr inbounds %struct.GPR, %struct.GPR* %8844, i32 0, i32 33
  %8846 = getelementptr inbounds %struct.Reg, %struct.Reg* %8845, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %8846 to i64*
  %8847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8848 = getelementptr inbounds %struct.GPR, %struct.GPR* %8847, i32 0, i32 1
  %8849 = getelementptr inbounds %struct.Reg, %struct.Reg* %8848, i32 0, i32 0
  %RAX.i283 = bitcast %union.anon* %8849 to i64*
  %8850 = load i64, i64* %PC.i282
  %8851 = add i64 %8850, 10
  store i64 %8851, i64* %PC.i282
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i283, align 8
  store %struct.Memory* %loadMem_47d942, %struct.Memory** %MEMORY
  %loadMem_47d94c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8853 = getelementptr inbounds %struct.GPR, %struct.GPR* %8852, i32 0, i32 33
  %8854 = getelementptr inbounds %struct.Reg, %struct.Reg* %8853, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %8854 to i64*
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8856 = getelementptr inbounds %struct.GPR, %struct.GPR* %8855, i32 0, i32 5
  %8857 = getelementptr inbounds %struct.Reg, %struct.Reg* %8856, i32 0, i32 0
  %RCX.i280 = bitcast %union.anon* %8857 to i64*
  %8858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8859 = getelementptr inbounds %struct.GPR, %struct.GPR* %8858, i32 0, i32 15
  %8860 = getelementptr inbounds %struct.Reg, %struct.Reg* %8859, i32 0, i32 0
  %RBP.i281 = bitcast %union.anon* %8860 to i64*
  %8861 = load i64, i64* %RBP.i281
  %8862 = sub i64 %8861, 80
  %8863 = load i64, i64* %PC.i279
  %8864 = add i64 %8863, 4
  store i64 %8864, i64* %PC.i279
  %8865 = inttoptr i64 %8862 to i32*
  %8866 = load i32, i32* %8865
  %8867 = sext i32 %8866 to i64
  store i64 %8867, i64* %RCX.i280, align 8
  store %struct.Memory* %loadMem_47d94c, %struct.Memory** %MEMORY
  %loadMem_47d950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8869 = getelementptr inbounds %struct.GPR, %struct.GPR* %8868, i32 0, i32 33
  %8870 = getelementptr inbounds %struct.Reg, %struct.Reg* %8869, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %8870 to i64*
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8872 = getelementptr inbounds %struct.GPR, %struct.GPR* %8871, i32 0, i32 5
  %8873 = getelementptr inbounds %struct.Reg, %struct.Reg* %8872, i32 0, i32 0
  %RCX.i278 = bitcast %union.anon* %8873 to i64*
  %8874 = load i64, i64* %RCX.i278
  %8875 = load i64, i64* %PC.i277
  %8876 = add i64 %8875, 4
  store i64 %8876, i64* %PC.i277
  %8877 = sext i64 %8874 to i128
  %8878 = and i128 %8877, -18446744073709551616
  %8879 = zext i64 %8874 to i128
  %8880 = or i128 %8878, %8879
  %8881 = mul i128 12, %8880
  %8882 = trunc i128 %8881 to i64
  store i64 %8882, i64* %RCX.i278, align 8
  %8883 = sext i64 %8882 to i128
  %8884 = icmp ne i128 %8883, %8881
  %8885 = zext i1 %8884 to i8
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8885, i8* %8886, align 1
  %8887 = trunc i128 %8881 to i32
  %8888 = and i32 %8887, 255
  %8889 = call i32 @llvm.ctpop.i32(i32 %8888)
  %8890 = trunc i32 %8889 to i8
  %8891 = and i8 %8890, 1
  %8892 = xor i8 %8891, 1
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8892, i8* %8893, align 1
  %8894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8894, align 1
  %8895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8895, align 1
  %8896 = lshr i64 %8882, 63
  %8897 = trunc i64 %8896 to i8
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8897, i8* %8898, align 1
  %8899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8885, i8* %8899, align 1
  store %struct.Memory* %loadMem_47d950, %struct.Memory** %MEMORY
  %loadMem_47d954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8901 = getelementptr inbounds %struct.GPR, %struct.GPR* %8900, i32 0, i32 33
  %8902 = getelementptr inbounds %struct.Reg, %struct.Reg* %8901, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %8902 to i64*
  %8903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8904 = getelementptr inbounds %struct.GPR, %struct.GPR* %8903, i32 0, i32 1
  %8905 = getelementptr inbounds %struct.Reg, %struct.Reg* %8904, i32 0, i32 0
  %RAX.i275 = bitcast %union.anon* %8905 to i64*
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8907 = getelementptr inbounds %struct.GPR, %struct.GPR* %8906, i32 0, i32 5
  %8908 = getelementptr inbounds %struct.Reg, %struct.Reg* %8907, i32 0, i32 0
  %RCX.i276 = bitcast %union.anon* %8908 to i64*
  %8909 = load i64, i64* %RAX.i275
  %8910 = load i64, i64* %RCX.i276
  %8911 = load i64, i64* %PC.i274
  %8912 = add i64 %8911, 3
  store i64 %8912, i64* %PC.i274
  %8913 = add i64 %8910, %8909
  store i64 %8913, i64* %RAX.i275, align 8
  %8914 = icmp ult i64 %8913, %8909
  %8915 = icmp ult i64 %8913, %8910
  %8916 = or i1 %8914, %8915
  %8917 = zext i1 %8916 to i8
  %8918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8917, i8* %8918, align 1
  %8919 = trunc i64 %8913 to i32
  %8920 = and i32 %8919, 255
  %8921 = call i32 @llvm.ctpop.i32(i32 %8920)
  %8922 = trunc i32 %8921 to i8
  %8923 = and i8 %8922, 1
  %8924 = xor i8 %8923, 1
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8924, i8* %8925, align 1
  %8926 = xor i64 %8910, %8909
  %8927 = xor i64 %8926, %8913
  %8928 = lshr i64 %8927, 4
  %8929 = trunc i64 %8928 to i8
  %8930 = and i8 %8929, 1
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8930, i8* %8931, align 1
  %8932 = icmp eq i64 %8913, 0
  %8933 = zext i1 %8932 to i8
  %8934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8933, i8* %8934, align 1
  %8935 = lshr i64 %8913, 63
  %8936 = trunc i64 %8935 to i8
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8936, i8* %8937, align 1
  %8938 = lshr i64 %8909, 63
  %8939 = lshr i64 %8910, 63
  %8940 = xor i64 %8935, %8938
  %8941 = xor i64 %8935, %8939
  %8942 = add i64 %8940, %8941
  %8943 = icmp eq i64 %8942, 2
  %8944 = zext i1 %8943 to i8
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8944, i8* %8945, align 1
  store %struct.Memory* %loadMem_47d954, %struct.Memory** %MEMORY
  %loadMem_47d957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8947 = getelementptr inbounds %struct.GPR, %struct.GPR* %8946, i32 0, i32 33
  %8948 = getelementptr inbounds %struct.Reg, %struct.Reg* %8947, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %8948 to i64*
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8950 = getelementptr inbounds %struct.GPR, %struct.GPR* %8949, i32 0, i32 1
  %8951 = getelementptr inbounds %struct.Reg, %struct.Reg* %8950, i32 0, i32 0
  %RAX.i273 = bitcast %union.anon* %8951 to i64*
  %8952 = load i64, i64* %RAX.i273
  %8953 = load i64, i64* %PC.i272
  %8954 = add i64 %8953, 3
  store i64 %8954, i64* %PC.i272
  %8955 = inttoptr i64 %8952 to i32*
  %8956 = load i32, i32* %8955
  %8957 = sub i32 %8956, 28
  %8958 = icmp ult i32 %8956, 28
  %8959 = zext i1 %8958 to i8
  %8960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8959, i8* %8960, align 1
  %8961 = and i32 %8957, 255
  %8962 = call i32 @llvm.ctpop.i32(i32 %8961)
  %8963 = trunc i32 %8962 to i8
  %8964 = and i8 %8963, 1
  %8965 = xor i8 %8964, 1
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8965, i8* %8966, align 1
  %8967 = xor i32 %8956, 28
  %8968 = xor i32 %8967, %8957
  %8969 = lshr i32 %8968, 4
  %8970 = trunc i32 %8969 to i8
  %8971 = and i8 %8970, 1
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8971, i8* %8972, align 1
  %8973 = icmp eq i32 %8957, 0
  %8974 = zext i1 %8973 to i8
  %8975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8974, i8* %8975, align 1
  %8976 = lshr i32 %8957, 31
  %8977 = trunc i32 %8976 to i8
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8977, i8* %8978, align 1
  %8979 = lshr i32 %8956, 31
  %8980 = xor i32 %8976, %8979
  %8981 = add i32 %8980, %8979
  %8982 = icmp eq i32 %8981, 2
  %8983 = zext i1 %8982 to i8
  %8984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8983, i8* %8984, align 1
  store %struct.Memory* %loadMem_47d957, %struct.Memory** %MEMORY
  %loadMem_47d95a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8986 = getelementptr inbounds %struct.GPR, %struct.GPR* %8985, i32 0, i32 33
  %8987 = getelementptr inbounds %struct.Reg, %struct.Reg* %8986, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %8987 to i64*
  %8988 = load i64, i64* %PC.i271
  %8989 = add i64 %8988, 126
  %8990 = load i64, i64* %PC.i271
  %8991 = add i64 %8990, 6
  %8992 = load i64, i64* %PC.i271
  %8993 = add i64 %8992, 6
  store i64 %8993, i64* %PC.i271
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8995 = load i8, i8* %8994, align 1
  store i8 %8995, i8* %BRANCH_TAKEN, align 1
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8997 = icmp ne i8 %8995, 0
  %8998 = select i1 %8997, i64 %8989, i64 %8991
  store i64 %8998, i64* %8996, align 8
  store %struct.Memory* %loadMem_47d95a, %struct.Memory** %MEMORY
  %loadBr_47d95a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d95a = icmp eq i8 %loadBr_47d95a, 1
  br i1 %cmpBr_47d95a, label %block_.L_47d9d8, label %block_47d960

block_47d960:                                     ; preds = %block_47d942
  %loadMem_47d960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9000 = getelementptr inbounds %struct.GPR, %struct.GPR* %8999, i32 0, i32 33
  %9001 = getelementptr inbounds %struct.Reg, %struct.Reg* %9000, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %9001 to i64*
  %9002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9003 = getelementptr inbounds %struct.GPR, %struct.GPR* %9002, i32 0, i32 1
  %9004 = getelementptr inbounds %struct.Reg, %struct.Reg* %9003, i32 0, i32 0
  %RAX.i270 = bitcast %union.anon* %9004 to i64*
  %9005 = load i64, i64* %PC.i269
  %9006 = add i64 %9005, 10
  store i64 %9006, i64* %PC.i269
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i270, align 8
  store %struct.Memory* %loadMem_47d960, %struct.Memory** %MEMORY
  %loadMem_47d96a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9008 = getelementptr inbounds %struct.GPR, %struct.GPR* %9007, i32 0, i32 33
  %9009 = getelementptr inbounds %struct.Reg, %struct.Reg* %9008, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %9009 to i64*
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9011 = getelementptr inbounds %struct.GPR, %struct.GPR* %9010, i32 0, i32 5
  %9012 = getelementptr inbounds %struct.Reg, %struct.Reg* %9011, i32 0, i32 0
  %RCX.i267 = bitcast %union.anon* %9012 to i64*
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9014 = getelementptr inbounds %struct.GPR, %struct.GPR* %9013, i32 0, i32 15
  %9015 = getelementptr inbounds %struct.Reg, %struct.Reg* %9014, i32 0, i32 0
  %RBP.i268 = bitcast %union.anon* %9015 to i64*
  %9016 = load i64, i64* %RBP.i268
  %9017 = sub i64 %9016, 80
  %9018 = load i64, i64* %PC.i266
  %9019 = add i64 %9018, 4
  store i64 %9019, i64* %PC.i266
  %9020 = inttoptr i64 %9017 to i32*
  %9021 = load i32, i32* %9020
  %9022 = sext i32 %9021 to i64
  store i64 %9022, i64* %RCX.i267, align 8
  store %struct.Memory* %loadMem_47d96a, %struct.Memory** %MEMORY
  %loadMem_47d96e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9024 = getelementptr inbounds %struct.GPR, %struct.GPR* %9023, i32 0, i32 33
  %9025 = getelementptr inbounds %struct.Reg, %struct.Reg* %9024, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %9025 to i64*
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 5
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %RCX.i265 = bitcast %union.anon* %9028 to i64*
  %9029 = load i64, i64* %RCX.i265
  %9030 = load i64, i64* %PC.i264
  %9031 = add i64 %9030, 4
  store i64 %9031, i64* %PC.i264
  %9032 = sext i64 %9029 to i128
  %9033 = and i128 %9032, -18446744073709551616
  %9034 = zext i64 %9029 to i128
  %9035 = or i128 %9033, %9034
  %9036 = mul i128 12, %9035
  %9037 = trunc i128 %9036 to i64
  store i64 %9037, i64* %RCX.i265, align 8
  %9038 = sext i64 %9037 to i128
  %9039 = icmp ne i128 %9038, %9036
  %9040 = zext i1 %9039 to i8
  %9041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9040, i8* %9041, align 1
  %9042 = trunc i128 %9036 to i32
  %9043 = and i32 %9042, 255
  %9044 = call i32 @llvm.ctpop.i32(i32 %9043)
  %9045 = trunc i32 %9044 to i8
  %9046 = and i8 %9045, 1
  %9047 = xor i8 %9046, 1
  %9048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9047, i8* %9048, align 1
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9049, align 1
  %9050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9050, align 1
  %9051 = lshr i64 %9037, 63
  %9052 = trunc i64 %9051 to i8
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9052, i8* %9053, align 1
  %9054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9040, i8* %9054, align 1
  store %struct.Memory* %loadMem_47d96e, %struct.Memory** %MEMORY
  %loadMem_47d972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9056 = getelementptr inbounds %struct.GPR, %struct.GPR* %9055, i32 0, i32 33
  %9057 = getelementptr inbounds %struct.Reg, %struct.Reg* %9056, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %9057 to i64*
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9059 = getelementptr inbounds %struct.GPR, %struct.GPR* %9058, i32 0, i32 1
  %9060 = getelementptr inbounds %struct.Reg, %struct.Reg* %9059, i32 0, i32 0
  %RAX.i262 = bitcast %union.anon* %9060 to i64*
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9062 = getelementptr inbounds %struct.GPR, %struct.GPR* %9061, i32 0, i32 5
  %9063 = getelementptr inbounds %struct.Reg, %struct.Reg* %9062, i32 0, i32 0
  %RCX.i263 = bitcast %union.anon* %9063 to i64*
  %9064 = load i64, i64* %RAX.i262
  %9065 = load i64, i64* %RCX.i263
  %9066 = load i64, i64* %PC.i261
  %9067 = add i64 %9066, 3
  store i64 %9067, i64* %PC.i261
  %9068 = add i64 %9065, %9064
  store i64 %9068, i64* %RAX.i262, align 8
  %9069 = icmp ult i64 %9068, %9064
  %9070 = icmp ult i64 %9068, %9065
  %9071 = or i1 %9069, %9070
  %9072 = zext i1 %9071 to i8
  %9073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9072, i8* %9073, align 1
  %9074 = trunc i64 %9068 to i32
  %9075 = and i32 %9074, 255
  %9076 = call i32 @llvm.ctpop.i32(i32 %9075)
  %9077 = trunc i32 %9076 to i8
  %9078 = and i8 %9077, 1
  %9079 = xor i8 %9078, 1
  %9080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9079, i8* %9080, align 1
  %9081 = xor i64 %9065, %9064
  %9082 = xor i64 %9081, %9068
  %9083 = lshr i64 %9082, 4
  %9084 = trunc i64 %9083 to i8
  %9085 = and i8 %9084, 1
  %9086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9085, i8* %9086, align 1
  %9087 = icmp eq i64 %9068, 0
  %9088 = zext i1 %9087 to i8
  %9089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9088, i8* %9089, align 1
  %9090 = lshr i64 %9068, 63
  %9091 = trunc i64 %9090 to i8
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9091, i8* %9092, align 1
  %9093 = lshr i64 %9064, 63
  %9094 = lshr i64 %9065, 63
  %9095 = xor i64 %9090, %9093
  %9096 = xor i64 %9090, %9094
  %9097 = add i64 %9095, %9096
  %9098 = icmp eq i64 %9097, 2
  %9099 = zext i1 %9098 to i8
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9099, i8* %9100, align 1
  store %struct.Memory* %loadMem_47d972, %struct.Memory** %MEMORY
  %loadMem_47d975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9102 = getelementptr inbounds %struct.GPR, %struct.GPR* %9101, i32 0, i32 33
  %9103 = getelementptr inbounds %struct.Reg, %struct.Reg* %9102, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %9103 to i64*
  %9104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9105 = getelementptr inbounds %struct.GPR, %struct.GPR* %9104, i32 0, i32 1
  %9106 = getelementptr inbounds %struct.Reg, %struct.Reg* %9105, i32 0, i32 0
  %RAX.i260 = bitcast %union.anon* %9106 to i64*
  %9107 = load i64, i64* %RAX.i260
  %9108 = load i64, i64* %PC.i259
  %9109 = add i64 %9108, 3
  store i64 %9109, i64* %PC.i259
  %9110 = inttoptr i64 %9107 to i32*
  %9111 = load i32, i32* %9110
  %9112 = sub i32 %9111, 30
  %9113 = icmp ult i32 %9111, 30
  %9114 = zext i1 %9113 to i8
  %9115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9114, i8* %9115, align 1
  %9116 = and i32 %9112, 255
  %9117 = call i32 @llvm.ctpop.i32(i32 %9116)
  %9118 = trunc i32 %9117 to i8
  %9119 = and i8 %9118, 1
  %9120 = xor i8 %9119, 1
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9120, i8* %9121, align 1
  %9122 = xor i32 %9111, 30
  %9123 = xor i32 %9122, %9112
  %9124 = lshr i32 %9123, 4
  %9125 = trunc i32 %9124 to i8
  %9126 = and i8 %9125, 1
  %9127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9126, i8* %9127, align 1
  %9128 = icmp eq i32 %9112, 0
  %9129 = zext i1 %9128 to i8
  %9130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9129, i8* %9130, align 1
  %9131 = lshr i32 %9112, 31
  %9132 = trunc i32 %9131 to i8
  %9133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9132, i8* %9133, align 1
  %9134 = lshr i32 %9111, 31
  %9135 = xor i32 %9131, %9134
  %9136 = add i32 %9135, %9134
  %9137 = icmp eq i32 %9136, 2
  %9138 = zext i1 %9137 to i8
  %9139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9138, i8* %9139, align 1
  store %struct.Memory* %loadMem_47d975, %struct.Memory** %MEMORY
  %loadMem_47d978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9141 = getelementptr inbounds %struct.GPR, %struct.GPR* %9140, i32 0, i32 33
  %9142 = getelementptr inbounds %struct.Reg, %struct.Reg* %9141, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %9142 to i64*
  %9143 = load i64, i64* %PC.i258
  %9144 = add i64 %9143, 96
  %9145 = load i64, i64* %PC.i258
  %9146 = add i64 %9145, 6
  %9147 = load i64, i64* %PC.i258
  %9148 = add i64 %9147, 6
  store i64 %9148, i64* %PC.i258
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9150 = load i8, i8* %9149, align 1
  store i8 %9150, i8* %BRANCH_TAKEN, align 1
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9152 = icmp ne i8 %9150, 0
  %9153 = select i1 %9152, i64 %9144, i64 %9146
  store i64 %9153, i64* %9151, align 8
  store %struct.Memory* %loadMem_47d978, %struct.Memory** %MEMORY
  %loadBr_47d978 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d978 = icmp eq i8 %loadBr_47d978, 1
  br i1 %cmpBr_47d978, label %block_.L_47d9d8, label %block_47d97e

block_47d97e:                                     ; preds = %block_47d960
  %loadMem_47d97e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9155 = getelementptr inbounds %struct.GPR, %struct.GPR* %9154, i32 0, i32 33
  %9156 = getelementptr inbounds %struct.Reg, %struct.Reg* %9155, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %9156 to i64*
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9158 = getelementptr inbounds %struct.GPR, %struct.GPR* %9157, i32 0, i32 1
  %9159 = getelementptr inbounds %struct.Reg, %struct.Reg* %9158, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %9159 to i64*
  %9160 = load i64, i64* %PC.i256
  %9161 = add i64 %9160, 10
  store i64 %9161, i64* %PC.i256
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i257, align 8
  store %struct.Memory* %loadMem_47d97e, %struct.Memory** %MEMORY
  %loadMem_47d988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9163 = getelementptr inbounds %struct.GPR, %struct.GPR* %9162, i32 0, i32 33
  %9164 = getelementptr inbounds %struct.Reg, %struct.Reg* %9163, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %9164 to i64*
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9166 = getelementptr inbounds %struct.GPR, %struct.GPR* %9165, i32 0, i32 5
  %9167 = getelementptr inbounds %struct.Reg, %struct.Reg* %9166, i32 0, i32 0
  %RCX.i254 = bitcast %union.anon* %9167 to i64*
  %9168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9169 = getelementptr inbounds %struct.GPR, %struct.GPR* %9168, i32 0, i32 15
  %9170 = getelementptr inbounds %struct.Reg, %struct.Reg* %9169, i32 0, i32 0
  %RBP.i255 = bitcast %union.anon* %9170 to i64*
  %9171 = load i64, i64* %RBP.i255
  %9172 = sub i64 %9171, 80
  %9173 = load i64, i64* %PC.i253
  %9174 = add i64 %9173, 4
  store i64 %9174, i64* %PC.i253
  %9175 = inttoptr i64 %9172 to i32*
  %9176 = load i32, i32* %9175
  %9177 = sext i32 %9176 to i64
  store i64 %9177, i64* %RCX.i254, align 8
  store %struct.Memory* %loadMem_47d988, %struct.Memory** %MEMORY
  %loadMem_47d98c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9179 = getelementptr inbounds %struct.GPR, %struct.GPR* %9178, i32 0, i32 33
  %9180 = getelementptr inbounds %struct.Reg, %struct.Reg* %9179, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %9180 to i64*
  %9181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9182 = getelementptr inbounds %struct.GPR, %struct.GPR* %9181, i32 0, i32 5
  %9183 = getelementptr inbounds %struct.Reg, %struct.Reg* %9182, i32 0, i32 0
  %RCX.i252 = bitcast %union.anon* %9183 to i64*
  %9184 = load i64, i64* %RCX.i252
  %9185 = load i64, i64* %PC.i251
  %9186 = add i64 %9185, 4
  store i64 %9186, i64* %PC.i251
  %9187 = sext i64 %9184 to i128
  %9188 = and i128 %9187, -18446744073709551616
  %9189 = zext i64 %9184 to i128
  %9190 = or i128 %9188, %9189
  %9191 = mul i128 12, %9190
  %9192 = trunc i128 %9191 to i64
  store i64 %9192, i64* %RCX.i252, align 8
  %9193 = sext i64 %9192 to i128
  %9194 = icmp ne i128 %9193, %9191
  %9195 = zext i1 %9194 to i8
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9195, i8* %9196, align 1
  %9197 = trunc i128 %9191 to i32
  %9198 = and i32 %9197, 255
  %9199 = call i32 @llvm.ctpop.i32(i32 %9198)
  %9200 = trunc i32 %9199 to i8
  %9201 = and i8 %9200, 1
  %9202 = xor i8 %9201, 1
  %9203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9202, i8* %9203, align 1
  %9204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9204, align 1
  %9205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9205, align 1
  %9206 = lshr i64 %9192, 63
  %9207 = trunc i64 %9206 to i8
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9207, i8* %9208, align 1
  %9209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9195, i8* %9209, align 1
  store %struct.Memory* %loadMem_47d98c, %struct.Memory** %MEMORY
  %loadMem_47d990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9211 = getelementptr inbounds %struct.GPR, %struct.GPR* %9210, i32 0, i32 33
  %9212 = getelementptr inbounds %struct.Reg, %struct.Reg* %9211, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %9212 to i64*
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9214 = getelementptr inbounds %struct.GPR, %struct.GPR* %9213, i32 0, i32 1
  %9215 = getelementptr inbounds %struct.Reg, %struct.Reg* %9214, i32 0, i32 0
  %RAX.i249 = bitcast %union.anon* %9215 to i64*
  %9216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9217 = getelementptr inbounds %struct.GPR, %struct.GPR* %9216, i32 0, i32 5
  %9218 = getelementptr inbounds %struct.Reg, %struct.Reg* %9217, i32 0, i32 0
  %RCX.i250 = bitcast %union.anon* %9218 to i64*
  %9219 = load i64, i64* %RAX.i249
  %9220 = load i64, i64* %RCX.i250
  %9221 = load i64, i64* %PC.i248
  %9222 = add i64 %9221, 3
  store i64 %9222, i64* %PC.i248
  %9223 = add i64 %9220, %9219
  store i64 %9223, i64* %RAX.i249, align 8
  %9224 = icmp ult i64 %9223, %9219
  %9225 = icmp ult i64 %9223, %9220
  %9226 = or i1 %9224, %9225
  %9227 = zext i1 %9226 to i8
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9227, i8* %9228, align 1
  %9229 = trunc i64 %9223 to i32
  %9230 = and i32 %9229, 255
  %9231 = call i32 @llvm.ctpop.i32(i32 %9230)
  %9232 = trunc i32 %9231 to i8
  %9233 = and i8 %9232, 1
  %9234 = xor i8 %9233, 1
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9234, i8* %9235, align 1
  %9236 = xor i64 %9220, %9219
  %9237 = xor i64 %9236, %9223
  %9238 = lshr i64 %9237, 4
  %9239 = trunc i64 %9238 to i8
  %9240 = and i8 %9239, 1
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9240, i8* %9241, align 1
  %9242 = icmp eq i64 %9223, 0
  %9243 = zext i1 %9242 to i8
  %9244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9243, i8* %9244, align 1
  %9245 = lshr i64 %9223, 63
  %9246 = trunc i64 %9245 to i8
  %9247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9246, i8* %9247, align 1
  %9248 = lshr i64 %9219, 63
  %9249 = lshr i64 %9220, 63
  %9250 = xor i64 %9245, %9248
  %9251 = xor i64 %9245, %9249
  %9252 = add i64 %9250, %9251
  %9253 = icmp eq i64 %9252, 2
  %9254 = zext i1 %9253 to i8
  %9255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9254, i8* %9255, align 1
  store %struct.Memory* %loadMem_47d990, %struct.Memory** %MEMORY
  %loadMem_47d993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9257 = getelementptr inbounds %struct.GPR, %struct.GPR* %9256, i32 0, i32 33
  %9258 = getelementptr inbounds %struct.Reg, %struct.Reg* %9257, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %9258 to i64*
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9260 = getelementptr inbounds %struct.GPR, %struct.GPR* %9259, i32 0, i32 1
  %9261 = getelementptr inbounds %struct.Reg, %struct.Reg* %9260, i32 0, i32 0
  %RAX.i247 = bitcast %union.anon* %9261 to i64*
  %9262 = load i64, i64* %RAX.i247
  %9263 = load i64, i64* %PC.i246
  %9264 = add i64 %9263, 3
  store i64 %9264, i64* %PC.i246
  %9265 = inttoptr i64 %9262 to i32*
  %9266 = load i32, i32* %9265
  %9267 = sub i32 %9266, 32
  %9268 = icmp ult i32 %9266, 32
  %9269 = zext i1 %9268 to i8
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9269, i8* %9270, align 1
  %9271 = and i32 %9267, 255
  %9272 = call i32 @llvm.ctpop.i32(i32 %9271)
  %9273 = trunc i32 %9272 to i8
  %9274 = and i8 %9273, 1
  %9275 = xor i8 %9274, 1
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9275, i8* %9276, align 1
  %9277 = xor i32 %9266, 32
  %9278 = xor i32 %9277, %9267
  %9279 = lshr i32 %9278, 4
  %9280 = trunc i32 %9279 to i8
  %9281 = and i8 %9280, 1
  %9282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9281, i8* %9282, align 1
  %9283 = icmp eq i32 %9267, 0
  %9284 = zext i1 %9283 to i8
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9284, i8* %9285, align 1
  %9286 = lshr i32 %9267, 31
  %9287 = trunc i32 %9286 to i8
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9287, i8* %9288, align 1
  %9289 = lshr i32 %9266, 31
  %9290 = xor i32 %9286, %9289
  %9291 = add i32 %9290, %9289
  %9292 = icmp eq i32 %9291, 2
  %9293 = zext i1 %9292 to i8
  %9294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9293, i8* %9294, align 1
  store %struct.Memory* %loadMem_47d993, %struct.Memory** %MEMORY
  %loadMem_47d996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9296 = getelementptr inbounds %struct.GPR, %struct.GPR* %9295, i32 0, i32 33
  %9297 = getelementptr inbounds %struct.Reg, %struct.Reg* %9296, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %9297 to i64*
  %9298 = load i64, i64* %PC.i245
  %9299 = add i64 %9298, 66
  %9300 = load i64, i64* %PC.i245
  %9301 = add i64 %9300, 6
  %9302 = load i64, i64* %PC.i245
  %9303 = add i64 %9302, 6
  store i64 %9303, i64* %PC.i245
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9305 = load i8, i8* %9304, align 1
  store i8 %9305, i8* %BRANCH_TAKEN, align 1
  %9306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9307 = icmp ne i8 %9305, 0
  %9308 = select i1 %9307, i64 %9299, i64 %9301
  store i64 %9308, i64* %9306, align 8
  store %struct.Memory* %loadMem_47d996, %struct.Memory** %MEMORY
  %loadBr_47d996 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d996 = icmp eq i8 %loadBr_47d996, 1
  br i1 %cmpBr_47d996, label %block_.L_47d9d8, label %block_47d99c

block_47d99c:                                     ; preds = %block_47d97e
  %loadMem_47d99c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9310 = getelementptr inbounds %struct.GPR, %struct.GPR* %9309, i32 0, i32 33
  %9311 = getelementptr inbounds %struct.Reg, %struct.Reg* %9310, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %9311 to i64*
  %9312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9313 = getelementptr inbounds %struct.GPR, %struct.GPR* %9312, i32 0, i32 1
  %9314 = getelementptr inbounds %struct.Reg, %struct.Reg* %9313, i32 0, i32 0
  %RAX.i244 = bitcast %union.anon* %9314 to i64*
  %9315 = load i64, i64* %PC.i243
  %9316 = add i64 %9315, 10
  store i64 %9316, i64* %PC.i243
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i244, align 8
  store %struct.Memory* %loadMem_47d99c, %struct.Memory** %MEMORY
  %loadMem_47d9a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9318 = getelementptr inbounds %struct.GPR, %struct.GPR* %9317, i32 0, i32 33
  %9319 = getelementptr inbounds %struct.Reg, %struct.Reg* %9318, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %9319 to i64*
  %9320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9321 = getelementptr inbounds %struct.GPR, %struct.GPR* %9320, i32 0, i32 5
  %9322 = getelementptr inbounds %struct.Reg, %struct.Reg* %9321, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %9322 to i64*
  %9323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9324 = getelementptr inbounds %struct.GPR, %struct.GPR* %9323, i32 0, i32 15
  %9325 = getelementptr inbounds %struct.Reg, %struct.Reg* %9324, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %9325 to i64*
  %9326 = load i64, i64* %RBP.i242
  %9327 = sub i64 %9326, 80
  %9328 = load i64, i64* %PC.i240
  %9329 = add i64 %9328, 4
  store i64 %9329, i64* %PC.i240
  %9330 = inttoptr i64 %9327 to i32*
  %9331 = load i32, i32* %9330
  %9332 = sext i32 %9331 to i64
  store i64 %9332, i64* %RCX.i241, align 8
  store %struct.Memory* %loadMem_47d9a6, %struct.Memory** %MEMORY
  %loadMem_47d9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9334 = getelementptr inbounds %struct.GPR, %struct.GPR* %9333, i32 0, i32 33
  %9335 = getelementptr inbounds %struct.Reg, %struct.Reg* %9334, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %9335 to i64*
  %9336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9337 = getelementptr inbounds %struct.GPR, %struct.GPR* %9336, i32 0, i32 5
  %9338 = getelementptr inbounds %struct.Reg, %struct.Reg* %9337, i32 0, i32 0
  %RCX.i239 = bitcast %union.anon* %9338 to i64*
  %9339 = load i64, i64* %RCX.i239
  %9340 = load i64, i64* %PC.i238
  %9341 = add i64 %9340, 4
  store i64 %9341, i64* %PC.i238
  %9342 = sext i64 %9339 to i128
  %9343 = and i128 %9342, -18446744073709551616
  %9344 = zext i64 %9339 to i128
  %9345 = or i128 %9343, %9344
  %9346 = mul i128 12, %9345
  %9347 = trunc i128 %9346 to i64
  store i64 %9347, i64* %RCX.i239, align 8
  %9348 = sext i64 %9347 to i128
  %9349 = icmp ne i128 %9348, %9346
  %9350 = zext i1 %9349 to i8
  %9351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9350, i8* %9351, align 1
  %9352 = trunc i128 %9346 to i32
  %9353 = and i32 %9352, 255
  %9354 = call i32 @llvm.ctpop.i32(i32 %9353)
  %9355 = trunc i32 %9354 to i8
  %9356 = and i8 %9355, 1
  %9357 = xor i8 %9356, 1
  %9358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9357, i8* %9358, align 1
  %9359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9359, align 1
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9360, align 1
  %9361 = lshr i64 %9347, 63
  %9362 = trunc i64 %9361 to i8
  %9363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9362, i8* %9363, align 1
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9350, i8* %9364, align 1
  store %struct.Memory* %loadMem_47d9aa, %struct.Memory** %MEMORY
  %loadMem_47d9ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %9365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9366 = getelementptr inbounds %struct.GPR, %struct.GPR* %9365, i32 0, i32 33
  %9367 = getelementptr inbounds %struct.Reg, %struct.Reg* %9366, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %9367 to i64*
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9369 = getelementptr inbounds %struct.GPR, %struct.GPR* %9368, i32 0, i32 1
  %9370 = getelementptr inbounds %struct.Reg, %struct.Reg* %9369, i32 0, i32 0
  %RAX.i236 = bitcast %union.anon* %9370 to i64*
  %9371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9372 = getelementptr inbounds %struct.GPR, %struct.GPR* %9371, i32 0, i32 5
  %9373 = getelementptr inbounds %struct.Reg, %struct.Reg* %9372, i32 0, i32 0
  %RCX.i237 = bitcast %union.anon* %9373 to i64*
  %9374 = load i64, i64* %RAX.i236
  %9375 = load i64, i64* %RCX.i237
  %9376 = load i64, i64* %PC.i235
  %9377 = add i64 %9376, 3
  store i64 %9377, i64* %PC.i235
  %9378 = add i64 %9375, %9374
  store i64 %9378, i64* %RAX.i236, align 8
  %9379 = icmp ult i64 %9378, %9374
  %9380 = icmp ult i64 %9378, %9375
  %9381 = or i1 %9379, %9380
  %9382 = zext i1 %9381 to i8
  %9383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9382, i8* %9383, align 1
  %9384 = trunc i64 %9378 to i32
  %9385 = and i32 %9384, 255
  %9386 = call i32 @llvm.ctpop.i32(i32 %9385)
  %9387 = trunc i32 %9386 to i8
  %9388 = and i8 %9387, 1
  %9389 = xor i8 %9388, 1
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9389, i8* %9390, align 1
  %9391 = xor i64 %9375, %9374
  %9392 = xor i64 %9391, %9378
  %9393 = lshr i64 %9392, 4
  %9394 = trunc i64 %9393 to i8
  %9395 = and i8 %9394, 1
  %9396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9395, i8* %9396, align 1
  %9397 = icmp eq i64 %9378, 0
  %9398 = zext i1 %9397 to i8
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9398, i8* %9399, align 1
  %9400 = lshr i64 %9378, 63
  %9401 = trunc i64 %9400 to i8
  %9402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9401, i8* %9402, align 1
  %9403 = lshr i64 %9374, 63
  %9404 = lshr i64 %9375, 63
  %9405 = xor i64 %9400, %9403
  %9406 = xor i64 %9400, %9404
  %9407 = add i64 %9405, %9406
  %9408 = icmp eq i64 %9407, 2
  %9409 = zext i1 %9408 to i8
  %9410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9409, i8* %9410, align 1
  store %struct.Memory* %loadMem_47d9ae, %struct.Memory** %MEMORY
  %loadMem_47d9b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9412 = getelementptr inbounds %struct.GPR, %struct.GPR* %9411, i32 0, i32 33
  %9413 = getelementptr inbounds %struct.Reg, %struct.Reg* %9412, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %9413 to i64*
  %9414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9415 = getelementptr inbounds %struct.GPR, %struct.GPR* %9414, i32 0, i32 1
  %9416 = getelementptr inbounds %struct.Reg, %struct.Reg* %9415, i32 0, i32 0
  %RAX.i234 = bitcast %union.anon* %9416 to i64*
  %9417 = load i64, i64* %RAX.i234
  %9418 = load i64, i64* %PC.i233
  %9419 = add i64 %9418, 3
  store i64 %9419, i64* %PC.i233
  %9420 = inttoptr i64 %9417 to i32*
  %9421 = load i32, i32* %9420
  %9422 = sub i32 %9421, 34
  %9423 = icmp ult i32 %9421, 34
  %9424 = zext i1 %9423 to i8
  %9425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9424, i8* %9425, align 1
  %9426 = and i32 %9422, 255
  %9427 = call i32 @llvm.ctpop.i32(i32 %9426)
  %9428 = trunc i32 %9427 to i8
  %9429 = and i8 %9428, 1
  %9430 = xor i8 %9429, 1
  %9431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9430, i8* %9431, align 1
  %9432 = xor i32 %9421, 34
  %9433 = xor i32 %9432, %9422
  %9434 = lshr i32 %9433, 4
  %9435 = trunc i32 %9434 to i8
  %9436 = and i8 %9435, 1
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9436, i8* %9437, align 1
  %9438 = icmp eq i32 %9422, 0
  %9439 = zext i1 %9438 to i8
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9439, i8* %9440, align 1
  %9441 = lshr i32 %9422, 31
  %9442 = trunc i32 %9441 to i8
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9442, i8* %9443, align 1
  %9444 = lshr i32 %9421, 31
  %9445 = xor i32 %9441, %9444
  %9446 = add i32 %9445, %9444
  %9447 = icmp eq i32 %9446, 2
  %9448 = zext i1 %9447 to i8
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9448, i8* %9449, align 1
  store %struct.Memory* %loadMem_47d9b1, %struct.Memory** %MEMORY
  %loadMem_47d9b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9451 = getelementptr inbounds %struct.GPR, %struct.GPR* %9450, i32 0, i32 33
  %9452 = getelementptr inbounds %struct.Reg, %struct.Reg* %9451, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %9452 to i64*
  %9453 = load i64, i64* %PC.i232
  %9454 = add i64 %9453, 36
  %9455 = load i64, i64* %PC.i232
  %9456 = add i64 %9455, 6
  %9457 = load i64, i64* %PC.i232
  %9458 = add i64 %9457, 6
  store i64 %9458, i64* %PC.i232
  %9459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9460 = load i8, i8* %9459, align 1
  store i8 %9460, i8* %BRANCH_TAKEN, align 1
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9462 = icmp ne i8 %9460, 0
  %9463 = select i1 %9462, i64 %9454, i64 %9456
  store i64 %9463, i64* %9461, align 8
  store %struct.Memory* %loadMem_47d9b4, %struct.Memory** %MEMORY
  %loadBr_47d9b4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d9b4 = icmp eq i8 %loadBr_47d9b4, 1
  br i1 %cmpBr_47d9b4, label %block_.L_47d9d8, label %block_47d9ba

block_47d9ba:                                     ; preds = %block_47d99c
  %loadMem_47d9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9465 = getelementptr inbounds %struct.GPR, %struct.GPR* %9464, i32 0, i32 33
  %9466 = getelementptr inbounds %struct.Reg, %struct.Reg* %9465, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %9466 to i64*
  %9467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9468 = getelementptr inbounds %struct.GPR, %struct.GPR* %9467, i32 0, i32 1
  %9469 = getelementptr inbounds %struct.Reg, %struct.Reg* %9468, i32 0, i32 0
  %RAX.i231 = bitcast %union.anon* %9469 to i64*
  %9470 = load i64, i64* %PC.i230
  %9471 = add i64 %9470, 10
  store i64 %9471, i64* %PC.i230
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i231, align 8
  store %struct.Memory* %loadMem_47d9ba, %struct.Memory** %MEMORY
  %loadMem_47d9c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9473 = getelementptr inbounds %struct.GPR, %struct.GPR* %9472, i32 0, i32 33
  %9474 = getelementptr inbounds %struct.Reg, %struct.Reg* %9473, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %9474 to i64*
  %9475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9476 = getelementptr inbounds %struct.GPR, %struct.GPR* %9475, i32 0, i32 5
  %9477 = getelementptr inbounds %struct.Reg, %struct.Reg* %9476, i32 0, i32 0
  %RCX.i228 = bitcast %union.anon* %9477 to i64*
  %9478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9479 = getelementptr inbounds %struct.GPR, %struct.GPR* %9478, i32 0, i32 15
  %9480 = getelementptr inbounds %struct.Reg, %struct.Reg* %9479, i32 0, i32 0
  %RBP.i229 = bitcast %union.anon* %9480 to i64*
  %9481 = load i64, i64* %RBP.i229
  %9482 = sub i64 %9481, 80
  %9483 = load i64, i64* %PC.i227
  %9484 = add i64 %9483, 4
  store i64 %9484, i64* %PC.i227
  %9485 = inttoptr i64 %9482 to i32*
  %9486 = load i32, i32* %9485
  %9487 = sext i32 %9486 to i64
  store i64 %9487, i64* %RCX.i228, align 8
  store %struct.Memory* %loadMem_47d9c4, %struct.Memory** %MEMORY
  %loadMem_47d9c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9489 = getelementptr inbounds %struct.GPR, %struct.GPR* %9488, i32 0, i32 33
  %9490 = getelementptr inbounds %struct.Reg, %struct.Reg* %9489, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %9490 to i64*
  %9491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9492 = getelementptr inbounds %struct.GPR, %struct.GPR* %9491, i32 0, i32 5
  %9493 = getelementptr inbounds %struct.Reg, %struct.Reg* %9492, i32 0, i32 0
  %RCX.i226 = bitcast %union.anon* %9493 to i64*
  %9494 = load i64, i64* %RCX.i226
  %9495 = load i64, i64* %PC.i225
  %9496 = add i64 %9495, 4
  store i64 %9496, i64* %PC.i225
  %9497 = sext i64 %9494 to i128
  %9498 = and i128 %9497, -18446744073709551616
  %9499 = zext i64 %9494 to i128
  %9500 = or i128 %9498, %9499
  %9501 = mul i128 12, %9500
  %9502 = trunc i128 %9501 to i64
  store i64 %9502, i64* %RCX.i226, align 8
  %9503 = sext i64 %9502 to i128
  %9504 = icmp ne i128 %9503, %9501
  %9505 = zext i1 %9504 to i8
  %9506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9505, i8* %9506, align 1
  %9507 = trunc i128 %9501 to i32
  %9508 = and i32 %9507, 255
  %9509 = call i32 @llvm.ctpop.i32(i32 %9508)
  %9510 = trunc i32 %9509 to i8
  %9511 = and i8 %9510, 1
  %9512 = xor i8 %9511, 1
  %9513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9512, i8* %9513, align 1
  %9514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9514, align 1
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9515, align 1
  %9516 = lshr i64 %9502, 63
  %9517 = trunc i64 %9516 to i8
  %9518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9517, i8* %9518, align 1
  %9519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9505, i8* %9519, align 1
  store %struct.Memory* %loadMem_47d9c8, %struct.Memory** %MEMORY
  %loadMem_47d9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9521 = getelementptr inbounds %struct.GPR, %struct.GPR* %9520, i32 0, i32 33
  %9522 = getelementptr inbounds %struct.Reg, %struct.Reg* %9521, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %9522 to i64*
  %9523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9524 = getelementptr inbounds %struct.GPR, %struct.GPR* %9523, i32 0, i32 1
  %9525 = getelementptr inbounds %struct.Reg, %struct.Reg* %9524, i32 0, i32 0
  %RAX.i223 = bitcast %union.anon* %9525 to i64*
  %9526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9527 = getelementptr inbounds %struct.GPR, %struct.GPR* %9526, i32 0, i32 5
  %9528 = getelementptr inbounds %struct.Reg, %struct.Reg* %9527, i32 0, i32 0
  %RCX.i224 = bitcast %union.anon* %9528 to i64*
  %9529 = load i64, i64* %RAX.i223
  %9530 = load i64, i64* %RCX.i224
  %9531 = load i64, i64* %PC.i222
  %9532 = add i64 %9531, 3
  store i64 %9532, i64* %PC.i222
  %9533 = add i64 %9530, %9529
  store i64 %9533, i64* %RAX.i223, align 8
  %9534 = icmp ult i64 %9533, %9529
  %9535 = icmp ult i64 %9533, %9530
  %9536 = or i1 %9534, %9535
  %9537 = zext i1 %9536 to i8
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9537, i8* %9538, align 1
  %9539 = trunc i64 %9533 to i32
  %9540 = and i32 %9539, 255
  %9541 = call i32 @llvm.ctpop.i32(i32 %9540)
  %9542 = trunc i32 %9541 to i8
  %9543 = and i8 %9542, 1
  %9544 = xor i8 %9543, 1
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9544, i8* %9545, align 1
  %9546 = xor i64 %9530, %9529
  %9547 = xor i64 %9546, %9533
  %9548 = lshr i64 %9547, 4
  %9549 = trunc i64 %9548 to i8
  %9550 = and i8 %9549, 1
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9550, i8* %9551, align 1
  %9552 = icmp eq i64 %9533, 0
  %9553 = zext i1 %9552 to i8
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9553, i8* %9554, align 1
  %9555 = lshr i64 %9533, 63
  %9556 = trunc i64 %9555 to i8
  %9557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9556, i8* %9557, align 1
  %9558 = lshr i64 %9529, 63
  %9559 = lshr i64 %9530, 63
  %9560 = xor i64 %9555, %9558
  %9561 = xor i64 %9555, %9559
  %9562 = add i64 %9560, %9561
  %9563 = icmp eq i64 %9562, 2
  %9564 = zext i1 %9563 to i8
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9564, i8* %9565, align 1
  store %struct.Memory* %loadMem_47d9cc, %struct.Memory** %MEMORY
  %loadMem_47d9cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9567 = getelementptr inbounds %struct.GPR, %struct.GPR* %9566, i32 0, i32 33
  %9568 = getelementptr inbounds %struct.Reg, %struct.Reg* %9567, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %9568 to i64*
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9570 = getelementptr inbounds %struct.GPR, %struct.GPR* %9569, i32 0, i32 1
  %9571 = getelementptr inbounds %struct.Reg, %struct.Reg* %9570, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %9571 to i64*
  %9572 = load i64, i64* %RAX.i221
  %9573 = load i64, i64* %PC.i220
  %9574 = add i64 %9573, 3
  store i64 %9574, i64* %PC.i220
  %9575 = inttoptr i64 %9572 to i32*
  %9576 = load i32, i32* %9575
  %9577 = sub i32 %9576, 36
  %9578 = icmp ult i32 %9576, 36
  %9579 = zext i1 %9578 to i8
  %9580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9579, i8* %9580, align 1
  %9581 = and i32 %9577, 255
  %9582 = call i32 @llvm.ctpop.i32(i32 %9581)
  %9583 = trunc i32 %9582 to i8
  %9584 = and i8 %9583, 1
  %9585 = xor i8 %9584, 1
  %9586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9585, i8* %9586, align 1
  %9587 = xor i32 %9576, 36
  %9588 = xor i32 %9587, %9577
  %9589 = lshr i32 %9588, 4
  %9590 = trunc i32 %9589 to i8
  %9591 = and i8 %9590, 1
  %9592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9591, i8* %9592, align 1
  %9593 = icmp eq i32 %9577, 0
  %9594 = zext i1 %9593 to i8
  %9595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9594, i8* %9595, align 1
  %9596 = lshr i32 %9577, 31
  %9597 = trunc i32 %9596 to i8
  %9598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9597, i8* %9598, align 1
  %9599 = lshr i32 %9576, 31
  %9600 = xor i32 %9596, %9599
  %9601 = add i32 %9600, %9599
  %9602 = icmp eq i32 %9601, 2
  %9603 = zext i1 %9602 to i8
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9603, i8* %9604, align 1
  store %struct.Memory* %loadMem_47d9cf, %struct.Memory** %MEMORY
  %loadMem_47d9d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9606 = getelementptr inbounds %struct.GPR, %struct.GPR* %9605, i32 0, i32 33
  %9607 = getelementptr inbounds %struct.Reg, %struct.Reg* %9606, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %9607 to i64*
  %9608 = load i64, i64* %PC.i219
  %9609 = add i64 %9608, 70
  %9610 = load i64, i64* %PC.i219
  %9611 = add i64 %9610, 6
  %9612 = load i64, i64* %PC.i219
  %9613 = add i64 %9612, 6
  store i64 %9613, i64* %PC.i219
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9615 = load i8, i8* %9614, align 1
  %9616 = icmp eq i8 %9615, 0
  %9617 = zext i1 %9616 to i8
  store i8 %9617, i8* %BRANCH_TAKEN, align 1
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9619 = select i1 %9616, i64 %9609, i64 %9611
  store i64 %9619, i64* %9618, align 8
  store %struct.Memory* %loadMem_47d9d2, %struct.Memory** %MEMORY
  %loadBr_47d9d2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d9d2 = icmp eq i8 %loadBr_47d9d2, 1
  br i1 %cmpBr_47d9d2, label %block_.L_47da18, label %block_.L_47d9d8

block_.L_47d9d8:                                  ; preds = %block_47d9ba, %block_47d99c, %block_47d97e, %block_47d960, %block_47d942, %block_.L_47d924
  %loadMem_47d9d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9621 = getelementptr inbounds %struct.GPR, %struct.GPR* %9620, i32 0, i32 33
  %9622 = getelementptr inbounds %struct.Reg, %struct.Reg* %9621, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %9622 to i64*
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9624 = getelementptr inbounds %struct.GPR, %struct.GPR* %9623, i32 0, i32 1
  %9625 = getelementptr inbounds %struct.Reg, %struct.Reg* %9624, i32 0, i32 0
  %RAX.i218 = bitcast %union.anon* %9625 to i64*
  %9626 = load i64, i64* %PC.i217
  %9627 = add i64 %9626, 10
  store i64 %9627, i64* %PC.i217
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i218, align 8
  store %struct.Memory* %loadMem_47d9d8, %struct.Memory** %MEMORY
  %loadMem_47d9e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9629 = getelementptr inbounds %struct.GPR, %struct.GPR* %9628, i32 0, i32 33
  %9630 = getelementptr inbounds %struct.Reg, %struct.Reg* %9629, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %9630 to i64*
  %9631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9632 = getelementptr inbounds %struct.GPR, %struct.GPR* %9631, i32 0, i32 5
  %9633 = getelementptr inbounds %struct.Reg, %struct.Reg* %9632, i32 0, i32 0
  %RCX.i215 = bitcast %union.anon* %9633 to i64*
  %9634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9635 = getelementptr inbounds %struct.GPR, %struct.GPR* %9634, i32 0, i32 15
  %9636 = getelementptr inbounds %struct.Reg, %struct.Reg* %9635, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %9636 to i64*
  %9637 = load i64, i64* %RBP.i216
  %9638 = sub i64 %9637, 80
  %9639 = load i64, i64* %PC.i214
  %9640 = add i64 %9639, 4
  store i64 %9640, i64* %PC.i214
  %9641 = inttoptr i64 %9638 to i32*
  %9642 = load i32, i32* %9641
  %9643 = sext i32 %9642 to i64
  store i64 %9643, i64* %RCX.i215, align 8
  store %struct.Memory* %loadMem_47d9e2, %struct.Memory** %MEMORY
  %loadMem_47d9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9645 = getelementptr inbounds %struct.GPR, %struct.GPR* %9644, i32 0, i32 33
  %9646 = getelementptr inbounds %struct.Reg, %struct.Reg* %9645, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %9646 to i64*
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9648 = getelementptr inbounds %struct.GPR, %struct.GPR* %9647, i32 0, i32 5
  %9649 = getelementptr inbounds %struct.Reg, %struct.Reg* %9648, i32 0, i32 0
  %RCX.i213 = bitcast %union.anon* %9649 to i64*
  %9650 = load i64, i64* %RCX.i213
  %9651 = load i64, i64* %PC.i212
  %9652 = add i64 %9651, 4
  store i64 %9652, i64* %PC.i212
  %9653 = sext i64 %9650 to i128
  %9654 = and i128 %9653, -18446744073709551616
  %9655 = zext i64 %9650 to i128
  %9656 = or i128 %9654, %9655
  %9657 = mul i128 12, %9656
  %9658 = trunc i128 %9657 to i64
  store i64 %9658, i64* %RCX.i213, align 8
  %9659 = sext i64 %9658 to i128
  %9660 = icmp ne i128 %9659, %9657
  %9661 = zext i1 %9660 to i8
  %9662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9661, i8* %9662, align 1
  %9663 = trunc i128 %9657 to i32
  %9664 = and i32 %9663, 255
  %9665 = call i32 @llvm.ctpop.i32(i32 %9664)
  %9666 = trunc i32 %9665 to i8
  %9667 = and i8 %9666, 1
  %9668 = xor i8 %9667, 1
  %9669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9668, i8* %9669, align 1
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9670, align 1
  %9671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9671, align 1
  %9672 = lshr i64 %9658, 63
  %9673 = trunc i64 %9672 to i8
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9673, i8* %9674, align 1
  %9675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9661, i8* %9675, align 1
  store %struct.Memory* %loadMem_47d9e6, %struct.Memory** %MEMORY
  %loadMem_47d9ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9677 = getelementptr inbounds %struct.GPR, %struct.GPR* %9676, i32 0, i32 33
  %9678 = getelementptr inbounds %struct.Reg, %struct.Reg* %9677, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %9678 to i64*
  %9679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9680 = getelementptr inbounds %struct.GPR, %struct.GPR* %9679, i32 0, i32 1
  %9681 = getelementptr inbounds %struct.Reg, %struct.Reg* %9680, i32 0, i32 0
  %RAX.i210 = bitcast %union.anon* %9681 to i64*
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9683 = getelementptr inbounds %struct.GPR, %struct.GPR* %9682, i32 0, i32 5
  %9684 = getelementptr inbounds %struct.Reg, %struct.Reg* %9683, i32 0, i32 0
  %RCX.i211 = bitcast %union.anon* %9684 to i64*
  %9685 = load i64, i64* %RAX.i210
  %9686 = load i64, i64* %RCX.i211
  %9687 = load i64, i64* %PC.i209
  %9688 = add i64 %9687, 3
  store i64 %9688, i64* %PC.i209
  %9689 = add i64 %9686, %9685
  store i64 %9689, i64* %RAX.i210, align 8
  %9690 = icmp ult i64 %9689, %9685
  %9691 = icmp ult i64 %9689, %9686
  %9692 = or i1 %9690, %9691
  %9693 = zext i1 %9692 to i8
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9693, i8* %9694, align 1
  %9695 = trunc i64 %9689 to i32
  %9696 = and i32 %9695, 255
  %9697 = call i32 @llvm.ctpop.i32(i32 %9696)
  %9698 = trunc i32 %9697 to i8
  %9699 = and i8 %9698, 1
  %9700 = xor i8 %9699, 1
  %9701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9700, i8* %9701, align 1
  %9702 = xor i64 %9686, %9685
  %9703 = xor i64 %9702, %9689
  %9704 = lshr i64 %9703, 4
  %9705 = trunc i64 %9704 to i8
  %9706 = and i8 %9705, 1
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9706, i8* %9707, align 1
  %9708 = icmp eq i64 %9689, 0
  %9709 = zext i1 %9708 to i8
  %9710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9709, i8* %9710, align 1
  %9711 = lshr i64 %9689, 63
  %9712 = trunc i64 %9711 to i8
  %9713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9712, i8* %9713, align 1
  %9714 = lshr i64 %9685, 63
  %9715 = lshr i64 %9686, 63
  %9716 = xor i64 %9711, %9714
  %9717 = xor i64 %9711, %9715
  %9718 = add i64 %9716, %9717
  %9719 = icmp eq i64 %9718, 2
  %9720 = zext i1 %9719 to i8
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9720, i8* %9721, align 1
  store %struct.Memory* %loadMem_47d9ea, %struct.Memory** %MEMORY
  %loadMem_47d9ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9723 = getelementptr inbounds %struct.GPR, %struct.GPR* %9722, i32 0, i32 33
  %9724 = getelementptr inbounds %struct.Reg, %struct.Reg* %9723, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %9724 to i64*
  %9725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9726 = getelementptr inbounds %struct.GPR, %struct.GPR* %9725, i32 0, i32 1
  %9727 = getelementptr inbounds %struct.Reg, %struct.Reg* %9726, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %9727 to i64*
  %9728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9729 = getelementptr inbounds %struct.GPR, %struct.GPR* %9728, i32 0, i32 7
  %9730 = getelementptr inbounds %struct.Reg, %struct.Reg* %9729, i32 0, i32 0
  %RDX.i208 = bitcast %union.anon* %9730 to i64*
  %9731 = load i64, i64* %RAX.i207
  %9732 = add i64 %9731, 4
  %9733 = load i64, i64* %PC.i206
  %9734 = add i64 %9733, 3
  store i64 %9734, i64* %PC.i206
  %9735 = inttoptr i64 %9732 to i32*
  %9736 = load i32, i32* %9735
  %9737 = zext i32 %9736 to i64
  store i64 %9737, i64* %RDX.i208, align 8
  store %struct.Memory* %loadMem_47d9ed, %struct.Memory** %MEMORY
  %loadMem_47d9f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9739 = getelementptr inbounds %struct.GPR, %struct.GPR* %9738, i32 0, i32 33
  %9740 = getelementptr inbounds %struct.Reg, %struct.Reg* %9739, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %9740 to i64*
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9742 = getelementptr inbounds %struct.GPR, %struct.GPR* %9741, i32 0, i32 7
  %9743 = getelementptr inbounds %struct.Reg, %struct.Reg* %9742, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %9743 to i32*
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9745 = getelementptr inbounds %struct.GPR, %struct.GPR* %9744, i32 0, i32 15
  %9746 = getelementptr inbounds %struct.Reg, %struct.Reg* %9745, i32 0, i32 0
  %RBP.i205 = bitcast %union.anon* %9746 to i64*
  %9747 = load i64, i64* %RBP.i205
  %9748 = sub i64 %9747, 32
  %9749 = load i32, i32* %EDX.i
  %9750 = zext i32 %9749 to i64
  %9751 = load i64, i64* %PC.i204
  %9752 = add i64 %9751, 3
  store i64 %9752, i64* %PC.i204
  %9753 = inttoptr i64 %9748 to i32*
  store i32 %9749, i32* %9753
  store %struct.Memory* %loadMem_47d9f0, %struct.Memory** %MEMORY
  %loadMem_47d9f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9755 = getelementptr inbounds %struct.GPR, %struct.GPR* %9754, i32 0, i32 33
  %9756 = getelementptr inbounds %struct.Reg, %struct.Reg* %9755, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %9756 to i64*
  %9757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9758 = getelementptr inbounds %struct.GPR, %struct.GPR* %9757, i32 0, i32 11
  %9759 = getelementptr inbounds %struct.Reg, %struct.Reg* %9758, i32 0, i32 0
  %RDI.i202 = bitcast %union.anon* %9759 to i64*
  %9760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9761 = getelementptr inbounds %struct.GPR, %struct.GPR* %9760, i32 0, i32 15
  %9762 = getelementptr inbounds %struct.Reg, %struct.Reg* %9761, i32 0, i32 0
  %RBP.i203 = bitcast %union.anon* %9762 to i64*
  %9763 = load i64, i64* %RBP.i203
  %9764 = sub i64 %9763, 32
  %9765 = load i64, i64* %PC.i201
  %9766 = add i64 %9765, 3
  store i64 %9766, i64* %PC.i201
  %9767 = inttoptr i64 %9764 to i32*
  %9768 = load i32, i32* %9767
  %9769 = zext i32 %9768 to i64
  store i64 %9769, i64* %RDI.i202, align 8
  store %struct.Memory* %loadMem_47d9f3, %struct.Memory** %MEMORY
  %loadMem_47d9f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9771 = getelementptr inbounds %struct.GPR, %struct.GPR* %9770, i32 0, i32 33
  %9772 = getelementptr inbounds %struct.Reg, %struct.Reg* %9771, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %9772 to i64*
  %9773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9774 = getelementptr inbounds %struct.GPR, %struct.GPR* %9773, i32 0, i32 9
  %9775 = getelementptr inbounds %struct.Reg, %struct.Reg* %9774, i32 0, i32 0
  %RSI.i199 = bitcast %union.anon* %9775 to i64*
  %9776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9777 = getelementptr inbounds %struct.GPR, %struct.GPR* %9776, i32 0, i32 15
  %9778 = getelementptr inbounds %struct.Reg, %struct.Reg* %9777, i32 0, i32 0
  %RBP.i200 = bitcast %union.anon* %9778 to i64*
  %9779 = load i64, i64* %RBP.i200
  %9780 = sub i64 %9779, 8
  %9781 = load i64, i64* %PC.i198
  %9782 = add i64 %9781, 3
  store i64 %9782, i64* %PC.i198
  %9783 = inttoptr i64 %9780 to i32*
  %9784 = load i32, i32* %9783
  %9785 = zext i32 %9784 to i64
  store i64 %9785, i64* %RSI.i199, align 8
  store %struct.Memory* %loadMem_47d9f6, %struct.Memory** %MEMORY
  %loadMem1_47d9f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9787 = getelementptr inbounds %struct.GPR, %struct.GPR* %9786, i32 0, i32 33
  %9788 = getelementptr inbounds %struct.Reg, %struct.Reg* %9787, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %9788 to i64*
  %9789 = load i64, i64* %PC.i197
  %9790 = add i64 %9789, -370905
  %9791 = load i64, i64* %PC.i197
  %9792 = add i64 %9791, 5
  %9793 = load i64, i64* %PC.i197
  %9794 = add i64 %9793, 5
  store i64 %9794, i64* %PC.i197
  %9795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9796 = load i64, i64* %9795, align 8
  %9797 = add i64 %9796, -8
  %9798 = inttoptr i64 %9797 to i64*
  store i64 %9792, i64* %9798
  store i64 %9797, i64* %9795, align 8
  %9799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9790, i64* %9799, align 8
  store %struct.Memory* %loadMem1_47d9f9, %struct.Memory** %MEMORY
  %loadMem2_47d9f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d9f9 = load i64, i64* %3
  %call2_47d9f9 = call %struct.Memory* @sub_423120.are_neighbor_dragons(%struct.State* %0, i64 %loadPC_47d9f9, %struct.Memory* %loadMem2_47d9f9)
  store %struct.Memory* %call2_47d9f9, %struct.Memory** %MEMORY
  %loadMem_47d9fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9801 = getelementptr inbounds %struct.GPR, %struct.GPR* %9800, i32 0, i32 33
  %9802 = getelementptr inbounds %struct.Reg, %struct.Reg* %9801, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %9802 to i64*
  %9803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9804 = getelementptr inbounds %struct.GPR, %struct.GPR* %9803, i32 0, i32 1
  %9805 = getelementptr inbounds %struct.Reg, %struct.Reg* %9804, i32 0, i32 0
  %EAX.i196 = bitcast %union.anon* %9805 to i32*
  %9806 = load i32, i32* %EAX.i196
  %9807 = zext i32 %9806 to i64
  %9808 = load i64, i64* %PC.i195
  %9809 = add i64 %9808, 3
  store i64 %9809, i64* %PC.i195
  %9810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9810, align 1
  %9811 = and i32 %9806, 255
  %9812 = call i32 @llvm.ctpop.i32(i32 %9811)
  %9813 = trunc i32 %9812 to i8
  %9814 = and i8 %9813, 1
  %9815 = xor i8 %9814, 1
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9815, i8* %9816, align 1
  %9817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9817, align 1
  %9818 = icmp eq i32 %9806, 0
  %9819 = zext i1 %9818 to i8
  %9820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9819, i8* %9820, align 1
  %9821 = lshr i32 %9806, 31
  %9822 = trunc i32 %9821 to i8
  %9823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9822, i8* %9823, align 1
  %9824 = lshr i32 %9806, 31
  %9825 = xor i32 %9821, %9824
  %9826 = add i32 %9825, %9824
  %9827 = icmp eq i32 %9826, 2
  %9828 = zext i1 %9827 to i8
  %9829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9828, i8* %9829, align 1
  store %struct.Memory* %loadMem_47d9fe, %struct.Memory** %MEMORY
  %loadMem_47da01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9831 = getelementptr inbounds %struct.GPR, %struct.GPR* %9830, i32 0, i32 33
  %9832 = getelementptr inbounds %struct.Reg, %struct.Reg* %9831, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %9832 to i64*
  %9833 = load i64, i64* %PC.i194
  %9834 = add i64 %9833, 18
  %9835 = load i64, i64* %PC.i194
  %9836 = add i64 %9835, 6
  %9837 = load i64, i64* %PC.i194
  %9838 = add i64 %9837, 6
  store i64 %9838, i64* %PC.i194
  %9839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9840 = load i8, i8* %9839, align 1
  store i8 %9840, i8* %BRANCH_TAKEN, align 1
  %9841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9842 = icmp ne i8 %9840, 0
  %9843 = select i1 %9842, i64 %9834, i64 %9836
  store i64 %9843, i64* %9841, align 8
  store %struct.Memory* %loadMem_47da01, %struct.Memory** %MEMORY
  %loadBr_47da01 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47da01 = icmp eq i8 %loadBr_47da01, 1
  br i1 %cmpBr_47da01, label %block_.L_47da13, label %block_47da07

block_47da07:                                     ; preds = %block_.L_47d9d8
  %loadMem_47da07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9845 = getelementptr inbounds %struct.GPR, %struct.GPR* %9844, i32 0, i32 33
  %9846 = getelementptr inbounds %struct.Reg, %struct.Reg* %9845, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %9846 to i64*
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9848 = getelementptr inbounds %struct.GPR, %struct.GPR* %9847, i32 0, i32 15
  %9849 = getelementptr inbounds %struct.Reg, %struct.Reg* %9848, i32 0, i32 0
  %RBP.i193 = bitcast %union.anon* %9849 to i64*
  %9850 = load i64, i64* %RBP.i193
  %9851 = sub i64 %9850, 36
  %9852 = load i64, i64* %PC.i192
  %9853 = add i64 %9852, 7
  store i64 %9853, i64* %PC.i192
  %9854 = inttoptr i64 %9851 to i32*
  store i32 1, i32* %9854
  store %struct.Memory* %loadMem_47da07, %struct.Memory** %MEMORY
  %loadMem_47da0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9856 = getelementptr inbounds %struct.GPR, %struct.GPR* %9855, i32 0, i32 33
  %9857 = getelementptr inbounds %struct.Reg, %struct.Reg* %9856, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %9857 to i64*
  %9858 = load i64, i64* %PC.i191
  %9859 = add i64 %9858, 29
  %9860 = load i64, i64* %PC.i191
  %9861 = add i64 %9860, 5
  store i64 %9861, i64* %PC.i191
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9859, i64* %9862, align 8
  store %struct.Memory* %loadMem_47da0e, %struct.Memory** %MEMORY
  br label %block_.L_47da2b

block_.L_47da13:                                  ; preds = %block_.L_47d9d8
  %loadMem_47da13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9864 = getelementptr inbounds %struct.GPR, %struct.GPR* %9863, i32 0, i32 33
  %9865 = getelementptr inbounds %struct.Reg, %struct.Reg* %9864, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %9865 to i64*
  %9866 = load i64, i64* %PC.i190
  %9867 = add i64 %9866, 5
  %9868 = load i64, i64* %PC.i190
  %9869 = add i64 %9868, 5
  store i64 %9869, i64* %PC.i190
  %9870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9867, i64* %9870, align 8
  store %struct.Memory* %loadMem_47da13, %struct.Memory** %MEMORY
  br label %block_.L_47da18

block_.L_47da18:                                  ; preds = %block_.L_47da13, %block_47d9ba
  %loadMem_47da18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9872 = getelementptr inbounds %struct.GPR, %struct.GPR* %9871, i32 0, i32 33
  %9873 = getelementptr inbounds %struct.Reg, %struct.Reg* %9872, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %9873 to i64*
  %9874 = load i64, i64* %PC.i189
  %9875 = add i64 %9874, 5
  %9876 = load i64, i64* %PC.i189
  %9877 = add i64 %9876, 5
  store i64 %9877, i64* %PC.i189
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9875, i64* %9878, align 8
  store %struct.Memory* %loadMem_47da18, %struct.Memory** %MEMORY
  br label %block_.L_47da1d

block_.L_47da1d:                                  ; preds = %block_.L_47da18
  %loadMem_47da1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9880 = getelementptr inbounds %struct.GPR, %struct.GPR* %9879, i32 0, i32 33
  %9881 = getelementptr inbounds %struct.Reg, %struct.Reg* %9880, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %9881 to i64*
  %9882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9883 = getelementptr inbounds %struct.GPR, %struct.GPR* %9882, i32 0, i32 1
  %9884 = getelementptr inbounds %struct.Reg, %struct.Reg* %9883, i32 0, i32 0
  %RAX.i187 = bitcast %union.anon* %9884 to i64*
  %9885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9886 = getelementptr inbounds %struct.GPR, %struct.GPR* %9885, i32 0, i32 15
  %9887 = getelementptr inbounds %struct.Reg, %struct.Reg* %9886, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %9887 to i64*
  %9888 = load i64, i64* %RBP.i188
  %9889 = sub i64 %9888, 16
  %9890 = load i64, i64* %PC.i186
  %9891 = add i64 %9890, 3
  store i64 %9891, i64* %PC.i186
  %9892 = inttoptr i64 %9889 to i32*
  %9893 = load i32, i32* %9892
  %9894 = zext i32 %9893 to i64
  store i64 %9894, i64* %RAX.i187, align 8
  store %struct.Memory* %loadMem_47da1d, %struct.Memory** %MEMORY
  %loadMem_47da20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9896 = getelementptr inbounds %struct.GPR, %struct.GPR* %9895, i32 0, i32 33
  %9897 = getelementptr inbounds %struct.Reg, %struct.Reg* %9896, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %9897 to i64*
  %9898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9899 = getelementptr inbounds %struct.GPR, %struct.GPR* %9898, i32 0, i32 1
  %9900 = getelementptr inbounds %struct.Reg, %struct.Reg* %9899, i32 0, i32 0
  %RAX.i185 = bitcast %union.anon* %9900 to i64*
  %9901 = load i64, i64* %RAX.i185
  %9902 = load i64, i64* %PC.i184
  %9903 = add i64 %9902, 3
  store i64 %9903, i64* %PC.i184
  %9904 = trunc i64 %9901 to i32
  %9905 = add i32 1, %9904
  %9906 = zext i32 %9905 to i64
  store i64 %9906, i64* %RAX.i185, align 8
  %9907 = icmp ult i32 %9905, %9904
  %9908 = icmp ult i32 %9905, 1
  %9909 = or i1 %9907, %9908
  %9910 = zext i1 %9909 to i8
  %9911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9910, i8* %9911, align 1
  %9912 = and i32 %9905, 255
  %9913 = call i32 @llvm.ctpop.i32(i32 %9912)
  %9914 = trunc i32 %9913 to i8
  %9915 = and i8 %9914, 1
  %9916 = xor i8 %9915, 1
  %9917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9916, i8* %9917, align 1
  %9918 = xor i64 1, %9901
  %9919 = trunc i64 %9918 to i32
  %9920 = xor i32 %9919, %9905
  %9921 = lshr i32 %9920, 4
  %9922 = trunc i32 %9921 to i8
  %9923 = and i8 %9922, 1
  %9924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9923, i8* %9924, align 1
  %9925 = icmp eq i32 %9905, 0
  %9926 = zext i1 %9925 to i8
  %9927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9926, i8* %9927, align 1
  %9928 = lshr i32 %9905, 31
  %9929 = trunc i32 %9928 to i8
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9929, i8* %9930, align 1
  %9931 = lshr i32 %9904, 31
  %9932 = xor i32 %9928, %9931
  %9933 = add i32 %9932, %9928
  %9934 = icmp eq i32 %9933, 2
  %9935 = zext i1 %9934 to i8
  %9936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9935, i8* %9936, align 1
  store %struct.Memory* %loadMem_47da20, %struct.Memory** %MEMORY
  %loadMem_47da23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9938 = getelementptr inbounds %struct.GPR, %struct.GPR* %9937, i32 0, i32 33
  %9939 = getelementptr inbounds %struct.Reg, %struct.Reg* %9938, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %9939 to i64*
  %9940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9941 = getelementptr inbounds %struct.GPR, %struct.GPR* %9940, i32 0, i32 1
  %9942 = getelementptr inbounds %struct.Reg, %struct.Reg* %9941, i32 0, i32 0
  %EAX.i182 = bitcast %union.anon* %9942 to i32*
  %9943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9944 = getelementptr inbounds %struct.GPR, %struct.GPR* %9943, i32 0, i32 15
  %9945 = getelementptr inbounds %struct.Reg, %struct.Reg* %9944, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %9945 to i64*
  %9946 = load i64, i64* %RBP.i183
  %9947 = sub i64 %9946, 16
  %9948 = load i32, i32* %EAX.i182
  %9949 = zext i32 %9948 to i64
  %9950 = load i64, i64* %PC.i181
  %9951 = add i64 %9950, 3
  store i64 %9951, i64* %PC.i181
  %9952 = inttoptr i64 %9947 to i32*
  store i32 %9948, i32* %9952
  store %struct.Memory* %loadMem_47da23, %struct.Memory** %MEMORY
  %loadMem_47da26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9954 = getelementptr inbounds %struct.GPR, %struct.GPR* %9953, i32 0, i32 33
  %9955 = getelementptr inbounds %struct.Reg, %struct.Reg* %9954, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %9955 to i64*
  %9956 = load i64, i64* %PC.i180
  %9957 = add i64 %9956, -318
  %9958 = load i64, i64* %PC.i180
  %9959 = add i64 %9958, 5
  store i64 %9959, i64* %PC.i180
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9957, i64* %9960, align 8
  store %struct.Memory* %loadMem_47da26, %struct.Memory** %MEMORY
  br label %block_.L_47d8e8

block_.L_47da2b:                                  ; preds = %block_47da07, %block_47d91f, %block_.L_47d8e8
  %loadMem_47da2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9962 = getelementptr inbounds %struct.GPR, %struct.GPR* %9961, i32 0, i32 33
  %9963 = getelementptr inbounds %struct.Reg, %struct.Reg* %9962, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %9963 to i64*
  %9964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9965 = getelementptr inbounds %struct.GPR, %struct.GPR* %9964, i32 0, i32 15
  %9966 = getelementptr inbounds %struct.Reg, %struct.Reg* %9965, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %9966 to i64*
  %9967 = load i64, i64* %RBP.i179
  %9968 = sub i64 %9967, 36
  %9969 = load i64, i64* %PC.i178
  %9970 = add i64 %9969, 4
  store i64 %9970, i64* %PC.i178
  %9971 = inttoptr i64 %9968 to i32*
  %9972 = load i32, i32* %9971
  %9973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9973, align 1
  %9974 = and i32 %9972, 255
  %9975 = call i32 @llvm.ctpop.i32(i32 %9974)
  %9976 = trunc i32 %9975 to i8
  %9977 = and i8 %9976, 1
  %9978 = xor i8 %9977, 1
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9978, i8* %9979, align 1
  %9980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9980, align 1
  %9981 = icmp eq i32 %9972, 0
  %9982 = zext i1 %9981 to i8
  %9983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9982, i8* %9983, align 1
  %9984 = lshr i32 %9972, 31
  %9985 = trunc i32 %9984 to i8
  %9986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9985, i8* %9986, align 1
  %9987 = lshr i32 %9972, 31
  %9988 = xor i32 %9984, %9987
  %9989 = add i32 %9988, %9987
  %9990 = icmp eq i32 %9989, 2
  %9991 = zext i1 %9990 to i8
  %9992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9991, i8* %9992, align 1
  store %struct.Memory* %loadMem_47da2b, %struct.Memory** %MEMORY
  %loadMem_47da2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9994 = getelementptr inbounds %struct.GPR, %struct.GPR* %9993, i32 0, i32 33
  %9995 = getelementptr inbounds %struct.Reg, %struct.Reg* %9994, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %9995 to i64*
  %9996 = load i64, i64* %PC.i177
  %9997 = add i64 %9996, 320
  %9998 = load i64, i64* %PC.i177
  %9999 = add i64 %9998, 6
  %10000 = load i64, i64* %PC.i177
  %10001 = add i64 %10000, 6
  store i64 %10001, i64* %PC.i177
  %10002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10003 = load i8, i8* %10002, align 1
  store i8 %10003, i8* %BRANCH_TAKEN, align 1
  %10004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10005 = icmp ne i8 %10003, 0
  %10006 = select i1 %10005, i64 %9997, i64 %9999
  store i64 %10006, i64* %10004, align 8
  store %struct.Memory* %loadMem_47da2f, %struct.Memory** %MEMORY
  %loadBr_47da2f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47da2f = icmp eq i8 %loadBr_47da2f, 1
  br i1 %cmpBr_47da2f, label %block_.L_47db6f, label %block_47da35

block_47da35:                                     ; preds = %block_.L_47da2b
  %loadMem_47da35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10008 = getelementptr inbounds %struct.GPR, %struct.GPR* %10007, i32 0, i32 33
  %10009 = getelementptr inbounds %struct.Reg, %struct.Reg* %10008, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %10009 to i64*
  %10010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10011 = getelementptr inbounds %struct.GPR, %struct.GPR* %10010, i32 0, i32 1
  %10012 = getelementptr inbounds %struct.Reg, %struct.Reg* %10011, i32 0, i32 0
  %RAX.i175 = bitcast %union.anon* %10012 to i64*
  %10013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10014 = getelementptr inbounds %struct.GPR, %struct.GPR* %10013, i32 0, i32 15
  %10015 = getelementptr inbounds %struct.Reg, %struct.Reg* %10014, i32 0, i32 0
  %RBP.i176 = bitcast %union.anon* %10015 to i64*
  %10016 = load i64, i64* %RBP.i176
  %10017 = sub i64 %10016, 8
  %10018 = load i64, i64* %PC.i174
  %10019 = add i64 %10018, 4
  store i64 %10019, i64* %PC.i174
  %10020 = inttoptr i64 %10017 to i32*
  %10021 = load i32, i32* %10020
  %10022 = sext i32 %10021 to i64
  store i64 %10022, i64* %RAX.i175, align 8
  store %struct.Memory* %loadMem_47da35, %struct.Memory** %MEMORY
  %loadMem_47da39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10024 = getelementptr inbounds %struct.GPR, %struct.GPR* %10023, i32 0, i32 33
  %10025 = getelementptr inbounds %struct.Reg, %struct.Reg* %10024, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %10025 to i64*
  %10026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10027 = getelementptr inbounds %struct.GPR, %struct.GPR* %10026, i32 0, i32 1
  %10028 = getelementptr inbounds %struct.Reg, %struct.Reg* %10027, i32 0, i32 0
  %RAX.i172 = bitcast %union.anon* %10028 to i64*
  %10029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10030 = getelementptr inbounds %struct.GPR, %struct.GPR* %10029, i32 0, i32 5
  %10031 = getelementptr inbounds %struct.Reg, %struct.Reg* %10030, i32 0, i32 0
  %RCX.i173 = bitcast %union.anon* %10031 to i64*
  %10032 = load i64, i64* %RAX.i172
  %10033 = add i64 %10032, 12099168
  %10034 = load i64, i64* %PC.i171
  %10035 = add i64 %10034, 8
  store i64 %10035, i64* %PC.i171
  %10036 = inttoptr i64 %10033 to i8*
  %10037 = load i8, i8* %10036
  %10038 = zext i8 %10037 to i64
  store i64 %10038, i64* %RCX.i173, align 8
  store %struct.Memory* %loadMem_47da39, %struct.Memory** %MEMORY
  %loadMem_47da41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10040 = getelementptr inbounds %struct.GPR, %struct.GPR* %10039, i32 0, i32 33
  %10041 = getelementptr inbounds %struct.Reg, %struct.Reg* %10040, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %10041 to i64*
  %10042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10043 = getelementptr inbounds %struct.GPR, %struct.GPR* %10042, i32 0, i32 5
  %10044 = getelementptr inbounds %struct.Reg, %struct.Reg* %10043, i32 0, i32 0
  %ECX.i169 = bitcast %union.anon* %10044 to i32*
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10046 = getelementptr inbounds %struct.GPR, %struct.GPR* %10045, i32 0, i32 15
  %10047 = getelementptr inbounds %struct.Reg, %struct.Reg* %10046, i32 0, i32 0
  %RBP.i170 = bitcast %union.anon* %10047 to i64*
  %10048 = load i32, i32* %ECX.i169
  %10049 = zext i32 %10048 to i64
  %10050 = load i64, i64* %RBP.i170
  %10051 = sub i64 %10050, 4
  %10052 = load i64, i64* %PC.i168
  %10053 = add i64 %10052, 3
  store i64 %10053, i64* %PC.i168
  %10054 = inttoptr i64 %10051 to i32*
  %10055 = load i32, i32* %10054
  %10056 = sub i32 %10048, %10055
  %10057 = icmp ult i32 %10048, %10055
  %10058 = zext i1 %10057 to i8
  %10059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10058, i8* %10059, align 1
  %10060 = and i32 %10056, 255
  %10061 = call i32 @llvm.ctpop.i32(i32 %10060)
  %10062 = trunc i32 %10061 to i8
  %10063 = and i8 %10062, 1
  %10064 = xor i8 %10063, 1
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10064, i8* %10065, align 1
  %10066 = xor i32 %10055, %10048
  %10067 = xor i32 %10066, %10056
  %10068 = lshr i32 %10067, 4
  %10069 = trunc i32 %10068 to i8
  %10070 = and i8 %10069, 1
  %10071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10070, i8* %10071, align 1
  %10072 = icmp eq i32 %10056, 0
  %10073 = zext i1 %10072 to i8
  %10074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10073, i8* %10074, align 1
  %10075 = lshr i32 %10056, 31
  %10076 = trunc i32 %10075 to i8
  %10077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10076, i8* %10077, align 1
  %10078 = lshr i32 %10048, 31
  %10079 = lshr i32 %10055, 31
  %10080 = xor i32 %10079, %10078
  %10081 = xor i32 %10075, %10078
  %10082 = add i32 %10081, %10080
  %10083 = icmp eq i32 %10082, 2
  %10084 = zext i1 %10083 to i8
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10084, i8* %10085, align 1
  store %struct.Memory* %loadMem_47da41, %struct.Memory** %MEMORY
  %loadMem_47da44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10087 = getelementptr inbounds %struct.GPR, %struct.GPR* %10086, i32 0, i32 33
  %10088 = getelementptr inbounds %struct.Reg, %struct.Reg* %10087, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %10088 to i64*
  %10089 = load i64, i64* %PC.i167
  %10090 = add i64 %10089, 137
  %10091 = load i64, i64* %PC.i167
  %10092 = add i64 %10091, 6
  %10093 = load i64, i64* %PC.i167
  %10094 = add i64 %10093, 6
  store i64 %10094, i64* %PC.i167
  %10095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10096 = load i8, i8* %10095, align 1
  %10097 = icmp eq i8 %10096, 0
  %10098 = zext i1 %10097 to i8
  store i8 %10098, i8* %BRANCH_TAKEN, align 1
  %10099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10100 = select i1 %10097, i64 %10090, i64 %10092
  store i64 %10100, i64* %10099, align 8
  store %struct.Memory* %loadMem_47da44, %struct.Memory** %MEMORY
  %loadBr_47da44 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47da44 = icmp eq i8 %loadBr_47da44, 1
  br i1 %cmpBr_47da44, label %block_.L_47dacd, label %block_47da4a

block_47da4a:                                     ; preds = %block_47da35
  %loadMem_47da4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10102 = getelementptr inbounds %struct.GPR, %struct.GPR* %10101, i32 0, i32 33
  %10103 = getelementptr inbounds %struct.Reg, %struct.Reg* %10102, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %10103 to i64*
  %10104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10105 = getelementptr inbounds %struct.GPR, %struct.GPR* %10104, i32 0, i32 11
  %10106 = getelementptr inbounds %struct.Reg, %struct.Reg* %10105, i32 0, i32 0
  %RDI.i165 = bitcast %union.anon* %10106 to i64*
  %10107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10108 = getelementptr inbounds %struct.GPR, %struct.GPR* %10107, i32 0, i32 15
  %10109 = getelementptr inbounds %struct.Reg, %struct.Reg* %10108, i32 0, i32 0
  %RBP.i166 = bitcast %union.anon* %10109 to i64*
  %10110 = load i64, i64* %RBP.i166
  %10111 = sub i64 %10110, 12
  %10112 = load i64, i64* %PC.i164
  %10113 = add i64 %10112, 3
  store i64 %10113, i64* %PC.i164
  %10114 = inttoptr i64 %10111 to i32*
  %10115 = load i32, i32* %10114
  %10116 = zext i32 %10115 to i64
  store i64 %10116, i64* %RDI.i165, align 8
  store %struct.Memory* %loadMem_47da4a, %struct.Memory** %MEMORY
  %loadMem_47da4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10118 = getelementptr inbounds %struct.GPR, %struct.GPR* %10117, i32 0, i32 33
  %10119 = getelementptr inbounds %struct.Reg, %struct.Reg* %10118, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %10119 to i64*
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10121 = getelementptr inbounds %struct.GPR, %struct.GPR* %10120, i32 0, i32 9
  %10122 = getelementptr inbounds %struct.Reg, %struct.Reg* %10121, i32 0, i32 0
  %RSI.i162 = bitcast %union.anon* %10122 to i64*
  %10123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10124 = getelementptr inbounds %struct.GPR, %struct.GPR* %10123, i32 0, i32 15
  %10125 = getelementptr inbounds %struct.Reg, %struct.Reg* %10124, i32 0, i32 0
  %RBP.i163 = bitcast %union.anon* %10125 to i64*
  %10126 = load i64, i64* %RBP.i163
  %10127 = sub i64 %10126, 8
  %10128 = load i64, i64* %PC.i161
  %10129 = add i64 %10128, 3
  store i64 %10129, i64* %PC.i161
  %10130 = inttoptr i64 %10127 to i32*
  %10131 = load i32, i32* %10130
  %10132 = zext i32 %10131 to i64
  store i64 %10132, i64* %RSI.i162, align 8
  store %struct.Memory* %loadMem_47da4d, %struct.Memory** %MEMORY
  %loadMem1_47da50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10134 = getelementptr inbounds %struct.GPR, %struct.GPR* %10133, i32 0, i32 33
  %10135 = getelementptr inbounds %struct.Reg, %struct.Reg* %10134, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %10135 to i64*
  %10136 = load i64, i64* %PC.i160
  %10137 = add i64 %10136, -309776
  %10138 = load i64, i64* %PC.i160
  %10139 = add i64 %10138, 5
  %10140 = load i64, i64* %PC.i160
  %10141 = add i64 %10140, 5
  store i64 %10141, i64* %PC.i160
  %10142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10143 = load i64, i64* %10142, align 8
  %10144 = add i64 %10143, -8
  %10145 = inttoptr i64 %10144 to i64*
  store i64 %10139, i64* %10145
  store i64 %10144, i64* %10142, align 8
  %10146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10137, i64* %10146, align 8
  store %struct.Memory* %loadMem1_47da50, %struct.Memory** %MEMORY
  %loadMem2_47da50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47da50 = load i64, i64* %3
  %call2_47da50 = call %struct.Memory* @sub_432040.owl_defense_move_reason_known(%struct.State* %0, i64 %loadPC_47da50, %struct.Memory* %loadMem2_47da50)
  store %struct.Memory* %call2_47da50, %struct.Memory** %MEMORY
  %loadMem_47da55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10148 = getelementptr inbounds %struct.GPR, %struct.GPR* %10147, i32 0, i32 33
  %10149 = getelementptr inbounds %struct.Reg, %struct.Reg* %10148, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %10149 to i64*
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10151 = getelementptr inbounds %struct.GPR, %struct.GPR* %10150, i32 0, i32 1
  %10152 = getelementptr inbounds %struct.Reg, %struct.Reg* %10151, i32 0, i32 0
  %EAX.i159 = bitcast %union.anon* %10152 to i32*
  %10153 = load i32, i32* %EAX.i159
  %10154 = zext i32 %10153 to i64
  %10155 = load i64, i64* %PC.i158
  %10156 = add i64 %10155, 3
  store i64 %10156, i64* %PC.i158
  %10157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10157, align 1
  %10158 = and i32 %10153, 255
  %10159 = call i32 @llvm.ctpop.i32(i32 %10158)
  %10160 = trunc i32 %10159 to i8
  %10161 = and i8 %10160, 1
  %10162 = xor i8 %10161, 1
  %10163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10162, i8* %10163, align 1
  %10164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10164, align 1
  %10165 = icmp eq i32 %10153, 0
  %10166 = zext i1 %10165 to i8
  %10167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10166, i8* %10167, align 1
  %10168 = lshr i32 %10153, 31
  %10169 = trunc i32 %10168 to i8
  %10170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10169, i8* %10170, align 1
  %10171 = lshr i32 %10153, 31
  %10172 = xor i32 %10168, %10171
  %10173 = add i32 %10172, %10171
  %10174 = icmp eq i32 %10173, 2
  %10175 = zext i1 %10174 to i8
  %10176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10175, i8* %10176, align 1
  store %struct.Memory* %loadMem_47da55, %struct.Memory** %MEMORY
  %loadMem_47da58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10178 = getelementptr inbounds %struct.GPR, %struct.GPR* %10177, i32 0, i32 33
  %10179 = getelementptr inbounds %struct.Reg, %struct.Reg* %10178, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %10179 to i64*
  %10180 = load i64, i64* %PC.i157
  %10181 = add i64 %10180, 117
  %10182 = load i64, i64* %PC.i157
  %10183 = add i64 %10182, 6
  %10184 = load i64, i64* %PC.i157
  %10185 = add i64 %10184, 6
  store i64 %10185, i64* %PC.i157
  %10186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10187 = load i8, i8* %10186, align 1
  %10188 = icmp eq i8 %10187, 0
  %10189 = zext i1 %10188 to i8
  store i8 %10189, i8* %BRANCH_TAKEN, align 1
  %10190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10191 = select i1 %10188, i64 %10181, i64 %10183
  store i64 %10191, i64* %10190, align 8
  store %struct.Memory* %loadMem_47da58, %struct.Memory** %MEMORY
  %loadBr_47da58 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47da58 = icmp eq i8 %loadBr_47da58, 1
  br i1 %cmpBr_47da58, label %block_.L_47dacd, label %block_47da5e

block_47da5e:                                     ; preds = %block_47da4a
  %loadMem_47da5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10193 = getelementptr inbounds %struct.GPR, %struct.GPR* %10192, i32 0, i32 33
  %10194 = getelementptr inbounds %struct.Reg, %struct.Reg* %10193, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %10194 to i64*
  %10195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10196 = getelementptr inbounds %struct.GPR, %struct.GPR* %10195, i32 0, i32 7
  %10197 = getelementptr inbounds %struct.Reg, %struct.Reg* %10196, i32 0, i32 0
  %RDX.i155 = bitcast %union.anon* %10197 to i64*
  %10198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10199 = getelementptr inbounds %struct.GPR, %struct.GPR* %10198, i32 0, i32 15
  %10200 = getelementptr inbounds %struct.Reg, %struct.Reg* %10199, i32 0, i32 0
  %RBP.i156 = bitcast %union.anon* %10200 to i64*
  %10201 = load i64, i64* %RBP.i156
  %10202 = sub i64 %10201, 84
  %10203 = load i64, i64* %PC.i154
  %10204 = add i64 %10203, 4
  store i64 %10204, i64* %PC.i154
  store i64 %10202, i64* %RDX.i155, align 8
  store %struct.Memory* %loadMem_47da5e, %struct.Memory** %MEMORY
  %loadMem_47da62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10206 = getelementptr inbounds %struct.GPR, %struct.GPR* %10205, i32 0, i32 33
  %10207 = getelementptr inbounds %struct.Reg, %struct.Reg* %10206, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %10207 to i64*
  %10208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10209 = getelementptr inbounds %struct.GPR, %struct.GPR* %10208, i32 0, i32 15
  %10210 = getelementptr inbounds %struct.Reg, %struct.Reg* %10209, i32 0, i32 0
  %RBP.i153 = bitcast %union.anon* %10210 to i64*
  %10211 = load i64, i64* %RBP.i153
  %10212 = sub i64 %10211, 84
  %10213 = load i64, i64* %PC.i152
  %10214 = add i64 %10213, 7
  store i64 %10214, i64* %PC.i152
  %10215 = inttoptr i64 %10212 to i32*
  store i32 0, i32* %10215
  store %struct.Memory* %loadMem_47da62, %struct.Memory** %MEMORY
  %loadMem_47da69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10217 = getelementptr inbounds %struct.GPR, %struct.GPR* %10216, i32 0, i32 33
  %10218 = getelementptr inbounds %struct.Reg, %struct.Reg* %10217, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %10218 to i64*
  %10219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10220 = getelementptr inbounds %struct.GPR, %struct.GPR* %10219, i32 0, i32 11
  %10221 = getelementptr inbounds %struct.Reg, %struct.Reg* %10220, i32 0, i32 0
  %RDI.i150 = bitcast %union.anon* %10221 to i64*
  %10222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10223 = getelementptr inbounds %struct.GPR, %struct.GPR* %10222, i32 0, i32 15
  %10224 = getelementptr inbounds %struct.Reg, %struct.Reg* %10223, i32 0, i32 0
  %RBP.i151 = bitcast %union.anon* %10224 to i64*
  %10225 = load i64, i64* %RBP.i151
  %10226 = sub i64 %10225, 12
  %10227 = load i64, i64* %PC.i149
  %10228 = add i64 %10227, 3
  store i64 %10228, i64* %PC.i149
  %10229 = inttoptr i64 %10226 to i32*
  %10230 = load i32, i32* %10229
  %10231 = zext i32 %10230 to i64
  store i64 %10231, i64* %RDI.i150, align 8
  store %struct.Memory* %loadMem_47da69, %struct.Memory** %MEMORY
  %loadMem_47da6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10233 = getelementptr inbounds %struct.GPR, %struct.GPR* %10232, i32 0, i32 33
  %10234 = getelementptr inbounds %struct.Reg, %struct.Reg* %10233, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %10234 to i64*
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10236 = getelementptr inbounds %struct.GPR, %struct.GPR* %10235, i32 0, i32 9
  %10237 = getelementptr inbounds %struct.Reg, %struct.Reg* %10236, i32 0, i32 0
  %RSI.i147 = bitcast %union.anon* %10237 to i64*
  %10238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10239 = getelementptr inbounds %struct.GPR, %struct.GPR* %10238, i32 0, i32 15
  %10240 = getelementptr inbounds %struct.Reg, %struct.Reg* %10239, i32 0, i32 0
  %RBP.i148 = bitcast %union.anon* %10240 to i64*
  %10241 = load i64, i64* %RBP.i148
  %10242 = sub i64 %10241, 8
  %10243 = load i64, i64* %PC.i146
  %10244 = add i64 %10243, 3
  store i64 %10244, i64* %PC.i146
  %10245 = inttoptr i64 %10242 to i32*
  %10246 = load i32, i32* %10245
  %10247 = zext i32 %10246 to i64
  store i64 %10247, i64* %RSI.i147, align 8
  store %struct.Memory* %loadMem_47da6c, %struct.Memory** %MEMORY
  %loadMem1_47da6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10249 = getelementptr inbounds %struct.GPR, %struct.GPR* %10248, i32 0, i32 33
  %10250 = getelementptr inbounds %struct.Reg, %struct.Reg* %10249, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %10250 to i64*
  %10251 = load i64, i64* %PC.i145
  %10252 = add i64 %10251, -202415
  %10253 = load i64, i64* %PC.i145
  %10254 = add i64 %10253, 5
  %10255 = load i64, i64* %PC.i145
  %10256 = add i64 %10255, 5
  store i64 %10256, i64* %PC.i145
  %10257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10258 = load i64, i64* %10257, align 8
  %10259 = add i64 %10258, -8
  %10260 = inttoptr i64 %10259 to i64*
  store i64 %10254, i64* %10260
  store i64 %10259, i64* %10257, align 8
  %10261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10252, i64* %10261, align 8
  store %struct.Memory* %loadMem1_47da6f, %struct.Memory** %MEMORY
  %loadMem2_47da6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47da6f = load i64, i64* %3
  %call2_47da6f = call %struct.Memory* @sub_44c3c0.owl_does_defend(%struct.State* %0, i64 %loadPC_47da6f, %struct.Memory* %loadMem2_47da6f)
  store %struct.Memory* %call2_47da6f, %struct.Memory** %MEMORY
  %loadMem_47da74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10263 = getelementptr inbounds %struct.GPR, %struct.GPR* %10262, i32 0, i32 33
  %10264 = getelementptr inbounds %struct.Reg, %struct.Reg* %10263, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %10264 to i64*
  %10265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10266 = getelementptr inbounds %struct.GPR, %struct.GPR* %10265, i32 0, i32 7
  %10267 = getelementptr inbounds %struct.Reg, %struct.Reg* %10266, i32 0, i32 0
  %RDX.i144 = bitcast %union.anon* %10267 to i64*
  %10268 = load i64, i64* %PC.i143
  %10269 = add i64 %10268, 10
  store i64 %10269, i64* %PC.i143
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RDX.i144, align 8
  store %struct.Memory* %loadMem_47da74, %struct.Memory** %MEMORY
  %loadMem_47da7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10271 = getelementptr inbounds %struct.GPR, %struct.GPR* %10270, i32 0, i32 33
  %10272 = getelementptr inbounds %struct.Reg, %struct.Reg* %10271, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %10272 to i64*
  %10273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10274 = getelementptr inbounds %struct.GPR, %struct.GPR* %10273, i32 0, i32 1
  %10275 = getelementptr inbounds %struct.Reg, %struct.Reg* %10274, i32 0, i32 0
  %EAX.i141 = bitcast %union.anon* %10275 to i32*
  %10276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10277 = getelementptr inbounds %struct.GPR, %struct.GPR* %10276, i32 0, i32 15
  %10278 = getelementptr inbounds %struct.Reg, %struct.Reg* %10277, i32 0, i32 0
  %RBP.i142 = bitcast %union.anon* %10278 to i64*
  %10279 = load i64, i64* %RBP.i142
  %10280 = sub i64 %10279, 88
  %10281 = load i32, i32* %EAX.i141
  %10282 = zext i32 %10281 to i64
  %10283 = load i64, i64* %PC.i140
  %10284 = add i64 %10283, 3
  store i64 %10284, i64* %PC.i140
  %10285 = inttoptr i64 %10280 to i32*
  store i32 %10281, i32* %10285
  store %struct.Memory* %loadMem_47da7e, %struct.Memory** %MEMORY
  %loadMem_47da81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10287 = getelementptr inbounds %struct.GPR, %struct.GPR* %10286, i32 0, i32 33
  %10288 = getelementptr inbounds %struct.Reg, %struct.Reg* %10287, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %10288 to i64*
  %10289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10290 = getelementptr inbounds %struct.GPR, %struct.GPR* %10289, i32 0, i32 1
  %10291 = getelementptr inbounds %struct.Reg, %struct.Reg* %10290, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %10291 to i64*
  %10292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10293 = getelementptr inbounds %struct.GPR, %struct.GPR* %10292, i32 0, i32 15
  %10294 = getelementptr inbounds %struct.Reg, %struct.Reg* %10293, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %10294 to i64*
  %10295 = load i64, i64* %RBP.i139
  %10296 = sub i64 %10295, 88
  %10297 = load i64, i64* %PC.i137
  %10298 = add i64 %10297, 3
  store i64 %10298, i64* %PC.i137
  %10299 = inttoptr i64 %10296 to i32*
  %10300 = load i32, i32* %10299
  %10301 = zext i32 %10300 to i64
  store i64 %10301, i64* %RAX.i138, align 8
  store %struct.Memory* %loadMem_47da81, %struct.Memory** %MEMORY
  %loadMem_47da84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10303 = getelementptr inbounds %struct.GPR, %struct.GPR* %10302, i32 0, i32 33
  %10304 = getelementptr inbounds %struct.Reg, %struct.Reg* %10303, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %10304 to i64*
  %10305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10306 = getelementptr inbounds %struct.GPR, %struct.GPR* %10305, i32 0, i32 5
  %10307 = getelementptr inbounds %struct.Reg, %struct.Reg* %10306, i32 0, i32 0
  %RCX.i135 = bitcast %union.anon* %10307 to i64*
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10309 = getelementptr inbounds %struct.GPR, %struct.GPR* %10308, i32 0, i32 15
  %10310 = getelementptr inbounds %struct.Reg, %struct.Reg* %10309, i32 0, i32 0
  %RBP.i136 = bitcast %union.anon* %10310 to i64*
  %10311 = load i64, i64* %RBP.i136
  %10312 = sub i64 %10311, 8
  %10313 = load i64, i64* %PC.i134
  %10314 = add i64 %10313, 4
  store i64 %10314, i64* %PC.i134
  %10315 = inttoptr i64 %10312 to i32*
  %10316 = load i32, i32* %10315
  %10317 = sext i32 %10316 to i64
  store i64 %10317, i64* %RCX.i135, align 8
  store %struct.Memory* %loadMem_47da84, %struct.Memory** %MEMORY
  %loadMem_47da88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10319 = getelementptr inbounds %struct.GPR, %struct.GPR* %10318, i32 0, i32 33
  %10320 = getelementptr inbounds %struct.Reg, %struct.Reg* %10319, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %10320 to i64*
  %10321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10322 = getelementptr inbounds %struct.GPR, %struct.GPR* %10321, i32 0, i32 5
  %10323 = getelementptr inbounds %struct.Reg, %struct.Reg* %10322, i32 0, i32 0
  %RCX.i133 = bitcast %union.anon* %10323 to i64*
  %10324 = load i64, i64* %RCX.i133
  %10325 = load i64, i64* %PC.i132
  %10326 = add i64 %10325, 4
  store i64 %10326, i64* %PC.i132
  %10327 = sext i64 %10324 to i128
  %10328 = and i128 %10327, -18446744073709551616
  %10329 = zext i64 %10324 to i128
  %10330 = or i128 %10328, %10329
  %10331 = mul i128 76, %10330
  %10332 = trunc i128 %10331 to i64
  store i64 %10332, i64* %RCX.i133, align 8
  %10333 = sext i64 %10332 to i128
  %10334 = icmp ne i128 %10333, %10331
  %10335 = zext i1 %10334 to i8
  %10336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10335, i8* %10336, align 1
  %10337 = trunc i128 %10331 to i32
  %10338 = and i32 %10337, 255
  %10339 = call i32 @llvm.ctpop.i32(i32 %10338)
  %10340 = trunc i32 %10339 to i8
  %10341 = and i8 %10340, 1
  %10342 = xor i8 %10341, 1
  %10343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10342, i8* %10343, align 1
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10344, align 1
  %10345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10345, align 1
  %10346 = lshr i64 %10332, 63
  %10347 = trunc i64 %10346 to i8
  %10348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10347, i8* %10348, align 1
  %10349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10335, i8* %10349, align 1
  store %struct.Memory* %loadMem_47da88, %struct.Memory** %MEMORY
  %loadMem_47da8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10351 = getelementptr inbounds %struct.GPR, %struct.GPR* %10350, i32 0, i32 33
  %10352 = getelementptr inbounds %struct.Reg, %struct.Reg* %10351, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %10352 to i64*
  %10353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10354 = getelementptr inbounds %struct.GPR, %struct.GPR* %10353, i32 0, i32 5
  %10355 = getelementptr inbounds %struct.Reg, %struct.Reg* %10354, i32 0, i32 0
  %RCX.i130 = bitcast %union.anon* %10355 to i64*
  %10356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10357 = getelementptr inbounds %struct.GPR, %struct.GPR* %10356, i32 0, i32 7
  %10358 = getelementptr inbounds %struct.Reg, %struct.Reg* %10357, i32 0, i32 0
  %RDX.i131 = bitcast %union.anon* %10358 to i64*
  %10359 = load i64, i64* %RDX.i131
  %10360 = load i64, i64* %RCX.i130
  %10361 = load i64, i64* %PC.i129
  %10362 = add i64 %10361, 3
  store i64 %10362, i64* %PC.i129
  %10363 = add i64 %10360, %10359
  store i64 %10363, i64* %RDX.i131, align 8
  %10364 = icmp ult i64 %10363, %10359
  %10365 = icmp ult i64 %10363, %10360
  %10366 = or i1 %10364, %10365
  %10367 = zext i1 %10366 to i8
  %10368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10367, i8* %10368, align 1
  %10369 = trunc i64 %10363 to i32
  %10370 = and i32 %10369, 255
  %10371 = call i32 @llvm.ctpop.i32(i32 %10370)
  %10372 = trunc i32 %10371 to i8
  %10373 = and i8 %10372, 1
  %10374 = xor i8 %10373, 1
  %10375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10374, i8* %10375, align 1
  %10376 = xor i64 %10360, %10359
  %10377 = xor i64 %10376, %10363
  %10378 = lshr i64 %10377, 4
  %10379 = trunc i64 %10378 to i8
  %10380 = and i8 %10379, 1
  %10381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10380, i8* %10381, align 1
  %10382 = icmp eq i64 %10363, 0
  %10383 = zext i1 %10382 to i8
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10383, i8* %10384, align 1
  %10385 = lshr i64 %10363, 63
  %10386 = trunc i64 %10385 to i8
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10386, i8* %10387, align 1
  %10388 = lshr i64 %10359, 63
  %10389 = lshr i64 %10360, 63
  %10390 = xor i64 %10385, %10388
  %10391 = xor i64 %10385, %10389
  %10392 = add i64 %10390, %10391
  %10393 = icmp eq i64 %10392, 2
  %10394 = zext i1 %10393 to i8
  %10395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10394, i8* %10395, align 1
  store %struct.Memory* %loadMem_47da8c, %struct.Memory** %MEMORY
  %loadMem_47da8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10397 = getelementptr inbounds %struct.GPR, %struct.GPR* %10396, i32 0, i32 33
  %10398 = getelementptr inbounds %struct.Reg, %struct.Reg* %10397, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %10398 to i64*
  %10399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10400 = getelementptr inbounds %struct.GPR, %struct.GPR* %10399, i32 0, i32 1
  %10401 = getelementptr inbounds %struct.Reg, %struct.Reg* %10400, i32 0, i32 0
  %EAX.i127 = bitcast %union.anon* %10401 to i32*
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10403 = getelementptr inbounds %struct.GPR, %struct.GPR* %10402, i32 0, i32 7
  %10404 = getelementptr inbounds %struct.Reg, %struct.Reg* %10403, i32 0, i32 0
  %RDX.i128 = bitcast %union.anon* %10404 to i64*
  %10405 = load i32, i32* %EAX.i127
  %10406 = zext i32 %10405 to i64
  %10407 = load i64, i64* %RDX.i128
  %10408 = add i64 %10407, 52
  %10409 = load i64, i64* %PC.i126
  %10410 = add i64 %10409, 3
  store i64 %10410, i64* %PC.i126
  %10411 = inttoptr i64 %10408 to i32*
  %10412 = load i32, i32* %10411
  %10413 = sub i32 %10405, %10412
  %10414 = icmp ult i32 %10405, %10412
  %10415 = zext i1 %10414 to i8
  %10416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10415, i8* %10416, align 1
  %10417 = and i32 %10413, 255
  %10418 = call i32 @llvm.ctpop.i32(i32 %10417)
  %10419 = trunc i32 %10418 to i8
  %10420 = and i8 %10419, 1
  %10421 = xor i8 %10420, 1
  %10422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10421, i8* %10422, align 1
  %10423 = xor i32 %10412, %10405
  %10424 = xor i32 %10423, %10413
  %10425 = lshr i32 %10424, 4
  %10426 = trunc i32 %10425 to i8
  %10427 = and i8 %10426, 1
  %10428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10427, i8* %10428, align 1
  %10429 = icmp eq i32 %10413, 0
  %10430 = zext i1 %10429 to i8
  %10431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10430, i8* %10431, align 1
  %10432 = lshr i32 %10413, 31
  %10433 = trunc i32 %10432 to i8
  %10434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10433, i8* %10434, align 1
  %10435 = lshr i32 %10405, 31
  %10436 = lshr i32 %10412, 31
  %10437 = xor i32 %10436, %10435
  %10438 = xor i32 %10432, %10435
  %10439 = add i32 %10438, %10437
  %10440 = icmp eq i32 %10439, 2
  %10441 = zext i1 %10440 to i8
  %10442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10441, i8* %10442, align 1
  store %struct.Memory* %loadMem_47da8f, %struct.Memory** %MEMORY
  %loadMem_47da92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10444 = getelementptr inbounds %struct.GPR, %struct.GPR* %10443, i32 0, i32 33
  %10445 = getelementptr inbounds %struct.Reg, %struct.Reg* %10444, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %10445 to i64*
  %10446 = load i64, i64* %PC.i125
  %10447 = add i64 %10446, 54
  %10448 = load i64, i64* %PC.i125
  %10449 = add i64 %10448, 6
  %10450 = load i64, i64* %PC.i125
  %10451 = add i64 %10450, 6
  store i64 %10451, i64* %PC.i125
  %10452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10453 = load i8, i8* %10452, align 1
  %10454 = icmp ne i8 %10453, 0
  %10455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10456 = load i8, i8* %10455, align 1
  %10457 = icmp ne i8 %10456, 0
  %10458 = xor i1 %10454, %10457
  %10459 = zext i1 %10458 to i8
  store i8 %10459, i8* %BRANCH_TAKEN, align 1
  %10460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10461 = select i1 %10458, i64 %10447, i64 %10449
  store i64 %10461, i64* %10460, align 8
  store %struct.Memory* %loadMem_47da92, %struct.Memory** %MEMORY
  %loadBr_47da92 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47da92 = icmp eq i8 %loadBr_47da92, 1
  br i1 %cmpBr_47da92, label %block_.L_47dac8, label %block_47da98

block_47da98:                                     ; preds = %block_47da5e
  %loadMem_47da98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10463 = getelementptr inbounds %struct.GPR, %struct.GPR* %10462, i32 0, i32 33
  %10464 = getelementptr inbounds %struct.Reg, %struct.Reg* %10463, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %10464 to i64*
  %10465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10466 = getelementptr inbounds %struct.GPR, %struct.GPR* %10465, i32 0, i32 15
  %10467 = getelementptr inbounds %struct.Reg, %struct.Reg* %10466, i32 0, i32 0
  %RBP.i124 = bitcast %union.anon* %10467 to i64*
  %10468 = load i64, i64* %RBP.i124
  %10469 = sub i64 %10468, 88
  %10470 = load i64, i64* %PC.i123
  %10471 = add i64 %10470, 4
  store i64 %10471, i64* %PC.i123
  %10472 = inttoptr i64 %10469 to i32*
  %10473 = load i32, i32* %10472
  %10474 = sub i32 %10473, 2
  %10475 = icmp ult i32 %10473, 2
  %10476 = zext i1 %10475 to i8
  %10477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10476, i8* %10477, align 1
  %10478 = and i32 %10474, 255
  %10479 = call i32 @llvm.ctpop.i32(i32 %10478)
  %10480 = trunc i32 %10479 to i8
  %10481 = and i8 %10480, 1
  %10482 = xor i8 %10481, 1
  %10483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10482, i8* %10483, align 1
  %10484 = xor i32 %10473, 2
  %10485 = xor i32 %10484, %10474
  %10486 = lshr i32 %10485, 4
  %10487 = trunc i32 %10486 to i8
  %10488 = and i8 %10487, 1
  %10489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10488, i8* %10489, align 1
  %10490 = icmp eq i32 %10474, 0
  %10491 = zext i1 %10490 to i8
  %10492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10491, i8* %10492, align 1
  %10493 = lshr i32 %10474, 31
  %10494 = trunc i32 %10493 to i8
  %10495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10494, i8* %10495, align 1
  %10496 = lshr i32 %10473, 31
  %10497 = xor i32 %10493, %10496
  %10498 = add i32 %10497, %10496
  %10499 = icmp eq i32 %10498, 2
  %10500 = zext i1 %10499 to i8
  %10501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10500, i8* %10501, align 1
  store %struct.Memory* %loadMem_47da98, %struct.Memory** %MEMORY
  %loadMem_47da9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10503 = getelementptr inbounds %struct.GPR, %struct.GPR* %10502, i32 0, i32 33
  %10504 = getelementptr inbounds %struct.Reg, %struct.Reg* %10503, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %10504 to i64*
  %10505 = load i64, i64* %PC.i122
  %10506 = add i64 %10505, 25
  %10507 = load i64, i64* %PC.i122
  %10508 = add i64 %10507, 6
  %10509 = load i64, i64* %PC.i122
  %10510 = add i64 %10509, 6
  store i64 %10510, i64* %PC.i122
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10512 = load i8, i8* %10511, align 1
  %10513 = icmp eq i8 %10512, 0
  %10514 = zext i1 %10513 to i8
  store i8 %10514, i8* %BRANCH_TAKEN, align 1
  %10515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10516 = select i1 %10513, i64 %10506, i64 %10508
  store i64 %10516, i64* %10515, align 8
  store %struct.Memory* %loadMem_47da9c, %struct.Memory** %MEMORY
  %loadBr_47da9c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47da9c = icmp eq i8 %loadBr_47da9c, 1
  br i1 %cmpBr_47da9c, label %block_.L_47dab5, label %block_47daa2

block_47daa2:                                     ; preds = %block_47da98
  %loadMem_47daa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10518 = getelementptr inbounds %struct.GPR, %struct.GPR* %10517, i32 0, i32 33
  %10519 = getelementptr inbounds %struct.Reg, %struct.Reg* %10518, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %10519 to i64*
  %10520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10521 = getelementptr inbounds %struct.GPR, %struct.GPR* %10520, i32 0, i32 11
  %10522 = getelementptr inbounds %struct.Reg, %struct.Reg* %10521, i32 0, i32 0
  %RDI.i120 = bitcast %union.anon* %10522 to i64*
  %10523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10524 = getelementptr inbounds %struct.GPR, %struct.GPR* %10523, i32 0, i32 15
  %10525 = getelementptr inbounds %struct.Reg, %struct.Reg* %10524, i32 0, i32 0
  %RBP.i121 = bitcast %union.anon* %10525 to i64*
  %10526 = load i64, i64* %RBP.i121
  %10527 = sub i64 %10526, 12
  %10528 = load i64, i64* %PC.i119
  %10529 = add i64 %10528, 3
  store i64 %10529, i64* %PC.i119
  %10530 = inttoptr i64 %10527 to i32*
  %10531 = load i32, i32* %10530
  %10532 = zext i32 %10531 to i64
  store i64 %10532, i64* %RDI.i120, align 8
  store %struct.Memory* %loadMem_47daa2, %struct.Memory** %MEMORY
  %loadMem_47daa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10534 = getelementptr inbounds %struct.GPR, %struct.GPR* %10533, i32 0, i32 33
  %10535 = getelementptr inbounds %struct.Reg, %struct.Reg* %10534, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %10535 to i64*
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10537 = getelementptr inbounds %struct.GPR, %struct.GPR* %10536, i32 0, i32 9
  %10538 = getelementptr inbounds %struct.Reg, %struct.Reg* %10537, i32 0, i32 0
  %RSI.i117 = bitcast %union.anon* %10538 to i64*
  %10539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10540 = getelementptr inbounds %struct.GPR, %struct.GPR* %10539, i32 0, i32 15
  %10541 = getelementptr inbounds %struct.Reg, %struct.Reg* %10540, i32 0, i32 0
  %RBP.i118 = bitcast %union.anon* %10541 to i64*
  %10542 = load i64, i64* %RBP.i118
  %10543 = sub i64 %10542, 8
  %10544 = load i64, i64* %PC.i116
  %10545 = add i64 %10544, 3
  store i64 %10545, i64* %PC.i116
  %10546 = inttoptr i64 %10543 to i32*
  %10547 = load i32, i32* %10546
  %10548 = zext i32 %10547 to i64
  store i64 %10548, i64* %RSI.i117, align 8
  store %struct.Memory* %loadMem_47daa5, %struct.Memory** %MEMORY
  %loadMem_47daa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10550 = getelementptr inbounds %struct.GPR, %struct.GPR* %10549, i32 0, i32 33
  %10551 = getelementptr inbounds %struct.Reg, %struct.Reg* %10550, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %10551 to i64*
  %10552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10553 = getelementptr inbounds %struct.GPR, %struct.GPR* %10552, i32 0, i32 7
  %10554 = getelementptr inbounds %struct.Reg, %struct.Reg* %10553, i32 0, i32 0
  %RDX.i114 = bitcast %union.anon* %10554 to i64*
  %10555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10556 = getelementptr inbounds %struct.GPR, %struct.GPR* %10555, i32 0, i32 15
  %10557 = getelementptr inbounds %struct.Reg, %struct.Reg* %10556, i32 0, i32 0
  %RBP.i115 = bitcast %union.anon* %10557 to i64*
  %10558 = load i64, i64* %RBP.i115
  %10559 = sub i64 %10558, 84
  %10560 = load i64, i64* %PC.i113
  %10561 = add i64 %10560, 3
  store i64 %10561, i64* %PC.i113
  %10562 = inttoptr i64 %10559 to i32*
  %10563 = load i32, i32* %10562
  %10564 = zext i32 %10563 to i64
  store i64 %10564, i64* %RDX.i114, align 8
  store %struct.Memory* %loadMem_47daa8, %struct.Memory** %MEMORY
  %loadMem1_47daab = load %struct.Memory*, %struct.Memory** %MEMORY
  %10565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10566 = getelementptr inbounds %struct.GPR, %struct.GPR* %10565, i32 0, i32 33
  %10567 = getelementptr inbounds %struct.Reg, %struct.Reg* %10566, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %10567 to i64*
  %10568 = load i64, i64* %PC.i112
  %10569 = add i64 %10568, -301259
  %10570 = load i64, i64* %PC.i112
  %10571 = add i64 %10570, 5
  %10572 = load i64, i64* %PC.i112
  %10573 = add i64 %10572, 5
  store i64 %10573, i64* %PC.i112
  %10574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10575 = load i64, i64* %10574, align 8
  %10576 = add i64 %10575, -8
  %10577 = inttoptr i64 %10576 to i64*
  store i64 %10571, i64* %10577
  store i64 %10576, i64* %10574, align 8
  %10578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10569, i64* %10578, align 8
  store %struct.Memory* %loadMem1_47daab, %struct.Memory** %MEMORY
  %loadMem2_47daab = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47daab = load i64, i64* %3
  %call2_47daab = call %struct.Memory* @sub_4341e0.add_loss_move(%struct.State* %0, i64 %loadPC_47daab, %struct.Memory* %loadMem2_47daab)
  store %struct.Memory* %call2_47daab, %struct.Memory** %MEMORY
  %loadMem_47dab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10580 = getelementptr inbounds %struct.GPR, %struct.GPR* %10579, i32 0, i32 33
  %10581 = getelementptr inbounds %struct.Reg, %struct.Reg* %10580, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %10581 to i64*
  %10582 = load i64, i64* %PC.i111
  %10583 = add i64 %10582, 19
  %10584 = load i64, i64* %PC.i111
  %10585 = add i64 %10584, 5
  store i64 %10585, i64* %PC.i111
  %10586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10583, i64* %10586, align 8
  store %struct.Memory* %loadMem_47dab0, %struct.Memory** %MEMORY
  br label %block_.L_47dac3

block_.L_47dab5:                                  ; preds = %block_47da98
  %loadMem_47dab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10588 = getelementptr inbounds %struct.GPR, %struct.GPR* %10587, i32 0, i32 33
  %10589 = getelementptr inbounds %struct.Reg, %struct.Reg* %10588, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %10589 to i64*
  %10590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10591 = getelementptr inbounds %struct.GPR, %struct.GPR* %10590, i32 0, i32 11
  %10592 = getelementptr inbounds %struct.Reg, %struct.Reg* %10591, i32 0, i32 0
  %RDI.i109 = bitcast %union.anon* %10592 to i64*
  %10593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10594 = getelementptr inbounds %struct.GPR, %struct.GPR* %10593, i32 0, i32 15
  %10595 = getelementptr inbounds %struct.Reg, %struct.Reg* %10594, i32 0, i32 0
  %RBP.i110 = bitcast %union.anon* %10595 to i64*
  %10596 = load i64, i64* %RBP.i110
  %10597 = sub i64 %10596, 12
  %10598 = load i64, i64* %PC.i108
  %10599 = add i64 %10598, 3
  store i64 %10599, i64* %PC.i108
  %10600 = inttoptr i64 %10597 to i32*
  %10601 = load i32, i32* %10600
  %10602 = zext i32 %10601 to i64
  store i64 %10602, i64* %RDI.i109, align 8
  store %struct.Memory* %loadMem_47dab5, %struct.Memory** %MEMORY
  %loadMem_47dab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10604 = getelementptr inbounds %struct.GPR, %struct.GPR* %10603, i32 0, i32 33
  %10605 = getelementptr inbounds %struct.Reg, %struct.Reg* %10604, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %10605 to i64*
  %10606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10607 = getelementptr inbounds %struct.GPR, %struct.GPR* %10606, i32 0, i32 9
  %10608 = getelementptr inbounds %struct.Reg, %struct.Reg* %10607, i32 0, i32 0
  %RSI.i106 = bitcast %union.anon* %10608 to i64*
  %10609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10610 = getelementptr inbounds %struct.GPR, %struct.GPR* %10609, i32 0, i32 15
  %10611 = getelementptr inbounds %struct.Reg, %struct.Reg* %10610, i32 0, i32 0
  %RBP.i107 = bitcast %union.anon* %10611 to i64*
  %10612 = load i64, i64* %RBP.i107
  %10613 = sub i64 %10612, 8
  %10614 = load i64, i64* %PC.i105
  %10615 = add i64 %10614, 3
  store i64 %10615, i64* %PC.i105
  %10616 = inttoptr i64 %10613 to i32*
  %10617 = load i32, i32* %10616
  %10618 = zext i32 %10617 to i64
  store i64 %10618, i64* %RSI.i106, align 8
  store %struct.Memory* %loadMem_47dab8, %struct.Memory** %MEMORY
  %loadMem_47dabb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10620 = getelementptr inbounds %struct.GPR, %struct.GPR* %10619, i32 0, i32 33
  %10621 = getelementptr inbounds %struct.Reg, %struct.Reg* %10620, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %10621 to i64*
  %10622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10623 = getelementptr inbounds %struct.GPR, %struct.GPR* %10622, i32 0, i32 7
  %10624 = getelementptr inbounds %struct.Reg, %struct.Reg* %10623, i32 0, i32 0
  %RDX.i103 = bitcast %union.anon* %10624 to i64*
  %10625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10626 = getelementptr inbounds %struct.GPR, %struct.GPR* %10625, i32 0, i32 15
  %10627 = getelementptr inbounds %struct.Reg, %struct.Reg* %10626, i32 0, i32 0
  %RBP.i104 = bitcast %union.anon* %10627 to i64*
  %10628 = load i64, i64* %RBP.i104
  %10629 = sub i64 %10628, 88
  %10630 = load i64, i64* %PC.i102
  %10631 = add i64 %10630, 3
  store i64 %10631, i64* %PC.i102
  %10632 = inttoptr i64 %10629 to i32*
  %10633 = load i32, i32* %10632
  %10634 = zext i32 %10633 to i64
  store i64 %10634, i64* %RDX.i103, align 8
  store %struct.Memory* %loadMem_47dabb, %struct.Memory** %MEMORY
  %loadMem1_47dabe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10636 = getelementptr inbounds %struct.GPR, %struct.GPR* %10635, i32 0, i32 33
  %10637 = getelementptr inbounds %struct.Reg, %struct.Reg* %10636, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %10637 to i64*
  %10638 = load i64, i64* %PC.i101
  %10639 = add i64 %10638, -299806
  %10640 = load i64, i64* %PC.i101
  %10641 = add i64 %10640, 5
  %10642 = load i64, i64* %PC.i101
  %10643 = add i64 %10642, 5
  store i64 %10643, i64* %PC.i101
  %10644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10645 = load i64, i64* %10644, align 8
  %10646 = add i64 %10645, -8
  %10647 = inttoptr i64 %10646 to i64*
  store i64 %10641, i64* %10647
  store i64 %10646, i64* %10644, align 8
  %10648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10639, i64* %10648, align 8
  store %struct.Memory* %loadMem1_47dabe, %struct.Memory** %MEMORY
  %loadMem2_47dabe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47dabe = load i64, i64* %3
  %call2_47dabe = call %struct.Memory* @sub_4347a0.add_owl_defense_move(%struct.State* %0, i64 %loadPC_47dabe, %struct.Memory* %loadMem2_47dabe)
  store %struct.Memory* %call2_47dabe, %struct.Memory** %MEMORY
  br label %block_.L_47dac3

block_.L_47dac3:                                  ; preds = %block_.L_47dab5, %block_47daa2
  %loadMem_47dac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10650 = getelementptr inbounds %struct.GPR, %struct.GPR* %10649, i32 0, i32 33
  %10651 = getelementptr inbounds %struct.Reg, %struct.Reg* %10650, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %10651 to i64*
  %10652 = load i64, i64* %PC.i100
  %10653 = add i64 %10652, 5
  %10654 = load i64, i64* %PC.i100
  %10655 = add i64 %10654, 5
  store i64 %10655, i64* %PC.i100
  %10656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10653, i64* %10656, align 8
  store %struct.Memory* %loadMem_47dac3, %struct.Memory** %MEMORY
  br label %block_.L_47dac8

block_.L_47dac8:                                  ; preds = %block_.L_47dac3, %block_47da5e
  %loadMem_47dac8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10658 = getelementptr inbounds %struct.GPR, %struct.GPR* %10657, i32 0, i32 33
  %10659 = getelementptr inbounds %struct.Reg, %struct.Reg* %10658, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %10659 to i64*
  %10660 = load i64, i64* %PC.i99
  %10661 = add i64 %10660, 162
  %10662 = load i64, i64* %PC.i99
  %10663 = add i64 %10662, 5
  store i64 %10663, i64* %PC.i99
  %10664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10661, i64* %10664, align 8
  store %struct.Memory* %loadMem_47dac8, %struct.Memory** %MEMORY
  br label %block_.L_47db6a

block_.L_47dacd:                                  ; preds = %block_47da4a, %block_47da35
  %loadMem_47dacd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10666 = getelementptr inbounds %struct.GPR, %struct.GPR* %10665, i32 0, i32 33
  %10667 = getelementptr inbounds %struct.Reg, %struct.Reg* %10666, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %10667 to i64*
  %10668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10669 = getelementptr inbounds %struct.GPR, %struct.GPR* %10668, i32 0, i32 1
  %10670 = getelementptr inbounds %struct.Reg, %struct.Reg* %10669, i32 0, i32 0
  %RAX.i97 = bitcast %union.anon* %10670 to i64*
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10672 = getelementptr inbounds %struct.GPR, %struct.GPR* %10671, i32 0, i32 15
  %10673 = getelementptr inbounds %struct.Reg, %struct.Reg* %10672, i32 0, i32 0
  %RBP.i98 = bitcast %union.anon* %10673 to i64*
  %10674 = load i64, i64* %RBP.i98
  %10675 = sub i64 %10674, 8
  %10676 = load i64, i64* %PC.i96
  %10677 = add i64 %10676, 4
  store i64 %10677, i64* %PC.i96
  %10678 = inttoptr i64 %10675 to i32*
  %10679 = load i32, i32* %10678
  %10680 = sext i32 %10679 to i64
  store i64 %10680, i64* %RAX.i97, align 8
  store %struct.Memory* %loadMem_47dacd, %struct.Memory** %MEMORY
  %loadMem_47dad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10682 = getelementptr inbounds %struct.GPR, %struct.GPR* %10681, i32 0, i32 33
  %10683 = getelementptr inbounds %struct.Reg, %struct.Reg* %10682, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %10683 to i64*
  %10684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10685 = getelementptr inbounds %struct.GPR, %struct.GPR* %10684, i32 0, i32 1
  %10686 = getelementptr inbounds %struct.Reg, %struct.Reg* %10685, i32 0, i32 0
  %RAX.i94 = bitcast %union.anon* %10686 to i64*
  %10687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10688 = getelementptr inbounds %struct.GPR, %struct.GPR* %10687, i32 0, i32 5
  %10689 = getelementptr inbounds %struct.Reg, %struct.Reg* %10688, i32 0, i32 0
  %RCX.i95 = bitcast %union.anon* %10689 to i64*
  %10690 = load i64, i64* %RAX.i94
  %10691 = add i64 %10690, 12099168
  %10692 = load i64, i64* %PC.i93
  %10693 = add i64 %10692, 8
  store i64 %10693, i64* %PC.i93
  %10694 = inttoptr i64 %10691 to i8*
  %10695 = load i8, i8* %10694
  %10696 = zext i8 %10695 to i64
  store i64 %10696, i64* %RCX.i95, align 8
  store %struct.Memory* %loadMem_47dad1, %struct.Memory** %MEMORY
  %loadMem_47dad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10698 = getelementptr inbounds %struct.GPR, %struct.GPR* %10697, i32 0, i32 33
  %10699 = getelementptr inbounds %struct.Reg, %struct.Reg* %10698, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %10699 to i64*
  %10700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10701 = getelementptr inbounds %struct.GPR, %struct.GPR* %10700, i32 0, i32 5
  %10702 = getelementptr inbounds %struct.Reg, %struct.Reg* %10701, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %10702 to i32*
  %10703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10704 = getelementptr inbounds %struct.GPR, %struct.GPR* %10703, i32 0, i32 15
  %10705 = getelementptr inbounds %struct.Reg, %struct.Reg* %10704, i32 0, i32 0
  %RBP.i92 = bitcast %union.anon* %10705 to i64*
  %10706 = load i32, i32* %ECX.i
  %10707 = zext i32 %10706 to i64
  %10708 = load i64, i64* %RBP.i92
  %10709 = sub i64 %10708, 4
  %10710 = load i64, i64* %PC.i91
  %10711 = add i64 %10710, 3
  store i64 %10711, i64* %PC.i91
  %10712 = inttoptr i64 %10709 to i32*
  %10713 = load i32, i32* %10712
  %10714 = sub i32 %10706, %10713
  %10715 = icmp ult i32 %10706, %10713
  %10716 = zext i1 %10715 to i8
  %10717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10716, i8* %10717, align 1
  %10718 = and i32 %10714, 255
  %10719 = call i32 @llvm.ctpop.i32(i32 %10718)
  %10720 = trunc i32 %10719 to i8
  %10721 = and i8 %10720, 1
  %10722 = xor i8 %10721, 1
  %10723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10722, i8* %10723, align 1
  %10724 = xor i32 %10713, %10706
  %10725 = xor i32 %10724, %10714
  %10726 = lshr i32 %10725, 4
  %10727 = trunc i32 %10726 to i8
  %10728 = and i8 %10727, 1
  %10729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10728, i8* %10729, align 1
  %10730 = icmp eq i32 %10714, 0
  %10731 = zext i1 %10730 to i8
  %10732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10731, i8* %10732, align 1
  %10733 = lshr i32 %10714, 31
  %10734 = trunc i32 %10733 to i8
  %10735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10734, i8* %10735, align 1
  %10736 = lshr i32 %10706, 31
  %10737 = lshr i32 %10713, 31
  %10738 = xor i32 %10737, %10736
  %10739 = xor i32 %10733, %10736
  %10740 = add i32 %10739, %10738
  %10741 = icmp eq i32 %10740, 2
  %10742 = zext i1 %10741 to i8
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10742, i8* %10743, align 1
  store %struct.Memory* %loadMem_47dad9, %struct.Memory** %MEMORY
  %loadMem_47dadc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10745 = getelementptr inbounds %struct.GPR, %struct.GPR* %10744, i32 0, i32 33
  %10746 = getelementptr inbounds %struct.Reg, %struct.Reg* %10745, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %10746 to i64*
  %10747 = load i64, i64* %PC.i90
  %10748 = add i64 %10747, 137
  %10749 = load i64, i64* %PC.i90
  %10750 = add i64 %10749, 6
  %10751 = load i64, i64* %PC.i90
  %10752 = add i64 %10751, 6
  store i64 %10752, i64* %PC.i90
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10754 = load i8, i8* %10753, align 1
  store i8 %10754, i8* %BRANCH_TAKEN, align 1
  %10755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10756 = icmp ne i8 %10754, 0
  %10757 = select i1 %10756, i64 %10748, i64 %10750
  store i64 %10757, i64* %10755, align 8
  store %struct.Memory* %loadMem_47dadc, %struct.Memory** %MEMORY
  %loadBr_47dadc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47dadc = icmp eq i8 %loadBr_47dadc, 1
  br i1 %cmpBr_47dadc, label %block_.L_47db65, label %block_47dae2

block_47dae2:                                     ; preds = %block_.L_47dacd
  %loadMem_47dae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10759 = getelementptr inbounds %struct.GPR, %struct.GPR* %10758, i32 0, i32 33
  %10760 = getelementptr inbounds %struct.Reg, %struct.Reg* %10759, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %10760 to i64*
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10762 = getelementptr inbounds %struct.GPR, %struct.GPR* %10761, i32 0, i32 11
  %10763 = getelementptr inbounds %struct.Reg, %struct.Reg* %10762, i32 0, i32 0
  %RDI.i88 = bitcast %union.anon* %10763 to i64*
  %10764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10765 = getelementptr inbounds %struct.GPR, %struct.GPR* %10764, i32 0, i32 15
  %10766 = getelementptr inbounds %struct.Reg, %struct.Reg* %10765, i32 0, i32 0
  %RBP.i89 = bitcast %union.anon* %10766 to i64*
  %10767 = load i64, i64* %RBP.i89
  %10768 = sub i64 %10767, 12
  %10769 = load i64, i64* %PC.i87
  %10770 = add i64 %10769, 3
  store i64 %10770, i64* %PC.i87
  %10771 = inttoptr i64 %10768 to i32*
  %10772 = load i32, i32* %10771
  %10773 = zext i32 %10772 to i64
  store i64 %10773, i64* %RDI.i88, align 8
  store %struct.Memory* %loadMem_47dae2, %struct.Memory** %MEMORY
  %loadMem_47dae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10775 = getelementptr inbounds %struct.GPR, %struct.GPR* %10774, i32 0, i32 33
  %10776 = getelementptr inbounds %struct.Reg, %struct.Reg* %10775, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %10776 to i64*
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10778 = getelementptr inbounds %struct.GPR, %struct.GPR* %10777, i32 0, i32 9
  %10779 = getelementptr inbounds %struct.Reg, %struct.Reg* %10778, i32 0, i32 0
  %RSI.i85 = bitcast %union.anon* %10779 to i64*
  %10780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10781 = getelementptr inbounds %struct.GPR, %struct.GPR* %10780, i32 0, i32 15
  %10782 = getelementptr inbounds %struct.Reg, %struct.Reg* %10781, i32 0, i32 0
  %RBP.i86 = bitcast %union.anon* %10782 to i64*
  %10783 = load i64, i64* %RBP.i86
  %10784 = sub i64 %10783, 8
  %10785 = load i64, i64* %PC.i84
  %10786 = add i64 %10785, 3
  store i64 %10786, i64* %PC.i84
  %10787 = inttoptr i64 %10784 to i32*
  %10788 = load i32, i32* %10787
  %10789 = zext i32 %10788 to i64
  store i64 %10789, i64* %RSI.i85, align 8
  store %struct.Memory* %loadMem_47dae5, %struct.Memory** %MEMORY
  %loadMem1_47dae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10791 = getelementptr inbounds %struct.GPR, %struct.GPR* %10790, i32 0, i32 33
  %10792 = getelementptr inbounds %struct.Reg, %struct.Reg* %10791, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %10792 to i64*
  %10793 = load i64, i64* %PC.i83
  %10794 = add i64 %10793, -310072
  %10795 = load i64, i64* %PC.i83
  %10796 = add i64 %10795, 5
  %10797 = load i64, i64* %PC.i83
  %10798 = add i64 %10797, 5
  store i64 %10798, i64* %PC.i83
  %10799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10800 = load i64, i64* %10799, align 8
  %10801 = add i64 %10800, -8
  %10802 = inttoptr i64 %10801 to i64*
  store i64 %10796, i64* %10802
  store i64 %10801, i64* %10799, align 8
  %10803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10794, i64* %10803, align 8
  store %struct.Memory* %loadMem1_47dae8, %struct.Memory** %MEMORY
  %loadMem2_47dae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47dae8 = load i64, i64* %3
  %call2_47dae8 = call %struct.Memory* @sub_431fb0.owl_attack_move_reason_known(%struct.State* %0, i64 %loadPC_47dae8, %struct.Memory* %loadMem2_47dae8)
  store %struct.Memory* %call2_47dae8, %struct.Memory** %MEMORY
  %loadMem_47daed = load %struct.Memory*, %struct.Memory** %MEMORY
  %10804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10805 = getelementptr inbounds %struct.GPR, %struct.GPR* %10804, i32 0, i32 33
  %10806 = getelementptr inbounds %struct.Reg, %struct.Reg* %10805, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %10806 to i64*
  %10807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10808 = getelementptr inbounds %struct.GPR, %struct.GPR* %10807, i32 0, i32 1
  %10809 = getelementptr inbounds %struct.Reg, %struct.Reg* %10808, i32 0, i32 0
  %EAX.i82 = bitcast %union.anon* %10809 to i32*
  %10810 = load i32, i32* %EAX.i82
  %10811 = zext i32 %10810 to i64
  %10812 = load i64, i64* %PC.i81
  %10813 = add i64 %10812, 3
  store i64 %10813, i64* %PC.i81
  %10814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10814, align 1
  %10815 = and i32 %10810, 255
  %10816 = call i32 @llvm.ctpop.i32(i32 %10815)
  %10817 = trunc i32 %10816 to i8
  %10818 = and i8 %10817, 1
  %10819 = xor i8 %10818, 1
  %10820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10819, i8* %10820, align 1
  %10821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10821, align 1
  %10822 = icmp eq i32 %10810, 0
  %10823 = zext i1 %10822 to i8
  %10824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10823, i8* %10824, align 1
  %10825 = lshr i32 %10810, 31
  %10826 = trunc i32 %10825 to i8
  %10827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10826, i8* %10827, align 1
  %10828 = lshr i32 %10810, 31
  %10829 = xor i32 %10825, %10828
  %10830 = add i32 %10829, %10828
  %10831 = icmp eq i32 %10830, 2
  %10832 = zext i1 %10831 to i8
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10832, i8* %10833, align 1
  store %struct.Memory* %loadMem_47daed, %struct.Memory** %MEMORY
  %loadMem_47daf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10835 = getelementptr inbounds %struct.GPR, %struct.GPR* %10834, i32 0, i32 33
  %10836 = getelementptr inbounds %struct.Reg, %struct.Reg* %10835, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %10836 to i64*
  %10837 = load i64, i64* %PC.i80
  %10838 = add i64 %10837, 117
  %10839 = load i64, i64* %PC.i80
  %10840 = add i64 %10839, 6
  %10841 = load i64, i64* %PC.i80
  %10842 = add i64 %10841, 6
  store i64 %10842, i64* %PC.i80
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10844 = load i8, i8* %10843, align 1
  %10845 = icmp eq i8 %10844, 0
  %10846 = zext i1 %10845 to i8
  store i8 %10846, i8* %BRANCH_TAKEN, align 1
  %10847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10848 = select i1 %10845, i64 %10838, i64 %10840
  store i64 %10848, i64* %10847, align 8
  store %struct.Memory* %loadMem_47daf0, %struct.Memory** %MEMORY
  %loadBr_47daf0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47daf0 = icmp eq i8 %loadBr_47daf0, 1
  br i1 %cmpBr_47daf0, label %block_.L_47db65, label %block_47daf6

block_47daf6:                                     ; preds = %block_47dae2
  %loadMem_47daf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10850 = getelementptr inbounds %struct.GPR, %struct.GPR* %10849, i32 0, i32 33
  %10851 = getelementptr inbounds %struct.Reg, %struct.Reg* %10850, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %10851 to i64*
  %10852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10853 = getelementptr inbounds %struct.GPR, %struct.GPR* %10852, i32 0, i32 7
  %10854 = getelementptr inbounds %struct.Reg, %struct.Reg* %10853, i32 0, i32 0
  %RDX.i78 = bitcast %union.anon* %10854 to i64*
  %10855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10856 = getelementptr inbounds %struct.GPR, %struct.GPR* %10855, i32 0, i32 15
  %10857 = getelementptr inbounds %struct.Reg, %struct.Reg* %10856, i32 0, i32 0
  %RBP.i79 = bitcast %union.anon* %10857 to i64*
  %10858 = load i64, i64* %RBP.i79
  %10859 = sub i64 %10858, 92
  %10860 = load i64, i64* %PC.i77
  %10861 = add i64 %10860, 4
  store i64 %10861, i64* %PC.i77
  store i64 %10859, i64* %RDX.i78, align 8
  store %struct.Memory* %loadMem_47daf6, %struct.Memory** %MEMORY
  %loadMem_47dafa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10863 = getelementptr inbounds %struct.GPR, %struct.GPR* %10862, i32 0, i32 33
  %10864 = getelementptr inbounds %struct.Reg, %struct.Reg* %10863, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %10864 to i64*
  %10865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10866 = getelementptr inbounds %struct.GPR, %struct.GPR* %10865, i32 0, i32 15
  %10867 = getelementptr inbounds %struct.Reg, %struct.Reg* %10866, i32 0, i32 0
  %RBP.i76 = bitcast %union.anon* %10867 to i64*
  %10868 = load i64, i64* %RBP.i76
  %10869 = sub i64 %10868, 92
  %10870 = load i64, i64* %PC.i75
  %10871 = add i64 %10870, 7
  store i64 %10871, i64* %PC.i75
  %10872 = inttoptr i64 %10869 to i32*
  store i32 0, i32* %10872
  store %struct.Memory* %loadMem_47dafa, %struct.Memory** %MEMORY
  %loadMem_47db01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10874 = getelementptr inbounds %struct.GPR, %struct.GPR* %10873, i32 0, i32 33
  %10875 = getelementptr inbounds %struct.Reg, %struct.Reg* %10874, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %10875 to i64*
  %10876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10877 = getelementptr inbounds %struct.GPR, %struct.GPR* %10876, i32 0, i32 11
  %10878 = getelementptr inbounds %struct.Reg, %struct.Reg* %10877, i32 0, i32 0
  %RDI.i73 = bitcast %union.anon* %10878 to i64*
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10880 = getelementptr inbounds %struct.GPR, %struct.GPR* %10879, i32 0, i32 15
  %10881 = getelementptr inbounds %struct.Reg, %struct.Reg* %10880, i32 0, i32 0
  %RBP.i74 = bitcast %union.anon* %10881 to i64*
  %10882 = load i64, i64* %RBP.i74
  %10883 = sub i64 %10882, 12
  %10884 = load i64, i64* %PC.i72
  %10885 = add i64 %10884, 3
  store i64 %10885, i64* %PC.i72
  %10886 = inttoptr i64 %10883 to i32*
  %10887 = load i32, i32* %10886
  %10888 = zext i32 %10887 to i64
  store i64 %10888, i64* %RDI.i73, align 8
  store %struct.Memory* %loadMem_47db01, %struct.Memory** %MEMORY
  %loadMem_47db04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10890 = getelementptr inbounds %struct.GPR, %struct.GPR* %10889, i32 0, i32 33
  %10891 = getelementptr inbounds %struct.Reg, %struct.Reg* %10890, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %10891 to i64*
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10893 = getelementptr inbounds %struct.GPR, %struct.GPR* %10892, i32 0, i32 9
  %10894 = getelementptr inbounds %struct.Reg, %struct.Reg* %10893, i32 0, i32 0
  %RSI.i70 = bitcast %union.anon* %10894 to i64*
  %10895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10896 = getelementptr inbounds %struct.GPR, %struct.GPR* %10895, i32 0, i32 15
  %10897 = getelementptr inbounds %struct.Reg, %struct.Reg* %10896, i32 0, i32 0
  %RBP.i71 = bitcast %union.anon* %10897 to i64*
  %10898 = load i64, i64* %RBP.i71
  %10899 = sub i64 %10898, 8
  %10900 = load i64, i64* %PC.i69
  %10901 = add i64 %10900, 3
  store i64 %10901, i64* %PC.i69
  %10902 = inttoptr i64 %10899 to i32*
  %10903 = load i32, i32* %10902
  %10904 = zext i32 %10903 to i64
  store i64 %10904, i64* %RSI.i70, align 8
  store %struct.Memory* %loadMem_47db04, %struct.Memory** %MEMORY
  %loadMem1_47db07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10906 = getelementptr inbounds %struct.GPR, %struct.GPR* %10905, i32 0, i32 33
  %10907 = getelementptr inbounds %struct.Reg, %struct.Reg* %10906, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %10907 to i64*
  %10908 = load i64, i64* %PC.i68
  %10909 = add i64 %10908, -200663
  %10910 = load i64, i64* %PC.i68
  %10911 = add i64 %10910, 5
  %10912 = load i64, i64* %PC.i68
  %10913 = add i64 %10912, 5
  store i64 %10913, i64* %PC.i68
  %10914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10915 = load i64, i64* %10914, align 8
  %10916 = add i64 %10915, -8
  %10917 = inttoptr i64 %10916 to i64*
  store i64 %10911, i64* %10917
  store i64 %10916, i64* %10914, align 8
  %10918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10909, i64* %10918, align 8
  store %struct.Memory* %loadMem1_47db07, %struct.Memory** %MEMORY
  %loadMem2_47db07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47db07 = load i64, i64* %3
  %call2_47db07 = call %struct.Memory* @sub_44cb30.owl_does_attack(%struct.State* %0, i64 %loadPC_47db07, %struct.Memory* %loadMem2_47db07)
  store %struct.Memory* %call2_47db07, %struct.Memory** %MEMORY
  %loadMem_47db0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10920 = getelementptr inbounds %struct.GPR, %struct.GPR* %10919, i32 0, i32 33
  %10921 = getelementptr inbounds %struct.Reg, %struct.Reg* %10920, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %10921 to i64*
  %10922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10923 = getelementptr inbounds %struct.GPR, %struct.GPR* %10922, i32 0, i32 7
  %10924 = getelementptr inbounds %struct.Reg, %struct.Reg* %10923, i32 0, i32 0
  %RDX.i67 = bitcast %union.anon* %10924 to i64*
  %10925 = load i64, i64* %PC.i66
  %10926 = add i64 %10925, 10
  store i64 %10926, i64* %PC.i66
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RDX.i67, align 8
  store %struct.Memory* %loadMem_47db0c, %struct.Memory** %MEMORY
  %loadMem_47db16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10928 = getelementptr inbounds %struct.GPR, %struct.GPR* %10927, i32 0, i32 33
  %10929 = getelementptr inbounds %struct.Reg, %struct.Reg* %10928, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %10929 to i64*
  %10930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10931 = getelementptr inbounds %struct.GPR, %struct.GPR* %10930, i32 0, i32 1
  %10932 = getelementptr inbounds %struct.Reg, %struct.Reg* %10931, i32 0, i32 0
  %EAX.i64 = bitcast %union.anon* %10932 to i32*
  %10933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10934 = getelementptr inbounds %struct.GPR, %struct.GPR* %10933, i32 0, i32 15
  %10935 = getelementptr inbounds %struct.Reg, %struct.Reg* %10934, i32 0, i32 0
  %RBP.i65 = bitcast %union.anon* %10935 to i64*
  %10936 = load i64, i64* %RBP.i65
  %10937 = sub i64 %10936, 96
  %10938 = load i32, i32* %EAX.i64
  %10939 = zext i32 %10938 to i64
  %10940 = load i64, i64* %PC.i63
  %10941 = add i64 %10940, 3
  store i64 %10941, i64* %PC.i63
  %10942 = inttoptr i64 %10937 to i32*
  store i32 %10938, i32* %10942
  store %struct.Memory* %loadMem_47db16, %struct.Memory** %MEMORY
  %loadMem_47db19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10944 = getelementptr inbounds %struct.GPR, %struct.GPR* %10943, i32 0, i32 33
  %10945 = getelementptr inbounds %struct.Reg, %struct.Reg* %10944, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %10945 to i64*
  %10946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10947 = getelementptr inbounds %struct.GPR, %struct.GPR* %10946, i32 0, i32 1
  %10948 = getelementptr inbounds %struct.Reg, %struct.Reg* %10947, i32 0, i32 0
  %RAX.i61 = bitcast %union.anon* %10948 to i64*
  %10949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10950 = getelementptr inbounds %struct.GPR, %struct.GPR* %10949, i32 0, i32 15
  %10951 = getelementptr inbounds %struct.Reg, %struct.Reg* %10950, i32 0, i32 0
  %RBP.i62 = bitcast %union.anon* %10951 to i64*
  %10952 = load i64, i64* %RBP.i62
  %10953 = sub i64 %10952, 96
  %10954 = load i64, i64* %PC.i60
  %10955 = add i64 %10954, 3
  store i64 %10955, i64* %PC.i60
  %10956 = inttoptr i64 %10953 to i32*
  %10957 = load i32, i32* %10956
  %10958 = zext i32 %10957 to i64
  store i64 %10958, i64* %RAX.i61, align 8
  store %struct.Memory* %loadMem_47db19, %struct.Memory** %MEMORY
  %loadMem_47db1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10960 = getelementptr inbounds %struct.GPR, %struct.GPR* %10959, i32 0, i32 33
  %10961 = getelementptr inbounds %struct.Reg, %struct.Reg* %10960, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %10961 to i64*
  %10962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10963 = getelementptr inbounds %struct.GPR, %struct.GPR* %10962, i32 0, i32 5
  %10964 = getelementptr inbounds %struct.Reg, %struct.Reg* %10963, i32 0, i32 0
  %RCX.i58 = bitcast %union.anon* %10964 to i64*
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10966 = getelementptr inbounds %struct.GPR, %struct.GPR* %10965, i32 0, i32 15
  %10967 = getelementptr inbounds %struct.Reg, %struct.Reg* %10966, i32 0, i32 0
  %RBP.i59 = bitcast %union.anon* %10967 to i64*
  %10968 = load i64, i64* %RBP.i59
  %10969 = sub i64 %10968, 8
  %10970 = load i64, i64* %PC.i57
  %10971 = add i64 %10970, 4
  store i64 %10971, i64* %PC.i57
  %10972 = inttoptr i64 %10969 to i32*
  %10973 = load i32, i32* %10972
  %10974 = sext i32 %10973 to i64
  store i64 %10974, i64* %RCX.i58, align 8
  store %struct.Memory* %loadMem_47db1c, %struct.Memory** %MEMORY
  %loadMem_47db20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10976 = getelementptr inbounds %struct.GPR, %struct.GPR* %10975, i32 0, i32 33
  %10977 = getelementptr inbounds %struct.Reg, %struct.Reg* %10976, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %10977 to i64*
  %10978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10979 = getelementptr inbounds %struct.GPR, %struct.GPR* %10978, i32 0, i32 5
  %10980 = getelementptr inbounds %struct.Reg, %struct.Reg* %10979, i32 0, i32 0
  %RCX.i56 = bitcast %union.anon* %10980 to i64*
  %10981 = load i64, i64* %RCX.i56
  %10982 = load i64, i64* %PC.i55
  %10983 = add i64 %10982, 4
  store i64 %10983, i64* %PC.i55
  %10984 = sext i64 %10981 to i128
  %10985 = and i128 %10984, -18446744073709551616
  %10986 = zext i64 %10981 to i128
  %10987 = or i128 %10985, %10986
  %10988 = mul i128 76, %10987
  %10989 = trunc i128 %10988 to i64
  store i64 %10989, i64* %RCX.i56, align 8
  %10990 = sext i64 %10989 to i128
  %10991 = icmp ne i128 %10990, %10988
  %10992 = zext i1 %10991 to i8
  %10993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10992, i8* %10993, align 1
  %10994 = trunc i128 %10988 to i32
  %10995 = and i32 %10994, 255
  %10996 = call i32 @llvm.ctpop.i32(i32 %10995)
  %10997 = trunc i32 %10996 to i8
  %10998 = and i8 %10997, 1
  %10999 = xor i8 %10998, 1
  %11000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10999, i8* %11000, align 1
  %11001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11001, align 1
  %11002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11002, align 1
  %11003 = lshr i64 %10989, 63
  %11004 = trunc i64 %11003 to i8
  %11005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11004, i8* %11005, align 1
  %11006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10992, i8* %11006, align 1
  store %struct.Memory* %loadMem_47db20, %struct.Memory** %MEMORY
  %loadMem_47db24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11008 = getelementptr inbounds %struct.GPR, %struct.GPR* %11007, i32 0, i32 33
  %11009 = getelementptr inbounds %struct.Reg, %struct.Reg* %11008, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %11009 to i64*
  %11010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11011 = getelementptr inbounds %struct.GPR, %struct.GPR* %11010, i32 0, i32 5
  %11012 = getelementptr inbounds %struct.Reg, %struct.Reg* %11011, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %11012 to i64*
  %11013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11014 = getelementptr inbounds %struct.GPR, %struct.GPR* %11013, i32 0, i32 7
  %11015 = getelementptr inbounds %struct.Reg, %struct.Reg* %11014, i32 0, i32 0
  %RDX.i54 = bitcast %union.anon* %11015 to i64*
  %11016 = load i64, i64* %RDX.i54
  %11017 = load i64, i64* %RCX.i
  %11018 = load i64, i64* %PC.i53
  %11019 = add i64 %11018, 3
  store i64 %11019, i64* %PC.i53
  %11020 = add i64 %11017, %11016
  store i64 %11020, i64* %RDX.i54, align 8
  %11021 = icmp ult i64 %11020, %11016
  %11022 = icmp ult i64 %11020, %11017
  %11023 = or i1 %11021, %11022
  %11024 = zext i1 %11023 to i8
  %11025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11024, i8* %11025, align 1
  %11026 = trunc i64 %11020 to i32
  %11027 = and i32 %11026, 255
  %11028 = call i32 @llvm.ctpop.i32(i32 %11027)
  %11029 = trunc i32 %11028 to i8
  %11030 = and i8 %11029, 1
  %11031 = xor i8 %11030, 1
  %11032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11031, i8* %11032, align 1
  %11033 = xor i64 %11017, %11016
  %11034 = xor i64 %11033, %11020
  %11035 = lshr i64 %11034, 4
  %11036 = trunc i64 %11035 to i8
  %11037 = and i8 %11036, 1
  %11038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11037, i8* %11038, align 1
  %11039 = icmp eq i64 %11020, 0
  %11040 = zext i1 %11039 to i8
  %11041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11040, i8* %11041, align 1
  %11042 = lshr i64 %11020, 63
  %11043 = trunc i64 %11042 to i8
  %11044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11043, i8* %11044, align 1
  %11045 = lshr i64 %11016, 63
  %11046 = lshr i64 %11017, 63
  %11047 = xor i64 %11042, %11045
  %11048 = xor i64 %11042, %11046
  %11049 = add i64 %11047, %11048
  %11050 = icmp eq i64 %11049, 2
  %11051 = zext i1 %11050 to i8
  %11052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11051, i8* %11052, align 1
  store %struct.Memory* %loadMem_47db24, %struct.Memory** %MEMORY
  %loadMem_47db27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11054 = getelementptr inbounds %struct.GPR, %struct.GPR* %11053, i32 0, i32 33
  %11055 = getelementptr inbounds %struct.Reg, %struct.Reg* %11054, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %11055 to i64*
  %11056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11057 = getelementptr inbounds %struct.GPR, %struct.GPR* %11056, i32 0, i32 1
  %11058 = getelementptr inbounds %struct.Reg, %struct.Reg* %11057, i32 0, i32 0
  %EAX.i51 = bitcast %union.anon* %11058 to i32*
  %11059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11060 = getelementptr inbounds %struct.GPR, %struct.GPR* %11059, i32 0, i32 7
  %11061 = getelementptr inbounds %struct.Reg, %struct.Reg* %11060, i32 0, i32 0
  %RDX.i52 = bitcast %union.anon* %11061 to i64*
  %11062 = load i32, i32* %EAX.i51
  %11063 = zext i32 %11062 to i64
  %11064 = load i64, i64* %RDX.i52
  %11065 = add i64 %11064, 36
  %11066 = load i64, i64* %PC.i50
  %11067 = add i64 %11066, 3
  store i64 %11067, i64* %PC.i50
  %11068 = inttoptr i64 %11065 to i32*
  %11069 = load i32, i32* %11068
  %11070 = sub i32 %11062, %11069
  %11071 = icmp ult i32 %11062, %11069
  %11072 = zext i1 %11071 to i8
  %11073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11072, i8* %11073, align 1
  %11074 = and i32 %11070, 255
  %11075 = call i32 @llvm.ctpop.i32(i32 %11074)
  %11076 = trunc i32 %11075 to i8
  %11077 = and i8 %11076, 1
  %11078 = xor i8 %11077, 1
  %11079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11078, i8* %11079, align 1
  %11080 = xor i32 %11069, %11062
  %11081 = xor i32 %11080, %11070
  %11082 = lshr i32 %11081, 4
  %11083 = trunc i32 %11082 to i8
  %11084 = and i8 %11083, 1
  %11085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11084, i8* %11085, align 1
  %11086 = icmp eq i32 %11070, 0
  %11087 = zext i1 %11086 to i8
  %11088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11087, i8* %11088, align 1
  %11089 = lshr i32 %11070, 31
  %11090 = trunc i32 %11089 to i8
  %11091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11090, i8* %11091, align 1
  %11092 = lshr i32 %11062, 31
  %11093 = lshr i32 %11069, 31
  %11094 = xor i32 %11093, %11092
  %11095 = xor i32 %11089, %11092
  %11096 = add i32 %11095, %11094
  %11097 = icmp eq i32 %11096, 2
  %11098 = zext i1 %11097 to i8
  %11099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11098, i8* %11099, align 1
  store %struct.Memory* %loadMem_47db27, %struct.Memory** %MEMORY
  %loadMem_47db2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11101 = getelementptr inbounds %struct.GPR, %struct.GPR* %11100, i32 0, i32 33
  %11102 = getelementptr inbounds %struct.Reg, %struct.Reg* %11101, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %11102 to i64*
  %11103 = load i64, i64* %PC.i49
  %11104 = add i64 %11103, 54
  %11105 = load i64, i64* %PC.i49
  %11106 = add i64 %11105, 6
  %11107 = load i64, i64* %PC.i49
  %11108 = add i64 %11107, 6
  store i64 %11108, i64* %PC.i49
  %11109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11110 = load i8, i8* %11109, align 1
  %11111 = icmp ne i8 %11110, 0
  %11112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11113 = load i8, i8* %11112, align 1
  %11114 = icmp ne i8 %11113, 0
  %11115 = xor i1 %11111, %11114
  %11116 = zext i1 %11115 to i8
  store i8 %11116, i8* %BRANCH_TAKEN, align 1
  %11117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11118 = select i1 %11115, i64 %11104, i64 %11106
  store i64 %11118, i64* %11117, align 8
  store %struct.Memory* %loadMem_47db2a, %struct.Memory** %MEMORY
  %loadBr_47db2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47db2a = icmp eq i8 %loadBr_47db2a, 1
  br i1 %cmpBr_47db2a, label %block_.L_47db60, label %block_47db30

block_47db30:                                     ; preds = %block_47daf6
  %loadMem_47db30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11120 = getelementptr inbounds %struct.GPR, %struct.GPR* %11119, i32 0, i32 33
  %11121 = getelementptr inbounds %struct.Reg, %struct.Reg* %11120, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %11121 to i64*
  %11122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11123 = getelementptr inbounds %struct.GPR, %struct.GPR* %11122, i32 0, i32 15
  %11124 = getelementptr inbounds %struct.Reg, %struct.Reg* %11123, i32 0, i32 0
  %RBP.i48 = bitcast %union.anon* %11124 to i64*
  %11125 = load i64, i64* %RBP.i48
  %11126 = sub i64 %11125, 96
  %11127 = load i64, i64* %PC.i47
  %11128 = add i64 %11127, 4
  store i64 %11128, i64* %PC.i47
  %11129 = inttoptr i64 %11126 to i32*
  %11130 = load i32, i32* %11129
  %11131 = sub i32 %11130, 3
  %11132 = icmp ult i32 %11130, 3
  %11133 = zext i1 %11132 to i8
  %11134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11133, i8* %11134, align 1
  %11135 = and i32 %11131, 255
  %11136 = call i32 @llvm.ctpop.i32(i32 %11135)
  %11137 = trunc i32 %11136 to i8
  %11138 = and i8 %11137, 1
  %11139 = xor i8 %11138, 1
  %11140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11139, i8* %11140, align 1
  %11141 = xor i32 %11130, 3
  %11142 = xor i32 %11141, %11131
  %11143 = lshr i32 %11142, 4
  %11144 = trunc i32 %11143 to i8
  %11145 = and i8 %11144, 1
  %11146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11145, i8* %11146, align 1
  %11147 = icmp eq i32 %11131, 0
  %11148 = zext i1 %11147 to i8
  %11149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11148, i8* %11149, align 1
  %11150 = lshr i32 %11131, 31
  %11151 = trunc i32 %11150 to i8
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11151, i8* %11152, align 1
  %11153 = lshr i32 %11130, 31
  %11154 = xor i32 %11150, %11153
  %11155 = add i32 %11154, %11153
  %11156 = icmp eq i32 %11155, 2
  %11157 = zext i1 %11156 to i8
  %11158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11157, i8* %11158, align 1
  store %struct.Memory* %loadMem_47db30, %struct.Memory** %MEMORY
  %loadMem_47db34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11160 = getelementptr inbounds %struct.GPR, %struct.GPR* %11159, i32 0, i32 33
  %11161 = getelementptr inbounds %struct.Reg, %struct.Reg* %11160, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %11161 to i64*
  %11162 = load i64, i64* %PC.i46
  %11163 = add i64 %11162, 25
  %11164 = load i64, i64* %PC.i46
  %11165 = add i64 %11164, 6
  %11166 = load i64, i64* %PC.i46
  %11167 = add i64 %11166, 6
  store i64 %11167, i64* %PC.i46
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11169 = load i8, i8* %11168, align 1
  %11170 = icmp eq i8 %11169, 0
  %11171 = zext i1 %11170 to i8
  store i8 %11171, i8* %BRANCH_TAKEN, align 1
  %11172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11173 = select i1 %11170, i64 %11163, i64 %11165
  store i64 %11173, i64* %11172, align 8
  store %struct.Memory* %loadMem_47db34, %struct.Memory** %MEMORY
  %loadBr_47db34 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47db34 = icmp eq i8 %loadBr_47db34, 1
  br i1 %cmpBr_47db34, label %block_.L_47db4d, label %block_47db3a

block_47db3a:                                     ; preds = %block_47db30
  %loadMem_47db3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11175 = getelementptr inbounds %struct.GPR, %struct.GPR* %11174, i32 0, i32 33
  %11176 = getelementptr inbounds %struct.Reg, %struct.Reg* %11175, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %11176 to i64*
  %11177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11178 = getelementptr inbounds %struct.GPR, %struct.GPR* %11177, i32 0, i32 11
  %11179 = getelementptr inbounds %struct.Reg, %struct.Reg* %11178, i32 0, i32 0
  %RDI.i44 = bitcast %union.anon* %11179 to i64*
  %11180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11181 = getelementptr inbounds %struct.GPR, %struct.GPR* %11180, i32 0, i32 15
  %11182 = getelementptr inbounds %struct.Reg, %struct.Reg* %11181, i32 0, i32 0
  %RBP.i45 = bitcast %union.anon* %11182 to i64*
  %11183 = load i64, i64* %RBP.i45
  %11184 = sub i64 %11183, 12
  %11185 = load i64, i64* %PC.i43
  %11186 = add i64 %11185, 3
  store i64 %11186, i64* %PC.i43
  %11187 = inttoptr i64 %11184 to i32*
  %11188 = load i32, i32* %11187
  %11189 = zext i32 %11188 to i64
  store i64 %11189, i64* %RDI.i44, align 8
  store %struct.Memory* %loadMem_47db3a, %struct.Memory** %MEMORY
  %loadMem_47db3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11191 = getelementptr inbounds %struct.GPR, %struct.GPR* %11190, i32 0, i32 33
  %11192 = getelementptr inbounds %struct.Reg, %struct.Reg* %11191, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %11192 to i64*
  %11193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11194 = getelementptr inbounds %struct.GPR, %struct.GPR* %11193, i32 0, i32 9
  %11195 = getelementptr inbounds %struct.Reg, %struct.Reg* %11194, i32 0, i32 0
  %RSI.i41 = bitcast %union.anon* %11195 to i64*
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11197 = getelementptr inbounds %struct.GPR, %struct.GPR* %11196, i32 0, i32 15
  %11198 = getelementptr inbounds %struct.Reg, %struct.Reg* %11197, i32 0, i32 0
  %RBP.i42 = bitcast %union.anon* %11198 to i64*
  %11199 = load i64, i64* %RBP.i42
  %11200 = sub i64 %11199, 8
  %11201 = load i64, i64* %PC.i40
  %11202 = add i64 %11201, 3
  store i64 %11202, i64* %PC.i40
  %11203 = inttoptr i64 %11200 to i32*
  %11204 = load i32, i32* %11203
  %11205 = zext i32 %11204 to i64
  store i64 %11205, i64* %RSI.i41, align 8
  store %struct.Memory* %loadMem_47db3d, %struct.Memory** %MEMORY
  %loadMem_47db40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11207 = getelementptr inbounds %struct.GPR, %struct.GPR* %11206, i32 0, i32 33
  %11208 = getelementptr inbounds %struct.Reg, %struct.Reg* %11207, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %11208 to i64*
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11210 = getelementptr inbounds %struct.GPR, %struct.GPR* %11209, i32 0, i32 7
  %11211 = getelementptr inbounds %struct.Reg, %struct.Reg* %11210, i32 0, i32 0
  %RDX.i38 = bitcast %union.anon* %11211 to i64*
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11213 = getelementptr inbounds %struct.GPR, %struct.GPR* %11212, i32 0, i32 15
  %11214 = getelementptr inbounds %struct.Reg, %struct.Reg* %11213, i32 0, i32 0
  %RBP.i39 = bitcast %union.anon* %11214 to i64*
  %11215 = load i64, i64* %RBP.i39
  %11216 = sub i64 %11215, 92
  %11217 = load i64, i64* %PC.i37
  %11218 = add i64 %11217, 3
  store i64 %11218, i64* %PC.i37
  %11219 = inttoptr i64 %11216 to i32*
  %11220 = load i32, i32* %11219
  %11221 = zext i32 %11220 to i64
  store i64 %11221, i64* %RDX.i38, align 8
  store %struct.Memory* %loadMem_47db40, %struct.Memory** %MEMORY
  %loadMem1_47db43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11223 = getelementptr inbounds %struct.GPR, %struct.GPR* %11222, i32 0, i32 33
  %11224 = getelementptr inbounds %struct.Reg, %struct.Reg* %11223, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %11224 to i64*
  %11225 = load i64, i64* %PC.i36
  %11226 = add i64 %11225, -301923
  %11227 = load i64, i64* %PC.i36
  %11228 = add i64 %11227, 5
  %11229 = load i64, i64* %PC.i36
  %11230 = add i64 %11229, 5
  store i64 %11230, i64* %PC.i36
  %11231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11232 = load i64, i64* %11231, align 8
  %11233 = add i64 %11232, -8
  %11234 = inttoptr i64 %11233 to i64*
  store i64 %11228, i64* %11234
  store i64 %11233, i64* %11231, align 8
  %11235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11226, i64* %11235, align 8
  store %struct.Memory* %loadMem1_47db43, %struct.Memory** %MEMORY
  %loadMem2_47db43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47db43 = load i64, i64* %3
  %call2_47db43 = call %struct.Memory* @sub_433fe0.add_gain_move(%struct.State* %0, i64 %loadPC_47db43, %struct.Memory* %loadMem2_47db43)
  store %struct.Memory* %call2_47db43, %struct.Memory** %MEMORY
  %loadMem_47db48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11237 = getelementptr inbounds %struct.GPR, %struct.GPR* %11236, i32 0, i32 33
  %11238 = getelementptr inbounds %struct.Reg, %struct.Reg* %11237, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %11238 to i64*
  %11239 = load i64, i64* %PC.i35
  %11240 = add i64 %11239, 19
  %11241 = load i64, i64* %PC.i35
  %11242 = add i64 %11241, 5
  store i64 %11242, i64* %PC.i35
  %11243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11240, i64* %11243, align 8
  store %struct.Memory* %loadMem_47db48, %struct.Memory** %MEMORY
  br label %block_.L_47db5b

block_.L_47db4d:                                  ; preds = %block_47db30
  %loadMem_47db4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11245 = getelementptr inbounds %struct.GPR, %struct.GPR* %11244, i32 0, i32 33
  %11246 = getelementptr inbounds %struct.Reg, %struct.Reg* %11245, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %11246 to i64*
  %11247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11248 = getelementptr inbounds %struct.GPR, %struct.GPR* %11247, i32 0, i32 11
  %11249 = getelementptr inbounds %struct.Reg, %struct.Reg* %11248, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %11249 to i64*
  %11250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11251 = getelementptr inbounds %struct.GPR, %struct.GPR* %11250, i32 0, i32 15
  %11252 = getelementptr inbounds %struct.Reg, %struct.Reg* %11251, i32 0, i32 0
  %RBP.i34 = bitcast %union.anon* %11252 to i64*
  %11253 = load i64, i64* %RBP.i34
  %11254 = sub i64 %11253, 12
  %11255 = load i64, i64* %PC.i33
  %11256 = add i64 %11255, 3
  store i64 %11256, i64* %PC.i33
  %11257 = inttoptr i64 %11254 to i32*
  %11258 = load i32, i32* %11257
  %11259 = zext i32 %11258 to i64
  store i64 %11259, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_47db4d, %struct.Memory** %MEMORY
  %loadMem_47db50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11261 = getelementptr inbounds %struct.GPR, %struct.GPR* %11260, i32 0, i32 33
  %11262 = getelementptr inbounds %struct.Reg, %struct.Reg* %11261, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %11262 to i64*
  %11263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11264 = getelementptr inbounds %struct.GPR, %struct.GPR* %11263, i32 0, i32 9
  %11265 = getelementptr inbounds %struct.Reg, %struct.Reg* %11264, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %11265 to i64*
  %11266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11267 = getelementptr inbounds %struct.GPR, %struct.GPR* %11266, i32 0, i32 15
  %11268 = getelementptr inbounds %struct.Reg, %struct.Reg* %11267, i32 0, i32 0
  %RBP.i32 = bitcast %union.anon* %11268 to i64*
  %11269 = load i64, i64* %RBP.i32
  %11270 = sub i64 %11269, 8
  %11271 = load i64, i64* %PC.i31
  %11272 = add i64 %11271, 3
  store i64 %11272, i64* %PC.i31
  %11273 = inttoptr i64 %11270 to i32*
  %11274 = load i32, i32* %11273
  %11275 = zext i32 %11274 to i64
  store i64 %11275, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_47db50, %struct.Memory** %MEMORY
  %loadMem_47db53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11277 = getelementptr inbounds %struct.GPR, %struct.GPR* %11276, i32 0, i32 33
  %11278 = getelementptr inbounds %struct.Reg, %struct.Reg* %11277, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %11278 to i64*
  %11279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11280 = getelementptr inbounds %struct.GPR, %struct.GPR* %11279, i32 0, i32 7
  %11281 = getelementptr inbounds %struct.Reg, %struct.Reg* %11280, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %11281 to i64*
  %11282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11283 = getelementptr inbounds %struct.GPR, %struct.GPR* %11282, i32 0, i32 15
  %11284 = getelementptr inbounds %struct.Reg, %struct.Reg* %11283, i32 0, i32 0
  %RBP.i30 = bitcast %union.anon* %11284 to i64*
  %11285 = load i64, i64* %RBP.i30
  %11286 = sub i64 %11285, 96
  %11287 = load i64, i64* %PC.i29
  %11288 = add i64 %11287, 3
  store i64 %11288, i64* %PC.i29
  %11289 = inttoptr i64 %11286 to i32*
  %11290 = load i32, i32* %11289
  %11291 = zext i32 %11290 to i64
  store i64 %11291, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_47db53, %struct.Memory** %MEMORY
  %loadMem1_47db56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11293 = getelementptr inbounds %struct.GPR, %struct.GPR* %11292, i32 0, i32 33
  %11294 = getelementptr inbounds %struct.Reg, %struct.Reg* %11293, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %11294 to i64*
  %11295 = load i64, i64* %PC.i28
  %11296 = add i64 %11295, -300246
  %11297 = load i64, i64* %PC.i28
  %11298 = add i64 %11297, 5
  %11299 = load i64, i64* %PC.i28
  %11300 = add i64 %11299, 5
  store i64 %11300, i64* %PC.i28
  %11301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11302 = load i64, i64* %11301, align 8
  %11303 = add i64 %11302, -8
  %11304 = inttoptr i64 %11303 to i64*
  store i64 %11298, i64* %11304
  store i64 %11303, i64* %11301, align 8
  %11305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11296, i64* %11305, align 8
  store %struct.Memory* %loadMem1_47db56, %struct.Memory** %MEMORY
  %loadMem2_47db56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47db56 = load i64, i64* %3
  %call2_47db56 = call %struct.Memory* @sub_434680.add_owl_attack_move(%struct.State* %0, i64 %loadPC_47db56, %struct.Memory* %loadMem2_47db56)
  store %struct.Memory* %call2_47db56, %struct.Memory** %MEMORY
  br label %block_.L_47db5b

block_.L_47db5b:                                  ; preds = %block_.L_47db4d, %block_47db3a
  %loadMem_47db5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11307 = getelementptr inbounds %struct.GPR, %struct.GPR* %11306, i32 0, i32 33
  %11308 = getelementptr inbounds %struct.Reg, %struct.Reg* %11307, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %11308 to i64*
  %11309 = load i64, i64* %PC.i27
  %11310 = add i64 %11309, 5
  %11311 = load i64, i64* %PC.i27
  %11312 = add i64 %11311, 5
  store i64 %11312, i64* %PC.i27
  %11313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11310, i64* %11313, align 8
  store %struct.Memory* %loadMem_47db5b, %struct.Memory** %MEMORY
  br label %block_.L_47db60

block_.L_47db60:                                  ; preds = %block_.L_47db5b, %block_47daf6
  %loadMem_47db60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11315 = getelementptr inbounds %struct.GPR, %struct.GPR* %11314, i32 0, i32 33
  %11316 = getelementptr inbounds %struct.Reg, %struct.Reg* %11315, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %11316 to i64*
  %11317 = load i64, i64* %PC.i26
  %11318 = add i64 %11317, 5
  %11319 = load i64, i64* %PC.i26
  %11320 = add i64 %11319, 5
  store i64 %11320, i64* %PC.i26
  %11321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11318, i64* %11321, align 8
  store %struct.Memory* %loadMem_47db60, %struct.Memory** %MEMORY
  br label %block_.L_47db65

block_.L_47db65:                                  ; preds = %block_.L_47db60, %block_47dae2, %block_.L_47dacd
  %loadMem_47db65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11323 = getelementptr inbounds %struct.GPR, %struct.GPR* %11322, i32 0, i32 33
  %11324 = getelementptr inbounds %struct.Reg, %struct.Reg* %11323, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %11324 to i64*
  %11325 = load i64, i64* %PC.i25
  %11326 = add i64 %11325, 5
  %11327 = load i64, i64* %PC.i25
  %11328 = add i64 %11327, 5
  store i64 %11328, i64* %PC.i25
  %11329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11326, i64* %11329, align 8
  store %struct.Memory* %loadMem_47db65, %struct.Memory** %MEMORY
  br label %block_.L_47db6a

block_.L_47db6a:                                  ; preds = %block_.L_47db65, %block_.L_47dac8
  %loadMem_47db6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11331 = getelementptr inbounds %struct.GPR, %struct.GPR* %11330, i32 0, i32 33
  %11332 = getelementptr inbounds %struct.Reg, %struct.Reg* %11331, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %11332 to i64*
  %11333 = load i64, i64* %PC.i24
  %11334 = add i64 %11333, 5
  %11335 = load i64, i64* %PC.i24
  %11336 = add i64 %11335, 5
  store i64 %11336, i64* %PC.i24
  %11337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11334, i64* %11337, align 8
  store %struct.Memory* %loadMem_47db6a, %struct.Memory** %MEMORY
  br label %block_.L_47db6f

block_.L_47db6f:                                  ; preds = %block_.L_47db6a, %block_.L_47da2b
  %loadMem_47db6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11339 = getelementptr inbounds %struct.GPR, %struct.GPR* %11338, i32 0, i32 33
  %11340 = getelementptr inbounds %struct.Reg, %struct.Reg* %11339, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %11340 to i64*
  %11341 = load i64, i64* %PC.i23
  %11342 = add i64 %11341, 5
  %11343 = load i64, i64* %PC.i23
  %11344 = add i64 %11343, 5
  store i64 %11344, i64* %PC.i23
  %11345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11342, i64* %11345, align 8
  store %struct.Memory* %loadMem_47db6f, %struct.Memory** %MEMORY
  br label %block_.L_47db74

block_.L_47db74:                                  ; preds = %block_.L_47db6f, %block_47d8d5
  %loadMem_47db74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11347 = getelementptr inbounds %struct.GPR, %struct.GPR* %11346, i32 0, i32 33
  %11348 = getelementptr inbounds %struct.Reg, %struct.Reg* %11347, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %11348 to i64*
  %11349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11350 = getelementptr inbounds %struct.GPR, %struct.GPR* %11349, i32 0, i32 1
  %11351 = getelementptr inbounds %struct.Reg, %struct.Reg* %11350, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %11351 to i64*
  %11352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11353 = getelementptr inbounds %struct.GPR, %struct.GPR* %11352, i32 0, i32 15
  %11354 = getelementptr inbounds %struct.Reg, %struct.Reg* %11353, i32 0, i32 0
  %RBP.i22 = bitcast %union.anon* %11354 to i64*
  %11355 = load i64, i64* %RBP.i22
  %11356 = sub i64 %11355, 12
  %11357 = load i64, i64* %PC.i20
  %11358 = add i64 %11357, 3
  store i64 %11358, i64* %PC.i20
  %11359 = inttoptr i64 %11356 to i32*
  %11360 = load i32, i32* %11359
  %11361 = zext i32 %11360 to i64
  store i64 %11361, i64* %RAX.i21, align 8
  store %struct.Memory* %loadMem_47db74, %struct.Memory** %MEMORY
  %loadMem_47db77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11363 = getelementptr inbounds %struct.GPR, %struct.GPR* %11362, i32 0, i32 33
  %11364 = getelementptr inbounds %struct.Reg, %struct.Reg* %11363, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %11364 to i64*
  %11365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11366 = getelementptr inbounds %struct.GPR, %struct.GPR* %11365, i32 0, i32 1
  %11367 = getelementptr inbounds %struct.Reg, %struct.Reg* %11366, i32 0, i32 0
  %RAX.i19 = bitcast %union.anon* %11367 to i64*
  %11368 = load i64, i64* %RAX.i19
  %11369 = load i64, i64* %PC.i18
  %11370 = add i64 %11369, 3
  store i64 %11370, i64* %PC.i18
  %11371 = trunc i64 %11368 to i32
  %11372 = add i32 1, %11371
  %11373 = zext i32 %11372 to i64
  store i64 %11373, i64* %RAX.i19, align 8
  %11374 = icmp ult i32 %11372, %11371
  %11375 = icmp ult i32 %11372, 1
  %11376 = or i1 %11374, %11375
  %11377 = zext i1 %11376 to i8
  %11378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11377, i8* %11378, align 1
  %11379 = and i32 %11372, 255
  %11380 = call i32 @llvm.ctpop.i32(i32 %11379)
  %11381 = trunc i32 %11380 to i8
  %11382 = and i8 %11381, 1
  %11383 = xor i8 %11382, 1
  %11384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11383, i8* %11384, align 1
  %11385 = xor i64 1, %11368
  %11386 = trunc i64 %11385 to i32
  %11387 = xor i32 %11386, %11372
  %11388 = lshr i32 %11387, 4
  %11389 = trunc i32 %11388 to i8
  %11390 = and i8 %11389, 1
  %11391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11390, i8* %11391, align 1
  %11392 = icmp eq i32 %11372, 0
  %11393 = zext i1 %11392 to i8
  %11394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11393, i8* %11394, align 1
  %11395 = lshr i32 %11372, 31
  %11396 = trunc i32 %11395 to i8
  %11397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11396, i8* %11397, align 1
  %11398 = lshr i32 %11371, 31
  %11399 = xor i32 %11395, %11398
  %11400 = add i32 %11399, %11395
  %11401 = icmp eq i32 %11400, 2
  %11402 = zext i1 %11401 to i8
  %11403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11402, i8* %11403, align 1
  store %struct.Memory* %loadMem_47db77, %struct.Memory** %MEMORY
  %loadMem_47db7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11405 = getelementptr inbounds %struct.GPR, %struct.GPR* %11404, i32 0, i32 33
  %11406 = getelementptr inbounds %struct.Reg, %struct.Reg* %11405, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %11406 to i64*
  %11407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11408 = getelementptr inbounds %struct.GPR, %struct.GPR* %11407, i32 0, i32 1
  %11409 = getelementptr inbounds %struct.Reg, %struct.Reg* %11408, i32 0, i32 0
  %EAX.i16 = bitcast %union.anon* %11409 to i32*
  %11410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11411 = getelementptr inbounds %struct.GPR, %struct.GPR* %11410, i32 0, i32 15
  %11412 = getelementptr inbounds %struct.Reg, %struct.Reg* %11411, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %11412 to i64*
  %11413 = load i64, i64* %RBP.i17
  %11414 = sub i64 %11413, 12
  %11415 = load i32, i32* %EAX.i16
  %11416 = zext i32 %11415 to i64
  %11417 = load i64, i64* %PC.i15
  %11418 = add i64 %11417, 3
  store i64 %11418, i64* %PC.i15
  %11419 = inttoptr i64 %11414 to i32*
  store i32 %11415, i32* %11419
  store %struct.Memory* %loadMem_47db7a, %struct.Memory** %MEMORY
  %loadMem_47db7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11421 = getelementptr inbounds %struct.GPR, %struct.GPR* %11420, i32 0, i32 33
  %11422 = getelementptr inbounds %struct.Reg, %struct.Reg* %11421, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %11422 to i64*
  %11423 = load i64, i64* %PC.i14
  %11424 = add i64 %11423, -714
  %11425 = load i64, i64* %PC.i14
  %11426 = add i64 %11425, 5
  store i64 %11426, i64* %PC.i14
  %11427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11424, i64* %11427, align 8
  store %struct.Memory* %loadMem_47db7d, %struct.Memory** %MEMORY
  br label %block_.L_47d8b3

block_.L_47db82:                                  ; preds = %block_.L_47d8b3
  %loadMem_47db82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11429 = getelementptr inbounds %struct.GPR, %struct.GPR* %11428, i32 0, i32 33
  %11430 = getelementptr inbounds %struct.Reg, %struct.Reg* %11429, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %11430 to i64*
  %11431 = load i64, i64* %PC.i13
  %11432 = add i64 %11431, 5
  %11433 = load i64, i64* %PC.i13
  %11434 = add i64 %11433, 5
  store i64 %11434, i64* %PC.i13
  %11435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11432, i64* %11435, align 8
  store %struct.Memory* %loadMem_47db82, %struct.Memory** %MEMORY
  br label %block_.L_47db87

block_.L_47db87:                                  ; preds = %block_.L_47db82, %block_47d88d, %block_.L_47d86c, %block_47d857
  %loadMem_47db87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11437 = getelementptr inbounds %struct.GPR, %struct.GPR* %11436, i32 0, i32 33
  %11438 = getelementptr inbounds %struct.Reg, %struct.Reg* %11437, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %11438 to i64*
  %11439 = load i64, i64* %PC.i12
  %11440 = add i64 %11439, 5
  %11441 = load i64, i64* %PC.i12
  %11442 = add i64 %11441, 5
  store i64 %11442, i64* %PC.i12
  %11443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11440, i64* %11443, align 8
  store %struct.Memory* %loadMem_47db87, %struct.Memory** %MEMORY
  br label %block_.L_47db8c

block_.L_47db8c:                                  ; preds = %block_.L_47db87
  %loadMem_47db8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11445 = getelementptr inbounds %struct.GPR, %struct.GPR* %11444, i32 0, i32 33
  %11446 = getelementptr inbounds %struct.Reg, %struct.Reg* %11445, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %11446 to i64*
  %11447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11448 = getelementptr inbounds %struct.GPR, %struct.GPR* %11447, i32 0, i32 1
  %11449 = getelementptr inbounds %struct.Reg, %struct.Reg* %11448, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %11449 to i64*
  %11450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11451 = getelementptr inbounds %struct.GPR, %struct.GPR* %11450, i32 0, i32 15
  %11452 = getelementptr inbounds %struct.Reg, %struct.Reg* %11451, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %11452 to i64*
  %11453 = load i64, i64* %RBP.i11
  %11454 = sub i64 %11453, 8
  %11455 = load i64, i64* %PC.i9
  %11456 = add i64 %11455, 3
  store i64 %11456, i64* %PC.i9
  %11457 = inttoptr i64 %11454 to i32*
  %11458 = load i32, i32* %11457
  %11459 = zext i32 %11458 to i64
  store i64 %11459, i64* %RAX.i10, align 8
  store %struct.Memory* %loadMem_47db8c, %struct.Memory** %MEMORY
  %loadMem_47db8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11461 = getelementptr inbounds %struct.GPR, %struct.GPR* %11460, i32 0, i32 33
  %11462 = getelementptr inbounds %struct.Reg, %struct.Reg* %11461, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %11462 to i64*
  %11463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11464 = getelementptr inbounds %struct.GPR, %struct.GPR* %11463, i32 0, i32 1
  %11465 = getelementptr inbounds %struct.Reg, %struct.Reg* %11464, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %11465 to i64*
  %11466 = load i64, i64* %RAX.i
  %11467 = load i64, i64* %PC.i8
  %11468 = add i64 %11467, 3
  store i64 %11468, i64* %PC.i8
  %11469 = trunc i64 %11466 to i32
  %11470 = add i32 1, %11469
  %11471 = zext i32 %11470 to i64
  store i64 %11471, i64* %RAX.i, align 8
  %11472 = icmp ult i32 %11470, %11469
  %11473 = icmp ult i32 %11470, 1
  %11474 = or i1 %11472, %11473
  %11475 = zext i1 %11474 to i8
  %11476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11475, i8* %11476, align 1
  %11477 = and i32 %11470, 255
  %11478 = call i32 @llvm.ctpop.i32(i32 %11477)
  %11479 = trunc i32 %11478 to i8
  %11480 = and i8 %11479, 1
  %11481 = xor i8 %11480, 1
  %11482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11481, i8* %11482, align 1
  %11483 = xor i64 1, %11466
  %11484 = trunc i64 %11483 to i32
  %11485 = xor i32 %11484, %11470
  %11486 = lshr i32 %11485, 4
  %11487 = trunc i32 %11486 to i8
  %11488 = and i8 %11487, 1
  %11489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11488, i8* %11489, align 1
  %11490 = icmp eq i32 %11470, 0
  %11491 = zext i1 %11490 to i8
  %11492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11491, i8* %11492, align 1
  %11493 = lshr i32 %11470, 31
  %11494 = trunc i32 %11493 to i8
  %11495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11494, i8* %11495, align 1
  %11496 = lshr i32 %11469, 31
  %11497 = xor i32 %11493, %11496
  %11498 = add i32 %11497, %11493
  %11499 = icmp eq i32 %11498, 2
  %11500 = zext i1 %11499 to i8
  %11501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11500, i8* %11501, align 1
  store %struct.Memory* %loadMem_47db8f, %struct.Memory** %MEMORY
  %loadMem_47db92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11503 = getelementptr inbounds %struct.GPR, %struct.GPR* %11502, i32 0, i32 33
  %11504 = getelementptr inbounds %struct.Reg, %struct.Reg* %11503, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %11504 to i64*
  %11505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11506 = getelementptr inbounds %struct.GPR, %struct.GPR* %11505, i32 0, i32 1
  %11507 = getelementptr inbounds %struct.Reg, %struct.Reg* %11506, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %11507 to i32*
  %11508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11509 = getelementptr inbounds %struct.GPR, %struct.GPR* %11508, i32 0, i32 15
  %11510 = getelementptr inbounds %struct.Reg, %struct.Reg* %11509, i32 0, i32 0
  %RBP.i7 = bitcast %union.anon* %11510 to i64*
  %11511 = load i64, i64* %RBP.i7
  %11512 = sub i64 %11511, 8
  %11513 = load i32, i32* %EAX.i
  %11514 = zext i32 %11513 to i64
  %11515 = load i64, i64* %PC.i6
  %11516 = add i64 %11515, 3
  store i64 %11516, i64* %PC.i6
  %11517 = inttoptr i64 %11512 to i32*
  store i32 %11513, i32* %11517
  store %struct.Memory* %loadMem_47db92, %struct.Memory** %MEMORY
  %loadMem_47db95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11519 = getelementptr inbounds %struct.GPR, %struct.GPR* %11518, i32 0, i32 33
  %11520 = getelementptr inbounds %struct.Reg, %struct.Reg* %11519, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %11520 to i64*
  %11521 = load i64, i64* %PC.i5
  %11522 = add i64 %11521, -864
  %11523 = load i64, i64* %PC.i5
  %11524 = add i64 %11523, 5
  store i64 %11524, i64* %PC.i5
  %11525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11522, i64* %11525, align 8
  store %struct.Memory* %loadMem_47db95, %struct.Memory** %MEMORY
  br label %block_.L_47d835

block_.L_47db9a:                                  ; preds = %block_.L_47d835
  %loadMem_47db9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11527 = getelementptr inbounds %struct.GPR, %struct.GPR* %11526, i32 0, i32 33
  %11528 = getelementptr inbounds %struct.Reg, %struct.Reg* %11527, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %11528 to i64*
  %11529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11530 = getelementptr inbounds %struct.GPR, %struct.GPR* %11529, i32 0, i32 13
  %11531 = getelementptr inbounds %struct.Reg, %struct.Reg* %11530, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %11531 to i64*
  %11532 = load i64, i64* %RSP.i
  %11533 = load i64, i64* %PC.i4
  %11534 = add i64 %11533, 7
  store i64 %11534, i64* %PC.i4
  %11535 = add i64 128, %11532
  store i64 %11535, i64* %RSP.i, align 8
  %11536 = icmp ult i64 %11535, %11532
  %11537 = icmp ult i64 %11535, 128
  %11538 = or i1 %11536, %11537
  %11539 = zext i1 %11538 to i8
  %11540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11539, i8* %11540, align 1
  %11541 = trunc i64 %11535 to i32
  %11542 = and i32 %11541, 255
  %11543 = call i32 @llvm.ctpop.i32(i32 %11542)
  %11544 = trunc i32 %11543 to i8
  %11545 = and i8 %11544, 1
  %11546 = xor i8 %11545, 1
  %11547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11546, i8* %11547, align 1
  %11548 = xor i64 128, %11532
  %11549 = xor i64 %11548, %11535
  %11550 = lshr i64 %11549, 4
  %11551 = trunc i64 %11550 to i8
  %11552 = and i8 %11551, 1
  %11553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11552, i8* %11553, align 1
  %11554 = icmp eq i64 %11535, 0
  %11555 = zext i1 %11554 to i8
  %11556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11555, i8* %11556, align 1
  %11557 = lshr i64 %11535, 63
  %11558 = trunc i64 %11557 to i8
  %11559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11558, i8* %11559, align 1
  %11560 = lshr i64 %11532, 63
  %11561 = xor i64 %11557, %11560
  %11562 = add i64 %11561, %11557
  %11563 = icmp eq i64 %11562, 2
  %11564 = zext i1 %11563 to i8
  %11565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11564, i8* %11565, align 1
  store %struct.Memory* %loadMem_47db9a, %struct.Memory** %MEMORY
  %loadMem_47dba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11567 = getelementptr inbounds %struct.GPR, %struct.GPR* %11566, i32 0, i32 33
  %11568 = getelementptr inbounds %struct.Reg, %struct.Reg* %11567, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %11568 to i64*
  %11569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11570 = getelementptr inbounds %struct.GPR, %struct.GPR* %11569, i32 0, i32 15
  %11571 = getelementptr inbounds %struct.Reg, %struct.Reg* %11570, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %11571 to i64*
  %11572 = load i64, i64* %PC.i2
  %11573 = add i64 %11572, 1
  store i64 %11573, i64* %PC.i2
  %11574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11575 = load i64, i64* %11574, align 8
  %11576 = add i64 %11575, 8
  %11577 = inttoptr i64 %11575 to i64*
  %11578 = load i64, i64* %11577
  store i64 %11578, i64* %RBP.i3, align 8
  store i64 %11576, i64* %11574, align 8
  store %struct.Memory* %loadMem_47dba1, %struct.Memory** %MEMORY
  %loadMem_47dba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11580 = getelementptr inbounds %struct.GPR, %struct.GPR* %11579, i32 0, i32 33
  %11581 = getelementptr inbounds %struct.Reg, %struct.Reg* %11580, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %11581 to i64*
  %11582 = load i64, i64* %PC.i1
  %11583 = add i64 %11582, 1
  store i64 %11583, i64* %PC.i1
  %11584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11586 = load i64, i64* %11585, align 8
  %11587 = inttoptr i64 %11586 to i64*
  %11588 = load i64, i64* %11587
  store i64 %11588, i64* %11584, align 8
  %11589 = add i64 %11586, 8
  store i64 %11589, i64* %11585, align 8
  store %struct.Memory* %loadMem_47dba2, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_47dba2
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x80___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 128
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 128
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 128, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d198(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d1ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x582d00___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x582d00_type* @G__0x582d00 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.gprintf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 400
  %16 = icmp ult i32 %14, 400
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 400
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d82e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d1da(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d820(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x78__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 120
  %16 = icmp ult i32 %14, 120
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 120
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d81b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb9d8f0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x234___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 564, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x48__rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 72
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d22b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d81b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xafdfc0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2c____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 44
  %15 = icmp ult i32 %13, 44
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 44
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47d27b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2e____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 46
  %15 = icmp ult i32 %13, 46
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 46
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d286(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d47e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 2
  %15 = icmp ult i32 %13, 2
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 2
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47d33a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 4
  %15 = icmp ult i32 %13, 4
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 4
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x6____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 6
  %15 = icmp ult i32 %13, 6
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 6
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 8
  %15 = icmp ult i32 %13, 8
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 8
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xa____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 10
  %15 = icmp ult i32 %13, 10
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 10
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xc____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 12
  %15 = icmp ult i32 %13, 12
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 12
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d345(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d479(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x36____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 54
  %15 = icmp ult i32 %13, 54
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 54
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d3e9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb8b580___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 12105088
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb00ea0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11538080
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d3b1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb9a0a0___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb9a0a0_type* @G__0xb9a0a0 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.find_eye_dragons(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d3d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb01180___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb01180_type* @G__0xb01180 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  store i64 1, i64* %9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d3e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d80d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d474(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xe____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 14
  %15 = icmp ult i32 %13, 14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 14
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d46a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb8a010___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 12099600
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb051b0___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11555248
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 76, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rsi____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x1c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 28
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d465(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d46f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d808(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d4a4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d4aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d4b9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d7fa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 76, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 104, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__0x3c__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d4f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x1c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47d514(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47d5c6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d679(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.owl_attack_move_reason_known(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x40__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.owl_does_attack(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb4bd20___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x24__rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RDX
  %15 = add i64 %14, 36
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_47d674(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d631(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.add_gain_move(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d63f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.add_owl_attack_move(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d652(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d66f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x582d3a___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x582d3a_type* @G__0x582d3a to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d674(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d679(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47d742(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d7f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 4
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.owl_defense_move_reason_known(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x48__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.owl_does_defend(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x34__rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RDX
  %15 = add i64 %14, 52
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_47d7f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d7ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.add_loss_move(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d7bb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.add_owl_defense_move(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d7ce(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d7eb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x582d63___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x582d63_type* @G__0x582d63 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d7f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d7f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d485(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d1e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d1b3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47db9a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1
  %14 = icmp ult i32 %9, 1
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47d86c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 2
  %14 = icmp ult i32 %9, 2
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47db87(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 400
  %16 = icmp ult i32 %14, 400
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 400
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47db82(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47d8da(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47db74(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47da2b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d924(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47da2b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x50__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1a____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 26
  %15 = icmp ult i32 %13, 26
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 26
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47d9d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1c____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 28
  %15 = icmp ult i32 %13, 28
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 28
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1e____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 30
  %15 = icmp ult i32 %13, 30
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 30
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x20____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 32
  %15 = icmp ult i32 %13, 32
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 32
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x22____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 34
  %15 = icmp ult i32 %13, 34
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 34
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x24____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 36
  %15 = icmp ult i32 %13, 36
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 36
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47da18(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.are_neighbor_dragons(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47da13(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47da18(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47da1d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d8e8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47db6f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47dacd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x54__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_47dac8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 88
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47dab5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47dac3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47dac8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47db6a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47db65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47db65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x5c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_47db60(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47db4d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47db5b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47db60(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47db65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47db6f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d8b3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47db87(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47db8c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d835(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x80___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 128, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 128
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 128, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
