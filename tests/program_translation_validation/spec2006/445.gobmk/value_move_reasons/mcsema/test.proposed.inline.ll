; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x62334__rip__type = type <{ [8 x i8] }>
%G_0x623be__rip__type = type <{ [8 x i8] }>
%G_0x62404__rip__type = type <{ [8 x i8] }>
%G_0x62406__rip__type = type <{ [4 x i8] }>
%G_0x62411__rip__type = type <{ [8 x i8] }>
%G_0x62436__rip__type = type <{ [4 x i8] }>
%G_0x62657__rip__type = type <{ [8 x i8] }>
%G_0x62669__rip__type = type <{ [8 x i8] }>
%G_0x626bc__rip__type = type <{ [8 x i8] }>
%G_0x626c1__rip__type = type <{ [8 x i8] }>
%G_0x626ea__rip__type = type <{ [8 x i8] }>
%G_0x6272e__rip__type = type <{ [8 x i8] }>
%G_0x6276c__rip__type = type <{ [8 x i8] }>
%G_0x62812__rip__type = type <{ [8 x i8] }>
%G_0x6298a__rip__type = type <{ [8 x i8] }>
%G_0x62a03__rip__type = type <{ [8 x i8] }>
%G_0x62ab5__rip__type = type <{ [8 x i8] }>
%G_0x62b20__rip__type = type <{ [8 x i8] }>
%G_0x62b55__rip__type = type <{ [8 x i8] }>
%G_0x62b75__rip__type = type <{ [8 x i8] }>
%G_0x62ba5__rip__type = type <{ [8 x i8] }>
%G_0x62bb5__rip__type = type <{ [8 x i8] }>
%G_0x62c20__rip__type = type <{ [8 x i8] }>
%G_0x62c5f__rip__type = type <{ [8 x i8] }>
%G_0x62c7f__rip__type = type <{ [8 x i8] }>
%G_0x62c8e__rip__type = type <{ [8 x i8] }>
%G_0x62caf__rip__type = type <{ [8 x i8] }>
%G_0x62ccd__rip__type = type <{ [8 x i8] }>
%G_0x62e72__rip__type = type <{ [8 x i8] }>
%G_0x62e96__rip__type = type <{ [8 x i8] }>
%G_0x99c0a0_type = type <{ [8 x i8] }>
%G_0xab0edc_type = type <{ [1 x i8] }>
%G_0xab0f20_type = type <{ [1 x i8] }>
%G_0xab0f28_type = type <{ [1 x i8] }>
%G_0xb54ce4_type = type <{ [1 x i8] }>
%G__0x480f80_type = type <{ [8 x i8] }>
%G__0x57a100_type = type <{ [8 x i8] }>
%G__0x581e84_type = type <{ [8 x i8] }>
%G__0x582044_type = type <{ [8 x i8] }>
%G__0x58208a_type = type <{ [8 x i8] }>
%G__0x5820d3_type = type <{ [8 x i8] }>
%G__0x5820ea_type = type <{ [8 x i8] }>
%G__0x5820fd_type = type <{ [8 x i8] }>
%G__0x582137_type = type <{ [8 x i8] }>
%G__0x582155_type = type <{ [8 x i8] }>
%G__0x58217d_type = type <{ [8 x i8] }>
%G__0x5821b4_type = type <{ [8 x i8] }>
%G__0x5821da_type = type <{ [8 x i8] }>
%G__0x582200_type = type <{ [8 x i8] }>
%G__0xb9d8f0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x62334__rip_ = global %G_0x62334__rip__type zeroinitializer
@G_0x623be__rip_ = global %G_0x623be__rip__type zeroinitializer
@G_0x62404__rip_ = global %G_0x62404__rip__type zeroinitializer
@G_0x62406__rip_ = global %G_0x62406__rip__type zeroinitializer
@G_0x62411__rip_ = global %G_0x62411__rip__type zeroinitializer
@G_0x62436__rip_ = global %G_0x62436__rip__type zeroinitializer
@G_0x62657__rip_ = global %G_0x62657__rip__type zeroinitializer
@G_0x62669__rip_ = global %G_0x62669__rip__type zeroinitializer
@G_0x626bc__rip_ = global %G_0x626bc__rip__type zeroinitializer
@G_0x626c1__rip_ = global %G_0x626c1__rip__type zeroinitializer
@G_0x626ea__rip_ = global %G_0x626ea__rip__type zeroinitializer
@G_0x6272e__rip_ = global %G_0x6272e__rip__type zeroinitializer
@G_0x6276c__rip_ = global %G_0x6276c__rip__type zeroinitializer
@G_0x62812__rip_ = global %G_0x62812__rip__type zeroinitializer
@G_0x6298a__rip_ = global %G_0x6298a__rip__type zeroinitializer
@G_0x62a03__rip_ = global %G_0x62a03__rip__type zeroinitializer
@G_0x62ab5__rip_ = global %G_0x62ab5__rip__type zeroinitializer
@G_0x62b20__rip_ = global %G_0x62b20__rip__type zeroinitializer
@G_0x62b55__rip_ = global %G_0x62b55__rip__type zeroinitializer
@G_0x62b75__rip_ = global %G_0x62b75__rip__type zeroinitializer
@G_0x62ba5__rip_ = global %G_0x62ba5__rip__type zeroinitializer
@G_0x62bb5__rip_ = global %G_0x62bb5__rip__type zeroinitializer
@G_0x62c20__rip_ = global %G_0x62c20__rip__type zeroinitializer
@G_0x62c5f__rip_ = global %G_0x62c5f__rip__type zeroinitializer
@G_0x62c7f__rip_ = global %G_0x62c7f__rip__type zeroinitializer
@G_0x62c8e__rip_ = global %G_0x62c8e__rip__type zeroinitializer
@G_0x62caf__rip_ = global %G_0x62caf__rip__type zeroinitializer
@G_0x62ccd__rip_ = global %G_0x62ccd__rip__type zeroinitializer
@G_0x62e72__rip_ = global %G_0x62e72__rip__type zeroinitializer
@G_0x62e96__rip_ = global %G_0x62e96__rip__type zeroinitializer
@G_0x99c0a0 = global %G_0x99c0a0_type zeroinitializer
@G_0xab0edc = global %G_0xab0edc_type zeroinitializer
@G_0xab0f20 = global %G_0xab0f20_type zeroinitializer
@G_0xab0f28 = global %G_0xab0f28_type zeroinitializer
@G_0xb54ce4 = global %G_0xb54ce4_type zeroinitializer
@G__0x480f80 = global %G__0x480f80_type zeroinitializer
@G__0x57a100 = global %G__0x57a100_type zeroinitializer
@G__0x581e84 = global %G__0x581e84_type zeroinitializer
@G__0x582044 = global %G__0x582044_type zeroinitializer
@G__0x58208a = global %G__0x58208a_type zeroinitializer
@G__0x5820d3 = global %G__0x5820d3_type zeroinitializer
@G__0x5820ea = global %G__0x5820ea_type zeroinitializer
@G__0x5820fd = global %G__0x5820fd_type zeroinitializer
@G__0x582137 = global %G__0x582137_type zeroinitializer
@G__0x582155 = global %G__0x582155_type zeroinitializer
@G__0x58217d = global %G__0x58217d_type zeroinitializer
@G__0x5821b4 = global %G__0x5821b4_type zeroinitializer
@G__0x5821da = global %G__0x5821da_type zeroinitializer
@G__0x582200 = global %G__0x582200_type zeroinitializer
@G__0xb9d8f0 = global %G__0xb9d8f0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_452090.abortgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_437800.is_antisuji_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4e2700.gg_sort(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_437120.discard_redundant_move_reasons(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_481030.estimate_territorial_value(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_483400.estimate_strategical_value(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_484d10.compute_shape_factor(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_451db0.gprintf(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_484e90.move_connects_strings(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40ead0.is_legal(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4850c0.value_moves_confirm_safety(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_427a70.move_considered(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @value_move_reasons(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_480000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_480000, %struct.Memory** %MEMORY
  %loadMem_480001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i36 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i37 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i36
  %27 = load i64, i64* %PC.i35
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i35
  store i64 %26, i64* %RBP.i37, align 8
  store %struct.Memory* %loadMem_480001, %struct.Memory** %MEMORY
  %loadMem_480004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i57 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i57
  %36 = load i64, i64* %PC.i56
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i56
  %38 = sub i64 %35, 208
  store i64 %38, i64* %RSP.i57, align 8
  %39 = icmp ult i64 %35, 208
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 208, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_480004, %struct.Memory** %MEMORY
  %loadMem_48000b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i80 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i80
  %77 = sub i64 %76, 8
  %78 = load i32, i32* %EDI.i
  %79 = zext i32 %78 to i64
  %80 = load i64, i64* %PC.i79
  %81 = add i64 %80, 3
  store i64 %81, i64* %PC.i79
  %82 = inttoptr i64 %77 to i32*
  store i32 %78, i32* %82
  store %struct.Memory* %loadMem_48000b, %struct.Memory** %MEMORY
  %loadMem_48000e = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 9
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %88 to i32*
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %90 = getelementptr inbounds %struct.GPR, %struct.GPR* %89, i32 0, i32 15
  %91 = getelementptr inbounds %struct.Reg, %struct.Reg* %90, i32 0, i32 0
  %RBP.i126 = bitcast %union.anon* %91 to i64*
  %92 = load i64, i64* %RBP.i126
  %93 = sub i64 %92, 12
  %94 = load i32, i32* %ESI.i
  %95 = zext i32 %94 to i64
  %96 = load i64, i64* %PC.i125
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC.i125
  %98 = inttoptr i64 %93 to i32*
  store i32 %94, i32* %98
  store %struct.Memory* %loadMem_48000e, %struct.Memory** %MEMORY
  %loadMem_480011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 15
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %RBP.i180 = bitcast %union.anon* %104 to i64*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %106 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %105, i64 0, i64 0
  %XMM0.i181 = bitcast %union.VectorReg* %106 to %union.vec128_t*
  %107 = load i64, i64* %RBP.i180
  %108 = sub i64 %107, 16
  %109 = bitcast %union.vec128_t* %XMM0.i181 to i8*
  %110 = load i64, i64* %PC.i179
  %111 = add i64 %110, 5
  store i64 %111, i64* %PC.i179
  %112 = bitcast i8* %109 to <2 x float>*
  %113 = load <2 x float>, <2 x float>* %112, align 1
  %114 = extractelement <2 x float> %113, i32 0
  %115 = inttoptr i64 %108 to float*
  store float %114, float* %115
  store %struct.Memory* %loadMem_480011, %struct.Memory** %MEMORY
  %loadMem_480016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %117 = getelementptr inbounds %struct.GPR, %struct.GPR* %116, i32 0, i32 33
  %118 = getelementptr inbounds %struct.Reg, %struct.Reg* %117, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %118 to i64*
  %119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %120 = getelementptr inbounds %struct.GPR, %struct.GPR* %119, i32 0, i32 15
  %121 = getelementptr inbounds %struct.Reg, %struct.Reg* %120, i32 0, i32 0
  %RBP.i204 = bitcast %union.anon* %121 to i64*
  %122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %123 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %122, i64 0, i64 1
  %XMM1.i205 = bitcast %union.VectorReg* %123 to %union.vec128_t*
  %124 = load i64, i64* %RBP.i204
  %125 = sub i64 %124, 20
  %126 = bitcast %union.vec128_t* %XMM1.i205 to i8*
  %127 = load i64, i64* %PC.i203
  %128 = add i64 %127, 5
  store i64 %128, i64* %PC.i203
  %129 = bitcast i8* %126 to <2 x float>*
  %130 = load <2 x float>, <2 x float>* %129, align 1
  %131 = extractelement <2 x float> %130, i32 0
  %132 = inttoptr i64 %125 to float*
  store float %131, float* %132
  store %struct.Memory* %loadMem_480016, %struct.Memory** %MEMORY
  %loadMem_48001b = load %struct.Memory*, %struct.Memory** %MEMORY
  %133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %134 = getelementptr inbounds %struct.GPR, %struct.GPR* %133, i32 0, i32 33
  %135 = getelementptr inbounds %struct.Reg, %struct.Reg* %134, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %135 to i64*
  %136 = load i64, i64* %PC.i250
  %137 = add i64 %136, 8
  store i64 %137, i64* %PC.i250
  %138 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %139, align 1
  %140 = and i32 %138, 255
  %141 = call i32 @llvm.ctpop.i32(i32 %140)
  %142 = trunc i32 %141 to i8
  %143 = and i8 %142, 1
  %144 = xor i8 %143, 1
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %144, i8* %145, align 1
  %146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %146, align 1
  %147 = icmp eq i32 %138, 0
  %148 = zext i1 %147 to i8
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %148, i8* %149, align 1
  %150 = lshr i32 %138, 31
  %151 = trunc i32 %150 to i8
  %152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %151, i8* %152, align 1
  %153 = lshr i32 %138, 31
  %154 = xor i32 %150, %153
  %155 = add i32 %154, %153
  %156 = icmp eq i32 %155, 2
  %157 = zext i1 %156 to i8
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %157, i8* %158, align 1
  store %struct.Memory* %loadMem_48001b, %struct.Memory** %MEMORY
  %loadMem_480023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 33
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %161 to i64*
  %162 = load i64, i64* %PC.i294
  %163 = add i64 %162, 11
  %164 = load i64, i64* %PC.i294
  %165 = add i64 %164, 6
  %166 = load i64, i64* %PC.i294
  %167 = add i64 %166, 6
  store i64 %167, i64* %PC.i294
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %169 = load i8, i8* %168, align 1
  %170 = icmp eq i8 %169, 0
  %171 = zext i1 %170 to i8
  store i8 %171, i8* %BRANCH_TAKEN, align 1
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %173 = select i1 %170, i64 %163, i64 %165
  store i64 %173, i64* %172, align 8
  store %struct.Memory* %loadMem_480023, %struct.Memory** %MEMORY
  %loadBr_480023 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480023 = icmp eq i8 %loadBr_480023, 1
  br i1 %cmpBr_480023, label %block_.L_48002e, label %block_480029

block_480029:                                     ; preds = %entry
  %loadMem_480029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 33
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %176 to i64*
  %177 = load i64, i64* %PC.i353
  %178 = add i64 %177, 45
  %179 = load i64, i64* %PC.i353
  %180 = add i64 %179, 5
  store i64 %180, i64* %PC.i353
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %178, i64* %181, align 8
  store %struct.Memory* %loadMem_480029, %struct.Memory** %MEMORY
  br label %block_.L_480056

block_.L_48002e:                                  ; preds = %entry
  %loadMem_48002e = load %struct.Memory*, %struct.Memory** %MEMORY
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %183 = getelementptr inbounds %struct.GPR, %struct.GPR* %182, i32 0, i32 33
  %184 = getelementptr inbounds %struct.Reg, %struct.Reg* %183, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %184 to i64*
  %185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %186 = getelementptr inbounds %struct.GPR, %struct.GPR* %185, i32 0, i32 11
  %187 = getelementptr inbounds %struct.Reg, %struct.Reg* %186, i32 0, i32 0
  %RDI.i440 = bitcast %union.anon* %187 to i64*
  %188 = load i64, i64* %PC.i439
  %189 = add i64 %188, 10
  store i64 %189, i64* %PC.i439
  store i64 ptrtoint (%G__0x581e84_type* @G__0x581e84 to i64), i64* %RDI.i440, align 8
  store %struct.Memory* %loadMem_48002e, %struct.Memory** %MEMORY
  %loadMem_480038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %191 = getelementptr inbounds %struct.GPR, %struct.GPR* %190, i32 0, i32 33
  %192 = getelementptr inbounds %struct.Reg, %struct.Reg* %191, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %192 to i64*
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %194 = getelementptr inbounds %struct.GPR, %struct.GPR* %193, i32 0, i32 9
  %195 = getelementptr inbounds %struct.Reg, %struct.Reg* %194, i32 0, i32 0
  %RSI.i491 = bitcast %union.anon* %195 to i64*
  %196 = load i64, i64* %PC.i490
  %197 = add i64 %196, 5
  store i64 %197, i64* %PC.i490
  store i64 2391, i64* %RSI.i491, align 8
  store %struct.Memory* %loadMem_480038, %struct.Memory** %MEMORY
  %loadMem_48003d = load %struct.Memory*, %struct.Memory** %MEMORY
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 33
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 7
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RDX.i522 = bitcast %union.anon* %203 to i64*
  %204 = load i64, i64* %PC.i521
  %205 = add i64 %204, 10
  store i64 %205, i64* %PC.i521
  store i64 ptrtoint (%G__0x57a100_type* @G__0x57a100 to i64), i64* %RDX.i522, align 8
  store %struct.Memory* %loadMem_48003d, %struct.Memory** %MEMORY
  %loadMem_480047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %207 = getelementptr inbounds %struct.GPR, %struct.GPR* %206, i32 0, i32 33
  %208 = getelementptr inbounds %struct.Reg, %struct.Reg* %207, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %208 to i64*
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %210 = getelementptr inbounds %struct.GPR, %struct.GPR* %209, i32 0, i32 1
  %211 = getelementptr inbounds %struct.Reg, %struct.Reg* %210, i32 0, i32 0
  %RAX.i548 = bitcast %union.anon* %211 to i64*
  %212 = load i64, i64* %PC.i547
  %213 = add i64 %212, 5
  store i64 %213, i64* %PC.i547
  store i64 4294967295, i64* %RAX.i548, align 8
  store %struct.Memory* %loadMem_480047, %struct.Memory** %MEMORY
  %loadMem_48004c = load %struct.Memory*, %struct.Memory** %MEMORY
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %215 = getelementptr inbounds %struct.GPR, %struct.GPR* %214, i32 0, i32 33
  %216 = getelementptr inbounds %struct.Reg, %struct.Reg* %215, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %216 to i64*
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %218 = getelementptr inbounds %struct.GPR, %struct.GPR* %217, i32 0, i32 1
  %219 = getelementptr inbounds %struct.Reg, %struct.Reg* %218, i32 0, i32 0
  %EAX.i627 = bitcast %union.anon* %219 to i32*
  %220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %221 = getelementptr inbounds %struct.GPR, %struct.GPR* %220, i32 0, i32 5
  %222 = getelementptr inbounds %struct.Reg, %struct.Reg* %221, i32 0, i32 0
  %RCX.i628 = bitcast %union.anon* %222 to i64*
  %223 = load i32, i32* %EAX.i627
  %224 = zext i32 %223 to i64
  %225 = load i64, i64* %PC.i626
  %226 = add i64 %225, 2
  store i64 %226, i64* %PC.i626
  %227 = and i64 %224, 4294967295
  store i64 %227, i64* %RCX.i628, align 8
  store %struct.Memory* %loadMem_48004c, %struct.Memory** %MEMORY
  %loadMem_48004e = load %struct.Memory*, %struct.Memory** %MEMORY
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 33
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 1
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %EAX.i690 = bitcast %union.anon* %233 to i32*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 17
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %236 to i32*
  %237 = bitcast i32* %R8D.i to i64*
  %238 = load i32, i32* %EAX.i690
  %239 = zext i32 %238 to i64
  %240 = load i64, i64* %PC.i689
  %241 = add i64 %240, 3
  store i64 %241, i64* %PC.i689
  %242 = and i64 %239, 4294967295
  store i64 %242, i64* %237, align 8
  store %struct.Memory* %loadMem_48004e, %struct.Memory** %MEMORY
  %loadMem1_480051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %244 = getelementptr inbounds %struct.GPR, %struct.GPR* %243, i32 0, i32 33
  %245 = getelementptr inbounds %struct.Reg, %struct.Reg* %244, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %245 to i64*
  %246 = load i64, i64* %PC.i758
  %247 = add i64 %246, -188353
  %248 = load i64, i64* %PC.i758
  %249 = add i64 %248, 5
  %250 = load i64, i64* %PC.i758
  %251 = add i64 %250, 5
  store i64 %251, i64* %PC.i758
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %253 = load i64, i64* %252, align 8
  %254 = add i64 %253, -8
  %255 = inttoptr i64 %254 to i64*
  store i64 %249, i64* %255
  store i64 %254, i64* %252, align 8
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %247, i64* %256, align 8
  store %struct.Memory* %loadMem1_480051, %struct.Memory** %MEMORY
  %loadMem2_480051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480051 = load i64, i64* %3
  %call2_480051 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_480051, %struct.Memory* %loadMem2_480051)
  store %struct.Memory* %call2_480051, %struct.Memory** %MEMORY
  br label %block_.L_480056

block_.L_480056:                                  ; preds = %block_.L_48002e, %block_480029
  %loadMem_480056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %258 = getelementptr inbounds %struct.GPR, %struct.GPR* %257, i32 0, i32 33
  %259 = getelementptr inbounds %struct.Reg, %struct.Reg* %258, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %259 to i64*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %261 = getelementptr inbounds %struct.GPR, %struct.GPR* %260, i32 0, i32 11
  %262 = getelementptr inbounds %struct.Reg, %struct.Reg* %261, i32 0, i32 0
  %RDI.i776 = bitcast %union.anon* %262 to i64*
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %264 = getelementptr inbounds %struct.GPR, %struct.GPR* %263, i32 0, i32 15
  %265 = getelementptr inbounds %struct.Reg, %struct.Reg* %264, i32 0, i32 0
  %RBP.i777 = bitcast %union.anon* %265 to i64*
  %266 = load i64, i64* %RBP.i777
  %267 = sub i64 %266, 8
  %268 = load i64, i64* %PC.i775
  %269 = add i64 %268, 3
  store i64 %269, i64* %PC.i775
  %270 = inttoptr i64 %267 to i32*
  %271 = load i32, i32* %270
  %272 = zext i32 %271 to i64
  store i64 %272, i64* %RDI.i776, align 8
  store %struct.Memory* %loadMem_480056, %struct.Memory** %MEMORY
  %loadMem1_480059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %274 = getelementptr inbounds %struct.GPR, %struct.GPR* %273, i32 0, i32 33
  %275 = getelementptr inbounds %struct.Reg, %struct.Reg* %274, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %275 to i64*
  %276 = load i64, i64* %PC.i801
  %277 = add i64 %276, -297049
  %278 = load i64, i64* %PC.i801
  %279 = add i64 %278, 5
  %280 = load i64, i64* %PC.i801
  %281 = add i64 %280, 5
  store i64 %281, i64* %PC.i801
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %283 = load i64, i64* %282, align 8
  %284 = add i64 %283, -8
  %285 = inttoptr i64 %284 to i64*
  store i64 %279, i64* %285
  store i64 %284, i64* %282, align 8
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %277, i64* %286, align 8
  store %struct.Memory* %loadMem1_480059, %struct.Memory** %MEMORY
  %loadMem2_480059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480059 = load i64, i64* %3
  %call2_480059 = call %struct.Memory* @sub_437800.is_antisuji_move(%struct.State* %0, i64 %loadPC_480059, %struct.Memory* %loadMem2_480059)
  store %struct.Memory* %call2_480059, %struct.Memory** %MEMORY
  %loadMem_48005e = load %struct.Memory*, %struct.Memory** %MEMORY
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %288 = getelementptr inbounds %struct.GPR, %struct.GPR* %287, i32 0, i32 33
  %289 = getelementptr inbounds %struct.Reg, %struct.Reg* %288, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %289 to i64*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %291 = getelementptr inbounds %struct.GPR, %struct.GPR* %290, i32 0, i32 1
  %292 = getelementptr inbounds %struct.Reg, %struct.Reg* %291, i32 0, i32 0
  %EAX.i819 = bitcast %union.anon* %292 to i32*
  %293 = load i32, i32* %EAX.i819
  %294 = zext i32 %293 to i64
  %295 = load i64, i64* %PC.i818
  %296 = add i64 %295, 3
  store i64 %296, i64* %PC.i818
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %297, align 1
  %298 = and i32 %293, 255
  %299 = call i32 @llvm.ctpop.i32(i32 %298)
  %300 = trunc i32 %299 to i8
  %301 = and i8 %300, 1
  %302 = xor i8 %301, 1
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %302, i8* %303, align 1
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %304, align 1
  %305 = icmp eq i32 %293, 0
  %306 = zext i1 %305 to i8
  %307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %306, i8* %307, align 1
  %308 = lshr i32 %293, 31
  %309 = trunc i32 %308 to i8
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %309, i8* %310, align 1
  %311 = lshr i32 %293, 31
  %312 = xor i32 %308, %311
  %313 = add i32 %312, %311
  %314 = icmp eq i32 %313, 2
  %315 = zext i1 %314 to i8
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %315, i8* %316, align 1
  store %struct.Memory* %loadMem_48005e, %struct.Memory** %MEMORY
  %loadMem_480061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %318 = getelementptr inbounds %struct.GPR, %struct.GPR* %317, i32 0, i32 33
  %319 = getelementptr inbounds %struct.Reg, %struct.Reg* %318, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %319 to i64*
  %320 = load i64, i64* %PC.i864
  %321 = add i64 %320, 19
  %322 = load i64, i64* %PC.i864
  %323 = add i64 %322, 6
  %324 = load i64, i64* %PC.i864
  %325 = add i64 %324, 6
  store i64 %325, i64* %PC.i864
  %326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %327 = load i8, i8* %326, align 1
  store i8 %327, i8* %BRANCH_TAKEN, align 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %329 = icmp ne i8 %327, 0
  %330 = select i1 %329, i64 %321, i64 %323
  store i64 %330, i64* %328, align 8
  store %struct.Memory* %loadMem_480061, %struct.Memory** %MEMORY
  %loadBr_480061 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480061 = icmp eq i8 %loadBr_480061, 1
  br i1 %cmpBr_480061, label %block_.L_480074, label %block_480067

block_480067:                                     ; preds = %block_.L_480056
  %loadMem_480067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %332 = getelementptr inbounds %struct.GPR, %struct.GPR* %331, i32 0, i32 33
  %333 = getelementptr inbounds %struct.Reg, %struct.Reg* %332, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %333 to i64*
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %335 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %334, i64 0, i64 0
  %YMM0.i1041 = bitcast %union.VectorReg* %335 to %"class.std::bitset"*
  %336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %337 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %336, i64 0, i64 0
  %XMM0.i1042 = bitcast %union.VectorReg* %337 to %union.vec128_t*
  %338 = bitcast %"class.std::bitset"* %YMM0.i1041 to i8*
  %339 = bitcast %"class.std::bitset"* %YMM0.i1041 to i8*
  %340 = bitcast %union.vec128_t* %XMM0.i1042 to i8*
  %341 = load i64, i64* %PC.i1040
  %342 = add i64 %341, 3
  store i64 %342, i64* %PC.i1040
  %343 = bitcast i8* %339 to i64*
  %344 = load i64, i64* %343, align 1
  %345 = getelementptr inbounds i8, i8* %339, i64 8
  %346 = bitcast i8* %345 to i64*
  %347 = load i64, i64* %346, align 1
  %348 = bitcast i8* %340 to i64*
  %349 = load i64, i64* %348, align 1
  %350 = getelementptr inbounds i8, i8* %340, i64 8
  %351 = bitcast i8* %350 to i64*
  %352 = load i64, i64* %351, align 1
  %353 = xor i64 %349, %344
  %354 = xor i64 %352, %347
  %355 = trunc i64 %353 to i32
  %356 = lshr i64 %353, 32
  %357 = trunc i64 %356 to i32
  %358 = bitcast i8* %338 to i32*
  store i32 %355, i32* %358, align 1
  %359 = getelementptr inbounds i8, i8* %338, i64 4
  %360 = bitcast i8* %359 to i32*
  store i32 %357, i32* %360, align 1
  %361 = trunc i64 %354 to i32
  %362 = getelementptr inbounds i8, i8* %338, i64 8
  %363 = bitcast i8* %362 to i32*
  store i32 %361, i32* %363, align 1
  %364 = lshr i64 %354, 32
  %365 = trunc i64 %364 to i32
  %366 = getelementptr inbounds i8, i8* %338, i64 12
  %367 = bitcast i8* %366 to i32*
  store i32 %365, i32* %367, align 1
  store %struct.Memory* %loadMem_480067, %struct.Memory** %MEMORY
  %loadMem_48006a = load %struct.Memory*, %struct.Memory** %MEMORY
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %369 = getelementptr inbounds %struct.GPR, %struct.GPR* %368, i32 0, i32 33
  %370 = getelementptr inbounds %struct.Reg, %struct.Reg* %369, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %370 to i64*
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %372 = getelementptr inbounds %struct.GPR, %struct.GPR* %371, i32 0, i32 15
  %373 = getelementptr inbounds %struct.Reg, %struct.Reg* %372, i32 0, i32 0
  %RBP.i1160 = bitcast %union.anon* %373 to i64*
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %375 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %374, i64 0, i64 0
  %XMM0.i1161 = bitcast %union.VectorReg* %375 to %union.vec128_t*
  %376 = load i64, i64* %RBP.i1160
  %377 = sub i64 %376, 4
  %378 = bitcast %union.vec128_t* %XMM0.i1161 to i8*
  %379 = load i64, i64* %PC.i1159
  %380 = add i64 %379, 5
  store i64 %380, i64* %PC.i1159
  %381 = bitcast i8* %378 to <2 x float>*
  %382 = load <2 x float>, <2 x float>* %381, align 1
  %383 = extractelement <2 x float> %382, i32 0
  %384 = inttoptr i64 %377 to float*
  store float %383, float* %384
  store %struct.Memory* %loadMem_48006a, %struct.Memory** %MEMORY
  %loadMem_48006f = load %struct.Memory*, %struct.Memory** %MEMORY
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %386 = getelementptr inbounds %struct.GPR, %struct.GPR* %385, i32 0, i32 33
  %387 = getelementptr inbounds %struct.Reg, %struct.Reg* %386, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %387 to i64*
  %388 = load i64, i64* %PC.i1259
  %389 = add i64 %388, 3833
  %390 = load i64, i64* %PC.i1259
  %391 = add i64 %390, 5
  store i64 %391, i64* %PC.i1259
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %389, i64* %392, align 8
  store %struct.Memory* %loadMem_48006f, %struct.Memory** %MEMORY
  br label %block_.L_480f68

block_.L_480074:                                  ; preds = %block_.L_480056
  %loadMem_480074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %394 = getelementptr inbounds %struct.GPR, %struct.GPR* %393, i32 0, i32 33
  %395 = getelementptr inbounds %struct.Reg, %struct.Reg* %394, i32 0, i32 0
  %PC.i1373 = bitcast %union.anon* %395 to i64*
  %396 = load i64, i64* %PC.i1373
  %397 = add i64 %396, 8
  store i64 %397, i64* %PC.i1373
  %398 = load i32, i32* bitcast (%G_0xab0f20_type* @G_0xab0f20 to i32*)
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %399, align 1
  %400 = and i32 %398, 255
  %401 = call i32 @llvm.ctpop.i32(i32 %400)
  %402 = trunc i32 %401 to i8
  %403 = and i8 %402, 1
  %404 = xor i8 %403, 1
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %404, i8* %405, align 1
  %406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %406, align 1
  %407 = icmp eq i32 %398, 0
  %408 = zext i1 %407 to i8
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %408, i8* %409, align 1
  %410 = lshr i32 %398, 31
  %411 = trunc i32 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %411, i8* %412, align 1
  %413 = lshr i32 %398, 31
  %414 = xor i32 %410, %413
  %415 = add i32 %414, %413
  %416 = icmp eq i32 %415, 2
  %417 = zext i1 %416 to i8
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %417, i8* %418, align 1
  store %struct.Memory* %loadMem_480074, %struct.Memory** %MEMORY
  %loadMem_48007c = load %struct.Memory*, %struct.Memory** %MEMORY
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %420 = getelementptr inbounds %struct.GPR, %struct.GPR* %419, i32 0, i32 33
  %421 = getelementptr inbounds %struct.Reg, %struct.Reg* %420, i32 0, i32 0
  %PC.i1423 = bitcast %union.anon* %421 to i64*
  %422 = load i64, i64* %PC.i1423
  %423 = add i64 %422, 20
  %424 = load i64, i64* %PC.i1423
  %425 = add i64 %424, 6
  %426 = load i64, i64* %PC.i1423
  %427 = add i64 %426, 6
  store i64 %427, i64* %PC.i1423
  %428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %429 = load i8, i8* %428, align 1
  store i8 %429, i8* %BRANCH_TAKEN, align 1
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %431 = icmp ne i8 %429, 0
  %432 = select i1 %431, i64 %423, i64 %425
  store i64 %432, i64* %430, align 8
  store %struct.Memory* %loadMem_48007c, %struct.Memory** %MEMORY
  %loadBr_48007c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48007c = icmp eq i8 %loadBr_48007c, 1
  br i1 %cmpBr_48007c, label %block_.L_480090, label %block_480082

block_480082:                                     ; preds = %block_.L_480074
  %loadMem_480082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %434 = getelementptr inbounds %struct.GPR, %struct.GPR* %433, i32 0, i32 33
  %435 = getelementptr inbounds %struct.Reg, %struct.Reg* %434, i32 0, i32 0
  %PC.i1507 = bitcast %union.anon* %435 to i64*
  %436 = load i64, i64* %PC.i1507
  %437 = add i64 %436, 8
  store i64 %437, i64* %PC.i1507
  %438 = load i32, i32* bitcast (%G_0xab0edc_type* @G_0xab0edc to i32*)
  %439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %439, align 1
  %440 = and i32 %438, 255
  %441 = call i32 @llvm.ctpop.i32(i32 %440)
  %442 = trunc i32 %441 to i8
  %443 = and i8 %442, 1
  %444 = xor i8 %443, 1
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %444, i8* %445, align 1
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %446, align 1
  %447 = icmp eq i32 %438, 0
  %448 = zext i1 %447 to i8
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %448, i8* %449, align 1
  %450 = lshr i32 %438, 31
  %451 = trunc i32 %450 to i8
  %452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %451, i8* %452, align 1
  %453 = lshr i32 %438, 31
  %454 = xor i32 %450, %453
  %455 = add i32 %454, %453
  %456 = icmp eq i32 %455, 2
  %457 = zext i1 %456 to i8
  %458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %457, i8* %458, align 1
  store %struct.Memory* %loadMem_480082, %struct.Memory** %MEMORY
  %loadMem_48008a = load %struct.Memory*, %struct.Memory** %MEMORY
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %460 = getelementptr inbounds %struct.GPR, %struct.GPR* %459, i32 0, i32 33
  %461 = getelementptr inbounds %struct.Reg, %struct.Reg* %460, i32 0, i32 0
  %PC.i1563 = bitcast %union.anon* %461 to i64*
  %462 = load i64, i64* %PC.i1563
  %463 = add i64 %462, 280
  %464 = load i64, i64* %PC.i1563
  %465 = add i64 %464, 6
  %466 = load i64, i64* %PC.i1563
  %467 = add i64 %466, 6
  store i64 %467, i64* %PC.i1563
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %469 = load i8, i8* %468, align 1
  store i8 %469, i8* %BRANCH_TAKEN, align 1
  %470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %471 = icmp ne i8 %469, 0
  %472 = select i1 %471, i64 %463, i64 %465
  store i64 %472, i64* %470, align 8
  store %struct.Memory* %loadMem_48008a, %struct.Memory** %MEMORY
  %loadBr_48008a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48008a = icmp eq i8 %loadBr_48008a, 1
  br i1 %cmpBr_48008a, label %block_.L_4801a2, label %block_.L_480090

block_.L_480090:                                  ; preds = %block_480082, %block_.L_480074
  %loadMem_480090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %474 = getelementptr inbounds %struct.GPR, %struct.GPR* %473, i32 0, i32 33
  %475 = getelementptr inbounds %struct.Reg, %struct.Reg* %474, i32 0, i32 0
  %PC.i1584 = bitcast %union.anon* %475 to i64*
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %477 = getelementptr inbounds %struct.GPR, %struct.GPR* %476, i32 0, i32 1
  %478 = getelementptr inbounds %struct.Reg, %struct.Reg* %477, i32 0, i32 0
  %RAX.i1585 = bitcast %union.anon* %478 to i64*
  %479 = load i64, i64* %PC.i1584
  %480 = add i64 %479, 10
  store i64 %480, i64* %PC.i1584
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1585, align 8
  store %struct.Memory* %loadMem_480090, %struct.Memory** %MEMORY
  %loadMem_48009a = load %struct.Memory*, %struct.Memory** %MEMORY
  %481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %482 = getelementptr inbounds %struct.GPR, %struct.GPR* %481, i32 0, i32 33
  %483 = getelementptr inbounds %struct.Reg, %struct.Reg* %482, i32 0, i32 0
  %PC.i1656 = bitcast %union.anon* %483 to i64*
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %485 = getelementptr inbounds %struct.GPR, %struct.GPR* %484, i32 0, i32 5
  %486 = getelementptr inbounds %struct.Reg, %struct.Reg* %485, i32 0, i32 0
  %RCX.i1657 = bitcast %union.anon* %486 to i64*
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %488 = getelementptr inbounds %struct.GPR, %struct.GPR* %487, i32 0, i32 15
  %489 = getelementptr inbounds %struct.Reg, %struct.Reg* %488, i32 0, i32 0
  %RBP.i1658 = bitcast %union.anon* %489 to i64*
  %490 = load i64, i64* %RBP.i1658
  %491 = sub i64 %490, 8
  %492 = load i64, i64* %PC.i1656
  %493 = add i64 %492, 4
  store i64 %493, i64* %PC.i1656
  %494 = inttoptr i64 %491 to i32*
  %495 = load i32, i32* %494
  %496 = sext i32 %495 to i64
  store i64 %496, i64* %RCX.i1657, align 8
  store %struct.Memory* %loadMem_48009a, %struct.Memory** %MEMORY
  %loadMem_48009e = load %struct.Memory*, %struct.Memory** %MEMORY
  %497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %498 = getelementptr inbounds %struct.GPR, %struct.GPR* %497, i32 0, i32 33
  %499 = getelementptr inbounds %struct.Reg, %struct.Reg* %498, i32 0, i32 0
  %PC.i1676 = bitcast %union.anon* %499 to i64*
  %500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %501 = getelementptr inbounds %struct.GPR, %struct.GPR* %500, i32 0, i32 5
  %502 = getelementptr inbounds %struct.Reg, %struct.Reg* %501, i32 0, i32 0
  %RCX.i1677 = bitcast %union.anon* %502 to i64*
  %503 = load i64, i64* %RCX.i1677
  %504 = load i64, i64* %PC.i1676
  %505 = add i64 %504, 7
  store i64 %505, i64* %PC.i1676
  %506 = sext i64 %503 to i128
  %507 = and i128 %506, -18446744073709551616
  %508 = zext i64 %503 to i128
  %509 = or i128 %507, %508
  %510 = mul i128 564, %509
  %511 = trunc i128 %510 to i64
  store i64 %511, i64* %RCX.i1677, align 8
  %512 = sext i64 %511 to i128
  %513 = icmp ne i128 %512, %510
  %514 = zext i1 %513 to i8
  %515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %514, i8* %515, align 1
  %516 = trunc i128 %510 to i32
  %517 = and i32 %516, 255
  %518 = call i32 @llvm.ctpop.i32(i32 %517)
  %519 = trunc i32 %518 to i8
  %520 = and i8 %519, 1
  %521 = xor i8 %520, 1
  %522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %521, i8* %522, align 1
  %523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %523, align 1
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %524, align 1
  %525 = lshr i64 %511, 63
  %526 = trunc i64 %525 to i8
  %527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %526, i8* %527, align 1
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %514, i8* %528, align 1
  store %struct.Memory* %loadMem_48009e, %struct.Memory** %MEMORY
  %loadMem_4800a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 33
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %PC.i1688 = bitcast %union.anon* %531 to i64*
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %533 = getelementptr inbounds %struct.GPR, %struct.GPR* %532, i32 0, i32 1
  %534 = getelementptr inbounds %struct.Reg, %struct.Reg* %533, i32 0, i32 0
  %RAX.i1689 = bitcast %union.anon* %534 to i64*
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %536 = getelementptr inbounds %struct.GPR, %struct.GPR* %535, i32 0, i32 5
  %537 = getelementptr inbounds %struct.Reg, %struct.Reg* %536, i32 0, i32 0
  %RCX.i1690 = bitcast %union.anon* %537 to i64*
  %538 = load i64, i64* %RAX.i1689
  %539 = load i64, i64* %RCX.i1690
  %540 = load i64, i64* %PC.i1688
  %541 = add i64 %540, 3
  store i64 %541, i64* %PC.i1688
  %542 = add i64 %539, %538
  store i64 %542, i64* %RAX.i1689, align 8
  %543 = icmp ult i64 %542, %538
  %544 = icmp ult i64 %542, %539
  %545 = or i1 %543, %544
  %546 = zext i1 %545 to i8
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %546, i8* %547, align 1
  %548 = trunc i64 %542 to i32
  %549 = and i32 %548, 255
  %550 = call i32 @llvm.ctpop.i32(i32 %549)
  %551 = trunc i32 %550 to i8
  %552 = and i8 %551, 1
  %553 = xor i8 %552, 1
  %554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %553, i8* %554, align 1
  %555 = xor i64 %539, %538
  %556 = xor i64 %555, %542
  %557 = lshr i64 %556, 4
  %558 = trunc i64 %557 to i8
  %559 = and i8 %558, 1
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %559, i8* %560, align 1
  %561 = icmp eq i64 %542, 0
  %562 = zext i1 %561 to i8
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %562, i8* %563, align 1
  %564 = lshr i64 %542, 63
  %565 = trunc i64 %564 to i8
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %565, i8* %566, align 1
  %567 = lshr i64 %538, 63
  %568 = lshr i64 %539, 63
  %569 = xor i64 %564, %567
  %570 = xor i64 %564, %568
  %571 = add i64 %569, %570
  %572 = icmp eq i64 %571, 2
  %573 = zext i1 %572 to i8
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %573, i8* %574, align 1
  store %struct.Memory* %loadMem_4800a5, %struct.Memory** %MEMORY
  %loadMem_4800a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %576 = getelementptr inbounds %struct.GPR, %struct.GPR* %575, i32 0, i32 33
  %577 = getelementptr inbounds %struct.Reg, %struct.Reg* %576, i32 0, i32 0
  %PC.i1844 = bitcast %union.anon* %577 to i64*
  %578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %579 = getelementptr inbounds %struct.GPR, %struct.GPR* %578, i32 0, i32 1
  %580 = getelementptr inbounds %struct.Reg, %struct.Reg* %579, i32 0, i32 0
  %RAX.i1845 = bitcast %union.anon* %580 to i64*
  %581 = load i64, i64* %RAX.i1845
  %582 = add i64 %581, 72
  %583 = load i64, i64* %PC.i1844
  %584 = add i64 %583, 4
  store i64 %584, i64* %PC.i1844
  %585 = inttoptr i64 %582 to i32*
  %586 = load i32, i32* %585
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %587, align 1
  %588 = and i32 %586, 255
  %589 = call i32 @llvm.ctpop.i32(i32 %588)
  %590 = trunc i32 %589 to i8
  %591 = and i8 %590, 1
  %592 = xor i8 %591, 1
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %592, i8* %593, align 1
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %594, align 1
  %595 = icmp eq i32 %586, 0
  %596 = zext i1 %595 to i8
  %597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %596, i8* %597, align 1
  %598 = lshr i32 %586, 31
  %599 = trunc i32 %598 to i8
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %599, i8* %600, align 1
  %601 = lshr i32 %586, 31
  %602 = xor i32 %598, %601
  %603 = add i32 %602, %601
  %604 = icmp eq i32 %603, 2
  %605 = zext i1 %604 to i8
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %605, i8* %606, align 1
  store %struct.Memory* %loadMem_4800a8, %struct.Memory** %MEMORY
  %loadMem_4800ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %608 = getelementptr inbounds %struct.GPR, %struct.GPR* %607, i32 0, i32 33
  %609 = getelementptr inbounds %struct.Reg, %struct.Reg* %608, i32 0, i32 0
  %PC.i1862 = bitcast %union.anon* %609 to i64*
  %610 = load i64, i64* %PC.i1862
  %611 = add i64 %610, 48
  %612 = load i64, i64* %PC.i1862
  %613 = add i64 %612, 6
  %614 = load i64, i64* %PC.i1862
  %615 = add i64 %614, 6
  store i64 %615, i64* %PC.i1862
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %617 = load i8, i8* %616, align 1
  %618 = icmp ne i8 %617, 0
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %620 = load i8, i8* %619, align 1
  %621 = icmp ne i8 %620, 0
  %622 = xor i1 %618, %621
  %623 = xor i1 %622, true
  %624 = zext i1 %623 to i8
  store i8 %624, i8* %BRANCH_TAKEN, align 1
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %626 = select i1 %622, i64 %613, i64 %611
  store i64 %626, i64* %625, align 8
  store %struct.Memory* %loadMem_4800ac, %struct.Memory** %MEMORY
  %loadBr_4800ac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4800ac = icmp eq i8 %loadBr_4800ac, 1
  br i1 %cmpBr_4800ac, label %block_.L_4800dc, label %block_4800b2

block_4800b2:                                     ; preds = %block_.L_480090
  %loadMem_4800b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %628 = getelementptr inbounds %struct.GPR, %struct.GPR* %627, i32 0, i32 33
  %629 = getelementptr inbounds %struct.Reg, %struct.Reg* %628, i32 0, i32 0
  %PC.i1859 = bitcast %union.anon* %629 to i64*
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %631 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %630, i64 0, i64 0
  %YMM0.i1860 = bitcast %union.VectorReg* %631 to %"class.std::bitset"*
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %633 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %632, i64 0, i64 0
  %XMM0.i1861 = bitcast %union.VectorReg* %633 to %union.vec128_t*
  %634 = bitcast %"class.std::bitset"* %YMM0.i1860 to i8*
  %635 = bitcast %"class.std::bitset"* %YMM0.i1860 to i8*
  %636 = bitcast %union.vec128_t* %XMM0.i1861 to i8*
  %637 = load i64, i64* %PC.i1859
  %638 = add i64 %637, 3
  store i64 %638, i64* %PC.i1859
  %639 = bitcast i8* %635 to i64*
  %640 = load i64, i64* %639, align 1
  %641 = getelementptr inbounds i8, i8* %635, i64 8
  %642 = bitcast i8* %641 to i64*
  %643 = load i64, i64* %642, align 1
  %644 = bitcast i8* %636 to i64*
  %645 = load i64, i64* %644, align 1
  %646 = getelementptr inbounds i8, i8* %636, i64 8
  %647 = bitcast i8* %646 to i64*
  %648 = load i64, i64* %647, align 1
  %649 = xor i64 %645, %640
  %650 = xor i64 %648, %643
  %651 = trunc i64 %649 to i32
  %652 = lshr i64 %649, 32
  %653 = trunc i64 %652 to i32
  %654 = bitcast i8* %634 to i32*
  store i32 %651, i32* %654, align 1
  %655 = getelementptr inbounds i8, i8* %634, i64 4
  %656 = bitcast i8* %655 to i32*
  store i32 %653, i32* %656, align 1
  %657 = trunc i64 %650 to i32
  %658 = getelementptr inbounds i8, i8* %634, i64 8
  %659 = bitcast i8* %658 to i32*
  store i32 %657, i32* %659, align 1
  %660 = lshr i64 %650, 32
  %661 = trunc i64 %660 to i32
  %662 = getelementptr inbounds i8, i8* %634, i64 12
  %663 = bitcast i8* %662 to i32*
  store i32 %661, i32* %663, align 1
  store %struct.Memory* %loadMem_4800b2, %struct.Memory** %MEMORY
  %loadMem_4800b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %665 = getelementptr inbounds %struct.GPR, %struct.GPR* %664, i32 0, i32 33
  %666 = getelementptr inbounds %struct.Reg, %struct.Reg* %665, i32 0, i32 0
  %PC.i1857 = bitcast %union.anon* %666 to i64*
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %668 = getelementptr inbounds %struct.GPR, %struct.GPR* %667, i32 0, i32 1
  %669 = getelementptr inbounds %struct.Reg, %struct.Reg* %668, i32 0, i32 0
  %RAX.i1858 = bitcast %union.anon* %669 to i64*
  %670 = load i64, i64* %PC.i1857
  %671 = add i64 %670, 10
  store i64 %671, i64* %PC.i1857
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1858, align 8
  store %struct.Memory* %loadMem_4800b5, %struct.Memory** %MEMORY
  %loadMem_4800bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %673 = getelementptr inbounds %struct.GPR, %struct.GPR* %672, i32 0, i32 33
  %674 = getelementptr inbounds %struct.Reg, %struct.Reg* %673, i32 0, i32 0
  %PC.i1854 = bitcast %union.anon* %674 to i64*
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %676 = getelementptr inbounds %struct.GPR, %struct.GPR* %675, i32 0, i32 5
  %677 = getelementptr inbounds %struct.Reg, %struct.Reg* %676, i32 0, i32 0
  %RCX.i1855 = bitcast %union.anon* %677 to i64*
  %678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %679 = getelementptr inbounds %struct.GPR, %struct.GPR* %678, i32 0, i32 15
  %680 = getelementptr inbounds %struct.Reg, %struct.Reg* %679, i32 0, i32 0
  %RBP.i1856 = bitcast %union.anon* %680 to i64*
  %681 = load i64, i64* %RBP.i1856
  %682 = sub i64 %681, 8
  %683 = load i64, i64* %PC.i1854
  %684 = add i64 %683, 4
  store i64 %684, i64* %PC.i1854
  %685 = inttoptr i64 %682 to i32*
  %686 = load i32, i32* %685
  %687 = sext i32 %686 to i64
  store i64 %687, i64* %RCX.i1855, align 8
  store %struct.Memory* %loadMem_4800bf, %struct.Memory** %MEMORY
  %loadMem_4800c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %689 = getelementptr inbounds %struct.GPR, %struct.GPR* %688, i32 0, i32 33
  %690 = getelementptr inbounds %struct.Reg, %struct.Reg* %689, i32 0, i32 0
  %PC.i1852 = bitcast %union.anon* %690 to i64*
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %692 = getelementptr inbounds %struct.GPR, %struct.GPR* %691, i32 0, i32 5
  %693 = getelementptr inbounds %struct.Reg, %struct.Reg* %692, i32 0, i32 0
  %RCX.i1853 = bitcast %union.anon* %693 to i64*
  %694 = load i64, i64* %RCX.i1853
  %695 = load i64, i64* %PC.i1852
  %696 = add i64 %695, 7
  store i64 %696, i64* %PC.i1852
  %697 = sext i64 %694 to i128
  %698 = and i128 %697, -18446744073709551616
  %699 = zext i64 %694 to i128
  %700 = or i128 %698, %699
  %701 = mul i128 564, %700
  %702 = trunc i128 %701 to i64
  store i64 %702, i64* %RCX.i1853, align 8
  %703 = sext i64 %702 to i128
  %704 = icmp ne i128 %703, %701
  %705 = zext i1 %704 to i8
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %705, i8* %706, align 1
  %707 = trunc i128 %701 to i32
  %708 = and i32 %707, 255
  %709 = call i32 @llvm.ctpop.i32(i32 %708)
  %710 = trunc i32 %709 to i8
  %711 = and i8 %710, 1
  %712 = xor i8 %711, 1
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %712, i8* %713, align 1
  %714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %714, align 1
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %715, align 1
  %716 = lshr i64 %702, 63
  %717 = trunc i64 %716 to i8
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %717, i8* %718, align 1
  %719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %705, i8* %719, align 1
  store %struct.Memory* %loadMem_4800c3, %struct.Memory** %MEMORY
  %loadMem_4800ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %721 = getelementptr inbounds %struct.GPR, %struct.GPR* %720, i32 0, i32 33
  %722 = getelementptr inbounds %struct.Reg, %struct.Reg* %721, i32 0, i32 0
  %PC.i1849 = bitcast %union.anon* %722 to i64*
  %723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %724 = getelementptr inbounds %struct.GPR, %struct.GPR* %723, i32 0, i32 1
  %725 = getelementptr inbounds %struct.Reg, %struct.Reg* %724, i32 0, i32 0
  %RAX.i1850 = bitcast %union.anon* %725 to i64*
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %727 = getelementptr inbounds %struct.GPR, %struct.GPR* %726, i32 0, i32 5
  %728 = getelementptr inbounds %struct.Reg, %struct.Reg* %727, i32 0, i32 0
  %RCX.i1851 = bitcast %union.anon* %728 to i64*
  %729 = load i64, i64* %RAX.i1850
  %730 = load i64, i64* %RCX.i1851
  %731 = load i64, i64* %PC.i1849
  %732 = add i64 %731, 3
  store i64 %732, i64* %PC.i1849
  %733 = add i64 %730, %729
  store i64 %733, i64* %RAX.i1850, align 8
  %734 = icmp ult i64 %733, %729
  %735 = icmp ult i64 %733, %730
  %736 = or i1 %734, %735
  %737 = zext i1 %736 to i8
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %737, i8* %738, align 1
  %739 = trunc i64 %733 to i32
  %740 = and i32 %739, 255
  %741 = call i32 @llvm.ctpop.i32(i32 %740)
  %742 = trunc i32 %741 to i8
  %743 = and i8 %742, 1
  %744 = xor i8 %743, 1
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %744, i8* %745, align 1
  %746 = xor i64 %730, %729
  %747 = xor i64 %746, %733
  %748 = lshr i64 %747, 4
  %749 = trunc i64 %748 to i8
  %750 = and i8 %749, 1
  %751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %750, i8* %751, align 1
  %752 = icmp eq i64 %733, 0
  %753 = zext i1 %752 to i8
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %753, i8* %754, align 1
  %755 = lshr i64 %733, 63
  %756 = trunc i64 %755 to i8
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %756, i8* %757, align 1
  %758 = lshr i64 %729, 63
  %759 = lshr i64 %730, 63
  %760 = xor i64 %755, %758
  %761 = xor i64 %755, %759
  %762 = add i64 %760, %761
  %763 = icmp eq i64 %762, 2
  %764 = zext i1 %763 to i8
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %764, i8* %765, align 1
  store %struct.Memory* %loadMem_4800ca, %struct.Memory** %MEMORY
  %loadMem_4800cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %767 = getelementptr inbounds %struct.GPR, %struct.GPR* %766, i32 0, i32 33
  %768 = getelementptr inbounds %struct.Reg, %struct.Reg* %767, i32 0, i32 0
  %PC.i1846 = bitcast %union.anon* %768 to i64*
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %770 = getelementptr inbounds %struct.GPR, %struct.GPR* %769, i32 0, i32 1
  %771 = getelementptr inbounds %struct.Reg, %struct.Reg* %770, i32 0, i32 0
  %RAX.i1847 = bitcast %union.anon* %771 to i64*
  %772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %773 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %772, i64 0, i64 1
  %YMM1.i1848 = bitcast %union.VectorReg* %773 to %"class.std::bitset"*
  %774 = bitcast %"class.std::bitset"* %YMM1.i1848 to i8*
  %775 = load i64, i64* %RAX.i1847
  %776 = add i64 %775, 60
  %777 = load i64, i64* %PC.i1846
  %778 = add i64 %777, 5
  store i64 %778, i64* %PC.i1846
  %779 = inttoptr i64 %776 to float*
  %780 = load float, float* %779
  %781 = fpext float %780 to double
  %782 = bitcast i8* %774 to double*
  store double %781, double* %782, align 1
  store %struct.Memory* %loadMem_4800cd, %struct.Memory** %MEMORY
  %loadMem_4800d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %784 = getelementptr inbounds %struct.GPR, %struct.GPR* %783, i32 0, i32 33
  %785 = getelementptr inbounds %struct.Reg, %struct.Reg* %784, i32 0, i32 0
  %PC.i1840 = bitcast %union.anon* %785 to i64*
  %786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %787 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %786, i64 0, i64 0
  %XMM0.i1841 = bitcast %union.VectorReg* %787 to %union.vec128_t*
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %789 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %788, i64 0, i64 1
  %XMM1.i1842 = bitcast %union.VectorReg* %789 to %union.vec128_t*
  %790 = bitcast %union.vec128_t* %XMM1.i1842 to i8*
  %791 = bitcast %union.vec128_t* %XMM0.i1841 to i8*
  %792 = load i64, i64* %PC.i1840
  %793 = add i64 %792, 4
  store i64 %793, i64* %PC.i1840
  %794 = bitcast i8* %790 to double*
  %795 = load double, double* %794, align 1
  %796 = bitcast i8* %791 to double*
  %797 = load double, double* %796, align 1
  %798 = fcmp uno double %795, %797
  br i1 %798, label %799, label %811

; <label>:799:                                    ; preds = %block_4800b2
  %800 = fadd double %795, %797
  %801 = bitcast double %800 to i64
  %802 = and i64 %801, 9221120237041090560
  %803 = icmp eq i64 %802, 9218868437227405312
  %804 = and i64 %801, 2251799813685247
  %805 = icmp ne i64 %804, 0
  %806 = and i1 %803, %805
  br i1 %806, label %807, label %817

; <label>:807:                                    ; preds = %799
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %809 = load i64, i64* %808, align 8
  %810 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %809, %struct.Memory* %loadMem_4800d2)
  br label %routine_ucomisd__xmm0___xmm1.exit1843

; <label>:811:                                    ; preds = %block_4800b2
  %812 = fcmp ogt double %795, %797
  br i1 %812, label %817, label %813

; <label>:813:                                    ; preds = %811
  %814 = fcmp olt double %795, %797
  br i1 %814, label %817, label %815

; <label>:815:                                    ; preds = %813
  %816 = fcmp oeq double %795, %797
  br i1 %816, label %817, label %824

; <label>:817:                                    ; preds = %815, %813, %811, %799
  %818 = phi i8 [ 0, %811 ], [ 0, %813 ], [ 1, %815 ], [ 1, %799 ]
  %819 = phi i8 [ 0, %811 ], [ 0, %813 ], [ 0, %815 ], [ 1, %799 ]
  %820 = phi i8 [ 0, %811 ], [ 1, %813 ], [ 0, %815 ], [ 1, %799 ]
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %818, i8* %821, align 1
  %822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %819, i8* %822, align 1
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %820, i8* %823, align 1
  br label %824

; <label>:824:                                    ; preds = %817, %815
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %825, align 1
  %826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %826, align 1
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %827, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit1843

routine_ucomisd__xmm0___xmm1.exit1843:            ; preds = %807, %824
  %828 = phi %struct.Memory* [ %810, %807 ], [ %loadMem_4800d2, %824 ]
  store %struct.Memory* %828, %struct.Memory** %MEMORY
  %loadMem_4800d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %830 = getelementptr inbounds %struct.GPR, %struct.GPR* %829, i32 0, i32 33
  %831 = getelementptr inbounds %struct.Reg, %struct.Reg* %830, i32 0, i32 0
  %PC.i1839 = bitcast %union.anon* %831 to i64*
  %832 = load i64, i64* %PC.i1839
  %833 = add i64 %832, 204
  %834 = load i64, i64* %PC.i1839
  %835 = add i64 %834, 6
  %836 = load i64, i64* %PC.i1839
  %837 = add i64 %836, 6
  store i64 %837, i64* %PC.i1839
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %839 = load i8, i8* %838, align 1
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %841 = load i8, i8* %840, align 1
  %842 = or i8 %841, %839
  %843 = icmp ne i8 %842, 0
  %844 = zext i1 %843 to i8
  store i8 %844, i8* %BRANCH_TAKEN, align 1
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %846 = select i1 %843, i64 %833, i64 %835
  store i64 %846, i64* %845, align 8
  store %struct.Memory* %loadMem_4800d6, %struct.Memory** %MEMORY
  %loadBr_4800d6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4800d6 = icmp eq i8 %loadBr_4800d6, 1
  br i1 %cmpBr_4800d6, label %block_.L_4801a2, label %block_.L_4800dc

block_.L_4800dc:                                  ; preds = %routine_ucomisd__xmm0___xmm1.exit1843, %block_.L_480090
  %loadMem_4800dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %848 = getelementptr inbounds %struct.GPR, %struct.GPR* %847, i32 0, i32 33
  %849 = getelementptr inbounds %struct.Reg, %struct.Reg* %848, i32 0, i32 0
  %PC.i1837 = bitcast %union.anon* %849 to i64*
  %850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %851 = getelementptr inbounds %struct.GPR, %struct.GPR* %850, i32 0, i32 15
  %852 = getelementptr inbounds %struct.Reg, %struct.Reg* %851, i32 0, i32 0
  %RBP.i1838 = bitcast %union.anon* %852 to i64*
  %853 = load i64, i64* %RBP.i1838
  %854 = sub i64 %853, 32
  %855 = load i64, i64* %PC.i1837
  %856 = add i64 %855, 7
  store i64 %856, i64* %PC.i1837
  %857 = inttoptr i64 %854 to i32*
  store i32 0, i32* %857
  store %struct.Memory* %loadMem_4800dc, %struct.Memory** %MEMORY
  br label %block_.L_4800e3

block_.L_4800e3:                                  ; preds = %block_.L_48012b, %block_.L_4800dc
  %loadMem_4800e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 33
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %PC.i1834 = bitcast %union.anon* %860 to i64*
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 1
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %EAX.i1835 = bitcast %union.anon* %863 to i32*
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %865 = getelementptr inbounds %struct.GPR, %struct.GPR* %864, i32 0, i32 1
  %866 = getelementptr inbounds %struct.Reg, %struct.Reg* %865, i32 0, i32 0
  %RAX.i1836 = bitcast %union.anon* %866 to i64*
  %867 = load i64, i64* %RAX.i1836
  %868 = load i32, i32* %EAX.i1835
  %869 = zext i32 %868 to i64
  %870 = load i64, i64* %PC.i1834
  %871 = add i64 %870, 2
  store i64 %871, i64* %PC.i1834
  %872 = xor i64 %869, %867
  %873 = trunc i64 %872 to i32
  %874 = and i64 %872, 4294967295
  store i64 %874, i64* %RAX.i1836, align 8
  %875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %875, align 1
  %876 = and i32 %873, 255
  %877 = call i32 @llvm.ctpop.i32(i32 %876)
  %878 = trunc i32 %877 to i8
  %879 = and i8 %878, 1
  %880 = xor i8 %879, 1
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %880, i8* %881, align 1
  %882 = icmp eq i32 %873, 0
  %883 = zext i1 %882 to i8
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %883, i8* %884, align 1
  %885 = lshr i32 %873, 31
  %886 = trunc i32 %885 to i8
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %886, i8* %887, align 1
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %888, align 1
  %889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %889, align 1
  store %struct.Memory* %loadMem_4800e3, %struct.Memory** %MEMORY
  %loadMem_4800e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %891 = getelementptr inbounds %struct.GPR, %struct.GPR* %890, i32 0, i32 33
  %892 = getelementptr inbounds %struct.Reg, %struct.Reg* %891, i32 0, i32 0
  %PC.i1831 = bitcast %union.anon* %892 to i64*
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %894 = getelementptr inbounds %struct.GPR, %struct.GPR* %893, i32 0, i32 1
  %895 = getelementptr inbounds %struct.Reg, %struct.Reg* %894, i32 0, i32 0
  %896 = bitcast %union.anon* %895 to %struct.anon.2*
  %AL.i1832 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %896, i32 0, i32 0
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %898 = getelementptr inbounds %struct.GPR, %struct.GPR* %897, i32 0, i32 5
  %899 = getelementptr inbounds %struct.Reg, %struct.Reg* %898, i32 0, i32 0
  %900 = bitcast %union.anon* %899 to %struct.anon.2*
  %CL.i1833 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %900, i32 0, i32 0
  %901 = load i8, i8* %AL.i1832
  %902 = zext i8 %901 to i64
  %903 = load i64, i64* %PC.i1831
  %904 = add i64 %903, 2
  store i64 %904, i64* %PC.i1831
  store i8 %901, i8* %CL.i1833, align 1
  store %struct.Memory* %loadMem_4800e5, %struct.Memory** %MEMORY
  %loadMem_4800e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %906 = getelementptr inbounds %struct.GPR, %struct.GPR* %905, i32 0, i32 33
  %907 = getelementptr inbounds %struct.Reg, %struct.Reg* %906, i32 0, i32 0
  %PC.i1829 = bitcast %union.anon* %907 to i64*
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 7
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %RDX.i1830 = bitcast %union.anon* %910 to i64*
  %911 = load i64, i64* %PC.i1829
  %912 = add i64 %911, 10
  store i64 %912, i64* %PC.i1829
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RDX.i1830, align 8
  store %struct.Memory* %loadMem_4800e7, %struct.Memory** %MEMORY
  %loadMem_4800f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %914 = getelementptr inbounds %struct.GPR, %struct.GPR* %913, i32 0, i32 33
  %915 = getelementptr inbounds %struct.Reg, %struct.Reg* %914, i32 0, i32 0
  %PC.i1826 = bitcast %union.anon* %915 to i64*
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %917 = getelementptr inbounds %struct.GPR, %struct.GPR* %916, i32 0, i32 9
  %918 = getelementptr inbounds %struct.Reg, %struct.Reg* %917, i32 0, i32 0
  %RSI.i1827 = bitcast %union.anon* %918 to i64*
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %920 = getelementptr inbounds %struct.GPR, %struct.GPR* %919, i32 0, i32 15
  %921 = getelementptr inbounds %struct.Reg, %struct.Reg* %920, i32 0, i32 0
  %RBP.i1828 = bitcast %union.anon* %921 to i64*
  %922 = load i64, i64* %RBP.i1828
  %923 = sub i64 %922, 8
  %924 = load i64, i64* %PC.i1826
  %925 = add i64 %924, 4
  store i64 %925, i64* %PC.i1826
  %926 = inttoptr i64 %923 to i32*
  %927 = load i32, i32* %926
  %928 = sext i32 %927 to i64
  store i64 %928, i64* %RSI.i1827, align 8
  store %struct.Memory* %loadMem_4800f1, %struct.Memory** %MEMORY
  %loadMem_4800f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %930 = getelementptr inbounds %struct.GPR, %struct.GPR* %929, i32 0, i32 33
  %931 = getelementptr inbounds %struct.Reg, %struct.Reg* %930, i32 0, i32 0
  %PC.i1824 = bitcast %union.anon* %931 to i64*
  %932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %933 = getelementptr inbounds %struct.GPR, %struct.GPR* %932, i32 0, i32 9
  %934 = getelementptr inbounds %struct.Reg, %struct.Reg* %933, i32 0, i32 0
  %RSI.i1825 = bitcast %union.anon* %934 to i64*
  %935 = load i64, i64* %RSI.i1825
  %936 = load i64, i64* %PC.i1824
  %937 = add i64 %936, 7
  store i64 %937, i64* %PC.i1824
  %938 = sext i64 %935 to i128
  %939 = and i128 %938, -18446744073709551616
  %940 = zext i64 %935 to i128
  %941 = or i128 %939, %940
  %942 = mul i128 564, %941
  %943 = trunc i128 %942 to i64
  store i64 %943, i64* %RSI.i1825, align 8
  %944 = sext i64 %943 to i128
  %945 = icmp ne i128 %944, %942
  %946 = zext i1 %945 to i8
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %946, i8* %947, align 1
  %948 = trunc i128 %942 to i32
  %949 = and i32 %948, 255
  %950 = call i32 @llvm.ctpop.i32(i32 %949)
  %951 = trunc i32 %950 to i8
  %952 = and i8 %951, 1
  %953 = xor i8 %952, 1
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %953, i8* %954, align 1
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %955, align 1
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %956, align 1
  %957 = lshr i64 %943, 63
  %958 = trunc i64 %957 to i8
  %959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %958, i8* %959, align 1
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %946, i8* %960, align 1
  store %struct.Memory* %loadMem_4800f5, %struct.Memory** %MEMORY
  %loadMem_4800fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %962 = getelementptr inbounds %struct.GPR, %struct.GPR* %961, i32 0, i32 33
  %963 = getelementptr inbounds %struct.Reg, %struct.Reg* %962, i32 0, i32 0
  %PC.i1821 = bitcast %union.anon* %963 to i64*
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %965 = getelementptr inbounds %struct.GPR, %struct.GPR* %964, i32 0, i32 7
  %966 = getelementptr inbounds %struct.Reg, %struct.Reg* %965, i32 0, i32 0
  %RDX.i1822 = bitcast %union.anon* %966 to i64*
  %967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %968 = getelementptr inbounds %struct.GPR, %struct.GPR* %967, i32 0, i32 9
  %969 = getelementptr inbounds %struct.Reg, %struct.Reg* %968, i32 0, i32 0
  %RSI.i1823 = bitcast %union.anon* %969 to i64*
  %970 = load i64, i64* %RDX.i1822
  %971 = load i64, i64* %RSI.i1823
  %972 = load i64, i64* %PC.i1821
  %973 = add i64 %972, 3
  store i64 %973, i64* %PC.i1821
  %974 = add i64 %971, %970
  store i64 %974, i64* %RDX.i1822, align 8
  %975 = icmp ult i64 %974, %970
  %976 = icmp ult i64 %974, %971
  %977 = or i1 %975, %976
  %978 = zext i1 %977 to i8
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %978, i8* %979, align 1
  %980 = trunc i64 %974 to i32
  %981 = and i32 %980, 255
  %982 = call i32 @llvm.ctpop.i32(i32 %981)
  %983 = trunc i32 %982 to i8
  %984 = and i8 %983, 1
  %985 = xor i8 %984, 1
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %985, i8* %986, align 1
  %987 = xor i64 %971, %970
  %988 = xor i64 %987, %974
  %989 = lshr i64 %988, 4
  %990 = trunc i64 %989 to i8
  %991 = and i8 %990, 1
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %991, i8* %992, align 1
  %993 = icmp eq i64 %974, 0
  %994 = zext i1 %993 to i8
  %995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %994, i8* %995, align 1
  %996 = lshr i64 %974, 63
  %997 = trunc i64 %996 to i8
  %998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %997, i8* %998, align 1
  %999 = lshr i64 %970, 63
  %1000 = lshr i64 %971, 63
  %1001 = xor i64 %996, %999
  %1002 = xor i64 %996, %1000
  %1003 = add i64 %1001, %1002
  %1004 = icmp eq i64 %1003, 2
  %1005 = zext i1 %1004 to i8
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1005, i8* %1006, align 1
  store %struct.Memory* %loadMem_4800fc, %struct.Memory** %MEMORY
  %loadMem_4800ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1008 = getelementptr inbounds %struct.GPR, %struct.GPR* %1007, i32 0, i32 33
  %1009 = getelementptr inbounds %struct.Reg, %struct.Reg* %1008, i32 0, i32 0
  %PC.i1818 = bitcast %union.anon* %1009 to i64*
  %1010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1011 = getelementptr inbounds %struct.GPR, %struct.GPR* %1010, i32 0, i32 9
  %1012 = getelementptr inbounds %struct.Reg, %struct.Reg* %1011, i32 0, i32 0
  %RSI.i1819 = bitcast %union.anon* %1012 to i64*
  %1013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1014 = getelementptr inbounds %struct.GPR, %struct.GPR* %1013, i32 0, i32 15
  %1015 = getelementptr inbounds %struct.Reg, %struct.Reg* %1014, i32 0, i32 0
  %RBP.i1820 = bitcast %union.anon* %1015 to i64*
  %1016 = load i64, i64* %RBP.i1820
  %1017 = sub i64 %1016, 32
  %1018 = load i64, i64* %PC.i1818
  %1019 = add i64 %1018, 4
  store i64 %1019, i64* %PC.i1818
  %1020 = inttoptr i64 %1017 to i32*
  %1021 = load i32, i32* %1020
  %1022 = sext i32 %1021 to i64
  store i64 %1022, i64* %RSI.i1819, align 8
  store %struct.Memory* %loadMem_4800ff, %struct.Memory** %MEMORY
  %loadMem_480103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1024 = getelementptr inbounds %struct.GPR, %struct.GPR* %1023, i32 0, i32 33
  %1025 = getelementptr inbounds %struct.Reg, %struct.Reg* %1024, i32 0, i32 0
  %PC.i1815 = bitcast %union.anon* %1025 to i64*
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1027 = getelementptr inbounds %struct.GPR, %struct.GPR* %1026, i32 0, i32 7
  %1028 = getelementptr inbounds %struct.Reg, %struct.Reg* %1027, i32 0, i32 0
  %RDX.i1816 = bitcast %union.anon* %1028 to i64*
  %1029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1030 = getelementptr inbounds %struct.GPR, %struct.GPR* %1029, i32 0, i32 9
  %1031 = getelementptr inbounds %struct.Reg, %struct.Reg* %1030, i32 0, i32 0
  %RSI.i1817 = bitcast %union.anon* %1031 to i64*
  %1032 = load i64, i64* %RDX.i1816
  %1033 = load i64, i64* %RSI.i1817
  %1034 = mul i64 %1033, 4
  %1035 = add i64 %1032, 72
  %1036 = add i64 %1035, %1034
  %1037 = load i64, i64* %PC.i1815
  %1038 = add i64 %1037, 5
  store i64 %1038, i64* %PC.i1815
  %1039 = inttoptr i64 %1036 to i32*
  %1040 = load i32, i32* %1039
  %1041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1041, align 1
  %1042 = and i32 %1040, 255
  %1043 = call i32 @llvm.ctpop.i32(i32 %1042)
  %1044 = trunc i32 %1043 to i8
  %1045 = and i8 %1044, 1
  %1046 = xor i8 %1045, 1
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1046, i8* %1047, align 1
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1048, align 1
  %1049 = icmp eq i32 %1040, 0
  %1050 = zext i1 %1049 to i8
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1050, i8* %1051, align 1
  %1052 = lshr i32 %1040, 31
  %1053 = trunc i32 %1052 to i8
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1053, i8* %1054, align 1
  %1055 = lshr i32 %1040, 31
  %1056 = xor i32 %1052, %1055
  %1057 = add i32 %1056, %1055
  %1058 = icmp eq i32 %1057, 2
  %1059 = zext i1 %1058 to i8
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1059, i8* %1060, align 1
  store %struct.Memory* %loadMem_480103, %struct.Memory** %MEMORY
  %loadMem_480108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1062 = getelementptr inbounds %struct.GPR, %struct.GPR* %1061, i32 0, i32 33
  %1063 = getelementptr inbounds %struct.Reg, %struct.Reg* %1062, i32 0, i32 0
  %PC.i1813 = bitcast %union.anon* %1063 to i64*
  %1064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1065 = getelementptr inbounds %struct.GPR, %struct.GPR* %1064, i32 0, i32 5
  %1066 = getelementptr inbounds %struct.Reg, %struct.Reg* %1065, i32 0, i32 0
  %1067 = bitcast %union.anon* %1066 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1067, i32 0, i32 0
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1069 = getelementptr inbounds %struct.GPR, %struct.GPR* %1068, i32 0, i32 15
  %1070 = getelementptr inbounds %struct.Reg, %struct.Reg* %1069, i32 0, i32 0
  %RBP.i1814 = bitcast %union.anon* %1070 to i64*
  %1071 = load i64, i64* %RBP.i1814
  %1072 = sub i64 %1071, 65
  %1073 = load i8, i8* %CL.i
  %1074 = zext i8 %1073 to i64
  %1075 = load i64, i64* %PC.i1813
  %1076 = add i64 %1075, 3
  store i64 %1076, i64* %PC.i1813
  %1077 = inttoptr i64 %1072 to i8*
  store i8 %1073, i8* %1077
  store %struct.Memory* %loadMem_480108, %struct.Memory** %MEMORY
  %loadMem_48010b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1079 = getelementptr inbounds %struct.GPR, %struct.GPR* %1078, i32 0, i32 33
  %1080 = getelementptr inbounds %struct.Reg, %struct.Reg* %1079, i32 0, i32 0
  %PC.i1812 = bitcast %union.anon* %1080 to i64*
  %1081 = load i64, i64* %PC.i1812
  %1082 = add i64 %1081, 16
  %1083 = load i64, i64* %PC.i1812
  %1084 = add i64 %1083, 6
  %1085 = load i64, i64* %PC.i1812
  %1086 = add i64 %1085, 6
  store i64 %1086, i64* %PC.i1812
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1088 = load i8, i8* %1087, align 1
  %1089 = icmp ne i8 %1088, 0
  %1090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1091 = load i8, i8* %1090, align 1
  %1092 = icmp ne i8 %1091, 0
  %1093 = xor i1 %1089, %1092
  %1094 = zext i1 %1093 to i8
  store i8 %1094, i8* %BRANCH_TAKEN, align 1
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1096 = select i1 %1093, i64 %1082, i64 %1084
  store i64 %1096, i64* %1095, align 8
  store %struct.Memory* %loadMem_48010b, %struct.Memory** %MEMORY
  %loadBr_48010b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48010b = icmp eq i8 %loadBr_48010b, 1
  br i1 %cmpBr_48010b, label %block_.L_48011b, label %block_480111

block_480111:                                     ; preds = %block_.L_4800e3
  %loadMem_480111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1098 = getelementptr inbounds %struct.GPR, %struct.GPR* %1097, i32 0, i32 33
  %1099 = getelementptr inbounds %struct.Reg, %struct.Reg* %1098, i32 0, i32 0
  %PC.i1810 = bitcast %union.anon* %1099 to i64*
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1101 = getelementptr inbounds %struct.GPR, %struct.GPR* %1100, i32 0, i32 15
  %1102 = getelementptr inbounds %struct.Reg, %struct.Reg* %1101, i32 0, i32 0
  %RBP.i1811 = bitcast %union.anon* %1102 to i64*
  %1103 = load i64, i64* %RBP.i1811
  %1104 = sub i64 %1103, 32
  %1105 = load i64, i64* %PC.i1810
  %1106 = add i64 %1105, 4
  store i64 %1106, i64* %PC.i1810
  %1107 = inttoptr i64 %1104 to i32*
  %1108 = load i32, i32* %1107
  %1109 = sub i32 %1108, 120
  %1110 = icmp ult i32 %1108, 120
  %1111 = zext i1 %1110 to i8
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1111, i8* %1112, align 1
  %1113 = and i32 %1109, 255
  %1114 = call i32 @llvm.ctpop.i32(i32 %1113)
  %1115 = trunc i32 %1114 to i8
  %1116 = and i8 %1115, 1
  %1117 = xor i8 %1116, 1
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1117, i8* %1118, align 1
  %1119 = xor i32 %1108, 120
  %1120 = xor i32 %1119, %1109
  %1121 = lshr i32 %1120, 4
  %1122 = trunc i32 %1121 to i8
  %1123 = and i8 %1122, 1
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1123, i8* %1124, align 1
  %1125 = icmp eq i32 %1109, 0
  %1126 = zext i1 %1125 to i8
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1126, i8* %1127, align 1
  %1128 = lshr i32 %1109, 31
  %1129 = trunc i32 %1128 to i8
  %1130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1129, i8* %1130, align 1
  %1131 = lshr i32 %1108, 31
  %1132 = xor i32 %1128, %1131
  %1133 = add i32 %1132, %1131
  %1134 = icmp eq i32 %1133, 2
  %1135 = zext i1 %1134 to i8
  %1136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1135, i8* %1136, align 1
  store %struct.Memory* %loadMem_480111, %struct.Memory** %MEMORY
  %loadMem_480115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1138 = getelementptr inbounds %struct.GPR, %struct.GPR* %1137, i32 0, i32 33
  %1139 = getelementptr inbounds %struct.Reg, %struct.Reg* %1138, i32 0, i32 0
  %PC.i1808 = bitcast %union.anon* %1139 to i64*
  %1140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1141 = getelementptr inbounds %struct.GPR, %struct.GPR* %1140, i32 0, i32 1
  %1142 = getelementptr inbounds %struct.Reg, %struct.Reg* %1141, i32 0, i32 0
  %1143 = bitcast %union.anon* %1142 to %struct.anon.2*
  %AL.i1809 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1143, i32 0, i32 0
  %1144 = load i64, i64* %PC.i1808
  %1145 = add i64 %1144, 3
  store i64 %1145, i64* %PC.i1808
  %1146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1147 = load i8, i8* %1146, align 1
  %1148 = icmp ne i8 %1147, 0
  %1149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1150 = load i8, i8* %1149, align 1
  %1151 = icmp ne i8 %1150, 0
  %1152 = xor i1 %1148, %1151
  %1153 = zext i1 %1152 to i8
  store i8 %1153, i8* %AL.i1809, align 1
  store %struct.Memory* %loadMem_480115, %struct.Memory** %MEMORY
  %loadMem_480118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1155 = getelementptr inbounds %struct.GPR, %struct.GPR* %1154, i32 0, i32 33
  %1156 = getelementptr inbounds %struct.Reg, %struct.Reg* %1155, i32 0, i32 0
  %PC.i1805 = bitcast %union.anon* %1156 to i64*
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1158 = getelementptr inbounds %struct.GPR, %struct.GPR* %1157, i32 0, i32 1
  %1159 = getelementptr inbounds %struct.Reg, %struct.Reg* %1158, i32 0, i32 0
  %1160 = bitcast %union.anon* %1159 to %struct.anon.2*
  %AL.i1806 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1160, i32 0, i32 0
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1162 = getelementptr inbounds %struct.GPR, %struct.GPR* %1161, i32 0, i32 15
  %1163 = getelementptr inbounds %struct.Reg, %struct.Reg* %1162, i32 0, i32 0
  %RBP.i1807 = bitcast %union.anon* %1163 to i64*
  %1164 = load i64, i64* %RBP.i1807
  %1165 = sub i64 %1164, 65
  %1166 = load i8, i8* %AL.i1806
  %1167 = zext i8 %1166 to i64
  %1168 = load i64, i64* %PC.i1805
  %1169 = add i64 %1168, 3
  store i64 %1169, i64* %PC.i1805
  %1170 = inttoptr i64 %1165 to i8*
  store i8 %1166, i8* %1170
  store %struct.Memory* %loadMem_480118, %struct.Memory** %MEMORY
  br label %block_.L_48011b

block_.L_48011b:                                  ; preds = %block_480111, %block_.L_4800e3
  %loadMem_48011b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1172 = getelementptr inbounds %struct.GPR, %struct.GPR* %1171, i32 0, i32 33
  %1173 = getelementptr inbounds %struct.Reg, %struct.Reg* %1172, i32 0, i32 0
  %PC.i1802 = bitcast %union.anon* %1173 to i64*
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1175 = getelementptr inbounds %struct.GPR, %struct.GPR* %1174, i32 0, i32 1
  %1176 = getelementptr inbounds %struct.Reg, %struct.Reg* %1175, i32 0, i32 0
  %1177 = bitcast %union.anon* %1176 to %struct.anon.2*
  %AL.i1803 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1177, i32 0, i32 0
  %1178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1179 = getelementptr inbounds %struct.GPR, %struct.GPR* %1178, i32 0, i32 15
  %1180 = getelementptr inbounds %struct.Reg, %struct.Reg* %1179, i32 0, i32 0
  %RBP.i1804 = bitcast %union.anon* %1180 to i64*
  %1181 = load i64, i64* %RBP.i1804
  %1182 = sub i64 %1181, 65
  %1183 = load i64, i64* %PC.i1802
  %1184 = add i64 %1183, 3
  store i64 %1184, i64* %PC.i1802
  %1185 = inttoptr i64 %1182 to i8*
  %1186 = load i8, i8* %1185
  store i8 %1186, i8* %AL.i1803, align 1
  store %struct.Memory* %loadMem_48011b, %struct.Memory** %MEMORY
  %loadMem_48011e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1188 = getelementptr inbounds %struct.GPR, %struct.GPR* %1187, i32 0, i32 33
  %1189 = getelementptr inbounds %struct.Reg, %struct.Reg* %1188, i32 0, i32 0
  %PC.i1800 = bitcast %union.anon* %1189 to i64*
  %1190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1191 = getelementptr inbounds %struct.GPR, %struct.GPR* %1190, i32 0, i32 1
  %1192 = getelementptr inbounds %struct.Reg, %struct.Reg* %1191, i32 0, i32 0
  %1193 = bitcast %union.anon* %1192 to %struct.anon.2*
  %AL.i1801 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1193, i32 0, i32 0
  %1194 = load i8, i8* %AL.i1801
  %1195 = zext i8 %1194 to i64
  %1196 = load i64, i64* %PC.i1800
  %1197 = add i64 %1196, 2
  store i64 %1197, i64* %PC.i1800
  %1198 = and i64 1, %1195
  %1199 = trunc i64 %1198 to i8
  %1200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1200, align 1
  %1201 = trunc i64 %1198 to i32
  %1202 = and i32 %1201, 255
  %1203 = call i32 @llvm.ctpop.i32(i32 %1202)
  %1204 = trunc i32 %1203 to i8
  %1205 = and i8 %1204, 1
  %1206 = xor i8 %1205, 1
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1206, i8* %1207, align 1
  %1208 = icmp eq i8 %1199, 0
  %1209 = zext i1 %1208 to i8
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1209, i8* %1210, align 1
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1211, align 1
  %1212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1212, align 1
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1213, align 1
  store %struct.Memory* %loadMem_48011e, %struct.Memory** %MEMORY
  %loadMem_480120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1215 = getelementptr inbounds %struct.GPR, %struct.GPR* %1214, i32 0, i32 33
  %1216 = getelementptr inbounds %struct.Reg, %struct.Reg* %1215, i32 0, i32 0
  %PC.i1799 = bitcast %union.anon* %1216 to i64*
  %1217 = load i64, i64* %PC.i1799
  %1218 = add i64 %1217, 11
  %1219 = load i64, i64* %PC.i1799
  %1220 = add i64 %1219, 6
  %1221 = load i64, i64* %PC.i1799
  %1222 = add i64 %1221, 6
  store i64 %1222, i64* %PC.i1799
  %1223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1224 = load i8, i8* %1223, align 1
  %1225 = icmp eq i8 %1224, 0
  %1226 = zext i1 %1225 to i8
  store i8 %1226, i8* %BRANCH_TAKEN, align 1
  %1227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1228 = select i1 %1225, i64 %1218, i64 %1220
  store i64 %1228, i64* %1227, align 8
  store %struct.Memory* %loadMem_480120, %struct.Memory** %MEMORY
  %loadBr_480120 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480120 = icmp eq i8 %loadBr_480120, 1
  br i1 %cmpBr_480120, label %block_.L_48012b, label %block_480126

block_480126:                                     ; preds = %block_.L_48011b
  %loadMem_480126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1230 = getelementptr inbounds %struct.GPR, %struct.GPR* %1229, i32 0, i32 33
  %1231 = getelementptr inbounds %struct.Reg, %struct.Reg* %1230, i32 0, i32 0
  %PC.i1798 = bitcast %union.anon* %1231 to i64*
  %1232 = load i64, i64* %PC.i1798
  %1233 = add i64 %1232, 19
  %1234 = load i64, i64* %PC.i1798
  %1235 = add i64 %1234, 5
  store i64 %1235, i64* %PC.i1798
  %1236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1233, i64* %1236, align 8
  store %struct.Memory* %loadMem_480126, %struct.Memory** %MEMORY
  br label %block_.L_480139

block_.L_48012b:                                  ; preds = %block_.L_48011b
  %loadMem_48012b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1238 = getelementptr inbounds %struct.GPR, %struct.GPR* %1237, i32 0, i32 33
  %1239 = getelementptr inbounds %struct.Reg, %struct.Reg* %1238, i32 0, i32 0
  %PC.i1795 = bitcast %union.anon* %1239 to i64*
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1241 = getelementptr inbounds %struct.GPR, %struct.GPR* %1240, i32 0, i32 1
  %1242 = getelementptr inbounds %struct.Reg, %struct.Reg* %1241, i32 0, i32 0
  %RAX.i1796 = bitcast %union.anon* %1242 to i64*
  %1243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1244 = getelementptr inbounds %struct.GPR, %struct.GPR* %1243, i32 0, i32 15
  %1245 = getelementptr inbounds %struct.Reg, %struct.Reg* %1244, i32 0, i32 0
  %RBP.i1797 = bitcast %union.anon* %1245 to i64*
  %1246 = load i64, i64* %RBP.i1797
  %1247 = sub i64 %1246, 32
  %1248 = load i64, i64* %PC.i1795
  %1249 = add i64 %1248, 3
  store i64 %1249, i64* %PC.i1795
  %1250 = inttoptr i64 %1247 to i32*
  %1251 = load i32, i32* %1250
  %1252 = zext i32 %1251 to i64
  store i64 %1252, i64* %RAX.i1796, align 8
  store %struct.Memory* %loadMem_48012b, %struct.Memory** %MEMORY
  %loadMem_48012e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1254 = getelementptr inbounds %struct.GPR, %struct.GPR* %1253, i32 0, i32 33
  %1255 = getelementptr inbounds %struct.Reg, %struct.Reg* %1254, i32 0, i32 0
  %PC.i1793 = bitcast %union.anon* %1255 to i64*
  %1256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1257 = getelementptr inbounds %struct.GPR, %struct.GPR* %1256, i32 0, i32 1
  %1258 = getelementptr inbounds %struct.Reg, %struct.Reg* %1257, i32 0, i32 0
  %RAX.i1794 = bitcast %union.anon* %1258 to i64*
  %1259 = load i64, i64* %RAX.i1794
  %1260 = load i64, i64* %PC.i1793
  %1261 = add i64 %1260, 3
  store i64 %1261, i64* %PC.i1793
  %1262 = trunc i64 %1259 to i32
  %1263 = add i32 1, %1262
  %1264 = zext i32 %1263 to i64
  store i64 %1264, i64* %RAX.i1794, align 8
  %1265 = icmp ult i32 %1263, %1262
  %1266 = icmp ult i32 %1263, 1
  %1267 = or i1 %1265, %1266
  %1268 = zext i1 %1267 to i8
  %1269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1268, i8* %1269, align 1
  %1270 = and i32 %1263, 255
  %1271 = call i32 @llvm.ctpop.i32(i32 %1270)
  %1272 = trunc i32 %1271 to i8
  %1273 = and i8 %1272, 1
  %1274 = xor i8 %1273, 1
  %1275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1274, i8* %1275, align 1
  %1276 = xor i64 1, %1259
  %1277 = trunc i64 %1276 to i32
  %1278 = xor i32 %1277, %1263
  %1279 = lshr i32 %1278, 4
  %1280 = trunc i32 %1279 to i8
  %1281 = and i8 %1280, 1
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1281, i8* %1282, align 1
  %1283 = icmp eq i32 %1263, 0
  %1284 = zext i1 %1283 to i8
  %1285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1284, i8* %1285, align 1
  %1286 = lshr i32 %1263, 31
  %1287 = trunc i32 %1286 to i8
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1287, i8* %1288, align 1
  %1289 = lshr i32 %1262, 31
  %1290 = xor i32 %1286, %1289
  %1291 = add i32 %1290, %1286
  %1292 = icmp eq i32 %1291, 2
  %1293 = zext i1 %1292 to i8
  %1294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1293, i8* %1294, align 1
  store %struct.Memory* %loadMem_48012e, %struct.Memory** %MEMORY
  %loadMem_480131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1296 = getelementptr inbounds %struct.GPR, %struct.GPR* %1295, i32 0, i32 33
  %1297 = getelementptr inbounds %struct.Reg, %struct.Reg* %1296, i32 0, i32 0
  %PC.i1790 = bitcast %union.anon* %1297 to i64*
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1299 = getelementptr inbounds %struct.GPR, %struct.GPR* %1298, i32 0, i32 1
  %1300 = getelementptr inbounds %struct.Reg, %struct.Reg* %1299, i32 0, i32 0
  %EAX.i1791 = bitcast %union.anon* %1300 to i32*
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1302 = getelementptr inbounds %struct.GPR, %struct.GPR* %1301, i32 0, i32 15
  %1303 = getelementptr inbounds %struct.Reg, %struct.Reg* %1302, i32 0, i32 0
  %RBP.i1792 = bitcast %union.anon* %1303 to i64*
  %1304 = load i64, i64* %RBP.i1792
  %1305 = sub i64 %1304, 32
  %1306 = load i32, i32* %EAX.i1791
  %1307 = zext i32 %1306 to i64
  %1308 = load i64, i64* %PC.i1790
  %1309 = add i64 %1308, 3
  store i64 %1309, i64* %PC.i1790
  %1310 = inttoptr i64 %1305 to i32*
  store i32 %1306, i32* %1310
  store %struct.Memory* %loadMem_480131, %struct.Memory** %MEMORY
  %loadMem_480134 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1312 = getelementptr inbounds %struct.GPR, %struct.GPR* %1311, i32 0, i32 33
  %1313 = getelementptr inbounds %struct.Reg, %struct.Reg* %1312, i32 0, i32 0
  %PC.i1789 = bitcast %union.anon* %1313 to i64*
  %1314 = load i64, i64* %PC.i1789
  %1315 = add i64 %1314, -81
  %1316 = load i64, i64* %PC.i1789
  %1317 = add i64 %1316, 5
  store i64 %1317, i64* %PC.i1789
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1315, i64* %1318, align 8
  store %struct.Memory* %loadMem_480134, %struct.Memory** %MEMORY
  br label %block_.L_4800e3

block_.L_480139:                                  ; preds = %block_480126
  %loadMem_480139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1320 = getelementptr inbounds %struct.GPR, %struct.GPR* %1319, i32 0, i32 33
  %1321 = getelementptr inbounds %struct.Reg, %struct.Reg* %1320, i32 0, i32 0
  %PC.i1787 = bitcast %union.anon* %1321 to i64*
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1323 = getelementptr inbounds %struct.GPR, %struct.GPR* %1322, i32 0, i32 1
  %1324 = getelementptr inbounds %struct.Reg, %struct.Reg* %1323, i32 0, i32 0
  %RAX.i1788 = bitcast %union.anon* %1324 to i64*
  %1325 = load i64, i64* %PC.i1787
  %1326 = add i64 %1325, 5
  store i64 %1326, i64* %PC.i1787
  store i64 4, i64* %RAX.i1788, align 8
  store %struct.Memory* %loadMem_480139, %struct.Memory** %MEMORY
  %loadMem_48013e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1328 = getelementptr inbounds %struct.GPR, %struct.GPR* %1327, i32 0, i32 33
  %1329 = getelementptr inbounds %struct.Reg, %struct.Reg* %1328, i32 0, i32 0
  %PC.i1784 = bitcast %union.anon* %1329 to i64*
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1331 = getelementptr inbounds %struct.GPR, %struct.GPR* %1330, i32 0, i32 1
  %1332 = getelementptr inbounds %struct.Reg, %struct.Reg* %1331, i32 0, i32 0
  %EAX.i1785 = bitcast %union.anon* %1332 to i32*
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1334 = getelementptr inbounds %struct.GPR, %struct.GPR* %1333, i32 0, i32 7
  %1335 = getelementptr inbounds %struct.Reg, %struct.Reg* %1334, i32 0, i32 0
  %RDX.i1786 = bitcast %union.anon* %1335 to i64*
  %1336 = load i32, i32* %EAX.i1785
  %1337 = zext i32 %1336 to i64
  %1338 = load i64, i64* %PC.i1784
  %1339 = add i64 %1338, 2
  store i64 %1339, i64* %PC.i1784
  %1340 = and i64 %1337, 4294967295
  store i64 %1340, i64* %RDX.i1786, align 8
  store %struct.Memory* %loadMem_48013e, %struct.Memory** %MEMORY
  %loadMem_480140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1342 = getelementptr inbounds %struct.GPR, %struct.GPR* %1341, i32 0, i32 33
  %1343 = getelementptr inbounds %struct.Reg, %struct.Reg* %1342, i32 0, i32 0
  %PC.i1782 = bitcast %union.anon* %1343 to i64*
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1345 = getelementptr inbounds %struct.GPR, %struct.GPR* %1344, i32 0, i32 5
  %1346 = getelementptr inbounds %struct.Reg, %struct.Reg* %1345, i32 0, i32 0
  %RCX.i1783 = bitcast %union.anon* %1346 to i64*
  %1347 = load i64, i64* %PC.i1782
  %1348 = add i64 %1347, 10
  store i64 %1348, i64* %PC.i1782
  store i64 ptrtoint (%G__0x480f80_type* @G__0x480f80 to i64), i64* %RCX.i1783, align 8
  store %struct.Memory* %loadMem_480140, %struct.Memory** %MEMORY
  %loadMem_48014a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1350 = getelementptr inbounds %struct.GPR, %struct.GPR* %1349, i32 0, i32 33
  %1351 = getelementptr inbounds %struct.Reg, %struct.Reg* %1350, i32 0, i32 0
  %PC.i1780 = bitcast %union.anon* %1351 to i64*
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1353 = getelementptr inbounds %struct.GPR, %struct.GPR* %1352, i32 0, i32 9
  %1354 = getelementptr inbounds %struct.Reg, %struct.Reg* %1353, i32 0, i32 0
  %RSI.i1781 = bitcast %union.anon* %1354 to i64*
  %1355 = load i64, i64* %PC.i1780
  %1356 = add i64 %1355, 10
  store i64 %1356, i64* %PC.i1780
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RSI.i1781, align 8
  store %struct.Memory* %loadMem_48014a, %struct.Memory** %MEMORY
  %loadMem_480154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1358 = getelementptr inbounds %struct.GPR, %struct.GPR* %1357, i32 0, i32 33
  %1359 = getelementptr inbounds %struct.Reg, %struct.Reg* %1358, i32 0, i32 0
  %PC.i1777 = bitcast %union.anon* %1359 to i64*
  %1360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1361 = getelementptr inbounds %struct.GPR, %struct.GPR* %1360, i32 0, i32 11
  %1362 = getelementptr inbounds %struct.Reg, %struct.Reg* %1361, i32 0, i32 0
  %RDI.i1778 = bitcast %union.anon* %1362 to i64*
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1364 = getelementptr inbounds %struct.GPR, %struct.GPR* %1363, i32 0, i32 15
  %1365 = getelementptr inbounds %struct.Reg, %struct.Reg* %1364, i32 0, i32 0
  %RBP.i1779 = bitcast %union.anon* %1365 to i64*
  %1366 = load i64, i64* %RBP.i1779
  %1367 = sub i64 %1366, 8
  %1368 = load i64, i64* %PC.i1777
  %1369 = add i64 %1368, 4
  store i64 %1369, i64* %PC.i1777
  %1370 = inttoptr i64 %1367 to i32*
  %1371 = load i32, i32* %1370
  %1372 = sext i32 %1371 to i64
  store i64 %1372, i64* %RDI.i1778, align 8
  store %struct.Memory* %loadMem_480154, %struct.Memory** %MEMORY
  %loadMem_480158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1374 = getelementptr inbounds %struct.GPR, %struct.GPR* %1373, i32 0, i32 33
  %1375 = getelementptr inbounds %struct.Reg, %struct.Reg* %1374, i32 0, i32 0
  %PC.i1775 = bitcast %union.anon* %1375 to i64*
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1377 = getelementptr inbounds %struct.GPR, %struct.GPR* %1376, i32 0, i32 11
  %1378 = getelementptr inbounds %struct.Reg, %struct.Reg* %1377, i32 0, i32 0
  %RDI.i1776 = bitcast %union.anon* %1378 to i64*
  %1379 = load i64, i64* %RDI.i1776
  %1380 = load i64, i64* %PC.i1775
  %1381 = add i64 %1380, 7
  store i64 %1381, i64* %PC.i1775
  %1382 = sext i64 %1379 to i128
  %1383 = and i128 %1382, -18446744073709551616
  %1384 = zext i64 %1379 to i128
  %1385 = or i128 %1383, %1384
  %1386 = mul i128 564, %1385
  %1387 = trunc i128 %1386 to i64
  store i64 %1387, i64* %RDI.i1776, align 8
  %1388 = sext i64 %1387 to i128
  %1389 = icmp ne i128 %1388, %1386
  %1390 = zext i1 %1389 to i8
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1390, i8* %1391, align 1
  %1392 = trunc i128 %1386 to i32
  %1393 = and i32 %1392, 255
  %1394 = call i32 @llvm.ctpop.i32(i32 %1393)
  %1395 = trunc i32 %1394 to i8
  %1396 = and i8 %1395, 1
  %1397 = xor i8 %1396, 1
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1397, i8* %1398, align 1
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1399, align 1
  %1400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1400, align 1
  %1401 = lshr i64 %1387, 63
  %1402 = trunc i64 %1401 to i8
  %1403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1402, i8* %1403, align 1
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1390, i8* %1404, align 1
  store %struct.Memory* %loadMem_480158, %struct.Memory** %MEMORY
  %loadMem_48015f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1406 = getelementptr inbounds %struct.GPR, %struct.GPR* %1405, i32 0, i32 33
  %1407 = getelementptr inbounds %struct.Reg, %struct.Reg* %1406, i32 0, i32 0
  %PC.i1772 = bitcast %union.anon* %1407 to i64*
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 9
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %RSI.i1773 = bitcast %union.anon* %1410 to i64*
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1412 = getelementptr inbounds %struct.GPR, %struct.GPR* %1411, i32 0, i32 11
  %1413 = getelementptr inbounds %struct.Reg, %struct.Reg* %1412, i32 0, i32 0
  %RDI.i1774 = bitcast %union.anon* %1413 to i64*
  %1414 = load i64, i64* %RSI.i1773
  %1415 = load i64, i64* %RDI.i1774
  %1416 = load i64, i64* %PC.i1772
  %1417 = add i64 %1416, 3
  store i64 %1417, i64* %PC.i1772
  %1418 = add i64 %1415, %1414
  store i64 %1418, i64* %RSI.i1773, align 8
  %1419 = icmp ult i64 %1418, %1414
  %1420 = icmp ult i64 %1418, %1415
  %1421 = or i1 %1419, %1420
  %1422 = zext i1 %1421 to i8
  %1423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1422, i8* %1423, align 1
  %1424 = trunc i64 %1418 to i32
  %1425 = and i32 %1424, 255
  %1426 = call i32 @llvm.ctpop.i32(i32 %1425)
  %1427 = trunc i32 %1426 to i8
  %1428 = and i8 %1427, 1
  %1429 = xor i8 %1428, 1
  %1430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1429, i8* %1430, align 1
  %1431 = xor i64 %1415, %1414
  %1432 = xor i64 %1431, %1418
  %1433 = lshr i64 %1432, 4
  %1434 = trunc i64 %1433 to i8
  %1435 = and i8 %1434, 1
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1435, i8* %1436, align 1
  %1437 = icmp eq i64 %1418, 0
  %1438 = zext i1 %1437 to i8
  %1439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1438, i8* %1439, align 1
  %1440 = lshr i64 %1418, 63
  %1441 = trunc i64 %1440 to i8
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1441, i8* %1442, align 1
  %1443 = lshr i64 %1414, 63
  %1444 = lshr i64 %1415, 63
  %1445 = xor i64 %1440, %1443
  %1446 = xor i64 %1440, %1444
  %1447 = add i64 %1445, %1446
  %1448 = icmp eq i64 %1447, 2
  %1449 = zext i1 %1448 to i8
  %1450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1449, i8* %1450, align 1
  store %struct.Memory* %loadMem_48015f, %struct.Memory** %MEMORY
  %loadMem_480162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1452 = getelementptr inbounds %struct.GPR, %struct.GPR* %1451, i32 0, i32 33
  %1453 = getelementptr inbounds %struct.Reg, %struct.Reg* %1452, i32 0, i32 0
  %PC.i1770 = bitcast %union.anon* %1453 to i64*
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1455 = getelementptr inbounds %struct.GPR, %struct.GPR* %1454, i32 0, i32 9
  %1456 = getelementptr inbounds %struct.Reg, %struct.Reg* %1455, i32 0, i32 0
  %RSI.i1771 = bitcast %union.anon* %1456 to i64*
  %1457 = load i64, i64* %RSI.i1771
  %1458 = load i64, i64* %PC.i1770
  %1459 = add i64 %1458, 4
  store i64 %1459, i64* %PC.i1770
  %1460 = add i64 72, %1457
  store i64 %1460, i64* %RSI.i1771, align 8
  %1461 = icmp ult i64 %1460, %1457
  %1462 = icmp ult i64 %1460, 72
  %1463 = or i1 %1461, %1462
  %1464 = zext i1 %1463 to i8
  %1465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1464, i8* %1465, align 1
  %1466 = trunc i64 %1460 to i32
  %1467 = and i32 %1466, 255
  %1468 = call i32 @llvm.ctpop.i32(i32 %1467)
  %1469 = trunc i32 %1468 to i8
  %1470 = and i8 %1469, 1
  %1471 = xor i8 %1470, 1
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1471, i8* %1472, align 1
  %1473 = xor i64 72, %1457
  %1474 = xor i64 %1473, %1460
  %1475 = lshr i64 %1474, 4
  %1476 = trunc i64 %1475 to i8
  %1477 = and i8 %1476, 1
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1477, i8* %1478, align 1
  %1479 = icmp eq i64 %1460, 0
  %1480 = zext i1 %1479 to i8
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1480, i8* %1481, align 1
  %1482 = lshr i64 %1460, 63
  %1483 = trunc i64 %1482 to i8
  %1484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1483, i8* %1484, align 1
  %1485 = lshr i64 %1457, 63
  %1486 = xor i64 %1482, %1485
  %1487 = add i64 %1486, %1482
  %1488 = icmp eq i64 %1487, 2
  %1489 = zext i1 %1488 to i8
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1489, i8* %1490, align 1
  store %struct.Memory* %loadMem_480162, %struct.Memory** %MEMORY
  %loadMem_480166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1492 = getelementptr inbounds %struct.GPR, %struct.GPR* %1491, i32 0, i32 33
  %1493 = getelementptr inbounds %struct.Reg, %struct.Reg* %1492, i32 0, i32 0
  %PC.i1767 = bitcast %union.anon* %1493 to i64*
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1495 = getelementptr inbounds %struct.GPR, %struct.GPR* %1494, i32 0, i32 11
  %1496 = getelementptr inbounds %struct.Reg, %struct.Reg* %1495, i32 0, i32 0
  %RDI.i1768 = bitcast %union.anon* %1496 to i64*
  %1497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1498 = getelementptr inbounds %struct.GPR, %struct.GPR* %1497, i32 0, i32 15
  %1499 = getelementptr inbounds %struct.Reg, %struct.Reg* %1498, i32 0, i32 0
  %RBP.i1769 = bitcast %union.anon* %1499 to i64*
  %1500 = load i64, i64* %RBP.i1769
  %1501 = sub i64 %1500, 32
  %1502 = load i64, i64* %PC.i1767
  %1503 = add i64 %1502, 4
  store i64 %1503, i64* %PC.i1767
  %1504 = inttoptr i64 %1501 to i32*
  %1505 = load i32, i32* %1504
  %1506 = sext i32 %1505 to i64
  store i64 %1506, i64* %RDI.i1768, align 8
  store %struct.Memory* %loadMem_480166, %struct.Memory** %MEMORY
  %loadMem_48016a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1508 = getelementptr inbounds %struct.GPR, %struct.GPR* %1507, i32 0, i32 33
  %1509 = getelementptr inbounds %struct.Reg, %struct.Reg* %1508, i32 0, i32 0
  %PC.i1764 = bitcast %union.anon* %1509 to i64*
  %1510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1511 = getelementptr inbounds %struct.GPR, %struct.GPR* %1510, i32 0, i32 11
  %1512 = getelementptr inbounds %struct.Reg, %struct.Reg* %1511, i32 0, i32 0
  %RDI.i1765 = bitcast %union.anon* %1512 to i64*
  %1513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1514 = getelementptr inbounds %struct.GPR, %struct.GPR* %1513, i32 0, i32 15
  %1515 = getelementptr inbounds %struct.Reg, %struct.Reg* %1514, i32 0, i32 0
  %RBP.i1766 = bitcast %union.anon* %1515 to i64*
  %1516 = load i64, i64* %RBP.i1766
  %1517 = sub i64 %1516, 80
  %1518 = load i64, i64* %RDI.i1765
  %1519 = load i64, i64* %PC.i1764
  %1520 = add i64 %1519, 4
  store i64 %1520, i64* %PC.i1764
  %1521 = inttoptr i64 %1517 to i64*
  store i64 %1518, i64* %1521
  store %struct.Memory* %loadMem_48016a, %struct.Memory** %MEMORY
  %loadMem_48016e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1523 = getelementptr inbounds %struct.GPR, %struct.GPR* %1522, i32 0, i32 33
  %1524 = getelementptr inbounds %struct.Reg, %struct.Reg* %1523, i32 0, i32 0
  %PC.i1761 = bitcast %union.anon* %1524 to i64*
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1526 = getelementptr inbounds %struct.GPR, %struct.GPR* %1525, i32 0, i32 9
  %1527 = getelementptr inbounds %struct.Reg, %struct.Reg* %1526, i32 0, i32 0
  %RSI.i1762 = bitcast %union.anon* %1527 to i64*
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1529 = getelementptr inbounds %struct.GPR, %struct.GPR* %1528, i32 0, i32 11
  %1530 = getelementptr inbounds %struct.Reg, %struct.Reg* %1529, i32 0, i32 0
  %RDI.i1763 = bitcast %union.anon* %1530 to i64*
  %1531 = load i64, i64* %RSI.i1762
  %1532 = load i64, i64* %PC.i1761
  %1533 = add i64 %1532, 3
  store i64 %1533, i64* %PC.i1761
  store i64 %1531, i64* %RDI.i1763, align 8
  store %struct.Memory* %loadMem_48016e, %struct.Memory** %MEMORY
  %loadMem_480171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1535 = getelementptr inbounds %struct.GPR, %struct.GPR* %1534, i32 0, i32 33
  %1536 = getelementptr inbounds %struct.Reg, %struct.Reg* %1535, i32 0, i32 0
  %PC.i1758 = bitcast %union.anon* %1536 to i64*
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1538 = getelementptr inbounds %struct.GPR, %struct.GPR* %1537, i32 0, i32 9
  %1539 = getelementptr inbounds %struct.Reg, %struct.Reg* %1538, i32 0, i32 0
  %RSI.i1759 = bitcast %union.anon* %1539 to i64*
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1541 = getelementptr inbounds %struct.GPR, %struct.GPR* %1540, i32 0, i32 15
  %1542 = getelementptr inbounds %struct.Reg, %struct.Reg* %1541, i32 0, i32 0
  %RBP.i1760 = bitcast %union.anon* %1542 to i64*
  %1543 = load i64, i64* %RBP.i1760
  %1544 = sub i64 %1543, 80
  %1545 = load i64, i64* %PC.i1758
  %1546 = add i64 %1545, 4
  store i64 %1546, i64* %PC.i1758
  %1547 = inttoptr i64 %1544 to i64*
  %1548 = load i64, i64* %1547
  store i64 %1548, i64* %RSI.i1759, align 8
  store %struct.Memory* %loadMem_480171, %struct.Memory** %MEMORY
  %loadMem1_480175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1550 = getelementptr inbounds %struct.GPR, %struct.GPR* %1549, i32 0, i32 33
  %1551 = getelementptr inbounds %struct.Reg, %struct.Reg* %1550, i32 0, i32 0
  %PC.i1757 = bitcast %union.anon* %1551 to i64*
  %1552 = load i64, i64* %PC.i1757
  %1553 = add i64 %1552, 402827
  %1554 = load i64, i64* %PC.i1757
  %1555 = add i64 %1554, 5
  %1556 = load i64, i64* %PC.i1757
  %1557 = add i64 %1556, 5
  store i64 %1557, i64* %PC.i1757
  %1558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1559 = load i64, i64* %1558, align 8
  %1560 = add i64 %1559, -8
  %1561 = inttoptr i64 %1560 to i64*
  store i64 %1555, i64* %1561
  store i64 %1560, i64* %1558, align 8
  %1562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1553, i64* %1562, align 8
  store %struct.Memory* %loadMem1_480175, %struct.Memory** %MEMORY
  %loadMem2_480175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480175 = load i64, i64* %3
  %call2_480175 = call %struct.Memory* @sub_4e2700.gg_sort(%struct.State* %0, i64 %loadPC_480175, %struct.Memory* %loadMem2_480175)
  store %struct.Memory* %call2_480175, %struct.Memory** %MEMORY
  %loadMem_48017a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1564 = getelementptr inbounds %struct.GPR, %struct.GPR* %1563, i32 0, i32 33
  %1565 = getelementptr inbounds %struct.Reg, %struct.Reg* %1564, i32 0, i32 0
  %PC.i1754 = bitcast %union.anon* %1565 to i64*
  %1566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1567 = getelementptr inbounds %struct.GPR, %struct.GPR* %1566, i32 0, i32 11
  %1568 = getelementptr inbounds %struct.Reg, %struct.Reg* %1567, i32 0, i32 0
  %RDI.i1755 = bitcast %union.anon* %1568 to i64*
  %1569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1570 = getelementptr inbounds %struct.GPR, %struct.GPR* %1569, i32 0, i32 15
  %1571 = getelementptr inbounds %struct.Reg, %struct.Reg* %1570, i32 0, i32 0
  %RBP.i1756 = bitcast %union.anon* %1571 to i64*
  %1572 = load i64, i64* %RBP.i1756
  %1573 = sub i64 %1572, 8
  %1574 = load i64, i64* %PC.i1754
  %1575 = add i64 %1574, 3
  store i64 %1575, i64* %PC.i1754
  %1576 = inttoptr i64 %1573 to i32*
  %1577 = load i32, i32* %1576
  %1578 = zext i32 %1577 to i64
  store i64 %1578, i64* %RDI.i1755, align 8
  store %struct.Memory* %loadMem_48017a, %struct.Memory** %MEMORY
  %loadMem1_48017d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1580 = getelementptr inbounds %struct.GPR, %struct.GPR* %1579, i32 0, i32 33
  %1581 = getelementptr inbounds %struct.Reg, %struct.Reg* %1580, i32 0, i32 0
  %PC.i1753 = bitcast %union.anon* %1581 to i64*
  %1582 = load i64, i64* %PC.i1753
  %1583 = add i64 %1582, -299101
  %1584 = load i64, i64* %PC.i1753
  %1585 = add i64 %1584, 5
  %1586 = load i64, i64* %PC.i1753
  %1587 = add i64 %1586, 5
  store i64 %1587, i64* %PC.i1753
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1589 = load i64, i64* %1588, align 8
  %1590 = add i64 %1589, -8
  %1591 = inttoptr i64 %1590 to i64*
  store i64 %1585, i64* %1591
  store i64 %1590, i64* %1588, align 8
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1583, i64* %1592, align 8
  store %struct.Memory* %loadMem1_48017d, %struct.Memory** %MEMORY
  %loadMem2_48017d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48017d = load i64, i64* %3
  %call2_48017d = call %struct.Memory* @sub_437120.discard_redundant_move_reasons(%struct.State* %0, i64 %loadPC_48017d, %struct.Memory* %loadMem2_48017d)
  store %struct.Memory* %call2_48017d, %struct.Memory** %MEMORY
  %loadMem_480182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1594 = getelementptr inbounds %struct.GPR, %struct.GPR* %1593, i32 0, i32 33
  %1595 = getelementptr inbounds %struct.Reg, %struct.Reg* %1594, i32 0, i32 0
  %PC.i1750 = bitcast %union.anon* %1595 to i64*
  %1596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1597 = getelementptr inbounds %struct.GPR, %struct.GPR* %1596, i32 0, i32 11
  %1598 = getelementptr inbounds %struct.Reg, %struct.Reg* %1597, i32 0, i32 0
  %RDI.i1751 = bitcast %union.anon* %1598 to i64*
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1600 = getelementptr inbounds %struct.GPR, %struct.GPR* %1599, i32 0, i32 15
  %1601 = getelementptr inbounds %struct.Reg, %struct.Reg* %1600, i32 0, i32 0
  %RBP.i1752 = bitcast %union.anon* %1601 to i64*
  %1602 = load i64, i64* %RBP.i1752
  %1603 = sub i64 %1602, 8
  %1604 = load i64, i64* %PC.i1750
  %1605 = add i64 %1604, 3
  store i64 %1605, i64* %PC.i1750
  %1606 = inttoptr i64 %1603 to i32*
  %1607 = load i32, i32* %1606
  %1608 = zext i32 %1607 to i64
  store i64 %1608, i64* %RDI.i1751, align 8
  store %struct.Memory* %loadMem_480182, %struct.Memory** %MEMORY
  %loadMem_480185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1610 = getelementptr inbounds %struct.GPR, %struct.GPR* %1609, i32 0, i32 33
  %1611 = getelementptr inbounds %struct.Reg, %struct.Reg* %1610, i32 0, i32 0
  %PC.i1747 = bitcast %union.anon* %1611 to i64*
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1613 = getelementptr inbounds %struct.GPR, %struct.GPR* %1612, i32 0, i32 9
  %1614 = getelementptr inbounds %struct.Reg, %struct.Reg* %1613, i32 0, i32 0
  %RSI.i1748 = bitcast %union.anon* %1614 to i64*
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1616 = getelementptr inbounds %struct.GPR, %struct.GPR* %1615, i32 0, i32 15
  %1617 = getelementptr inbounds %struct.Reg, %struct.Reg* %1616, i32 0, i32 0
  %RBP.i1749 = bitcast %union.anon* %1617 to i64*
  %1618 = load i64, i64* %RBP.i1749
  %1619 = sub i64 %1618, 12
  %1620 = load i64, i64* %PC.i1747
  %1621 = add i64 %1620, 3
  store i64 %1621, i64* %PC.i1747
  %1622 = inttoptr i64 %1619 to i32*
  %1623 = load i32, i32* %1622
  %1624 = zext i32 %1623 to i64
  store i64 %1624, i64* %RSI.i1748, align 8
  store %struct.Memory* %loadMem_480185, %struct.Memory** %MEMORY
  %loadMem_480188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1626 = getelementptr inbounds %struct.GPR, %struct.GPR* %1625, i32 0, i32 33
  %1627 = getelementptr inbounds %struct.Reg, %struct.Reg* %1626, i32 0, i32 0
  %PC.i1744 = bitcast %union.anon* %1627 to i64*
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1629 = getelementptr inbounds %struct.GPR, %struct.GPR* %1628, i32 0, i32 15
  %1630 = getelementptr inbounds %struct.Reg, %struct.Reg* %1629, i32 0, i32 0
  %RBP.i1745 = bitcast %union.anon* %1630 to i64*
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1632 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1631, i64 0, i64 0
  %YMM0.i1746 = bitcast %union.VectorReg* %1632 to %"class.std::bitset"*
  %1633 = bitcast %"class.std::bitset"* %YMM0.i1746 to i8*
  %1634 = load i64, i64* %RBP.i1745
  %1635 = sub i64 %1634, 20
  %1636 = load i64, i64* %PC.i1744
  %1637 = add i64 %1636, 5
  store i64 %1637, i64* %PC.i1744
  %1638 = inttoptr i64 %1635 to float*
  %1639 = load float, float* %1638
  %1640 = bitcast i8* %1633 to float*
  store float %1639, float* %1640, align 1
  %1641 = getelementptr inbounds i8, i8* %1633, i64 4
  %1642 = bitcast i8* %1641 to float*
  store float 0.000000e+00, float* %1642, align 1
  %1643 = getelementptr inbounds i8, i8* %1633, i64 8
  %1644 = bitcast i8* %1643 to float*
  store float 0.000000e+00, float* %1644, align 1
  %1645 = getelementptr inbounds i8, i8* %1633, i64 12
  %1646 = bitcast i8* %1645 to float*
  store float 0.000000e+00, float* %1646, align 1
  store %struct.Memory* %loadMem_480188, %struct.Memory** %MEMORY
  %loadMem1_48018d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1648 = getelementptr inbounds %struct.GPR, %struct.GPR* %1647, i32 0, i32 33
  %1649 = getelementptr inbounds %struct.Reg, %struct.Reg* %1648, i32 0, i32 0
  %PC.i1743 = bitcast %union.anon* %1649 to i64*
  %1650 = load i64, i64* %PC.i1743
  %1651 = add i64 %1650, 3747
  %1652 = load i64, i64* %PC.i1743
  %1653 = add i64 %1652, 5
  %1654 = load i64, i64* %PC.i1743
  %1655 = add i64 %1654, 5
  store i64 %1655, i64* %PC.i1743
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1657 = load i64, i64* %1656, align 8
  %1658 = add i64 %1657, -8
  %1659 = inttoptr i64 %1658 to i64*
  store i64 %1653, i64* %1659
  store i64 %1658, i64* %1656, align 8
  %1660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1651, i64* %1660, align 8
  store %struct.Memory* %loadMem1_48018d, %struct.Memory** %MEMORY
  %loadMem2_48018d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48018d = load i64, i64* %3
  %call2_48018d = call %struct.Memory* @sub_481030.estimate_territorial_value(%struct.State* %0, i64 %loadPC_48018d, %struct.Memory* %loadMem2_48018d)
  store %struct.Memory* %call2_48018d, %struct.Memory** %MEMORY
  %loadMem_480192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1662 = getelementptr inbounds %struct.GPR, %struct.GPR* %1661, i32 0, i32 33
  %1663 = getelementptr inbounds %struct.Reg, %struct.Reg* %1662, i32 0, i32 0
  %PC.i1740 = bitcast %union.anon* %1663 to i64*
  %1664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1665 = getelementptr inbounds %struct.GPR, %struct.GPR* %1664, i32 0, i32 11
  %1666 = getelementptr inbounds %struct.Reg, %struct.Reg* %1665, i32 0, i32 0
  %RDI.i1741 = bitcast %union.anon* %1666 to i64*
  %1667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1668 = getelementptr inbounds %struct.GPR, %struct.GPR* %1667, i32 0, i32 15
  %1669 = getelementptr inbounds %struct.Reg, %struct.Reg* %1668, i32 0, i32 0
  %RBP.i1742 = bitcast %union.anon* %1669 to i64*
  %1670 = load i64, i64* %RBP.i1742
  %1671 = sub i64 %1670, 8
  %1672 = load i64, i64* %PC.i1740
  %1673 = add i64 %1672, 3
  store i64 %1673, i64* %PC.i1740
  %1674 = inttoptr i64 %1671 to i32*
  %1675 = load i32, i32* %1674
  %1676 = zext i32 %1675 to i64
  store i64 %1676, i64* %RDI.i1741, align 8
  store %struct.Memory* %loadMem_480192, %struct.Memory** %MEMORY
  %loadMem_480195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1678 = getelementptr inbounds %struct.GPR, %struct.GPR* %1677, i32 0, i32 33
  %1679 = getelementptr inbounds %struct.Reg, %struct.Reg* %1678, i32 0, i32 0
  %PC.i1737 = bitcast %union.anon* %1679 to i64*
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1681 = getelementptr inbounds %struct.GPR, %struct.GPR* %1680, i32 0, i32 9
  %1682 = getelementptr inbounds %struct.Reg, %struct.Reg* %1681, i32 0, i32 0
  %RSI.i1738 = bitcast %union.anon* %1682 to i64*
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1684 = getelementptr inbounds %struct.GPR, %struct.GPR* %1683, i32 0, i32 15
  %1685 = getelementptr inbounds %struct.Reg, %struct.Reg* %1684, i32 0, i32 0
  %RBP.i1739 = bitcast %union.anon* %1685 to i64*
  %1686 = load i64, i64* %RBP.i1739
  %1687 = sub i64 %1686, 12
  %1688 = load i64, i64* %PC.i1737
  %1689 = add i64 %1688, 3
  store i64 %1689, i64* %PC.i1737
  %1690 = inttoptr i64 %1687 to i32*
  %1691 = load i32, i32* %1690
  %1692 = zext i32 %1691 to i64
  store i64 %1692, i64* %RSI.i1738, align 8
  store %struct.Memory* %loadMem_480195, %struct.Memory** %MEMORY
  %loadMem_480198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1694 = getelementptr inbounds %struct.GPR, %struct.GPR* %1693, i32 0, i32 33
  %1695 = getelementptr inbounds %struct.Reg, %struct.Reg* %1694, i32 0, i32 0
  %PC.i1734 = bitcast %union.anon* %1695 to i64*
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1697 = getelementptr inbounds %struct.GPR, %struct.GPR* %1696, i32 0, i32 15
  %1698 = getelementptr inbounds %struct.Reg, %struct.Reg* %1697, i32 0, i32 0
  %RBP.i1735 = bitcast %union.anon* %1698 to i64*
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1700 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1699, i64 0, i64 0
  %YMM0.i1736 = bitcast %union.VectorReg* %1700 to %"class.std::bitset"*
  %1701 = bitcast %"class.std::bitset"* %YMM0.i1736 to i8*
  %1702 = load i64, i64* %RBP.i1735
  %1703 = sub i64 %1702, 20
  %1704 = load i64, i64* %PC.i1734
  %1705 = add i64 %1704, 5
  store i64 %1705, i64* %PC.i1734
  %1706 = inttoptr i64 %1703 to float*
  %1707 = load float, float* %1706
  %1708 = bitcast i8* %1701 to float*
  store float %1707, float* %1708, align 1
  %1709 = getelementptr inbounds i8, i8* %1701, i64 4
  %1710 = bitcast i8* %1709 to float*
  store float 0.000000e+00, float* %1710, align 1
  %1711 = getelementptr inbounds i8, i8* %1701, i64 8
  %1712 = bitcast i8* %1711 to float*
  store float 0.000000e+00, float* %1712, align 1
  %1713 = getelementptr inbounds i8, i8* %1701, i64 12
  %1714 = bitcast i8* %1713 to float*
  store float 0.000000e+00, float* %1714, align 1
  store %struct.Memory* %loadMem_480198, %struct.Memory** %MEMORY
  %loadMem1_48019d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1716 = getelementptr inbounds %struct.GPR, %struct.GPR* %1715, i32 0, i32 33
  %1717 = getelementptr inbounds %struct.Reg, %struct.Reg* %1716, i32 0, i32 0
  %PC.i1733 = bitcast %union.anon* %1717 to i64*
  %1718 = load i64, i64* %PC.i1733
  %1719 = add i64 %1718, 12899
  %1720 = load i64, i64* %PC.i1733
  %1721 = add i64 %1720, 5
  %1722 = load i64, i64* %PC.i1733
  %1723 = add i64 %1722, 5
  store i64 %1723, i64* %PC.i1733
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1725 = load i64, i64* %1724, align 8
  %1726 = add i64 %1725, -8
  %1727 = inttoptr i64 %1726 to i64*
  store i64 %1721, i64* %1727
  store i64 %1726, i64* %1724, align 8
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1719, i64* %1728, align 8
  store %struct.Memory* %loadMem1_48019d, %struct.Memory** %MEMORY
  %loadMem2_48019d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48019d = load i64, i64* %3
  %call2_48019d = call %struct.Memory* @sub_483400.estimate_strategical_value(%struct.State* %0, i64 %loadPC_48019d, %struct.Memory* %loadMem2_48019d)
  store %struct.Memory* %call2_48019d, %struct.Memory** %MEMORY
  br label %block_.L_4801a2

block_.L_4801a2:                                  ; preds = %block_.L_480139, %routine_ucomisd__xmm0___xmm1.exit1843, %block_480082
  %loadMem_4801a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1730 = getelementptr inbounds %struct.GPR, %struct.GPR* %1729, i32 0, i32 33
  %1731 = getelementptr inbounds %struct.Reg, %struct.Reg* %1730, i32 0, i32 0
  %PC.i1731 = bitcast %union.anon* %1731 to i64*
  %1732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1733 = getelementptr inbounds %struct.GPR, %struct.GPR* %1732, i32 0, i32 1
  %1734 = getelementptr inbounds %struct.Reg, %struct.Reg* %1733, i32 0, i32 0
  %RAX.i1732 = bitcast %union.anon* %1734 to i64*
  %1735 = load i64, i64* %PC.i1731
  %1736 = add i64 %1735, 10
  store i64 %1736, i64* %PC.i1731
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1732, align 8
  store %struct.Memory* %loadMem_4801a2, %struct.Memory** %MEMORY
  %loadMem_4801ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %1737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1738 = getelementptr inbounds %struct.GPR, %struct.GPR* %1737, i32 0, i32 33
  %1739 = getelementptr inbounds %struct.Reg, %struct.Reg* %1738, i32 0, i32 0
  %PC.i1728 = bitcast %union.anon* %1739 to i64*
  %1740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1741 = getelementptr inbounds %struct.GPR, %struct.GPR* %1740, i32 0, i32 5
  %1742 = getelementptr inbounds %struct.Reg, %struct.Reg* %1741, i32 0, i32 0
  %RCX.i1729 = bitcast %union.anon* %1742 to i64*
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1744 = getelementptr inbounds %struct.GPR, %struct.GPR* %1743, i32 0, i32 15
  %1745 = getelementptr inbounds %struct.Reg, %struct.Reg* %1744, i32 0, i32 0
  %RBP.i1730 = bitcast %union.anon* %1745 to i64*
  %1746 = load i64, i64* %RBP.i1730
  %1747 = sub i64 %1746, 8
  %1748 = load i64, i64* %PC.i1728
  %1749 = add i64 %1748, 4
  store i64 %1749, i64* %PC.i1728
  %1750 = inttoptr i64 %1747 to i32*
  %1751 = load i32, i32* %1750
  %1752 = sext i32 %1751 to i64
  store i64 %1752, i64* %RCX.i1729, align 8
  store %struct.Memory* %loadMem_4801ac, %struct.Memory** %MEMORY
  %loadMem_4801b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1754 = getelementptr inbounds %struct.GPR, %struct.GPR* %1753, i32 0, i32 33
  %1755 = getelementptr inbounds %struct.Reg, %struct.Reg* %1754, i32 0, i32 0
  %PC.i1726 = bitcast %union.anon* %1755 to i64*
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1757 = getelementptr inbounds %struct.GPR, %struct.GPR* %1756, i32 0, i32 5
  %1758 = getelementptr inbounds %struct.Reg, %struct.Reg* %1757, i32 0, i32 0
  %RCX.i1727 = bitcast %union.anon* %1758 to i64*
  %1759 = load i64, i64* %RCX.i1727
  %1760 = load i64, i64* %PC.i1726
  %1761 = add i64 %1760, 7
  store i64 %1761, i64* %PC.i1726
  %1762 = sext i64 %1759 to i128
  %1763 = and i128 %1762, -18446744073709551616
  %1764 = zext i64 %1759 to i128
  %1765 = or i128 %1763, %1764
  %1766 = mul i128 564, %1765
  %1767 = trunc i128 %1766 to i64
  store i64 %1767, i64* %RCX.i1727, align 8
  %1768 = sext i64 %1767 to i128
  %1769 = icmp ne i128 %1768, %1766
  %1770 = zext i1 %1769 to i8
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1770, i8* %1771, align 1
  %1772 = trunc i128 %1766 to i32
  %1773 = and i32 %1772, 255
  %1774 = call i32 @llvm.ctpop.i32(i32 %1773)
  %1775 = trunc i32 %1774 to i8
  %1776 = and i8 %1775, 1
  %1777 = xor i8 %1776, 1
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1777, i8* %1778, align 1
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1779, align 1
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1780, align 1
  %1781 = lshr i64 %1767, 63
  %1782 = trunc i64 %1781 to i8
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1782, i8* %1783, align 1
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1770, i8* %1784, align 1
  store %struct.Memory* %loadMem_4801b0, %struct.Memory** %MEMORY
  %loadMem_4801b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1786 = getelementptr inbounds %struct.GPR, %struct.GPR* %1785, i32 0, i32 33
  %1787 = getelementptr inbounds %struct.Reg, %struct.Reg* %1786, i32 0, i32 0
  %PC.i1723 = bitcast %union.anon* %1787 to i64*
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1789 = getelementptr inbounds %struct.GPR, %struct.GPR* %1788, i32 0, i32 1
  %1790 = getelementptr inbounds %struct.Reg, %struct.Reg* %1789, i32 0, i32 0
  %RAX.i1724 = bitcast %union.anon* %1790 to i64*
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1792 = getelementptr inbounds %struct.GPR, %struct.GPR* %1791, i32 0, i32 7
  %1793 = getelementptr inbounds %struct.Reg, %struct.Reg* %1792, i32 0, i32 0
  %RDX.i1725 = bitcast %union.anon* %1793 to i64*
  %1794 = load i64, i64* %RAX.i1724
  %1795 = load i64, i64* %PC.i1723
  %1796 = add i64 %1795, 3
  store i64 %1796, i64* %PC.i1723
  store i64 %1794, i64* %RDX.i1725, align 8
  store %struct.Memory* %loadMem_4801b7, %struct.Memory** %MEMORY
  %loadMem_4801ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1798 = getelementptr inbounds %struct.GPR, %struct.GPR* %1797, i32 0, i32 33
  %1799 = getelementptr inbounds %struct.Reg, %struct.Reg* %1798, i32 0, i32 0
  %PC.i1720 = bitcast %union.anon* %1799 to i64*
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1801 = getelementptr inbounds %struct.GPR, %struct.GPR* %1800, i32 0, i32 5
  %1802 = getelementptr inbounds %struct.Reg, %struct.Reg* %1801, i32 0, i32 0
  %RCX.i1721 = bitcast %union.anon* %1802 to i64*
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1804 = getelementptr inbounds %struct.GPR, %struct.GPR* %1803, i32 0, i32 7
  %1805 = getelementptr inbounds %struct.Reg, %struct.Reg* %1804, i32 0, i32 0
  %RDX.i1722 = bitcast %union.anon* %1805 to i64*
  %1806 = load i64, i64* %RDX.i1722
  %1807 = load i64, i64* %RCX.i1721
  %1808 = load i64, i64* %PC.i1720
  %1809 = add i64 %1808, 3
  store i64 %1809, i64* %PC.i1720
  %1810 = add i64 %1807, %1806
  store i64 %1810, i64* %RDX.i1722, align 8
  %1811 = icmp ult i64 %1810, %1806
  %1812 = icmp ult i64 %1810, %1807
  %1813 = or i1 %1811, %1812
  %1814 = zext i1 %1813 to i8
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1814, i8* %1815, align 1
  %1816 = trunc i64 %1810 to i32
  %1817 = and i32 %1816, 255
  %1818 = call i32 @llvm.ctpop.i32(i32 %1817)
  %1819 = trunc i32 %1818 to i8
  %1820 = and i8 %1819, 1
  %1821 = xor i8 %1820, 1
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1821, i8* %1822, align 1
  %1823 = xor i64 %1807, %1806
  %1824 = xor i64 %1823, %1810
  %1825 = lshr i64 %1824, 4
  %1826 = trunc i64 %1825 to i8
  %1827 = and i8 %1826, 1
  %1828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1827, i8* %1828, align 1
  %1829 = icmp eq i64 %1810, 0
  %1830 = zext i1 %1829 to i8
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1830, i8* %1831, align 1
  %1832 = lshr i64 %1810, 63
  %1833 = trunc i64 %1832 to i8
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1833, i8* %1834, align 1
  %1835 = lshr i64 %1806, 63
  %1836 = lshr i64 %1807, 63
  %1837 = xor i64 %1832, %1835
  %1838 = xor i64 %1832, %1836
  %1839 = add i64 %1837, %1838
  %1840 = icmp eq i64 %1839, 2
  %1841 = zext i1 %1840 to i8
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1841, i8* %1842, align 1
  store %struct.Memory* %loadMem_4801ba, %struct.Memory** %MEMORY
  %loadMem_4801bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1844 = getelementptr inbounds %struct.GPR, %struct.GPR* %1843, i32 0, i32 33
  %1845 = getelementptr inbounds %struct.Reg, %struct.Reg* %1844, i32 0, i32 0
  %PC.i1717 = bitcast %union.anon* %1845 to i64*
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1847 = getelementptr inbounds %struct.GPR, %struct.GPR* %1846, i32 0, i32 7
  %1848 = getelementptr inbounds %struct.Reg, %struct.Reg* %1847, i32 0, i32 0
  %RDX.i1718 = bitcast %union.anon* %1848 to i64*
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1850 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1849, i64 0, i64 0
  %YMM0.i1719 = bitcast %union.VectorReg* %1850 to %"class.std::bitset"*
  %1851 = bitcast %"class.std::bitset"* %YMM0.i1719 to i8*
  %1852 = load i64, i64* %RDX.i1718
  %1853 = add i64 %1852, 12
  %1854 = load i64, i64* %PC.i1717
  %1855 = add i64 %1854, 5
  store i64 %1855, i64* %PC.i1717
  %1856 = inttoptr i64 %1853 to float*
  %1857 = load float, float* %1856
  %1858 = bitcast i8* %1851 to float*
  store float %1857, float* %1858, align 1
  %1859 = getelementptr inbounds i8, i8* %1851, i64 4
  %1860 = bitcast i8* %1859 to float*
  store float 0.000000e+00, float* %1860, align 1
  %1861 = getelementptr inbounds i8, i8* %1851, i64 8
  %1862 = bitcast i8* %1861 to float*
  store float 0.000000e+00, float* %1862, align 1
  %1863 = getelementptr inbounds i8, i8* %1851, i64 12
  %1864 = bitcast i8* %1863 to float*
  store float 0.000000e+00, float* %1864, align 1
  store %struct.Memory* %loadMem_4801bd, %struct.Memory** %MEMORY
  %loadMem_4801c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1866 = getelementptr inbounds %struct.GPR, %struct.GPR* %1865, i32 0, i32 33
  %1867 = getelementptr inbounds %struct.Reg, %struct.Reg* %1866, i32 0, i32 0
  %PC.i1714 = bitcast %union.anon* %1867 to i64*
  %1868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1869 = getelementptr inbounds %struct.GPR, %struct.GPR* %1868, i32 0, i32 5
  %1870 = getelementptr inbounds %struct.Reg, %struct.Reg* %1869, i32 0, i32 0
  %RCX.i1715 = bitcast %union.anon* %1870 to i64*
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1872 = getelementptr inbounds %struct.GPR, %struct.GPR* %1871, i32 0, i32 15
  %1873 = getelementptr inbounds %struct.Reg, %struct.Reg* %1872, i32 0, i32 0
  %RBP.i1716 = bitcast %union.anon* %1873 to i64*
  %1874 = load i64, i64* %RBP.i1716
  %1875 = sub i64 %1874, 8
  %1876 = load i64, i64* %PC.i1714
  %1877 = add i64 %1876, 4
  store i64 %1877, i64* %PC.i1714
  %1878 = inttoptr i64 %1875 to i32*
  %1879 = load i32, i32* %1878
  %1880 = sext i32 %1879 to i64
  store i64 %1880, i64* %RCX.i1715, align 8
  store %struct.Memory* %loadMem_4801c2, %struct.Memory** %MEMORY
  %loadMem_4801c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1882 = getelementptr inbounds %struct.GPR, %struct.GPR* %1881, i32 0, i32 33
  %1883 = getelementptr inbounds %struct.Reg, %struct.Reg* %1882, i32 0, i32 0
  %PC.i1712 = bitcast %union.anon* %1883 to i64*
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1885 = getelementptr inbounds %struct.GPR, %struct.GPR* %1884, i32 0, i32 5
  %1886 = getelementptr inbounds %struct.Reg, %struct.Reg* %1885, i32 0, i32 0
  %RCX.i1713 = bitcast %union.anon* %1886 to i64*
  %1887 = load i64, i64* %RCX.i1713
  %1888 = load i64, i64* %PC.i1712
  %1889 = add i64 %1888, 7
  store i64 %1889, i64* %PC.i1712
  %1890 = sext i64 %1887 to i128
  %1891 = and i128 %1890, -18446744073709551616
  %1892 = zext i64 %1887 to i128
  %1893 = or i128 %1891, %1892
  %1894 = mul i128 564, %1893
  %1895 = trunc i128 %1894 to i64
  store i64 %1895, i64* %RCX.i1713, align 8
  %1896 = sext i64 %1895 to i128
  %1897 = icmp ne i128 %1896, %1894
  %1898 = zext i1 %1897 to i8
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1898, i8* %1899, align 1
  %1900 = trunc i128 %1894 to i32
  %1901 = and i32 %1900, 255
  %1902 = call i32 @llvm.ctpop.i32(i32 %1901)
  %1903 = trunc i32 %1902 to i8
  %1904 = and i8 %1903, 1
  %1905 = xor i8 %1904, 1
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1905, i8* %1906, align 1
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1907, align 1
  %1908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1908, align 1
  %1909 = lshr i64 %1895, 63
  %1910 = trunc i64 %1909 to i8
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1910, i8* %1911, align 1
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1898, i8* %1912, align 1
  store %struct.Memory* %loadMem_4801c6, %struct.Memory** %MEMORY
  %loadMem_4801cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1914 = getelementptr inbounds %struct.GPR, %struct.GPR* %1913, i32 0, i32 33
  %1915 = getelementptr inbounds %struct.Reg, %struct.Reg* %1914, i32 0, i32 0
  %PC.i1709 = bitcast %union.anon* %1915 to i64*
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1917 = getelementptr inbounds %struct.GPR, %struct.GPR* %1916, i32 0, i32 1
  %1918 = getelementptr inbounds %struct.Reg, %struct.Reg* %1917, i32 0, i32 0
  %RAX.i1710 = bitcast %union.anon* %1918 to i64*
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1920 = getelementptr inbounds %struct.GPR, %struct.GPR* %1919, i32 0, i32 5
  %1921 = getelementptr inbounds %struct.Reg, %struct.Reg* %1920, i32 0, i32 0
  %RCX.i1711 = bitcast %union.anon* %1921 to i64*
  %1922 = load i64, i64* %RAX.i1710
  %1923 = load i64, i64* %RCX.i1711
  %1924 = load i64, i64* %PC.i1709
  %1925 = add i64 %1924, 3
  store i64 %1925, i64* %PC.i1709
  %1926 = add i64 %1923, %1922
  store i64 %1926, i64* %RAX.i1710, align 8
  %1927 = icmp ult i64 %1926, %1922
  %1928 = icmp ult i64 %1926, %1923
  %1929 = or i1 %1927, %1928
  %1930 = zext i1 %1929 to i8
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1930, i8* %1931, align 1
  %1932 = trunc i64 %1926 to i32
  %1933 = and i32 %1932, 255
  %1934 = call i32 @llvm.ctpop.i32(i32 %1933)
  %1935 = trunc i32 %1934 to i8
  %1936 = and i8 %1935, 1
  %1937 = xor i8 %1936, 1
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1937, i8* %1938, align 1
  %1939 = xor i64 %1923, %1922
  %1940 = xor i64 %1939, %1926
  %1941 = lshr i64 %1940, 4
  %1942 = trunc i64 %1941 to i8
  %1943 = and i8 %1942, 1
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1943, i8* %1944, align 1
  %1945 = icmp eq i64 %1926, 0
  %1946 = zext i1 %1945 to i8
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1946, i8* %1947, align 1
  %1948 = lshr i64 %1926, 63
  %1949 = trunc i64 %1948 to i8
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1949, i8* %1950, align 1
  %1951 = lshr i64 %1922, 63
  %1952 = lshr i64 %1923, 63
  %1953 = xor i64 %1948, %1951
  %1954 = xor i64 %1948, %1952
  %1955 = add i64 %1953, %1954
  %1956 = icmp eq i64 %1955, 2
  %1957 = zext i1 %1956 to i8
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1957, i8* %1958, align 1
  store %struct.Memory* %loadMem_4801cd, %struct.Memory** %MEMORY
  %loadMem_4801d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1960 = getelementptr inbounds %struct.GPR, %struct.GPR* %1959, i32 0, i32 33
  %1961 = getelementptr inbounds %struct.Reg, %struct.Reg* %1960, i32 0, i32 0
  %PC.i1706 = bitcast %union.anon* %1961 to i64*
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1963 = getelementptr inbounds %struct.GPR, %struct.GPR* %1962, i32 0, i32 1
  %1964 = getelementptr inbounds %struct.Reg, %struct.Reg* %1963, i32 0, i32 0
  %RAX.i1707 = bitcast %union.anon* %1964 to i64*
  %1965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1966 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1965, i64 0, i64 0
  %YMM0.i1708 = bitcast %union.VectorReg* %1966 to %"class.std::bitset"*
  %1967 = bitcast %"class.std::bitset"* %YMM0.i1708 to i8*
  %1968 = bitcast %"class.std::bitset"* %YMM0.i1708 to i8*
  %1969 = load i64, i64* %RAX.i1707
  %1970 = add i64 %1969, 16
  %1971 = load i64, i64* %PC.i1706
  %1972 = add i64 %1971, 5
  store i64 %1972, i64* %PC.i1706
  %1973 = bitcast i8* %1968 to <2 x float>*
  %1974 = load <2 x float>, <2 x float>* %1973, align 1
  %1975 = getelementptr inbounds i8, i8* %1968, i64 8
  %1976 = bitcast i8* %1975 to <2 x i32>*
  %1977 = load <2 x i32>, <2 x i32>* %1976, align 1
  %1978 = inttoptr i64 %1970 to float*
  %1979 = load float, float* %1978
  %1980 = extractelement <2 x float> %1974, i32 0
  %1981 = fadd float %1980, %1979
  %1982 = bitcast i8* %1967 to float*
  store float %1981, float* %1982, align 1
  %1983 = bitcast <2 x float> %1974 to <2 x i32>
  %1984 = extractelement <2 x i32> %1983, i32 1
  %1985 = getelementptr inbounds i8, i8* %1967, i64 4
  %1986 = bitcast i8* %1985 to i32*
  store i32 %1984, i32* %1986, align 1
  %1987 = extractelement <2 x i32> %1977, i32 0
  %1988 = getelementptr inbounds i8, i8* %1967, i64 8
  %1989 = bitcast i8* %1988 to i32*
  store i32 %1987, i32* %1989, align 1
  %1990 = extractelement <2 x i32> %1977, i32 1
  %1991 = getelementptr inbounds i8, i8* %1967, i64 12
  %1992 = bitcast i8* %1991 to i32*
  store i32 %1990, i32* %1992, align 1
  store %struct.Memory* %loadMem_4801d0, %struct.Memory** %MEMORY
  %loadMem_4801d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1994 = getelementptr inbounds %struct.GPR, %struct.GPR* %1993, i32 0, i32 33
  %1995 = getelementptr inbounds %struct.Reg, %struct.Reg* %1994, i32 0, i32 0
  %PC.i1703 = bitcast %union.anon* %1995 to i64*
  %1996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1997 = getelementptr inbounds %struct.GPR, %struct.GPR* %1996, i32 0, i32 15
  %1998 = getelementptr inbounds %struct.Reg, %struct.Reg* %1997, i32 0, i32 0
  %RBP.i1704 = bitcast %union.anon* %1998 to i64*
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2000 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1999, i64 0, i64 0
  %XMM0.i1705 = bitcast %union.VectorReg* %2000 to %union.vec128_t*
  %2001 = load i64, i64* %RBP.i1704
  %2002 = sub i64 %2001, 24
  %2003 = bitcast %union.vec128_t* %XMM0.i1705 to i8*
  %2004 = load i64, i64* %PC.i1703
  %2005 = add i64 %2004, 5
  store i64 %2005, i64* %PC.i1703
  %2006 = bitcast i8* %2003 to <2 x float>*
  %2007 = load <2 x float>, <2 x float>* %2006, align 1
  %2008 = extractelement <2 x float> %2007, i32 0
  %2009 = inttoptr i64 %2002 to float*
  store float %2008, float* %2009
  store %struct.Memory* %loadMem_4801d5, %struct.Memory** %MEMORY
  %loadMem_4801da = load %struct.Memory*, %struct.Memory** %MEMORY
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2011 = getelementptr inbounds %struct.GPR, %struct.GPR* %2010, i32 0, i32 33
  %2012 = getelementptr inbounds %struct.Reg, %struct.Reg* %2011, i32 0, i32 0
  %PC.i1700 = bitcast %union.anon* %2012 to i64*
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2014 = getelementptr inbounds %struct.GPR, %struct.GPR* %2013, i32 0, i32 11
  %2015 = getelementptr inbounds %struct.Reg, %struct.Reg* %2014, i32 0, i32 0
  %RDI.i1701 = bitcast %union.anon* %2015 to i64*
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2017 = getelementptr inbounds %struct.GPR, %struct.GPR* %2016, i32 0, i32 15
  %2018 = getelementptr inbounds %struct.Reg, %struct.Reg* %2017, i32 0, i32 0
  %RBP.i1702 = bitcast %union.anon* %2018 to i64*
  %2019 = load i64, i64* %RBP.i1702
  %2020 = sub i64 %2019, 8
  %2021 = load i64, i64* %PC.i1700
  %2022 = add i64 %2021, 3
  store i64 %2022, i64* %PC.i1700
  %2023 = inttoptr i64 %2020 to i32*
  %2024 = load i32, i32* %2023
  %2025 = zext i32 %2024 to i64
  store i64 %2025, i64* %RDI.i1701, align 8
  store %struct.Memory* %loadMem_4801da, %struct.Memory** %MEMORY
  %loadMem1_4801dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2027 = getelementptr inbounds %struct.GPR, %struct.GPR* %2026, i32 0, i32 33
  %2028 = getelementptr inbounds %struct.Reg, %struct.Reg* %2027, i32 0, i32 0
  %PC.i1699 = bitcast %union.anon* %2028 to i64*
  %2029 = load i64, i64* %PC.i1699
  %2030 = add i64 %2029, 19251
  %2031 = load i64, i64* %PC.i1699
  %2032 = add i64 %2031, 5
  %2033 = load i64, i64* %PC.i1699
  %2034 = add i64 %2033, 5
  store i64 %2034, i64* %PC.i1699
  %2035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2036 = load i64, i64* %2035, align 8
  %2037 = add i64 %2036, -8
  %2038 = inttoptr i64 %2037 to i64*
  store i64 %2032, i64* %2038
  store i64 %2037, i64* %2035, align 8
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2030, i64* %2039, align 8
  store %struct.Memory* %loadMem1_4801dd, %struct.Memory** %MEMORY
  %loadMem2_4801dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4801dd = load i64, i64* %3
  %call2_4801dd = call %struct.Memory* @sub_484d10.compute_shape_factor(%struct.State* %0, i64 %loadPC_4801dd, %struct.Memory* %loadMem2_4801dd)
  store %struct.Memory* %call2_4801dd, %struct.Memory** %MEMORY
  %loadMem_4801e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2041 = getelementptr inbounds %struct.GPR, %struct.GPR* %2040, i32 0, i32 33
  %2042 = getelementptr inbounds %struct.Reg, %struct.Reg* %2041, i32 0, i32 0
  %PC.i1697 = bitcast %union.anon* %2042 to i64*
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2044 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2043, i64 0, i64 1
  %YMM1.i1698 = bitcast %union.VectorReg* %2044 to %"class.std::bitset"*
  %2045 = bitcast %"class.std::bitset"* %YMM1.i1698 to i8*
  %2046 = load i64, i64* %PC.i1697
  %2047 = add i64 %2046, ptrtoint (%G_0x62e96__rip__type* @G_0x62e96__rip_ to i64)
  %2048 = load i64, i64* %PC.i1697
  %2049 = add i64 %2048, 8
  store i64 %2049, i64* %PC.i1697
  %2050 = inttoptr i64 %2047 to double*
  %2051 = load double, double* %2050
  %2052 = bitcast i8* %2045 to double*
  store double %2051, double* %2052, align 1
  %2053 = getelementptr inbounds i8, i8* %2045, i64 8
  %2054 = bitcast i8* %2053 to double*
  store double 0.000000e+00, double* %2054, align 1
  store %struct.Memory* %loadMem_4801e2, %struct.Memory** %MEMORY
  %loadMem_4801ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2056 = getelementptr inbounds %struct.GPR, %struct.GPR* %2055, i32 0, i32 33
  %2057 = getelementptr inbounds %struct.Reg, %struct.Reg* %2056, i32 0, i32 0
  %PC.i1694 = bitcast %union.anon* %2057 to i64*
  %2058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2059 = getelementptr inbounds %struct.GPR, %struct.GPR* %2058, i32 0, i32 15
  %2060 = getelementptr inbounds %struct.Reg, %struct.Reg* %2059, i32 0, i32 0
  %RBP.i1695 = bitcast %union.anon* %2060 to i64*
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2062 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2061, i64 0, i64 0
  %XMM0.i1696 = bitcast %union.VectorReg* %2062 to %union.vec128_t*
  %2063 = load i64, i64* %RBP.i1695
  %2064 = sub i64 %2063, 28
  %2065 = bitcast %union.vec128_t* %XMM0.i1696 to i8*
  %2066 = load i64, i64* %PC.i1694
  %2067 = add i64 %2066, 5
  store i64 %2067, i64* %PC.i1694
  %2068 = bitcast i8* %2065 to <2 x float>*
  %2069 = load <2 x float>, <2 x float>* %2068, align 1
  %2070 = extractelement <2 x float> %2069, i32 0
  %2071 = inttoptr i64 %2064 to float*
  store float %2070, float* %2071
  store %struct.Memory* %loadMem_4801ea, %struct.Memory** %MEMORY
  %loadMem_4801ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %2072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2073 = getelementptr inbounds %struct.GPR, %struct.GPR* %2072, i32 0, i32 33
  %2074 = getelementptr inbounds %struct.Reg, %struct.Reg* %2073, i32 0, i32 0
  %PC.i1691 = bitcast %union.anon* %2074 to i64*
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2076 = getelementptr inbounds %struct.GPR, %struct.GPR* %2075, i32 0, i32 15
  %2077 = getelementptr inbounds %struct.Reg, %struct.Reg* %2076, i32 0, i32 0
  %RBP.i1692 = bitcast %union.anon* %2077 to i64*
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2079 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2078, i64 0, i64 0
  %YMM0.i1693 = bitcast %union.VectorReg* %2079 to %"class.std::bitset"*
  %2080 = bitcast %"class.std::bitset"* %YMM0.i1693 to i8*
  %2081 = load i64, i64* %RBP.i1692
  %2082 = sub i64 %2081, 24
  %2083 = load i64, i64* %PC.i1691
  %2084 = add i64 %2083, 5
  store i64 %2084, i64* %PC.i1691
  %2085 = inttoptr i64 %2082 to float*
  %2086 = load float, float* %2085
  %2087 = fpext float %2086 to double
  %2088 = bitcast i8* %2080 to double*
  store double %2087, double* %2088, align 1
  store %struct.Memory* %loadMem_4801ef, %struct.Memory** %MEMORY
  %loadMem_4801f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2090 = getelementptr inbounds %struct.GPR, %struct.GPR* %2089, i32 0, i32 33
  %2091 = getelementptr inbounds %struct.Reg, %struct.Reg* %2090, i32 0, i32 0
  %PC.i1684 = bitcast %union.anon* %2091 to i64*
  %2092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2093 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2092, i64 0, i64 0
  %XMM0.i1685 = bitcast %union.VectorReg* %2093 to %union.vec128_t*
  %2094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2095 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2094, i64 0, i64 1
  %XMM1.i1686 = bitcast %union.VectorReg* %2095 to %union.vec128_t*
  %2096 = bitcast %union.vec128_t* %XMM1.i1686 to i8*
  %2097 = bitcast %union.vec128_t* %XMM0.i1685 to i8*
  %2098 = load i64, i64* %PC.i1684
  %2099 = add i64 %2098, 4
  store i64 %2099, i64* %PC.i1684
  %2100 = bitcast i8* %2096 to double*
  %2101 = load double, double* %2100, align 1
  %2102 = bitcast i8* %2097 to double*
  %2103 = load double, double* %2102, align 1
  %2104 = fcmp uno double %2101, %2103
  br i1 %2104, label %2105, label %2117

; <label>:2105:                                   ; preds = %block_.L_4801a2
  %2106 = fadd double %2101, %2103
  %2107 = bitcast double %2106 to i64
  %2108 = and i64 %2107, 9221120237041090560
  %2109 = icmp eq i64 %2108, 9218868437227405312
  %2110 = and i64 %2107, 2251799813685247
  %2111 = icmp ne i64 %2110, 0
  %2112 = and i1 %2109, %2111
  br i1 %2112, label %2113, label %2123

; <label>:2113:                                   ; preds = %2105
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2115 = load i64, i64* %2114, align 8
  %2116 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2115, %struct.Memory* %loadMem_4801f4)
  br label %routine_ucomisd__xmm0___xmm1.exit1687

; <label>:2117:                                   ; preds = %block_.L_4801a2
  %2118 = fcmp ogt double %2101, %2103
  br i1 %2118, label %2123, label %2119

; <label>:2119:                                   ; preds = %2117
  %2120 = fcmp olt double %2101, %2103
  br i1 %2120, label %2123, label %2121

; <label>:2121:                                   ; preds = %2119
  %2122 = fcmp oeq double %2101, %2103
  br i1 %2122, label %2123, label %2130

; <label>:2123:                                   ; preds = %2121, %2119, %2117, %2105
  %2124 = phi i8 [ 0, %2117 ], [ 0, %2119 ], [ 1, %2121 ], [ 1, %2105 ]
  %2125 = phi i8 [ 0, %2117 ], [ 0, %2119 ], [ 0, %2121 ], [ 1, %2105 ]
  %2126 = phi i8 [ 0, %2117 ], [ 1, %2119 ], [ 0, %2121 ], [ 1, %2105 ]
  %2127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2124, i8* %2127, align 1
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2125, i8* %2128, align 1
  %2129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2126, i8* %2129, align 1
  br label %2130

; <label>:2130:                                   ; preds = %2123, %2121
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2131, align 1
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2132, align 1
  %2133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2133, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit1687

routine_ucomisd__xmm0___xmm1.exit1687:            ; preds = %2113, %2130
  %2134 = phi %struct.Memory* [ %2116, %2113 ], [ %loadMem_4801f4, %2130 ]
  store %struct.Memory* %2134, %struct.Memory** %MEMORY
  %loadMem_4801f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 33
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %PC.i1683 = bitcast %union.anon* %2137 to i64*
  %2138 = load i64, i64* %PC.i1683
  %2139 = add i64 %2138, 37
  %2140 = load i64, i64* %PC.i1683
  %2141 = add i64 %2140, 6
  %2142 = load i64, i64* %PC.i1683
  %2143 = add i64 %2142, 6
  store i64 %2143, i64* %PC.i1683
  %2144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2145 = load i8, i8* %2144, align 1
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2147 = load i8, i8* %2146, align 1
  %2148 = or i8 %2147, %2145
  %2149 = icmp ne i8 %2148, 0
  %2150 = zext i1 %2149 to i8
  store i8 %2150, i8* %BRANCH_TAKEN, align 1
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2152 = select i1 %2149, i64 %2139, i64 %2141
  store i64 %2152, i64* %2151, align 8
  store %struct.Memory* %loadMem_4801f8, %struct.Memory** %MEMORY
  %loadBr_4801f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4801f8 = icmp eq i8 %loadBr_4801f8, 1
  br i1 %cmpBr_4801f8, label %block_.L_48021d, label %block_4801fe

block_4801fe:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit1687
  %loadMem_4801fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2154 = getelementptr inbounds %struct.GPR, %struct.GPR* %2153, i32 0, i32 33
  %2155 = getelementptr inbounds %struct.Reg, %struct.Reg* %2154, i32 0, i32 0
  %PC.i1681 = bitcast %union.anon* %2155 to i64*
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2157 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2156, i64 0, i64 0
  %YMM0.i1682 = bitcast %union.VectorReg* %2157 to %"class.std::bitset"*
  %2158 = bitcast %"class.std::bitset"* %YMM0.i1682 to i8*
  %2159 = load i64, i64* %PC.i1681
  %2160 = add i64 %2159, ptrtoint (%G_0x62e72__rip__type* @G_0x62e72__rip_ to i64)
  %2161 = load i64, i64* %PC.i1681
  %2162 = add i64 %2161, 8
  store i64 %2162, i64* %PC.i1681
  %2163 = inttoptr i64 %2160 to double*
  %2164 = load double, double* %2163
  %2165 = bitcast i8* %2158 to double*
  store double %2164, double* %2165, align 1
  %2166 = getelementptr inbounds i8, i8* %2158, i64 8
  %2167 = bitcast i8* %2166 to double*
  store double 0.000000e+00, double* %2167, align 1
  store %struct.Memory* %loadMem_4801fe, %struct.Memory** %MEMORY
  %loadMem_480206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2169 = getelementptr inbounds %struct.GPR, %struct.GPR* %2168, i32 0, i32 33
  %2170 = getelementptr inbounds %struct.Reg, %struct.Reg* %2169, i32 0, i32 0
  %PC.i1678 = bitcast %union.anon* %2170 to i64*
  %2171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2172 = getelementptr inbounds %struct.GPR, %struct.GPR* %2171, i32 0, i32 15
  %2173 = getelementptr inbounds %struct.Reg, %struct.Reg* %2172, i32 0, i32 0
  %RBP.i1679 = bitcast %union.anon* %2173 to i64*
  %2174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2175 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2174, i64 0, i64 1
  %YMM1.i1680 = bitcast %union.VectorReg* %2175 to %"class.std::bitset"*
  %2176 = bitcast %"class.std::bitset"* %YMM1.i1680 to i8*
  %2177 = load i64, i64* %RBP.i1679
  %2178 = sub i64 %2177, 24
  %2179 = load i64, i64* %PC.i1678
  %2180 = add i64 %2179, 5
  store i64 %2180, i64* %PC.i1678
  %2181 = inttoptr i64 %2178 to float*
  %2182 = load float, float* %2181
  %2183 = fpext float %2182 to double
  %2184 = bitcast i8* %2176 to double*
  store double %2183, double* %2184, align 1
  store %struct.Memory* %loadMem_480206, %struct.Memory** %MEMORY
  %loadMem_48020b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2186 = getelementptr inbounds %struct.GPR, %struct.GPR* %2185, i32 0, i32 33
  %2187 = getelementptr inbounds %struct.Reg, %struct.Reg* %2186, i32 0, i32 0
  %PC.i1672 = bitcast %union.anon* %2187 to i64*
  %2188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2189 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2188, i64 0, i64 0
  %XMM0.i1673 = bitcast %union.VectorReg* %2189 to %union.vec128_t*
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2191 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2190, i64 0, i64 1
  %XMM1.i1674 = bitcast %union.VectorReg* %2191 to %union.vec128_t*
  %2192 = bitcast %union.vec128_t* %XMM1.i1674 to i8*
  %2193 = bitcast %union.vec128_t* %XMM0.i1673 to i8*
  %2194 = load i64, i64* %PC.i1672
  %2195 = add i64 %2194, 4
  store i64 %2195, i64* %PC.i1672
  %2196 = bitcast i8* %2192 to double*
  %2197 = load double, double* %2196, align 1
  %2198 = bitcast i8* %2193 to double*
  %2199 = load double, double* %2198, align 1
  %2200 = fcmp uno double %2197, %2199
  br i1 %2200, label %2201, label %2213

; <label>:2201:                                   ; preds = %block_4801fe
  %2202 = fadd double %2197, %2199
  %2203 = bitcast double %2202 to i64
  %2204 = and i64 %2203, 9221120237041090560
  %2205 = icmp eq i64 %2204, 9218868437227405312
  %2206 = and i64 %2203, 2251799813685247
  %2207 = icmp ne i64 %2206, 0
  %2208 = and i1 %2205, %2207
  br i1 %2208, label %2209, label %2219

; <label>:2209:                                   ; preds = %2201
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2211 = load i64, i64* %2210, align 8
  %2212 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2211, %struct.Memory* %loadMem_48020b)
  br label %routine_ucomisd__xmm0___xmm1.exit1675

; <label>:2213:                                   ; preds = %block_4801fe
  %2214 = fcmp ogt double %2197, %2199
  br i1 %2214, label %2219, label %2215

; <label>:2215:                                   ; preds = %2213
  %2216 = fcmp olt double %2197, %2199
  br i1 %2216, label %2219, label %2217

; <label>:2217:                                   ; preds = %2215
  %2218 = fcmp oeq double %2197, %2199
  br i1 %2218, label %2219, label %2226

; <label>:2219:                                   ; preds = %2217, %2215, %2213, %2201
  %2220 = phi i8 [ 0, %2213 ], [ 0, %2215 ], [ 1, %2217 ], [ 1, %2201 ]
  %2221 = phi i8 [ 0, %2213 ], [ 0, %2215 ], [ 0, %2217 ], [ 1, %2201 ]
  %2222 = phi i8 [ 0, %2213 ], [ 1, %2215 ], [ 0, %2217 ], [ 1, %2201 ]
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2220, i8* %2223, align 1
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2221, i8* %2224, align 1
  %2225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2222, i8* %2225, align 1
  br label %2226

; <label>:2226:                                   ; preds = %2219, %2217
  %2227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2227, align 1
  %2228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2228, align 1
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2229, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit1675

routine_ucomisd__xmm0___xmm1.exit1675:            ; preds = %2209, %2226
  %2230 = phi %struct.Memory* [ %2212, %2209 ], [ %loadMem_48020b, %2226 ]
  store %struct.Memory* %2230, %struct.Memory** %MEMORY
  %loadMem_48020f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2232 = getelementptr inbounds %struct.GPR, %struct.GPR* %2231, i32 0, i32 33
  %2233 = getelementptr inbounds %struct.Reg, %struct.Reg* %2232, i32 0, i32 0
  %PC.i1671 = bitcast %union.anon* %2233 to i64*
  %2234 = load i64, i64* %PC.i1671
  %2235 = add i64 %2234, 14
  %2236 = load i64, i64* %PC.i1671
  %2237 = add i64 %2236, 6
  %2238 = load i64, i64* %PC.i1671
  %2239 = add i64 %2238, 6
  store i64 %2239, i64* %PC.i1671
  %2240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2241 = load i8, i8* %2240, align 1
  %2242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2243 = load i8, i8* %2242, align 1
  %2244 = or i8 %2243, %2241
  %2245 = icmp ne i8 %2244, 0
  %2246 = zext i1 %2245 to i8
  store i8 %2246, i8* %BRANCH_TAKEN, align 1
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2248 = select i1 %2245, i64 %2235, i64 %2237
  store i64 %2248, i64* %2247, align 8
  store %struct.Memory* %loadMem_48020f, %struct.Memory** %MEMORY
  %loadBr_48020f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48020f = icmp eq i8 %loadBr_48020f, 1
  br i1 %cmpBr_48020f, label %block_.L_48021d, label %block_480215

block_480215:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit1675
  %loadMem_480215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2250 = getelementptr inbounds %struct.GPR, %struct.GPR* %2249, i32 0, i32 33
  %2251 = getelementptr inbounds %struct.Reg, %struct.Reg* %2250, i32 0, i32 0
  %PC.i1668 = bitcast %union.anon* %2251 to i64*
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2253 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2252, i64 0, i64 0
  %YMM0.i1669 = bitcast %union.VectorReg* %2253 to %"class.std::bitset"*
  %2254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2255 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2254, i64 0, i64 0
  %XMM0.i1670 = bitcast %union.VectorReg* %2255 to %union.vec128_t*
  %2256 = bitcast %"class.std::bitset"* %YMM0.i1669 to i8*
  %2257 = bitcast %"class.std::bitset"* %YMM0.i1669 to i8*
  %2258 = bitcast %union.vec128_t* %XMM0.i1670 to i8*
  %2259 = load i64, i64* %PC.i1668
  %2260 = add i64 %2259, 3
  store i64 %2260, i64* %PC.i1668
  %2261 = bitcast i8* %2257 to i64*
  %2262 = load i64, i64* %2261, align 1
  %2263 = getelementptr inbounds i8, i8* %2257, i64 8
  %2264 = bitcast i8* %2263 to i64*
  %2265 = load i64, i64* %2264, align 1
  %2266 = bitcast i8* %2258 to i64*
  %2267 = load i64, i64* %2266, align 1
  %2268 = getelementptr inbounds i8, i8* %2258, i64 8
  %2269 = bitcast i8* %2268 to i64*
  %2270 = load i64, i64* %2269, align 1
  %2271 = xor i64 %2267, %2262
  %2272 = xor i64 %2270, %2265
  %2273 = trunc i64 %2271 to i32
  %2274 = lshr i64 %2271, 32
  %2275 = trunc i64 %2274 to i32
  %2276 = bitcast i8* %2256 to i32*
  store i32 %2273, i32* %2276, align 1
  %2277 = getelementptr inbounds i8, i8* %2256, i64 4
  %2278 = bitcast i8* %2277 to i32*
  store i32 %2275, i32* %2278, align 1
  %2279 = trunc i64 %2272 to i32
  %2280 = getelementptr inbounds i8, i8* %2256, i64 8
  %2281 = bitcast i8* %2280 to i32*
  store i32 %2279, i32* %2281, align 1
  %2282 = lshr i64 %2272, 32
  %2283 = trunc i64 %2282 to i32
  %2284 = getelementptr inbounds i8, i8* %2256, i64 12
  %2285 = bitcast i8* %2284 to i32*
  store i32 %2283, i32* %2285, align 1
  store %struct.Memory* %loadMem_480215, %struct.Memory** %MEMORY
  %loadMem_480218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2287 = getelementptr inbounds %struct.GPR, %struct.GPR* %2286, i32 0, i32 33
  %2288 = getelementptr inbounds %struct.Reg, %struct.Reg* %2287, i32 0, i32 0
  %PC.i1665 = bitcast %union.anon* %2288 to i64*
  %2289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2290 = getelementptr inbounds %struct.GPR, %struct.GPR* %2289, i32 0, i32 15
  %2291 = getelementptr inbounds %struct.Reg, %struct.Reg* %2290, i32 0, i32 0
  %RBP.i1666 = bitcast %union.anon* %2291 to i64*
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2292, i64 0, i64 0
  %XMM0.i1667 = bitcast %union.VectorReg* %2293 to %union.vec128_t*
  %2294 = load i64, i64* %RBP.i1666
  %2295 = sub i64 %2294, 24
  %2296 = bitcast %union.vec128_t* %XMM0.i1667 to i8*
  %2297 = load i64, i64* %PC.i1665
  %2298 = add i64 %2297, 5
  store i64 %2298, i64* %PC.i1665
  %2299 = bitcast i8* %2296 to <2 x float>*
  %2300 = load <2 x float>, <2 x float>* %2299, align 1
  %2301 = extractelement <2 x float> %2300, i32 0
  %2302 = inttoptr i64 %2295 to float*
  store float %2301, float* %2302
  store %struct.Memory* %loadMem_480218, %struct.Memory** %MEMORY
  br label %block_.L_48021d

block_.L_48021d:                                  ; preds = %block_480215, %routine_ucomisd__xmm0___xmm1.exit1675, %routine_ucomisd__xmm0___xmm1.exit1687
  %loadMem_48021d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2304 = getelementptr inbounds %struct.GPR, %struct.GPR* %2303, i32 0, i32 33
  %2305 = getelementptr inbounds %struct.Reg, %struct.Reg* %2304, i32 0, i32 0
  %PC.i1662 = bitcast %union.anon* %2305 to i64*
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2306, i64 0, i64 0
  %YMM0.i1663 = bitcast %union.VectorReg* %2307 to %"class.std::bitset"*
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2308, i64 0, i64 0
  %XMM0.i1664 = bitcast %union.VectorReg* %2309 to %union.vec128_t*
  %2310 = bitcast %"class.std::bitset"* %YMM0.i1663 to i8*
  %2311 = bitcast %"class.std::bitset"* %YMM0.i1663 to i8*
  %2312 = bitcast %union.vec128_t* %XMM0.i1664 to i8*
  %2313 = load i64, i64* %PC.i1662
  %2314 = add i64 %2313, 3
  store i64 %2314, i64* %PC.i1662
  %2315 = bitcast i8* %2311 to i64*
  %2316 = load i64, i64* %2315, align 1
  %2317 = getelementptr inbounds i8, i8* %2311, i64 8
  %2318 = bitcast i8* %2317 to i64*
  %2319 = load i64, i64* %2318, align 1
  %2320 = bitcast i8* %2312 to i64*
  %2321 = load i64, i64* %2320, align 1
  %2322 = getelementptr inbounds i8, i8* %2312, i64 8
  %2323 = bitcast i8* %2322 to i64*
  %2324 = load i64, i64* %2323, align 1
  %2325 = xor i64 %2321, %2316
  %2326 = xor i64 %2324, %2319
  %2327 = trunc i64 %2325 to i32
  %2328 = lshr i64 %2325, 32
  %2329 = trunc i64 %2328 to i32
  %2330 = bitcast i8* %2310 to i32*
  store i32 %2327, i32* %2330, align 1
  %2331 = getelementptr inbounds i8, i8* %2310, i64 4
  %2332 = bitcast i8* %2331 to i32*
  store i32 %2329, i32* %2332, align 1
  %2333 = trunc i64 %2326 to i32
  %2334 = getelementptr inbounds i8, i8* %2310, i64 8
  %2335 = bitcast i8* %2334 to i32*
  store i32 %2333, i32* %2335, align 1
  %2336 = lshr i64 %2326, 32
  %2337 = trunc i64 %2336 to i32
  %2338 = getelementptr inbounds i8, i8* %2310, i64 12
  %2339 = bitcast i8* %2338 to i32*
  store i32 %2337, i32* %2339, align 1
  store %struct.Memory* %loadMem_48021d, %struct.Memory** %MEMORY
  %loadMem_480220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2341 = getelementptr inbounds %struct.GPR, %struct.GPR* %2340, i32 0, i32 33
  %2342 = getelementptr inbounds %struct.Reg, %struct.Reg* %2341, i32 0, i32 0
  %PC.i1659 = bitcast %union.anon* %2342 to i64*
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2344 = getelementptr inbounds %struct.GPR, %struct.GPR* %2343, i32 0, i32 15
  %2345 = getelementptr inbounds %struct.Reg, %struct.Reg* %2344, i32 0, i32 0
  %RBP.i1660 = bitcast %union.anon* %2345 to i64*
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2347 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2346, i64 0, i64 1
  %YMM1.i1661 = bitcast %union.VectorReg* %2347 to %"class.std::bitset"*
  %2348 = bitcast %"class.std::bitset"* %YMM1.i1661 to i8*
  %2349 = load i64, i64* %RBP.i1660
  %2350 = sub i64 %2349, 24
  %2351 = load i64, i64* %PC.i1659
  %2352 = add i64 %2351, 5
  store i64 %2352, i64* %PC.i1659
  %2353 = inttoptr i64 %2350 to float*
  %2354 = load float, float* %2353
  %2355 = fpext float %2354 to double
  %2356 = bitcast i8* %2348 to double*
  store double %2355, double* %2356, align 1
  store %struct.Memory* %loadMem_480220, %struct.Memory** %MEMORY
  %loadMem_480225 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2358 = getelementptr inbounds %struct.GPR, %struct.GPR* %2357, i32 0, i32 33
  %2359 = getelementptr inbounds %struct.Reg, %struct.Reg* %2358, i32 0, i32 0
  %PC.i1652 = bitcast %union.anon* %2359 to i64*
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2361 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2360, i64 0, i64 0
  %XMM0.i1653 = bitcast %union.VectorReg* %2361 to %union.vec128_t*
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2363 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2362, i64 0, i64 1
  %XMM1.i1654 = bitcast %union.VectorReg* %2363 to %union.vec128_t*
  %2364 = bitcast %union.vec128_t* %XMM1.i1654 to i8*
  %2365 = bitcast %union.vec128_t* %XMM0.i1653 to i8*
  %2366 = load i64, i64* %PC.i1652
  %2367 = add i64 %2366, 4
  store i64 %2367, i64* %PC.i1652
  %2368 = bitcast i8* %2364 to double*
  %2369 = load double, double* %2368, align 1
  %2370 = bitcast i8* %2365 to double*
  %2371 = load double, double* %2370, align 1
  %2372 = fcmp uno double %2369, %2371
  br i1 %2372, label %2373, label %2385

; <label>:2373:                                   ; preds = %block_.L_48021d
  %2374 = fadd double %2369, %2371
  %2375 = bitcast double %2374 to i64
  %2376 = and i64 %2375, 9221120237041090560
  %2377 = icmp eq i64 %2376, 9218868437227405312
  %2378 = and i64 %2375, 2251799813685247
  %2379 = icmp ne i64 %2378, 0
  %2380 = and i1 %2377, %2379
  br i1 %2380, label %2381, label %2391

; <label>:2381:                                   ; preds = %2373
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2383 = load i64, i64* %2382, align 8
  %2384 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2383, %struct.Memory* %loadMem_480225)
  br label %routine_ucomisd__xmm0___xmm1.exit1655

; <label>:2385:                                   ; preds = %block_.L_48021d
  %2386 = fcmp ogt double %2369, %2371
  br i1 %2386, label %2391, label %2387

; <label>:2387:                                   ; preds = %2385
  %2388 = fcmp olt double %2369, %2371
  br i1 %2388, label %2391, label %2389

; <label>:2389:                                   ; preds = %2387
  %2390 = fcmp oeq double %2369, %2371
  br i1 %2390, label %2391, label %2398

; <label>:2391:                                   ; preds = %2389, %2387, %2385, %2373
  %2392 = phi i8 [ 0, %2385 ], [ 0, %2387 ], [ 1, %2389 ], [ 1, %2373 ]
  %2393 = phi i8 [ 0, %2385 ], [ 0, %2387 ], [ 0, %2389 ], [ 1, %2373 ]
  %2394 = phi i8 [ 0, %2385 ], [ 1, %2387 ], [ 0, %2389 ], [ 1, %2373 ]
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2392, i8* %2395, align 1
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2393, i8* %2396, align 1
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2394, i8* %2397, align 1
  br label %2398

; <label>:2398:                                   ; preds = %2391, %2389
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2399, align 1
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2400, align 1
  %2401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2401, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit1655

routine_ucomisd__xmm0___xmm1.exit1655:            ; preds = %2381, %2398
  %2402 = phi %struct.Memory* [ %2384, %2381 ], [ %loadMem_480225, %2398 ]
  store %struct.Memory* %2402, %struct.Memory** %MEMORY
  %loadMem_480229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2404 = getelementptr inbounds %struct.GPR, %struct.GPR* %2403, i32 0, i32 33
  %2405 = getelementptr inbounds %struct.Reg, %struct.Reg* %2404, i32 0, i32 0
  %PC.i1651 = bitcast %union.anon* %2405 to i64*
  %2406 = load i64, i64* %PC.i1651
  %2407 = add i64 %2406, 1986
  %2408 = load i64, i64* %PC.i1651
  %2409 = add i64 %2408, 6
  %2410 = load i64, i64* %PC.i1651
  %2411 = add i64 %2410, 6
  store i64 %2411, i64* %PC.i1651
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2413 = load i8, i8* %2412, align 1
  %2414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2415 = load i8, i8* %2414, align 1
  %2416 = or i8 %2415, %2413
  %2417 = icmp ne i8 %2416, 0
  %2418 = zext i1 %2417 to i8
  store i8 %2418, i8* %BRANCH_TAKEN, align 1
  %2419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2420 = select i1 %2417, i64 %2407, i64 %2409
  store i64 %2420, i64* %2419, align 8
  store %struct.Memory* %loadMem_480229, %struct.Memory** %MEMORY
  %loadBr_480229 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480229 = icmp eq i8 %loadBr_480229, 1
  br i1 %cmpBr_480229, label %block_.L_4809eb, label %block_48022f

block_48022f:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit1655
  %loadMem_48022f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2422 = getelementptr inbounds %struct.GPR, %struct.GPR* %2421, i32 0, i32 33
  %2423 = getelementptr inbounds %struct.Reg, %struct.Reg* %2422, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %2423 to i64*
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2425 = getelementptr inbounds %struct.GPR, %struct.GPR* %2424, i32 0, i32 1
  %2426 = getelementptr inbounds %struct.Reg, %struct.Reg* %2425, i32 0, i32 0
  %RAX.i1650 = bitcast %union.anon* %2426 to i64*
  %2427 = load i64, i64* %PC.i1649
  %2428 = add i64 %2427, 10
  store i64 %2428, i64* %PC.i1649
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1650, align 8
  store %struct.Memory* %loadMem_48022f, %struct.Memory** %MEMORY
  %loadMem_480239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2430 = getelementptr inbounds %struct.GPR, %struct.GPR* %2429, i32 0, i32 33
  %2431 = getelementptr inbounds %struct.Reg, %struct.Reg* %2430, i32 0, i32 0
  %PC.i1646 = bitcast %union.anon* %2431 to i64*
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2433 = getelementptr inbounds %struct.GPR, %struct.GPR* %2432, i32 0, i32 5
  %2434 = getelementptr inbounds %struct.Reg, %struct.Reg* %2433, i32 0, i32 0
  %RCX.i1647 = bitcast %union.anon* %2434 to i64*
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2436 = getelementptr inbounds %struct.GPR, %struct.GPR* %2435, i32 0, i32 15
  %2437 = getelementptr inbounds %struct.Reg, %struct.Reg* %2436, i32 0, i32 0
  %RBP.i1648 = bitcast %union.anon* %2437 to i64*
  %2438 = load i64, i64* %RBP.i1648
  %2439 = sub i64 %2438, 8
  %2440 = load i64, i64* %PC.i1646
  %2441 = add i64 %2440, 4
  store i64 %2441, i64* %PC.i1646
  %2442 = inttoptr i64 %2439 to i32*
  %2443 = load i32, i32* %2442
  %2444 = sext i32 %2443 to i64
  store i64 %2444, i64* %RCX.i1647, align 8
  store %struct.Memory* %loadMem_480239, %struct.Memory** %MEMORY
  %loadMem_48023d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2446 = getelementptr inbounds %struct.GPR, %struct.GPR* %2445, i32 0, i32 33
  %2447 = getelementptr inbounds %struct.Reg, %struct.Reg* %2446, i32 0, i32 0
  %PC.i1644 = bitcast %union.anon* %2447 to i64*
  %2448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2449 = getelementptr inbounds %struct.GPR, %struct.GPR* %2448, i32 0, i32 5
  %2450 = getelementptr inbounds %struct.Reg, %struct.Reg* %2449, i32 0, i32 0
  %RCX.i1645 = bitcast %union.anon* %2450 to i64*
  %2451 = load i64, i64* %RCX.i1645
  %2452 = load i64, i64* %PC.i1644
  %2453 = add i64 %2452, 7
  store i64 %2453, i64* %PC.i1644
  %2454 = sext i64 %2451 to i128
  %2455 = and i128 %2454, -18446744073709551616
  %2456 = zext i64 %2451 to i128
  %2457 = or i128 %2455, %2456
  %2458 = mul i128 564, %2457
  %2459 = trunc i128 %2458 to i64
  store i64 %2459, i64* %RCX.i1645, align 8
  %2460 = sext i64 %2459 to i128
  %2461 = icmp ne i128 %2460, %2458
  %2462 = zext i1 %2461 to i8
  %2463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2462, i8* %2463, align 1
  %2464 = trunc i128 %2458 to i32
  %2465 = and i32 %2464, 255
  %2466 = call i32 @llvm.ctpop.i32(i32 %2465)
  %2467 = trunc i32 %2466 to i8
  %2468 = and i8 %2467, 1
  %2469 = xor i8 %2468, 1
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2469, i8* %2470, align 1
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2471, align 1
  %2472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2472, align 1
  %2473 = lshr i64 %2459, 63
  %2474 = trunc i64 %2473 to i8
  %2475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2474, i8* %2475, align 1
  %2476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2462, i8* %2476, align 1
  store %struct.Memory* %loadMem_48023d, %struct.Memory** %MEMORY
  %loadMem_480244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 33
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %PC.i1641 = bitcast %union.anon* %2479 to i64*
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2481 = getelementptr inbounds %struct.GPR, %struct.GPR* %2480, i32 0, i32 1
  %2482 = getelementptr inbounds %struct.Reg, %struct.Reg* %2481, i32 0, i32 0
  %RAX.i1642 = bitcast %union.anon* %2482 to i64*
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2484 = getelementptr inbounds %struct.GPR, %struct.GPR* %2483, i32 0, i32 7
  %2485 = getelementptr inbounds %struct.Reg, %struct.Reg* %2484, i32 0, i32 0
  %RDX.i1643 = bitcast %union.anon* %2485 to i64*
  %2486 = load i64, i64* %RAX.i1642
  %2487 = load i64, i64* %PC.i1641
  %2488 = add i64 %2487, 3
  store i64 %2488, i64* %PC.i1641
  store i64 %2486, i64* %RDX.i1643, align 8
  store %struct.Memory* %loadMem_480244, %struct.Memory** %MEMORY
  %loadMem_480247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2490 = getelementptr inbounds %struct.GPR, %struct.GPR* %2489, i32 0, i32 33
  %2491 = getelementptr inbounds %struct.Reg, %struct.Reg* %2490, i32 0, i32 0
  %PC.i1638 = bitcast %union.anon* %2491 to i64*
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2493 = getelementptr inbounds %struct.GPR, %struct.GPR* %2492, i32 0, i32 5
  %2494 = getelementptr inbounds %struct.Reg, %struct.Reg* %2493, i32 0, i32 0
  %RCX.i1639 = bitcast %union.anon* %2494 to i64*
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2496 = getelementptr inbounds %struct.GPR, %struct.GPR* %2495, i32 0, i32 7
  %2497 = getelementptr inbounds %struct.Reg, %struct.Reg* %2496, i32 0, i32 0
  %RDX.i1640 = bitcast %union.anon* %2497 to i64*
  %2498 = load i64, i64* %RDX.i1640
  %2499 = load i64, i64* %RCX.i1639
  %2500 = load i64, i64* %PC.i1638
  %2501 = add i64 %2500, 3
  store i64 %2501, i64* %PC.i1638
  %2502 = add i64 %2499, %2498
  store i64 %2502, i64* %RDX.i1640, align 8
  %2503 = icmp ult i64 %2502, %2498
  %2504 = icmp ult i64 %2502, %2499
  %2505 = or i1 %2503, %2504
  %2506 = zext i1 %2505 to i8
  %2507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2506, i8* %2507, align 1
  %2508 = trunc i64 %2502 to i32
  %2509 = and i32 %2508, 255
  %2510 = call i32 @llvm.ctpop.i32(i32 %2509)
  %2511 = trunc i32 %2510 to i8
  %2512 = and i8 %2511, 1
  %2513 = xor i8 %2512, 1
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2513, i8* %2514, align 1
  %2515 = xor i64 %2499, %2498
  %2516 = xor i64 %2515, %2502
  %2517 = lshr i64 %2516, 4
  %2518 = trunc i64 %2517 to i8
  %2519 = and i8 %2518, 1
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2519, i8* %2520, align 1
  %2521 = icmp eq i64 %2502, 0
  %2522 = zext i1 %2521 to i8
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2522, i8* %2523, align 1
  %2524 = lshr i64 %2502, 63
  %2525 = trunc i64 %2524 to i8
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2525, i8* %2526, align 1
  %2527 = lshr i64 %2498, 63
  %2528 = lshr i64 %2499, 63
  %2529 = xor i64 %2524, %2527
  %2530 = xor i64 %2524, %2528
  %2531 = add i64 %2529, %2530
  %2532 = icmp eq i64 %2531, 2
  %2533 = zext i1 %2532 to i8
  %2534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2533, i8* %2534, align 1
  store %struct.Memory* %loadMem_480247, %struct.Memory** %MEMORY
  %loadMem_48024a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2536 = getelementptr inbounds %struct.GPR, %struct.GPR* %2535, i32 0, i32 33
  %2537 = getelementptr inbounds %struct.Reg, %struct.Reg* %2536, i32 0, i32 0
  %PC.i1635 = bitcast %union.anon* %2537 to i64*
  %2538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2539 = getelementptr inbounds %struct.GPR, %struct.GPR* %2538, i32 0, i32 7
  %2540 = getelementptr inbounds %struct.Reg, %struct.Reg* %2539, i32 0, i32 0
  %RDX.i1636 = bitcast %union.anon* %2540 to i64*
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2542 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2541, i64 0, i64 0
  %YMM0.i1637 = bitcast %union.VectorReg* %2542 to %"class.std::bitset"*
  %2543 = bitcast %"class.std::bitset"* %YMM0.i1637 to i8*
  %2544 = load i64, i64* %RDX.i1636
  %2545 = add i64 %2544, 36
  %2546 = load i64, i64* %PC.i1635
  %2547 = add i64 %2546, 5
  store i64 %2547, i64* %PC.i1635
  %2548 = inttoptr i64 %2545 to float*
  %2549 = load float, float* %2548
  %2550 = bitcast i8* %2543 to float*
  store float %2549, float* %2550, align 1
  %2551 = getelementptr inbounds i8, i8* %2543, i64 4
  %2552 = bitcast i8* %2551 to float*
  store float 0.000000e+00, float* %2552, align 1
  %2553 = getelementptr inbounds i8, i8* %2543, i64 8
  %2554 = bitcast i8* %2553 to float*
  store float 0.000000e+00, float* %2554, align 1
  %2555 = getelementptr inbounds i8, i8* %2543, i64 12
  %2556 = bitcast i8* %2555 to float*
  store float 0.000000e+00, float* %2556, align 1
  store %struct.Memory* %loadMem_48024a, %struct.Memory** %MEMORY
  %loadMem_48024f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2558 = getelementptr inbounds %struct.GPR, %struct.GPR* %2557, i32 0, i32 33
  %2559 = getelementptr inbounds %struct.Reg, %struct.Reg* %2558, i32 0, i32 0
  %PC.i1632 = bitcast %union.anon* %2559 to i64*
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 5
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %RCX.i1633 = bitcast %union.anon* %2562 to i64*
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2564 = getelementptr inbounds %struct.GPR, %struct.GPR* %2563, i32 0, i32 15
  %2565 = getelementptr inbounds %struct.Reg, %struct.Reg* %2564, i32 0, i32 0
  %RBP.i1634 = bitcast %union.anon* %2565 to i64*
  %2566 = load i64, i64* %RBP.i1634
  %2567 = sub i64 %2566, 8
  %2568 = load i64, i64* %PC.i1632
  %2569 = add i64 %2568, 4
  store i64 %2569, i64* %PC.i1632
  %2570 = inttoptr i64 %2567 to i32*
  %2571 = load i32, i32* %2570
  %2572 = sext i32 %2571 to i64
  store i64 %2572, i64* %RCX.i1633, align 8
  store %struct.Memory* %loadMem_48024f, %struct.Memory** %MEMORY
  %loadMem_480253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2574 = getelementptr inbounds %struct.GPR, %struct.GPR* %2573, i32 0, i32 33
  %2575 = getelementptr inbounds %struct.Reg, %struct.Reg* %2574, i32 0, i32 0
  %PC.i1630 = bitcast %union.anon* %2575 to i64*
  %2576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2577 = getelementptr inbounds %struct.GPR, %struct.GPR* %2576, i32 0, i32 5
  %2578 = getelementptr inbounds %struct.Reg, %struct.Reg* %2577, i32 0, i32 0
  %RCX.i1631 = bitcast %union.anon* %2578 to i64*
  %2579 = load i64, i64* %RCX.i1631
  %2580 = load i64, i64* %PC.i1630
  %2581 = add i64 %2580, 7
  store i64 %2581, i64* %PC.i1630
  %2582 = sext i64 %2579 to i128
  %2583 = and i128 %2582, -18446744073709551616
  %2584 = zext i64 %2579 to i128
  %2585 = or i128 %2583, %2584
  %2586 = mul i128 564, %2585
  %2587 = trunc i128 %2586 to i64
  store i64 %2587, i64* %RCX.i1631, align 8
  %2588 = sext i64 %2587 to i128
  %2589 = icmp ne i128 %2588, %2586
  %2590 = zext i1 %2589 to i8
  %2591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2590, i8* %2591, align 1
  %2592 = trunc i128 %2586 to i32
  %2593 = and i32 %2592, 255
  %2594 = call i32 @llvm.ctpop.i32(i32 %2593)
  %2595 = trunc i32 %2594 to i8
  %2596 = and i8 %2595, 1
  %2597 = xor i8 %2596, 1
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2597, i8* %2598, align 1
  %2599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2599, align 1
  %2600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2600, align 1
  %2601 = lshr i64 %2587, 63
  %2602 = trunc i64 %2601 to i8
  %2603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2602, i8* %2603, align 1
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2590, i8* %2604, align 1
  store %struct.Memory* %loadMem_480253, %struct.Memory** %MEMORY
  %loadMem_48025a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2606 = getelementptr inbounds %struct.GPR, %struct.GPR* %2605, i32 0, i32 33
  %2607 = getelementptr inbounds %struct.Reg, %struct.Reg* %2606, i32 0, i32 0
  %PC.i1627 = bitcast %union.anon* %2607 to i64*
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2609 = getelementptr inbounds %struct.GPR, %struct.GPR* %2608, i32 0, i32 1
  %2610 = getelementptr inbounds %struct.Reg, %struct.Reg* %2609, i32 0, i32 0
  %RAX.i1628 = bitcast %union.anon* %2610 to i64*
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2612 = getelementptr inbounds %struct.GPR, %struct.GPR* %2611, i32 0, i32 5
  %2613 = getelementptr inbounds %struct.Reg, %struct.Reg* %2612, i32 0, i32 0
  %RCX.i1629 = bitcast %union.anon* %2613 to i64*
  %2614 = load i64, i64* %RAX.i1628
  %2615 = load i64, i64* %RCX.i1629
  %2616 = load i64, i64* %PC.i1627
  %2617 = add i64 %2616, 3
  store i64 %2617, i64* %PC.i1627
  %2618 = add i64 %2615, %2614
  store i64 %2618, i64* %RAX.i1628, align 8
  %2619 = icmp ult i64 %2618, %2614
  %2620 = icmp ult i64 %2618, %2615
  %2621 = or i1 %2619, %2620
  %2622 = zext i1 %2621 to i8
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2622, i8* %2623, align 1
  %2624 = trunc i64 %2618 to i32
  %2625 = and i32 %2624, 255
  %2626 = call i32 @llvm.ctpop.i32(i32 %2625)
  %2627 = trunc i32 %2626 to i8
  %2628 = and i8 %2627, 1
  %2629 = xor i8 %2628, 1
  %2630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2629, i8* %2630, align 1
  %2631 = xor i64 %2615, %2614
  %2632 = xor i64 %2631, %2618
  %2633 = lshr i64 %2632, 4
  %2634 = trunc i64 %2633 to i8
  %2635 = and i8 %2634, 1
  %2636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2635, i8* %2636, align 1
  %2637 = icmp eq i64 %2618, 0
  %2638 = zext i1 %2637 to i8
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2638, i8* %2639, align 1
  %2640 = lshr i64 %2618, 63
  %2641 = trunc i64 %2640 to i8
  %2642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2641, i8* %2642, align 1
  %2643 = lshr i64 %2614, 63
  %2644 = lshr i64 %2615, 63
  %2645 = xor i64 %2640, %2643
  %2646 = xor i64 %2640, %2644
  %2647 = add i64 %2645, %2646
  %2648 = icmp eq i64 %2647, 2
  %2649 = zext i1 %2648 to i8
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2649, i8* %2650, align 1
  store %struct.Memory* %loadMem_48025a, %struct.Memory** %MEMORY
  %loadMem_48025d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2652 = getelementptr inbounds %struct.GPR, %struct.GPR* %2651, i32 0, i32 33
  %2653 = getelementptr inbounds %struct.Reg, %struct.Reg* %2652, i32 0, i32 0
  %PC.i1624 = bitcast %union.anon* %2653 to i64*
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2655 = getelementptr inbounds %struct.GPR, %struct.GPR* %2654, i32 0, i32 1
  %2656 = getelementptr inbounds %struct.Reg, %struct.Reg* %2655, i32 0, i32 0
  %RAX.i1625 = bitcast %union.anon* %2656 to i64*
  %2657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2658 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2657, i64 0, i64 0
  %YMM0.i1626 = bitcast %union.VectorReg* %2658 to %"class.std::bitset"*
  %2659 = bitcast %"class.std::bitset"* %YMM0.i1626 to i8*
  %2660 = bitcast %"class.std::bitset"* %YMM0.i1626 to i8*
  %2661 = load i64, i64* %RAX.i1625
  %2662 = add i64 %2661, 40
  %2663 = load i64, i64* %PC.i1624
  %2664 = add i64 %2663, 5
  store i64 %2664, i64* %PC.i1624
  %2665 = bitcast i8* %2660 to <2 x float>*
  %2666 = load <2 x float>, <2 x float>* %2665, align 1
  %2667 = getelementptr inbounds i8, i8* %2660, i64 8
  %2668 = bitcast i8* %2667 to <2 x i32>*
  %2669 = load <2 x i32>, <2 x i32>* %2668, align 1
  %2670 = inttoptr i64 %2662 to float*
  %2671 = load float, float* %2670
  %2672 = extractelement <2 x float> %2666, i32 0
  %2673 = fadd float %2672, %2671
  %2674 = bitcast i8* %2659 to float*
  store float %2673, float* %2674, align 1
  %2675 = bitcast <2 x float> %2666 to <2 x i32>
  %2676 = extractelement <2 x i32> %2675, i32 1
  %2677 = getelementptr inbounds i8, i8* %2659, i64 4
  %2678 = bitcast i8* %2677 to i32*
  store i32 %2676, i32* %2678, align 1
  %2679 = extractelement <2 x i32> %2669, i32 0
  %2680 = getelementptr inbounds i8, i8* %2659, i64 8
  %2681 = bitcast i8* %2680 to i32*
  store i32 %2679, i32* %2681, align 1
  %2682 = extractelement <2 x i32> %2669, i32 1
  %2683 = getelementptr inbounds i8, i8* %2659, i64 12
  %2684 = bitcast i8* %2683 to i32*
  store i32 %2682, i32* %2684, align 1
  store %struct.Memory* %loadMem_48025d, %struct.Memory** %MEMORY
  %loadMem_480262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2686 = getelementptr inbounds %struct.GPR, %struct.GPR* %2685, i32 0, i32 33
  %2687 = getelementptr inbounds %struct.Reg, %struct.Reg* %2686, i32 0, i32 0
  %PC.i1621 = bitcast %union.anon* %2687 to i64*
  %2688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2689 = getelementptr inbounds %struct.GPR, %struct.GPR* %2688, i32 0, i32 15
  %2690 = getelementptr inbounds %struct.Reg, %struct.Reg* %2689, i32 0, i32 0
  %RBP.i1622 = bitcast %union.anon* %2690 to i64*
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2692 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2691, i64 0, i64 0
  %XMM0.i1623 = bitcast %union.VectorReg* %2692 to %union.vec128_t*
  %2693 = load i64, i64* %RBP.i1622
  %2694 = sub i64 %2693, 40
  %2695 = bitcast %union.vec128_t* %XMM0.i1623 to i8*
  %2696 = load i64, i64* %PC.i1621
  %2697 = add i64 %2696, 5
  store i64 %2697, i64* %PC.i1621
  %2698 = bitcast i8* %2695 to <2 x float>*
  %2699 = load <2 x float>, <2 x float>* %2698, align 1
  %2700 = extractelement <2 x float> %2699, i32 0
  %2701 = inttoptr i64 %2694 to float*
  store float %2700, float* %2701
  store %struct.Memory* %loadMem_480262, %struct.Memory** %MEMORY
  %loadMem_480267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2703 = getelementptr inbounds %struct.GPR, %struct.GPR* %2702, i32 0, i32 33
  %2704 = getelementptr inbounds %struct.Reg, %struct.Reg* %2703, i32 0, i32 0
  %PC.i1620 = bitcast %union.anon* %2704 to i64*
  %2705 = load i64, i64* %PC.i1620
  %2706 = add i64 %2705, 8
  store i64 %2706, i64* %PC.i1620
  %2707 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %2708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2708, align 1
  %2709 = and i32 %2707, 255
  %2710 = call i32 @llvm.ctpop.i32(i32 %2709)
  %2711 = trunc i32 %2710 to i8
  %2712 = and i8 %2711, 1
  %2713 = xor i8 %2712, 1
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2713, i8* %2714, align 1
  %2715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2715, align 1
  %2716 = icmp eq i32 %2707, 0
  %2717 = zext i1 %2716 to i8
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2717, i8* %2718, align 1
  %2719 = lshr i32 %2707, 31
  %2720 = trunc i32 %2719 to i8
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2720, i8* %2721, align 1
  %2722 = lshr i32 %2707, 31
  %2723 = xor i32 %2719, %2722
  %2724 = add i32 %2723, %2722
  %2725 = icmp eq i32 %2724, 2
  %2726 = zext i1 %2725 to i8
  %2727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2726, i8* %2727, align 1
  store %struct.Memory* %loadMem_480267, %struct.Memory** %MEMORY
  %loadMem_48026f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2729 = getelementptr inbounds %struct.GPR, %struct.GPR* %2728, i32 0, i32 33
  %2730 = getelementptr inbounds %struct.Reg, %struct.Reg* %2729, i32 0, i32 0
  %PC.i1619 = bitcast %union.anon* %2730 to i64*
  %2731 = load i64, i64* %PC.i1619
  %2732 = add i64 %2731, 11
  %2733 = load i64, i64* %PC.i1619
  %2734 = add i64 %2733, 6
  %2735 = load i64, i64* %PC.i1619
  %2736 = add i64 %2735, 6
  store i64 %2736, i64* %PC.i1619
  %2737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2738 = load i8, i8* %2737, align 1
  %2739 = icmp eq i8 %2738, 0
  %2740 = zext i1 %2739 to i8
  store i8 %2740, i8* %BRANCH_TAKEN, align 1
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2742 = select i1 %2739, i64 %2732, i64 %2734
  store i64 %2742, i64* %2741, align 8
  store %struct.Memory* %loadMem_48026f, %struct.Memory** %MEMORY
  %loadBr_48026f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48026f = icmp eq i8 %loadBr_48026f, 1
  br i1 %cmpBr_48026f, label %block_.L_48027a, label %block_480275

block_480275:                                     ; preds = %block_48022f
  %loadMem_480275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2744 = getelementptr inbounds %struct.GPR, %struct.GPR* %2743, i32 0, i32 33
  %2745 = getelementptr inbounds %struct.Reg, %struct.Reg* %2744, i32 0, i32 0
  %PC.i1618 = bitcast %union.anon* %2745 to i64*
  %2746 = load i64, i64* %PC.i1618
  %2747 = add i64 %2746, 62
  %2748 = load i64, i64* %PC.i1618
  %2749 = add i64 %2748, 5
  store i64 %2749, i64* %PC.i1618
  %2750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2747, i64* %2750, align 8
  store %struct.Memory* %loadMem_480275, %struct.Memory** %MEMORY
  br label %block_.L_4802b3

block_.L_48027a:                                  ; preds = %block_48022f
  %loadMem_48027a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2752 = getelementptr inbounds %struct.GPR, %struct.GPR* %2751, i32 0, i32 33
  %2753 = getelementptr inbounds %struct.Reg, %struct.Reg* %2752, i32 0, i32 0
  %PC.i1616 = bitcast %union.anon* %2753 to i64*
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2755 = getelementptr inbounds %struct.GPR, %struct.GPR* %2754, i32 0, i32 11
  %2756 = getelementptr inbounds %struct.Reg, %struct.Reg* %2755, i32 0, i32 0
  %RDI.i1617 = bitcast %union.anon* %2756 to i64*
  %2757 = load i64, i64* %PC.i1616
  %2758 = add i64 %2757, 10
  store i64 %2758, i64* %PC.i1616
  store i64 ptrtoint (%G__0x582044_type* @G__0x582044 to i64), i64* %RDI.i1617, align 8
  store %struct.Memory* %loadMem_48027a, %struct.Memory** %MEMORY
  %loadMem_480284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2760 = getelementptr inbounds %struct.GPR, %struct.GPR* %2759, i32 0, i32 33
  %2761 = getelementptr inbounds %struct.Reg, %struct.Reg* %2760, i32 0, i32 0
  %PC.i1614 = bitcast %union.anon* %2761 to i64*
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2763 = getelementptr inbounds %struct.GPR, %struct.GPR* %2762, i32 0, i32 1
  %2764 = getelementptr inbounds %struct.Reg, %struct.Reg* %2763, i32 0, i32 0
  %RAX.i1615 = bitcast %union.anon* %2764 to i64*
  %2765 = load i64, i64* %PC.i1614
  %2766 = add i64 %2765, 10
  store i64 %2766, i64* %PC.i1614
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1615, align 8
  store %struct.Memory* %loadMem_480284, %struct.Memory** %MEMORY
  %loadMem_48028e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2768 = getelementptr inbounds %struct.GPR, %struct.GPR* %2767, i32 0, i32 33
  %2769 = getelementptr inbounds %struct.Reg, %struct.Reg* %2768, i32 0, i32 0
  %PC.i1611 = bitcast %union.anon* %2769 to i64*
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2771 = getelementptr inbounds %struct.GPR, %struct.GPR* %2770, i32 0, i32 9
  %2772 = getelementptr inbounds %struct.Reg, %struct.Reg* %2771, i32 0, i32 0
  %RSI.i1612 = bitcast %union.anon* %2772 to i64*
  %2773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2774 = getelementptr inbounds %struct.GPR, %struct.GPR* %2773, i32 0, i32 15
  %2775 = getelementptr inbounds %struct.Reg, %struct.Reg* %2774, i32 0, i32 0
  %RBP.i1613 = bitcast %union.anon* %2775 to i64*
  %2776 = load i64, i64* %RBP.i1613
  %2777 = sub i64 %2776, 8
  %2778 = load i64, i64* %PC.i1611
  %2779 = add i64 %2778, 3
  store i64 %2779, i64* %PC.i1611
  %2780 = inttoptr i64 %2777 to i32*
  %2781 = load i32, i32* %2780
  %2782 = zext i32 %2781 to i64
  store i64 %2782, i64* %RSI.i1612, align 8
  store %struct.Memory* %loadMem_48028e, %struct.Memory** %MEMORY
  %loadMem_480291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2784 = getelementptr inbounds %struct.GPR, %struct.GPR* %2783, i32 0, i32 33
  %2785 = getelementptr inbounds %struct.Reg, %struct.Reg* %2784, i32 0, i32 0
  %PC.i1608 = bitcast %union.anon* %2785 to i64*
  %2786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2787 = getelementptr inbounds %struct.GPR, %struct.GPR* %2786, i32 0, i32 15
  %2788 = getelementptr inbounds %struct.Reg, %struct.Reg* %2787, i32 0, i32 0
  %RBP.i1609 = bitcast %union.anon* %2788 to i64*
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2790 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2789, i64 0, i64 0
  %YMM0.i1610 = bitcast %union.VectorReg* %2790 to %"class.std::bitset"*
  %2791 = bitcast %"class.std::bitset"* %YMM0.i1610 to i8*
  %2792 = load i64, i64* %RBP.i1609
  %2793 = sub i64 %2792, 40
  %2794 = load i64, i64* %PC.i1608
  %2795 = add i64 %2794, 5
  store i64 %2795, i64* %PC.i1608
  %2796 = inttoptr i64 %2793 to float*
  %2797 = load float, float* %2796
  %2798 = fpext float %2797 to double
  %2799 = bitcast i8* %2791 to double*
  store double %2798, double* %2799, align 1
  store %struct.Memory* %loadMem_480291, %struct.Memory** %MEMORY
  %loadMem_480296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2801 = getelementptr inbounds %struct.GPR, %struct.GPR* %2800, i32 0, i32 33
  %2802 = getelementptr inbounds %struct.Reg, %struct.Reg* %2801, i32 0, i32 0
  %PC.i1605 = bitcast %union.anon* %2802 to i64*
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2804 = getelementptr inbounds %struct.GPR, %struct.GPR* %2803, i32 0, i32 5
  %2805 = getelementptr inbounds %struct.Reg, %struct.Reg* %2804, i32 0, i32 0
  %RCX.i1606 = bitcast %union.anon* %2805 to i64*
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2807 = getelementptr inbounds %struct.GPR, %struct.GPR* %2806, i32 0, i32 15
  %2808 = getelementptr inbounds %struct.Reg, %struct.Reg* %2807, i32 0, i32 0
  %RBP.i1607 = bitcast %union.anon* %2808 to i64*
  %2809 = load i64, i64* %RBP.i1607
  %2810 = sub i64 %2809, 8
  %2811 = load i64, i64* %PC.i1605
  %2812 = add i64 %2811, 4
  store i64 %2812, i64* %PC.i1605
  %2813 = inttoptr i64 %2810 to i32*
  %2814 = load i32, i32* %2813
  %2815 = sext i32 %2814 to i64
  store i64 %2815, i64* %RCX.i1606, align 8
  store %struct.Memory* %loadMem_480296, %struct.Memory** %MEMORY
  %loadMem_48029a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2817 = getelementptr inbounds %struct.GPR, %struct.GPR* %2816, i32 0, i32 33
  %2818 = getelementptr inbounds %struct.Reg, %struct.Reg* %2817, i32 0, i32 0
  %PC.i1603 = bitcast %union.anon* %2818 to i64*
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2820 = getelementptr inbounds %struct.GPR, %struct.GPR* %2819, i32 0, i32 5
  %2821 = getelementptr inbounds %struct.Reg, %struct.Reg* %2820, i32 0, i32 0
  %RCX.i1604 = bitcast %union.anon* %2821 to i64*
  %2822 = load i64, i64* %RCX.i1604
  %2823 = load i64, i64* %PC.i1603
  %2824 = add i64 %2823, 7
  store i64 %2824, i64* %PC.i1603
  %2825 = sext i64 %2822 to i128
  %2826 = and i128 %2825, -18446744073709551616
  %2827 = zext i64 %2822 to i128
  %2828 = or i128 %2826, %2827
  %2829 = mul i128 564, %2828
  %2830 = trunc i128 %2829 to i64
  store i64 %2830, i64* %RCX.i1604, align 8
  %2831 = sext i64 %2830 to i128
  %2832 = icmp ne i128 %2831, %2829
  %2833 = zext i1 %2832 to i8
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2833, i8* %2834, align 1
  %2835 = trunc i128 %2829 to i32
  %2836 = and i32 %2835, 255
  %2837 = call i32 @llvm.ctpop.i32(i32 %2836)
  %2838 = trunc i32 %2837 to i8
  %2839 = and i8 %2838, 1
  %2840 = xor i8 %2839, 1
  %2841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2840, i8* %2841, align 1
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2842, align 1
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2843, align 1
  %2844 = lshr i64 %2830, 63
  %2845 = trunc i64 %2844 to i8
  %2846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2845, i8* %2846, align 1
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2833, i8* %2847, align 1
  store %struct.Memory* %loadMem_48029a, %struct.Memory** %MEMORY
  %loadMem_4802a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2849 = getelementptr inbounds %struct.GPR, %struct.GPR* %2848, i32 0, i32 33
  %2850 = getelementptr inbounds %struct.Reg, %struct.Reg* %2849, i32 0, i32 0
  %PC.i1600 = bitcast %union.anon* %2850 to i64*
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2852 = getelementptr inbounds %struct.GPR, %struct.GPR* %2851, i32 0, i32 1
  %2853 = getelementptr inbounds %struct.Reg, %struct.Reg* %2852, i32 0, i32 0
  %RAX.i1601 = bitcast %union.anon* %2853 to i64*
  %2854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2855 = getelementptr inbounds %struct.GPR, %struct.GPR* %2854, i32 0, i32 5
  %2856 = getelementptr inbounds %struct.Reg, %struct.Reg* %2855, i32 0, i32 0
  %RCX.i1602 = bitcast %union.anon* %2856 to i64*
  %2857 = load i64, i64* %RAX.i1601
  %2858 = load i64, i64* %RCX.i1602
  %2859 = load i64, i64* %PC.i1600
  %2860 = add i64 %2859, 3
  store i64 %2860, i64* %PC.i1600
  %2861 = add i64 %2858, %2857
  store i64 %2861, i64* %RAX.i1601, align 8
  %2862 = icmp ult i64 %2861, %2857
  %2863 = icmp ult i64 %2861, %2858
  %2864 = or i1 %2862, %2863
  %2865 = zext i1 %2864 to i8
  %2866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2865, i8* %2866, align 1
  %2867 = trunc i64 %2861 to i32
  %2868 = and i32 %2867, 255
  %2869 = call i32 @llvm.ctpop.i32(i32 %2868)
  %2870 = trunc i32 %2869 to i8
  %2871 = and i8 %2870, 1
  %2872 = xor i8 %2871, 1
  %2873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2872, i8* %2873, align 1
  %2874 = xor i64 %2858, %2857
  %2875 = xor i64 %2874, %2861
  %2876 = lshr i64 %2875, 4
  %2877 = trunc i64 %2876 to i8
  %2878 = and i8 %2877, 1
  %2879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2878, i8* %2879, align 1
  %2880 = icmp eq i64 %2861, 0
  %2881 = zext i1 %2880 to i8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2881, i8* %2882, align 1
  %2883 = lshr i64 %2861, 63
  %2884 = trunc i64 %2883 to i8
  %2885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2884, i8* %2885, align 1
  %2886 = lshr i64 %2857, 63
  %2887 = lshr i64 %2858, 63
  %2888 = xor i64 %2883, %2886
  %2889 = xor i64 %2883, %2887
  %2890 = add i64 %2888, %2889
  %2891 = icmp eq i64 %2890, 2
  %2892 = zext i1 %2891 to i8
  %2893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2892, i8* %2893, align 1
  store %struct.Memory* %loadMem_4802a1, %struct.Memory** %MEMORY
  %loadMem_4802a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2895 = getelementptr inbounds %struct.GPR, %struct.GPR* %2894, i32 0, i32 33
  %2896 = getelementptr inbounds %struct.Reg, %struct.Reg* %2895, i32 0, i32 0
  %PC.i1597 = bitcast %union.anon* %2896 to i64*
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2898 = getelementptr inbounds %struct.GPR, %struct.GPR* %2897, i32 0, i32 1
  %2899 = getelementptr inbounds %struct.Reg, %struct.Reg* %2898, i32 0, i32 0
  %RAX.i1598 = bitcast %union.anon* %2899 to i64*
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2901 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2900, i64 0, i64 1
  %YMM1.i1599 = bitcast %union.VectorReg* %2901 to %"class.std::bitset"*
  %2902 = bitcast %"class.std::bitset"* %YMM1.i1599 to i8*
  %2903 = load i64, i64* %RAX.i1598
  %2904 = add i64 %2903, 40
  %2905 = load i64, i64* %PC.i1597
  %2906 = add i64 %2905, 5
  store i64 %2906, i64* %PC.i1597
  %2907 = inttoptr i64 %2904 to float*
  %2908 = load float, float* %2907
  %2909 = fpext float %2908 to double
  %2910 = bitcast i8* %2902 to double*
  store double %2909, double* %2910, align 1
  store %struct.Memory* %loadMem_4802a4, %struct.Memory** %MEMORY
  %loadMem_4802a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2912 = getelementptr inbounds %struct.GPR, %struct.GPR* %2911, i32 0, i32 33
  %2913 = getelementptr inbounds %struct.Reg, %struct.Reg* %2912, i32 0, i32 0
  %PC.i1595 = bitcast %union.anon* %2913 to i64*
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 1
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %2917 = bitcast %union.anon* %2916 to %struct.anon.2*
  %AL.i1596 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2917, i32 0, i32 0
  %2918 = load i64, i64* %PC.i1595
  %2919 = add i64 %2918, 2
  store i64 %2919, i64* %PC.i1595
  store i8 2, i8* %AL.i1596, align 1
  store %struct.Memory* %loadMem_4802a9, %struct.Memory** %MEMORY
  %loadMem1_4802ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2921 = getelementptr inbounds %struct.GPR, %struct.GPR* %2920, i32 0, i32 33
  %2922 = getelementptr inbounds %struct.Reg, %struct.Reg* %2921, i32 0, i32 0
  %PC.i1594 = bitcast %union.anon* %2922 to i64*
  %2923 = load i64, i64* %PC.i1594
  %2924 = add i64 %2923, -189691
  %2925 = load i64, i64* %PC.i1594
  %2926 = add i64 %2925, 5
  %2927 = load i64, i64* %PC.i1594
  %2928 = add i64 %2927, 5
  store i64 %2928, i64* %PC.i1594
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2930 = load i64, i64* %2929, align 8
  %2931 = add i64 %2930, -8
  %2932 = inttoptr i64 %2931 to i64*
  store i64 %2926, i64* %2932
  store i64 %2931, i64* %2929, align 8
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2924, i64* %2933, align 8
  store %struct.Memory* %loadMem1_4802ab, %struct.Memory** %MEMORY
  %loadMem2_4802ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4802ab = load i64, i64* %3
  %call2_4802ab = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_4802ab, %struct.Memory* %loadMem2_4802ab)
  store %struct.Memory* %call2_4802ab, %struct.Memory** %MEMORY
  %loadMem_4802b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2935 = getelementptr inbounds %struct.GPR, %struct.GPR* %2934, i32 0, i32 33
  %2936 = getelementptr inbounds %struct.Reg, %struct.Reg* %2935, i32 0, i32 0
  %PC.i1591 = bitcast %union.anon* %2936 to i64*
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2938 = getelementptr inbounds %struct.GPR, %struct.GPR* %2937, i32 0, i32 1
  %2939 = getelementptr inbounds %struct.Reg, %struct.Reg* %2938, i32 0, i32 0
  %EAX.i1592 = bitcast %union.anon* %2939 to i32*
  %2940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2941 = getelementptr inbounds %struct.GPR, %struct.GPR* %2940, i32 0, i32 15
  %2942 = getelementptr inbounds %struct.Reg, %struct.Reg* %2941, i32 0, i32 0
  %RBP.i1593 = bitcast %union.anon* %2942 to i64*
  %2943 = load i64, i64* %RBP.i1593
  %2944 = sub i64 %2943, 84
  %2945 = load i32, i32* %EAX.i1592
  %2946 = zext i32 %2945 to i64
  %2947 = load i64, i64* %PC.i1591
  %2948 = add i64 %2947, 3
  store i64 %2948, i64* %PC.i1591
  %2949 = inttoptr i64 %2944 to i32*
  store i32 %2945, i32* %2949
  store %struct.Memory* %loadMem_4802b0, %struct.Memory** %MEMORY
  br label %block_.L_4802b3

block_.L_4802b3:                                  ; preds = %block_.L_48027a, %block_480275
  %loadMem_4802b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2951 = getelementptr inbounds %struct.GPR, %struct.GPR* %2950, i32 0, i32 33
  %2952 = getelementptr inbounds %struct.Reg, %struct.Reg* %2951, i32 0, i32 0
  %PC.i1589 = bitcast %union.anon* %2952 to i64*
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2954 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2953, i64 0, i64 0
  %YMM0.i1590 = bitcast %union.VectorReg* %2954 to %"class.std::bitset"*
  %2955 = bitcast %"class.std::bitset"* %YMM0.i1590 to i8*
  %2956 = load i64, i64* %PC.i1589
  %2957 = add i64 %2956, ptrtoint (%G_0x62ccd__rip__type* @G_0x62ccd__rip_ to i64)
  %2958 = load i64, i64* %PC.i1589
  %2959 = add i64 %2958, 8
  store i64 %2959, i64* %PC.i1589
  %2960 = inttoptr i64 %2957 to double*
  %2961 = load double, double* %2960
  %2962 = bitcast i8* %2955 to double*
  store double %2961, double* %2962, align 1
  %2963 = getelementptr inbounds i8, i8* %2955, i64 8
  %2964 = bitcast i8* %2963 to double*
  store double 0.000000e+00, double* %2964, align 1
  store %struct.Memory* %loadMem_4802b3, %struct.Memory** %MEMORY
  %loadMem_4802bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 33
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %PC.i1586 = bitcast %union.anon* %2967 to i64*
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2969 = getelementptr inbounds %struct.GPR, %struct.GPR* %2968, i32 0, i32 15
  %2970 = getelementptr inbounds %struct.Reg, %struct.Reg* %2969, i32 0, i32 0
  %RBP.i1587 = bitcast %union.anon* %2970 to i64*
  %2971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2972 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2971, i64 0, i64 1
  %YMM1.i1588 = bitcast %union.VectorReg* %2972 to %"class.std::bitset"*
  %2973 = bitcast %"class.std::bitset"* %YMM1.i1588 to i8*
  %2974 = load i64, i64* %RBP.i1587
  %2975 = sub i64 %2974, 24
  %2976 = load i64, i64* %PC.i1586
  %2977 = add i64 %2976, 5
  store i64 %2977, i64* %PC.i1586
  %2978 = inttoptr i64 %2975 to float*
  %2979 = load float, float* %2978
  %2980 = fpext float %2979 to double
  %2981 = bitcast i8* %2973 to double*
  store double %2980, double* %2981, align 1
  store %struct.Memory* %loadMem_4802bb, %struct.Memory** %MEMORY
  %loadMem_4802c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2983 = getelementptr inbounds %struct.GPR, %struct.GPR* %2982, i32 0, i32 33
  %2984 = getelementptr inbounds %struct.Reg, %struct.Reg* %2983, i32 0, i32 0
  %PC.i1580 = bitcast %union.anon* %2984 to i64*
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2986 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2985, i64 0, i64 0
  %XMM0.i1581 = bitcast %union.VectorReg* %2986 to %union.vec128_t*
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2988 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2987, i64 0, i64 1
  %XMM1.i1582 = bitcast %union.VectorReg* %2988 to %union.vec128_t*
  %2989 = bitcast %union.vec128_t* %XMM1.i1582 to i8*
  %2990 = bitcast %union.vec128_t* %XMM0.i1581 to i8*
  %2991 = load i64, i64* %PC.i1580
  %2992 = add i64 %2991, 4
  store i64 %2992, i64* %PC.i1580
  %2993 = bitcast i8* %2989 to double*
  %2994 = load double, double* %2993, align 1
  %2995 = bitcast i8* %2990 to double*
  %2996 = load double, double* %2995, align 1
  %2997 = fcmp uno double %2994, %2996
  br i1 %2997, label %2998, label %3010

; <label>:2998:                                   ; preds = %block_.L_4802b3
  %2999 = fadd double %2994, %2996
  %3000 = bitcast double %2999 to i64
  %3001 = and i64 %3000, 9221120237041090560
  %3002 = icmp eq i64 %3001, 9218868437227405312
  %3003 = and i64 %3000, 2251799813685247
  %3004 = icmp ne i64 %3003, 0
  %3005 = and i1 %3002, %3004
  br i1 %3005, label %3006, label %3016

; <label>:3006:                                   ; preds = %2998
  %3007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3008 = load i64, i64* %3007, align 8
  %3009 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3008, %struct.Memory* %loadMem_4802c0)
  br label %routine_ucomisd__xmm0___xmm1.exit1583

; <label>:3010:                                   ; preds = %block_.L_4802b3
  %3011 = fcmp ogt double %2994, %2996
  br i1 %3011, label %3016, label %3012

; <label>:3012:                                   ; preds = %3010
  %3013 = fcmp olt double %2994, %2996
  br i1 %3013, label %3016, label %3014

; <label>:3014:                                   ; preds = %3012
  %3015 = fcmp oeq double %2994, %2996
  br i1 %3015, label %3016, label %3023

; <label>:3016:                                   ; preds = %3014, %3012, %3010, %2998
  %3017 = phi i8 [ 0, %3010 ], [ 0, %3012 ], [ 1, %3014 ], [ 1, %2998 ]
  %3018 = phi i8 [ 0, %3010 ], [ 0, %3012 ], [ 0, %3014 ], [ 1, %2998 ]
  %3019 = phi i8 [ 0, %3010 ], [ 1, %3012 ], [ 0, %3014 ], [ 1, %2998 ]
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3017, i8* %3020, align 1
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3018, i8* %3021, align 1
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3019, i8* %3022, align 1
  br label %3023

; <label>:3023:                                   ; preds = %3016, %3014
  %3024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3024, align 1
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3025, align 1
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3026, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit1583

routine_ucomisd__xmm0___xmm1.exit1583:            ; preds = %3006, %3023
  %3027 = phi %struct.Memory* [ %3009, %3006 ], [ %loadMem_4802c0, %3023 ]
  store %struct.Memory* %3027, %struct.Memory** %MEMORY
  %loadMem_4802c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3029 = getelementptr inbounds %struct.GPR, %struct.GPR* %3028, i32 0, i32 33
  %3030 = getelementptr inbounds %struct.Reg, %struct.Reg* %3029, i32 0, i32 0
  %PC.i1579 = bitcast %union.anon* %3030 to i64*
  %3031 = load i64, i64* %PC.i1579
  %3032 = add i64 %3031, 53
  %3033 = load i64, i64* %PC.i1579
  %3034 = add i64 %3033, 6
  %3035 = load i64, i64* %PC.i1579
  %3036 = add i64 %3035, 6
  store i64 %3036, i64* %PC.i1579
  %3037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3038 = load i8, i8* %3037, align 1
  %3039 = icmp eq i8 %3038, 0
  %3040 = zext i1 %3039 to i8
  store i8 %3040, i8* %BRANCH_TAKEN, align 1
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3042 = select i1 %3039, i64 %3032, i64 %3034
  store i64 %3042, i64* %3041, align 8
  store %struct.Memory* %loadMem_4802c4, %struct.Memory** %MEMORY
  %loadBr_4802c4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4802c4 = icmp eq i8 %loadBr_4802c4, 1
  br i1 %cmpBr_4802c4, label %block_.L_4802f9, label %block_4802ca

block_4802ca:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit1583
  %loadMem_4802ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %3043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3044 = getelementptr inbounds %struct.GPR, %struct.GPR* %3043, i32 0, i32 33
  %3045 = getelementptr inbounds %struct.Reg, %struct.Reg* %3044, i32 0, i32 0
  %PC.i1577 = bitcast %union.anon* %3045 to i64*
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3047 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3046, i64 0, i64 0
  %YMM0.i1578 = bitcast %union.VectorReg* %3047 to %"class.std::bitset"*
  %3048 = bitcast %"class.std::bitset"* %YMM0.i1578 to i8*
  %3049 = load i64, i64* %PC.i1577
  %3050 = add i64 %3049, ptrtoint (%G_0x62c8e__rip__type* @G_0x62c8e__rip_ to i64)
  %3051 = load i64, i64* %PC.i1577
  %3052 = add i64 %3051, 8
  store i64 %3052, i64* %PC.i1577
  %3053 = inttoptr i64 %3050 to double*
  %3054 = load double, double* %3053
  %3055 = bitcast i8* %3048 to double*
  store double %3054, double* %3055, align 1
  %3056 = getelementptr inbounds i8, i8* %3048, i64 8
  %3057 = bitcast i8* %3056 to double*
  store double 0.000000e+00, double* %3057, align 1
  store %struct.Memory* %loadMem_4802ca, %struct.Memory** %MEMORY
  %loadMem_4802d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3059 = getelementptr inbounds %struct.GPR, %struct.GPR* %3058, i32 0, i32 33
  %3060 = getelementptr inbounds %struct.Reg, %struct.Reg* %3059, i32 0, i32 0
  %PC.i1575 = bitcast %union.anon* %3060 to i64*
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3062 = getelementptr inbounds %struct.GPR, %struct.GPR* %3061, i32 0, i32 1
  %3063 = getelementptr inbounds %struct.Reg, %struct.Reg* %3062, i32 0, i32 0
  %RAX.i1576 = bitcast %union.anon* %3063 to i64*
  %3064 = load i64, i64* %PC.i1575
  %3065 = add i64 %3064, 10
  store i64 %3065, i64* %PC.i1575
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1576, align 8
  store %struct.Memory* %loadMem_4802d2, %struct.Memory** %MEMORY
  %loadMem_4802dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3067 = getelementptr inbounds %struct.GPR, %struct.GPR* %3066, i32 0, i32 33
  %3068 = getelementptr inbounds %struct.Reg, %struct.Reg* %3067, i32 0, i32 0
  %PC.i1572 = bitcast %union.anon* %3068 to i64*
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3070 = getelementptr inbounds %struct.GPR, %struct.GPR* %3069, i32 0, i32 5
  %3071 = getelementptr inbounds %struct.Reg, %struct.Reg* %3070, i32 0, i32 0
  %RCX.i1573 = bitcast %union.anon* %3071 to i64*
  %3072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3073 = getelementptr inbounds %struct.GPR, %struct.GPR* %3072, i32 0, i32 15
  %3074 = getelementptr inbounds %struct.Reg, %struct.Reg* %3073, i32 0, i32 0
  %RBP.i1574 = bitcast %union.anon* %3074 to i64*
  %3075 = load i64, i64* %RBP.i1574
  %3076 = sub i64 %3075, 8
  %3077 = load i64, i64* %PC.i1572
  %3078 = add i64 %3077, 4
  store i64 %3078, i64* %PC.i1572
  %3079 = inttoptr i64 %3076 to i32*
  %3080 = load i32, i32* %3079
  %3081 = sext i32 %3080 to i64
  store i64 %3081, i64* %RCX.i1573, align 8
  store %struct.Memory* %loadMem_4802dc, %struct.Memory** %MEMORY
  %loadMem_4802e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3083 = getelementptr inbounds %struct.GPR, %struct.GPR* %3082, i32 0, i32 33
  %3084 = getelementptr inbounds %struct.Reg, %struct.Reg* %3083, i32 0, i32 0
  %PC.i1570 = bitcast %union.anon* %3084 to i64*
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3086 = getelementptr inbounds %struct.GPR, %struct.GPR* %3085, i32 0, i32 5
  %3087 = getelementptr inbounds %struct.Reg, %struct.Reg* %3086, i32 0, i32 0
  %RCX.i1571 = bitcast %union.anon* %3087 to i64*
  %3088 = load i64, i64* %RCX.i1571
  %3089 = load i64, i64* %PC.i1570
  %3090 = add i64 %3089, 7
  store i64 %3090, i64* %PC.i1570
  %3091 = sext i64 %3088 to i128
  %3092 = and i128 %3091, -18446744073709551616
  %3093 = zext i64 %3088 to i128
  %3094 = or i128 %3092, %3093
  %3095 = mul i128 564, %3094
  %3096 = trunc i128 %3095 to i64
  store i64 %3096, i64* %RCX.i1571, align 8
  %3097 = sext i64 %3096 to i128
  %3098 = icmp ne i128 %3097, %3095
  %3099 = zext i1 %3098 to i8
  %3100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3099, i8* %3100, align 1
  %3101 = trunc i128 %3095 to i32
  %3102 = and i32 %3101, 255
  %3103 = call i32 @llvm.ctpop.i32(i32 %3102)
  %3104 = trunc i32 %3103 to i8
  %3105 = and i8 %3104, 1
  %3106 = xor i8 %3105, 1
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3106, i8* %3107, align 1
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3108, align 1
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3109, align 1
  %3110 = lshr i64 %3096, 63
  %3111 = trunc i64 %3110 to i8
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3111, i8* %3112, align 1
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3099, i8* %3113, align 1
  store %struct.Memory* %loadMem_4802e0, %struct.Memory** %MEMORY
  %loadMem_4802e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3115 = getelementptr inbounds %struct.GPR, %struct.GPR* %3114, i32 0, i32 33
  %3116 = getelementptr inbounds %struct.Reg, %struct.Reg* %3115, i32 0, i32 0
  %PC.i1567 = bitcast %union.anon* %3116 to i64*
  %3117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3118 = getelementptr inbounds %struct.GPR, %struct.GPR* %3117, i32 0, i32 1
  %3119 = getelementptr inbounds %struct.Reg, %struct.Reg* %3118, i32 0, i32 0
  %RAX.i1568 = bitcast %union.anon* %3119 to i64*
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3121 = getelementptr inbounds %struct.GPR, %struct.GPR* %3120, i32 0, i32 5
  %3122 = getelementptr inbounds %struct.Reg, %struct.Reg* %3121, i32 0, i32 0
  %RCX.i1569 = bitcast %union.anon* %3122 to i64*
  %3123 = load i64, i64* %RAX.i1568
  %3124 = load i64, i64* %RCX.i1569
  %3125 = load i64, i64* %PC.i1567
  %3126 = add i64 %3125, 3
  store i64 %3126, i64* %PC.i1567
  %3127 = add i64 %3124, %3123
  store i64 %3127, i64* %RAX.i1568, align 8
  %3128 = icmp ult i64 %3127, %3123
  %3129 = icmp ult i64 %3127, %3124
  %3130 = or i1 %3128, %3129
  %3131 = zext i1 %3130 to i8
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3131, i8* %3132, align 1
  %3133 = trunc i64 %3127 to i32
  %3134 = and i32 %3133, 255
  %3135 = call i32 @llvm.ctpop.i32(i32 %3134)
  %3136 = trunc i32 %3135 to i8
  %3137 = and i8 %3136, 1
  %3138 = xor i8 %3137, 1
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3138, i8* %3139, align 1
  %3140 = xor i64 %3124, %3123
  %3141 = xor i64 %3140, %3127
  %3142 = lshr i64 %3141, 4
  %3143 = trunc i64 %3142 to i8
  %3144 = and i8 %3143, 1
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3144, i8* %3145, align 1
  %3146 = icmp eq i64 %3127, 0
  %3147 = zext i1 %3146 to i8
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3147, i8* %3148, align 1
  %3149 = lshr i64 %3127, 63
  %3150 = trunc i64 %3149 to i8
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3150, i8* %3151, align 1
  %3152 = lshr i64 %3123, 63
  %3153 = lshr i64 %3124, 63
  %3154 = xor i64 %3149, %3152
  %3155 = xor i64 %3149, %3153
  %3156 = add i64 %3154, %3155
  %3157 = icmp eq i64 %3156, 2
  %3158 = zext i1 %3157 to i8
  %3159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3158, i8* %3159, align 1
  store %struct.Memory* %loadMem_4802e7, %struct.Memory** %MEMORY
  %loadMem_4802ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3161 = getelementptr inbounds %struct.GPR, %struct.GPR* %3160, i32 0, i32 33
  %3162 = getelementptr inbounds %struct.Reg, %struct.Reg* %3161, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %3162 to i64*
  %3163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3164 = getelementptr inbounds %struct.GPR, %struct.GPR* %3163, i32 0, i32 1
  %3165 = getelementptr inbounds %struct.Reg, %struct.Reg* %3164, i32 0, i32 0
  %RAX.i1565 = bitcast %union.anon* %3165 to i64*
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3167 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3166, i64 0, i64 1
  %YMM1.i1566 = bitcast %union.VectorReg* %3167 to %"class.std::bitset"*
  %3168 = bitcast %"class.std::bitset"* %YMM1.i1566 to i8*
  %3169 = load i64, i64* %RAX.i1565
  %3170 = add i64 %3169, 44
  %3171 = load i64, i64* %PC.i1564
  %3172 = add i64 %3171, 5
  store i64 %3172, i64* %PC.i1564
  %3173 = inttoptr i64 %3170 to float*
  %3174 = load float, float* %3173
  %3175 = fpext float %3174 to double
  %3176 = bitcast i8* %3168 to double*
  store double %3175, double* %3176, align 1
  store %struct.Memory* %loadMem_4802ea, %struct.Memory** %MEMORY
  %loadMem_4802ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %3177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3178 = getelementptr inbounds %struct.GPR, %struct.GPR* %3177, i32 0, i32 33
  %3179 = getelementptr inbounds %struct.Reg, %struct.Reg* %3178, i32 0, i32 0
  %PC.i1559 = bitcast %union.anon* %3179 to i64*
  %3180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3181 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3180, i64 0, i64 0
  %XMM0.i1560 = bitcast %union.VectorReg* %3181 to %union.vec128_t*
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3183 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3182, i64 0, i64 1
  %XMM1.i1561 = bitcast %union.VectorReg* %3183 to %union.vec128_t*
  %3184 = bitcast %union.vec128_t* %XMM1.i1561 to i8*
  %3185 = bitcast %union.vec128_t* %XMM0.i1560 to i8*
  %3186 = load i64, i64* %PC.i1559
  %3187 = add i64 %3186, 4
  store i64 %3187, i64* %PC.i1559
  %3188 = bitcast i8* %3184 to double*
  %3189 = load double, double* %3188, align 1
  %3190 = bitcast i8* %3185 to double*
  %3191 = load double, double* %3190, align 1
  %3192 = fcmp uno double %3189, %3191
  br i1 %3192, label %3193, label %3205

; <label>:3193:                                   ; preds = %block_4802ca
  %3194 = fadd double %3189, %3191
  %3195 = bitcast double %3194 to i64
  %3196 = and i64 %3195, 9221120237041090560
  %3197 = icmp eq i64 %3196, 9218868437227405312
  %3198 = and i64 %3195, 2251799813685247
  %3199 = icmp ne i64 %3198, 0
  %3200 = and i1 %3197, %3199
  br i1 %3200, label %3201, label %3211

; <label>:3201:                                   ; preds = %3193
  %3202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3203 = load i64, i64* %3202, align 8
  %3204 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3203, %struct.Memory* %loadMem_4802ef)
  br label %routine_ucomisd__xmm0___xmm1.exit1562

; <label>:3205:                                   ; preds = %block_4802ca
  %3206 = fcmp ogt double %3189, %3191
  br i1 %3206, label %3211, label %3207

; <label>:3207:                                   ; preds = %3205
  %3208 = fcmp olt double %3189, %3191
  br i1 %3208, label %3211, label %3209

; <label>:3209:                                   ; preds = %3207
  %3210 = fcmp oeq double %3189, %3191
  br i1 %3210, label %3211, label %3218

; <label>:3211:                                   ; preds = %3209, %3207, %3205, %3193
  %3212 = phi i8 [ 0, %3205 ], [ 0, %3207 ], [ 1, %3209 ], [ 1, %3193 ]
  %3213 = phi i8 [ 0, %3205 ], [ 0, %3207 ], [ 0, %3209 ], [ 1, %3193 ]
  %3214 = phi i8 [ 0, %3205 ], [ 1, %3207 ], [ 0, %3209 ], [ 1, %3193 ]
  %3215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3212, i8* %3215, align 1
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3213, i8* %3216, align 1
  %3217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3214, i8* %3217, align 1
  br label %3218

; <label>:3218:                                   ; preds = %3211, %3209
  %3219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3219, align 1
  %3220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3220, align 1
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3221, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit1562

routine_ucomisd__xmm0___xmm1.exit1562:            ; preds = %3201, %3218
  %3222 = phi %struct.Memory* [ %3204, %3201 ], [ %loadMem_4802ef, %3218 ]
  store %struct.Memory* %3222, %struct.Memory** %MEMORY
  %loadMem_4802f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3224 = getelementptr inbounds %struct.GPR, %struct.GPR* %3223, i32 0, i32 33
  %3225 = getelementptr inbounds %struct.Reg, %struct.Reg* %3224, i32 0, i32 0
  %PC.i1558 = bitcast %union.anon* %3225 to i64*
  %3226 = load i64, i64* %PC.i1558
  %3227 = add i64 %3226, 819
  %3228 = load i64, i64* %PC.i1558
  %3229 = add i64 %3228, 6
  %3230 = load i64, i64* %PC.i1558
  %3231 = add i64 %3230, 6
  store i64 %3231, i64* %PC.i1558
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3233 = load i8, i8* %3232, align 1
  store i8 %3233, i8* %BRANCH_TAKEN, align 1
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3235 = icmp ne i8 %3233, 0
  %3236 = select i1 %3235, i64 %3227, i64 %3229
  store i64 %3236, i64* %3234, align 8
  store %struct.Memory* %loadMem_4802f3, %struct.Memory** %MEMORY
  %loadBr_4802f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4802f3 = icmp eq i8 %loadBr_4802f3, 1
  br i1 %cmpBr_4802f3, label %block_.L_480626, label %block_.L_4802f9

block_.L_4802f9:                                  ; preds = %routine_ucomisd__xmm0___xmm1.exit1562, %routine_ucomisd__xmm0___xmm1.exit1583
  %loadMem_4802f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3238 = getelementptr inbounds %struct.GPR, %struct.GPR* %3237, i32 0, i32 33
  %3239 = getelementptr inbounds %struct.Reg, %struct.Reg* %3238, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %3239 to i64*
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3241 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3240, i64 0, i64 0
  %YMM0.i1557 = bitcast %union.VectorReg* %3241 to %"class.std::bitset"*
  %3242 = bitcast %"class.std::bitset"* %YMM0.i1557 to i8*
  %3243 = load i64, i64* %PC.i1556
  %3244 = add i64 %3243, ptrtoint (%G_0x62c5f__rip__type* @G_0x62c5f__rip_ to i64)
  %3245 = load i64, i64* %PC.i1556
  %3246 = add i64 %3245, 8
  store i64 %3246, i64* %PC.i1556
  %3247 = inttoptr i64 %3244 to double*
  %3248 = load double, double* %3247
  %3249 = bitcast i8* %3242 to double*
  store double %3248, double* %3249, align 1
  %3250 = getelementptr inbounds i8, i8* %3242, i64 8
  %3251 = bitcast i8* %3250 to double*
  store double 0.000000e+00, double* %3251, align 1
  store %struct.Memory* %loadMem_4802f9, %struct.Memory** %MEMORY
  %loadMem_480301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3253 = getelementptr inbounds %struct.GPR, %struct.GPR* %3252, i32 0, i32 33
  %3254 = getelementptr inbounds %struct.Reg, %struct.Reg* %3253, i32 0, i32 0
  %PC.i1554 = bitcast %union.anon* %3254 to i64*
  %3255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3256 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3255, i64 0, i64 1
  %YMM1.i1555 = bitcast %union.VectorReg* %3256 to %"class.std::bitset"*
  %3257 = bitcast %"class.std::bitset"* %YMM1.i1555 to i8*
  %3258 = load i64, i64* %PC.i1554
  %3259 = add i64 %3258, ptrtoint (%G_0x62c7f__rip__type* @G_0x62c7f__rip_ to i64)
  %3260 = load i64, i64* %PC.i1554
  %3261 = add i64 %3260, 8
  store i64 %3261, i64* %PC.i1554
  %3262 = inttoptr i64 %3259 to double*
  %3263 = load double, double* %3262
  %3264 = bitcast i8* %3257 to double*
  store double %3263, double* %3264, align 1
  %3265 = getelementptr inbounds i8, i8* %3257, i64 8
  %3266 = bitcast i8* %3265 to double*
  store double 0.000000e+00, double* %3266, align 1
  store %struct.Memory* %loadMem_480301, %struct.Memory** %MEMORY
  %loadMem_480309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3268 = getelementptr inbounds %struct.GPR, %struct.GPR* %3267, i32 0, i32 33
  %3269 = getelementptr inbounds %struct.Reg, %struct.Reg* %3268, i32 0, i32 0
  %PC.i1552 = bitcast %union.anon* %3269 to i64*
  %3270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3271 = getelementptr inbounds %struct.GPR, %struct.GPR* %3270, i32 0, i32 1
  %3272 = getelementptr inbounds %struct.Reg, %struct.Reg* %3271, i32 0, i32 0
  %RAX.i1553 = bitcast %union.anon* %3272 to i64*
  %3273 = load i64, i64* %PC.i1552
  %3274 = add i64 %3273, 10
  store i64 %3274, i64* %PC.i1552
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1553, align 8
  store %struct.Memory* %loadMem_480309, %struct.Memory** %MEMORY
  %loadMem_480313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3276 = getelementptr inbounds %struct.GPR, %struct.GPR* %3275, i32 0, i32 33
  %3277 = getelementptr inbounds %struct.Reg, %struct.Reg* %3276, i32 0, i32 0
  %PC.i1549 = bitcast %union.anon* %3277 to i64*
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3279 = getelementptr inbounds %struct.GPR, %struct.GPR* %3278, i32 0, i32 15
  %3280 = getelementptr inbounds %struct.Reg, %struct.Reg* %3279, i32 0, i32 0
  %RBP.i1550 = bitcast %union.anon* %3280 to i64*
  %3281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3282 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3281, i64 0, i64 2
  %YMM2.i1551 = bitcast %union.VectorReg* %3282 to %"class.std::bitset"*
  %3283 = bitcast %"class.std::bitset"* %YMM2.i1551 to i8*
  %3284 = load i64, i64* %RBP.i1550
  %3285 = sub i64 %3284, 24
  %3286 = load i64, i64* %PC.i1549
  %3287 = add i64 %3286, 5
  store i64 %3287, i64* %PC.i1549
  %3288 = inttoptr i64 %3285 to float*
  %3289 = load float, float* %3288
  %3290 = bitcast i8* %3283 to float*
  store float %3289, float* %3290, align 1
  %3291 = getelementptr inbounds i8, i8* %3283, i64 4
  %3292 = bitcast i8* %3291 to float*
  store float 0.000000e+00, float* %3292, align 1
  %3293 = getelementptr inbounds i8, i8* %3283, i64 8
  %3294 = bitcast i8* %3293 to float*
  store float 0.000000e+00, float* %3294, align 1
  %3295 = getelementptr inbounds i8, i8* %3283, i64 12
  %3296 = bitcast i8* %3295 to float*
  store float 0.000000e+00, float* %3296, align 1
  store %struct.Memory* %loadMem_480313, %struct.Memory** %MEMORY
  %loadMem_480318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3298 = getelementptr inbounds %struct.GPR, %struct.GPR* %3297, i32 0, i32 33
  %3299 = getelementptr inbounds %struct.Reg, %struct.Reg* %3298, i32 0, i32 0
  %PC.i1546 = bitcast %union.anon* %3299 to i64*
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3301 = getelementptr inbounds %struct.GPR, %struct.GPR* %3300, i32 0, i32 15
  %3302 = getelementptr inbounds %struct.Reg, %struct.Reg* %3301, i32 0, i32 0
  %RBP.i1547 = bitcast %union.anon* %3302 to i64*
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3304 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3303, i64 0, i64 2
  %XMM2.i1548 = bitcast %union.VectorReg* %3304 to %union.vec128_t*
  %3305 = load i64, i64* %RBP.i1547
  %3306 = sub i64 %3305, 44
  %3307 = bitcast %union.vec128_t* %XMM2.i1548 to i8*
  %3308 = load i64, i64* %PC.i1546
  %3309 = add i64 %3308, 5
  store i64 %3309, i64* %PC.i1546
  %3310 = bitcast i8* %3307 to <2 x float>*
  %3311 = load <2 x float>, <2 x float>* %3310, align 1
  %3312 = extractelement <2 x float> %3311, i32 0
  %3313 = inttoptr i64 %3306 to float*
  store float %3312, float* %3313
  store %struct.Memory* %loadMem_480318, %struct.Memory** %MEMORY
  %loadMem_48031d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3315 = getelementptr inbounds %struct.GPR, %struct.GPR* %3314, i32 0, i32 33
  %3316 = getelementptr inbounds %struct.Reg, %struct.Reg* %3315, i32 0, i32 0
  %PC.i1543 = bitcast %union.anon* %3316 to i64*
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3318 = getelementptr inbounds %struct.GPR, %struct.GPR* %3317, i32 0, i32 15
  %3319 = getelementptr inbounds %struct.Reg, %struct.Reg* %3318, i32 0, i32 0
  %RBP.i1544 = bitcast %union.anon* %3319 to i64*
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3320, i64 0, i64 2
  %YMM2.i1545 = bitcast %union.VectorReg* %3321 to %"class.std::bitset"*
  %3322 = bitcast %"class.std::bitset"* %YMM2.i1545 to i8*
  %3323 = load i64, i64* %RBP.i1544
  %3324 = sub i64 %3323, 40
  %3325 = load i64, i64* %PC.i1543
  %3326 = add i64 %3325, 5
  store i64 %3326, i64* %PC.i1543
  %3327 = inttoptr i64 %3324 to float*
  %3328 = load float, float* %3327
  %3329 = fpext float %3328 to double
  %3330 = bitcast i8* %3322 to double*
  store double %3329, double* %3330, align 1
  store %struct.Memory* %loadMem_48031d, %struct.Memory** %MEMORY
  %loadMem_480322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3332 = getelementptr inbounds %struct.GPR, %struct.GPR* %3331, i32 0, i32 33
  %3333 = getelementptr inbounds %struct.Reg, %struct.Reg* %3332, i32 0, i32 0
  %PC.i1540 = bitcast %union.anon* %3333 to i64*
  %3334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3335 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3334, i64 0, i64 3
  %YMM3.i1541 = bitcast %union.VectorReg* %3335 to %"class.std::bitset"*
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3337 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3336, i64 0, i64 1
  %XMM1.i1542 = bitcast %union.VectorReg* %3337 to %union.vec128_t*
  %3338 = bitcast %"class.std::bitset"* %YMM3.i1541 to i8*
  %3339 = bitcast %union.vec128_t* %XMM1.i1542 to i8*
  %3340 = load i64, i64* %PC.i1540
  %3341 = add i64 %3340, 3
  store i64 %3341, i64* %PC.i1540
  %3342 = bitcast i8* %3339 to <2 x i32>*
  %3343 = load <2 x i32>, <2 x i32>* %3342, align 1
  %3344 = getelementptr inbounds i8, i8* %3339, i64 8
  %3345 = bitcast i8* %3344 to <2 x i32>*
  %3346 = load <2 x i32>, <2 x i32>* %3345, align 1
  %3347 = extractelement <2 x i32> %3343, i32 0
  %3348 = bitcast i8* %3338 to i32*
  store i32 %3347, i32* %3348, align 1
  %3349 = extractelement <2 x i32> %3343, i32 1
  %3350 = getelementptr inbounds i8, i8* %3338, i64 4
  %3351 = bitcast i8* %3350 to i32*
  store i32 %3349, i32* %3351, align 1
  %3352 = extractelement <2 x i32> %3346, i32 0
  %3353 = getelementptr inbounds i8, i8* %3338, i64 8
  %3354 = bitcast i8* %3353 to i32*
  store i32 %3352, i32* %3354, align 1
  %3355 = extractelement <2 x i32> %3346, i32 1
  %3356 = getelementptr inbounds i8, i8* %3338, i64 12
  %3357 = bitcast i8* %3356 to i32*
  store i32 %3355, i32* %3357, align 1
  store %struct.Memory* %loadMem_480322, %struct.Memory** %MEMORY
  %loadMem_480325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3359 = getelementptr inbounds %struct.GPR, %struct.GPR* %3358, i32 0, i32 33
  %3360 = getelementptr inbounds %struct.Reg, %struct.Reg* %3359, i32 0, i32 0
  %PC.i1537 = bitcast %union.anon* %3360 to i64*
  %3361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3362 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3361, i64 0, i64 3
  %YMM3.i1538 = bitcast %union.VectorReg* %3362 to %"class.std::bitset"*
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3364 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3363, i64 0, i64 2
  %XMM2.i1539 = bitcast %union.VectorReg* %3364 to %union.vec128_t*
  %3365 = bitcast %"class.std::bitset"* %YMM3.i1538 to i8*
  %3366 = bitcast %"class.std::bitset"* %YMM3.i1538 to i8*
  %3367 = bitcast %union.vec128_t* %XMM2.i1539 to i8*
  %3368 = load i64, i64* %PC.i1537
  %3369 = add i64 %3368, 4
  store i64 %3369, i64* %PC.i1537
  %3370 = bitcast i8* %3366 to double*
  %3371 = load double, double* %3370, align 1
  %3372 = getelementptr inbounds i8, i8* %3366, i64 8
  %3373 = bitcast i8* %3372 to i64*
  %3374 = load i64, i64* %3373, align 1
  %3375 = bitcast i8* %3367 to double*
  %3376 = load double, double* %3375, align 1
  %3377 = fmul double %3371, %3376
  %3378 = bitcast i8* %3365 to double*
  store double %3377, double* %3378, align 1
  %3379 = getelementptr inbounds i8, i8* %3365, i64 8
  %3380 = bitcast i8* %3379 to i64*
  store i64 %3374, i64* %3380, align 1
  store %struct.Memory* %loadMem_480325, %struct.Memory** %MEMORY
  %loadMem_480329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3382 = getelementptr inbounds %struct.GPR, %struct.GPR* %3381, i32 0, i32 33
  %3383 = getelementptr inbounds %struct.Reg, %struct.Reg* %3382, i32 0, i32 0
  %PC.i1534 = bitcast %union.anon* %3383 to i64*
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3385 = getelementptr inbounds %struct.GPR, %struct.GPR* %3384, i32 0, i32 5
  %3386 = getelementptr inbounds %struct.Reg, %struct.Reg* %3385, i32 0, i32 0
  %RCX.i1535 = bitcast %union.anon* %3386 to i64*
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3388 = getelementptr inbounds %struct.GPR, %struct.GPR* %3387, i32 0, i32 15
  %3389 = getelementptr inbounds %struct.Reg, %struct.Reg* %3388, i32 0, i32 0
  %RBP.i1536 = bitcast %union.anon* %3389 to i64*
  %3390 = load i64, i64* %RBP.i1536
  %3391 = sub i64 %3390, 8
  %3392 = load i64, i64* %PC.i1534
  %3393 = add i64 %3392, 4
  store i64 %3393, i64* %PC.i1534
  %3394 = inttoptr i64 %3391 to i32*
  %3395 = load i32, i32* %3394
  %3396 = sext i32 %3395 to i64
  store i64 %3396, i64* %RCX.i1535, align 8
  store %struct.Memory* %loadMem_480329, %struct.Memory** %MEMORY
  %loadMem_48032d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3398 = getelementptr inbounds %struct.GPR, %struct.GPR* %3397, i32 0, i32 33
  %3399 = getelementptr inbounds %struct.Reg, %struct.Reg* %3398, i32 0, i32 0
  %PC.i1532 = bitcast %union.anon* %3399 to i64*
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3401 = getelementptr inbounds %struct.GPR, %struct.GPR* %3400, i32 0, i32 5
  %3402 = getelementptr inbounds %struct.Reg, %struct.Reg* %3401, i32 0, i32 0
  %RCX.i1533 = bitcast %union.anon* %3402 to i64*
  %3403 = load i64, i64* %RCX.i1533
  %3404 = load i64, i64* %PC.i1532
  %3405 = add i64 %3404, 7
  store i64 %3405, i64* %PC.i1532
  %3406 = sext i64 %3403 to i128
  %3407 = and i128 %3406, -18446744073709551616
  %3408 = zext i64 %3403 to i128
  %3409 = or i128 %3407, %3408
  %3410 = mul i128 564, %3409
  %3411 = trunc i128 %3410 to i64
  store i64 %3411, i64* %RCX.i1533, align 8
  %3412 = sext i64 %3411 to i128
  %3413 = icmp ne i128 %3412, %3410
  %3414 = zext i1 %3413 to i8
  %3415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3414, i8* %3415, align 1
  %3416 = trunc i128 %3410 to i32
  %3417 = and i32 %3416, 255
  %3418 = call i32 @llvm.ctpop.i32(i32 %3417)
  %3419 = trunc i32 %3418 to i8
  %3420 = and i8 %3419, 1
  %3421 = xor i8 %3420, 1
  %3422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3421, i8* %3422, align 1
  %3423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3423, align 1
  %3424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3424, align 1
  %3425 = lshr i64 %3411, 63
  %3426 = trunc i64 %3425 to i8
  %3427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3426, i8* %3427, align 1
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3414, i8* %3428, align 1
  store %struct.Memory* %loadMem_48032d, %struct.Memory** %MEMORY
  %loadMem_480334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3430 = getelementptr inbounds %struct.GPR, %struct.GPR* %3429, i32 0, i32 33
  %3431 = getelementptr inbounds %struct.Reg, %struct.Reg* %3430, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %3431 to i64*
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3433 = getelementptr inbounds %struct.GPR, %struct.GPR* %3432, i32 0, i32 1
  %3434 = getelementptr inbounds %struct.Reg, %struct.Reg* %3433, i32 0, i32 0
  %RAX.i1530 = bitcast %union.anon* %3434 to i64*
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3436 = getelementptr inbounds %struct.GPR, %struct.GPR* %3435, i32 0, i32 5
  %3437 = getelementptr inbounds %struct.Reg, %struct.Reg* %3436, i32 0, i32 0
  %RCX.i1531 = bitcast %union.anon* %3437 to i64*
  %3438 = load i64, i64* %RAX.i1530
  %3439 = load i64, i64* %RCX.i1531
  %3440 = load i64, i64* %PC.i1529
  %3441 = add i64 %3440, 3
  store i64 %3441, i64* %PC.i1529
  %3442 = add i64 %3439, %3438
  store i64 %3442, i64* %RAX.i1530, align 8
  %3443 = icmp ult i64 %3442, %3438
  %3444 = icmp ult i64 %3442, %3439
  %3445 = or i1 %3443, %3444
  %3446 = zext i1 %3445 to i8
  %3447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3446, i8* %3447, align 1
  %3448 = trunc i64 %3442 to i32
  %3449 = and i32 %3448, 255
  %3450 = call i32 @llvm.ctpop.i32(i32 %3449)
  %3451 = trunc i32 %3450 to i8
  %3452 = and i8 %3451, 1
  %3453 = xor i8 %3452, 1
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3453, i8* %3454, align 1
  %3455 = xor i64 %3439, %3438
  %3456 = xor i64 %3455, %3442
  %3457 = lshr i64 %3456, 4
  %3458 = trunc i64 %3457 to i8
  %3459 = and i8 %3458, 1
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3459, i8* %3460, align 1
  %3461 = icmp eq i64 %3442, 0
  %3462 = zext i1 %3461 to i8
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3462, i8* %3463, align 1
  %3464 = lshr i64 %3442, 63
  %3465 = trunc i64 %3464 to i8
  %3466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3465, i8* %3466, align 1
  %3467 = lshr i64 %3438, 63
  %3468 = lshr i64 %3439, 63
  %3469 = xor i64 %3464, %3467
  %3470 = xor i64 %3464, %3468
  %3471 = add i64 %3469, %3470
  %3472 = icmp eq i64 %3471, 2
  %3473 = zext i1 %3472 to i8
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3473, i8* %3474, align 1
  store %struct.Memory* %loadMem_480334, %struct.Memory** %MEMORY
  %loadMem_480337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3476 = getelementptr inbounds %struct.GPR, %struct.GPR* %3475, i32 0, i32 33
  %3477 = getelementptr inbounds %struct.Reg, %struct.Reg* %3476, i32 0, i32 0
  %PC.i1526 = bitcast %union.anon* %3477 to i64*
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3479 = getelementptr inbounds %struct.GPR, %struct.GPR* %3478, i32 0, i32 1
  %3480 = getelementptr inbounds %struct.Reg, %struct.Reg* %3479, i32 0, i32 0
  %RAX.i1527 = bitcast %union.anon* %3480 to i64*
  %3481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3482 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3481, i64 0, i64 2
  %YMM2.i1528 = bitcast %union.VectorReg* %3482 to %"class.std::bitset"*
  %3483 = bitcast %"class.std::bitset"* %YMM2.i1528 to i8*
  %3484 = load i64, i64* %RAX.i1527
  %3485 = add i64 %3484, 44
  %3486 = load i64, i64* %PC.i1526
  %3487 = add i64 %3486, 5
  store i64 %3487, i64* %PC.i1526
  %3488 = inttoptr i64 %3485 to float*
  %3489 = load float, float* %3488
  %3490 = fpext float %3489 to double
  %3491 = bitcast i8* %3483 to double*
  store double %3490, double* %3491, align 1
  store %struct.Memory* %loadMem_480337, %struct.Memory** %MEMORY
  %loadMem_48033c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 33
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %PC.i1523 = bitcast %union.anon* %3494 to i64*
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3496 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3495, i64 0, i64 1
  %YMM1.i1524 = bitcast %union.VectorReg* %3496 to %"class.std::bitset"*
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3498 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3497, i64 0, i64 2
  %XMM2.i1525 = bitcast %union.VectorReg* %3498 to %union.vec128_t*
  %3499 = bitcast %"class.std::bitset"* %YMM1.i1524 to i8*
  %3500 = bitcast %"class.std::bitset"* %YMM1.i1524 to i8*
  %3501 = bitcast %union.vec128_t* %XMM2.i1525 to i8*
  %3502 = load i64, i64* %PC.i1523
  %3503 = add i64 %3502, 4
  store i64 %3503, i64* %PC.i1523
  %3504 = bitcast i8* %3500 to double*
  %3505 = load double, double* %3504, align 1
  %3506 = getelementptr inbounds i8, i8* %3500, i64 8
  %3507 = bitcast i8* %3506 to i64*
  %3508 = load i64, i64* %3507, align 1
  %3509 = bitcast i8* %3501 to double*
  %3510 = load double, double* %3509, align 1
  %3511 = fmul double %3505, %3510
  %3512 = bitcast i8* %3499 to double*
  store double %3511, double* %3512, align 1
  %3513 = getelementptr inbounds i8, i8* %3499, i64 8
  %3514 = bitcast i8* %3513 to i64*
  store i64 %3508, i64* %3514, align 1
  store %struct.Memory* %loadMem_48033c, %struct.Memory** %MEMORY
  %loadMem_480340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3516 = getelementptr inbounds %struct.GPR, %struct.GPR* %3515, i32 0, i32 33
  %3517 = getelementptr inbounds %struct.Reg, %struct.Reg* %3516, i32 0, i32 0
  %PC.i1520 = bitcast %union.anon* %3517 to i64*
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3519 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3518, i64 0, i64 3
  %YMM3.i1521 = bitcast %union.VectorReg* %3519 to %"class.std::bitset"*
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3521 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3520, i64 0, i64 1
  %XMM1.i1522 = bitcast %union.VectorReg* %3521 to %union.vec128_t*
  %3522 = bitcast %"class.std::bitset"* %YMM3.i1521 to i8*
  %3523 = bitcast %"class.std::bitset"* %YMM3.i1521 to i8*
  %3524 = bitcast %union.vec128_t* %XMM1.i1522 to i8*
  %3525 = load i64, i64* %PC.i1520
  %3526 = add i64 %3525, 4
  store i64 %3526, i64* %PC.i1520
  %3527 = bitcast i8* %3523 to double*
  %3528 = load double, double* %3527, align 1
  %3529 = getelementptr inbounds i8, i8* %3523, i64 8
  %3530 = bitcast i8* %3529 to i64*
  %3531 = load i64, i64* %3530, align 1
  %3532 = bitcast i8* %3524 to double*
  %3533 = load double, double* %3532, align 1
  %3534 = fadd double %3528, %3533
  %3535 = bitcast i8* %3522 to double*
  store double %3534, double* %3535, align 1
  %3536 = getelementptr inbounds i8, i8* %3522, i64 8
  %3537 = bitcast i8* %3536 to i64*
  store i64 %3531, i64* %3537, align 1
  store %struct.Memory* %loadMem_480340, %struct.Memory** %MEMORY
  %loadMem_480344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3539 = getelementptr inbounds %struct.GPR, %struct.GPR* %3538, i32 0, i32 33
  %3540 = getelementptr inbounds %struct.Reg, %struct.Reg* %3539, i32 0, i32 0
  %PC.i1517 = bitcast %union.anon* %3540 to i64*
  %3541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3542 = getelementptr inbounds %struct.GPR, %struct.GPR* %3541, i32 0, i32 15
  %3543 = getelementptr inbounds %struct.Reg, %struct.Reg* %3542, i32 0, i32 0
  %RBP.i1518 = bitcast %union.anon* %3543 to i64*
  %3544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3545 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3544, i64 0, i64 1
  %YMM1.i1519 = bitcast %union.VectorReg* %3545 to %"class.std::bitset"*
  %3546 = bitcast %"class.std::bitset"* %YMM1.i1519 to i8*
  %3547 = load i64, i64* %RBP.i1518
  %3548 = sub i64 %3547, 24
  %3549 = load i64, i64* %PC.i1517
  %3550 = add i64 %3549, 5
  store i64 %3550, i64* %PC.i1517
  %3551 = inttoptr i64 %3548 to float*
  %3552 = load float, float* %3551
  %3553 = fpext float %3552 to double
  %3554 = bitcast i8* %3546 to double*
  store double %3553, double* %3554, align 1
  store %struct.Memory* %loadMem_480344, %struct.Memory** %MEMORY
  %loadMem_480349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3556 = getelementptr inbounds %struct.GPR, %struct.GPR* %3555, i32 0, i32 33
  %3557 = getelementptr inbounds %struct.Reg, %struct.Reg* %3556, i32 0, i32 0
  %PC.i1514 = bitcast %union.anon* %3557 to i64*
  %3558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3559 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3558, i64 0, i64 0
  %YMM0.i1515 = bitcast %union.VectorReg* %3559 to %"class.std::bitset"*
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3561 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3560, i64 0, i64 1
  %XMM1.i1516 = bitcast %union.VectorReg* %3561 to %union.vec128_t*
  %3562 = bitcast %"class.std::bitset"* %YMM0.i1515 to i8*
  %3563 = bitcast %"class.std::bitset"* %YMM0.i1515 to i8*
  %3564 = bitcast %union.vec128_t* %XMM1.i1516 to i8*
  %3565 = load i64, i64* %PC.i1514
  %3566 = add i64 %3565, 4
  store i64 %3566, i64* %PC.i1514
  %3567 = bitcast i8* %3563 to double*
  %3568 = load double, double* %3567, align 1
  %3569 = getelementptr inbounds i8, i8* %3563, i64 8
  %3570 = bitcast i8* %3569 to i64*
  %3571 = load i64, i64* %3570, align 1
  %3572 = bitcast i8* %3564 to double*
  %3573 = load double, double* %3572, align 1
  %3574 = fmul double %3568, %3573
  %3575 = bitcast i8* %3562 to double*
  store double %3574, double* %3575, align 1
  %3576 = getelementptr inbounds i8, i8* %3562, i64 8
  %3577 = bitcast i8* %3576 to i64*
  store i64 %3571, i64* %3577, align 1
  store %struct.Memory* %loadMem_480349, %struct.Memory** %MEMORY
  %loadMem_48034d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3579 = getelementptr inbounds %struct.GPR, %struct.GPR* %3578, i32 0, i32 33
  %3580 = getelementptr inbounds %struct.Reg, %struct.Reg* %3579, i32 0, i32 0
  %PC.i1511 = bitcast %union.anon* %3580 to i64*
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 15
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %RBP.i1512 = bitcast %union.anon* %3583 to i64*
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3585 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3584, i64 0, i64 1
  %YMM1.i1513 = bitcast %union.VectorReg* %3585 to %"class.std::bitset"*
  %3586 = bitcast %"class.std::bitset"* %YMM1.i1513 to i8*
  %3587 = load i64, i64* %RBP.i1512
  %3588 = sub i64 %3587, 40
  %3589 = load i64, i64* %PC.i1511
  %3590 = add i64 %3589, 5
  store i64 %3590, i64* %PC.i1511
  %3591 = inttoptr i64 %3588 to float*
  %3592 = load float, float* %3591
  %3593 = fpext float %3592 to double
  %3594 = bitcast i8* %3586 to double*
  store double %3593, double* %3594, align 1
  store %struct.Memory* %loadMem_48034d, %struct.Memory** %MEMORY
  %loadMem_480352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3596 = getelementptr inbounds %struct.GPR, %struct.GPR* %3595, i32 0, i32 33
  %3597 = getelementptr inbounds %struct.Reg, %struct.Reg* %3596, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %3597 to i64*
  %3598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3599 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3598, i64 0, i64 0
  %YMM0.i1509 = bitcast %union.VectorReg* %3599 to %"class.std::bitset"*
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3601 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3600, i64 0, i64 1
  %XMM1.i1510 = bitcast %union.VectorReg* %3601 to %union.vec128_t*
  %3602 = bitcast %"class.std::bitset"* %YMM0.i1509 to i8*
  %3603 = bitcast %"class.std::bitset"* %YMM0.i1509 to i8*
  %3604 = bitcast %union.vec128_t* %XMM1.i1510 to i8*
  %3605 = load i64, i64* %PC.i1508
  %3606 = add i64 %3605, 4
  store i64 %3606, i64* %PC.i1508
  %3607 = bitcast i8* %3603 to double*
  %3608 = load double, double* %3607, align 1
  %3609 = getelementptr inbounds i8, i8* %3603, i64 8
  %3610 = bitcast i8* %3609 to i64*
  %3611 = load i64, i64* %3610, align 1
  %3612 = bitcast i8* %3604 to double*
  %3613 = load double, double* %3612, align 1
  %3614 = fadd double %3608, %3613
  %3615 = bitcast i8* %3602 to double*
  store double %3614, double* %3615, align 1
  %3616 = getelementptr inbounds i8, i8* %3602, i64 8
  %3617 = bitcast i8* %3616 to i64*
  store i64 %3611, i64* %3617, align 1
  store %struct.Memory* %loadMem_480352, %struct.Memory** %MEMORY
  %loadMem_480356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3619 = getelementptr inbounds %struct.GPR, %struct.GPR* %3618, i32 0, i32 33
  %3620 = getelementptr inbounds %struct.Reg, %struct.Reg* %3619, i32 0, i32 0
  %PC.i1503 = bitcast %union.anon* %3620 to i64*
  %3621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3622 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3621, i64 0, i64 0
  %XMM0.i1504 = bitcast %union.VectorReg* %3622 to %union.vec128_t*
  %3623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3624 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3623, i64 0, i64 3
  %XMM3.i1505 = bitcast %union.VectorReg* %3624 to %union.vec128_t*
  %3625 = bitcast %union.vec128_t* %XMM0.i1504 to i8*
  %3626 = bitcast %union.vec128_t* %XMM3.i1505 to i8*
  %3627 = load i64, i64* %PC.i1503
  %3628 = add i64 %3627, 4
  store i64 %3628, i64* %PC.i1503
  %3629 = bitcast i8* %3625 to double*
  %3630 = load double, double* %3629, align 1
  %3631 = bitcast i8* %3626 to double*
  %3632 = load double, double* %3631, align 1
  %3633 = fcmp uno double %3630, %3632
  br i1 %3633, label %3634, label %3646

; <label>:3634:                                   ; preds = %block_.L_4802f9
  %3635 = fadd double %3630, %3632
  %3636 = bitcast double %3635 to i64
  %3637 = and i64 %3636, 9221120237041090560
  %3638 = icmp eq i64 %3637, 9218868437227405312
  %3639 = and i64 %3636, 2251799813685247
  %3640 = icmp ne i64 %3639, 0
  %3641 = and i1 %3638, %3640
  br i1 %3641, label %3642, label %3652

; <label>:3642:                                   ; preds = %3634
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3644 = load i64, i64* %3643, align 8
  %3645 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3644, %struct.Memory* %loadMem_480356)
  br label %routine_ucomisd__xmm3___xmm0.exit1506

; <label>:3646:                                   ; preds = %block_.L_4802f9
  %3647 = fcmp ogt double %3630, %3632
  br i1 %3647, label %3652, label %3648

; <label>:3648:                                   ; preds = %3646
  %3649 = fcmp olt double %3630, %3632
  br i1 %3649, label %3652, label %3650

; <label>:3650:                                   ; preds = %3648
  %3651 = fcmp oeq double %3630, %3632
  br i1 %3651, label %3652, label %3659

; <label>:3652:                                   ; preds = %3650, %3648, %3646, %3634
  %3653 = phi i8 [ 0, %3646 ], [ 0, %3648 ], [ 1, %3650 ], [ 1, %3634 ]
  %3654 = phi i8 [ 0, %3646 ], [ 0, %3648 ], [ 0, %3650 ], [ 1, %3634 ]
  %3655 = phi i8 [ 0, %3646 ], [ 1, %3648 ], [ 0, %3650 ], [ 1, %3634 ]
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3653, i8* %3656, align 1
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3654, i8* %3657, align 1
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3655, i8* %3658, align 1
  br label %3659

; <label>:3659:                                   ; preds = %3652, %3650
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3660, align 1
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3661, align 1
  %3662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3662, align 1
  br label %routine_ucomisd__xmm3___xmm0.exit1506

routine_ucomisd__xmm3___xmm0.exit1506:            ; preds = %3642, %3659
  %3663 = phi %struct.Memory* [ %3645, %3642 ], [ %loadMem_480356, %3659 ]
  store %struct.Memory* %3663, %struct.Memory** %MEMORY
  %loadMem_48035a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3665 = getelementptr inbounds %struct.GPR, %struct.GPR* %3664, i32 0, i32 33
  %3666 = getelementptr inbounds %struct.Reg, %struct.Reg* %3665, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %3666 to i64*
  %3667 = load i64, i64* %PC.i1502
  %3668 = add i64 %3667, 73
  %3669 = load i64, i64* %PC.i1502
  %3670 = add i64 %3669, 6
  %3671 = load i64, i64* %PC.i1502
  %3672 = add i64 %3671, 6
  store i64 %3672, i64* %PC.i1502
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3674 = load i8, i8* %3673, align 1
  %3675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3676 = load i8, i8* %3675, align 1
  %3677 = or i8 %3676, %3674
  %3678 = icmp ne i8 %3677, 0
  %3679 = zext i1 %3678 to i8
  store i8 %3679, i8* %BRANCH_TAKEN, align 1
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3681 = select i1 %3678, i64 %3668, i64 %3670
  store i64 %3681, i64* %3680, align 8
  store %struct.Memory* %loadMem_48035a, %struct.Memory** %MEMORY
  %loadBr_48035a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48035a = icmp eq i8 %loadBr_48035a, 1
  br i1 %cmpBr_48035a, label %block_.L_4803a3, label %block_480360

block_480360:                                     ; preds = %routine_ucomisd__xmm3___xmm0.exit1506
  %loadMem_480360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3683 = getelementptr inbounds %struct.GPR, %struct.GPR* %3682, i32 0, i32 33
  %3684 = getelementptr inbounds %struct.Reg, %struct.Reg* %3683, i32 0, i32 0
  %PC.i1500 = bitcast %union.anon* %3684 to i64*
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3686 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3685, i64 0, i64 0
  %YMM0.i1501 = bitcast %union.VectorReg* %3686 to %"class.std::bitset"*
  %3687 = bitcast %"class.std::bitset"* %YMM0.i1501 to i8*
  %3688 = load i64, i64* %PC.i1500
  %3689 = add i64 %3688, ptrtoint (%G_0x62c20__rip__type* @G_0x62c20__rip_ to i64)
  %3690 = load i64, i64* %PC.i1500
  %3691 = add i64 %3690, 8
  store i64 %3691, i64* %PC.i1500
  %3692 = inttoptr i64 %3689 to double*
  %3693 = load double, double* %3692
  %3694 = bitcast i8* %3687 to double*
  store double %3693, double* %3694, align 1
  %3695 = getelementptr inbounds i8, i8* %3687, i64 8
  %3696 = bitcast i8* %3695 to double*
  store double 0.000000e+00, double* %3696, align 1
  store %struct.Memory* %loadMem_480360, %struct.Memory** %MEMORY
  %loadMem_480368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3698 = getelementptr inbounds %struct.GPR, %struct.GPR* %3697, i32 0, i32 33
  %3699 = getelementptr inbounds %struct.Reg, %struct.Reg* %3698, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %3699 to i64*
  %3700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3701 = getelementptr inbounds %struct.GPR, %struct.GPR* %3700, i32 0, i32 1
  %3702 = getelementptr inbounds %struct.Reg, %struct.Reg* %3701, i32 0, i32 0
  %RAX.i1499 = bitcast %union.anon* %3702 to i64*
  %3703 = load i64, i64* %PC.i1498
  %3704 = add i64 %3703, 10
  store i64 %3704, i64* %PC.i1498
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1499, align 8
  store %struct.Memory* %loadMem_480368, %struct.Memory** %MEMORY
  %loadMem_480372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3706 = getelementptr inbounds %struct.GPR, %struct.GPR* %3705, i32 0, i32 33
  %3707 = getelementptr inbounds %struct.Reg, %struct.Reg* %3706, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %3707 to i64*
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3709 = getelementptr inbounds %struct.GPR, %struct.GPR* %3708, i32 0, i32 15
  %3710 = getelementptr inbounds %struct.Reg, %struct.Reg* %3709, i32 0, i32 0
  %RBP.i1496 = bitcast %union.anon* %3710 to i64*
  %3711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3712 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3711, i64 0, i64 1
  %YMM1.i1497 = bitcast %union.VectorReg* %3712 to %"class.std::bitset"*
  %3713 = bitcast %"class.std::bitset"* %YMM1.i1497 to i8*
  %3714 = load i64, i64* %RBP.i1496
  %3715 = sub i64 %3714, 40
  %3716 = load i64, i64* %PC.i1495
  %3717 = add i64 %3716, 5
  store i64 %3717, i64* %PC.i1495
  %3718 = inttoptr i64 %3715 to float*
  %3719 = load float, float* %3718
  %3720 = fpext float %3719 to double
  %3721 = bitcast i8* %3713 to double*
  store double %3720, double* %3721, align 1
  store %struct.Memory* %loadMem_480372, %struct.Memory** %MEMORY
  %loadMem_480377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3723 = getelementptr inbounds %struct.GPR, %struct.GPR* %3722, i32 0, i32 33
  %3724 = getelementptr inbounds %struct.Reg, %struct.Reg* %3723, i32 0, i32 0
  %PC.i1492 = bitcast %union.anon* %3724 to i64*
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3726 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3725, i64 0, i64 2
  %YMM2.i1493 = bitcast %union.VectorReg* %3726 to %"class.std::bitset"*
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3728 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3727, i64 0, i64 0
  %XMM0.i1494 = bitcast %union.VectorReg* %3728 to %union.vec128_t*
  %3729 = bitcast %"class.std::bitset"* %YMM2.i1493 to i8*
  %3730 = bitcast %union.vec128_t* %XMM0.i1494 to i8*
  %3731 = load i64, i64* %PC.i1492
  %3732 = add i64 %3731, 3
  store i64 %3732, i64* %PC.i1492
  %3733 = bitcast i8* %3730 to <2 x i32>*
  %3734 = load <2 x i32>, <2 x i32>* %3733, align 1
  %3735 = getelementptr inbounds i8, i8* %3730, i64 8
  %3736 = bitcast i8* %3735 to <2 x i32>*
  %3737 = load <2 x i32>, <2 x i32>* %3736, align 1
  %3738 = extractelement <2 x i32> %3734, i32 0
  %3739 = bitcast i8* %3729 to i32*
  store i32 %3738, i32* %3739, align 1
  %3740 = extractelement <2 x i32> %3734, i32 1
  %3741 = getelementptr inbounds i8, i8* %3729, i64 4
  %3742 = bitcast i8* %3741 to i32*
  store i32 %3740, i32* %3742, align 1
  %3743 = extractelement <2 x i32> %3737, i32 0
  %3744 = getelementptr inbounds i8, i8* %3729, i64 8
  %3745 = bitcast i8* %3744 to i32*
  store i32 %3743, i32* %3745, align 1
  %3746 = extractelement <2 x i32> %3737, i32 1
  %3747 = getelementptr inbounds i8, i8* %3729, i64 12
  %3748 = bitcast i8* %3747 to i32*
  store i32 %3746, i32* %3748, align 1
  store %struct.Memory* %loadMem_480377, %struct.Memory** %MEMORY
  %loadMem_48037a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3750 = getelementptr inbounds %struct.GPR, %struct.GPR* %3749, i32 0, i32 33
  %3751 = getelementptr inbounds %struct.Reg, %struct.Reg* %3750, i32 0, i32 0
  %PC.i1489 = bitcast %union.anon* %3751 to i64*
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3753 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3752, i64 0, i64 2
  %YMM2.i1490 = bitcast %union.VectorReg* %3753 to %"class.std::bitset"*
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3755 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3754, i64 0, i64 1
  %XMM1.i1491 = bitcast %union.VectorReg* %3755 to %union.vec128_t*
  %3756 = bitcast %"class.std::bitset"* %YMM2.i1490 to i8*
  %3757 = bitcast %"class.std::bitset"* %YMM2.i1490 to i8*
  %3758 = bitcast %union.vec128_t* %XMM1.i1491 to i8*
  %3759 = load i64, i64* %PC.i1489
  %3760 = add i64 %3759, 4
  store i64 %3760, i64* %PC.i1489
  %3761 = bitcast i8* %3757 to double*
  %3762 = load double, double* %3761, align 1
  %3763 = getelementptr inbounds i8, i8* %3757, i64 8
  %3764 = bitcast i8* %3763 to i64*
  %3765 = load i64, i64* %3764, align 1
  %3766 = bitcast i8* %3758 to double*
  %3767 = load double, double* %3766, align 1
  %3768 = fmul double %3762, %3767
  %3769 = bitcast i8* %3756 to double*
  store double %3768, double* %3769, align 1
  %3770 = getelementptr inbounds i8, i8* %3756, i64 8
  %3771 = bitcast i8* %3770 to i64*
  store i64 %3765, i64* %3771, align 1
  store %struct.Memory* %loadMem_48037a, %struct.Memory** %MEMORY
  %loadMem_48037e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3773 = getelementptr inbounds %struct.GPR, %struct.GPR* %3772, i32 0, i32 33
  %3774 = getelementptr inbounds %struct.Reg, %struct.Reg* %3773, i32 0, i32 0
  %PC.i1486 = bitcast %union.anon* %3774 to i64*
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3776 = getelementptr inbounds %struct.GPR, %struct.GPR* %3775, i32 0, i32 5
  %3777 = getelementptr inbounds %struct.Reg, %struct.Reg* %3776, i32 0, i32 0
  %RCX.i1487 = bitcast %union.anon* %3777 to i64*
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3779 = getelementptr inbounds %struct.GPR, %struct.GPR* %3778, i32 0, i32 15
  %3780 = getelementptr inbounds %struct.Reg, %struct.Reg* %3779, i32 0, i32 0
  %RBP.i1488 = bitcast %union.anon* %3780 to i64*
  %3781 = load i64, i64* %RBP.i1488
  %3782 = sub i64 %3781, 8
  %3783 = load i64, i64* %PC.i1486
  %3784 = add i64 %3783, 4
  store i64 %3784, i64* %PC.i1486
  %3785 = inttoptr i64 %3782 to i32*
  %3786 = load i32, i32* %3785
  %3787 = sext i32 %3786 to i64
  store i64 %3787, i64* %RCX.i1487, align 8
  store %struct.Memory* %loadMem_48037e, %struct.Memory** %MEMORY
  %loadMem_480382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3789 = getelementptr inbounds %struct.GPR, %struct.GPR* %3788, i32 0, i32 33
  %3790 = getelementptr inbounds %struct.Reg, %struct.Reg* %3789, i32 0, i32 0
  %PC.i1484 = bitcast %union.anon* %3790 to i64*
  %3791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3792 = getelementptr inbounds %struct.GPR, %struct.GPR* %3791, i32 0, i32 5
  %3793 = getelementptr inbounds %struct.Reg, %struct.Reg* %3792, i32 0, i32 0
  %RCX.i1485 = bitcast %union.anon* %3793 to i64*
  %3794 = load i64, i64* %RCX.i1485
  %3795 = load i64, i64* %PC.i1484
  %3796 = add i64 %3795, 7
  store i64 %3796, i64* %PC.i1484
  %3797 = sext i64 %3794 to i128
  %3798 = and i128 %3797, -18446744073709551616
  %3799 = zext i64 %3794 to i128
  %3800 = or i128 %3798, %3799
  %3801 = mul i128 564, %3800
  %3802 = trunc i128 %3801 to i64
  store i64 %3802, i64* %RCX.i1485, align 8
  %3803 = sext i64 %3802 to i128
  %3804 = icmp ne i128 %3803, %3801
  %3805 = zext i1 %3804 to i8
  %3806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3805, i8* %3806, align 1
  %3807 = trunc i128 %3801 to i32
  %3808 = and i32 %3807, 255
  %3809 = call i32 @llvm.ctpop.i32(i32 %3808)
  %3810 = trunc i32 %3809 to i8
  %3811 = and i8 %3810, 1
  %3812 = xor i8 %3811, 1
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3812, i8* %3813, align 1
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3814, align 1
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3815, align 1
  %3816 = lshr i64 %3802, 63
  %3817 = trunc i64 %3816 to i8
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3817, i8* %3818, align 1
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3805, i8* %3819, align 1
  store %struct.Memory* %loadMem_480382, %struct.Memory** %MEMORY
  %loadMem_480389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3821 = getelementptr inbounds %struct.GPR, %struct.GPR* %3820, i32 0, i32 33
  %3822 = getelementptr inbounds %struct.Reg, %struct.Reg* %3821, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %3822 to i64*
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3824 = getelementptr inbounds %struct.GPR, %struct.GPR* %3823, i32 0, i32 1
  %3825 = getelementptr inbounds %struct.Reg, %struct.Reg* %3824, i32 0, i32 0
  %RAX.i1482 = bitcast %union.anon* %3825 to i64*
  %3826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3827 = getelementptr inbounds %struct.GPR, %struct.GPR* %3826, i32 0, i32 5
  %3828 = getelementptr inbounds %struct.Reg, %struct.Reg* %3827, i32 0, i32 0
  %RCX.i1483 = bitcast %union.anon* %3828 to i64*
  %3829 = load i64, i64* %RAX.i1482
  %3830 = load i64, i64* %RCX.i1483
  %3831 = load i64, i64* %PC.i1481
  %3832 = add i64 %3831, 3
  store i64 %3832, i64* %PC.i1481
  %3833 = add i64 %3830, %3829
  store i64 %3833, i64* %RAX.i1482, align 8
  %3834 = icmp ult i64 %3833, %3829
  %3835 = icmp ult i64 %3833, %3830
  %3836 = or i1 %3834, %3835
  %3837 = zext i1 %3836 to i8
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3837, i8* %3838, align 1
  %3839 = trunc i64 %3833 to i32
  %3840 = and i32 %3839, 255
  %3841 = call i32 @llvm.ctpop.i32(i32 %3840)
  %3842 = trunc i32 %3841 to i8
  %3843 = and i8 %3842, 1
  %3844 = xor i8 %3843, 1
  %3845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3844, i8* %3845, align 1
  %3846 = xor i64 %3830, %3829
  %3847 = xor i64 %3846, %3833
  %3848 = lshr i64 %3847, 4
  %3849 = trunc i64 %3848 to i8
  %3850 = and i8 %3849, 1
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3850, i8* %3851, align 1
  %3852 = icmp eq i64 %3833, 0
  %3853 = zext i1 %3852 to i8
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3853, i8* %3854, align 1
  %3855 = lshr i64 %3833, 63
  %3856 = trunc i64 %3855 to i8
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3856, i8* %3857, align 1
  %3858 = lshr i64 %3829, 63
  %3859 = lshr i64 %3830, 63
  %3860 = xor i64 %3855, %3858
  %3861 = xor i64 %3855, %3859
  %3862 = add i64 %3860, %3861
  %3863 = icmp eq i64 %3862, 2
  %3864 = zext i1 %3863 to i8
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3864, i8* %3865, align 1
  store %struct.Memory* %loadMem_480389, %struct.Memory** %MEMORY
  %loadMem_48038c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3867 = getelementptr inbounds %struct.GPR, %struct.GPR* %3866, i32 0, i32 33
  %3868 = getelementptr inbounds %struct.Reg, %struct.Reg* %3867, i32 0, i32 0
  %PC.i1478 = bitcast %union.anon* %3868 to i64*
  %3869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3870 = getelementptr inbounds %struct.GPR, %struct.GPR* %3869, i32 0, i32 1
  %3871 = getelementptr inbounds %struct.Reg, %struct.Reg* %3870, i32 0, i32 0
  %RAX.i1479 = bitcast %union.anon* %3871 to i64*
  %3872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3873 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3872, i64 0, i64 1
  %YMM1.i1480 = bitcast %union.VectorReg* %3873 to %"class.std::bitset"*
  %3874 = bitcast %"class.std::bitset"* %YMM1.i1480 to i8*
  %3875 = load i64, i64* %RAX.i1479
  %3876 = add i64 %3875, 44
  %3877 = load i64, i64* %PC.i1478
  %3878 = add i64 %3877, 5
  store i64 %3878, i64* %PC.i1478
  %3879 = inttoptr i64 %3876 to float*
  %3880 = load float, float* %3879
  %3881 = fpext float %3880 to double
  %3882 = bitcast i8* %3874 to double*
  store double %3881, double* %3882, align 1
  store %struct.Memory* %loadMem_48038c, %struct.Memory** %MEMORY
  %loadMem_480391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3884 = getelementptr inbounds %struct.GPR, %struct.GPR* %3883, i32 0, i32 33
  %3885 = getelementptr inbounds %struct.Reg, %struct.Reg* %3884, i32 0, i32 0
  %PC.i1475 = bitcast %union.anon* %3885 to i64*
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3887 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3886, i64 0, i64 0
  %YMM0.i1476 = bitcast %union.VectorReg* %3887 to %"class.std::bitset"*
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3889 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3888, i64 0, i64 1
  %XMM1.i1477 = bitcast %union.VectorReg* %3889 to %union.vec128_t*
  %3890 = bitcast %"class.std::bitset"* %YMM0.i1476 to i8*
  %3891 = bitcast %"class.std::bitset"* %YMM0.i1476 to i8*
  %3892 = bitcast %union.vec128_t* %XMM1.i1477 to i8*
  %3893 = load i64, i64* %PC.i1475
  %3894 = add i64 %3893, 4
  store i64 %3894, i64* %PC.i1475
  %3895 = bitcast i8* %3891 to double*
  %3896 = load double, double* %3895, align 1
  %3897 = getelementptr inbounds i8, i8* %3891, i64 8
  %3898 = bitcast i8* %3897 to i64*
  %3899 = load i64, i64* %3898, align 1
  %3900 = bitcast i8* %3892 to double*
  %3901 = load double, double* %3900, align 1
  %3902 = fmul double %3896, %3901
  %3903 = bitcast i8* %3890 to double*
  store double %3902, double* %3903, align 1
  %3904 = getelementptr inbounds i8, i8* %3890, i64 8
  %3905 = bitcast i8* %3904 to i64*
  store i64 %3899, i64* %3905, align 1
  store %struct.Memory* %loadMem_480391, %struct.Memory** %MEMORY
  %loadMem_480395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3907 = getelementptr inbounds %struct.GPR, %struct.GPR* %3906, i32 0, i32 33
  %3908 = getelementptr inbounds %struct.Reg, %struct.Reg* %3907, i32 0, i32 0
  %PC.i1472 = bitcast %union.anon* %3908 to i64*
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3910 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3909, i64 0, i64 2
  %YMM2.i1473 = bitcast %union.VectorReg* %3910 to %"class.std::bitset"*
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3912 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3911, i64 0, i64 0
  %XMM0.i1474 = bitcast %union.VectorReg* %3912 to %union.vec128_t*
  %3913 = bitcast %"class.std::bitset"* %YMM2.i1473 to i8*
  %3914 = bitcast %"class.std::bitset"* %YMM2.i1473 to i8*
  %3915 = bitcast %union.vec128_t* %XMM0.i1474 to i8*
  %3916 = load i64, i64* %PC.i1472
  %3917 = add i64 %3916, 4
  store i64 %3917, i64* %PC.i1472
  %3918 = bitcast i8* %3914 to double*
  %3919 = load double, double* %3918, align 1
  %3920 = getelementptr inbounds i8, i8* %3914, i64 8
  %3921 = bitcast i8* %3920 to i64*
  %3922 = load i64, i64* %3921, align 1
  %3923 = bitcast i8* %3915 to double*
  %3924 = load double, double* %3923, align 1
  %3925 = fadd double %3919, %3924
  %3926 = bitcast i8* %3913 to double*
  store double %3925, double* %3926, align 1
  %3927 = getelementptr inbounds i8, i8* %3913, i64 8
  %3928 = bitcast i8* %3927 to i64*
  store i64 %3922, i64* %3928, align 1
  store %struct.Memory* %loadMem_480395, %struct.Memory** %MEMORY
  %loadMem_480399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3930 = getelementptr inbounds %struct.GPR, %struct.GPR* %3929, i32 0, i32 33
  %3931 = getelementptr inbounds %struct.Reg, %struct.Reg* %3930, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %3931 to i64*
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3933 = getelementptr inbounds %struct.GPR, %struct.GPR* %3932, i32 0, i32 15
  %3934 = getelementptr inbounds %struct.Reg, %struct.Reg* %3933, i32 0, i32 0
  %RBP.i1470 = bitcast %union.anon* %3934 to i64*
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3936 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3935, i64 0, i64 2
  %XMM2.i1471 = bitcast %union.VectorReg* %3936 to %union.vec128_t*
  %3937 = load i64, i64* %RBP.i1470
  %3938 = sub i64 %3937, 96
  %3939 = bitcast %union.vec128_t* %XMM2.i1471 to i8*
  %3940 = load i64, i64* %PC.i1469
  %3941 = add i64 %3940, 5
  store i64 %3941, i64* %PC.i1469
  %3942 = bitcast i8* %3939 to double*
  %3943 = load double, double* %3942, align 1
  %3944 = inttoptr i64 %3938 to double*
  store double %3943, double* %3944
  store %struct.Memory* %loadMem_480399, %struct.Memory** %MEMORY
  %loadMem_48039e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3946 = getelementptr inbounds %struct.GPR, %struct.GPR* %3945, i32 0, i32 33
  %3947 = getelementptr inbounds %struct.Reg, %struct.Reg* %3946, i32 0, i32 0
  %PC.i1468 = bitcast %union.anon* %3947 to i64*
  %3948 = load i64, i64* %PC.i1468
  %3949 = add i64 %3948, 36
  %3950 = load i64, i64* %PC.i1468
  %3951 = add i64 %3950, 5
  store i64 %3951, i64* %PC.i1468
  %3952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3949, i64* %3952, align 8
  store %struct.Memory* %loadMem_48039e, %struct.Memory** %MEMORY
  br label %block_.L_4803c2

block_.L_4803a3:                                  ; preds = %routine_ucomisd__xmm3___xmm0.exit1506
  %loadMem_4803a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3954 = getelementptr inbounds %struct.GPR, %struct.GPR* %3953, i32 0, i32 33
  %3955 = getelementptr inbounds %struct.Reg, %struct.Reg* %3954, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %3955 to i64*
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3957 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3956, i64 0, i64 0
  %YMM0.i1467 = bitcast %union.VectorReg* %3957 to %"class.std::bitset"*
  %3958 = bitcast %"class.std::bitset"* %YMM0.i1467 to i8*
  %3959 = load i64, i64* %PC.i1466
  %3960 = add i64 %3959, ptrtoint (%G_0x62bb5__rip__type* @G_0x62bb5__rip_ to i64)
  %3961 = load i64, i64* %PC.i1466
  %3962 = add i64 %3961, 8
  store i64 %3962, i64* %PC.i1466
  %3963 = inttoptr i64 %3960 to double*
  %3964 = load double, double* %3963
  %3965 = bitcast i8* %3958 to double*
  store double %3964, double* %3965, align 1
  %3966 = getelementptr inbounds i8, i8* %3958, i64 8
  %3967 = bitcast i8* %3966 to double*
  store double 0.000000e+00, double* %3967, align 1
  store %struct.Memory* %loadMem_4803a3, %struct.Memory** %MEMORY
  %loadMem_4803ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3969 = getelementptr inbounds %struct.GPR, %struct.GPR* %3968, i32 0, i32 33
  %3970 = getelementptr inbounds %struct.Reg, %struct.Reg* %3969, i32 0, i32 0
  %PC.i1463 = bitcast %union.anon* %3970 to i64*
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3972 = getelementptr inbounds %struct.GPR, %struct.GPR* %3971, i32 0, i32 15
  %3973 = getelementptr inbounds %struct.Reg, %struct.Reg* %3972, i32 0, i32 0
  %RBP.i1464 = bitcast %union.anon* %3973 to i64*
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3975 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3974, i64 0, i64 1
  %YMM1.i1465 = bitcast %union.VectorReg* %3975 to %"class.std::bitset"*
  %3976 = bitcast %"class.std::bitset"* %YMM1.i1465 to i8*
  %3977 = load i64, i64* %RBP.i1464
  %3978 = sub i64 %3977, 24
  %3979 = load i64, i64* %PC.i1463
  %3980 = add i64 %3979, 5
  store i64 %3980, i64* %PC.i1463
  %3981 = inttoptr i64 %3978 to float*
  %3982 = load float, float* %3981
  %3983 = fpext float %3982 to double
  %3984 = bitcast i8* %3976 to double*
  store double %3983, double* %3984, align 1
  store %struct.Memory* %loadMem_4803ab, %struct.Memory** %MEMORY
  %loadMem_4803b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 33
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %PC.i1460 = bitcast %union.anon* %3987 to i64*
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3989 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3988, i64 0, i64 0
  %YMM0.i1461 = bitcast %union.VectorReg* %3989 to %"class.std::bitset"*
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3991 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3990, i64 0, i64 1
  %XMM1.i1462 = bitcast %union.VectorReg* %3991 to %union.vec128_t*
  %3992 = bitcast %"class.std::bitset"* %YMM0.i1461 to i8*
  %3993 = bitcast %"class.std::bitset"* %YMM0.i1461 to i8*
  %3994 = bitcast %union.vec128_t* %XMM1.i1462 to i8*
  %3995 = load i64, i64* %PC.i1460
  %3996 = add i64 %3995, 4
  store i64 %3996, i64* %PC.i1460
  %3997 = bitcast i8* %3993 to double*
  %3998 = load double, double* %3997, align 1
  %3999 = getelementptr inbounds i8, i8* %3993, i64 8
  %4000 = bitcast i8* %3999 to i64*
  %4001 = load i64, i64* %4000, align 1
  %4002 = bitcast i8* %3994 to double*
  %4003 = load double, double* %4002, align 1
  %4004 = fmul double %3998, %4003
  %4005 = bitcast i8* %3992 to double*
  store double %4004, double* %4005, align 1
  %4006 = getelementptr inbounds i8, i8* %3992, i64 8
  %4007 = bitcast i8* %4006 to i64*
  store i64 %4001, i64* %4007, align 1
  store %struct.Memory* %loadMem_4803b0, %struct.Memory** %MEMORY
  %loadMem_4803b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4009 = getelementptr inbounds %struct.GPR, %struct.GPR* %4008, i32 0, i32 33
  %4010 = getelementptr inbounds %struct.Reg, %struct.Reg* %4009, i32 0, i32 0
  %PC.i1457 = bitcast %union.anon* %4010 to i64*
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4012 = getelementptr inbounds %struct.GPR, %struct.GPR* %4011, i32 0, i32 15
  %4013 = getelementptr inbounds %struct.Reg, %struct.Reg* %4012, i32 0, i32 0
  %RBP.i1458 = bitcast %union.anon* %4013 to i64*
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4015 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4014, i64 0, i64 1
  %YMM1.i1459 = bitcast %union.VectorReg* %4015 to %"class.std::bitset"*
  %4016 = bitcast %"class.std::bitset"* %YMM1.i1459 to i8*
  %4017 = load i64, i64* %RBP.i1458
  %4018 = sub i64 %4017, 40
  %4019 = load i64, i64* %PC.i1457
  %4020 = add i64 %4019, 5
  store i64 %4020, i64* %PC.i1457
  %4021 = inttoptr i64 %4018 to float*
  %4022 = load float, float* %4021
  %4023 = fpext float %4022 to double
  %4024 = bitcast i8* %4016 to double*
  store double %4023, double* %4024, align 1
  store %struct.Memory* %loadMem_4803b4, %struct.Memory** %MEMORY
  %loadMem_4803b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4026 = getelementptr inbounds %struct.GPR, %struct.GPR* %4025, i32 0, i32 33
  %4027 = getelementptr inbounds %struct.Reg, %struct.Reg* %4026, i32 0, i32 0
  %PC.i1454 = bitcast %union.anon* %4027 to i64*
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4029 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4028, i64 0, i64 0
  %YMM0.i1455 = bitcast %union.VectorReg* %4029 to %"class.std::bitset"*
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4031 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4030, i64 0, i64 1
  %XMM1.i1456 = bitcast %union.VectorReg* %4031 to %union.vec128_t*
  %4032 = bitcast %"class.std::bitset"* %YMM0.i1455 to i8*
  %4033 = bitcast %"class.std::bitset"* %YMM0.i1455 to i8*
  %4034 = bitcast %union.vec128_t* %XMM1.i1456 to i8*
  %4035 = load i64, i64* %PC.i1454
  %4036 = add i64 %4035, 4
  store i64 %4036, i64* %PC.i1454
  %4037 = bitcast i8* %4033 to double*
  %4038 = load double, double* %4037, align 1
  %4039 = getelementptr inbounds i8, i8* %4033, i64 8
  %4040 = bitcast i8* %4039 to i64*
  %4041 = load i64, i64* %4040, align 1
  %4042 = bitcast i8* %4034 to double*
  %4043 = load double, double* %4042, align 1
  %4044 = fadd double %4038, %4043
  %4045 = bitcast i8* %4032 to double*
  store double %4044, double* %4045, align 1
  %4046 = getelementptr inbounds i8, i8* %4032, i64 8
  %4047 = bitcast i8* %4046 to i64*
  store i64 %4041, i64* %4047, align 1
  store %struct.Memory* %loadMem_4803b9, %struct.Memory** %MEMORY
  %loadMem_4803bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4049 = getelementptr inbounds %struct.GPR, %struct.GPR* %4048, i32 0, i32 33
  %4050 = getelementptr inbounds %struct.Reg, %struct.Reg* %4049, i32 0, i32 0
  %PC.i1451 = bitcast %union.anon* %4050 to i64*
  %4051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4052 = getelementptr inbounds %struct.GPR, %struct.GPR* %4051, i32 0, i32 15
  %4053 = getelementptr inbounds %struct.Reg, %struct.Reg* %4052, i32 0, i32 0
  %RBP.i1452 = bitcast %union.anon* %4053 to i64*
  %4054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4055 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4054, i64 0, i64 0
  %XMM0.i1453 = bitcast %union.VectorReg* %4055 to %union.vec128_t*
  %4056 = load i64, i64* %RBP.i1452
  %4057 = sub i64 %4056, 96
  %4058 = bitcast %union.vec128_t* %XMM0.i1453 to i8*
  %4059 = load i64, i64* %PC.i1451
  %4060 = add i64 %4059, 5
  store i64 %4060, i64* %PC.i1451
  %4061 = bitcast i8* %4058 to double*
  %4062 = load double, double* %4061, align 1
  %4063 = inttoptr i64 %4057 to double*
  store double %4062, double* %4063
  store %struct.Memory* %loadMem_4803bd, %struct.Memory** %MEMORY
  br label %block_.L_4803c2

block_.L_4803c2:                                  ; preds = %block_.L_4803a3, %block_480360
  %loadMem_4803c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4065 = getelementptr inbounds %struct.GPR, %struct.GPR* %4064, i32 0, i32 33
  %4066 = getelementptr inbounds %struct.Reg, %struct.Reg* %4065, i32 0, i32 0
  %PC.i1448 = bitcast %union.anon* %4066 to i64*
  %4067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4068 = getelementptr inbounds %struct.GPR, %struct.GPR* %4067, i32 0, i32 15
  %4069 = getelementptr inbounds %struct.Reg, %struct.Reg* %4068, i32 0, i32 0
  %RBP.i1449 = bitcast %union.anon* %4069 to i64*
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4071 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4070, i64 0, i64 0
  %YMM0.i1450 = bitcast %union.VectorReg* %4071 to %"class.std::bitset"*
  %4072 = bitcast %"class.std::bitset"* %YMM0.i1450 to i8*
  %4073 = load i64, i64* %RBP.i1449
  %4074 = sub i64 %4073, 96
  %4075 = load i64, i64* %PC.i1448
  %4076 = add i64 %4075, 5
  store i64 %4076, i64* %PC.i1448
  %4077 = inttoptr i64 %4074 to double*
  %4078 = load double, double* %4077
  %4079 = bitcast i8* %4072 to double*
  store double %4078, double* %4079, align 1
  %4080 = getelementptr inbounds i8, i8* %4072, i64 8
  %4081 = bitcast i8* %4080 to double*
  store double 0.000000e+00, double* %4081, align 1
  store %struct.Memory* %loadMem_4803c2, %struct.Memory** %MEMORY
  %loadMem_4803c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4083 = getelementptr inbounds %struct.GPR, %struct.GPR* %4082, i32 0, i32 33
  %4084 = getelementptr inbounds %struct.Reg, %struct.Reg* %4083, i32 0, i32 0
  %PC.i1446 = bitcast %union.anon* %4084 to i64*
  %4085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4086 = getelementptr inbounds %struct.GPR, %struct.GPR* %4085, i32 0, i32 1
  %4087 = getelementptr inbounds %struct.Reg, %struct.Reg* %4086, i32 0, i32 0
  %RAX.i1447 = bitcast %union.anon* %4087 to i64*
  %4088 = load i64, i64* %PC.i1446
  %4089 = add i64 %4088, 10
  store i64 %4089, i64* %PC.i1446
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1447, align 8
  store %struct.Memory* %loadMem_4803c7, %struct.Memory** %MEMORY
  %loadMem_4803d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4091 = getelementptr inbounds %struct.GPR, %struct.GPR* %4090, i32 0, i32 33
  %4092 = getelementptr inbounds %struct.Reg, %struct.Reg* %4091, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %4092 to i64*
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4094 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4093, i64 0, i64 1
  %YMM1.i1445 = bitcast %union.VectorReg* %4094 to %"class.std::bitset"*
  %4095 = bitcast %"class.std::bitset"* %YMM1.i1445 to i8*
  %4096 = load i64, i64* %PC.i1444
  %4097 = add i64 %4096, ptrtoint (%G_0x62caf__rip__type* @G_0x62caf__rip_ to i64)
  %4098 = load i64, i64* %PC.i1444
  %4099 = add i64 %4098, 8
  store i64 %4099, i64* %PC.i1444
  %4100 = inttoptr i64 %4097 to double*
  %4101 = load double, double* %4100
  %4102 = bitcast i8* %4095 to double*
  store double %4101, double* %4102, align 1
  %4103 = getelementptr inbounds i8, i8* %4095, i64 8
  %4104 = bitcast i8* %4103 to double*
  store double 0.000000e+00, double* %4104, align 1
  store %struct.Memory* %loadMem_4803d1, %struct.Memory** %MEMORY
  %loadMem_4803d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4106 = getelementptr inbounds %struct.GPR, %struct.GPR* %4105, i32 0, i32 33
  %4107 = getelementptr inbounds %struct.Reg, %struct.Reg* %4106, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %4107 to i64*
  %4108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4109 = getelementptr inbounds %struct.GPR, %struct.GPR* %4108, i32 0, i32 15
  %4110 = getelementptr inbounds %struct.Reg, %struct.Reg* %4109, i32 0, i32 0
  %RBP.i1442 = bitcast %union.anon* %4110 to i64*
  %4111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4112 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4111, i64 0, i64 2
  %YMM2.i1443 = bitcast %union.VectorReg* %4112 to %"class.std::bitset"*
  %4113 = bitcast %"class.std::bitset"* %YMM2.i1443 to i8*
  %4114 = load i64, i64* %RBP.i1442
  %4115 = sub i64 %4114, 24
  %4116 = load i64, i64* %PC.i1441
  %4117 = add i64 %4116, 5
  store i64 %4117, i64* %PC.i1441
  %4118 = inttoptr i64 %4115 to float*
  %4119 = load float, float* %4118
  %4120 = fpext float %4119 to double
  %4121 = bitcast i8* %4113 to double*
  store double %4120, double* %4121, align 1
  store %struct.Memory* %loadMem_4803d9, %struct.Memory** %MEMORY
  %loadMem_4803de = load %struct.Memory*, %struct.Memory** %MEMORY
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4123 = getelementptr inbounds %struct.GPR, %struct.GPR* %4122, i32 0, i32 33
  %4124 = getelementptr inbounds %struct.Reg, %struct.Reg* %4123, i32 0, i32 0
  %PC.i1438 = bitcast %union.anon* %4124 to i64*
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4126 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4125, i64 0, i64 1
  %YMM1.i1439 = bitcast %union.VectorReg* %4126 to %"class.std::bitset"*
  %4127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4128 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4127, i64 0, i64 2
  %XMM2.i1440 = bitcast %union.VectorReg* %4128 to %union.vec128_t*
  %4129 = bitcast %"class.std::bitset"* %YMM1.i1439 to i8*
  %4130 = bitcast %"class.std::bitset"* %YMM1.i1439 to i8*
  %4131 = bitcast %union.vec128_t* %XMM2.i1440 to i8*
  %4132 = load i64, i64* %PC.i1438
  %4133 = add i64 %4132, 4
  store i64 %4133, i64* %PC.i1438
  %4134 = bitcast i8* %4130 to double*
  %4135 = load double, double* %4134, align 1
  %4136 = getelementptr inbounds i8, i8* %4130, i64 8
  %4137 = bitcast i8* %4136 to i64*
  %4138 = load i64, i64* %4137, align 1
  %4139 = bitcast i8* %4131 to double*
  %4140 = load double, double* %4139, align 1
  %4141 = fmul double %4135, %4140
  %4142 = bitcast i8* %4129 to double*
  store double %4141, double* %4142, align 1
  %4143 = getelementptr inbounds i8, i8* %4129, i64 8
  %4144 = bitcast i8* %4143 to i64*
  store i64 %4138, i64* %4144, align 1
  store %struct.Memory* %loadMem_4803de, %struct.Memory** %MEMORY
  %loadMem_4803e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4146 = getelementptr inbounds %struct.GPR, %struct.GPR* %4145, i32 0, i32 33
  %4147 = getelementptr inbounds %struct.Reg, %struct.Reg* %4146, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %4147 to i64*
  %4148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4149 = getelementptr inbounds %struct.GPR, %struct.GPR* %4148, i32 0, i32 5
  %4150 = getelementptr inbounds %struct.Reg, %struct.Reg* %4149, i32 0, i32 0
  %RCX.i1436 = bitcast %union.anon* %4150 to i64*
  %4151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4152 = getelementptr inbounds %struct.GPR, %struct.GPR* %4151, i32 0, i32 15
  %4153 = getelementptr inbounds %struct.Reg, %struct.Reg* %4152, i32 0, i32 0
  %RBP.i1437 = bitcast %union.anon* %4153 to i64*
  %4154 = load i64, i64* %RBP.i1437
  %4155 = sub i64 %4154, 8
  %4156 = load i64, i64* %PC.i1435
  %4157 = add i64 %4156, 4
  store i64 %4157, i64* %PC.i1435
  %4158 = inttoptr i64 %4155 to i32*
  %4159 = load i32, i32* %4158
  %4160 = sext i32 %4159 to i64
  store i64 %4160, i64* %RCX.i1436, align 8
  store %struct.Memory* %loadMem_4803e2, %struct.Memory** %MEMORY
  %loadMem_4803e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4162 = getelementptr inbounds %struct.GPR, %struct.GPR* %4161, i32 0, i32 33
  %4163 = getelementptr inbounds %struct.Reg, %struct.Reg* %4162, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %4163 to i64*
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4165 = getelementptr inbounds %struct.GPR, %struct.GPR* %4164, i32 0, i32 5
  %4166 = getelementptr inbounds %struct.Reg, %struct.Reg* %4165, i32 0, i32 0
  %RCX.i1434 = bitcast %union.anon* %4166 to i64*
  %4167 = load i64, i64* %RCX.i1434
  %4168 = load i64, i64* %PC.i1433
  %4169 = add i64 %4168, 7
  store i64 %4169, i64* %PC.i1433
  %4170 = sext i64 %4167 to i128
  %4171 = and i128 %4170, -18446744073709551616
  %4172 = zext i64 %4167 to i128
  %4173 = or i128 %4171, %4172
  %4174 = mul i128 564, %4173
  %4175 = trunc i128 %4174 to i64
  store i64 %4175, i64* %RCX.i1434, align 8
  %4176 = sext i64 %4175 to i128
  %4177 = icmp ne i128 %4176, %4174
  %4178 = zext i1 %4177 to i8
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4178, i8* %4179, align 1
  %4180 = trunc i128 %4174 to i32
  %4181 = and i32 %4180, 255
  %4182 = call i32 @llvm.ctpop.i32(i32 %4181)
  %4183 = trunc i32 %4182 to i8
  %4184 = and i8 %4183, 1
  %4185 = xor i8 %4184, 1
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4185, i8* %4186, align 1
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4187, align 1
  %4188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4188, align 1
  %4189 = lshr i64 %4175, 63
  %4190 = trunc i64 %4189 to i8
  %4191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4190, i8* %4191, align 1
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4178, i8* %4192, align 1
  store %struct.Memory* %loadMem_4803e6, %struct.Memory** %MEMORY
  %loadMem_4803ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %4193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4194 = getelementptr inbounds %struct.GPR, %struct.GPR* %4193, i32 0, i32 33
  %4195 = getelementptr inbounds %struct.Reg, %struct.Reg* %4194, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %4195 to i64*
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4197 = getelementptr inbounds %struct.GPR, %struct.GPR* %4196, i32 0, i32 1
  %4198 = getelementptr inbounds %struct.Reg, %struct.Reg* %4197, i32 0, i32 0
  %RAX.i1431 = bitcast %union.anon* %4198 to i64*
  %4199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4200 = getelementptr inbounds %struct.GPR, %struct.GPR* %4199, i32 0, i32 5
  %4201 = getelementptr inbounds %struct.Reg, %struct.Reg* %4200, i32 0, i32 0
  %RCX.i1432 = bitcast %union.anon* %4201 to i64*
  %4202 = load i64, i64* %RAX.i1431
  %4203 = load i64, i64* %RCX.i1432
  %4204 = load i64, i64* %PC.i1430
  %4205 = add i64 %4204, 3
  store i64 %4205, i64* %PC.i1430
  %4206 = add i64 %4203, %4202
  store i64 %4206, i64* %RAX.i1431, align 8
  %4207 = icmp ult i64 %4206, %4202
  %4208 = icmp ult i64 %4206, %4203
  %4209 = or i1 %4207, %4208
  %4210 = zext i1 %4209 to i8
  %4211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4210, i8* %4211, align 1
  %4212 = trunc i64 %4206 to i32
  %4213 = and i32 %4212, 255
  %4214 = call i32 @llvm.ctpop.i32(i32 %4213)
  %4215 = trunc i32 %4214 to i8
  %4216 = and i8 %4215, 1
  %4217 = xor i8 %4216, 1
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4217, i8* %4218, align 1
  %4219 = xor i64 %4203, %4202
  %4220 = xor i64 %4219, %4206
  %4221 = lshr i64 %4220, 4
  %4222 = trunc i64 %4221 to i8
  %4223 = and i8 %4222, 1
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4223, i8* %4224, align 1
  %4225 = icmp eq i64 %4206, 0
  %4226 = zext i1 %4225 to i8
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4226, i8* %4227, align 1
  %4228 = lshr i64 %4206, 63
  %4229 = trunc i64 %4228 to i8
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4229, i8* %4230, align 1
  %4231 = lshr i64 %4202, 63
  %4232 = lshr i64 %4203, 63
  %4233 = xor i64 %4228, %4231
  %4234 = xor i64 %4228, %4232
  %4235 = add i64 %4233, %4234
  %4236 = icmp eq i64 %4235, 2
  %4237 = zext i1 %4236 to i8
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4237, i8* %4238, align 1
  store %struct.Memory* %loadMem_4803ed, %struct.Memory** %MEMORY
  %loadMem_4803f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4240 = getelementptr inbounds %struct.GPR, %struct.GPR* %4239, i32 0, i32 33
  %4241 = getelementptr inbounds %struct.Reg, %struct.Reg* %4240, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %4241 to i64*
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4243 = getelementptr inbounds %struct.GPR, %struct.GPR* %4242, i32 0, i32 1
  %4244 = getelementptr inbounds %struct.Reg, %struct.Reg* %4243, i32 0, i32 0
  %RAX.i1428 = bitcast %union.anon* %4244 to i64*
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4246 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4245, i64 0, i64 2
  %YMM2.i1429 = bitcast %union.VectorReg* %4246 to %"class.std::bitset"*
  %4247 = bitcast %"class.std::bitset"* %YMM2.i1429 to i8*
  %4248 = load i64, i64* %RAX.i1428
  %4249 = add i64 %4248, 44
  %4250 = load i64, i64* %PC.i1427
  %4251 = add i64 %4250, 5
  store i64 %4251, i64* %PC.i1427
  %4252 = inttoptr i64 %4249 to float*
  %4253 = load float, float* %4252
  %4254 = fpext float %4253 to double
  %4255 = bitcast i8* %4247 to double*
  store double %4254, double* %4255, align 1
  store %struct.Memory* %loadMem_4803f0, %struct.Memory** %MEMORY
  %loadMem_4803f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4257 = getelementptr inbounds %struct.GPR, %struct.GPR* %4256, i32 0, i32 33
  %4258 = getelementptr inbounds %struct.Reg, %struct.Reg* %4257, i32 0, i32 0
  %PC.i1424 = bitcast %union.anon* %4258 to i64*
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4260 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4259, i64 0, i64 1
  %YMM1.i1425 = bitcast %union.VectorReg* %4260 to %"class.std::bitset"*
  %4261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4262 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4261, i64 0, i64 2
  %XMM2.i1426 = bitcast %union.VectorReg* %4262 to %union.vec128_t*
  %4263 = bitcast %"class.std::bitset"* %YMM1.i1425 to i8*
  %4264 = bitcast %"class.std::bitset"* %YMM1.i1425 to i8*
  %4265 = bitcast %union.vec128_t* %XMM2.i1426 to i8*
  %4266 = load i64, i64* %PC.i1424
  %4267 = add i64 %4266, 4
  store i64 %4267, i64* %PC.i1424
  %4268 = bitcast i8* %4264 to double*
  %4269 = load double, double* %4268, align 1
  %4270 = getelementptr inbounds i8, i8* %4264, i64 8
  %4271 = bitcast i8* %4270 to i64*
  %4272 = load i64, i64* %4271, align 1
  %4273 = bitcast i8* %4265 to double*
  %4274 = load double, double* %4273, align 1
  %4275 = fadd double %4269, %4274
  %4276 = bitcast i8* %4263 to double*
  store double %4275, double* %4276, align 1
  %4277 = getelementptr inbounds i8, i8* %4263, i64 8
  %4278 = bitcast i8* %4277 to i64*
  store i64 %4272, i64* %4278, align 1
  store %struct.Memory* %loadMem_4803f5, %struct.Memory** %MEMORY
  %loadMem_4803f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4280 = getelementptr inbounds %struct.GPR, %struct.GPR* %4279, i32 0, i32 33
  %4281 = getelementptr inbounds %struct.Reg, %struct.Reg* %4280, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %4281 to i64*
  %4282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4282, i64 0, i64 0
  %XMM0.i1420 = bitcast %union.VectorReg* %4283 to %union.vec128_t*
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4284, i64 0, i64 1
  %XMM1.i1421 = bitcast %union.VectorReg* %4285 to %union.vec128_t*
  %4286 = bitcast %union.vec128_t* %XMM1.i1421 to i8*
  %4287 = bitcast %union.vec128_t* %XMM0.i1420 to i8*
  %4288 = load i64, i64* %PC.i1419
  %4289 = add i64 %4288, 4
  store i64 %4289, i64* %PC.i1419
  %4290 = bitcast i8* %4286 to double*
  %4291 = load double, double* %4290, align 1
  %4292 = bitcast i8* %4287 to double*
  %4293 = load double, double* %4292, align 1
  %4294 = fcmp uno double %4291, %4293
  br i1 %4294, label %4295, label %4307

; <label>:4295:                                   ; preds = %block_.L_4803c2
  %4296 = fadd double %4291, %4293
  %4297 = bitcast double %4296 to i64
  %4298 = and i64 %4297, 9221120237041090560
  %4299 = icmp eq i64 %4298, 9218868437227405312
  %4300 = and i64 %4297, 2251799813685247
  %4301 = icmp ne i64 %4300, 0
  %4302 = and i1 %4299, %4301
  br i1 %4302, label %4303, label %4313

; <label>:4303:                                   ; preds = %4295
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4305 = load i64, i64* %4304, align 8
  %4306 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4305, %struct.Memory* %loadMem_4803f9)
  br label %routine_ucomisd__xmm0___xmm1.exit1422

; <label>:4307:                                   ; preds = %block_.L_4803c2
  %4308 = fcmp ogt double %4291, %4293
  br i1 %4308, label %4313, label %4309

; <label>:4309:                                   ; preds = %4307
  %4310 = fcmp olt double %4291, %4293
  br i1 %4310, label %4313, label %4311

; <label>:4311:                                   ; preds = %4309
  %4312 = fcmp oeq double %4291, %4293
  br i1 %4312, label %4313, label %4320

; <label>:4313:                                   ; preds = %4311, %4309, %4307, %4295
  %4314 = phi i8 [ 0, %4307 ], [ 0, %4309 ], [ 1, %4311 ], [ 1, %4295 ]
  %4315 = phi i8 [ 0, %4307 ], [ 0, %4309 ], [ 0, %4311 ], [ 1, %4295 ]
  %4316 = phi i8 [ 0, %4307 ], [ 1, %4309 ], [ 0, %4311 ], [ 1, %4295 ]
  %4317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4314, i8* %4317, align 1
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4315, i8* %4318, align 1
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4316, i8* %4319, align 1
  br label %4320

; <label>:4320:                                   ; preds = %4313, %4311
  %4321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4321, align 1
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4322, align 1
  %4323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4323, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit1422

routine_ucomisd__xmm0___xmm1.exit1422:            ; preds = %4303, %4320
  %4324 = phi %struct.Memory* [ %4306, %4303 ], [ %loadMem_4803f9, %4320 ]
  store %struct.Memory* %4324, %struct.Memory** %MEMORY
  %loadMem_4803fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4326 = getelementptr inbounds %struct.GPR, %struct.GPR* %4325, i32 0, i32 33
  %4327 = getelementptr inbounds %struct.Reg, %struct.Reg* %4326, i32 0, i32 0
  %PC.i1418 = bitcast %union.anon* %4327 to i64*
  %4328 = load i64, i64* %PC.i1418
  %4329 = add i64 %4328, 212
  %4330 = load i64, i64* %PC.i1418
  %4331 = add i64 %4330, 6
  %4332 = load i64, i64* %PC.i1418
  %4333 = add i64 %4332, 6
  store i64 %4333, i64* %PC.i1418
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4335 = load i8, i8* %4334, align 1
  %4336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4337 = load i8, i8* %4336, align 1
  %4338 = or i8 %4337, %4335
  %4339 = icmp ne i8 %4338, 0
  %4340 = zext i1 %4339 to i8
  store i8 %4340, i8* %BRANCH_TAKEN, align 1
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4342 = select i1 %4339, i64 %4329, i64 %4331
  store i64 %4342, i64* %4341, align 8
  store %struct.Memory* %loadMem_4803fd, %struct.Memory** %MEMORY
  %loadBr_4803fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4803fd = icmp eq i8 %loadBr_4803fd, 1
  br i1 %cmpBr_4803fd, label %block_.L_4804d1, label %block_480403

block_480403:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit1422
  %loadMem_480403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4344 = getelementptr inbounds %struct.GPR, %struct.GPR* %4343, i32 0, i32 33
  %4345 = getelementptr inbounds %struct.Reg, %struct.Reg* %4344, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %4345 to i64*
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4347 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4346, i64 0, i64 0
  %YMM0.i1417 = bitcast %union.VectorReg* %4347 to %"class.std::bitset"*
  %4348 = bitcast %"class.std::bitset"* %YMM0.i1417 to i8*
  %4349 = load i64, i64* %PC.i1416
  %4350 = add i64 %4349, ptrtoint (%G_0x62b55__rip__type* @G_0x62b55__rip_ to i64)
  %4351 = load i64, i64* %PC.i1416
  %4352 = add i64 %4351, 8
  store i64 %4352, i64* %PC.i1416
  %4353 = inttoptr i64 %4350 to double*
  %4354 = load double, double* %4353
  %4355 = bitcast i8* %4348 to double*
  store double %4354, double* %4355, align 1
  %4356 = getelementptr inbounds i8, i8* %4348, i64 8
  %4357 = bitcast i8* %4356 to double*
  store double 0.000000e+00, double* %4357, align 1
  store %struct.Memory* %loadMem_480403, %struct.Memory** %MEMORY
  %loadMem_48040b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4359 = getelementptr inbounds %struct.GPR, %struct.GPR* %4358, i32 0, i32 33
  %4360 = getelementptr inbounds %struct.Reg, %struct.Reg* %4359, i32 0, i32 0
  %PC.i1414 = bitcast %union.anon* %4360 to i64*
  %4361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4362 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4361, i64 0, i64 1
  %YMM1.i1415 = bitcast %union.VectorReg* %4362 to %"class.std::bitset"*
  %4363 = bitcast %"class.std::bitset"* %YMM1.i1415 to i8*
  %4364 = load i64, i64* %PC.i1414
  %4365 = add i64 %4364, ptrtoint (%G_0x62b75__rip__type* @G_0x62b75__rip_ to i64)
  %4366 = load i64, i64* %PC.i1414
  %4367 = add i64 %4366, 8
  store i64 %4367, i64* %PC.i1414
  %4368 = inttoptr i64 %4365 to double*
  %4369 = load double, double* %4368
  %4370 = bitcast i8* %4363 to double*
  store double %4369, double* %4370, align 1
  %4371 = getelementptr inbounds i8, i8* %4363, i64 8
  %4372 = bitcast i8* %4371 to double*
  store double 0.000000e+00, double* %4372, align 1
  store %struct.Memory* %loadMem_48040b, %struct.Memory** %MEMORY
  %loadMem_480413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4374 = getelementptr inbounds %struct.GPR, %struct.GPR* %4373, i32 0, i32 33
  %4375 = getelementptr inbounds %struct.Reg, %struct.Reg* %4374, i32 0, i32 0
  %PC.i1412 = bitcast %union.anon* %4375 to i64*
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4377 = getelementptr inbounds %struct.GPR, %struct.GPR* %4376, i32 0, i32 1
  %4378 = getelementptr inbounds %struct.Reg, %struct.Reg* %4377, i32 0, i32 0
  %RAX.i1413 = bitcast %union.anon* %4378 to i64*
  %4379 = load i64, i64* %PC.i1412
  %4380 = add i64 %4379, 10
  store i64 %4380, i64* %PC.i1412
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1413, align 8
  store %struct.Memory* %loadMem_480413, %struct.Memory** %MEMORY
  %loadMem_48041d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4382 = getelementptr inbounds %struct.GPR, %struct.GPR* %4381, i32 0, i32 33
  %4383 = getelementptr inbounds %struct.Reg, %struct.Reg* %4382, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %4383 to i64*
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4385 = getelementptr inbounds %struct.GPR, %struct.GPR* %4384, i32 0, i32 15
  %4386 = getelementptr inbounds %struct.Reg, %struct.Reg* %4385, i32 0, i32 0
  %RBP.i1410 = bitcast %union.anon* %4386 to i64*
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4388 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4387, i64 0, i64 2
  %YMM2.i1411 = bitcast %union.VectorReg* %4388 to %"class.std::bitset"*
  %4389 = bitcast %"class.std::bitset"* %YMM2.i1411 to i8*
  %4390 = load i64, i64* %RBP.i1410
  %4391 = sub i64 %4390, 40
  %4392 = load i64, i64* %PC.i1409
  %4393 = add i64 %4392, 5
  store i64 %4393, i64* %PC.i1409
  %4394 = inttoptr i64 %4391 to float*
  %4395 = load float, float* %4394
  %4396 = fpext float %4395 to double
  %4397 = bitcast i8* %4389 to double*
  store double %4396, double* %4397, align 1
  store %struct.Memory* %loadMem_48041d, %struct.Memory** %MEMORY
  %loadMem_480422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4399 = getelementptr inbounds %struct.GPR, %struct.GPR* %4398, i32 0, i32 33
  %4400 = getelementptr inbounds %struct.Reg, %struct.Reg* %4399, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %4400 to i64*
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4402 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4401, i64 0, i64 3
  %YMM3.i1407 = bitcast %union.VectorReg* %4402 to %"class.std::bitset"*
  %4403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4404 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4403, i64 0, i64 1
  %XMM1.i1408 = bitcast %union.VectorReg* %4404 to %union.vec128_t*
  %4405 = bitcast %"class.std::bitset"* %YMM3.i1407 to i8*
  %4406 = bitcast %union.vec128_t* %XMM1.i1408 to i8*
  %4407 = load i64, i64* %PC.i1406
  %4408 = add i64 %4407, 3
  store i64 %4408, i64* %PC.i1406
  %4409 = bitcast i8* %4406 to <2 x i32>*
  %4410 = load <2 x i32>, <2 x i32>* %4409, align 1
  %4411 = getelementptr inbounds i8, i8* %4406, i64 8
  %4412 = bitcast i8* %4411 to <2 x i32>*
  %4413 = load <2 x i32>, <2 x i32>* %4412, align 1
  %4414 = extractelement <2 x i32> %4410, i32 0
  %4415 = bitcast i8* %4405 to i32*
  store i32 %4414, i32* %4415, align 1
  %4416 = extractelement <2 x i32> %4410, i32 1
  %4417 = getelementptr inbounds i8, i8* %4405, i64 4
  %4418 = bitcast i8* %4417 to i32*
  store i32 %4416, i32* %4418, align 1
  %4419 = extractelement <2 x i32> %4413, i32 0
  %4420 = getelementptr inbounds i8, i8* %4405, i64 8
  %4421 = bitcast i8* %4420 to i32*
  store i32 %4419, i32* %4421, align 1
  %4422 = extractelement <2 x i32> %4413, i32 1
  %4423 = getelementptr inbounds i8, i8* %4405, i64 12
  %4424 = bitcast i8* %4423 to i32*
  store i32 %4422, i32* %4424, align 1
  store %struct.Memory* %loadMem_480422, %struct.Memory** %MEMORY
  %loadMem_480425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4426 = getelementptr inbounds %struct.GPR, %struct.GPR* %4425, i32 0, i32 33
  %4427 = getelementptr inbounds %struct.Reg, %struct.Reg* %4426, i32 0, i32 0
  %PC.i1403 = bitcast %union.anon* %4427 to i64*
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4429 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4428, i64 0, i64 3
  %YMM3.i1404 = bitcast %union.VectorReg* %4429 to %"class.std::bitset"*
  %4430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4431 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4430, i64 0, i64 2
  %XMM2.i1405 = bitcast %union.VectorReg* %4431 to %union.vec128_t*
  %4432 = bitcast %"class.std::bitset"* %YMM3.i1404 to i8*
  %4433 = bitcast %"class.std::bitset"* %YMM3.i1404 to i8*
  %4434 = bitcast %union.vec128_t* %XMM2.i1405 to i8*
  %4435 = load i64, i64* %PC.i1403
  %4436 = add i64 %4435, 4
  store i64 %4436, i64* %PC.i1403
  %4437 = bitcast i8* %4433 to double*
  %4438 = load double, double* %4437, align 1
  %4439 = getelementptr inbounds i8, i8* %4433, i64 8
  %4440 = bitcast i8* %4439 to i64*
  %4441 = load i64, i64* %4440, align 1
  %4442 = bitcast i8* %4434 to double*
  %4443 = load double, double* %4442, align 1
  %4444 = fmul double %4438, %4443
  %4445 = bitcast i8* %4432 to double*
  store double %4444, double* %4445, align 1
  %4446 = getelementptr inbounds i8, i8* %4432, i64 8
  %4447 = bitcast i8* %4446 to i64*
  store i64 %4441, i64* %4447, align 1
  store %struct.Memory* %loadMem_480425, %struct.Memory** %MEMORY
  %loadMem_480429 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4449 = getelementptr inbounds %struct.GPR, %struct.GPR* %4448, i32 0, i32 33
  %4450 = getelementptr inbounds %struct.Reg, %struct.Reg* %4449, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %4450 to i64*
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4452 = getelementptr inbounds %struct.GPR, %struct.GPR* %4451, i32 0, i32 5
  %4453 = getelementptr inbounds %struct.Reg, %struct.Reg* %4452, i32 0, i32 0
  %RCX.i1401 = bitcast %union.anon* %4453 to i64*
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4455 = getelementptr inbounds %struct.GPR, %struct.GPR* %4454, i32 0, i32 15
  %4456 = getelementptr inbounds %struct.Reg, %struct.Reg* %4455, i32 0, i32 0
  %RBP.i1402 = bitcast %union.anon* %4456 to i64*
  %4457 = load i64, i64* %RBP.i1402
  %4458 = sub i64 %4457, 8
  %4459 = load i64, i64* %PC.i1400
  %4460 = add i64 %4459, 4
  store i64 %4460, i64* %PC.i1400
  %4461 = inttoptr i64 %4458 to i32*
  %4462 = load i32, i32* %4461
  %4463 = sext i32 %4462 to i64
  store i64 %4463, i64* %RCX.i1401, align 8
  store %struct.Memory* %loadMem_480429, %struct.Memory** %MEMORY
  %loadMem_48042d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4465 = getelementptr inbounds %struct.GPR, %struct.GPR* %4464, i32 0, i32 33
  %4466 = getelementptr inbounds %struct.Reg, %struct.Reg* %4465, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %4466 to i64*
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4468 = getelementptr inbounds %struct.GPR, %struct.GPR* %4467, i32 0, i32 5
  %4469 = getelementptr inbounds %struct.Reg, %struct.Reg* %4468, i32 0, i32 0
  %RCX.i1399 = bitcast %union.anon* %4469 to i64*
  %4470 = load i64, i64* %RCX.i1399
  %4471 = load i64, i64* %PC.i1398
  %4472 = add i64 %4471, 7
  store i64 %4472, i64* %PC.i1398
  %4473 = sext i64 %4470 to i128
  %4474 = and i128 %4473, -18446744073709551616
  %4475 = zext i64 %4470 to i128
  %4476 = or i128 %4474, %4475
  %4477 = mul i128 564, %4476
  %4478 = trunc i128 %4477 to i64
  store i64 %4478, i64* %RCX.i1399, align 8
  %4479 = sext i64 %4478 to i128
  %4480 = icmp ne i128 %4479, %4477
  %4481 = zext i1 %4480 to i8
  %4482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4481, i8* %4482, align 1
  %4483 = trunc i128 %4477 to i32
  %4484 = and i32 %4483, 255
  %4485 = call i32 @llvm.ctpop.i32(i32 %4484)
  %4486 = trunc i32 %4485 to i8
  %4487 = and i8 %4486, 1
  %4488 = xor i8 %4487, 1
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4488, i8* %4489, align 1
  %4490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4490, align 1
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4491, align 1
  %4492 = lshr i64 %4478, 63
  %4493 = trunc i64 %4492 to i8
  %4494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4493, i8* %4494, align 1
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4481, i8* %4495, align 1
  store %struct.Memory* %loadMem_48042d, %struct.Memory** %MEMORY
  %loadMem_480434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4497 = getelementptr inbounds %struct.GPR, %struct.GPR* %4496, i32 0, i32 33
  %4498 = getelementptr inbounds %struct.Reg, %struct.Reg* %4497, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %4498 to i64*
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4500 = getelementptr inbounds %struct.GPR, %struct.GPR* %4499, i32 0, i32 1
  %4501 = getelementptr inbounds %struct.Reg, %struct.Reg* %4500, i32 0, i32 0
  %RAX.i1396 = bitcast %union.anon* %4501 to i64*
  %4502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4503 = getelementptr inbounds %struct.GPR, %struct.GPR* %4502, i32 0, i32 5
  %4504 = getelementptr inbounds %struct.Reg, %struct.Reg* %4503, i32 0, i32 0
  %RCX.i1397 = bitcast %union.anon* %4504 to i64*
  %4505 = load i64, i64* %RAX.i1396
  %4506 = load i64, i64* %RCX.i1397
  %4507 = load i64, i64* %PC.i1395
  %4508 = add i64 %4507, 3
  store i64 %4508, i64* %PC.i1395
  %4509 = add i64 %4506, %4505
  store i64 %4509, i64* %RAX.i1396, align 8
  %4510 = icmp ult i64 %4509, %4505
  %4511 = icmp ult i64 %4509, %4506
  %4512 = or i1 %4510, %4511
  %4513 = zext i1 %4512 to i8
  %4514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4513, i8* %4514, align 1
  %4515 = trunc i64 %4509 to i32
  %4516 = and i32 %4515, 255
  %4517 = call i32 @llvm.ctpop.i32(i32 %4516)
  %4518 = trunc i32 %4517 to i8
  %4519 = and i8 %4518, 1
  %4520 = xor i8 %4519, 1
  %4521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4520, i8* %4521, align 1
  %4522 = xor i64 %4506, %4505
  %4523 = xor i64 %4522, %4509
  %4524 = lshr i64 %4523, 4
  %4525 = trunc i64 %4524 to i8
  %4526 = and i8 %4525, 1
  %4527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4526, i8* %4527, align 1
  %4528 = icmp eq i64 %4509, 0
  %4529 = zext i1 %4528 to i8
  %4530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4529, i8* %4530, align 1
  %4531 = lshr i64 %4509, 63
  %4532 = trunc i64 %4531 to i8
  %4533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4532, i8* %4533, align 1
  %4534 = lshr i64 %4505, 63
  %4535 = lshr i64 %4506, 63
  %4536 = xor i64 %4531, %4534
  %4537 = xor i64 %4531, %4535
  %4538 = add i64 %4536, %4537
  %4539 = icmp eq i64 %4538, 2
  %4540 = zext i1 %4539 to i8
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4540, i8* %4541, align 1
  store %struct.Memory* %loadMem_480434, %struct.Memory** %MEMORY
  %loadMem_480437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4543 = getelementptr inbounds %struct.GPR, %struct.GPR* %4542, i32 0, i32 33
  %4544 = getelementptr inbounds %struct.Reg, %struct.Reg* %4543, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %4544 to i64*
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4546 = getelementptr inbounds %struct.GPR, %struct.GPR* %4545, i32 0, i32 1
  %4547 = getelementptr inbounds %struct.Reg, %struct.Reg* %4546, i32 0, i32 0
  %RAX.i1393 = bitcast %union.anon* %4547 to i64*
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4549 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4548, i64 0, i64 2
  %YMM2.i1394 = bitcast %union.VectorReg* %4549 to %"class.std::bitset"*
  %4550 = bitcast %"class.std::bitset"* %YMM2.i1394 to i8*
  %4551 = load i64, i64* %RAX.i1393
  %4552 = add i64 %4551, 44
  %4553 = load i64, i64* %PC.i1392
  %4554 = add i64 %4553, 5
  store i64 %4554, i64* %PC.i1392
  %4555 = inttoptr i64 %4552 to float*
  %4556 = load float, float* %4555
  %4557 = fpext float %4556 to double
  %4558 = bitcast i8* %4550 to double*
  store double %4557, double* %4558, align 1
  store %struct.Memory* %loadMem_480437, %struct.Memory** %MEMORY
  %loadMem_48043c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4560 = getelementptr inbounds %struct.GPR, %struct.GPR* %4559, i32 0, i32 33
  %4561 = getelementptr inbounds %struct.Reg, %struct.Reg* %4560, i32 0, i32 0
  %PC.i1389 = bitcast %union.anon* %4561 to i64*
  %4562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4563 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4562, i64 0, i64 1
  %YMM1.i1390 = bitcast %union.VectorReg* %4563 to %"class.std::bitset"*
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4565 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4564, i64 0, i64 2
  %XMM2.i1391 = bitcast %union.VectorReg* %4565 to %union.vec128_t*
  %4566 = bitcast %"class.std::bitset"* %YMM1.i1390 to i8*
  %4567 = bitcast %"class.std::bitset"* %YMM1.i1390 to i8*
  %4568 = bitcast %union.vec128_t* %XMM2.i1391 to i8*
  %4569 = load i64, i64* %PC.i1389
  %4570 = add i64 %4569, 4
  store i64 %4570, i64* %PC.i1389
  %4571 = bitcast i8* %4567 to double*
  %4572 = load double, double* %4571, align 1
  %4573 = getelementptr inbounds i8, i8* %4567, i64 8
  %4574 = bitcast i8* %4573 to i64*
  %4575 = load i64, i64* %4574, align 1
  %4576 = bitcast i8* %4568 to double*
  %4577 = load double, double* %4576, align 1
  %4578 = fmul double %4572, %4577
  %4579 = bitcast i8* %4566 to double*
  store double %4578, double* %4579, align 1
  %4580 = getelementptr inbounds i8, i8* %4566, i64 8
  %4581 = bitcast i8* %4580 to i64*
  store i64 %4575, i64* %4581, align 1
  store %struct.Memory* %loadMem_48043c, %struct.Memory** %MEMORY
  %loadMem_480440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4583 = getelementptr inbounds %struct.GPR, %struct.GPR* %4582, i32 0, i32 33
  %4584 = getelementptr inbounds %struct.Reg, %struct.Reg* %4583, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %4584 to i64*
  %4585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4586 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4585, i64 0, i64 3
  %YMM3.i1387 = bitcast %union.VectorReg* %4586 to %"class.std::bitset"*
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4588 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4587, i64 0, i64 1
  %XMM1.i1388 = bitcast %union.VectorReg* %4588 to %union.vec128_t*
  %4589 = bitcast %"class.std::bitset"* %YMM3.i1387 to i8*
  %4590 = bitcast %"class.std::bitset"* %YMM3.i1387 to i8*
  %4591 = bitcast %union.vec128_t* %XMM1.i1388 to i8*
  %4592 = load i64, i64* %PC.i1386
  %4593 = add i64 %4592, 4
  store i64 %4593, i64* %PC.i1386
  %4594 = bitcast i8* %4590 to double*
  %4595 = load double, double* %4594, align 1
  %4596 = getelementptr inbounds i8, i8* %4590, i64 8
  %4597 = bitcast i8* %4596 to i64*
  %4598 = load i64, i64* %4597, align 1
  %4599 = bitcast i8* %4591 to double*
  %4600 = load double, double* %4599, align 1
  %4601 = fadd double %4595, %4600
  %4602 = bitcast i8* %4589 to double*
  store double %4601, double* %4602, align 1
  %4603 = getelementptr inbounds i8, i8* %4589, i64 8
  %4604 = bitcast i8* %4603 to i64*
  store i64 %4598, i64* %4604, align 1
  store %struct.Memory* %loadMem_480440, %struct.Memory** %MEMORY
  %loadMem_480444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4606 = getelementptr inbounds %struct.GPR, %struct.GPR* %4605, i32 0, i32 33
  %4607 = getelementptr inbounds %struct.Reg, %struct.Reg* %4606, i32 0, i32 0
  %PC.i1383 = bitcast %union.anon* %4607 to i64*
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4609 = getelementptr inbounds %struct.GPR, %struct.GPR* %4608, i32 0, i32 15
  %4610 = getelementptr inbounds %struct.Reg, %struct.Reg* %4609, i32 0, i32 0
  %RBP.i1384 = bitcast %union.anon* %4610 to i64*
  %4611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4612 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4611, i64 0, i64 1
  %YMM1.i1385 = bitcast %union.VectorReg* %4612 to %"class.std::bitset"*
  %4613 = bitcast %"class.std::bitset"* %YMM1.i1385 to i8*
  %4614 = load i64, i64* %RBP.i1384
  %4615 = sub i64 %4614, 24
  %4616 = load i64, i64* %PC.i1383
  %4617 = add i64 %4616, 5
  store i64 %4617, i64* %PC.i1383
  %4618 = inttoptr i64 %4615 to float*
  %4619 = load float, float* %4618
  %4620 = fpext float %4619 to double
  %4621 = bitcast i8* %4613 to double*
  store double %4620, double* %4621, align 1
  store %struct.Memory* %loadMem_480444, %struct.Memory** %MEMORY
  %loadMem_480449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4623 = getelementptr inbounds %struct.GPR, %struct.GPR* %4622, i32 0, i32 33
  %4624 = getelementptr inbounds %struct.Reg, %struct.Reg* %4623, i32 0, i32 0
  %PC.i1380 = bitcast %union.anon* %4624 to i64*
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4626 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4625, i64 0, i64 0
  %YMM0.i1381 = bitcast %union.VectorReg* %4626 to %"class.std::bitset"*
  %4627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4628 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4627, i64 0, i64 1
  %XMM1.i1382 = bitcast %union.VectorReg* %4628 to %union.vec128_t*
  %4629 = bitcast %"class.std::bitset"* %YMM0.i1381 to i8*
  %4630 = bitcast %"class.std::bitset"* %YMM0.i1381 to i8*
  %4631 = bitcast %union.vec128_t* %XMM1.i1382 to i8*
  %4632 = load i64, i64* %PC.i1380
  %4633 = add i64 %4632, 4
  store i64 %4633, i64* %PC.i1380
  %4634 = bitcast i8* %4630 to double*
  %4635 = load double, double* %4634, align 1
  %4636 = getelementptr inbounds i8, i8* %4630, i64 8
  %4637 = bitcast i8* %4636 to i64*
  %4638 = load i64, i64* %4637, align 1
  %4639 = bitcast i8* %4631 to double*
  %4640 = load double, double* %4639, align 1
  %4641 = fmul double %4635, %4640
  %4642 = bitcast i8* %4629 to double*
  store double %4641, double* %4642, align 1
  %4643 = getelementptr inbounds i8, i8* %4629, i64 8
  %4644 = bitcast i8* %4643 to i64*
  store i64 %4638, i64* %4644, align 1
  store %struct.Memory* %loadMem_480449, %struct.Memory** %MEMORY
  %loadMem_48044d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4646 = getelementptr inbounds %struct.GPR, %struct.GPR* %4645, i32 0, i32 33
  %4647 = getelementptr inbounds %struct.Reg, %struct.Reg* %4646, i32 0, i32 0
  %PC.i1377 = bitcast %union.anon* %4647 to i64*
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4649 = getelementptr inbounds %struct.GPR, %struct.GPR* %4648, i32 0, i32 15
  %4650 = getelementptr inbounds %struct.Reg, %struct.Reg* %4649, i32 0, i32 0
  %RBP.i1378 = bitcast %union.anon* %4650 to i64*
  %4651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4652 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4651, i64 0, i64 1
  %YMM1.i1379 = bitcast %union.VectorReg* %4652 to %"class.std::bitset"*
  %4653 = bitcast %"class.std::bitset"* %YMM1.i1379 to i8*
  %4654 = load i64, i64* %RBP.i1378
  %4655 = sub i64 %4654, 40
  %4656 = load i64, i64* %PC.i1377
  %4657 = add i64 %4656, 5
  store i64 %4657, i64* %PC.i1377
  %4658 = inttoptr i64 %4655 to float*
  %4659 = load float, float* %4658
  %4660 = fpext float %4659 to double
  %4661 = bitcast i8* %4653 to double*
  store double %4660, double* %4661, align 1
  store %struct.Memory* %loadMem_48044d, %struct.Memory** %MEMORY
  %loadMem_480452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4663 = getelementptr inbounds %struct.GPR, %struct.GPR* %4662, i32 0, i32 33
  %4664 = getelementptr inbounds %struct.Reg, %struct.Reg* %4663, i32 0, i32 0
  %PC.i1374 = bitcast %union.anon* %4664 to i64*
  %4665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4666 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4665, i64 0, i64 0
  %YMM0.i1375 = bitcast %union.VectorReg* %4666 to %"class.std::bitset"*
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4668 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4667, i64 0, i64 1
  %XMM1.i1376 = bitcast %union.VectorReg* %4668 to %union.vec128_t*
  %4669 = bitcast %"class.std::bitset"* %YMM0.i1375 to i8*
  %4670 = bitcast %"class.std::bitset"* %YMM0.i1375 to i8*
  %4671 = bitcast %union.vec128_t* %XMM1.i1376 to i8*
  %4672 = load i64, i64* %PC.i1374
  %4673 = add i64 %4672, 4
  store i64 %4673, i64* %PC.i1374
  %4674 = bitcast i8* %4670 to double*
  %4675 = load double, double* %4674, align 1
  %4676 = getelementptr inbounds i8, i8* %4670, i64 8
  %4677 = bitcast i8* %4676 to i64*
  %4678 = load i64, i64* %4677, align 1
  %4679 = bitcast i8* %4671 to double*
  %4680 = load double, double* %4679, align 1
  %4681 = fadd double %4675, %4680
  %4682 = bitcast i8* %4669 to double*
  store double %4681, double* %4682, align 1
  %4683 = getelementptr inbounds i8, i8* %4669, i64 8
  %4684 = bitcast i8* %4683 to i64*
  store i64 %4678, i64* %4684, align 1
  store %struct.Memory* %loadMem_480452, %struct.Memory** %MEMORY
  %loadMem_480456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4686 = getelementptr inbounds %struct.GPR, %struct.GPR* %4685, i32 0, i32 33
  %4687 = getelementptr inbounds %struct.Reg, %struct.Reg* %4686, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %4687 to i64*
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4689 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4688, i64 0, i64 0
  %XMM0.i1371 = bitcast %union.VectorReg* %4689 to %union.vec128_t*
  %4690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4691 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4690, i64 0, i64 3
  %XMM3.i1372 = bitcast %union.VectorReg* %4691 to %union.vec128_t*
  %4692 = bitcast %union.vec128_t* %XMM0.i1371 to i8*
  %4693 = bitcast %union.vec128_t* %XMM3.i1372 to i8*
  %4694 = load i64, i64* %PC.i1370
  %4695 = add i64 %4694, 4
  store i64 %4695, i64* %PC.i1370
  %4696 = bitcast i8* %4692 to double*
  %4697 = load double, double* %4696, align 1
  %4698 = bitcast i8* %4693 to double*
  %4699 = load double, double* %4698, align 1
  %4700 = fcmp uno double %4697, %4699
  br i1 %4700, label %4701, label %4713

; <label>:4701:                                   ; preds = %block_480403
  %4702 = fadd double %4697, %4699
  %4703 = bitcast double %4702 to i64
  %4704 = and i64 %4703, 9221120237041090560
  %4705 = icmp eq i64 %4704, 9218868437227405312
  %4706 = and i64 %4703, 2251799813685247
  %4707 = icmp ne i64 %4706, 0
  %4708 = and i1 %4705, %4707
  br i1 %4708, label %4709, label %4719

; <label>:4709:                                   ; preds = %4701
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4711 = load i64, i64* %4710, align 8
  %4712 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4711, %struct.Memory* %loadMem_480456)
  br label %routine_ucomisd__xmm3___xmm0.exit

; <label>:4713:                                   ; preds = %block_480403
  %4714 = fcmp ogt double %4697, %4699
  br i1 %4714, label %4719, label %4715

; <label>:4715:                                   ; preds = %4713
  %4716 = fcmp olt double %4697, %4699
  br i1 %4716, label %4719, label %4717

; <label>:4717:                                   ; preds = %4715
  %4718 = fcmp oeq double %4697, %4699
  br i1 %4718, label %4719, label %4726

; <label>:4719:                                   ; preds = %4717, %4715, %4713, %4701
  %4720 = phi i8 [ 0, %4713 ], [ 0, %4715 ], [ 1, %4717 ], [ 1, %4701 ]
  %4721 = phi i8 [ 0, %4713 ], [ 0, %4715 ], [ 0, %4717 ], [ 1, %4701 ]
  %4722 = phi i8 [ 0, %4713 ], [ 1, %4715 ], [ 0, %4717 ], [ 1, %4701 ]
  %4723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4720, i8* %4723, align 1
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4721, i8* %4724, align 1
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4722, i8* %4725, align 1
  br label %4726

; <label>:4726:                                   ; preds = %4719, %4717
  %4727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4727, align 1
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4728, align 1
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4729, align 1
  br label %routine_ucomisd__xmm3___xmm0.exit

routine_ucomisd__xmm3___xmm0.exit:                ; preds = %4709, %4726
  %4730 = phi %struct.Memory* [ %4712, %4709 ], [ %loadMem_480456, %4726 ]
  store %struct.Memory* %4730, %struct.Memory** %MEMORY
  %loadMem_48045a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4732 = getelementptr inbounds %struct.GPR, %struct.GPR* %4731, i32 0, i32 33
  %4733 = getelementptr inbounds %struct.Reg, %struct.Reg* %4732, i32 0, i32 0
  %PC.i1369 = bitcast %union.anon* %4733 to i64*
  %4734 = load i64, i64* %PC.i1369
  %4735 = add i64 %4734, 73
  %4736 = load i64, i64* %PC.i1369
  %4737 = add i64 %4736, 6
  %4738 = load i64, i64* %PC.i1369
  %4739 = add i64 %4738, 6
  store i64 %4739, i64* %PC.i1369
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4741 = load i8, i8* %4740, align 1
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4743 = load i8, i8* %4742, align 1
  %4744 = or i8 %4743, %4741
  %4745 = icmp ne i8 %4744, 0
  %4746 = zext i1 %4745 to i8
  store i8 %4746, i8* %BRANCH_TAKEN, align 1
  %4747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4748 = select i1 %4745, i64 %4735, i64 %4737
  store i64 %4748, i64* %4747, align 8
  store %struct.Memory* %loadMem_48045a, %struct.Memory** %MEMORY
  %loadBr_48045a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48045a = icmp eq i8 %loadBr_48045a, 1
  br i1 %cmpBr_48045a, label %block_.L_4804a3, label %block_480460

block_480460:                                     ; preds = %routine_ucomisd__xmm3___xmm0.exit
  %loadMem_480460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4750 = getelementptr inbounds %struct.GPR, %struct.GPR* %4749, i32 0, i32 33
  %4751 = getelementptr inbounds %struct.Reg, %struct.Reg* %4750, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %4751 to i64*
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4753 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4752, i64 0, i64 0
  %YMM0.i1368 = bitcast %union.VectorReg* %4753 to %"class.std::bitset"*
  %4754 = bitcast %"class.std::bitset"* %YMM0.i1368 to i8*
  %4755 = load i64, i64* %PC.i1367
  %4756 = add i64 %4755, ptrtoint (%G_0x62b20__rip__type* @G_0x62b20__rip_ to i64)
  %4757 = load i64, i64* %PC.i1367
  %4758 = add i64 %4757, 8
  store i64 %4758, i64* %PC.i1367
  %4759 = inttoptr i64 %4756 to double*
  %4760 = load double, double* %4759
  %4761 = bitcast i8* %4754 to double*
  store double %4760, double* %4761, align 1
  %4762 = getelementptr inbounds i8, i8* %4754, i64 8
  %4763 = bitcast i8* %4762 to double*
  store double 0.000000e+00, double* %4763, align 1
  store %struct.Memory* %loadMem_480460, %struct.Memory** %MEMORY
  %loadMem_480468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4765 = getelementptr inbounds %struct.GPR, %struct.GPR* %4764, i32 0, i32 33
  %4766 = getelementptr inbounds %struct.Reg, %struct.Reg* %4765, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %4766 to i64*
  %4767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4768 = getelementptr inbounds %struct.GPR, %struct.GPR* %4767, i32 0, i32 1
  %4769 = getelementptr inbounds %struct.Reg, %struct.Reg* %4768, i32 0, i32 0
  %RAX.i1366 = bitcast %union.anon* %4769 to i64*
  %4770 = load i64, i64* %PC.i1365
  %4771 = add i64 %4770, 10
  store i64 %4771, i64* %PC.i1365
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1366, align 8
  store %struct.Memory* %loadMem_480468, %struct.Memory** %MEMORY
  %loadMem_480472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4773 = getelementptr inbounds %struct.GPR, %struct.GPR* %4772, i32 0, i32 33
  %4774 = getelementptr inbounds %struct.Reg, %struct.Reg* %4773, i32 0, i32 0
  %PC.i1362 = bitcast %union.anon* %4774 to i64*
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4776 = getelementptr inbounds %struct.GPR, %struct.GPR* %4775, i32 0, i32 15
  %4777 = getelementptr inbounds %struct.Reg, %struct.Reg* %4776, i32 0, i32 0
  %RBP.i1363 = bitcast %union.anon* %4777 to i64*
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4779 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4778, i64 0, i64 1
  %YMM1.i1364 = bitcast %union.VectorReg* %4779 to %"class.std::bitset"*
  %4780 = bitcast %"class.std::bitset"* %YMM1.i1364 to i8*
  %4781 = load i64, i64* %RBP.i1363
  %4782 = sub i64 %4781, 40
  %4783 = load i64, i64* %PC.i1362
  %4784 = add i64 %4783, 5
  store i64 %4784, i64* %PC.i1362
  %4785 = inttoptr i64 %4782 to float*
  %4786 = load float, float* %4785
  %4787 = fpext float %4786 to double
  %4788 = bitcast i8* %4780 to double*
  store double %4787, double* %4788, align 1
  store %struct.Memory* %loadMem_480472, %struct.Memory** %MEMORY
  %loadMem_480477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4790 = getelementptr inbounds %struct.GPR, %struct.GPR* %4789, i32 0, i32 33
  %4791 = getelementptr inbounds %struct.Reg, %struct.Reg* %4790, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %4791 to i64*
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4793 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4792, i64 0, i64 2
  %YMM2.i1360 = bitcast %union.VectorReg* %4793 to %"class.std::bitset"*
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4795 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4794, i64 0, i64 0
  %XMM0.i1361 = bitcast %union.VectorReg* %4795 to %union.vec128_t*
  %4796 = bitcast %"class.std::bitset"* %YMM2.i1360 to i8*
  %4797 = bitcast %union.vec128_t* %XMM0.i1361 to i8*
  %4798 = load i64, i64* %PC.i1359
  %4799 = add i64 %4798, 3
  store i64 %4799, i64* %PC.i1359
  %4800 = bitcast i8* %4797 to <2 x i32>*
  %4801 = load <2 x i32>, <2 x i32>* %4800, align 1
  %4802 = getelementptr inbounds i8, i8* %4797, i64 8
  %4803 = bitcast i8* %4802 to <2 x i32>*
  %4804 = load <2 x i32>, <2 x i32>* %4803, align 1
  %4805 = extractelement <2 x i32> %4801, i32 0
  %4806 = bitcast i8* %4796 to i32*
  store i32 %4805, i32* %4806, align 1
  %4807 = extractelement <2 x i32> %4801, i32 1
  %4808 = getelementptr inbounds i8, i8* %4796, i64 4
  %4809 = bitcast i8* %4808 to i32*
  store i32 %4807, i32* %4809, align 1
  %4810 = extractelement <2 x i32> %4804, i32 0
  %4811 = getelementptr inbounds i8, i8* %4796, i64 8
  %4812 = bitcast i8* %4811 to i32*
  store i32 %4810, i32* %4812, align 1
  %4813 = extractelement <2 x i32> %4804, i32 1
  %4814 = getelementptr inbounds i8, i8* %4796, i64 12
  %4815 = bitcast i8* %4814 to i32*
  store i32 %4813, i32* %4815, align 1
  store %struct.Memory* %loadMem_480477, %struct.Memory** %MEMORY
  %loadMem_48047a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4817 = getelementptr inbounds %struct.GPR, %struct.GPR* %4816, i32 0, i32 33
  %4818 = getelementptr inbounds %struct.Reg, %struct.Reg* %4817, i32 0, i32 0
  %PC.i1356 = bitcast %union.anon* %4818 to i64*
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4820 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4819, i64 0, i64 2
  %YMM2.i1357 = bitcast %union.VectorReg* %4820 to %"class.std::bitset"*
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4822 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4821, i64 0, i64 1
  %XMM1.i1358 = bitcast %union.VectorReg* %4822 to %union.vec128_t*
  %4823 = bitcast %"class.std::bitset"* %YMM2.i1357 to i8*
  %4824 = bitcast %"class.std::bitset"* %YMM2.i1357 to i8*
  %4825 = bitcast %union.vec128_t* %XMM1.i1358 to i8*
  %4826 = load i64, i64* %PC.i1356
  %4827 = add i64 %4826, 4
  store i64 %4827, i64* %PC.i1356
  %4828 = bitcast i8* %4824 to double*
  %4829 = load double, double* %4828, align 1
  %4830 = getelementptr inbounds i8, i8* %4824, i64 8
  %4831 = bitcast i8* %4830 to i64*
  %4832 = load i64, i64* %4831, align 1
  %4833 = bitcast i8* %4825 to double*
  %4834 = load double, double* %4833, align 1
  %4835 = fmul double %4829, %4834
  %4836 = bitcast i8* %4823 to double*
  store double %4835, double* %4836, align 1
  %4837 = getelementptr inbounds i8, i8* %4823, i64 8
  %4838 = bitcast i8* %4837 to i64*
  store i64 %4832, i64* %4838, align 1
  store %struct.Memory* %loadMem_48047a, %struct.Memory** %MEMORY
  %loadMem_48047e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4840 = getelementptr inbounds %struct.GPR, %struct.GPR* %4839, i32 0, i32 33
  %4841 = getelementptr inbounds %struct.Reg, %struct.Reg* %4840, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %4841 to i64*
  %4842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4843 = getelementptr inbounds %struct.GPR, %struct.GPR* %4842, i32 0, i32 5
  %4844 = getelementptr inbounds %struct.Reg, %struct.Reg* %4843, i32 0, i32 0
  %RCX.i1354 = bitcast %union.anon* %4844 to i64*
  %4845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4846 = getelementptr inbounds %struct.GPR, %struct.GPR* %4845, i32 0, i32 15
  %4847 = getelementptr inbounds %struct.Reg, %struct.Reg* %4846, i32 0, i32 0
  %RBP.i1355 = bitcast %union.anon* %4847 to i64*
  %4848 = load i64, i64* %RBP.i1355
  %4849 = sub i64 %4848, 8
  %4850 = load i64, i64* %PC.i1353
  %4851 = add i64 %4850, 4
  store i64 %4851, i64* %PC.i1353
  %4852 = inttoptr i64 %4849 to i32*
  %4853 = load i32, i32* %4852
  %4854 = sext i32 %4853 to i64
  store i64 %4854, i64* %RCX.i1354, align 8
  store %struct.Memory* %loadMem_48047e, %struct.Memory** %MEMORY
  %loadMem_480482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4856 = getelementptr inbounds %struct.GPR, %struct.GPR* %4855, i32 0, i32 33
  %4857 = getelementptr inbounds %struct.Reg, %struct.Reg* %4856, i32 0, i32 0
  %PC.i1351 = bitcast %union.anon* %4857 to i64*
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4859 = getelementptr inbounds %struct.GPR, %struct.GPR* %4858, i32 0, i32 5
  %4860 = getelementptr inbounds %struct.Reg, %struct.Reg* %4859, i32 0, i32 0
  %RCX.i1352 = bitcast %union.anon* %4860 to i64*
  %4861 = load i64, i64* %RCX.i1352
  %4862 = load i64, i64* %PC.i1351
  %4863 = add i64 %4862, 7
  store i64 %4863, i64* %PC.i1351
  %4864 = sext i64 %4861 to i128
  %4865 = and i128 %4864, -18446744073709551616
  %4866 = zext i64 %4861 to i128
  %4867 = or i128 %4865, %4866
  %4868 = mul i128 564, %4867
  %4869 = trunc i128 %4868 to i64
  store i64 %4869, i64* %RCX.i1352, align 8
  %4870 = sext i64 %4869 to i128
  %4871 = icmp ne i128 %4870, %4868
  %4872 = zext i1 %4871 to i8
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4872, i8* %4873, align 1
  %4874 = trunc i128 %4868 to i32
  %4875 = and i32 %4874, 255
  %4876 = call i32 @llvm.ctpop.i32(i32 %4875)
  %4877 = trunc i32 %4876 to i8
  %4878 = and i8 %4877, 1
  %4879 = xor i8 %4878, 1
  %4880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4879, i8* %4880, align 1
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4881, align 1
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4882, align 1
  %4883 = lshr i64 %4869, 63
  %4884 = trunc i64 %4883 to i8
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4884, i8* %4885, align 1
  %4886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4872, i8* %4886, align 1
  store %struct.Memory* %loadMem_480482, %struct.Memory** %MEMORY
  %loadMem_480489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4888 = getelementptr inbounds %struct.GPR, %struct.GPR* %4887, i32 0, i32 33
  %4889 = getelementptr inbounds %struct.Reg, %struct.Reg* %4888, i32 0, i32 0
  %PC.i1348 = bitcast %union.anon* %4889 to i64*
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4891 = getelementptr inbounds %struct.GPR, %struct.GPR* %4890, i32 0, i32 1
  %4892 = getelementptr inbounds %struct.Reg, %struct.Reg* %4891, i32 0, i32 0
  %RAX.i1349 = bitcast %union.anon* %4892 to i64*
  %4893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4894 = getelementptr inbounds %struct.GPR, %struct.GPR* %4893, i32 0, i32 5
  %4895 = getelementptr inbounds %struct.Reg, %struct.Reg* %4894, i32 0, i32 0
  %RCX.i1350 = bitcast %union.anon* %4895 to i64*
  %4896 = load i64, i64* %RAX.i1349
  %4897 = load i64, i64* %RCX.i1350
  %4898 = load i64, i64* %PC.i1348
  %4899 = add i64 %4898, 3
  store i64 %4899, i64* %PC.i1348
  %4900 = add i64 %4897, %4896
  store i64 %4900, i64* %RAX.i1349, align 8
  %4901 = icmp ult i64 %4900, %4896
  %4902 = icmp ult i64 %4900, %4897
  %4903 = or i1 %4901, %4902
  %4904 = zext i1 %4903 to i8
  %4905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4904, i8* %4905, align 1
  %4906 = trunc i64 %4900 to i32
  %4907 = and i32 %4906, 255
  %4908 = call i32 @llvm.ctpop.i32(i32 %4907)
  %4909 = trunc i32 %4908 to i8
  %4910 = and i8 %4909, 1
  %4911 = xor i8 %4910, 1
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4911, i8* %4912, align 1
  %4913 = xor i64 %4897, %4896
  %4914 = xor i64 %4913, %4900
  %4915 = lshr i64 %4914, 4
  %4916 = trunc i64 %4915 to i8
  %4917 = and i8 %4916, 1
  %4918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4917, i8* %4918, align 1
  %4919 = icmp eq i64 %4900, 0
  %4920 = zext i1 %4919 to i8
  %4921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4920, i8* %4921, align 1
  %4922 = lshr i64 %4900, 63
  %4923 = trunc i64 %4922 to i8
  %4924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4923, i8* %4924, align 1
  %4925 = lshr i64 %4896, 63
  %4926 = lshr i64 %4897, 63
  %4927 = xor i64 %4922, %4925
  %4928 = xor i64 %4922, %4926
  %4929 = add i64 %4927, %4928
  %4930 = icmp eq i64 %4929, 2
  %4931 = zext i1 %4930 to i8
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4931, i8* %4932, align 1
  store %struct.Memory* %loadMem_480489, %struct.Memory** %MEMORY
  %loadMem_48048c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4934 = getelementptr inbounds %struct.GPR, %struct.GPR* %4933, i32 0, i32 33
  %4935 = getelementptr inbounds %struct.Reg, %struct.Reg* %4934, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %4935 to i64*
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4937 = getelementptr inbounds %struct.GPR, %struct.GPR* %4936, i32 0, i32 1
  %4938 = getelementptr inbounds %struct.Reg, %struct.Reg* %4937, i32 0, i32 0
  %RAX.i1346 = bitcast %union.anon* %4938 to i64*
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4940 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4939, i64 0, i64 1
  %YMM1.i1347 = bitcast %union.VectorReg* %4940 to %"class.std::bitset"*
  %4941 = bitcast %"class.std::bitset"* %YMM1.i1347 to i8*
  %4942 = load i64, i64* %RAX.i1346
  %4943 = add i64 %4942, 44
  %4944 = load i64, i64* %PC.i1345
  %4945 = add i64 %4944, 5
  store i64 %4945, i64* %PC.i1345
  %4946 = inttoptr i64 %4943 to float*
  %4947 = load float, float* %4946
  %4948 = fpext float %4947 to double
  %4949 = bitcast i8* %4941 to double*
  store double %4948, double* %4949, align 1
  store %struct.Memory* %loadMem_48048c, %struct.Memory** %MEMORY
  %loadMem_480491 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4951 = getelementptr inbounds %struct.GPR, %struct.GPR* %4950, i32 0, i32 33
  %4952 = getelementptr inbounds %struct.Reg, %struct.Reg* %4951, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %4952 to i64*
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4954 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4953, i64 0, i64 0
  %YMM0.i1343 = bitcast %union.VectorReg* %4954 to %"class.std::bitset"*
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4956 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4955, i64 0, i64 1
  %XMM1.i1344 = bitcast %union.VectorReg* %4956 to %union.vec128_t*
  %4957 = bitcast %"class.std::bitset"* %YMM0.i1343 to i8*
  %4958 = bitcast %"class.std::bitset"* %YMM0.i1343 to i8*
  %4959 = bitcast %union.vec128_t* %XMM1.i1344 to i8*
  %4960 = load i64, i64* %PC.i1342
  %4961 = add i64 %4960, 4
  store i64 %4961, i64* %PC.i1342
  %4962 = bitcast i8* %4958 to double*
  %4963 = load double, double* %4962, align 1
  %4964 = getelementptr inbounds i8, i8* %4958, i64 8
  %4965 = bitcast i8* %4964 to i64*
  %4966 = load i64, i64* %4965, align 1
  %4967 = bitcast i8* %4959 to double*
  %4968 = load double, double* %4967, align 1
  %4969 = fmul double %4963, %4968
  %4970 = bitcast i8* %4957 to double*
  store double %4969, double* %4970, align 1
  %4971 = getelementptr inbounds i8, i8* %4957, i64 8
  %4972 = bitcast i8* %4971 to i64*
  store i64 %4966, i64* %4972, align 1
  store %struct.Memory* %loadMem_480491, %struct.Memory** %MEMORY
  %loadMem_480495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4974 = getelementptr inbounds %struct.GPR, %struct.GPR* %4973, i32 0, i32 33
  %4975 = getelementptr inbounds %struct.Reg, %struct.Reg* %4974, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %4975 to i64*
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4977 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4976, i64 0, i64 2
  %YMM2.i1340 = bitcast %union.VectorReg* %4977 to %"class.std::bitset"*
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4979 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4978, i64 0, i64 0
  %XMM0.i1341 = bitcast %union.VectorReg* %4979 to %union.vec128_t*
  %4980 = bitcast %"class.std::bitset"* %YMM2.i1340 to i8*
  %4981 = bitcast %"class.std::bitset"* %YMM2.i1340 to i8*
  %4982 = bitcast %union.vec128_t* %XMM0.i1341 to i8*
  %4983 = load i64, i64* %PC.i1339
  %4984 = add i64 %4983, 4
  store i64 %4984, i64* %PC.i1339
  %4985 = bitcast i8* %4981 to double*
  %4986 = load double, double* %4985, align 1
  %4987 = getelementptr inbounds i8, i8* %4981, i64 8
  %4988 = bitcast i8* %4987 to i64*
  %4989 = load i64, i64* %4988, align 1
  %4990 = bitcast i8* %4982 to double*
  %4991 = load double, double* %4990, align 1
  %4992 = fadd double %4986, %4991
  %4993 = bitcast i8* %4980 to double*
  store double %4992, double* %4993, align 1
  %4994 = getelementptr inbounds i8, i8* %4980, i64 8
  %4995 = bitcast i8* %4994 to i64*
  store i64 %4989, i64* %4995, align 1
  store %struct.Memory* %loadMem_480495, %struct.Memory** %MEMORY
  %loadMem_480499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4997 = getelementptr inbounds %struct.GPR, %struct.GPR* %4996, i32 0, i32 33
  %4998 = getelementptr inbounds %struct.Reg, %struct.Reg* %4997, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %4998 to i64*
  %4999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5000 = getelementptr inbounds %struct.GPR, %struct.GPR* %4999, i32 0, i32 15
  %5001 = getelementptr inbounds %struct.Reg, %struct.Reg* %5000, i32 0, i32 0
  %RBP.i1337 = bitcast %union.anon* %5001 to i64*
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5003 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5002, i64 0, i64 2
  %XMM2.i1338 = bitcast %union.VectorReg* %5003 to %union.vec128_t*
  %5004 = load i64, i64* %RBP.i1337
  %5005 = sub i64 %5004, 104
  %5006 = bitcast %union.vec128_t* %XMM2.i1338 to i8*
  %5007 = load i64, i64* %PC.i1336
  %5008 = add i64 %5007, 5
  store i64 %5008, i64* %PC.i1336
  %5009 = bitcast i8* %5006 to double*
  %5010 = load double, double* %5009, align 1
  %5011 = inttoptr i64 %5005 to double*
  store double %5010, double* %5011
  store %struct.Memory* %loadMem_480499, %struct.Memory** %MEMORY
  %loadMem_48049e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5013 = getelementptr inbounds %struct.GPR, %struct.GPR* %5012, i32 0, i32 33
  %5014 = getelementptr inbounds %struct.Reg, %struct.Reg* %5013, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %5014 to i64*
  %5015 = load i64, i64* %PC.i1335
  %5016 = add i64 %5015, 36
  %5017 = load i64, i64* %PC.i1335
  %5018 = add i64 %5017, 5
  store i64 %5018, i64* %PC.i1335
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5016, i64* %5019, align 8
  store %struct.Memory* %loadMem_48049e, %struct.Memory** %MEMORY
  br label %block_.L_4804c2

block_.L_4804a3:                                  ; preds = %routine_ucomisd__xmm3___xmm0.exit
  %loadMem_4804a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5021 = getelementptr inbounds %struct.GPR, %struct.GPR* %5020, i32 0, i32 33
  %5022 = getelementptr inbounds %struct.Reg, %struct.Reg* %5021, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %5022 to i64*
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5024 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5023, i64 0, i64 0
  %YMM0.i1334 = bitcast %union.VectorReg* %5024 to %"class.std::bitset"*
  %5025 = bitcast %"class.std::bitset"* %YMM0.i1334 to i8*
  %5026 = load i64, i64* %PC.i1333
  %5027 = add i64 %5026, ptrtoint (%G_0x62ab5__rip__type* @G_0x62ab5__rip_ to i64)
  %5028 = load i64, i64* %PC.i1333
  %5029 = add i64 %5028, 8
  store i64 %5029, i64* %PC.i1333
  %5030 = inttoptr i64 %5027 to double*
  %5031 = load double, double* %5030
  %5032 = bitcast i8* %5025 to double*
  store double %5031, double* %5032, align 1
  %5033 = getelementptr inbounds i8, i8* %5025, i64 8
  %5034 = bitcast i8* %5033 to double*
  store double 0.000000e+00, double* %5034, align 1
  store %struct.Memory* %loadMem_4804a3, %struct.Memory** %MEMORY
  %loadMem_4804ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %5035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5036 = getelementptr inbounds %struct.GPR, %struct.GPR* %5035, i32 0, i32 33
  %5037 = getelementptr inbounds %struct.Reg, %struct.Reg* %5036, i32 0, i32 0
  %PC.i1330 = bitcast %union.anon* %5037 to i64*
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5039 = getelementptr inbounds %struct.GPR, %struct.GPR* %5038, i32 0, i32 15
  %5040 = getelementptr inbounds %struct.Reg, %struct.Reg* %5039, i32 0, i32 0
  %RBP.i1331 = bitcast %union.anon* %5040 to i64*
  %5041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5042 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5041, i64 0, i64 1
  %YMM1.i1332 = bitcast %union.VectorReg* %5042 to %"class.std::bitset"*
  %5043 = bitcast %"class.std::bitset"* %YMM1.i1332 to i8*
  %5044 = load i64, i64* %RBP.i1331
  %5045 = sub i64 %5044, 24
  %5046 = load i64, i64* %PC.i1330
  %5047 = add i64 %5046, 5
  store i64 %5047, i64* %PC.i1330
  %5048 = inttoptr i64 %5045 to float*
  %5049 = load float, float* %5048
  %5050 = fpext float %5049 to double
  %5051 = bitcast i8* %5043 to double*
  store double %5050, double* %5051, align 1
  store %struct.Memory* %loadMem_4804ab, %struct.Memory** %MEMORY
  %loadMem_4804b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5053 = getelementptr inbounds %struct.GPR, %struct.GPR* %5052, i32 0, i32 33
  %5054 = getelementptr inbounds %struct.Reg, %struct.Reg* %5053, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %5054 to i64*
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5056 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5055, i64 0, i64 0
  %YMM0.i1328 = bitcast %union.VectorReg* %5056 to %"class.std::bitset"*
  %5057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5058 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5057, i64 0, i64 1
  %XMM1.i1329 = bitcast %union.VectorReg* %5058 to %union.vec128_t*
  %5059 = bitcast %"class.std::bitset"* %YMM0.i1328 to i8*
  %5060 = bitcast %"class.std::bitset"* %YMM0.i1328 to i8*
  %5061 = bitcast %union.vec128_t* %XMM1.i1329 to i8*
  %5062 = load i64, i64* %PC.i1327
  %5063 = add i64 %5062, 4
  store i64 %5063, i64* %PC.i1327
  %5064 = bitcast i8* %5060 to double*
  %5065 = load double, double* %5064, align 1
  %5066 = getelementptr inbounds i8, i8* %5060, i64 8
  %5067 = bitcast i8* %5066 to i64*
  %5068 = load i64, i64* %5067, align 1
  %5069 = bitcast i8* %5061 to double*
  %5070 = load double, double* %5069, align 1
  %5071 = fmul double %5065, %5070
  %5072 = bitcast i8* %5059 to double*
  store double %5071, double* %5072, align 1
  %5073 = getelementptr inbounds i8, i8* %5059, i64 8
  %5074 = bitcast i8* %5073 to i64*
  store i64 %5068, i64* %5074, align 1
  store %struct.Memory* %loadMem_4804b0, %struct.Memory** %MEMORY
  %loadMem_4804b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5076 = getelementptr inbounds %struct.GPR, %struct.GPR* %5075, i32 0, i32 33
  %5077 = getelementptr inbounds %struct.Reg, %struct.Reg* %5076, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %5077 to i64*
  %5078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5079 = getelementptr inbounds %struct.GPR, %struct.GPR* %5078, i32 0, i32 15
  %5080 = getelementptr inbounds %struct.Reg, %struct.Reg* %5079, i32 0, i32 0
  %RBP.i1325 = bitcast %union.anon* %5080 to i64*
  %5081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5082 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5081, i64 0, i64 1
  %YMM1.i1326 = bitcast %union.VectorReg* %5082 to %"class.std::bitset"*
  %5083 = bitcast %"class.std::bitset"* %YMM1.i1326 to i8*
  %5084 = load i64, i64* %RBP.i1325
  %5085 = sub i64 %5084, 40
  %5086 = load i64, i64* %PC.i1324
  %5087 = add i64 %5086, 5
  store i64 %5087, i64* %PC.i1324
  %5088 = inttoptr i64 %5085 to float*
  %5089 = load float, float* %5088
  %5090 = fpext float %5089 to double
  %5091 = bitcast i8* %5083 to double*
  store double %5090, double* %5091, align 1
  store %struct.Memory* %loadMem_4804b4, %struct.Memory** %MEMORY
  %loadMem_4804b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5093 = getelementptr inbounds %struct.GPR, %struct.GPR* %5092, i32 0, i32 33
  %5094 = getelementptr inbounds %struct.Reg, %struct.Reg* %5093, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %5094 to i64*
  %5095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5096 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5095, i64 0, i64 0
  %YMM0.i1322 = bitcast %union.VectorReg* %5096 to %"class.std::bitset"*
  %5097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5098 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5097, i64 0, i64 1
  %XMM1.i1323 = bitcast %union.VectorReg* %5098 to %union.vec128_t*
  %5099 = bitcast %"class.std::bitset"* %YMM0.i1322 to i8*
  %5100 = bitcast %"class.std::bitset"* %YMM0.i1322 to i8*
  %5101 = bitcast %union.vec128_t* %XMM1.i1323 to i8*
  %5102 = load i64, i64* %PC.i1321
  %5103 = add i64 %5102, 4
  store i64 %5103, i64* %PC.i1321
  %5104 = bitcast i8* %5100 to double*
  %5105 = load double, double* %5104, align 1
  %5106 = getelementptr inbounds i8, i8* %5100, i64 8
  %5107 = bitcast i8* %5106 to i64*
  %5108 = load i64, i64* %5107, align 1
  %5109 = bitcast i8* %5101 to double*
  %5110 = load double, double* %5109, align 1
  %5111 = fadd double %5105, %5110
  %5112 = bitcast i8* %5099 to double*
  store double %5111, double* %5112, align 1
  %5113 = getelementptr inbounds i8, i8* %5099, i64 8
  %5114 = bitcast i8* %5113 to i64*
  store i64 %5108, i64* %5114, align 1
  store %struct.Memory* %loadMem_4804b9, %struct.Memory** %MEMORY
  %loadMem_4804bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5116 = getelementptr inbounds %struct.GPR, %struct.GPR* %5115, i32 0, i32 33
  %5117 = getelementptr inbounds %struct.Reg, %struct.Reg* %5116, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %5117 to i64*
  %5118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5119 = getelementptr inbounds %struct.GPR, %struct.GPR* %5118, i32 0, i32 15
  %5120 = getelementptr inbounds %struct.Reg, %struct.Reg* %5119, i32 0, i32 0
  %RBP.i1319 = bitcast %union.anon* %5120 to i64*
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5122 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5121, i64 0, i64 0
  %XMM0.i1320 = bitcast %union.VectorReg* %5122 to %union.vec128_t*
  %5123 = load i64, i64* %RBP.i1319
  %5124 = sub i64 %5123, 104
  %5125 = bitcast %union.vec128_t* %XMM0.i1320 to i8*
  %5126 = load i64, i64* %PC.i1318
  %5127 = add i64 %5126, 5
  store i64 %5127, i64* %PC.i1318
  %5128 = bitcast i8* %5125 to double*
  %5129 = load double, double* %5128, align 1
  %5130 = inttoptr i64 %5124 to double*
  store double %5129, double* %5130
  store %struct.Memory* %loadMem_4804bd, %struct.Memory** %MEMORY
  br label %block_.L_4804c2

block_.L_4804c2:                                  ; preds = %block_.L_4804a3, %block_480460
  %loadMem_4804c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5132 = getelementptr inbounds %struct.GPR, %struct.GPR* %5131, i32 0, i32 33
  %5133 = getelementptr inbounds %struct.Reg, %struct.Reg* %5132, i32 0, i32 0
  %PC.i1315 = bitcast %union.anon* %5133 to i64*
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5135 = getelementptr inbounds %struct.GPR, %struct.GPR* %5134, i32 0, i32 15
  %5136 = getelementptr inbounds %struct.Reg, %struct.Reg* %5135, i32 0, i32 0
  %RBP.i1316 = bitcast %union.anon* %5136 to i64*
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5138 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5137, i64 0, i64 0
  %YMM0.i1317 = bitcast %union.VectorReg* %5138 to %"class.std::bitset"*
  %5139 = bitcast %"class.std::bitset"* %YMM0.i1317 to i8*
  %5140 = load i64, i64* %RBP.i1316
  %5141 = sub i64 %5140, 104
  %5142 = load i64, i64* %PC.i1315
  %5143 = add i64 %5142, 5
  store i64 %5143, i64* %PC.i1315
  %5144 = inttoptr i64 %5141 to double*
  %5145 = load double, double* %5144
  %5146 = bitcast i8* %5139 to double*
  store double %5145, double* %5146, align 1
  %5147 = getelementptr inbounds i8, i8* %5139, i64 8
  %5148 = bitcast i8* %5147 to double*
  store double 0.000000e+00, double* %5148, align 1
  store %struct.Memory* %loadMem_4804c2, %struct.Memory** %MEMORY
  %loadMem_4804c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5150 = getelementptr inbounds %struct.GPR, %struct.GPR* %5149, i32 0, i32 33
  %5151 = getelementptr inbounds %struct.Reg, %struct.Reg* %5150, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %5151 to i64*
  %5152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5153 = getelementptr inbounds %struct.GPR, %struct.GPR* %5152, i32 0, i32 15
  %5154 = getelementptr inbounds %struct.Reg, %struct.Reg* %5153, i32 0, i32 0
  %RBP.i1313 = bitcast %union.anon* %5154 to i64*
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5156 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5155, i64 0, i64 0
  %XMM0.i1314 = bitcast %union.VectorReg* %5156 to %union.vec128_t*
  %5157 = load i64, i64* %RBP.i1313
  %5158 = sub i64 %5157, 112
  %5159 = bitcast %union.vec128_t* %XMM0.i1314 to i8*
  %5160 = load i64, i64* %PC.i1312
  %5161 = add i64 %5160, 5
  store i64 %5161, i64* %PC.i1312
  %5162 = bitcast i8* %5159 to double*
  %5163 = load double, double* %5162, align 1
  %5164 = inttoptr i64 %5158 to double*
  store double %5163, double* %5164
  store %struct.Memory* %loadMem_4804c7, %struct.Memory** %MEMORY
  %loadMem_4804cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5166 = getelementptr inbounds %struct.GPR, %struct.GPR* %5165, i32 0, i32 33
  %5167 = getelementptr inbounds %struct.Reg, %struct.Reg* %5166, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %5167 to i64*
  %5168 = load i64, i64* %PC.i1311
  %5169 = add i64 %5168, 60
  %5170 = load i64, i64* %PC.i1311
  %5171 = add i64 %5170, 5
  store i64 %5171, i64* %PC.i1311
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5169, i64* %5172, align 8
  store %struct.Memory* %loadMem_4804cc, %struct.Memory** %MEMORY
  br label %block_.L_480508

block_.L_4804d1:                                  ; preds = %routine_ucomisd__xmm0___xmm1.exit1422
  %loadMem_4804d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5174 = getelementptr inbounds %struct.GPR, %struct.GPR* %5173, i32 0, i32 33
  %5175 = getelementptr inbounds %struct.Reg, %struct.Reg* %5174, i32 0, i32 0
  %PC.i1309 = bitcast %union.anon* %5175 to i64*
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5177 = getelementptr inbounds %struct.GPR, %struct.GPR* %5176, i32 0, i32 1
  %5178 = getelementptr inbounds %struct.Reg, %struct.Reg* %5177, i32 0, i32 0
  %RAX.i1310 = bitcast %union.anon* %5178 to i64*
  %5179 = load i64, i64* %PC.i1309
  %5180 = add i64 %5179, 10
  store i64 %5180, i64* %PC.i1309
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1310, align 8
  store %struct.Memory* %loadMem_4804d1, %struct.Memory** %MEMORY
  %loadMem_4804db = load %struct.Memory*, %struct.Memory** %MEMORY
  %5181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5182 = getelementptr inbounds %struct.GPR, %struct.GPR* %5181, i32 0, i32 33
  %5183 = getelementptr inbounds %struct.Reg, %struct.Reg* %5182, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %5183 to i64*
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5185 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5184, i64 0, i64 0
  %YMM0.i1308 = bitcast %union.VectorReg* %5185 to %"class.std::bitset"*
  %5186 = bitcast %"class.std::bitset"* %YMM0.i1308 to i8*
  %5187 = load i64, i64* %PC.i1307
  %5188 = add i64 %5187, ptrtoint (%G_0x62ba5__rip__type* @G_0x62ba5__rip_ to i64)
  %5189 = load i64, i64* %PC.i1307
  %5190 = add i64 %5189, 8
  store i64 %5190, i64* %PC.i1307
  %5191 = inttoptr i64 %5188 to double*
  %5192 = load double, double* %5191
  %5193 = bitcast i8* %5186 to double*
  store double %5192, double* %5193, align 1
  %5194 = getelementptr inbounds i8, i8* %5186, i64 8
  %5195 = bitcast i8* %5194 to double*
  store double 0.000000e+00, double* %5195, align 1
  store %struct.Memory* %loadMem_4804db, %struct.Memory** %MEMORY
  %loadMem_4804e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5197 = getelementptr inbounds %struct.GPR, %struct.GPR* %5196, i32 0, i32 33
  %5198 = getelementptr inbounds %struct.Reg, %struct.Reg* %5197, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %5198 to i64*
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5200 = getelementptr inbounds %struct.GPR, %struct.GPR* %5199, i32 0, i32 15
  %5201 = getelementptr inbounds %struct.Reg, %struct.Reg* %5200, i32 0, i32 0
  %RBP.i1305 = bitcast %union.anon* %5201 to i64*
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5203 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5202, i64 0, i64 1
  %YMM1.i1306 = bitcast %union.VectorReg* %5203 to %"class.std::bitset"*
  %5204 = bitcast %"class.std::bitset"* %YMM1.i1306 to i8*
  %5205 = load i64, i64* %RBP.i1305
  %5206 = sub i64 %5205, 24
  %5207 = load i64, i64* %PC.i1304
  %5208 = add i64 %5207, 5
  store i64 %5208, i64* %PC.i1304
  %5209 = inttoptr i64 %5206 to float*
  %5210 = load float, float* %5209
  %5211 = fpext float %5210 to double
  %5212 = bitcast i8* %5204 to double*
  store double %5211, double* %5212, align 1
  store %struct.Memory* %loadMem_4804e3, %struct.Memory** %MEMORY
  %loadMem_4804e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5214 = getelementptr inbounds %struct.GPR, %struct.GPR* %5213, i32 0, i32 33
  %5215 = getelementptr inbounds %struct.Reg, %struct.Reg* %5214, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %5215 to i64*
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5217 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5216, i64 0, i64 0
  %YMM0.i1302 = bitcast %union.VectorReg* %5217 to %"class.std::bitset"*
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5219 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5218, i64 0, i64 1
  %XMM1.i1303 = bitcast %union.VectorReg* %5219 to %union.vec128_t*
  %5220 = bitcast %"class.std::bitset"* %YMM0.i1302 to i8*
  %5221 = bitcast %"class.std::bitset"* %YMM0.i1302 to i8*
  %5222 = bitcast %union.vec128_t* %XMM1.i1303 to i8*
  %5223 = load i64, i64* %PC.i1301
  %5224 = add i64 %5223, 4
  store i64 %5224, i64* %PC.i1301
  %5225 = bitcast i8* %5221 to double*
  %5226 = load double, double* %5225, align 1
  %5227 = getelementptr inbounds i8, i8* %5221, i64 8
  %5228 = bitcast i8* %5227 to i64*
  %5229 = load i64, i64* %5228, align 1
  %5230 = bitcast i8* %5222 to double*
  %5231 = load double, double* %5230, align 1
  %5232 = fmul double %5226, %5231
  %5233 = bitcast i8* %5220 to double*
  store double %5232, double* %5233, align 1
  %5234 = getelementptr inbounds i8, i8* %5220, i64 8
  %5235 = bitcast i8* %5234 to i64*
  store i64 %5229, i64* %5235, align 1
  store %struct.Memory* %loadMem_4804e8, %struct.Memory** %MEMORY
  %loadMem_4804ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %5236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5237 = getelementptr inbounds %struct.GPR, %struct.GPR* %5236, i32 0, i32 33
  %5238 = getelementptr inbounds %struct.Reg, %struct.Reg* %5237, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %5238 to i64*
  %5239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5240 = getelementptr inbounds %struct.GPR, %struct.GPR* %5239, i32 0, i32 5
  %5241 = getelementptr inbounds %struct.Reg, %struct.Reg* %5240, i32 0, i32 0
  %RCX.i1299 = bitcast %union.anon* %5241 to i64*
  %5242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5243 = getelementptr inbounds %struct.GPR, %struct.GPR* %5242, i32 0, i32 15
  %5244 = getelementptr inbounds %struct.Reg, %struct.Reg* %5243, i32 0, i32 0
  %RBP.i1300 = bitcast %union.anon* %5244 to i64*
  %5245 = load i64, i64* %RBP.i1300
  %5246 = sub i64 %5245, 8
  %5247 = load i64, i64* %PC.i1298
  %5248 = add i64 %5247, 4
  store i64 %5248, i64* %PC.i1298
  %5249 = inttoptr i64 %5246 to i32*
  %5250 = load i32, i32* %5249
  %5251 = sext i32 %5250 to i64
  store i64 %5251, i64* %RCX.i1299, align 8
  store %struct.Memory* %loadMem_4804ec, %struct.Memory** %MEMORY
  %loadMem_4804f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5253 = getelementptr inbounds %struct.GPR, %struct.GPR* %5252, i32 0, i32 33
  %5254 = getelementptr inbounds %struct.Reg, %struct.Reg* %5253, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %5254 to i64*
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5256 = getelementptr inbounds %struct.GPR, %struct.GPR* %5255, i32 0, i32 5
  %5257 = getelementptr inbounds %struct.Reg, %struct.Reg* %5256, i32 0, i32 0
  %RCX.i1297 = bitcast %union.anon* %5257 to i64*
  %5258 = load i64, i64* %RCX.i1297
  %5259 = load i64, i64* %PC.i1296
  %5260 = add i64 %5259, 7
  store i64 %5260, i64* %PC.i1296
  %5261 = sext i64 %5258 to i128
  %5262 = and i128 %5261, -18446744073709551616
  %5263 = zext i64 %5258 to i128
  %5264 = or i128 %5262, %5263
  %5265 = mul i128 564, %5264
  %5266 = trunc i128 %5265 to i64
  store i64 %5266, i64* %RCX.i1297, align 8
  %5267 = sext i64 %5266 to i128
  %5268 = icmp ne i128 %5267, %5265
  %5269 = zext i1 %5268 to i8
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5269, i8* %5270, align 1
  %5271 = trunc i128 %5265 to i32
  %5272 = and i32 %5271, 255
  %5273 = call i32 @llvm.ctpop.i32(i32 %5272)
  %5274 = trunc i32 %5273 to i8
  %5275 = and i8 %5274, 1
  %5276 = xor i8 %5275, 1
  %5277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5276, i8* %5277, align 1
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5278, align 1
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5279, align 1
  %5280 = lshr i64 %5266, 63
  %5281 = trunc i64 %5280 to i8
  %5282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5281, i8* %5282, align 1
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5269, i8* %5283, align 1
  store %struct.Memory* %loadMem_4804f0, %struct.Memory** %MEMORY
  %loadMem_4804f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5285 = getelementptr inbounds %struct.GPR, %struct.GPR* %5284, i32 0, i32 33
  %5286 = getelementptr inbounds %struct.Reg, %struct.Reg* %5285, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %5286 to i64*
  %5287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5288 = getelementptr inbounds %struct.GPR, %struct.GPR* %5287, i32 0, i32 1
  %5289 = getelementptr inbounds %struct.Reg, %struct.Reg* %5288, i32 0, i32 0
  %RAX.i1294 = bitcast %union.anon* %5289 to i64*
  %5290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5291 = getelementptr inbounds %struct.GPR, %struct.GPR* %5290, i32 0, i32 5
  %5292 = getelementptr inbounds %struct.Reg, %struct.Reg* %5291, i32 0, i32 0
  %RCX.i1295 = bitcast %union.anon* %5292 to i64*
  %5293 = load i64, i64* %RAX.i1294
  %5294 = load i64, i64* %RCX.i1295
  %5295 = load i64, i64* %PC.i1293
  %5296 = add i64 %5295, 3
  store i64 %5296, i64* %PC.i1293
  %5297 = add i64 %5294, %5293
  store i64 %5297, i64* %RAX.i1294, align 8
  %5298 = icmp ult i64 %5297, %5293
  %5299 = icmp ult i64 %5297, %5294
  %5300 = or i1 %5298, %5299
  %5301 = zext i1 %5300 to i8
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5301, i8* %5302, align 1
  %5303 = trunc i64 %5297 to i32
  %5304 = and i32 %5303, 255
  %5305 = call i32 @llvm.ctpop.i32(i32 %5304)
  %5306 = trunc i32 %5305 to i8
  %5307 = and i8 %5306, 1
  %5308 = xor i8 %5307, 1
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5308, i8* %5309, align 1
  %5310 = xor i64 %5294, %5293
  %5311 = xor i64 %5310, %5297
  %5312 = lshr i64 %5311, 4
  %5313 = trunc i64 %5312 to i8
  %5314 = and i8 %5313, 1
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5314, i8* %5315, align 1
  %5316 = icmp eq i64 %5297, 0
  %5317 = zext i1 %5316 to i8
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5317, i8* %5318, align 1
  %5319 = lshr i64 %5297, 63
  %5320 = trunc i64 %5319 to i8
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5320, i8* %5321, align 1
  %5322 = lshr i64 %5293, 63
  %5323 = lshr i64 %5294, 63
  %5324 = xor i64 %5319, %5322
  %5325 = xor i64 %5319, %5323
  %5326 = add i64 %5324, %5325
  %5327 = icmp eq i64 %5326, 2
  %5328 = zext i1 %5327 to i8
  %5329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5328, i8* %5329, align 1
  store %struct.Memory* %loadMem_4804f7, %struct.Memory** %MEMORY
  %loadMem_4804fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5331 = getelementptr inbounds %struct.GPR, %struct.GPR* %5330, i32 0, i32 33
  %5332 = getelementptr inbounds %struct.Reg, %struct.Reg* %5331, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %5332 to i64*
  %5333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5334 = getelementptr inbounds %struct.GPR, %struct.GPR* %5333, i32 0, i32 1
  %5335 = getelementptr inbounds %struct.Reg, %struct.Reg* %5334, i32 0, i32 0
  %RAX.i1291 = bitcast %union.anon* %5335 to i64*
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5337 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5336, i64 0, i64 1
  %YMM1.i1292 = bitcast %union.VectorReg* %5337 to %"class.std::bitset"*
  %5338 = bitcast %"class.std::bitset"* %YMM1.i1292 to i8*
  %5339 = load i64, i64* %RAX.i1291
  %5340 = add i64 %5339, 44
  %5341 = load i64, i64* %PC.i1290
  %5342 = add i64 %5341, 5
  store i64 %5342, i64* %PC.i1290
  %5343 = inttoptr i64 %5340 to float*
  %5344 = load float, float* %5343
  %5345 = fpext float %5344 to double
  %5346 = bitcast i8* %5338 to double*
  store double %5345, double* %5346, align 1
  store %struct.Memory* %loadMem_4804fa, %struct.Memory** %MEMORY
  %loadMem_4804ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5348 = getelementptr inbounds %struct.GPR, %struct.GPR* %5347, i32 0, i32 33
  %5349 = getelementptr inbounds %struct.Reg, %struct.Reg* %5348, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %5349 to i64*
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5351 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5350, i64 0, i64 0
  %YMM0.i1288 = bitcast %union.VectorReg* %5351 to %"class.std::bitset"*
  %5352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5353 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5352, i64 0, i64 1
  %XMM1.i1289 = bitcast %union.VectorReg* %5353 to %union.vec128_t*
  %5354 = bitcast %"class.std::bitset"* %YMM0.i1288 to i8*
  %5355 = bitcast %"class.std::bitset"* %YMM0.i1288 to i8*
  %5356 = bitcast %union.vec128_t* %XMM1.i1289 to i8*
  %5357 = load i64, i64* %PC.i1287
  %5358 = add i64 %5357, 4
  store i64 %5358, i64* %PC.i1287
  %5359 = bitcast i8* %5355 to double*
  %5360 = load double, double* %5359, align 1
  %5361 = getelementptr inbounds i8, i8* %5355, i64 8
  %5362 = bitcast i8* %5361 to i64*
  %5363 = load i64, i64* %5362, align 1
  %5364 = bitcast i8* %5356 to double*
  %5365 = load double, double* %5364, align 1
  %5366 = fadd double %5360, %5365
  %5367 = bitcast i8* %5354 to double*
  store double %5366, double* %5367, align 1
  %5368 = getelementptr inbounds i8, i8* %5354, i64 8
  %5369 = bitcast i8* %5368 to i64*
  store i64 %5363, i64* %5369, align 1
  store %struct.Memory* %loadMem_4804ff, %struct.Memory** %MEMORY
  %loadMem_480503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5371 = getelementptr inbounds %struct.GPR, %struct.GPR* %5370, i32 0, i32 33
  %5372 = getelementptr inbounds %struct.Reg, %struct.Reg* %5371, i32 0, i32 0
  %PC.i1284 = bitcast %union.anon* %5372 to i64*
  %5373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5374 = getelementptr inbounds %struct.GPR, %struct.GPR* %5373, i32 0, i32 15
  %5375 = getelementptr inbounds %struct.Reg, %struct.Reg* %5374, i32 0, i32 0
  %RBP.i1285 = bitcast %union.anon* %5375 to i64*
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5377 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5376, i64 0, i64 0
  %XMM0.i1286 = bitcast %union.VectorReg* %5377 to %union.vec128_t*
  %5378 = load i64, i64* %RBP.i1285
  %5379 = sub i64 %5378, 112
  %5380 = bitcast %union.vec128_t* %XMM0.i1286 to i8*
  %5381 = load i64, i64* %PC.i1284
  %5382 = add i64 %5381, 5
  store i64 %5382, i64* %PC.i1284
  %5383 = bitcast i8* %5380 to double*
  %5384 = load double, double* %5383, align 1
  %5385 = inttoptr i64 %5379 to double*
  store double %5384, double* %5385
  store %struct.Memory* %loadMem_480503, %struct.Memory** %MEMORY
  br label %block_.L_480508

block_.L_480508:                                  ; preds = %block_.L_4804d1, %block_.L_4804c2
  %loadMem_480508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5387 = getelementptr inbounds %struct.GPR, %struct.GPR* %5386, i32 0, i32 33
  %5388 = getelementptr inbounds %struct.Reg, %struct.Reg* %5387, i32 0, i32 0
  %PC.i1281 = bitcast %union.anon* %5388 to i64*
  %5389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5390 = getelementptr inbounds %struct.GPR, %struct.GPR* %5389, i32 0, i32 15
  %5391 = getelementptr inbounds %struct.Reg, %struct.Reg* %5390, i32 0, i32 0
  %RBP.i1282 = bitcast %union.anon* %5391 to i64*
  %5392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5393 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5392, i64 0, i64 0
  %YMM0.i1283 = bitcast %union.VectorReg* %5393 to %"class.std::bitset"*
  %5394 = bitcast %"class.std::bitset"* %YMM0.i1283 to i8*
  %5395 = load i64, i64* %RBP.i1282
  %5396 = sub i64 %5395, 112
  %5397 = load i64, i64* %PC.i1281
  %5398 = add i64 %5397, 5
  store i64 %5398, i64* %PC.i1281
  %5399 = inttoptr i64 %5396 to double*
  %5400 = load double, double* %5399
  %5401 = bitcast i8* %5394 to double*
  store double %5400, double* %5401, align 1
  %5402 = getelementptr inbounds i8, i8* %5394, i64 8
  %5403 = bitcast i8* %5402 to double*
  store double 0.000000e+00, double* %5403, align 1
  store %struct.Memory* %loadMem_480508, %struct.Memory** %MEMORY
  %loadMem_48050d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5405 = getelementptr inbounds %struct.GPR, %struct.GPR* %5404, i32 0, i32 33
  %5406 = getelementptr inbounds %struct.Reg, %struct.Reg* %5405, i32 0, i32 0
  %PC.i1278 = bitcast %union.anon* %5406 to i64*
  %5407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5408 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5407, i64 0, i64 1
  %YMM1.i1279 = bitcast %union.VectorReg* %5408 to %"class.std::bitset"*
  %5409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5410 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5409, i64 0, i64 1
  %XMM1.i1280 = bitcast %union.VectorReg* %5410 to %union.vec128_t*
  %5411 = bitcast %"class.std::bitset"* %YMM1.i1279 to i8*
  %5412 = bitcast %"class.std::bitset"* %YMM1.i1279 to i8*
  %5413 = bitcast %union.vec128_t* %XMM1.i1280 to i8*
  %5414 = load i64, i64* %PC.i1278
  %5415 = add i64 %5414, 3
  store i64 %5415, i64* %PC.i1278
  %5416 = bitcast i8* %5412 to i64*
  %5417 = load i64, i64* %5416, align 1
  %5418 = getelementptr inbounds i8, i8* %5412, i64 8
  %5419 = bitcast i8* %5418 to i64*
  %5420 = load i64, i64* %5419, align 1
  %5421 = bitcast i8* %5413 to i64*
  %5422 = load i64, i64* %5421, align 1
  %5423 = getelementptr inbounds i8, i8* %5413, i64 8
  %5424 = bitcast i8* %5423 to i64*
  %5425 = load i64, i64* %5424, align 1
  %5426 = xor i64 %5422, %5417
  %5427 = xor i64 %5425, %5420
  %5428 = trunc i64 %5426 to i32
  %5429 = lshr i64 %5426, 32
  %5430 = trunc i64 %5429 to i32
  %5431 = bitcast i8* %5411 to i32*
  store i32 %5428, i32* %5431, align 1
  %5432 = getelementptr inbounds i8, i8* %5411, i64 4
  %5433 = bitcast i8* %5432 to i32*
  store i32 %5430, i32* %5433, align 1
  %5434 = trunc i64 %5427 to i32
  %5435 = getelementptr inbounds i8, i8* %5411, i64 8
  %5436 = bitcast i8* %5435 to i32*
  store i32 %5434, i32* %5436, align 1
  %5437 = lshr i64 %5427, 32
  %5438 = trunc i64 %5437 to i32
  %5439 = getelementptr inbounds i8, i8* %5411, i64 12
  %5440 = bitcast i8* %5439 to i32*
  store i32 %5438, i32* %5440, align 1
  store %struct.Memory* %loadMem_48050d, %struct.Memory** %MEMORY
  %loadMem_480510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5442 = getelementptr inbounds %struct.GPR, %struct.GPR* %5441, i32 0, i32 33
  %5443 = getelementptr inbounds %struct.Reg, %struct.Reg* %5442, i32 0, i32 0
  %PC.i1275 = bitcast %union.anon* %5443 to i64*
  %5444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5445 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5444, i64 0, i64 0
  %YMM0.i1276 = bitcast %union.VectorReg* %5445 to %"class.std::bitset"*
  %5446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5447 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5446, i64 0, i64 0
  %XMM0.i1277 = bitcast %union.VectorReg* %5447 to %union.vec128_t*
  %5448 = bitcast %"class.std::bitset"* %YMM0.i1276 to i8*
  %5449 = bitcast %union.vec128_t* %XMM0.i1277 to i8*
  %5450 = load i64, i64* %PC.i1275
  %5451 = add i64 %5450, 4
  store i64 %5451, i64* %PC.i1275
  %5452 = bitcast i8* %5448 to <2 x i32>*
  %5453 = load <2 x i32>, <2 x i32>* %5452, align 1
  %5454 = getelementptr inbounds i8, i8* %5448, i64 8
  %5455 = bitcast i8* %5454 to <2 x i32>*
  %5456 = load <2 x i32>, <2 x i32>* %5455, align 1
  %5457 = bitcast i8* %5449 to double*
  %5458 = load double, double* %5457, align 1
  %5459 = fptrunc double %5458 to float
  %5460 = bitcast i8* %5448 to float*
  store float %5459, float* %5460, align 1
  %5461 = extractelement <2 x i32> %5453, i32 1
  %5462 = getelementptr inbounds i8, i8* %5448, i64 4
  %5463 = bitcast i8* %5462 to i32*
  store i32 %5461, i32* %5463, align 1
  %5464 = extractelement <2 x i32> %5456, i32 0
  %5465 = bitcast i8* %5454 to i32*
  store i32 %5464, i32* %5465, align 1
  %5466 = extractelement <2 x i32> %5456, i32 1
  %5467 = getelementptr inbounds i8, i8* %5448, i64 12
  %5468 = bitcast i8* %5467 to i32*
  store i32 %5466, i32* %5468, align 1
  store %struct.Memory* %loadMem_480510, %struct.Memory** %MEMORY
  %loadMem_480514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5470 = getelementptr inbounds %struct.GPR, %struct.GPR* %5469, i32 0, i32 33
  %5471 = getelementptr inbounds %struct.Reg, %struct.Reg* %5470, i32 0, i32 0
  %PC.i1272 = bitcast %union.anon* %5471 to i64*
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5473 = getelementptr inbounds %struct.GPR, %struct.GPR* %5472, i32 0, i32 15
  %5474 = getelementptr inbounds %struct.Reg, %struct.Reg* %5473, i32 0, i32 0
  %RBP.i1273 = bitcast %union.anon* %5474 to i64*
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5476 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5475, i64 0, i64 0
  %XMM0.i1274 = bitcast %union.VectorReg* %5476 to %union.vec128_t*
  %5477 = load i64, i64* %RBP.i1273
  %5478 = sub i64 %5477, 48
  %5479 = bitcast %union.vec128_t* %XMM0.i1274 to i8*
  %5480 = load i64, i64* %PC.i1272
  %5481 = add i64 %5480, 5
  store i64 %5481, i64* %PC.i1272
  %5482 = bitcast i8* %5479 to <2 x float>*
  %5483 = load <2 x float>, <2 x float>* %5482, align 1
  %5484 = extractelement <2 x float> %5483, i32 0
  %5485 = inttoptr i64 %5478 to float*
  store float %5484, float* %5485
  store %struct.Memory* %loadMem_480514, %struct.Memory** %MEMORY
  %loadMem_480519 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5487 = getelementptr inbounds %struct.GPR, %struct.GPR* %5486, i32 0, i32 33
  %5488 = getelementptr inbounds %struct.Reg, %struct.Reg* %5487, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %5488 to i64*
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5490 = getelementptr inbounds %struct.GPR, %struct.GPR* %5489, i32 0, i32 15
  %5491 = getelementptr inbounds %struct.Reg, %struct.Reg* %5490, i32 0, i32 0
  %RBP.i1270 = bitcast %union.anon* %5491 to i64*
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5493 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5492, i64 0, i64 0
  %YMM0.i1271 = bitcast %union.VectorReg* %5493 to %"class.std::bitset"*
  %5494 = bitcast %"class.std::bitset"* %YMM0.i1271 to i8*
  %5495 = load i64, i64* %RBP.i1270
  %5496 = sub i64 %5495, 48
  %5497 = load i64, i64* %PC.i1269
  %5498 = add i64 %5497, 5
  store i64 %5498, i64* %PC.i1269
  %5499 = inttoptr i64 %5496 to float*
  %5500 = load float, float* %5499
  %5501 = bitcast i8* %5494 to float*
  store float %5500, float* %5501, align 1
  %5502 = getelementptr inbounds i8, i8* %5494, i64 4
  %5503 = bitcast i8* %5502 to float*
  store float 0.000000e+00, float* %5503, align 1
  %5504 = getelementptr inbounds i8, i8* %5494, i64 8
  %5505 = bitcast i8* %5504 to float*
  store float 0.000000e+00, float* %5505, align 1
  %5506 = getelementptr inbounds i8, i8* %5494, i64 12
  %5507 = bitcast i8* %5506 to float*
  store float 0.000000e+00, float* %5507, align 1
  store %struct.Memory* %loadMem_480519, %struct.Memory** %MEMORY
  %loadMem_48051e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5509 = getelementptr inbounds %struct.GPR, %struct.GPR* %5508, i32 0, i32 33
  %5510 = getelementptr inbounds %struct.Reg, %struct.Reg* %5509, i32 0, i32 0
  %PC.i1266 = bitcast %union.anon* %5510 to i64*
  %5511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5512 = getelementptr inbounds %struct.GPR, %struct.GPR* %5511, i32 0, i32 15
  %5513 = getelementptr inbounds %struct.Reg, %struct.Reg* %5512, i32 0, i32 0
  %RBP.i1267 = bitcast %union.anon* %5513 to i64*
  %5514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5515 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5514, i64 0, i64 0
  %YMM0.i1268 = bitcast %union.VectorReg* %5515 to %"class.std::bitset"*
  %5516 = bitcast %"class.std::bitset"* %YMM0.i1268 to i8*
  %5517 = bitcast %"class.std::bitset"* %YMM0.i1268 to i8*
  %5518 = load i64, i64* %RBP.i1267
  %5519 = sub i64 %5518, 24
  %5520 = load i64, i64* %PC.i1266
  %5521 = add i64 %5520, 5
  store i64 %5521, i64* %PC.i1266
  %5522 = bitcast i8* %5517 to <2 x float>*
  %5523 = load <2 x float>, <2 x float>* %5522, align 1
  %5524 = getelementptr inbounds i8, i8* %5517, i64 8
  %5525 = bitcast i8* %5524 to <2 x i32>*
  %5526 = load <2 x i32>, <2 x i32>* %5525, align 1
  %5527 = inttoptr i64 %5519 to float*
  %5528 = load float, float* %5527
  %5529 = extractelement <2 x float> %5523, i32 0
  %5530 = fadd float %5529, %5528
  %5531 = bitcast i8* %5516 to float*
  store float %5530, float* %5531, align 1
  %5532 = bitcast <2 x float> %5523 to <2 x i32>
  %5533 = extractelement <2 x i32> %5532, i32 1
  %5534 = getelementptr inbounds i8, i8* %5516, i64 4
  %5535 = bitcast i8* %5534 to i32*
  store i32 %5533, i32* %5535, align 1
  %5536 = extractelement <2 x i32> %5526, i32 0
  %5537 = getelementptr inbounds i8, i8* %5516, i64 8
  %5538 = bitcast i8* %5537 to i32*
  store i32 %5536, i32* %5538, align 1
  %5539 = extractelement <2 x i32> %5526, i32 1
  %5540 = getelementptr inbounds i8, i8* %5516, i64 12
  %5541 = bitcast i8* %5540 to i32*
  store i32 %5539, i32* %5541, align 1
  store %struct.Memory* %loadMem_48051e, %struct.Memory** %MEMORY
  %loadMem_480523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5543 = getelementptr inbounds %struct.GPR, %struct.GPR* %5542, i32 0, i32 33
  %5544 = getelementptr inbounds %struct.Reg, %struct.Reg* %5543, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %5544 to i64*
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5546 = getelementptr inbounds %struct.GPR, %struct.GPR* %5545, i32 0, i32 15
  %5547 = getelementptr inbounds %struct.Reg, %struct.Reg* %5546, i32 0, i32 0
  %RBP.i1264 = bitcast %union.anon* %5547 to i64*
  %5548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5549 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5548, i64 0, i64 0
  %XMM0.i1265 = bitcast %union.VectorReg* %5549 to %union.vec128_t*
  %5550 = load i64, i64* %RBP.i1264
  %5551 = sub i64 %5550, 24
  %5552 = bitcast %union.vec128_t* %XMM0.i1265 to i8*
  %5553 = load i64, i64* %PC.i1263
  %5554 = add i64 %5553, 5
  store i64 %5554, i64* %PC.i1263
  %5555 = bitcast i8* %5552 to <2 x float>*
  %5556 = load <2 x float>, <2 x float>* %5555, align 1
  %5557 = extractelement <2 x float> %5556, i32 0
  %5558 = inttoptr i64 %5551 to float*
  store float %5557, float* %5558
  store %struct.Memory* %loadMem_480523, %struct.Memory** %MEMORY
  %loadMem_480528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5560 = getelementptr inbounds %struct.GPR, %struct.GPR* %5559, i32 0, i32 33
  %5561 = getelementptr inbounds %struct.Reg, %struct.Reg* %5560, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %5561 to i64*
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5563 = getelementptr inbounds %struct.GPR, %struct.GPR* %5562, i32 0, i32 15
  %5564 = getelementptr inbounds %struct.Reg, %struct.Reg* %5563, i32 0, i32 0
  %RBP.i1261 = bitcast %union.anon* %5564 to i64*
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5566 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5565, i64 0, i64 0
  %YMM0.i1262 = bitcast %union.VectorReg* %5566 to %"class.std::bitset"*
  %5567 = bitcast %"class.std::bitset"* %YMM0.i1262 to i8*
  %5568 = load i64, i64* %RBP.i1261
  %5569 = sub i64 %5568, 48
  %5570 = load i64, i64* %PC.i1260
  %5571 = add i64 %5570, 5
  store i64 %5571, i64* %PC.i1260
  %5572 = inttoptr i64 %5569 to float*
  %5573 = load float, float* %5572
  %5574 = fpext float %5573 to double
  %5575 = bitcast i8* %5567 to double*
  store double %5574, double* %5575, align 1
  store %struct.Memory* %loadMem_480528, %struct.Memory** %MEMORY
  %loadMem_48052d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5577 = getelementptr inbounds %struct.GPR, %struct.GPR* %5576, i32 0, i32 33
  %5578 = getelementptr inbounds %struct.Reg, %struct.Reg* %5577, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %5578 to i64*
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5580 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5579, i64 0, i64 0
  %XMM0.i1256 = bitcast %union.VectorReg* %5580 to %union.vec128_t*
  %5581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5582 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5581, i64 0, i64 1
  %XMM1.i1257 = bitcast %union.VectorReg* %5582 to %union.vec128_t*
  %5583 = bitcast %union.vec128_t* %XMM0.i1256 to i8*
  %5584 = bitcast %union.vec128_t* %XMM1.i1257 to i8*
  %5585 = load i64, i64* %PC.i1255
  %5586 = add i64 %5585, 4
  store i64 %5586, i64* %PC.i1255
  %5587 = bitcast i8* %5583 to double*
  %5588 = load double, double* %5587, align 1
  %5589 = bitcast i8* %5584 to double*
  %5590 = load double, double* %5589, align 1
  %5591 = fcmp uno double %5588, %5590
  br i1 %5591, label %5592, label %5604

; <label>:5592:                                   ; preds = %block_.L_480508
  %5593 = fadd double %5588, %5590
  %5594 = bitcast double %5593 to i64
  %5595 = and i64 %5594, 9221120237041090560
  %5596 = icmp eq i64 %5595, 9218868437227405312
  %5597 = and i64 %5594, 2251799813685247
  %5598 = icmp ne i64 %5597, 0
  %5599 = and i1 %5596, %5598
  br i1 %5599, label %5600, label %5610

; <label>:5600:                                   ; preds = %5592
  %5601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5602 = load i64, i64* %5601, align 8
  %5603 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5602, %struct.Memory* %loadMem_48052d)
  br label %routine_ucomisd__xmm1___xmm0.exit1258

; <label>:5604:                                   ; preds = %block_.L_480508
  %5605 = fcmp ogt double %5588, %5590
  br i1 %5605, label %5610, label %5606

; <label>:5606:                                   ; preds = %5604
  %5607 = fcmp olt double %5588, %5590
  br i1 %5607, label %5610, label %5608

; <label>:5608:                                   ; preds = %5606
  %5609 = fcmp oeq double %5588, %5590
  br i1 %5609, label %5610, label %5617

; <label>:5610:                                   ; preds = %5608, %5606, %5604, %5592
  %5611 = phi i8 [ 0, %5604 ], [ 0, %5606 ], [ 1, %5608 ], [ 1, %5592 ]
  %5612 = phi i8 [ 0, %5604 ], [ 0, %5606 ], [ 0, %5608 ], [ 1, %5592 ]
  %5613 = phi i8 [ 0, %5604 ], [ 1, %5606 ], [ 0, %5608 ], [ 1, %5592 ]
  %5614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5611, i8* %5614, align 1
  %5615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5612, i8* %5615, align 1
  %5616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5613, i8* %5616, align 1
  br label %5617

; <label>:5617:                                   ; preds = %5610, %5608
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5618, align 1
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5619, align 1
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5620, align 1
  br label %routine_ucomisd__xmm1___xmm0.exit1258

routine_ucomisd__xmm1___xmm0.exit1258:            ; preds = %5600, %5617
  %5621 = phi %struct.Memory* [ %5603, %5600 ], [ %loadMem_48052d, %5617 ]
  store %struct.Memory* %5621, %struct.Memory** %MEMORY
  %loadMem_480531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5623 = getelementptr inbounds %struct.GPR, %struct.GPR* %5622, i32 0, i32 33
  %5624 = getelementptr inbounds %struct.Reg, %struct.Reg* %5623, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %5624 to i64*
  %5625 = load i64, i64* %PC.i1254
  %5626 = add i64 %5625, 17
  %5627 = load i64, i64* %PC.i1254
  %5628 = add i64 %5627, 6
  %5629 = load i64, i64* %PC.i1254
  %5630 = add i64 %5629, 6
  store i64 %5630, i64* %PC.i1254
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5632 = load i8, i8* %5631, align 1
  %5633 = icmp eq i8 %5632, 0
  %5634 = zext i1 %5633 to i8
  store i8 %5634, i8* %BRANCH_TAKEN, align 1
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5636 = select i1 %5633, i64 %5626, i64 %5628
  store i64 %5636, i64* %5635, align 8
  store %struct.Memory* %loadMem_480531, %struct.Memory** %MEMORY
  %loadBr_480531 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480531 = icmp eq i8 %loadBr_480531, 1
  br i1 %cmpBr_480531, label %block_.L_480542, label %block_480537

block_480537:                                     ; preds = %routine_ucomisd__xmm1___xmm0.exit1258
  %loadMem_480537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5638 = getelementptr inbounds %struct.GPR, %struct.GPR* %5637, i32 0, i32 33
  %5639 = getelementptr inbounds %struct.Reg, %struct.Reg* %5638, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %5639 to i64*
  %5640 = load i64, i64* %PC.i1253
  %5641 = add i64 %5640, 11
  %5642 = load i64, i64* %PC.i1253
  %5643 = add i64 %5642, 6
  %5644 = load i64, i64* %PC.i1253
  %5645 = add i64 %5644, 6
  store i64 %5645, i64* %PC.i1253
  %5646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5647 = load i8, i8* %5646, align 1
  store i8 %5647, i8* %BRANCH_TAKEN, align 1
  %5648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5649 = icmp ne i8 %5647, 0
  %5650 = select i1 %5649, i64 %5641, i64 %5643
  store i64 %5650, i64* %5648, align 8
  store %struct.Memory* %loadMem_480537, %struct.Memory** %MEMORY
  %loadBr_480537 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480537 = icmp eq i8 %loadBr_480537, 1
  br i1 %cmpBr_480537, label %block_.L_480542, label %block_48053d

block_48053d:                                     ; preds = %block_480537
  %loadMem_48053d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5652 = getelementptr inbounds %struct.GPR, %struct.GPR* %5651, i32 0, i32 33
  %5653 = getelementptr inbounds %struct.Reg, %struct.Reg* %5652, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %5653 to i64*
  %5654 = load i64, i64* %PC.i1252
  %5655 = add i64 %5654, 91
  %5656 = load i64, i64* %PC.i1252
  %5657 = add i64 %5656, 5
  store i64 %5657, i64* %PC.i1252
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5655, i64* %5658, align 8
  store %struct.Memory* %loadMem_48053d, %struct.Memory** %MEMORY
  br label %block_.L_480598

block_.L_480542:                                  ; preds = %block_480537, %routine_ucomisd__xmm1___xmm0.exit1258
  %loadMem_480542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5660 = getelementptr inbounds %struct.GPR, %struct.GPR* %5659, i32 0, i32 33
  %5661 = getelementptr inbounds %struct.Reg, %struct.Reg* %5660, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %5661 to i64*
  %5662 = load i64, i64* %PC.i1251
  %5663 = add i64 %5662, 8
  store i64 %5663, i64* %PC.i1251
  %5664 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %5665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5665, align 1
  %5666 = and i32 %5664, 255
  %5667 = call i32 @llvm.ctpop.i32(i32 %5666)
  %5668 = trunc i32 %5667 to i8
  %5669 = and i8 %5668, 1
  %5670 = xor i8 %5669, 1
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5670, i8* %5671, align 1
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5672, align 1
  %5673 = icmp eq i32 %5664, 0
  %5674 = zext i1 %5673 to i8
  %5675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5674, i8* %5675, align 1
  %5676 = lshr i32 %5664, 31
  %5677 = trunc i32 %5676 to i8
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5677, i8* %5678, align 1
  %5679 = lshr i32 %5664, 31
  %5680 = xor i32 %5676, %5679
  %5681 = add i32 %5680, %5679
  %5682 = icmp eq i32 %5681, 2
  %5683 = zext i1 %5682 to i8
  %5684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5683, i8* %5684, align 1
  store %struct.Memory* %loadMem_480542, %struct.Memory** %MEMORY
  %loadMem_48054a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5686 = getelementptr inbounds %struct.GPR, %struct.GPR* %5685, i32 0, i32 33
  %5687 = getelementptr inbounds %struct.Reg, %struct.Reg* %5686, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %5687 to i64*
  %5688 = load i64, i64* %PC.i1250
  %5689 = add i64 %5688, 11
  %5690 = load i64, i64* %PC.i1250
  %5691 = add i64 %5690, 6
  %5692 = load i64, i64* %PC.i1250
  %5693 = add i64 %5692, 6
  store i64 %5693, i64* %PC.i1250
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5695 = load i8, i8* %5694, align 1
  %5696 = icmp eq i8 %5695, 0
  %5697 = zext i1 %5696 to i8
  store i8 %5697, i8* %BRANCH_TAKEN, align 1
  %5698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5699 = select i1 %5696, i64 %5689, i64 %5691
  store i64 %5699, i64* %5698, align 8
  store %struct.Memory* %loadMem_48054a, %struct.Memory** %MEMORY
  %loadBr_48054a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48054a = icmp eq i8 %loadBr_48054a, 1
  br i1 %cmpBr_48054a, label %block_.L_480555, label %block_480550

block_480550:                                     ; preds = %block_.L_480542
  %loadMem_480550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5701 = getelementptr inbounds %struct.GPR, %struct.GPR* %5700, i32 0, i32 33
  %5702 = getelementptr inbounds %struct.Reg, %struct.Reg* %5701, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %5702 to i64*
  %5703 = load i64, i64* %PC.i1249
  %5704 = add i64 %5703, 67
  %5705 = load i64, i64* %PC.i1249
  %5706 = add i64 %5705, 5
  store i64 %5706, i64* %PC.i1249
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5704, i64* %5707, align 8
  store %struct.Memory* %loadMem_480550, %struct.Memory** %MEMORY
  br label %block_.L_480593

block_.L_480555:                                  ; preds = %block_.L_480542
  %loadMem_480555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5709 = getelementptr inbounds %struct.GPR, %struct.GPR* %5708, i32 0, i32 33
  %5710 = getelementptr inbounds %struct.Reg, %struct.Reg* %5709, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %5710 to i64*
  %5711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5712 = getelementptr inbounds %struct.GPR, %struct.GPR* %5711, i32 0, i32 11
  %5713 = getelementptr inbounds %struct.Reg, %struct.Reg* %5712, i32 0, i32 0
  %RDI.i1248 = bitcast %union.anon* %5713 to i64*
  %5714 = load i64, i64* %PC.i1247
  %5715 = add i64 %5714, 10
  store i64 %5715, i64* %PC.i1247
  store i64 ptrtoint (%G__0x58208a_type* @G__0x58208a to i64), i64* %RDI.i1248, align 8
  store %struct.Memory* %loadMem_480555, %struct.Memory** %MEMORY
  %loadMem_48055f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5717 = getelementptr inbounds %struct.GPR, %struct.GPR* %5716, i32 0, i32 33
  %5718 = getelementptr inbounds %struct.Reg, %struct.Reg* %5717, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %5718 to i64*
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5720 = getelementptr inbounds %struct.GPR, %struct.GPR* %5719, i32 0, i32 1
  %5721 = getelementptr inbounds %struct.Reg, %struct.Reg* %5720, i32 0, i32 0
  %RAX.i1246 = bitcast %union.anon* %5721 to i64*
  %5722 = load i64, i64* %PC.i1245
  %5723 = add i64 %5722, 10
  store i64 %5723, i64* %PC.i1245
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1246, align 8
  store %struct.Memory* %loadMem_48055f, %struct.Memory** %MEMORY
  %loadMem_480569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5725 = getelementptr inbounds %struct.GPR, %struct.GPR* %5724, i32 0, i32 33
  %5726 = getelementptr inbounds %struct.Reg, %struct.Reg* %5725, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %5726 to i64*
  %5727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5728 = getelementptr inbounds %struct.GPR, %struct.GPR* %5727, i32 0, i32 9
  %5729 = getelementptr inbounds %struct.Reg, %struct.Reg* %5728, i32 0, i32 0
  %RSI.i1243 = bitcast %union.anon* %5729 to i64*
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5731 = getelementptr inbounds %struct.GPR, %struct.GPR* %5730, i32 0, i32 15
  %5732 = getelementptr inbounds %struct.Reg, %struct.Reg* %5731, i32 0, i32 0
  %RBP.i1244 = bitcast %union.anon* %5732 to i64*
  %5733 = load i64, i64* %RBP.i1244
  %5734 = sub i64 %5733, 8
  %5735 = load i64, i64* %PC.i1242
  %5736 = add i64 %5735, 3
  store i64 %5736, i64* %PC.i1242
  %5737 = inttoptr i64 %5734 to i32*
  %5738 = load i32, i32* %5737
  %5739 = zext i32 %5738 to i64
  store i64 %5739, i64* %RSI.i1243, align 8
  store %struct.Memory* %loadMem_480569, %struct.Memory** %MEMORY
  %loadMem_48056c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5741 = getelementptr inbounds %struct.GPR, %struct.GPR* %5740, i32 0, i32 33
  %5742 = getelementptr inbounds %struct.Reg, %struct.Reg* %5741, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %5742 to i64*
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5744 = getelementptr inbounds %struct.GPR, %struct.GPR* %5743, i32 0, i32 15
  %5745 = getelementptr inbounds %struct.Reg, %struct.Reg* %5744, i32 0, i32 0
  %RBP.i1240 = bitcast %union.anon* %5745 to i64*
  %5746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5747 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5746, i64 0, i64 0
  %YMM0.i1241 = bitcast %union.VectorReg* %5747 to %"class.std::bitset"*
  %5748 = bitcast %"class.std::bitset"* %YMM0.i1241 to i8*
  %5749 = load i64, i64* %RBP.i1240
  %5750 = sub i64 %5749, 48
  %5751 = load i64, i64* %PC.i1239
  %5752 = add i64 %5751, 5
  store i64 %5752, i64* %PC.i1239
  %5753 = inttoptr i64 %5750 to float*
  %5754 = load float, float* %5753
  %5755 = fpext float %5754 to double
  %5756 = bitcast i8* %5748 to double*
  store double %5755, double* %5756, align 1
  store %struct.Memory* %loadMem_48056c, %struct.Memory** %MEMORY
  %loadMem_480571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5758 = getelementptr inbounds %struct.GPR, %struct.GPR* %5757, i32 0, i32 33
  %5759 = getelementptr inbounds %struct.Reg, %struct.Reg* %5758, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %5759 to i64*
  %5760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5761 = getelementptr inbounds %struct.GPR, %struct.GPR* %5760, i32 0, i32 15
  %5762 = getelementptr inbounds %struct.Reg, %struct.Reg* %5761, i32 0, i32 0
  %RBP.i1237 = bitcast %union.anon* %5762 to i64*
  %5763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5764 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5763, i64 0, i64 1
  %YMM1.i1238 = bitcast %union.VectorReg* %5764 to %"class.std::bitset"*
  %5765 = bitcast %"class.std::bitset"* %YMM1.i1238 to i8*
  %5766 = load i64, i64* %RBP.i1237
  %5767 = sub i64 %5766, 40
  %5768 = load i64, i64* %PC.i1236
  %5769 = add i64 %5768, 5
  store i64 %5769, i64* %PC.i1236
  %5770 = inttoptr i64 %5767 to float*
  %5771 = load float, float* %5770
  %5772 = fpext float %5771 to double
  %5773 = bitcast i8* %5765 to double*
  store double %5772, double* %5773, align 1
  store %struct.Memory* %loadMem_480571, %struct.Memory** %MEMORY
  %loadMem_480576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5775 = getelementptr inbounds %struct.GPR, %struct.GPR* %5774, i32 0, i32 33
  %5776 = getelementptr inbounds %struct.Reg, %struct.Reg* %5775, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %5776 to i64*
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 5
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %RCX.i1234 = bitcast %union.anon* %5779 to i64*
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5781 = getelementptr inbounds %struct.GPR, %struct.GPR* %5780, i32 0, i32 15
  %5782 = getelementptr inbounds %struct.Reg, %struct.Reg* %5781, i32 0, i32 0
  %RBP.i1235 = bitcast %union.anon* %5782 to i64*
  %5783 = load i64, i64* %RBP.i1235
  %5784 = sub i64 %5783, 8
  %5785 = load i64, i64* %PC.i1233
  %5786 = add i64 %5785, 4
  store i64 %5786, i64* %PC.i1233
  %5787 = inttoptr i64 %5784 to i32*
  %5788 = load i32, i32* %5787
  %5789 = sext i32 %5788 to i64
  store i64 %5789, i64* %RCX.i1234, align 8
  store %struct.Memory* %loadMem_480576, %struct.Memory** %MEMORY
  %loadMem_48057a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5791 = getelementptr inbounds %struct.GPR, %struct.GPR* %5790, i32 0, i32 33
  %5792 = getelementptr inbounds %struct.Reg, %struct.Reg* %5791, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %5792 to i64*
  %5793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5794 = getelementptr inbounds %struct.GPR, %struct.GPR* %5793, i32 0, i32 5
  %5795 = getelementptr inbounds %struct.Reg, %struct.Reg* %5794, i32 0, i32 0
  %RCX.i1232 = bitcast %union.anon* %5795 to i64*
  %5796 = load i64, i64* %RCX.i1232
  %5797 = load i64, i64* %PC.i1231
  %5798 = add i64 %5797, 7
  store i64 %5798, i64* %PC.i1231
  %5799 = sext i64 %5796 to i128
  %5800 = and i128 %5799, -18446744073709551616
  %5801 = zext i64 %5796 to i128
  %5802 = or i128 %5800, %5801
  %5803 = mul i128 564, %5802
  %5804 = trunc i128 %5803 to i64
  store i64 %5804, i64* %RCX.i1232, align 8
  %5805 = sext i64 %5804 to i128
  %5806 = icmp ne i128 %5805, %5803
  %5807 = zext i1 %5806 to i8
  %5808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5807, i8* %5808, align 1
  %5809 = trunc i128 %5803 to i32
  %5810 = and i32 %5809, 255
  %5811 = call i32 @llvm.ctpop.i32(i32 %5810)
  %5812 = trunc i32 %5811 to i8
  %5813 = and i8 %5812, 1
  %5814 = xor i8 %5813, 1
  %5815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5814, i8* %5815, align 1
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5816, align 1
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5817, align 1
  %5818 = lshr i64 %5804, 63
  %5819 = trunc i64 %5818 to i8
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5819, i8* %5820, align 1
  %5821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5807, i8* %5821, align 1
  store %struct.Memory* %loadMem_48057a, %struct.Memory** %MEMORY
  %loadMem_480581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5823 = getelementptr inbounds %struct.GPR, %struct.GPR* %5822, i32 0, i32 33
  %5824 = getelementptr inbounds %struct.Reg, %struct.Reg* %5823, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %5824 to i64*
  %5825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5826 = getelementptr inbounds %struct.GPR, %struct.GPR* %5825, i32 0, i32 1
  %5827 = getelementptr inbounds %struct.Reg, %struct.Reg* %5826, i32 0, i32 0
  %RAX.i1229 = bitcast %union.anon* %5827 to i64*
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5829 = getelementptr inbounds %struct.GPR, %struct.GPR* %5828, i32 0, i32 5
  %5830 = getelementptr inbounds %struct.Reg, %struct.Reg* %5829, i32 0, i32 0
  %RCX.i1230 = bitcast %union.anon* %5830 to i64*
  %5831 = load i64, i64* %RAX.i1229
  %5832 = load i64, i64* %RCX.i1230
  %5833 = load i64, i64* %PC.i1228
  %5834 = add i64 %5833, 3
  store i64 %5834, i64* %PC.i1228
  %5835 = add i64 %5832, %5831
  store i64 %5835, i64* %RAX.i1229, align 8
  %5836 = icmp ult i64 %5835, %5831
  %5837 = icmp ult i64 %5835, %5832
  %5838 = or i1 %5836, %5837
  %5839 = zext i1 %5838 to i8
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5839, i8* %5840, align 1
  %5841 = trunc i64 %5835 to i32
  %5842 = and i32 %5841, 255
  %5843 = call i32 @llvm.ctpop.i32(i32 %5842)
  %5844 = trunc i32 %5843 to i8
  %5845 = and i8 %5844, 1
  %5846 = xor i8 %5845, 1
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5846, i8* %5847, align 1
  %5848 = xor i64 %5832, %5831
  %5849 = xor i64 %5848, %5835
  %5850 = lshr i64 %5849, 4
  %5851 = trunc i64 %5850 to i8
  %5852 = and i8 %5851, 1
  %5853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5852, i8* %5853, align 1
  %5854 = icmp eq i64 %5835, 0
  %5855 = zext i1 %5854 to i8
  %5856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5855, i8* %5856, align 1
  %5857 = lshr i64 %5835, 63
  %5858 = trunc i64 %5857 to i8
  %5859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5858, i8* %5859, align 1
  %5860 = lshr i64 %5831, 63
  %5861 = lshr i64 %5832, 63
  %5862 = xor i64 %5857, %5860
  %5863 = xor i64 %5857, %5861
  %5864 = add i64 %5862, %5863
  %5865 = icmp eq i64 %5864, 2
  %5866 = zext i1 %5865 to i8
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5866, i8* %5867, align 1
  store %struct.Memory* %loadMem_480581, %struct.Memory** %MEMORY
  %loadMem_480584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5869 = getelementptr inbounds %struct.GPR, %struct.GPR* %5868, i32 0, i32 33
  %5870 = getelementptr inbounds %struct.Reg, %struct.Reg* %5869, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %5870 to i64*
  %5871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5872 = getelementptr inbounds %struct.GPR, %struct.GPR* %5871, i32 0, i32 1
  %5873 = getelementptr inbounds %struct.Reg, %struct.Reg* %5872, i32 0, i32 0
  %RAX.i1226 = bitcast %union.anon* %5873 to i64*
  %5874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5875 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5874, i64 0, i64 2
  %YMM2.i1227 = bitcast %union.VectorReg* %5875 to %"class.std::bitset"*
  %5876 = bitcast %"class.std::bitset"* %YMM2.i1227 to i8*
  %5877 = load i64, i64* %RAX.i1226
  %5878 = add i64 %5877, 44
  %5879 = load i64, i64* %PC.i1225
  %5880 = add i64 %5879, 5
  store i64 %5880, i64* %PC.i1225
  %5881 = inttoptr i64 %5878 to float*
  %5882 = load float, float* %5881
  %5883 = fpext float %5882 to double
  %5884 = bitcast i8* %5876 to double*
  store double %5883, double* %5884, align 1
  store %struct.Memory* %loadMem_480584, %struct.Memory** %MEMORY
  %loadMem_480589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5886 = getelementptr inbounds %struct.GPR, %struct.GPR* %5885, i32 0, i32 33
  %5887 = getelementptr inbounds %struct.Reg, %struct.Reg* %5886, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %5887 to i64*
  %5888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5889 = getelementptr inbounds %struct.GPR, %struct.GPR* %5888, i32 0, i32 1
  %5890 = getelementptr inbounds %struct.Reg, %struct.Reg* %5889, i32 0, i32 0
  %5891 = bitcast %union.anon* %5890 to %struct.anon.2*
  %AL.i1224 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5891, i32 0, i32 0
  %5892 = load i64, i64* %PC.i1223
  %5893 = add i64 %5892, 2
  store i64 %5893, i64* %PC.i1223
  store i8 3, i8* %AL.i1224, align 1
  store %struct.Memory* %loadMem_480589, %struct.Memory** %MEMORY
  %loadMem1_48058b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5895 = getelementptr inbounds %struct.GPR, %struct.GPR* %5894, i32 0, i32 33
  %5896 = getelementptr inbounds %struct.Reg, %struct.Reg* %5895, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %5896 to i64*
  %5897 = load i64, i64* %PC.i1222
  %5898 = add i64 %5897, -190427
  %5899 = load i64, i64* %PC.i1222
  %5900 = add i64 %5899, 5
  %5901 = load i64, i64* %PC.i1222
  %5902 = add i64 %5901, 5
  store i64 %5902, i64* %PC.i1222
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5904 = load i64, i64* %5903, align 8
  %5905 = add i64 %5904, -8
  %5906 = inttoptr i64 %5905 to i64*
  store i64 %5900, i64* %5906
  store i64 %5905, i64* %5903, align 8
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5898, i64* %5907, align 8
  store %struct.Memory* %loadMem1_48058b, %struct.Memory** %MEMORY
  %loadMem2_48058b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48058b = load i64, i64* %3
  %call2_48058b = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_48058b, %struct.Memory* %loadMem2_48058b)
  store %struct.Memory* %call2_48058b, %struct.Memory** %MEMORY
  %loadMem_480590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5909 = getelementptr inbounds %struct.GPR, %struct.GPR* %5908, i32 0, i32 33
  %5910 = getelementptr inbounds %struct.Reg, %struct.Reg* %5909, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %5910 to i64*
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5912 = getelementptr inbounds %struct.GPR, %struct.GPR* %5911, i32 0, i32 1
  %5913 = getelementptr inbounds %struct.Reg, %struct.Reg* %5912, i32 0, i32 0
  %EAX.i1220 = bitcast %union.anon* %5913 to i32*
  %5914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5915 = getelementptr inbounds %struct.GPR, %struct.GPR* %5914, i32 0, i32 15
  %5916 = getelementptr inbounds %struct.Reg, %struct.Reg* %5915, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %5916 to i64*
  %5917 = load i64, i64* %RBP.i1221
  %5918 = sub i64 %5917, 116
  %5919 = load i32, i32* %EAX.i1220
  %5920 = zext i32 %5919 to i64
  %5921 = load i64, i64* %PC.i1219
  %5922 = add i64 %5921, 3
  store i64 %5922, i64* %PC.i1219
  %5923 = inttoptr i64 %5918 to i32*
  store i32 %5919, i32* %5923
  store %struct.Memory* %loadMem_480590, %struct.Memory** %MEMORY
  br label %block_.L_480593

block_.L_480593:                                  ; preds = %block_.L_480555, %block_480550
  %loadMem_480593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5925 = getelementptr inbounds %struct.GPR, %struct.GPR* %5924, i32 0, i32 33
  %5926 = getelementptr inbounds %struct.Reg, %struct.Reg* %5925, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %5926 to i64*
  %5927 = load i64, i64* %PC.i1218
  %5928 = add i64 %5927, 5
  %5929 = load i64, i64* %PC.i1218
  %5930 = add i64 %5929, 5
  store i64 %5930, i64* %PC.i1218
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5928, i64* %5931, align 8
  store %struct.Memory* %loadMem_480593, %struct.Memory** %MEMORY
  br label %block_.L_480598

block_.L_480598:                                  ; preds = %block_.L_480593, %block_48053d
  %loadMem_480598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5933 = getelementptr inbounds %struct.GPR, %struct.GPR* %5932, i32 0, i32 33
  %5934 = getelementptr inbounds %struct.Reg, %struct.Reg* %5933, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %5934 to i64*
  %5935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5936 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5935, i64 0, i64 0
  %YMM0.i1216 = bitcast %union.VectorReg* %5936 to %"class.std::bitset"*
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5938 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5937, i64 0, i64 0
  %XMM0.i1217 = bitcast %union.VectorReg* %5938 to %union.vec128_t*
  %5939 = bitcast %"class.std::bitset"* %YMM0.i1216 to i8*
  %5940 = bitcast %"class.std::bitset"* %YMM0.i1216 to i8*
  %5941 = bitcast %union.vec128_t* %XMM0.i1217 to i8*
  %5942 = load i64, i64* %PC.i1215
  %5943 = add i64 %5942, 3
  store i64 %5943, i64* %PC.i1215
  %5944 = bitcast i8* %5940 to i64*
  %5945 = load i64, i64* %5944, align 1
  %5946 = getelementptr inbounds i8, i8* %5940, i64 8
  %5947 = bitcast i8* %5946 to i64*
  %5948 = load i64, i64* %5947, align 1
  %5949 = bitcast i8* %5941 to i64*
  %5950 = load i64, i64* %5949, align 1
  %5951 = getelementptr inbounds i8, i8* %5941, i64 8
  %5952 = bitcast i8* %5951 to i64*
  %5953 = load i64, i64* %5952, align 1
  %5954 = xor i64 %5950, %5945
  %5955 = xor i64 %5953, %5948
  %5956 = trunc i64 %5954 to i32
  %5957 = lshr i64 %5954, 32
  %5958 = trunc i64 %5957 to i32
  %5959 = bitcast i8* %5939 to i32*
  store i32 %5956, i32* %5959, align 1
  %5960 = getelementptr inbounds i8, i8* %5939, i64 4
  %5961 = bitcast i8* %5960 to i32*
  store i32 %5958, i32* %5961, align 1
  %5962 = trunc i64 %5955 to i32
  %5963 = getelementptr inbounds i8, i8* %5939, i64 8
  %5964 = bitcast i8* %5963 to i32*
  store i32 %5962, i32* %5964, align 1
  %5965 = lshr i64 %5955, 32
  %5966 = trunc i64 %5965 to i32
  %5967 = getelementptr inbounds i8, i8* %5939, i64 12
  %5968 = bitcast i8* %5967 to i32*
  store i32 %5966, i32* %5968, align 1
  store %struct.Memory* %loadMem_480598, %struct.Memory** %MEMORY
  %loadMem_48059b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5970 = getelementptr inbounds %struct.GPR, %struct.GPR* %5969, i32 0, i32 33
  %5971 = getelementptr inbounds %struct.Reg, %struct.Reg* %5970, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %5971 to i64*
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5973 = getelementptr inbounds %struct.GPR, %struct.GPR* %5972, i32 0, i32 1
  %5974 = getelementptr inbounds %struct.Reg, %struct.Reg* %5973, i32 0, i32 0
  %RAX.i1214 = bitcast %union.anon* %5974 to i64*
  %5975 = load i64, i64* %PC.i1213
  %5976 = add i64 %5975, 10
  store i64 %5976, i64* %PC.i1213
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1214, align 8
  store %struct.Memory* %loadMem_48059b, %struct.Memory** %MEMORY
  %loadMem_4805a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5978 = getelementptr inbounds %struct.GPR, %struct.GPR* %5977, i32 0, i32 33
  %5979 = getelementptr inbounds %struct.Reg, %struct.Reg* %5978, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %5979 to i64*
  %5980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5981 = getelementptr inbounds %struct.GPR, %struct.GPR* %5980, i32 0, i32 15
  %5982 = getelementptr inbounds %struct.Reg, %struct.Reg* %5981, i32 0, i32 0
  %RBP.i1211 = bitcast %union.anon* %5982 to i64*
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5984 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5983, i64 0, i64 1
  %YMM1.i1212 = bitcast %union.VectorReg* %5984 to %"class.std::bitset"*
  %5985 = bitcast %"class.std::bitset"* %YMM1.i1212 to i8*
  %5986 = load i64, i64* %RBP.i1211
  %5987 = sub i64 %5986, 40
  %5988 = load i64, i64* %PC.i1210
  %5989 = add i64 %5988, 5
  store i64 %5989, i64* %PC.i1210
  %5990 = inttoptr i64 %5987 to float*
  %5991 = load float, float* %5990
  %5992 = bitcast i8* %5985 to float*
  store float %5991, float* %5992, align 1
  %5993 = getelementptr inbounds i8, i8* %5985, i64 4
  %5994 = bitcast i8* %5993 to float*
  store float 0.000000e+00, float* %5994, align 1
  %5995 = getelementptr inbounds i8, i8* %5985, i64 8
  %5996 = bitcast i8* %5995 to float*
  store float 0.000000e+00, float* %5996, align 1
  %5997 = getelementptr inbounds i8, i8* %5985, i64 12
  %5998 = bitcast i8* %5997 to float*
  store float 0.000000e+00, float* %5998, align 1
  store %struct.Memory* %loadMem_4805a5, %struct.Memory** %MEMORY
  %loadMem_4805aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6000 = getelementptr inbounds %struct.GPR, %struct.GPR* %5999, i32 0, i32 33
  %6001 = getelementptr inbounds %struct.Reg, %struct.Reg* %6000, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %6001 to i64*
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6003 = getelementptr inbounds %struct.GPR, %struct.GPR* %6002, i32 0, i32 5
  %6004 = getelementptr inbounds %struct.Reg, %struct.Reg* %6003, i32 0, i32 0
  %RCX.i1208 = bitcast %union.anon* %6004 to i64*
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6006 = getelementptr inbounds %struct.GPR, %struct.GPR* %6005, i32 0, i32 15
  %6007 = getelementptr inbounds %struct.Reg, %struct.Reg* %6006, i32 0, i32 0
  %RBP.i1209 = bitcast %union.anon* %6007 to i64*
  %6008 = load i64, i64* %RBP.i1209
  %6009 = sub i64 %6008, 8
  %6010 = load i64, i64* %PC.i1207
  %6011 = add i64 %6010, 4
  store i64 %6011, i64* %PC.i1207
  %6012 = inttoptr i64 %6009 to i32*
  %6013 = load i32, i32* %6012
  %6014 = sext i32 %6013 to i64
  store i64 %6014, i64* %RCX.i1208, align 8
  store %struct.Memory* %loadMem_4805aa, %struct.Memory** %MEMORY
  %loadMem_4805ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6016 = getelementptr inbounds %struct.GPR, %struct.GPR* %6015, i32 0, i32 33
  %6017 = getelementptr inbounds %struct.Reg, %struct.Reg* %6016, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %6017 to i64*
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6019 = getelementptr inbounds %struct.GPR, %struct.GPR* %6018, i32 0, i32 5
  %6020 = getelementptr inbounds %struct.Reg, %struct.Reg* %6019, i32 0, i32 0
  %RCX.i1206 = bitcast %union.anon* %6020 to i64*
  %6021 = load i64, i64* %RCX.i1206
  %6022 = load i64, i64* %PC.i1205
  %6023 = add i64 %6022, 7
  store i64 %6023, i64* %PC.i1205
  %6024 = sext i64 %6021 to i128
  %6025 = and i128 %6024, -18446744073709551616
  %6026 = zext i64 %6021 to i128
  %6027 = or i128 %6025, %6026
  %6028 = mul i128 564, %6027
  %6029 = trunc i128 %6028 to i64
  store i64 %6029, i64* %RCX.i1206, align 8
  %6030 = sext i64 %6029 to i128
  %6031 = icmp ne i128 %6030, %6028
  %6032 = zext i1 %6031 to i8
  %6033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6032, i8* %6033, align 1
  %6034 = trunc i128 %6028 to i32
  %6035 = and i32 %6034, 255
  %6036 = call i32 @llvm.ctpop.i32(i32 %6035)
  %6037 = trunc i32 %6036 to i8
  %6038 = and i8 %6037, 1
  %6039 = xor i8 %6038, 1
  %6040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6039, i8* %6040, align 1
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6041, align 1
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6042, align 1
  %6043 = lshr i64 %6029, 63
  %6044 = trunc i64 %6043 to i8
  %6045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6044, i8* %6045, align 1
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6032, i8* %6046, align 1
  store %struct.Memory* %loadMem_4805ae, %struct.Memory** %MEMORY
  %loadMem_4805b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6048 = getelementptr inbounds %struct.GPR, %struct.GPR* %6047, i32 0, i32 33
  %6049 = getelementptr inbounds %struct.Reg, %struct.Reg* %6048, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %6049 to i64*
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6051 = getelementptr inbounds %struct.GPR, %struct.GPR* %6050, i32 0, i32 1
  %6052 = getelementptr inbounds %struct.Reg, %struct.Reg* %6051, i32 0, i32 0
  %RAX.i1203 = bitcast %union.anon* %6052 to i64*
  %6053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6054 = getelementptr inbounds %struct.GPR, %struct.GPR* %6053, i32 0, i32 7
  %6055 = getelementptr inbounds %struct.Reg, %struct.Reg* %6054, i32 0, i32 0
  %RDX.i1204 = bitcast %union.anon* %6055 to i64*
  %6056 = load i64, i64* %RAX.i1203
  %6057 = load i64, i64* %PC.i1202
  %6058 = add i64 %6057, 3
  store i64 %6058, i64* %PC.i1202
  store i64 %6056, i64* %RDX.i1204, align 8
  store %struct.Memory* %loadMem_4805b5, %struct.Memory** %MEMORY
  %loadMem_4805b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6060 = getelementptr inbounds %struct.GPR, %struct.GPR* %6059, i32 0, i32 33
  %6061 = getelementptr inbounds %struct.Reg, %struct.Reg* %6060, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %6061 to i64*
  %6062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6063 = getelementptr inbounds %struct.GPR, %struct.GPR* %6062, i32 0, i32 5
  %6064 = getelementptr inbounds %struct.Reg, %struct.Reg* %6063, i32 0, i32 0
  %RCX.i1200 = bitcast %union.anon* %6064 to i64*
  %6065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6066 = getelementptr inbounds %struct.GPR, %struct.GPR* %6065, i32 0, i32 7
  %6067 = getelementptr inbounds %struct.Reg, %struct.Reg* %6066, i32 0, i32 0
  %RDX.i1201 = bitcast %union.anon* %6067 to i64*
  %6068 = load i64, i64* %RDX.i1201
  %6069 = load i64, i64* %RCX.i1200
  %6070 = load i64, i64* %PC.i1199
  %6071 = add i64 %6070, 3
  store i64 %6071, i64* %PC.i1199
  %6072 = add i64 %6069, %6068
  store i64 %6072, i64* %RDX.i1201, align 8
  %6073 = icmp ult i64 %6072, %6068
  %6074 = icmp ult i64 %6072, %6069
  %6075 = or i1 %6073, %6074
  %6076 = zext i1 %6075 to i8
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6076, i8* %6077, align 1
  %6078 = trunc i64 %6072 to i32
  %6079 = and i32 %6078, 255
  %6080 = call i32 @llvm.ctpop.i32(i32 %6079)
  %6081 = trunc i32 %6080 to i8
  %6082 = and i8 %6081, 1
  %6083 = xor i8 %6082, 1
  %6084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6083, i8* %6084, align 1
  %6085 = xor i64 %6069, %6068
  %6086 = xor i64 %6085, %6072
  %6087 = lshr i64 %6086, 4
  %6088 = trunc i64 %6087 to i8
  %6089 = and i8 %6088, 1
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6089, i8* %6090, align 1
  %6091 = icmp eq i64 %6072, 0
  %6092 = zext i1 %6091 to i8
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6092, i8* %6093, align 1
  %6094 = lshr i64 %6072, 63
  %6095 = trunc i64 %6094 to i8
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6095, i8* %6096, align 1
  %6097 = lshr i64 %6068, 63
  %6098 = lshr i64 %6069, 63
  %6099 = xor i64 %6094, %6097
  %6100 = xor i64 %6094, %6098
  %6101 = add i64 %6099, %6100
  %6102 = icmp eq i64 %6101, 2
  %6103 = zext i1 %6102 to i8
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6103, i8* %6104, align 1
  store %struct.Memory* %loadMem_4805b8, %struct.Memory** %MEMORY
  %loadMem_4805bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6106 = getelementptr inbounds %struct.GPR, %struct.GPR* %6105, i32 0, i32 33
  %6107 = getelementptr inbounds %struct.Reg, %struct.Reg* %6106, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %6107 to i64*
  %6108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6109 = getelementptr inbounds %struct.GPR, %struct.GPR* %6108, i32 0, i32 7
  %6110 = getelementptr inbounds %struct.Reg, %struct.Reg* %6109, i32 0, i32 0
  %RDX.i1197 = bitcast %union.anon* %6110 to i64*
  %6111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6112 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6111, i64 0, i64 1
  %YMM1.i1198 = bitcast %union.VectorReg* %6112 to %"class.std::bitset"*
  %6113 = bitcast %"class.std::bitset"* %YMM1.i1198 to i8*
  %6114 = bitcast %"class.std::bitset"* %YMM1.i1198 to i8*
  %6115 = load i64, i64* %RDX.i1197
  %6116 = add i64 %6115, 44
  %6117 = load i64, i64* %PC.i1196
  %6118 = add i64 %6117, 5
  store i64 %6118, i64* %PC.i1196
  %6119 = bitcast i8* %6114 to <2 x float>*
  %6120 = load <2 x float>, <2 x float>* %6119, align 1
  %6121 = getelementptr inbounds i8, i8* %6114, i64 8
  %6122 = bitcast i8* %6121 to <2 x i32>*
  %6123 = load <2 x i32>, <2 x i32>* %6122, align 1
  %6124 = inttoptr i64 %6116 to float*
  %6125 = load float, float* %6124
  %6126 = extractelement <2 x float> %6120, i32 0
  %6127 = fadd float %6126, %6125
  %6128 = bitcast i8* %6113 to float*
  store float %6127, float* %6128, align 1
  %6129 = bitcast <2 x float> %6120 to <2 x i32>
  %6130 = extractelement <2 x i32> %6129, i32 1
  %6131 = getelementptr inbounds i8, i8* %6113, i64 4
  %6132 = bitcast i8* %6131 to i32*
  store i32 %6130, i32* %6132, align 1
  %6133 = extractelement <2 x i32> %6123, i32 0
  %6134 = getelementptr inbounds i8, i8* %6113, i64 8
  %6135 = bitcast i8* %6134 to i32*
  store i32 %6133, i32* %6135, align 1
  %6136 = extractelement <2 x i32> %6123, i32 1
  %6137 = getelementptr inbounds i8, i8* %6113, i64 12
  %6138 = bitcast i8* %6137 to i32*
  store i32 %6136, i32* %6138, align 1
  store %struct.Memory* %loadMem_4805bb, %struct.Memory** %MEMORY
  %loadMem_4805c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6140 = getelementptr inbounds %struct.GPR, %struct.GPR* %6139, i32 0, i32 33
  %6141 = getelementptr inbounds %struct.Reg, %struct.Reg* %6140, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %6141 to i64*
  %6142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6143 = getelementptr inbounds %struct.GPR, %struct.GPR* %6142, i32 0, i32 15
  %6144 = getelementptr inbounds %struct.Reg, %struct.Reg* %6143, i32 0, i32 0
  %RBP.i1194 = bitcast %union.anon* %6144 to i64*
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6146 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6145, i64 0, i64 2
  %YMM2.i1195 = bitcast %union.VectorReg* %6146 to %"class.std::bitset"*
  %6147 = bitcast %"class.std::bitset"* %YMM2.i1195 to i8*
  %6148 = load i64, i64* %RBP.i1194
  %6149 = sub i64 %6148, 24
  %6150 = load i64, i64* %PC.i1193
  %6151 = add i64 %6150, 5
  store i64 %6151, i64* %PC.i1193
  %6152 = inttoptr i64 %6149 to float*
  %6153 = load float, float* %6152
  %6154 = bitcast i8* %6147 to float*
  store float %6153, float* %6154, align 1
  %6155 = getelementptr inbounds i8, i8* %6147, i64 4
  %6156 = bitcast i8* %6155 to float*
  store float 0.000000e+00, float* %6156, align 1
  %6157 = getelementptr inbounds i8, i8* %6147, i64 8
  %6158 = bitcast i8* %6157 to float*
  store float 0.000000e+00, float* %6158, align 1
  %6159 = getelementptr inbounds i8, i8* %6147, i64 12
  %6160 = bitcast i8* %6159 to float*
  store float 0.000000e+00, float* %6160, align 1
  store %struct.Memory* %loadMem_4805c0, %struct.Memory** %MEMORY
  %loadMem_4805c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6162 = getelementptr inbounds %struct.GPR, %struct.GPR* %6161, i32 0, i32 33
  %6163 = getelementptr inbounds %struct.Reg, %struct.Reg* %6162, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %6163 to i64*
  %6164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6165 = getelementptr inbounds %struct.GPR, %struct.GPR* %6164, i32 0, i32 15
  %6166 = getelementptr inbounds %struct.Reg, %struct.Reg* %6165, i32 0, i32 0
  %RBP.i1191 = bitcast %union.anon* %6166 to i64*
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6168 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6167, i64 0, i64 2
  %YMM2.i1192 = bitcast %union.VectorReg* %6168 to %"class.std::bitset"*
  %6169 = bitcast %"class.std::bitset"* %YMM2.i1192 to i8*
  %6170 = bitcast %"class.std::bitset"* %YMM2.i1192 to i8*
  %6171 = load i64, i64* %RBP.i1191
  %6172 = sub i64 %6171, 44
  %6173 = load i64, i64* %PC.i1190
  %6174 = add i64 %6173, 5
  store i64 %6174, i64* %PC.i1190
  %6175 = bitcast i8* %6170 to <2 x float>*
  %6176 = load <2 x float>, <2 x float>* %6175, align 1
  %6177 = getelementptr inbounds i8, i8* %6170, i64 8
  %6178 = bitcast i8* %6177 to <2 x i32>*
  %6179 = load <2 x i32>, <2 x i32>* %6178, align 1
  %6180 = inttoptr i64 %6172 to float*
  %6181 = load float, float* %6180
  %6182 = extractelement <2 x float> %6176, i32 0
  %6183 = fsub float %6182, %6181
  %6184 = bitcast i8* %6169 to float*
  store float %6183, float* %6184, align 1
  %6185 = bitcast <2 x float> %6176 to <2 x i32>
  %6186 = extractelement <2 x i32> %6185, i32 1
  %6187 = getelementptr inbounds i8, i8* %6169, i64 4
  %6188 = bitcast i8* %6187 to i32*
  store i32 %6186, i32* %6188, align 1
  %6189 = extractelement <2 x i32> %6179, i32 0
  %6190 = getelementptr inbounds i8, i8* %6169, i64 8
  %6191 = bitcast i8* %6190 to i32*
  store i32 %6189, i32* %6191, align 1
  %6192 = extractelement <2 x i32> %6179, i32 1
  %6193 = getelementptr inbounds i8, i8* %6169, i64 12
  %6194 = bitcast i8* %6193 to i32*
  store i32 %6192, i32* %6194, align 1
  store %struct.Memory* %loadMem_4805c5, %struct.Memory** %MEMORY
  %loadMem_4805ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6196 = getelementptr inbounds %struct.GPR, %struct.GPR* %6195, i32 0, i32 33
  %6197 = getelementptr inbounds %struct.Reg, %struct.Reg* %6196, i32 0, i32 0
  %PC.i1187 = bitcast %union.anon* %6197 to i64*
  %6198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6199 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6198, i64 0, i64 1
  %YMM1.i1188 = bitcast %union.VectorReg* %6199 to %"class.std::bitset"*
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6201 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6200, i64 0, i64 2
  %XMM2.i1189 = bitcast %union.VectorReg* %6201 to %union.vec128_t*
  %6202 = bitcast %"class.std::bitset"* %YMM1.i1188 to i8*
  %6203 = bitcast %"class.std::bitset"* %YMM1.i1188 to i8*
  %6204 = bitcast %union.vec128_t* %XMM2.i1189 to i8*
  %6205 = load i64, i64* %PC.i1187
  %6206 = add i64 %6205, 4
  store i64 %6206, i64* %PC.i1187
  %6207 = bitcast i8* %6203 to <2 x float>*
  %6208 = load <2 x float>, <2 x float>* %6207, align 1
  %6209 = getelementptr inbounds i8, i8* %6203, i64 8
  %6210 = bitcast i8* %6209 to <2 x i32>*
  %6211 = load <2 x i32>, <2 x i32>* %6210, align 1
  %6212 = bitcast i8* %6204 to <2 x float>*
  %6213 = load <2 x float>, <2 x float>* %6212, align 1
  %6214 = extractelement <2 x float> %6208, i32 0
  %6215 = extractelement <2 x float> %6213, i32 0
  %6216 = fsub float %6214, %6215
  %6217 = bitcast i8* %6202 to float*
  store float %6216, float* %6217, align 1
  %6218 = bitcast <2 x float> %6208 to <2 x i32>
  %6219 = extractelement <2 x i32> %6218, i32 1
  %6220 = getelementptr inbounds i8, i8* %6202, i64 4
  %6221 = bitcast i8* %6220 to i32*
  store i32 %6219, i32* %6221, align 1
  %6222 = extractelement <2 x i32> %6211, i32 0
  %6223 = getelementptr inbounds i8, i8* %6202, i64 8
  %6224 = bitcast i8* %6223 to i32*
  store i32 %6222, i32* %6224, align 1
  %6225 = extractelement <2 x i32> %6211, i32 1
  %6226 = getelementptr inbounds i8, i8* %6202, i64 12
  %6227 = bitcast i8* %6226 to i32*
  store i32 %6225, i32* %6227, align 1
  store %struct.Memory* %loadMem_4805ca, %struct.Memory** %MEMORY
  %loadMem_4805ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %6228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6229 = getelementptr inbounds %struct.GPR, %struct.GPR* %6228, i32 0, i32 33
  %6230 = getelementptr inbounds %struct.Reg, %struct.Reg* %6229, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %6230 to i64*
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6232 = getelementptr inbounds %struct.GPR, %struct.GPR* %6231, i32 0, i32 5
  %6233 = getelementptr inbounds %struct.Reg, %struct.Reg* %6232, i32 0, i32 0
  %RCX.i1185 = bitcast %union.anon* %6233 to i64*
  %6234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6235 = getelementptr inbounds %struct.GPR, %struct.GPR* %6234, i32 0, i32 15
  %6236 = getelementptr inbounds %struct.Reg, %struct.Reg* %6235, i32 0, i32 0
  %RBP.i1186 = bitcast %union.anon* %6236 to i64*
  %6237 = load i64, i64* %RBP.i1186
  %6238 = sub i64 %6237, 8
  %6239 = load i64, i64* %PC.i1184
  %6240 = add i64 %6239, 4
  store i64 %6240, i64* %PC.i1184
  %6241 = inttoptr i64 %6238 to i32*
  %6242 = load i32, i32* %6241
  %6243 = sext i32 %6242 to i64
  store i64 %6243, i64* %RCX.i1185, align 8
  store %struct.Memory* %loadMem_4805ce, %struct.Memory** %MEMORY
  %loadMem_4805d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6245 = getelementptr inbounds %struct.GPR, %struct.GPR* %6244, i32 0, i32 33
  %6246 = getelementptr inbounds %struct.Reg, %struct.Reg* %6245, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %6246 to i64*
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6248 = getelementptr inbounds %struct.GPR, %struct.GPR* %6247, i32 0, i32 5
  %6249 = getelementptr inbounds %struct.Reg, %struct.Reg* %6248, i32 0, i32 0
  %RCX.i1183 = bitcast %union.anon* %6249 to i64*
  %6250 = load i64, i64* %RCX.i1183
  %6251 = load i64, i64* %PC.i1182
  %6252 = add i64 %6251, 7
  store i64 %6252, i64* %PC.i1182
  %6253 = sext i64 %6250 to i128
  %6254 = and i128 %6253, -18446744073709551616
  %6255 = zext i64 %6250 to i128
  %6256 = or i128 %6254, %6255
  %6257 = mul i128 564, %6256
  %6258 = trunc i128 %6257 to i64
  store i64 %6258, i64* %RCX.i1183, align 8
  %6259 = sext i64 %6258 to i128
  %6260 = icmp ne i128 %6259, %6257
  %6261 = zext i1 %6260 to i8
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6261, i8* %6262, align 1
  %6263 = trunc i128 %6257 to i32
  %6264 = and i32 %6263, 255
  %6265 = call i32 @llvm.ctpop.i32(i32 %6264)
  %6266 = trunc i32 %6265 to i8
  %6267 = and i8 %6266, 1
  %6268 = xor i8 %6267, 1
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6268, i8* %6269, align 1
  %6270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6270, align 1
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6271, align 1
  %6272 = lshr i64 %6258, 63
  %6273 = trunc i64 %6272 to i8
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6273, i8* %6274, align 1
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6261, i8* %6275, align 1
  store %struct.Memory* %loadMem_4805d2, %struct.Memory** %MEMORY
  %loadMem_4805d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6277 = getelementptr inbounds %struct.GPR, %struct.GPR* %6276, i32 0, i32 33
  %6278 = getelementptr inbounds %struct.Reg, %struct.Reg* %6277, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %6278 to i64*
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6280 = getelementptr inbounds %struct.GPR, %struct.GPR* %6279, i32 0, i32 1
  %6281 = getelementptr inbounds %struct.Reg, %struct.Reg* %6280, i32 0, i32 0
  %RAX.i1180 = bitcast %union.anon* %6281 to i64*
  %6282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6283 = getelementptr inbounds %struct.GPR, %struct.GPR* %6282, i32 0, i32 7
  %6284 = getelementptr inbounds %struct.Reg, %struct.Reg* %6283, i32 0, i32 0
  %RDX.i1181 = bitcast %union.anon* %6284 to i64*
  %6285 = load i64, i64* %RAX.i1180
  %6286 = load i64, i64* %PC.i1179
  %6287 = add i64 %6286, 3
  store i64 %6287, i64* %PC.i1179
  store i64 %6285, i64* %RDX.i1181, align 8
  store %struct.Memory* %loadMem_4805d9, %struct.Memory** %MEMORY
  %loadMem_4805dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6289 = getelementptr inbounds %struct.GPR, %struct.GPR* %6288, i32 0, i32 33
  %6290 = getelementptr inbounds %struct.Reg, %struct.Reg* %6289, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %6290 to i64*
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6292 = getelementptr inbounds %struct.GPR, %struct.GPR* %6291, i32 0, i32 5
  %6293 = getelementptr inbounds %struct.Reg, %struct.Reg* %6292, i32 0, i32 0
  %RCX.i1177 = bitcast %union.anon* %6293 to i64*
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6295 = getelementptr inbounds %struct.GPR, %struct.GPR* %6294, i32 0, i32 7
  %6296 = getelementptr inbounds %struct.Reg, %struct.Reg* %6295, i32 0, i32 0
  %RDX.i1178 = bitcast %union.anon* %6296 to i64*
  %6297 = load i64, i64* %RDX.i1178
  %6298 = load i64, i64* %RCX.i1177
  %6299 = load i64, i64* %PC.i1176
  %6300 = add i64 %6299, 3
  store i64 %6300, i64* %PC.i1176
  %6301 = add i64 %6298, %6297
  store i64 %6301, i64* %RDX.i1178, align 8
  %6302 = icmp ult i64 %6301, %6297
  %6303 = icmp ult i64 %6301, %6298
  %6304 = or i1 %6302, %6303
  %6305 = zext i1 %6304 to i8
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6305, i8* %6306, align 1
  %6307 = trunc i64 %6301 to i32
  %6308 = and i32 %6307, 255
  %6309 = call i32 @llvm.ctpop.i32(i32 %6308)
  %6310 = trunc i32 %6309 to i8
  %6311 = and i8 %6310, 1
  %6312 = xor i8 %6311, 1
  %6313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6312, i8* %6313, align 1
  %6314 = xor i64 %6298, %6297
  %6315 = xor i64 %6314, %6301
  %6316 = lshr i64 %6315, 4
  %6317 = trunc i64 %6316 to i8
  %6318 = and i8 %6317, 1
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6318, i8* %6319, align 1
  %6320 = icmp eq i64 %6301, 0
  %6321 = zext i1 %6320 to i8
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6321, i8* %6322, align 1
  %6323 = lshr i64 %6301, 63
  %6324 = trunc i64 %6323 to i8
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6324, i8* %6325, align 1
  %6326 = lshr i64 %6297, 63
  %6327 = lshr i64 %6298, 63
  %6328 = xor i64 %6323, %6326
  %6329 = xor i64 %6323, %6327
  %6330 = add i64 %6328, %6329
  %6331 = icmp eq i64 %6330, 2
  %6332 = zext i1 %6331 to i8
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6332, i8* %6333, align 1
  store %struct.Memory* %loadMem_4805dc, %struct.Memory** %MEMORY
  %loadMem_4805df = load %struct.Memory*, %struct.Memory** %MEMORY
  %6334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6335 = getelementptr inbounds %struct.GPR, %struct.GPR* %6334, i32 0, i32 33
  %6336 = getelementptr inbounds %struct.Reg, %struct.Reg* %6335, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %6336 to i64*
  %6337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6338 = getelementptr inbounds %struct.GPR, %struct.GPR* %6337, i32 0, i32 7
  %6339 = getelementptr inbounds %struct.Reg, %struct.Reg* %6338, i32 0, i32 0
  %RDX.i1174 = bitcast %union.anon* %6339 to i64*
  %6340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6341 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6340, i64 0, i64 1
  %XMM1.i1175 = bitcast %union.VectorReg* %6341 to %union.vec128_t*
  %6342 = load i64, i64* %RDX.i1174
  %6343 = add i64 %6342, 8
  %6344 = bitcast %union.vec128_t* %XMM1.i1175 to i8*
  %6345 = load i64, i64* %PC.i1173
  %6346 = add i64 %6345, 5
  store i64 %6346, i64* %PC.i1173
  %6347 = bitcast i8* %6344 to <2 x float>*
  %6348 = load <2 x float>, <2 x float>* %6347, align 1
  %6349 = extractelement <2 x float> %6348, i32 0
  %6350 = inttoptr i64 %6343 to float*
  store float %6349, float* %6350
  store %struct.Memory* %loadMem_4805df, %struct.Memory** %MEMORY
  %loadMem_4805e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6352 = getelementptr inbounds %struct.GPR, %struct.GPR* %6351, i32 0, i32 33
  %6353 = getelementptr inbounds %struct.Reg, %struct.Reg* %6352, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %6353 to i64*
  %6354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6355 = getelementptr inbounds %struct.GPR, %struct.GPR* %6354, i32 0, i32 5
  %6356 = getelementptr inbounds %struct.Reg, %struct.Reg* %6355, i32 0, i32 0
  %RCX.i1171 = bitcast %union.anon* %6356 to i64*
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6358 = getelementptr inbounds %struct.GPR, %struct.GPR* %6357, i32 0, i32 15
  %6359 = getelementptr inbounds %struct.Reg, %struct.Reg* %6358, i32 0, i32 0
  %RBP.i1172 = bitcast %union.anon* %6359 to i64*
  %6360 = load i64, i64* %RBP.i1172
  %6361 = sub i64 %6360, 8
  %6362 = load i64, i64* %PC.i1170
  %6363 = add i64 %6362, 4
  store i64 %6363, i64* %PC.i1170
  %6364 = inttoptr i64 %6361 to i32*
  %6365 = load i32, i32* %6364
  %6366 = sext i32 %6365 to i64
  store i64 %6366, i64* %RCX.i1171, align 8
  store %struct.Memory* %loadMem_4805e4, %struct.Memory** %MEMORY
  %loadMem_4805e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6368 = getelementptr inbounds %struct.GPR, %struct.GPR* %6367, i32 0, i32 33
  %6369 = getelementptr inbounds %struct.Reg, %struct.Reg* %6368, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %6369 to i64*
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6371 = getelementptr inbounds %struct.GPR, %struct.GPR* %6370, i32 0, i32 5
  %6372 = getelementptr inbounds %struct.Reg, %struct.Reg* %6371, i32 0, i32 0
  %RCX.i1169 = bitcast %union.anon* %6372 to i64*
  %6373 = load i64, i64* %RCX.i1169
  %6374 = load i64, i64* %PC.i1168
  %6375 = add i64 %6374, 7
  store i64 %6375, i64* %PC.i1168
  %6376 = sext i64 %6373 to i128
  %6377 = and i128 %6376, -18446744073709551616
  %6378 = zext i64 %6373 to i128
  %6379 = or i128 %6377, %6378
  %6380 = mul i128 564, %6379
  %6381 = trunc i128 %6380 to i64
  store i64 %6381, i64* %RCX.i1169, align 8
  %6382 = sext i64 %6381 to i128
  %6383 = icmp ne i128 %6382, %6380
  %6384 = zext i1 %6383 to i8
  %6385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6384, i8* %6385, align 1
  %6386 = trunc i128 %6380 to i32
  %6387 = and i32 %6386, 255
  %6388 = call i32 @llvm.ctpop.i32(i32 %6387)
  %6389 = trunc i32 %6388 to i8
  %6390 = and i8 %6389, 1
  %6391 = xor i8 %6390, 1
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6391, i8* %6392, align 1
  %6393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6393, align 1
  %6394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6394, align 1
  %6395 = lshr i64 %6381, 63
  %6396 = trunc i64 %6395 to i8
  %6397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6396, i8* %6397, align 1
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6384, i8* %6398, align 1
  store %struct.Memory* %loadMem_4805e8, %struct.Memory** %MEMORY
  %loadMem_4805ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %6399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6400 = getelementptr inbounds %struct.GPR, %struct.GPR* %6399, i32 0, i32 33
  %6401 = getelementptr inbounds %struct.Reg, %struct.Reg* %6400, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %6401 to i64*
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6403 = getelementptr inbounds %struct.GPR, %struct.GPR* %6402, i32 0, i32 1
  %6404 = getelementptr inbounds %struct.Reg, %struct.Reg* %6403, i32 0, i32 0
  %RAX.i1166 = bitcast %union.anon* %6404 to i64*
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6406 = getelementptr inbounds %struct.GPR, %struct.GPR* %6405, i32 0, i32 5
  %6407 = getelementptr inbounds %struct.Reg, %struct.Reg* %6406, i32 0, i32 0
  %RCX.i1167 = bitcast %union.anon* %6407 to i64*
  %6408 = load i64, i64* %RAX.i1166
  %6409 = load i64, i64* %RCX.i1167
  %6410 = load i64, i64* %PC.i1165
  %6411 = add i64 %6410, 3
  store i64 %6411, i64* %PC.i1165
  %6412 = add i64 %6409, %6408
  store i64 %6412, i64* %RAX.i1166, align 8
  %6413 = icmp ult i64 %6412, %6408
  %6414 = icmp ult i64 %6412, %6409
  %6415 = or i1 %6413, %6414
  %6416 = zext i1 %6415 to i8
  %6417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6416, i8* %6417, align 1
  %6418 = trunc i64 %6412 to i32
  %6419 = and i32 %6418, 255
  %6420 = call i32 @llvm.ctpop.i32(i32 %6419)
  %6421 = trunc i32 %6420 to i8
  %6422 = and i8 %6421, 1
  %6423 = xor i8 %6422, 1
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6423, i8* %6424, align 1
  %6425 = xor i64 %6409, %6408
  %6426 = xor i64 %6425, %6412
  %6427 = lshr i64 %6426, 4
  %6428 = trunc i64 %6427 to i8
  %6429 = and i8 %6428, 1
  %6430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6429, i8* %6430, align 1
  %6431 = icmp eq i64 %6412, 0
  %6432 = zext i1 %6431 to i8
  %6433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6432, i8* %6433, align 1
  %6434 = lshr i64 %6412, 63
  %6435 = trunc i64 %6434 to i8
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6435, i8* %6436, align 1
  %6437 = lshr i64 %6408, 63
  %6438 = lshr i64 %6409, 63
  %6439 = xor i64 %6434, %6437
  %6440 = xor i64 %6434, %6438
  %6441 = add i64 %6439, %6440
  %6442 = icmp eq i64 %6441, 2
  %6443 = zext i1 %6442 to i8
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6443, i8* %6444, align 1
  store %struct.Memory* %loadMem_4805ef, %struct.Memory** %MEMORY
  %loadMem_4805f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6446 = getelementptr inbounds %struct.GPR, %struct.GPR* %6445, i32 0, i32 33
  %6447 = getelementptr inbounds %struct.Reg, %struct.Reg* %6446, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %6447 to i64*
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6449 = getelementptr inbounds %struct.GPR, %struct.GPR* %6448, i32 0, i32 1
  %6450 = getelementptr inbounds %struct.Reg, %struct.Reg* %6449, i32 0, i32 0
  %RAX.i1163 = bitcast %union.anon* %6450 to i64*
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6452 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6451, i64 0, i64 1
  %YMM1.i1164 = bitcast %union.VectorReg* %6452 to %"class.std::bitset"*
  %6453 = bitcast %"class.std::bitset"* %YMM1.i1164 to i8*
  %6454 = load i64, i64* %RAX.i1163
  %6455 = add i64 %6454, 8
  %6456 = load i64, i64* %PC.i1162
  %6457 = add i64 %6456, 5
  store i64 %6457, i64* %PC.i1162
  %6458 = inttoptr i64 %6455 to float*
  %6459 = load float, float* %6458
  %6460 = fpext float %6459 to double
  %6461 = bitcast i8* %6453 to double*
  store double %6460, double* %6461, align 1
  store %struct.Memory* %loadMem_4805f2, %struct.Memory** %MEMORY
  %loadMem_4805f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6463 = getelementptr inbounds %struct.GPR, %struct.GPR* %6462, i32 0, i32 33
  %6464 = getelementptr inbounds %struct.Reg, %struct.Reg* %6463, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %6464 to i64*
  %6465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6466 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6465, i64 0, i64 0
  %XMM0.i1156 = bitcast %union.VectorReg* %6466 to %union.vec128_t*
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6468 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6467, i64 0, i64 1
  %XMM1.i1157 = bitcast %union.VectorReg* %6468 to %union.vec128_t*
  %6469 = bitcast %union.vec128_t* %XMM0.i1156 to i8*
  %6470 = bitcast %union.vec128_t* %XMM1.i1157 to i8*
  %6471 = load i64, i64* %PC.i1155
  %6472 = add i64 %6471, 4
  store i64 %6472, i64* %PC.i1155
  %6473 = bitcast i8* %6469 to double*
  %6474 = load double, double* %6473, align 1
  %6475 = bitcast i8* %6470 to double*
  %6476 = load double, double* %6475, align 1
  %6477 = fcmp uno double %6474, %6476
  br i1 %6477, label %6478, label %6490

; <label>:6478:                                   ; preds = %block_.L_480598
  %6479 = fadd double %6474, %6476
  %6480 = bitcast double %6479 to i64
  %6481 = and i64 %6480, 9221120237041090560
  %6482 = icmp eq i64 %6481, 9218868437227405312
  %6483 = and i64 %6480, 2251799813685247
  %6484 = icmp ne i64 %6483, 0
  %6485 = and i1 %6482, %6484
  br i1 %6485, label %6486, label %6496

; <label>:6486:                                   ; preds = %6478
  %6487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6488 = load i64, i64* %6487, align 8
  %6489 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6488, %struct.Memory* %loadMem_4805f7)
  br label %routine_ucomisd__xmm1___xmm0.exit1158

; <label>:6490:                                   ; preds = %block_.L_480598
  %6491 = fcmp ogt double %6474, %6476
  br i1 %6491, label %6496, label %6492

; <label>:6492:                                   ; preds = %6490
  %6493 = fcmp olt double %6474, %6476
  br i1 %6493, label %6496, label %6494

; <label>:6494:                                   ; preds = %6492
  %6495 = fcmp oeq double %6474, %6476
  br i1 %6495, label %6496, label %6503

; <label>:6496:                                   ; preds = %6494, %6492, %6490, %6478
  %6497 = phi i8 [ 0, %6490 ], [ 0, %6492 ], [ 1, %6494 ], [ 1, %6478 ]
  %6498 = phi i8 [ 0, %6490 ], [ 0, %6492 ], [ 0, %6494 ], [ 1, %6478 ]
  %6499 = phi i8 [ 0, %6490 ], [ 1, %6492 ], [ 0, %6494 ], [ 1, %6478 ]
  %6500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6497, i8* %6500, align 1
  %6501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6498, i8* %6501, align 1
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6499, i8* %6502, align 1
  br label %6503

; <label>:6503:                                   ; preds = %6496, %6494
  %6504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6504, align 1
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6505, align 1
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6506, align 1
  br label %routine_ucomisd__xmm1___xmm0.exit1158

routine_ucomisd__xmm1___xmm0.exit1158:            ; preds = %6486, %6503
  %6507 = phi %struct.Memory* [ %6489, %6486 ], [ %loadMem_4805f7, %6503 ]
  store %struct.Memory* %6507, %struct.Memory** %MEMORY
  %loadMem_4805fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6509 = getelementptr inbounds %struct.GPR, %struct.GPR* %6508, i32 0, i32 33
  %6510 = getelementptr inbounds %struct.Reg, %struct.Reg* %6509, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %6510 to i64*
  %6511 = load i64, i64* %PC.i1154
  %6512 = add i64 %6511, 38
  %6513 = load i64, i64* %PC.i1154
  %6514 = add i64 %6513, 6
  %6515 = load i64, i64* %PC.i1154
  %6516 = add i64 %6515, 6
  store i64 %6516, i64* %PC.i1154
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6518 = load i8, i8* %6517, align 1
  %6519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6520 = load i8, i8* %6519, align 1
  %6521 = or i8 %6520, %6518
  %6522 = icmp ne i8 %6521, 0
  %6523 = zext i1 %6522 to i8
  store i8 %6523, i8* %BRANCH_TAKEN, align 1
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6525 = select i1 %6522, i64 %6512, i64 %6514
  store i64 %6525, i64* %6524, align 8
  store %struct.Memory* %loadMem_4805fb, %struct.Memory** %MEMORY
  %loadBr_4805fb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4805fb = icmp eq i8 %loadBr_4805fb, 1
  br i1 %cmpBr_4805fb, label %block_.L_480621, label %block_480601

block_480601:                                     ; preds = %routine_ucomisd__xmm1___xmm0.exit1158
  %loadMem_480601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6527 = getelementptr inbounds %struct.GPR, %struct.GPR* %6526, i32 0, i32 33
  %6528 = getelementptr inbounds %struct.Reg, %struct.Reg* %6527, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %6528 to i64*
  %6529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6530 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6529, i64 0, i64 0
  %YMM0.i1152 = bitcast %union.VectorReg* %6530 to %"class.std::bitset"*
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6532 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6531, i64 0, i64 0
  %XMM0.i1153 = bitcast %union.VectorReg* %6532 to %union.vec128_t*
  %6533 = bitcast %"class.std::bitset"* %YMM0.i1152 to i8*
  %6534 = bitcast %"class.std::bitset"* %YMM0.i1152 to i8*
  %6535 = bitcast %union.vec128_t* %XMM0.i1153 to i8*
  %6536 = load i64, i64* %PC.i1151
  %6537 = add i64 %6536, 3
  store i64 %6537, i64* %PC.i1151
  %6538 = bitcast i8* %6534 to i64*
  %6539 = load i64, i64* %6538, align 1
  %6540 = getelementptr inbounds i8, i8* %6534, i64 8
  %6541 = bitcast i8* %6540 to i64*
  %6542 = load i64, i64* %6541, align 1
  %6543 = bitcast i8* %6535 to i64*
  %6544 = load i64, i64* %6543, align 1
  %6545 = getelementptr inbounds i8, i8* %6535, i64 8
  %6546 = bitcast i8* %6545 to i64*
  %6547 = load i64, i64* %6546, align 1
  %6548 = xor i64 %6544, %6539
  %6549 = xor i64 %6547, %6542
  %6550 = trunc i64 %6548 to i32
  %6551 = lshr i64 %6548, 32
  %6552 = trunc i64 %6551 to i32
  %6553 = bitcast i8* %6533 to i32*
  store i32 %6550, i32* %6553, align 1
  %6554 = getelementptr inbounds i8, i8* %6533, i64 4
  %6555 = bitcast i8* %6554 to i32*
  store i32 %6552, i32* %6555, align 1
  %6556 = trunc i64 %6549 to i32
  %6557 = getelementptr inbounds i8, i8* %6533, i64 8
  %6558 = bitcast i8* %6557 to i32*
  store i32 %6556, i32* %6558, align 1
  %6559 = lshr i64 %6549, 32
  %6560 = trunc i64 %6559 to i32
  %6561 = getelementptr inbounds i8, i8* %6533, i64 12
  %6562 = bitcast i8* %6561 to i32*
  store i32 %6560, i32* %6562, align 1
  store %struct.Memory* %loadMem_480601, %struct.Memory** %MEMORY
  %loadMem_480604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6564 = getelementptr inbounds %struct.GPR, %struct.GPR* %6563, i32 0, i32 33
  %6565 = getelementptr inbounds %struct.Reg, %struct.Reg* %6564, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %6565 to i64*
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6567 = getelementptr inbounds %struct.GPR, %struct.GPR* %6566, i32 0, i32 1
  %6568 = getelementptr inbounds %struct.Reg, %struct.Reg* %6567, i32 0, i32 0
  %RAX.i1150 = bitcast %union.anon* %6568 to i64*
  %6569 = load i64, i64* %PC.i1149
  %6570 = add i64 %6569, 10
  store i64 %6570, i64* %PC.i1149
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1150, align 8
  store %struct.Memory* %loadMem_480604, %struct.Memory** %MEMORY
  %loadMem_48060e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6572 = getelementptr inbounds %struct.GPR, %struct.GPR* %6571, i32 0, i32 33
  %6573 = getelementptr inbounds %struct.Reg, %struct.Reg* %6572, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %6573 to i64*
  %6574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6575 = getelementptr inbounds %struct.GPR, %struct.GPR* %6574, i32 0, i32 5
  %6576 = getelementptr inbounds %struct.Reg, %struct.Reg* %6575, i32 0, i32 0
  %RCX.i1147 = bitcast %union.anon* %6576 to i64*
  %6577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6578 = getelementptr inbounds %struct.GPR, %struct.GPR* %6577, i32 0, i32 15
  %6579 = getelementptr inbounds %struct.Reg, %struct.Reg* %6578, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %6579 to i64*
  %6580 = load i64, i64* %RBP.i1148
  %6581 = sub i64 %6580, 8
  %6582 = load i64, i64* %PC.i1146
  %6583 = add i64 %6582, 4
  store i64 %6583, i64* %PC.i1146
  %6584 = inttoptr i64 %6581 to i32*
  %6585 = load i32, i32* %6584
  %6586 = sext i32 %6585 to i64
  store i64 %6586, i64* %RCX.i1147, align 8
  store %struct.Memory* %loadMem_48060e, %struct.Memory** %MEMORY
  %loadMem_480612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6588 = getelementptr inbounds %struct.GPR, %struct.GPR* %6587, i32 0, i32 33
  %6589 = getelementptr inbounds %struct.Reg, %struct.Reg* %6588, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %6589 to i64*
  %6590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6591 = getelementptr inbounds %struct.GPR, %struct.GPR* %6590, i32 0, i32 5
  %6592 = getelementptr inbounds %struct.Reg, %struct.Reg* %6591, i32 0, i32 0
  %RCX.i1145 = bitcast %union.anon* %6592 to i64*
  %6593 = load i64, i64* %RCX.i1145
  %6594 = load i64, i64* %PC.i1144
  %6595 = add i64 %6594, 7
  store i64 %6595, i64* %PC.i1144
  %6596 = sext i64 %6593 to i128
  %6597 = and i128 %6596, -18446744073709551616
  %6598 = zext i64 %6593 to i128
  %6599 = or i128 %6597, %6598
  %6600 = mul i128 564, %6599
  %6601 = trunc i128 %6600 to i64
  store i64 %6601, i64* %RCX.i1145, align 8
  %6602 = sext i64 %6601 to i128
  %6603 = icmp ne i128 %6602, %6600
  %6604 = zext i1 %6603 to i8
  %6605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6604, i8* %6605, align 1
  %6606 = trunc i128 %6600 to i32
  %6607 = and i32 %6606, 255
  %6608 = call i32 @llvm.ctpop.i32(i32 %6607)
  %6609 = trunc i32 %6608 to i8
  %6610 = and i8 %6609, 1
  %6611 = xor i8 %6610, 1
  %6612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6611, i8* %6612, align 1
  %6613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6613, align 1
  %6614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6614, align 1
  %6615 = lshr i64 %6601, 63
  %6616 = trunc i64 %6615 to i8
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6616, i8* %6617, align 1
  %6618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6604, i8* %6618, align 1
  store %struct.Memory* %loadMem_480612, %struct.Memory** %MEMORY
  %loadMem_480619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 33
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %6621 to i64*
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 1
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %RAX.i1142 = bitcast %union.anon* %6624 to i64*
  %6625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6626 = getelementptr inbounds %struct.GPR, %struct.GPR* %6625, i32 0, i32 5
  %6627 = getelementptr inbounds %struct.Reg, %struct.Reg* %6626, i32 0, i32 0
  %RCX.i1143 = bitcast %union.anon* %6627 to i64*
  %6628 = load i64, i64* %RAX.i1142
  %6629 = load i64, i64* %RCX.i1143
  %6630 = load i64, i64* %PC.i1141
  %6631 = add i64 %6630, 3
  store i64 %6631, i64* %PC.i1141
  %6632 = add i64 %6629, %6628
  store i64 %6632, i64* %RAX.i1142, align 8
  %6633 = icmp ult i64 %6632, %6628
  %6634 = icmp ult i64 %6632, %6629
  %6635 = or i1 %6633, %6634
  %6636 = zext i1 %6635 to i8
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6636, i8* %6637, align 1
  %6638 = trunc i64 %6632 to i32
  %6639 = and i32 %6638, 255
  %6640 = call i32 @llvm.ctpop.i32(i32 %6639)
  %6641 = trunc i32 %6640 to i8
  %6642 = and i8 %6641, 1
  %6643 = xor i8 %6642, 1
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6643, i8* %6644, align 1
  %6645 = xor i64 %6629, %6628
  %6646 = xor i64 %6645, %6632
  %6647 = lshr i64 %6646, 4
  %6648 = trunc i64 %6647 to i8
  %6649 = and i8 %6648, 1
  %6650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6649, i8* %6650, align 1
  %6651 = icmp eq i64 %6632, 0
  %6652 = zext i1 %6651 to i8
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6652, i8* %6653, align 1
  %6654 = lshr i64 %6632, 63
  %6655 = trunc i64 %6654 to i8
  %6656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6655, i8* %6656, align 1
  %6657 = lshr i64 %6628, 63
  %6658 = lshr i64 %6629, 63
  %6659 = xor i64 %6654, %6657
  %6660 = xor i64 %6654, %6658
  %6661 = add i64 %6659, %6660
  %6662 = icmp eq i64 %6661, 2
  %6663 = zext i1 %6662 to i8
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6663, i8* %6664, align 1
  store %struct.Memory* %loadMem_480619, %struct.Memory** %MEMORY
  %loadMem_48061c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6666 = getelementptr inbounds %struct.GPR, %struct.GPR* %6665, i32 0, i32 33
  %6667 = getelementptr inbounds %struct.Reg, %struct.Reg* %6666, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %6667 to i64*
  %6668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6669 = getelementptr inbounds %struct.GPR, %struct.GPR* %6668, i32 0, i32 1
  %6670 = getelementptr inbounds %struct.Reg, %struct.Reg* %6669, i32 0, i32 0
  %RAX.i1139 = bitcast %union.anon* %6670 to i64*
  %6671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6672 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6671, i64 0, i64 0
  %XMM0.i1140 = bitcast %union.VectorReg* %6672 to %union.vec128_t*
  %6673 = load i64, i64* %RAX.i1139
  %6674 = add i64 %6673, 8
  %6675 = bitcast %union.vec128_t* %XMM0.i1140 to i8*
  %6676 = load i64, i64* %PC.i1138
  %6677 = add i64 %6676, 5
  store i64 %6677, i64* %PC.i1138
  %6678 = bitcast i8* %6675 to <2 x float>*
  %6679 = load <2 x float>, <2 x float>* %6678, align 1
  %6680 = extractelement <2 x float> %6679, i32 0
  %6681 = inttoptr i64 %6674 to float*
  store float %6680, float* %6681
  store %struct.Memory* %loadMem_48061c, %struct.Memory** %MEMORY
  br label %block_.L_480621

block_.L_480621:                                  ; preds = %block_480601, %routine_ucomisd__xmm1___xmm0.exit1158
  %loadMem_480621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6683 = getelementptr inbounds %struct.GPR, %struct.GPR* %6682, i32 0, i32 33
  %6684 = getelementptr inbounds %struct.Reg, %struct.Reg* %6683, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %6684 to i64*
  %6685 = load i64, i64* %PC.i1137
  %6686 = add i64 %6685, 87
  %6687 = load i64, i64* %PC.i1137
  %6688 = add i64 %6687, 5
  store i64 %6688, i64* %PC.i1137
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6686, i64* %6689, align 8
  store %struct.Memory* %loadMem_480621, %struct.Memory** %MEMORY
  br label %block_.L_480678

block_.L_480626:                                  ; preds = %routine_ucomisd__xmm0___xmm1.exit1562
  %loadMem_480626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6691 = getelementptr inbounds %struct.GPR, %struct.GPR* %6690, i32 0, i32 33
  %6692 = getelementptr inbounds %struct.Reg, %struct.Reg* %6691, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %6692 to i64*
  %6693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6694 = getelementptr inbounds %struct.GPR, %struct.GPR* %6693, i32 0, i32 1
  %6695 = getelementptr inbounds %struct.Reg, %struct.Reg* %6694, i32 0, i32 0
  %RAX.i1136 = bitcast %union.anon* %6695 to i64*
  %6696 = load i64, i64* %PC.i1135
  %6697 = add i64 %6696, 10
  store i64 %6697, i64* %PC.i1135
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1136, align 8
  store %struct.Memory* %loadMem_480626, %struct.Memory** %MEMORY
  %loadMem_480630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6699 = getelementptr inbounds %struct.GPR, %struct.GPR* %6698, i32 0, i32 33
  %6700 = getelementptr inbounds %struct.Reg, %struct.Reg* %6699, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %6700 to i64*
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6702 = getelementptr inbounds %struct.GPR, %struct.GPR* %6701, i32 0, i32 15
  %6703 = getelementptr inbounds %struct.Reg, %struct.Reg* %6702, i32 0, i32 0
  %RBP.i1133 = bitcast %union.anon* %6703 to i64*
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6705 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6704, i64 0, i64 0
  %YMM0.i1134 = bitcast %union.VectorReg* %6705 to %"class.std::bitset"*
  %6706 = bitcast %"class.std::bitset"* %YMM0.i1134 to i8*
  %6707 = load i64, i64* %RBP.i1133
  %6708 = sub i64 %6707, 28
  %6709 = load i64, i64* %PC.i1132
  %6710 = add i64 %6709, 5
  store i64 %6710, i64* %PC.i1132
  %6711 = inttoptr i64 %6708 to float*
  %6712 = load float, float* %6711
  %6713 = bitcast i8* %6706 to float*
  store float %6712, float* %6713, align 1
  %6714 = getelementptr inbounds i8, i8* %6706, i64 4
  %6715 = bitcast i8* %6714 to float*
  store float 0.000000e+00, float* %6715, align 1
  %6716 = getelementptr inbounds i8, i8* %6706, i64 8
  %6717 = bitcast i8* %6716 to float*
  store float 0.000000e+00, float* %6717, align 1
  %6718 = getelementptr inbounds i8, i8* %6706, i64 12
  %6719 = bitcast i8* %6718 to float*
  store float 0.000000e+00, float* %6719, align 1
  store %struct.Memory* %loadMem_480630, %struct.Memory** %MEMORY
  %loadMem_480635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6721 = getelementptr inbounds %struct.GPR, %struct.GPR* %6720, i32 0, i32 33
  %6722 = getelementptr inbounds %struct.Reg, %struct.Reg* %6721, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %6722 to i64*
  %6723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6724 = getelementptr inbounds %struct.GPR, %struct.GPR* %6723, i32 0, i32 5
  %6725 = getelementptr inbounds %struct.Reg, %struct.Reg* %6724, i32 0, i32 0
  %RCX.i1130 = bitcast %union.anon* %6725 to i64*
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6727 = getelementptr inbounds %struct.GPR, %struct.GPR* %6726, i32 0, i32 15
  %6728 = getelementptr inbounds %struct.Reg, %struct.Reg* %6727, i32 0, i32 0
  %RBP.i1131 = bitcast %union.anon* %6728 to i64*
  %6729 = load i64, i64* %RBP.i1131
  %6730 = sub i64 %6729, 8
  %6731 = load i64, i64* %PC.i1129
  %6732 = add i64 %6731, 4
  store i64 %6732, i64* %PC.i1129
  %6733 = inttoptr i64 %6730 to i32*
  %6734 = load i32, i32* %6733
  %6735 = sext i32 %6734 to i64
  store i64 %6735, i64* %RCX.i1130, align 8
  store %struct.Memory* %loadMem_480635, %struct.Memory** %MEMORY
  %loadMem_480639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6737 = getelementptr inbounds %struct.GPR, %struct.GPR* %6736, i32 0, i32 33
  %6738 = getelementptr inbounds %struct.Reg, %struct.Reg* %6737, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %6738 to i64*
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6740 = getelementptr inbounds %struct.GPR, %struct.GPR* %6739, i32 0, i32 5
  %6741 = getelementptr inbounds %struct.Reg, %struct.Reg* %6740, i32 0, i32 0
  %RCX.i1128 = bitcast %union.anon* %6741 to i64*
  %6742 = load i64, i64* %RCX.i1128
  %6743 = load i64, i64* %PC.i1127
  %6744 = add i64 %6743, 7
  store i64 %6744, i64* %PC.i1127
  %6745 = sext i64 %6742 to i128
  %6746 = and i128 %6745, -18446744073709551616
  %6747 = zext i64 %6742 to i128
  %6748 = or i128 %6746, %6747
  %6749 = mul i128 564, %6748
  %6750 = trunc i128 %6749 to i64
  store i64 %6750, i64* %RCX.i1128, align 8
  %6751 = sext i64 %6750 to i128
  %6752 = icmp ne i128 %6751, %6749
  %6753 = zext i1 %6752 to i8
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6753, i8* %6754, align 1
  %6755 = trunc i128 %6749 to i32
  %6756 = and i32 %6755, 255
  %6757 = call i32 @llvm.ctpop.i32(i32 %6756)
  %6758 = trunc i32 %6757 to i8
  %6759 = and i8 %6758, 1
  %6760 = xor i8 %6759, 1
  %6761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6760, i8* %6761, align 1
  %6762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6762, align 1
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6763, align 1
  %6764 = lshr i64 %6750, 63
  %6765 = trunc i64 %6764 to i8
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6765, i8* %6766, align 1
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6753, i8* %6767, align 1
  store %struct.Memory* %loadMem_480639, %struct.Memory** %MEMORY
  %loadMem_480640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6769 = getelementptr inbounds %struct.GPR, %struct.GPR* %6768, i32 0, i32 33
  %6770 = getelementptr inbounds %struct.Reg, %struct.Reg* %6769, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %6770 to i64*
  %6771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6772 = getelementptr inbounds %struct.GPR, %struct.GPR* %6771, i32 0, i32 1
  %6773 = getelementptr inbounds %struct.Reg, %struct.Reg* %6772, i32 0, i32 0
  %RAX.i1125 = bitcast %union.anon* %6773 to i64*
  %6774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6775 = getelementptr inbounds %struct.GPR, %struct.GPR* %6774, i32 0, i32 7
  %6776 = getelementptr inbounds %struct.Reg, %struct.Reg* %6775, i32 0, i32 0
  %RDX.i1126 = bitcast %union.anon* %6776 to i64*
  %6777 = load i64, i64* %RAX.i1125
  %6778 = load i64, i64* %PC.i1124
  %6779 = add i64 %6778, 3
  store i64 %6779, i64* %PC.i1124
  store i64 %6777, i64* %RDX.i1126, align 8
  store %struct.Memory* %loadMem_480640, %struct.Memory** %MEMORY
  %loadMem_480643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6781 = getelementptr inbounds %struct.GPR, %struct.GPR* %6780, i32 0, i32 33
  %6782 = getelementptr inbounds %struct.Reg, %struct.Reg* %6781, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %6782 to i64*
  %6783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6784 = getelementptr inbounds %struct.GPR, %struct.GPR* %6783, i32 0, i32 5
  %6785 = getelementptr inbounds %struct.Reg, %struct.Reg* %6784, i32 0, i32 0
  %RCX.i1122 = bitcast %union.anon* %6785 to i64*
  %6786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6787 = getelementptr inbounds %struct.GPR, %struct.GPR* %6786, i32 0, i32 7
  %6788 = getelementptr inbounds %struct.Reg, %struct.Reg* %6787, i32 0, i32 0
  %RDX.i1123 = bitcast %union.anon* %6788 to i64*
  %6789 = load i64, i64* %RDX.i1123
  %6790 = load i64, i64* %RCX.i1122
  %6791 = load i64, i64* %PC.i1121
  %6792 = add i64 %6791, 3
  store i64 %6792, i64* %PC.i1121
  %6793 = add i64 %6790, %6789
  store i64 %6793, i64* %RDX.i1123, align 8
  %6794 = icmp ult i64 %6793, %6789
  %6795 = icmp ult i64 %6793, %6790
  %6796 = or i1 %6794, %6795
  %6797 = zext i1 %6796 to i8
  %6798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6797, i8* %6798, align 1
  %6799 = trunc i64 %6793 to i32
  %6800 = and i32 %6799, 255
  %6801 = call i32 @llvm.ctpop.i32(i32 %6800)
  %6802 = trunc i32 %6801 to i8
  %6803 = and i8 %6802, 1
  %6804 = xor i8 %6803, 1
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6804, i8* %6805, align 1
  %6806 = xor i64 %6790, %6789
  %6807 = xor i64 %6806, %6793
  %6808 = lshr i64 %6807, 4
  %6809 = trunc i64 %6808 to i8
  %6810 = and i8 %6809, 1
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6810, i8* %6811, align 1
  %6812 = icmp eq i64 %6793, 0
  %6813 = zext i1 %6812 to i8
  %6814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6813, i8* %6814, align 1
  %6815 = lshr i64 %6793, 63
  %6816 = trunc i64 %6815 to i8
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6816, i8* %6817, align 1
  %6818 = lshr i64 %6789, 63
  %6819 = lshr i64 %6790, 63
  %6820 = xor i64 %6815, %6818
  %6821 = xor i64 %6815, %6819
  %6822 = add i64 %6820, %6821
  %6823 = icmp eq i64 %6822, 2
  %6824 = zext i1 %6823 to i8
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6824, i8* %6825, align 1
  store %struct.Memory* %loadMem_480643, %struct.Memory** %MEMORY
  %loadMem_480646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 33
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %6828 to i64*
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6830 = getelementptr inbounds %struct.GPR, %struct.GPR* %6829, i32 0, i32 7
  %6831 = getelementptr inbounds %struct.Reg, %struct.Reg* %6830, i32 0, i32 0
  %RDX.i1119 = bitcast %union.anon* %6831 to i64*
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6833 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6832, i64 0, i64 1
  %YMM1.i1120 = bitcast %union.VectorReg* %6833 to %"class.std::bitset"*
  %6834 = bitcast %"class.std::bitset"* %YMM1.i1120 to i8*
  %6835 = load i64, i64* %RDX.i1119
  %6836 = add i64 %6835, 36
  %6837 = load i64, i64* %PC.i1118
  %6838 = add i64 %6837, 5
  store i64 %6838, i64* %PC.i1118
  %6839 = inttoptr i64 %6836 to float*
  %6840 = load float, float* %6839
  %6841 = bitcast i8* %6834 to float*
  store float %6840, float* %6841, align 1
  %6842 = getelementptr inbounds i8, i8* %6834, i64 4
  %6843 = bitcast i8* %6842 to float*
  store float 0.000000e+00, float* %6843, align 1
  %6844 = getelementptr inbounds i8, i8* %6834, i64 8
  %6845 = bitcast i8* %6844 to float*
  store float 0.000000e+00, float* %6845, align 1
  %6846 = getelementptr inbounds i8, i8* %6834, i64 12
  %6847 = bitcast i8* %6846 to float*
  store float 0.000000e+00, float* %6847, align 1
  store %struct.Memory* %loadMem_480646, %struct.Memory** %MEMORY
  %loadMem_48064b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 33
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %6850 to i64*
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6852 = getelementptr inbounds %struct.GPR, %struct.GPR* %6851, i32 0, i32 5
  %6853 = getelementptr inbounds %struct.Reg, %struct.Reg* %6852, i32 0, i32 0
  %RCX.i1116 = bitcast %union.anon* %6853 to i64*
  %6854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6855 = getelementptr inbounds %struct.GPR, %struct.GPR* %6854, i32 0, i32 15
  %6856 = getelementptr inbounds %struct.Reg, %struct.Reg* %6855, i32 0, i32 0
  %RBP.i1117 = bitcast %union.anon* %6856 to i64*
  %6857 = load i64, i64* %RBP.i1117
  %6858 = sub i64 %6857, 8
  %6859 = load i64, i64* %PC.i1115
  %6860 = add i64 %6859, 4
  store i64 %6860, i64* %PC.i1115
  %6861 = inttoptr i64 %6858 to i32*
  %6862 = load i32, i32* %6861
  %6863 = sext i32 %6862 to i64
  store i64 %6863, i64* %RCX.i1116, align 8
  store %struct.Memory* %loadMem_48064b, %struct.Memory** %MEMORY
  %loadMem_48064f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6865 = getelementptr inbounds %struct.GPR, %struct.GPR* %6864, i32 0, i32 33
  %6866 = getelementptr inbounds %struct.Reg, %struct.Reg* %6865, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %6866 to i64*
  %6867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6868 = getelementptr inbounds %struct.GPR, %struct.GPR* %6867, i32 0, i32 5
  %6869 = getelementptr inbounds %struct.Reg, %struct.Reg* %6868, i32 0, i32 0
  %RCX.i1114 = bitcast %union.anon* %6869 to i64*
  %6870 = load i64, i64* %RCX.i1114
  %6871 = load i64, i64* %PC.i1113
  %6872 = add i64 %6871, 7
  store i64 %6872, i64* %PC.i1113
  %6873 = sext i64 %6870 to i128
  %6874 = and i128 %6873, -18446744073709551616
  %6875 = zext i64 %6870 to i128
  %6876 = or i128 %6874, %6875
  %6877 = mul i128 564, %6876
  %6878 = trunc i128 %6877 to i64
  store i64 %6878, i64* %RCX.i1114, align 8
  %6879 = sext i64 %6878 to i128
  %6880 = icmp ne i128 %6879, %6877
  %6881 = zext i1 %6880 to i8
  %6882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6881, i8* %6882, align 1
  %6883 = trunc i128 %6877 to i32
  %6884 = and i32 %6883, 255
  %6885 = call i32 @llvm.ctpop.i32(i32 %6884)
  %6886 = trunc i32 %6885 to i8
  %6887 = and i8 %6886, 1
  %6888 = xor i8 %6887, 1
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6888, i8* %6889, align 1
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6890, align 1
  %6891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6891, align 1
  %6892 = lshr i64 %6878, 63
  %6893 = trunc i64 %6892 to i8
  %6894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6893, i8* %6894, align 1
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6881, i8* %6895, align 1
  store %struct.Memory* %loadMem_48064f, %struct.Memory** %MEMORY
  %loadMem_480656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6897 = getelementptr inbounds %struct.GPR, %struct.GPR* %6896, i32 0, i32 33
  %6898 = getelementptr inbounds %struct.Reg, %struct.Reg* %6897, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %6898 to i64*
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6900 = getelementptr inbounds %struct.GPR, %struct.GPR* %6899, i32 0, i32 1
  %6901 = getelementptr inbounds %struct.Reg, %struct.Reg* %6900, i32 0, i32 0
  %RAX.i1111 = bitcast %union.anon* %6901 to i64*
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6903 = getelementptr inbounds %struct.GPR, %struct.GPR* %6902, i32 0, i32 7
  %6904 = getelementptr inbounds %struct.Reg, %struct.Reg* %6903, i32 0, i32 0
  %RDX.i1112 = bitcast %union.anon* %6904 to i64*
  %6905 = load i64, i64* %RAX.i1111
  %6906 = load i64, i64* %PC.i1110
  %6907 = add i64 %6906, 3
  store i64 %6907, i64* %PC.i1110
  store i64 %6905, i64* %RDX.i1112, align 8
  store %struct.Memory* %loadMem_480656, %struct.Memory** %MEMORY
  %loadMem_480659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6909 = getelementptr inbounds %struct.GPR, %struct.GPR* %6908, i32 0, i32 33
  %6910 = getelementptr inbounds %struct.Reg, %struct.Reg* %6909, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %6910 to i64*
  %6911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6912 = getelementptr inbounds %struct.GPR, %struct.GPR* %6911, i32 0, i32 5
  %6913 = getelementptr inbounds %struct.Reg, %struct.Reg* %6912, i32 0, i32 0
  %RCX.i1108 = bitcast %union.anon* %6913 to i64*
  %6914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6915 = getelementptr inbounds %struct.GPR, %struct.GPR* %6914, i32 0, i32 7
  %6916 = getelementptr inbounds %struct.Reg, %struct.Reg* %6915, i32 0, i32 0
  %RDX.i1109 = bitcast %union.anon* %6916 to i64*
  %6917 = load i64, i64* %RDX.i1109
  %6918 = load i64, i64* %RCX.i1108
  %6919 = load i64, i64* %PC.i1107
  %6920 = add i64 %6919, 3
  store i64 %6920, i64* %PC.i1107
  %6921 = add i64 %6918, %6917
  store i64 %6921, i64* %RDX.i1109, align 8
  %6922 = icmp ult i64 %6921, %6917
  %6923 = icmp ult i64 %6921, %6918
  %6924 = or i1 %6922, %6923
  %6925 = zext i1 %6924 to i8
  %6926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6925, i8* %6926, align 1
  %6927 = trunc i64 %6921 to i32
  %6928 = and i32 %6927, 255
  %6929 = call i32 @llvm.ctpop.i32(i32 %6928)
  %6930 = trunc i32 %6929 to i8
  %6931 = and i8 %6930, 1
  %6932 = xor i8 %6931, 1
  %6933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6932, i8* %6933, align 1
  %6934 = xor i64 %6918, %6917
  %6935 = xor i64 %6934, %6921
  %6936 = lshr i64 %6935, 4
  %6937 = trunc i64 %6936 to i8
  %6938 = and i8 %6937, 1
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6938, i8* %6939, align 1
  %6940 = icmp eq i64 %6921, 0
  %6941 = zext i1 %6940 to i8
  %6942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6941, i8* %6942, align 1
  %6943 = lshr i64 %6921, 63
  %6944 = trunc i64 %6943 to i8
  %6945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6944, i8* %6945, align 1
  %6946 = lshr i64 %6917, 63
  %6947 = lshr i64 %6918, 63
  %6948 = xor i64 %6943, %6946
  %6949 = xor i64 %6943, %6947
  %6950 = add i64 %6948, %6949
  %6951 = icmp eq i64 %6950, 2
  %6952 = zext i1 %6951 to i8
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6952, i8* %6953, align 1
  store %struct.Memory* %loadMem_480659, %struct.Memory** %MEMORY
  %loadMem_48065c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6955 = getelementptr inbounds %struct.GPR, %struct.GPR* %6954, i32 0, i32 33
  %6956 = getelementptr inbounds %struct.Reg, %struct.Reg* %6955, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %6956 to i64*
  %6957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6958 = getelementptr inbounds %struct.GPR, %struct.GPR* %6957, i32 0, i32 7
  %6959 = getelementptr inbounds %struct.Reg, %struct.Reg* %6958, i32 0, i32 0
  %RDX.i1105 = bitcast %union.anon* %6959 to i64*
  %6960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6961 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6960, i64 0, i64 1
  %YMM1.i1106 = bitcast %union.VectorReg* %6961 to %"class.std::bitset"*
  %6962 = bitcast %"class.std::bitset"* %YMM1.i1106 to i8*
  %6963 = bitcast %"class.std::bitset"* %YMM1.i1106 to i8*
  %6964 = load i64, i64* %RDX.i1105
  %6965 = add i64 %6964, 44
  %6966 = load i64, i64* %PC.i1104
  %6967 = add i64 %6966, 5
  store i64 %6967, i64* %PC.i1104
  %6968 = bitcast i8* %6963 to <2 x float>*
  %6969 = load <2 x float>, <2 x float>* %6968, align 1
  %6970 = getelementptr inbounds i8, i8* %6963, i64 8
  %6971 = bitcast i8* %6970 to <2 x i32>*
  %6972 = load <2 x i32>, <2 x i32>* %6971, align 1
  %6973 = inttoptr i64 %6965 to float*
  %6974 = load float, float* %6973
  %6975 = extractelement <2 x float> %6969, i32 0
  %6976 = fadd float %6975, %6974
  %6977 = bitcast i8* %6962 to float*
  store float %6976, float* %6977, align 1
  %6978 = bitcast <2 x float> %6969 to <2 x i32>
  %6979 = extractelement <2 x i32> %6978, i32 1
  %6980 = getelementptr inbounds i8, i8* %6962, i64 4
  %6981 = bitcast i8* %6980 to i32*
  store i32 %6979, i32* %6981, align 1
  %6982 = extractelement <2 x i32> %6972, i32 0
  %6983 = getelementptr inbounds i8, i8* %6962, i64 8
  %6984 = bitcast i8* %6983 to i32*
  store i32 %6982, i32* %6984, align 1
  %6985 = extractelement <2 x i32> %6972, i32 1
  %6986 = getelementptr inbounds i8, i8* %6962, i64 12
  %6987 = bitcast i8* %6986 to i32*
  store i32 %6985, i32* %6987, align 1
  store %struct.Memory* %loadMem_48065c, %struct.Memory** %MEMORY
  %loadMem_480661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6989 = getelementptr inbounds %struct.GPR, %struct.GPR* %6988, i32 0, i32 33
  %6990 = getelementptr inbounds %struct.Reg, %struct.Reg* %6989, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %6990 to i64*
  %6991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6992 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6991, i64 0, i64 0
  %YMM0.i1102 = bitcast %union.VectorReg* %6992 to %"class.std::bitset"*
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6994 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6993, i64 0, i64 1
  %XMM1.i1103 = bitcast %union.VectorReg* %6994 to %union.vec128_t*
  %6995 = bitcast %"class.std::bitset"* %YMM0.i1102 to i8*
  %6996 = bitcast %"class.std::bitset"* %YMM0.i1102 to i8*
  %6997 = bitcast %union.vec128_t* %XMM1.i1103 to i8*
  %6998 = load i64, i64* %PC.i1101
  %6999 = add i64 %6998, 4
  store i64 %6999, i64* %PC.i1101
  %7000 = bitcast i8* %6996 to <2 x float>*
  %7001 = load <2 x float>, <2 x float>* %7000, align 1
  %7002 = getelementptr inbounds i8, i8* %6996, i64 8
  %7003 = bitcast i8* %7002 to <2 x i32>*
  %7004 = load <2 x i32>, <2 x i32>* %7003, align 1
  %7005 = bitcast i8* %6997 to <2 x float>*
  %7006 = load <2 x float>, <2 x float>* %7005, align 1
  %7007 = extractelement <2 x float> %7001, i32 0
  %7008 = extractelement <2 x float> %7006, i32 0
  %7009 = fmul float %7007, %7008
  %7010 = bitcast i8* %6995 to float*
  store float %7009, float* %7010, align 1
  %7011 = bitcast <2 x float> %7001 to <2 x i32>
  %7012 = extractelement <2 x i32> %7011, i32 1
  %7013 = getelementptr inbounds i8, i8* %6995, i64 4
  %7014 = bitcast i8* %7013 to i32*
  store i32 %7012, i32* %7014, align 1
  %7015 = extractelement <2 x i32> %7004, i32 0
  %7016 = getelementptr inbounds i8, i8* %6995, i64 8
  %7017 = bitcast i8* %7016 to i32*
  store i32 %7015, i32* %7017, align 1
  %7018 = extractelement <2 x i32> %7004, i32 1
  %7019 = getelementptr inbounds i8, i8* %6995, i64 12
  %7020 = bitcast i8* %7019 to i32*
  store i32 %7018, i32* %7020, align 1
  store %struct.Memory* %loadMem_480661, %struct.Memory** %MEMORY
  %loadMem_480665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7022 = getelementptr inbounds %struct.GPR, %struct.GPR* %7021, i32 0, i32 33
  %7023 = getelementptr inbounds %struct.Reg, %struct.Reg* %7022, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %7023 to i64*
  %7024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7025 = getelementptr inbounds %struct.GPR, %struct.GPR* %7024, i32 0, i32 5
  %7026 = getelementptr inbounds %struct.Reg, %struct.Reg* %7025, i32 0, i32 0
  %RCX.i1099 = bitcast %union.anon* %7026 to i64*
  %7027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7028 = getelementptr inbounds %struct.GPR, %struct.GPR* %7027, i32 0, i32 15
  %7029 = getelementptr inbounds %struct.Reg, %struct.Reg* %7028, i32 0, i32 0
  %RBP.i1100 = bitcast %union.anon* %7029 to i64*
  %7030 = load i64, i64* %RBP.i1100
  %7031 = sub i64 %7030, 8
  %7032 = load i64, i64* %PC.i1098
  %7033 = add i64 %7032, 4
  store i64 %7033, i64* %PC.i1098
  %7034 = inttoptr i64 %7031 to i32*
  %7035 = load i32, i32* %7034
  %7036 = sext i32 %7035 to i64
  store i64 %7036, i64* %RCX.i1099, align 8
  store %struct.Memory* %loadMem_480665, %struct.Memory** %MEMORY
  %loadMem_480669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7038 = getelementptr inbounds %struct.GPR, %struct.GPR* %7037, i32 0, i32 33
  %7039 = getelementptr inbounds %struct.Reg, %struct.Reg* %7038, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %7039 to i64*
  %7040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7041 = getelementptr inbounds %struct.GPR, %struct.GPR* %7040, i32 0, i32 5
  %7042 = getelementptr inbounds %struct.Reg, %struct.Reg* %7041, i32 0, i32 0
  %RCX.i1097 = bitcast %union.anon* %7042 to i64*
  %7043 = load i64, i64* %RCX.i1097
  %7044 = load i64, i64* %PC.i1096
  %7045 = add i64 %7044, 7
  store i64 %7045, i64* %PC.i1096
  %7046 = sext i64 %7043 to i128
  %7047 = and i128 %7046, -18446744073709551616
  %7048 = zext i64 %7043 to i128
  %7049 = or i128 %7047, %7048
  %7050 = mul i128 564, %7049
  %7051 = trunc i128 %7050 to i64
  store i64 %7051, i64* %RCX.i1097, align 8
  %7052 = sext i64 %7051 to i128
  %7053 = icmp ne i128 %7052, %7050
  %7054 = zext i1 %7053 to i8
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7054, i8* %7055, align 1
  %7056 = trunc i128 %7050 to i32
  %7057 = and i32 %7056, 255
  %7058 = call i32 @llvm.ctpop.i32(i32 %7057)
  %7059 = trunc i32 %7058 to i8
  %7060 = and i8 %7059, 1
  %7061 = xor i8 %7060, 1
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7061, i8* %7062, align 1
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7063, align 1
  %7064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7064, align 1
  %7065 = lshr i64 %7051, 63
  %7066 = trunc i64 %7065 to i8
  %7067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7066, i8* %7067, align 1
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7054, i8* %7068, align 1
  store %struct.Memory* %loadMem_480669, %struct.Memory** %MEMORY
  %loadMem_480670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7070 = getelementptr inbounds %struct.GPR, %struct.GPR* %7069, i32 0, i32 33
  %7071 = getelementptr inbounds %struct.Reg, %struct.Reg* %7070, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %7071 to i64*
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7073 = getelementptr inbounds %struct.GPR, %struct.GPR* %7072, i32 0, i32 1
  %7074 = getelementptr inbounds %struct.Reg, %struct.Reg* %7073, i32 0, i32 0
  %RAX.i1094 = bitcast %union.anon* %7074 to i64*
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7076 = getelementptr inbounds %struct.GPR, %struct.GPR* %7075, i32 0, i32 5
  %7077 = getelementptr inbounds %struct.Reg, %struct.Reg* %7076, i32 0, i32 0
  %RCX.i1095 = bitcast %union.anon* %7077 to i64*
  %7078 = load i64, i64* %RAX.i1094
  %7079 = load i64, i64* %RCX.i1095
  %7080 = load i64, i64* %PC.i1093
  %7081 = add i64 %7080, 3
  store i64 %7081, i64* %PC.i1093
  %7082 = add i64 %7079, %7078
  store i64 %7082, i64* %RAX.i1094, align 8
  %7083 = icmp ult i64 %7082, %7078
  %7084 = icmp ult i64 %7082, %7079
  %7085 = or i1 %7083, %7084
  %7086 = zext i1 %7085 to i8
  %7087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7086, i8* %7087, align 1
  %7088 = trunc i64 %7082 to i32
  %7089 = and i32 %7088, 255
  %7090 = call i32 @llvm.ctpop.i32(i32 %7089)
  %7091 = trunc i32 %7090 to i8
  %7092 = and i8 %7091, 1
  %7093 = xor i8 %7092, 1
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7093, i8* %7094, align 1
  %7095 = xor i64 %7079, %7078
  %7096 = xor i64 %7095, %7082
  %7097 = lshr i64 %7096, 4
  %7098 = trunc i64 %7097 to i8
  %7099 = and i8 %7098, 1
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7099, i8* %7100, align 1
  %7101 = icmp eq i64 %7082, 0
  %7102 = zext i1 %7101 to i8
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7102, i8* %7103, align 1
  %7104 = lshr i64 %7082, 63
  %7105 = trunc i64 %7104 to i8
  %7106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7105, i8* %7106, align 1
  %7107 = lshr i64 %7078, 63
  %7108 = lshr i64 %7079, 63
  %7109 = xor i64 %7104, %7107
  %7110 = xor i64 %7104, %7108
  %7111 = add i64 %7109, %7110
  %7112 = icmp eq i64 %7111, 2
  %7113 = zext i1 %7112 to i8
  %7114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7113, i8* %7114, align 1
  store %struct.Memory* %loadMem_480670, %struct.Memory** %MEMORY
  %loadMem_480673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7116 = getelementptr inbounds %struct.GPR, %struct.GPR* %7115, i32 0, i32 33
  %7117 = getelementptr inbounds %struct.Reg, %struct.Reg* %7116, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %7117 to i64*
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7119 = getelementptr inbounds %struct.GPR, %struct.GPR* %7118, i32 0, i32 1
  %7120 = getelementptr inbounds %struct.Reg, %struct.Reg* %7119, i32 0, i32 0
  %RAX.i1091 = bitcast %union.anon* %7120 to i64*
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7122 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7121, i64 0, i64 0
  %XMM0.i1092 = bitcast %union.VectorReg* %7122 to %union.vec128_t*
  %7123 = load i64, i64* %RAX.i1091
  %7124 = add i64 %7123, 8
  %7125 = bitcast %union.vec128_t* %XMM0.i1092 to i8*
  %7126 = load i64, i64* %PC.i1090
  %7127 = add i64 %7126, 5
  store i64 %7127, i64* %PC.i1090
  %7128 = bitcast i8* %7125 to <2 x float>*
  %7129 = load <2 x float>, <2 x float>* %7128, align 1
  %7130 = extractelement <2 x float> %7129, i32 0
  %7131 = inttoptr i64 %7124 to float*
  store float %7130, float* %7131
  store %struct.Memory* %loadMem_480673, %struct.Memory** %MEMORY
  br label %block_.L_480678

block_.L_480678:                                  ; preds = %block_.L_480626, %block_.L_480621
  %loadMem_480678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7133 = getelementptr inbounds %struct.GPR, %struct.GPR* %7132, i32 0, i32 33
  %7134 = getelementptr inbounds %struct.Reg, %struct.Reg* %7133, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %7134 to i64*
  %7135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7136 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7135, i64 0, i64 0
  %YMM0.i1088 = bitcast %union.VectorReg* %7136 to %"class.std::bitset"*
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7138 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7137, i64 0, i64 0
  %XMM0.i1089 = bitcast %union.VectorReg* %7138 to %union.vec128_t*
  %7139 = bitcast %"class.std::bitset"* %YMM0.i1088 to i8*
  %7140 = bitcast %"class.std::bitset"* %YMM0.i1088 to i8*
  %7141 = bitcast %union.vec128_t* %XMM0.i1089 to i8*
  %7142 = load i64, i64* %PC.i1087
  %7143 = add i64 %7142, 3
  store i64 %7143, i64* %PC.i1087
  %7144 = bitcast i8* %7140 to i64*
  %7145 = load i64, i64* %7144, align 1
  %7146 = getelementptr inbounds i8, i8* %7140, i64 8
  %7147 = bitcast i8* %7146 to i64*
  %7148 = load i64, i64* %7147, align 1
  %7149 = bitcast i8* %7141 to i64*
  %7150 = load i64, i64* %7149, align 1
  %7151 = getelementptr inbounds i8, i8* %7141, i64 8
  %7152 = bitcast i8* %7151 to i64*
  %7153 = load i64, i64* %7152, align 1
  %7154 = xor i64 %7150, %7145
  %7155 = xor i64 %7153, %7148
  %7156 = trunc i64 %7154 to i32
  %7157 = lshr i64 %7154, 32
  %7158 = trunc i64 %7157 to i32
  %7159 = bitcast i8* %7139 to i32*
  store i32 %7156, i32* %7159, align 1
  %7160 = getelementptr inbounds i8, i8* %7139, i64 4
  %7161 = bitcast i8* %7160 to i32*
  store i32 %7158, i32* %7161, align 1
  %7162 = trunc i64 %7155 to i32
  %7163 = getelementptr inbounds i8, i8* %7139, i64 8
  %7164 = bitcast i8* %7163 to i32*
  store i32 %7162, i32* %7164, align 1
  %7165 = lshr i64 %7155, 32
  %7166 = trunc i64 %7165 to i32
  %7167 = getelementptr inbounds i8, i8* %7139, i64 12
  %7168 = bitcast i8* %7167 to i32*
  store i32 %7166, i32* %7168, align 1
  store %struct.Memory* %loadMem_480678, %struct.Memory** %MEMORY
  %loadMem_48067b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7170 = getelementptr inbounds %struct.GPR, %struct.GPR* %7169, i32 0, i32 33
  %7171 = getelementptr inbounds %struct.Reg, %struct.Reg* %7170, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %7171 to i64*
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7173 = getelementptr inbounds %struct.GPR, %struct.GPR* %7172, i32 0, i32 1
  %7174 = getelementptr inbounds %struct.Reg, %struct.Reg* %7173, i32 0, i32 0
  %RAX.i1086 = bitcast %union.anon* %7174 to i64*
  %7175 = load i64, i64* %PC.i1085
  %7176 = add i64 %7175, 10
  store i64 %7176, i64* %PC.i1085
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1086, align 8
  store %struct.Memory* %loadMem_48067b, %struct.Memory** %MEMORY
  %loadMem_480685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7178 = getelementptr inbounds %struct.GPR, %struct.GPR* %7177, i32 0, i32 33
  %7179 = getelementptr inbounds %struct.Reg, %struct.Reg* %7178, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %7179 to i64*
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7181 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7180, i64 0, i64 1
  %YMM1.i1084 = bitcast %union.VectorReg* %7181 to %"class.std::bitset"*
  %7182 = bitcast %"class.std::bitset"* %YMM1.i1084 to i8*
  %7183 = load i64, i64* %PC.i1083
  %7184 = add i64 %7183, ptrtoint (%G_0x62a03__rip__type* @G_0x62a03__rip_ to i64)
  %7185 = load i64, i64* %PC.i1083
  %7186 = add i64 %7185, 8
  store i64 %7186, i64* %PC.i1083
  %7187 = inttoptr i64 %7184 to double*
  %7188 = load double, double* %7187
  %7189 = bitcast i8* %7182 to double*
  store double %7188, double* %7189, align 1
  %7190 = getelementptr inbounds i8, i8* %7182, i64 8
  %7191 = bitcast i8* %7190 to double*
  store double 0.000000e+00, double* %7191, align 1
  store %struct.Memory* %loadMem_480685, %struct.Memory** %MEMORY
  %loadMem_48068d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7193 = getelementptr inbounds %struct.GPR, %struct.GPR* %7192, i32 0, i32 33
  %7194 = getelementptr inbounds %struct.Reg, %struct.Reg* %7193, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %7194 to i64*
  %7195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7196 = getelementptr inbounds %struct.GPR, %struct.GPR* %7195, i32 0, i32 5
  %7197 = getelementptr inbounds %struct.Reg, %struct.Reg* %7196, i32 0, i32 0
  %RCX.i1081 = bitcast %union.anon* %7197 to i64*
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7199 = getelementptr inbounds %struct.GPR, %struct.GPR* %7198, i32 0, i32 15
  %7200 = getelementptr inbounds %struct.Reg, %struct.Reg* %7199, i32 0, i32 0
  %RBP.i1082 = bitcast %union.anon* %7200 to i64*
  %7201 = load i64, i64* %RBP.i1082
  %7202 = sub i64 %7201, 8
  %7203 = load i64, i64* %PC.i1080
  %7204 = add i64 %7203, 4
  store i64 %7204, i64* %PC.i1080
  %7205 = inttoptr i64 %7202 to i32*
  %7206 = load i32, i32* %7205
  %7207 = sext i32 %7206 to i64
  store i64 %7207, i64* %RCX.i1081, align 8
  store %struct.Memory* %loadMem_48068d, %struct.Memory** %MEMORY
  %loadMem_480691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7209 = getelementptr inbounds %struct.GPR, %struct.GPR* %7208, i32 0, i32 33
  %7210 = getelementptr inbounds %struct.Reg, %struct.Reg* %7209, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %7210 to i64*
  %7211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7212 = getelementptr inbounds %struct.GPR, %struct.GPR* %7211, i32 0, i32 5
  %7213 = getelementptr inbounds %struct.Reg, %struct.Reg* %7212, i32 0, i32 0
  %RCX.i1079 = bitcast %union.anon* %7213 to i64*
  %7214 = load i64, i64* %RCX.i1079
  %7215 = load i64, i64* %PC.i1078
  %7216 = add i64 %7215, 7
  store i64 %7216, i64* %PC.i1078
  %7217 = sext i64 %7214 to i128
  %7218 = and i128 %7217, -18446744073709551616
  %7219 = zext i64 %7214 to i128
  %7220 = or i128 %7218, %7219
  %7221 = mul i128 564, %7220
  %7222 = trunc i128 %7221 to i64
  store i64 %7222, i64* %RCX.i1079, align 8
  %7223 = sext i64 %7222 to i128
  %7224 = icmp ne i128 %7223, %7221
  %7225 = zext i1 %7224 to i8
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7225, i8* %7226, align 1
  %7227 = trunc i128 %7221 to i32
  %7228 = and i32 %7227, 255
  %7229 = call i32 @llvm.ctpop.i32(i32 %7228)
  %7230 = trunc i32 %7229 to i8
  %7231 = and i8 %7230, 1
  %7232 = xor i8 %7231, 1
  %7233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7232, i8* %7233, align 1
  %7234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7234, align 1
  %7235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7235, align 1
  %7236 = lshr i64 %7222, 63
  %7237 = trunc i64 %7236 to i8
  %7238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7237, i8* %7238, align 1
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7225, i8* %7239, align 1
  store %struct.Memory* %loadMem_480691, %struct.Memory** %MEMORY
  %loadMem_480698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7241 = getelementptr inbounds %struct.GPR, %struct.GPR* %7240, i32 0, i32 33
  %7242 = getelementptr inbounds %struct.Reg, %struct.Reg* %7241, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %7242 to i64*
  %7243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7244 = getelementptr inbounds %struct.GPR, %struct.GPR* %7243, i32 0, i32 1
  %7245 = getelementptr inbounds %struct.Reg, %struct.Reg* %7244, i32 0, i32 0
  %RAX.i1076 = bitcast %union.anon* %7245 to i64*
  %7246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7247 = getelementptr inbounds %struct.GPR, %struct.GPR* %7246, i32 0, i32 7
  %7248 = getelementptr inbounds %struct.Reg, %struct.Reg* %7247, i32 0, i32 0
  %RDX.i1077 = bitcast %union.anon* %7248 to i64*
  %7249 = load i64, i64* %RAX.i1076
  %7250 = load i64, i64* %PC.i1075
  %7251 = add i64 %7250, 3
  store i64 %7251, i64* %PC.i1075
  store i64 %7249, i64* %RDX.i1077, align 8
  store %struct.Memory* %loadMem_480698, %struct.Memory** %MEMORY
  %loadMem_48069b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7253 = getelementptr inbounds %struct.GPR, %struct.GPR* %7252, i32 0, i32 33
  %7254 = getelementptr inbounds %struct.Reg, %struct.Reg* %7253, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %7254 to i64*
  %7255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7256 = getelementptr inbounds %struct.GPR, %struct.GPR* %7255, i32 0, i32 5
  %7257 = getelementptr inbounds %struct.Reg, %struct.Reg* %7256, i32 0, i32 0
  %RCX.i1073 = bitcast %union.anon* %7257 to i64*
  %7258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7259 = getelementptr inbounds %struct.GPR, %struct.GPR* %7258, i32 0, i32 7
  %7260 = getelementptr inbounds %struct.Reg, %struct.Reg* %7259, i32 0, i32 0
  %RDX.i1074 = bitcast %union.anon* %7260 to i64*
  %7261 = load i64, i64* %RDX.i1074
  %7262 = load i64, i64* %RCX.i1073
  %7263 = load i64, i64* %PC.i1072
  %7264 = add i64 %7263, 3
  store i64 %7264, i64* %PC.i1072
  %7265 = add i64 %7262, %7261
  store i64 %7265, i64* %RDX.i1074, align 8
  %7266 = icmp ult i64 %7265, %7261
  %7267 = icmp ult i64 %7265, %7262
  %7268 = or i1 %7266, %7267
  %7269 = zext i1 %7268 to i8
  %7270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7269, i8* %7270, align 1
  %7271 = trunc i64 %7265 to i32
  %7272 = and i32 %7271, 255
  %7273 = call i32 @llvm.ctpop.i32(i32 %7272)
  %7274 = trunc i32 %7273 to i8
  %7275 = and i8 %7274, 1
  %7276 = xor i8 %7275, 1
  %7277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7276, i8* %7277, align 1
  %7278 = xor i64 %7262, %7261
  %7279 = xor i64 %7278, %7265
  %7280 = lshr i64 %7279, 4
  %7281 = trunc i64 %7280 to i8
  %7282 = and i8 %7281, 1
  %7283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7282, i8* %7283, align 1
  %7284 = icmp eq i64 %7265, 0
  %7285 = zext i1 %7284 to i8
  %7286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7285, i8* %7286, align 1
  %7287 = lshr i64 %7265, 63
  %7288 = trunc i64 %7287 to i8
  %7289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7288, i8* %7289, align 1
  %7290 = lshr i64 %7261, 63
  %7291 = lshr i64 %7262, 63
  %7292 = xor i64 %7287, %7290
  %7293 = xor i64 %7287, %7291
  %7294 = add i64 %7292, %7293
  %7295 = icmp eq i64 %7294, 2
  %7296 = zext i1 %7295 to i8
  %7297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7296, i8* %7297, align 1
  store %struct.Memory* %loadMem_48069b, %struct.Memory** %MEMORY
  %loadMem_48069e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7299 = getelementptr inbounds %struct.GPR, %struct.GPR* %7298, i32 0, i32 33
  %7300 = getelementptr inbounds %struct.Reg, %struct.Reg* %7299, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %7300 to i64*
  %7301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7302 = getelementptr inbounds %struct.GPR, %struct.GPR* %7301, i32 0, i32 7
  %7303 = getelementptr inbounds %struct.Reg, %struct.Reg* %7302, i32 0, i32 0
  %RDX.i1070 = bitcast %union.anon* %7303 to i64*
  %7304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7304, i64 0, i64 2
  %YMM2.i1071 = bitcast %union.VectorReg* %7305 to %"class.std::bitset"*
  %7306 = bitcast %"class.std::bitset"* %YMM2.i1071 to i8*
  %7307 = load i64, i64* %RDX.i1070
  %7308 = add i64 %7307, 48
  %7309 = load i64, i64* %PC.i1069
  %7310 = add i64 %7309, 5
  store i64 %7310, i64* %PC.i1069
  %7311 = inttoptr i64 %7308 to float*
  %7312 = load float, float* %7311
  %7313 = fpext float %7312 to double
  %7314 = bitcast i8* %7306 to double*
  store double %7313, double* %7314, align 1
  store %struct.Memory* %loadMem_48069e, %struct.Memory** %MEMORY
  %loadMem_4806a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7316 = getelementptr inbounds %struct.GPR, %struct.GPR* %7315, i32 0, i32 33
  %7317 = getelementptr inbounds %struct.Reg, %struct.Reg* %7316, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %7317 to i64*
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7318, i64 0, i64 1
  %YMM1.i1067 = bitcast %union.VectorReg* %7319 to %"class.std::bitset"*
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7320, i64 0, i64 2
  %XMM2.i1068 = bitcast %union.VectorReg* %7321 to %union.vec128_t*
  %7322 = bitcast %"class.std::bitset"* %YMM1.i1067 to i8*
  %7323 = bitcast %"class.std::bitset"* %YMM1.i1067 to i8*
  %7324 = bitcast %union.vec128_t* %XMM2.i1068 to i8*
  %7325 = load i64, i64* %PC.i1066
  %7326 = add i64 %7325, 4
  store i64 %7326, i64* %PC.i1066
  %7327 = bitcast i8* %7323 to double*
  %7328 = load double, double* %7327, align 1
  %7329 = getelementptr inbounds i8, i8* %7323, i64 8
  %7330 = bitcast i8* %7329 to i64*
  %7331 = load i64, i64* %7330, align 1
  %7332 = bitcast i8* %7324 to double*
  %7333 = load double, double* %7332, align 1
  %7334 = fmul double %7328, %7333
  %7335 = bitcast i8* %7322 to double*
  store double %7334, double* %7335, align 1
  %7336 = getelementptr inbounds i8, i8* %7322, i64 8
  %7337 = bitcast i8* %7336 to i64*
  store i64 %7331, i64* %7337, align 1
  store %struct.Memory* %loadMem_4806a3, %struct.Memory** %MEMORY
  %loadMem_4806a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7339 = getelementptr inbounds %struct.GPR, %struct.GPR* %7338, i32 0, i32 33
  %7340 = getelementptr inbounds %struct.Reg, %struct.Reg* %7339, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %7340 to i64*
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7342 = getelementptr inbounds %struct.GPR, %struct.GPR* %7341, i32 0, i32 15
  %7343 = getelementptr inbounds %struct.Reg, %struct.Reg* %7342, i32 0, i32 0
  %RBP.i1064 = bitcast %union.anon* %7343 to i64*
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7345 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7344, i64 0, i64 2
  %YMM2.i1065 = bitcast %union.VectorReg* %7345 to %"class.std::bitset"*
  %7346 = bitcast %"class.std::bitset"* %YMM2.i1065 to i8*
  %7347 = load i64, i64* %RBP.i1064
  %7348 = sub i64 %7347, 24
  %7349 = load i64, i64* %PC.i1063
  %7350 = add i64 %7349, 5
  store i64 %7350, i64* %PC.i1063
  %7351 = inttoptr i64 %7348 to float*
  %7352 = load float, float* %7351
  %7353 = fpext float %7352 to double
  %7354 = bitcast i8* %7346 to double*
  store double %7353, double* %7354, align 1
  store %struct.Memory* %loadMem_4806a7, %struct.Memory** %MEMORY
  %loadMem_4806ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 33
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %7357 to i64*
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7359 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7358, i64 0, i64 2
  %YMM2.i1061 = bitcast %union.VectorReg* %7359 to %"class.std::bitset"*
  %7360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7361 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7360, i64 0, i64 1
  %XMM1.i1062 = bitcast %union.VectorReg* %7361 to %union.vec128_t*
  %7362 = bitcast %"class.std::bitset"* %YMM2.i1061 to i8*
  %7363 = bitcast %"class.std::bitset"* %YMM2.i1061 to i8*
  %7364 = bitcast %union.vec128_t* %XMM1.i1062 to i8*
  %7365 = load i64, i64* %PC.i1060
  %7366 = add i64 %7365, 4
  store i64 %7366, i64* %PC.i1060
  %7367 = bitcast i8* %7363 to double*
  %7368 = load double, double* %7367, align 1
  %7369 = getelementptr inbounds i8, i8* %7363, i64 8
  %7370 = bitcast i8* %7369 to i64*
  %7371 = load i64, i64* %7370, align 1
  %7372 = bitcast i8* %7364 to double*
  %7373 = load double, double* %7372, align 1
  %7374 = fadd double %7368, %7373
  %7375 = bitcast i8* %7362 to double*
  store double %7374, double* %7375, align 1
  %7376 = getelementptr inbounds i8, i8* %7362, i64 8
  %7377 = bitcast i8* %7376 to i64*
  store i64 %7371, i64* %7377, align 1
  store %struct.Memory* %loadMem_4806ac, %struct.Memory** %MEMORY
  %loadMem_4806b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7379 = getelementptr inbounds %struct.GPR, %struct.GPR* %7378, i32 0, i32 33
  %7380 = getelementptr inbounds %struct.Reg, %struct.Reg* %7379, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %7380 to i64*
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7382 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7381, i64 0, i64 1
  %YMM1.i1058 = bitcast %union.VectorReg* %7382 to %"class.std::bitset"*
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7384 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7383, i64 0, i64 2
  %XMM2.i1059 = bitcast %union.VectorReg* %7384 to %union.vec128_t*
  %7385 = bitcast %"class.std::bitset"* %YMM1.i1058 to i8*
  %7386 = bitcast %union.vec128_t* %XMM2.i1059 to i8*
  %7387 = load i64, i64* %PC.i1057
  %7388 = add i64 %7387, 4
  store i64 %7388, i64* %PC.i1057
  %7389 = bitcast i8* %7385 to <2 x i32>*
  %7390 = load <2 x i32>, <2 x i32>* %7389, align 1
  %7391 = getelementptr inbounds i8, i8* %7385, i64 8
  %7392 = bitcast i8* %7391 to <2 x i32>*
  %7393 = load <2 x i32>, <2 x i32>* %7392, align 1
  %7394 = bitcast i8* %7386 to double*
  %7395 = load double, double* %7394, align 1
  %7396 = fptrunc double %7395 to float
  %7397 = bitcast i8* %7385 to float*
  store float %7396, float* %7397, align 1
  %7398 = extractelement <2 x i32> %7390, i32 1
  %7399 = getelementptr inbounds i8, i8* %7385, i64 4
  %7400 = bitcast i8* %7399 to i32*
  store i32 %7398, i32* %7400, align 1
  %7401 = extractelement <2 x i32> %7393, i32 0
  %7402 = bitcast i8* %7391 to i32*
  store i32 %7401, i32* %7402, align 1
  %7403 = extractelement <2 x i32> %7393, i32 1
  %7404 = getelementptr inbounds i8, i8* %7385, i64 12
  %7405 = bitcast i8* %7404 to i32*
  store i32 %7403, i32* %7405, align 1
  store %struct.Memory* %loadMem_4806b0, %struct.Memory** %MEMORY
  %loadMem_4806b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7407 = getelementptr inbounds %struct.GPR, %struct.GPR* %7406, i32 0, i32 33
  %7408 = getelementptr inbounds %struct.Reg, %struct.Reg* %7407, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %7408 to i64*
  %7409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7410 = getelementptr inbounds %struct.GPR, %struct.GPR* %7409, i32 0, i32 15
  %7411 = getelementptr inbounds %struct.Reg, %struct.Reg* %7410, i32 0, i32 0
  %RBP.i1055 = bitcast %union.anon* %7411 to i64*
  %7412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7413 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7412, i64 0, i64 1
  %XMM1.i1056 = bitcast %union.VectorReg* %7413 to %union.vec128_t*
  %7414 = load i64, i64* %RBP.i1055
  %7415 = sub i64 %7414, 24
  %7416 = bitcast %union.vec128_t* %XMM1.i1056 to i8*
  %7417 = load i64, i64* %PC.i1054
  %7418 = add i64 %7417, 5
  store i64 %7418, i64* %PC.i1054
  %7419 = bitcast i8* %7416 to <2 x float>*
  %7420 = load <2 x float>, <2 x float>* %7419, align 1
  %7421 = extractelement <2 x float> %7420, i32 0
  %7422 = inttoptr i64 %7415 to float*
  store float %7421, float* %7422
  store %struct.Memory* %loadMem_4806b4, %struct.Memory** %MEMORY
  %loadMem_4806b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7424 = getelementptr inbounds %struct.GPR, %struct.GPR* %7423, i32 0, i32 33
  %7425 = getelementptr inbounds %struct.Reg, %struct.Reg* %7424, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %7425 to i64*
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7427 = getelementptr inbounds %struct.GPR, %struct.GPR* %7426, i32 0, i32 5
  %7428 = getelementptr inbounds %struct.Reg, %struct.Reg* %7427, i32 0, i32 0
  %RCX.i1052 = bitcast %union.anon* %7428 to i64*
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7430 = getelementptr inbounds %struct.GPR, %struct.GPR* %7429, i32 0, i32 15
  %7431 = getelementptr inbounds %struct.Reg, %struct.Reg* %7430, i32 0, i32 0
  %RBP.i1053 = bitcast %union.anon* %7431 to i64*
  %7432 = load i64, i64* %RBP.i1053
  %7433 = sub i64 %7432, 8
  %7434 = load i64, i64* %PC.i1051
  %7435 = add i64 %7434, 4
  store i64 %7435, i64* %PC.i1051
  %7436 = inttoptr i64 %7433 to i32*
  %7437 = load i32, i32* %7436
  %7438 = sext i32 %7437 to i64
  store i64 %7438, i64* %RCX.i1052, align 8
  store %struct.Memory* %loadMem_4806b9, %struct.Memory** %MEMORY
  %loadMem_4806bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 33
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %7441 to i64*
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7443 = getelementptr inbounds %struct.GPR, %struct.GPR* %7442, i32 0, i32 5
  %7444 = getelementptr inbounds %struct.Reg, %struct.Reg* %7443, i32 0, i32 0
  %RCX.i1050 = bitcast %union.anon* %7444 to i64*
  %7445 = load i64, i64* %RCX.i1050
  %7446 = load i64, i64* %PC.i1049
  %7447 = add i64 %7446, 7
  store i64 %7447, i64* %PC.i1049
  %7448 = sext i64 %7445 to i128
  %7449 = and i128 %7448, -18446744073709551616
  %7450 = zext i64 %7445 to i128
  %7451 = or i128 %7449, %7450
  %7452 = mul i128 564, %7451
  %7453 = trunc i128 %7452 to i64
  store i64 %7453, i64* %RCX.i1050, align 8
  %7454 = sext i64 %7453 to i128
  %7455 = icmp ne i128 %7454, %7452
  %7456 = zext i1 %7455 to i8
  %7457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7456, i8* %7457, align 1
  %7458 = trunc i128 %7452 to i32
  %7459 = and i32 %7458, 255
  %7460 = call i32 @llvm.ctpop.i32(i32 %7459)
  %7461 = trunc i32 %7460 to i8
  %7462 = and i8 %7461, 1
  %7463 = xor i8 %7462, 1
  %7464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7463, i8* %7464, align 1
  %7465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7465, align 1
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7466, align 1
  %7467 = lshr i64 %7453, 63
  %7468 = trunc i64 %7467 to i8
  %7469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7468, i8* %7469, align 1
  %7470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7456, i8* %7470, align 1
  store %struct.Memory* %loadMem_4806bd, %struct.Memory** %MEMORY
  %loadMem_4806c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7472 = getelementptr inbounds %struct.GPR, %struct.GPR* %7471, i32 0, i32 33
  %7473 = getelementptr inbounds %struct.Reg, %struct.Reg* %7472, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %7473 to i64*
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7475 = getelementptr inbounds %struct.GPR, %struct.GPR* %7474, i32 0, i32 1
  %7476 = getelementptr inbounds %struct.Reg, %struct.Reg* %7475, i32 0, i32 0
  %RAX.i1047 = bitcast %union.anon* %7476 to i64*
  %7477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7478 = getelementptr inbounds %struct.GPR, %struct.GPR* %7477, i32 0, i32 5
  %7479 = getelementptr inbounds %struct.Reg, %struct.Reg* %7478, i32 0, i32 0
  %RCX.i1048 = bitcast %union.anon* %7479 to i64*
  %7480 = load i64, i64* %RAX.i1047
  %7481 = load i64, i64* %RCX.i1048
  %7482 = load i64, i64* %PC.i1046
  %7483 = add i64 %7482, 3
  store i64 %7483, i64* %PC.i1046
  %7484 = add i64 %7481, %7480
  store i64 %7484, i64* %RAX.i1047, align 8
  %7485 = icmp ult i64 %7484, %7480
  %7486 = icmp ult i64 %7484, %7481
  %7487 = or i1 %7485, %7486
  %7488 = zext i1 %7487 to i8
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7488, i8* %7489, align 1
  %7490 = trunc i64 %7484 to i32
  %7491 = and i32 %7490, 255
  %7492 = call i32 @llvm.ctpop.i32(i32 %7491)
  %7493 = trunc i32 %7492 to i8
  %7494 = and i8 %7493, 1
  %7495 = xor i8 %7494, 1
  %7496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7495, i8* %7496, align 1
  %7497 = xor i64 %7481, %7480
  %7498 = xor i64 %7497, %7484
  %7499 = lshr i64 %7498, 4
  %7500 = trunc i64 %7499 to i8
  %7501 = and i8 %7500, 1
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7501, i8* %7502, align 1
  %7503 = icmp eq i64 %7484, 0
  %7504 = zext i1 %7503 to i8
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7504, i8* %7505, align 1
  %7506 = lshr i64 %7484, 63
  %7507 = trunc i64 %7506 to i8
  %7508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7507, i8* %7508, align 1
  %7509 = lshr i64 %7480, 63
  %7510 = lshr i64 %7481, 63
  %7511 = xor i64 %7506, %7509
  %7512 = xor i64 %7506, %7510
  %7513 = add i64 %7511, %7512
  %7514 = icmp eq i64 %7513, 2
  %7515 = zext i1 %7514 to i8
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7515, i8* %7516, align 1
  store %struct.Memory* %loadMem_4806c4, %struct.Memory** %MEMORY
  %loadMem_4806c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7518 = getelementptr inbounds %struct.GPR, %struct.GPR* %7517, i32 0, i32 33
  %7519 = getelementptr inbounds %struct.Reg, %struct.Reg* %7518, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %7519 to i64*
  %7520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7521 = getelementptr inbounds %struct.GPR, %struct.GPR* %7520, i32 0, i32 1
  %7522 = getelementptr inbounds %struct.Reg, %struct.Reg* %7521, i32 0, i32 0
  %RAX.i1044 = bitcast %union.anon* %7522 to i64*
  %7523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7524 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7523, i64 0, i64 1
  %YMM1.i1045 = bitcast %union.VectorReg* %7524 to %"class.std::bitset"*
  %7525 = bitcast %"class.std::bitset"* %YMM1.i1045 to i8*
  %7526 = load i64, i64* %RAX.i1044
  %7527 = add i64 %7526, 48
  %7528 = load i64, i64* %PC.i1043
  %7529 = add i64 %7528, 5
  store i64 %7529, i64* %PC.i1043
  %7530 = inttoptr i64 %7527 to float*
  %7531 = load float, float* %7530
  %7532 = fpext float %7531 to double
  %7533 = bitcast i8* %7525 to double*
  store double %7532, double* %7533, align 1
  store %struct.Memory* %loadMem_4806c7, %struct.Memory** %MEMORY
  %loadMem_4806cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7535 = getelementptr inbounds %struct.GPR, %struct.GPR* %7534, i32 0, i32 33
  %7536 = getelementptr inbounds %struct.Reg, %struct.Reg* %7535, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %7536 to i64*
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7538 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7537, i64 0, i64 0
  %XMM0.i1037 = bitcast %union.VectorReg* %7538 to %union.vec128_t*
  %7539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7540 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7539, i64 0, i64 1
  %XMM1.i1038 = bitcast %union.VectorReg* %7540 to %union.vec128_t*
  %7541 = bitcast %union.vec128_t* %XMM1.i1038 to i8*
  %7542 = bitcast %union.vec128_t* %XMM0.i1037 to i8*
  %7543 = load i64, i64* %PC.i1036
  %7544 = add i64 %7543, 4
  store i64 %7544, i64* %PC.i1036
  %7545 = bitcast i8* %7541 to double*
  %7546 = load double, double* %7545, align 1
  %7547 = bitcast i8* %7542 to double*
  %7548 = load double, double* %7547, align 1
  %7549 = fcmp uno double %7546, %7548
  br i1 %7549, label %7550, label %7562

; <label>:7550:                                   ; preds = %block_.L_480678
  %7551 = fadd double %7546, %7548
  %7552 = bitcast double %7551 to i64
  %7553 = and i64 %7552, 9221120237041090560
  %7554 = icmp eq i64 %7553, 9218868437227405312
  %7555 = and i64 %7552, 2251799813685247
  %7556 = icmp ne i64 %7555, 0
  %7557 = and i1 %7554, %7556
  br i1 %7557, label %7558, label %7568

; <label>:7558:                                   ; preds = %7550
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7560 = load i64, i64* %7559, align 8
  %7561 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7560, %struct.Memory* %loadMem_4806cc)
  br label %routine_ucomisd__xmm0___xmm1.exit1039

; <label>:7562:                                   ; preds = %block_.L_480678
  %7563 = fcmp ogt double %7546, %7548
  br i1 %7563, label %7568, label %7564

; <label>:7564:                                   ; preds = %7562
  %7565 = fcmp olt double %7546, %7548
  br i1 %7565, label %7568, label %7566

; <label>:7566:                                   ; preds = %7564
  %7567 = fcmp oeq double %7546, %7548
  br i1 %7567, label %7568, label %7575

; <label>:7568:                                   ; preds = %7566, %7564, %7562, %7550
  %7569 = phi i8 [ 0, %7562 ], [ 0, %7564 ], [ 1, %7566 ], [ 1, %7550 ]
  %7570 = phi i8 [ 0, %7562 ], [ 0, %7564 ], [ 0, %7566 ], [ 1, %7550 ]
  %7571 = phi i8 [ 0, %7562 ], [ 1, %7564 ], [ 0, %7566 ], [ 1, %7550 ]
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7569, i8* %7572, align 1
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7570, i8* %7573, align 1
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7571, i8* %7574, align 1
  br label %7575

; <label>:7575:                                   ; preds = %7568, %7566
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7576, align 1
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7577, align 1
  %7578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7578, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit1039

routine_ucomisd__xmm0___xmm1.exit1039:            ; preds = %7558, %7575
  %7579 = phi %struct.Memory* [ %7561, %7558 ], [ %loadMem_4806cc, %7575 ]
  store %struct.Memory* %7579, %struct.Memory** %MEMORY
  %loadMem_4806d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7581 = getelementptr inbounds %struct.GPR, %struct.GPR* %7580, i32 0, i32 33
  %7582 = getelementptr inbounds %struct.Reg, %struct.Reg* %7581, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %7582 to i64*
  %7583 = load i64, i64* %PC.i1035
  %7584 = add i64 %7583, 17
  %7585 = load i64, i64* %PC.i1035
  %7586 = add i64 %7585, 6
  %7587 = load i64, i64* %PC.i1035
  %7588 = add i64 %7587, 6
  store i64 %7588, i64* %PC.i1035
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7590 = load i8, i8* %7589, align 1
  %7591 = icmp eq i8 %7590, 0
  %7592 = zext i1 %7591 to i8
  store i8 %7592, i8* %BRANCH_TAKEN, align 1
  %7593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7594 = select i1 %7591, i64 %7584, i64 %7586
  store i64 %7594, i64* %7593, align 8
  store %struct.Memory* %loadMem_4806d0, %struct.Memory** %MEMORY
  %loadBr_4806d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4806d0 = icmp eq i8 %loadBr_4806d0, 1
  br i1 %cmpBr_4806d0, label %block_.L_4806e1, label %block_4806d6

block_4806d6:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit1039
  %loadMem_4806d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7596 = getelementptr inbounds %struct.GPR, %struct.GPR* %7595, i32 0, i32 33
  %7597 = getelementptr inbounds %struct.Reg, %struct.Reg* %7596, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %7597 to i64*
  %7598 = load i64, i64* %PC.i1034
  %7599 = add i64 %7598, 11
  %7600 = load i64, i64* %PC.i1034
  %7601 = add i64 %7600, 6
  %7602 = load i64, i64* %PC.i1034
  %7603 = add i64 %7602, 6
  store i64 %7603, i64* %PC.i1034
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7605 = load i8, i8* %7604, align 1
  store i8 %7605, i8* %BRANCH_TAKEN, align 1
  %7606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7607 = icmp ne i8 %7605, 0
  %7608 = select i1 %7607, i64 %7599, i64 %7601
  store i64 %7608, i64* %7606, align 8
  store %struct.Memory* %loadMem_4806d6, %struct.Memory** %MEMORY
  %loadBr_4806d6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4806d6 = icmp eq i8 %loadBr_4806d6, 1
  br i1 %cmpBr_4806d6, label %block_.L_4806e1, label %block_4806dc

block_4806dc:                                     ; preds = %block_4806d6
  %loadMem_4806dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7610 = getelementptr inbounds %struct.GPR, %struct.GPR* %7609, i32 0, i32 33
  %7611 = getelementptr inbounds %struct.Reg, %struct.Reg* %7610, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %7611 to i64*
  %7612 = load i64, i64* %PC.i1033
  %7613 = add i64 %7612, 93
  %7614 = load i64, i64* %PC.i1033
  %7615 = add i64 %7614, 5
  store i64 %7615, i64* %PC.i1033
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7613, i64* %7616, align 8
  store %struct.Memory* %loadMem_4806dc, %struct.Memory** %MEMORY
  br label %block_.L_480739

block_.L_4806e1:                                  ; preds = %block_4806d6, %routine_ucomisd__xmm0___xmm1.exit1039
  %loadMem_4806e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7618 = getelementptr inbounds %struct.GPR, %struct.GPR* %7617, i32 0, i32 33
  %7619 = getelementptr inbounds %struct.Reg, %struct.Reg* %7618, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %7619 to i64*
  %7620 = load i64, i64* %PC.i1032
  %7621 = add i64 %7620, 8
  store i64 %7621, i64* %PC.i1032
  %7622 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7623, align 1
  %7624 = and i32 %7622, 255
  %7625 = call i32 @llvm.ctpop.i32(i32 %7624)
  %7626 = trunc i32 %7625 to i8
  %7627 = and i8 %7626, 1
  %7628 = xor i8 %7627, 1
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7628, i8* %7629, align 1
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7630, align 1
  %7631 = icmp eq i32 %7622, 0
  %7632 = zext i1 %7631 to i8
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7632, i8* %7633, align 1
  %7634 = lshr i32 %7622, 31
  %7635 = trunc i32 %7634 to i8
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7635, i8* %7636, align 1
  %7637 = lshr i32 %7622, 31
  %7638 = xor i32 %7634, %7637
  %7639 = add i32 %7638, %7637
  %7640 = icmp eq i32 %7639, 2
  %7641 = zext i1 %7640 to i8
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7641, i8* %7642, align 1
  store %struct.Memory* %loadMem_4806e1, %struct.Memory** %MEMORY
  %loadMem_4806e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7644 = getelementptr inbounds %struct.GPR, %struct.GPR* %7643, i32 0, i32 33
  %7645 = getelementptr inbounds %struct.Reg, %struct.Reg* %7644, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %7645 to i64*
  %7646 = load i64, i64* %PC.i1031
  %7647 = add i64 %7646, 11
  %7648 = load i64, i64* %PC.i1031
  %7649 = add i64 %7648, 6
  %7650 = load i64, i64* %PC.i1031
  %7651 = add i64 %7650, 6
  store i64 %7651, i64* %PC.i1031
  %7652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7653 = load i8, i8* %7652, align 1
  %7654 = icmp eq i8 %7653, 0
  %7655 = zext i1 %7654 to i8
  store i8 %7655, i8* %BRANCH_TAKEN, align 1
  %7656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7657 = select i1 %7654, i64 %7647, i64 %7649
  store i64 %7657, i64* %7656, align 8
  store %struct.Memory* %loadMem_4806e9, %struct.Memory** %MEMORY
  %loadBr_4806e9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4806e9 = icmp eq i8 %loadBr_4806e9, 1
  br i1 %cmpBr_4806e9, label %block_.L_4806f4, label %block_4806ef

block_4806ef:                                     ; preds = %block_.L_4806e1
  %loadMem_4806ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7659 = getelementptr inbounds %struct.GPR, %struct.GPR* %7658, i32 0, i32 33
  %7660 = getelementptr inbounds %struct.Reg, %struct.Reg* %7659, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %7660 to i64*
  %7661 = load i64, i64* %PC.i1030
  %7662 = add i64 %7661, 69
  %7663 = load i64, i64* %PC.i1030
  %7664 = add i64 %7663, 5
  store i64 %7664, i64* %PC.i1030
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7662, i64* %7665, align 8
  store %struct.Memory* %loadMem_4806ef, %struct.Memory** %MEMORY
  br label %block_.L_480734

block_.L_4806f4:                                  ; preds = %block_.L_4806e1
  %loadMem_4806f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7667 = getelementptr inbounds %struct.GPR, %struct.GPR* %7666, i32 0, i32 33
  %7668 = getelementptr inbounds %struct.Reg, %struct.Reg* %7667, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %7668 to i64*
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7670 = getelementptr inbounds %struct.GPR, %struct.GPR* %7669, i32 0, i32 11
  %7671 = getelementptr inbounds %struct.Reg, %struct.Reg* %7670, i32 0, i32 0
  %RDI.i1029 = bitcast %union.anon* %7671 to i64*
  %7672 = load i64, i64* %PC.i1028
  %7673 = add i64 %7672, 10
  store i64 %7673, i64* %PC.i1028
  store i64 ptrtoint (%G__0x5820d3_type* @G__0x5820d3 to i64), i64* %RDI.i1029, align 8
  store %struct.Memory* %loadMem_4806f4, %struct.Memory** %MEMORY
  %loadMem_4806fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7675 = getelementptr inbounds %struct.GPR, %struct.GPR* %7674, i32 0, i32 33
  %7676 = getelementptr inbounds %struct.Reg, %struct.Reg* %7675, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %7676 to i64*
  %7677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7678 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7677, i64 0, i64 0
  %YMM0.i1027 = bitcast %union.VectorReg* %7678 to %"class.std::bitset"*
  %7679 = bitcast %"class.std::bitset"* %YMM0.i1027 to i8*
  %7680 = load i64, i64* %PC.i1026
  %7681 = add i64 %7680, ptrtoint (%G_0x6298a__rip__type* @G_0x6298a__rip_ to i64)
  %7682 = load i64, i64* %PC.i1026
  %7683 = add i64 %7682, 8
  store i64 %7683, i64* %PC.i1026
  %7684 = inttoptr i64 %7681 to double*
  %7685 = load double, double* %7684
  %7686 = bitcast i8* %7679 to double*
  store double %7685, double* %7686, align 1
  %7687 = getelementptr inbounds i8, i8* %7679, i64 8
  %7688 = bitcast i8* %7687 to double*
  store double 0.000000e+00, double* %7688, align 1
  store %struct.Memory* %loadMem_4806fe, %struct.Memory** %MEMORY
  %loadMem_480706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7690 = getelementptr inbounds %struct.GPR, %struct.GPR* %7689, i32 0, i32 33
  %7691 = getelementptr inbounds %struct.Reg, %struct.Reg* %7690, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %7691 to i64*
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 1
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %RAX.i1025 = bitcast %union.anon* %7694 to i64*
  %7695 = load i64, i64* %PC.i1024
  %7696 = add i64 %7695, 10
  store i64 %7696, i64* %PC.i1024
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1025, align 8
  store %struct.Memory* %loadMem_480706, %struct.Memory** %MEMORY
  %loadMem_480710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7698 = getelementptr inbounds %struct.GPR, %struct.GPR* %7697, i32 0, i32 33
  %7699 = getelementptr inbounds %struct.Reg, %struct.Reg* %7698, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %7699 to i64*
  %7700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7701 = getelementptr inbounds %struct.GPR, %struct.GPR* %7700, i32 0, i32 9
  %7702 = getelementptr inbounds %struct.Reg, %struct.Reg* %7701, i32 0, i32 0
  %RSI.i1022 = bitcast %union.anon* %7702 to i64*
  %7703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7704 = getelementptr inbounds %struct.GPR, %struct.GPR* %7703, i32 0, i32 15
  %7705 = getelementptr inbounds %struct.Reg, %struct.Reg* %7704, i32 0, i32 0
  %RBP.i1023 = bitcast %union.anon* %7705 to i64*
  %7706 = load i64, i64* %RBP.i1023
  %7707 = sub i64 %7706, 8
  %7708 = load i64, i64* %PC.i1021
  %7709 = add i64 %7708, 3
  store i64 %7709, i64* %PC.i1021
  %7710 = inttoptr i64 %7707 to i32*
  %7711 = load i32, i32* %7710
  %7712 = zext i32 %7711 to i64
  store i64 %7712, i64* %RSI.i1022, align 8
  store %struct.Memory* %loadMem_480710, %struct.Memory** %MEMORY
  %loadMem_480713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7714 = getelementptr inbounds %struct.GPR, %struct.GPR* %7713, i32 0, i32 33
  %7715 = getelementptr inbounds %struct.Reg, %struct.Reg* %7714, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %7715 to i64*
  %7716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7717 = getelementptr inbounds %struct.GPR, %struct.GPR* %7716, i32 0, i32 5
  %7718 = getelementptr inbounds %struct.Reg, %struct.Reg* %7717, i32 0, i32 0
  %RCX.i1019 = bitcast %union.anon* %7718 to i64*
  %7719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7720 = getelementptr inbounds %struct.GPR, %struct.GPR* %7719, i32 0, i32 15
  %7721 = getelementptr inbounds %struct.Reg, %struct.Reg* %7720, i32 0, i32 0
  %RBP.i1020 = bitcast %union.anon* %7721 to i64*
  %7722 = load i64, i64* %RBP.i1020
  %7723 = sub i64 %7722, 8
  %7724 = load i64, i64* %PC.i1018
  %7725 = add i64 %7724, 4
  store i64 %7725, i64* %PC.i1018
  %7726 = inttoptr i64 %7723 to i32*
  %7727 = load i32, i32* %7726
  %7728 = sext i32 %7727 to i64
  store i64 %7728, i64* %RCX.i1019, align 8
  store %struct.Memory* %loadMem_480713, %struct.Memory** %MEMORY
  %loadMem_480717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7730 = getelementptr inbounds %struct.GPR, %struct.GPR* %7729, i32 0, i32 33
  %7731 = getelementptr inbounds %struct.Reg, %struct.Reg* %7730, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %7731 to i64*
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7733 = getelementptr inbounds %struct.GPR, %struct.GPR* %7732, i32 0, i32 5
  %7734 = getelementptr inbounds %struct.Reg, %struct.Reg* %7733, i32 0, i32 0
  %RCX.i1017 = bitcast %union.anon* %7734 to i64*
  %7735 = load i64, i64* %RCX.i1017
  %7736 = load i64, i64* %PC.i1016
  %7737 = add i64 %7736, 7
  store i64 %7737, i64* %PC.i1016
  %7738 = sext i64 %7735 to i128
  %7739 = and i128 %7738, -18446744073709551616
  %7740 = zext i64 %7735 to i128
  %7741 = or i128 %7739, %7740
  %7742 = mul i128 564, %7741
  %7743 = trunc i128 %7742 to i64
  store i64 %7743, i64* %RCX.i1017, align 8
  %7744 = sext i64 %7743 to i128
  %7745 = icmp ne i128 %7744, %7742
  %7746 = zext i1 %7745 to i8
  %7747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7746, i8* %7747, align 1
  %7748 = trunc i128 %7742 to i32
  %7749 = and i32 %7748, 255
  %7750 = call i32 @llvm.ctpop.i32(i32 %7749)
  %7751 = trunc i32 %7750 to i8
  %7752 = and i8 %7751, 1
  %7753 = xor i8 %7752, 1
  %7754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7753, i8* %7754, align 1
  %7755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7755, align 1
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7756, align 1
  %7757 = lshr i64 %7743, 63
  %7758 = trunc i64 %7757 to i8
  %7759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7758, i8* %7759, align 1
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7746, i8* %7760, align 1
  store %struct.Memory* %loadMem_480717, %struct.Memory** %MEMORY
  %loadMem_48071e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7762 = getelementptr inbounds %struct.GPR, %struct.GPR* %7761, i32 0, i32 33
  %7763 = getelementptr inbounds %struct.Reg, %struct.Reg* %7762, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %7763 to i64*
  %7764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7765 = getelementptr inbounds %struct.GPR, %struct.GPR* %7764, i32 0, i32 1
  %7766 = getelementptr inbounds %struct.Reg, %struct.Reg* %7765, i32 0, i32 0
  %RAX.i1014 = bitcast %union.anon* %7766 to i64*
  %7767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7768 = getelementptr inbounds %struct.GPR, %struct.GPR* %7767, i32 0, i32 5
  %7769 = getelementptr inbounds %struct.Reg, %struct.Reg* %7768, i32 0, i32 0
  %RCX.i1015 = bitcast %union.anon* %7769 to i64*
  %7770 = load i64, i64* %RAX.i1014
  %7771 = load i64, i64* %RCX.i1015
  %7772 = load i64, i64* %PC.i1013
  %7773 = add i64 %7772, 3
  store i64 %7773, i64* %PC.i1013
  %7774 = add i64 %7771, %7770
  store i64 %7774, i64* %RAX.i1014, align 8
  %7775 = icmp ult i64 %7774, %7770
  %7776 = icmp ult i64 %7774, %7771
  %7777 = or i1 %7775, %7776
  %7778 = zext i1 %7777 to i8
  %7779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7778, i8* %7779, align 1
  %7780 = trunc i64 %7774 to i32
  %7781 = and i32 %7780, 255
  %7782 = call i32 @llvm.ctpop.i32(i32 %7781)
  %7783 = trunc i32 %7782 to i8
  %7784 = and i8 %7783, 1
  %7785 = xor i8 %7784, 1
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7785, i8* %7786, align 1
  %7787 = xor i64 %7771, %7770
  %7788 = xor i64 %7787, %7774
  %7789 = lshr i64 %7788, 4
  %7790 = trunc i64 %7789 to i8
  %7791 = and i8 %7790, 1
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7791, i8* %7792, align 1
  %7793 = icmp eq i64 %7774, 0
  %7794 = zext i1 %7793 to i8
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7794, i8* %7795, align 1
  %7796 = lshr i64 %7774, 63
  %7797 = trunc i64 %7796 to i8
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7797, i8* %7798, align 1
  %7799 = lshr i64 %7770, 63
  %7800 = lshr i64 %7771, 63
  %7801 = xor i64 %7796, %7799
  %7802 = xor i64 %7796, %7800
  %7803 = add i64 %7801, %7802
  %7804 = icmp eq i64 %7803, 2
  %7805 = zext i1 %7804 to i8
  %7806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7805, i8* %7806, align 1
  store %struct.Memory* %loadMem_48071e, %struct.Memory** %MEMORY
  %loadMem_480721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7808 = getelementptr inbounds %struct.GPR, %struct.GPR* %7807, i32 0, i32 33
  %7809 = getelementptr inbounds %struct.Reg, %struct.Reg* %7808, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %7809 to i64*
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7811 = getelementptr inbounds %struct.GPR, %struct.GPR* %7810, i32 0, i32 1
  %7812 = getelementptr inbounds %struct.Reg, %struct.Reg* %7811, i32 0, i32 0
  %RAX.i1011 = bitcast %union.anon* %7812 to i64*
  %7813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7814 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7813, i64 0, i64 1
  %YMM1.i1012 = bitcast %union.VectorReg* %7814 to %"class.std::bitset"*
  %7815 = bitcast %"class.std::bitset"* %YMM1.i1012 to i8*
  %7816 = load i64, i64* %RAX.i1011
  %7817 = add i64 %7816, 48
  %7818 = load i64, i64* %PC.i1010
  %7819 = add i64 %7818, 5
  store i64 %7819, i64* %PC.i1010
  %7820 = inttoptr i64 %7817 to float*
  %7821 = load float, float* %7820
  %7822 = fpext float %7821 to double
  %7823 = bitcast i8* %7815 to double*
  store double %7822, double* %7823, align 1
  store %struct.Memory* %loadMem_480721, %struct.Memory** %MEMORY
  %loadMem_480726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7825 = getelementptr inbounds %struct.GPR, %struct.GPR* %7824, i32 0, i32 33
  %7826 = getelementptr inbounds %struct.Reg, %struct.Reg* %7825, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %7826 to i64*
  %7827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7828 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7827, i64 0, i64 0
  %YMM0.i1008 = bitcast %union.VectorReg* %7828 to %"class.std::bitset"*
  %7829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7830 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7829, i64 0, i64 1
  %XMM1.i1009 = bitcast %union.VectorReg* %7830 to %union.vec128_t*
  %7831 = bitcast %"class.std::bitset"* %YMM0.i1008 to i8*
  %7832 = bitcast %"class.std::bitset"* %YMM0.i1008 to i8*
  %7833 = bitcast %union.vec128_t* %XMM1.i1009 to i8*
  %7834 = load i64, i64* %PC.i1007
  %7835 = add i64 %7834, 4
  store i64 %7835, i64* %PC.i1007
  %7836 = bitcast i8* %7832 to double*
  %7837 = load double, double* %7836, align 1
  %7838 = getelementptr inbounds i8, i8* %7832, i64 8
  %7839 = bitcast i8* %7838 to i64*
  %7840 = load i64, i64* %7839, align 1
  %7841 = bitcast i8* %7833 to double*
  %7842 = load double, double* %7841, align 1
  %7843 = fmul double %7837, %7842
  %7844 = bitcast i8* %7831 to double*
  store double %7843, double* %7844, align 1
  %7845 = getelementptr inbounds i8, i8* %7831, i64 8
  %7846 = bitcast i8* %7845 to i64*
  store i64 %7840, i64* %7846, align 1
  store %struct.Memory* %loadMem_480726, %struct.Memory** %MEMORY
  %loadMem_48072a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7848 = getelementptr inbounds %struct.GPR, %struct.GPR* %7847, i32 0, i32 33
  %7849 = getelementptr inbounds %struct.Reg, %struct.Reg* %7848, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %7849 to i64*
  %7850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7851 = getelementptr inbounds %struct.GPR, %struct.GPR* %7850, i32 0, i32 1
  %7852 = getelementptr inbounds %struct.Reg, %struct.Reg* %7851, i32 0, i32 0
  %7853 = bitcast %union.anon* %7852 to %struct.anon.2*
  %AL.i1006 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7853, i32 0, i32 0
  %7854 = load i64, i64* %PC.i1005
  %7855 = add i64 %7854, 2
  store i64 %7855, i64* %PC.i1005
  store i8 1, i8* %AL.i1006, align 1
  store %struct.Memory* %loadMem_48072a, %struct.Memory** %MEMORY
  %loadMem1_48072c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7857 = getelementptr inbounds %struct.GPR, %struct.GPR* %7856, i32 0, i32 33
  %7858 = getelementptr inbounds %struct.Reg, %struct.Reg* %7857, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %7858 to i64*
  %7859 = load i64, i64* %PC.i1004
  %7860 = add i64 %7859, -190844
  %7861 = load i64, i64* %PC.i1004
  %7862 = add i64 %7861, 5
  %7863 = load i64, i64* %PC.i1004
  %7864 = add i64 %7863, 5
  store i64 %7864, i64* %PC.i1004
  %7865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7866 = load i64, i64* %7865, align 8
  %7867 = add i64 %7866, -8
  %7868 = inttoptr i64 %7867 to i64*
  store i64 %7862, i64* %7868
  store i64 %7867, i64* %7865, align 8
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7860, i64* %7869, align 8
  store %struct.Memory* %loadMem1_48072c, %struct.Memory** %MEMORY
  %loadMem2_48072c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48072c = load i64, i64* %3
  %call2_48072c = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_48072c, %struct.Memory* %loadMem2_48072c)
  store %struct.Memory* %call2_48072c, %struct.Memory** %MEMORY
  %loadMem_480731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7871 = getelementptr inbounds %struct.GPR, %struct.GPR* %7870, i32 0, i32 33
  %7872 = getelementptr inbounds %struct.Reg, %struct.Reg* %7871, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %7872 to i64*
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7874 = getelementptr inbounds %struct.GPR, %struct.GPR* %7873, i32 0, i32 1
  %7875 = getelementptr inbounds %struct.Reg, %struct.Reg* %7874, i32 0, i32 0
  %EAX.i1002 = bitcast %union.anon* %7875 to i32*
  %7876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7877 = getelementptr inbounds %struct.GPR, %struct.GPR* %7876, i32 0, i32 15
  %7878 = getelementptr inbounds %struct.Reg, %struct.Reg* %7877, i32 0, i32 0
  %RBP.i1003 = bitcast %union.anon* %7878 to i64*
  %7879 = load i64, i64* %RBP.i1003
  %7880 = sub i64 %7879, 120
  %7881 = load i32, i32* %EAX.i1002
  %7882 = zext i32 %7881 to i64
  %7883 = load i64, i64* %PC.i1001
  %7884 = add i64 %7883, 3
  store i64 %7884, i64* %PC.i1001
  %7885 = inttoptr i64 %7880 to i32*
  store i32 %7881, i32* %7885
  store %struct.Memory* %loadMem_480731, %struct.Memory** %MEMORY
  br label %block_.L_480734

block_.L_480734:                                  ; preds = %block_.L_4806f4, %block_4806ef
  %loadMem_480734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7887 = getelementptr inbounds %struct.GPR, %struct.GPR* %7886, i32 0, i32 33
  %7888 = getelementptr inbounds %struct.Reg, %struct.Reg* %7887, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %7888 to i64*
  %7889 = load i64, i64* %PC.i1000
  %7890 = add i64 %7889, 5
  %7891 = load i64, i64* %PC.i1000
  %7892 = add i64 %7891, 5
  store i64 %7892, i64* %PC.i1000
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7890, i64* %7893, align 8
  store %struct.Memory* %loadMem_480734, %struct.Memory** %MEMORY
  br label %block_.L_480739

block_.L_480739:                                  ; preds = %block_.L_480734, %block_4806dc
  %loadMem_480739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7895 = getelementptr inbounds %struct.GPR, %struct.GPR* %7894, i32 0, i32 33
  %7896 = getelementptr inbounds %struct.Reg, %struct.Reg* %7895, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %7896 to i64*
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7898 = getelementptr inbounds %struct.GPR, %struct.GPR* %7897, i32 0, i32 1
  %7899 = getelementptr inbounds %struct.Reg, %struct.Reg* %7898, i32 0, i32 0
  %RAX.i999 = bitcast %union.anon* %7899 to i64*
  %7900 = load i64, i64* %PC.i998
  %7901 = add i64 %7900, 10
  store i64 %7901, i64* %PC.i998
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i999, align 8
  store %struct.Memory* %loadMem_480739, %struct.Memory** %MEMORY
  %loadMem_480743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 33
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %7904 to i64*
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7906 = getelementptr inbounds %struct.GPR, %struct.GPR* %7905, i32 0, i32 5
  %7907 = getelementptr inbounds %struct.Reg, %struct.Reg* %7906, i32 0, i32 0
  %RCX.i996 = bitcast %union.anon* %7907 to i64*
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7909 = getelementptr inbounds %struct.GPR, %struct.GPR* %7908, i32 0, i32 15
  %7910 = getelementptr inbounds %struct.Reg, %struct.Reg* %7909, i32 0, i32 0
  %RBP.i997 = bitcast %union.anon* %7910 to i64*
  %7911 = load i64, i64* %RBP.i997
  %7912 = sub i64 %7911, 8
  %7913 = load i64, i64* %PC.i995
  %7914 = add i64 %7913, 4
  store i64 %7914, i64* %PC.i995
  %7915 = inttoptr i64 %7912 to i32*
  %7916 = load i32, i32* %7915
  %7917 = sext i32 %7916 to i64
  store i64 %7917, i64* %RCX.i996, align 8
  store %struct.Memory* %loadMem_480743, %struct.Memory** %MEMORY
  %loadMem_480747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 33
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %7920 to i64*
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7922 = getelementptr inbounds %struct.GPR, %struct.GPR* %7921, i32 0, i32 5
  %7923 = getelementptr inbounds %struct.Reg, %struct.Reg* %7922, i32 0, i32 0
  %RCX.i994 = bitcast %union.anon* %7923 to i64*
  %7924 = load i64, i64* %RCX.i994
  %7925 = load i64, i64* %PC.i993
  %7926 = add i64 %7925, 7
  store i64 %7926, i64* %PC.i993
  %7927 = sext i64 %7924 to i128
  %7928 = and i128 %7927, -18446744073709551616
  %7929 = zext i64 %7924 to i128
  %7930 = or i128 %7928, %7929
  %7931 = mul i128 564, %7930
  %7932 = trunc i128 %7931 to i64
  store i64 %7932, i64* %RCX.i994, align 8
  %7933 = sext i64 %7932 to i128
  %7934 = icmp ne i128 %7933, %7931
  %7935 = zext i1 %7934 to i8
  %7936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7935, i8* %7936, align 1
  %7937 = trunc i128 %7931 to i32
  %7938 = and i32 %7937, 255
  %7939 = call i32 @llvm.ctpop.i32(i32 %7938)
  %7940 = trunc i32 %7939 to i8
  %7941 = and i8 %7940, 1
  %7942 = xor i8 %7941, 1
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7942, i8* %7943, align 1
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7944, align 1
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7945, align 1
  %7946 = lshr i64 %7932, 63
  %7947 = trunc i64 %7946 to i8
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7947, i8* %7948, align 1
  %7949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7935, i8* %7949, align 1
  store %struct.Memory* %loadMem_480747, %struct.Memory** %MEMORY
  %loadMem_48074e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7951 = getelementptr inbounds %struct.GPR, %struct.GPR* %7950, i32 0, i32 33
  %7952 = getelementptr inbounds %struct.Reg, %struct.Reg* %7951, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %7952 to i64*
  %7953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7954 = getelementptr inbounds %struct.GPR, %struct.GPR* %7953, i32 0, i32 1
  %7955 = getelementptr inbounds %struct.Reg, %struct.Reg* %7954, i32 0, i32 0
  %RAX.i991 = bitcast %union.anon* %7955 to i64*
  %7956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7957 = getelementptr inbounds %struct.GPR, %struct.GPR* %7956, i32 0, i32 7
  %7958 = getelementptr inbounds %struct.Reg, %struct.Reg* %7957, i32 0, i32 0
  %RDX.i992 = bitcast %union.anon* %7958 to i64*
  %7959 = load i64, i64* %RAX.i991
  %7960 = load i64, i64* %PC.i990
  %7961 = add i64 %7960, 3
  store i64 %7961, i64* %PC.i990
  store i64 %7959, i64* %RDX.i992, align 8
  store %struct.Memory* %loadMem_48074e, %struct.Memory** %MEMORY
  %loadMem_480751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7963 = getelementptr inbounds %struct.GPR, %struct.GPR* %7962, i32 0, i32 33
  %7964 = getelementptr inbounds %struct.Reg, %struct.Reg* %7963, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %7964 to i64*
  %7965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7966 = getelementptr inbounds %struct.GPR, %struct.GPR* %7965, i32 0, i32 5
  %7967 = getelementptr inbounds %struct.Reg, %struct.Reg* %7966, i32 0, i32 0
  %RCX.i988 = bitcast %union.anon* %7967 to i64*
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7969 = getelementptr inbounds %struct.GPR, %struct.GPR* %7968, i32 0, i32 7
  %7970 = getelementptr inbounds %struct.Reg, %struct.Reg* %7969, i32 0, i32 0
  %RDX.i989 = bitcast %union.anon* %7970 to i64*
  %7971 = load i64, i64* %RDX.i989
  %7972 = load i64, i64* %RCX.i988
  %7973 = load i64, i64* %PC.i987
  %7974 = add i64 %7973, 3
  store i64 %7974, i64* %PC.i987
  %7975 = add i64 %7972, %7971
  store i64 %7975, i64* %RDX.i989, align 8
  %7976 = icmp ult i64 %7975, %7971
  %7977 = icmp ult i64 %7975, %7972
  %7978 = or i1 %7976, %7977
  %7979 = zext i1 %7978 to i8
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7979, i8* %7980, align 1
  %7981 = trunc i64 %7975 to i32
  %7982 = and i32 %7981, 255
  %7983 = call i32 @llvm.ctpop.i32(i32 %7982)
  %7984 = trunc i32 %7983 to i8
  %7985 = and i8 %7984, 1
  %7986 = xor i8 %7985, 1
  %7987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7986, i8* %7987, align 1
  %7988 = xor i64 %7972, %7971
  %7989 = xor i64 %7988, %7975
  %7990 = lshr i64 %7989, 4
  %7991 = trunc i64 %7990 to i8
  %7992 = and i8 %7991, 1
  %7993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7992, i8* %7993, align 1
  %7994 = icmp eq i64 %7975, 0
  %7995 = zext i1 %7994 to i8
  %7996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7995, i8* %7996, align 1
  %7997 = lshr i64 %7975, 63
  %7998 = trunc i64 %7997 to i8
  %7999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7998, i8* %7999, align 1
  %8000 = lshr i64 %7971, 63
  %8001 = lshr i64 %7972, 63
  %8002 = xor i64 %7997, %8000
  %8003 = xor i64 %7997, %8001
  %8004 = add i64 %8002, %8003
  %8005 = icmp eq i64 %8004, 2
  %8006 = zext i1 %8005 to i8
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8006, i8* %8007, align 1
  store %struct.Memory* %loadMem_480751, %struct.Memory** %MEMORY
  %loadMem_480754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8009 = getelementptr inbounds %struct.GPR, %struct.GPR* %8008, i32 0, i32 33
  %8010 = getelementptr inbounds %struct.Reg, %struct.Reg* %8009, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %8010 to i64*
  %8011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8012 = getelementptr inbounds %struct.GPR, %struct.GPR* %8011, i32 0, i32 7
  %8013 = getelementptr inbounds %struct.Reg, %struct.Reg* %8012, i32 0, i32 0
  %RDX.i985 = bitcast %union.anon* %8013 to i64*
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8015 = getelementptr inbounds %struct.GPR, %struct.GPR* %8014, i32 0, i32 9
  %8016 = getelementptr inbounds %struct.Reg, %struct.Reg* %8015, i32 0, i32 0
  %RSI.i986 = bitcast %union.anon* %8016 to i64*
  %8017 = load i64, i64* %RDX.i985
  %8018 = add i64 %8017, 28
  %8019 = load i64, i64* %PC.i984
  %8020 = add i64 %8019, 3
  store i64 %8020, i64* %PC.i984
  %8021 = inttoptr i64 %8018 to i32*
  %8022 = load i32, i32* %8021
  %8023 = zext i32 %8022 to i64
  store i64 %8023, i64* %RSI.i986, align 8
  store %struct.Memory* %loadMem_480754, %struct.Memory** %MEMORY
  %loadMem_480757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8025 = getelementptr inbounds %struct.GPR, %struct.GPR* %8024, i32 0, i32 33
  %8026 = getelementptr inbounds %struct.Reg, %struct.Reg* %8025, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %8026 to i64*
  %8027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8028 = getelementptr inbounds %struct.GPR, %struct.GPR* %8027, i32 0, i32 5
  %8029 = getelementptr inbounds %struct.Reg, %struct.Reg* %8028, i32 0, i32 0
  %RCX.i982 = bitcast %union.anon* %8029 to i64*
  %8030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8031 = getelementptr inbounds %struct.GPR, %struct.GPR* %8030, i32 0, i32 15
  %8032 = getelementptr inbounds %struct.Reg, %struct.Reg* %8031, i32 0, i32 0
  %RBP.i983 = bitcast %union.anon* %8032 to i64*
  %8033 = load i64, i64* %RBP.i983
  %8034 = sub i64 %8033, 8
  %8035 = load i64, i64* %PC.i981
  %8036 = add i64 %8035, 4
  store i64 %8036, i64* %PC.i981
  %8037 = inttoptr i64 %8034 to i32*
  %8038 = load i32, i32* %8037
  %8039 = sext i32 %8038 to i64
  store i64 %8039, i64* %RCX.i982, align 8
  store %struct.Memory* %loadMem_480757, %struct.Memory** %MEMORY
  %loadMem_48075b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8041 = getelementptr inbounds %struct.GPR, %struct.GPR* %8040, i32 0, i32 33
  %8042 = getelementptr inbounds %struct.Reg, %struct.Reg* %8041, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %8042 to i64*
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8044 = getelementptr inbounds %struct.GPR, %struct.GPR* %8043, i32 0, i32 5
  %8045 = getelementptr inbounds %struct.Reg, %struct.Reg* %8044, i32 0, i32 0
  %RCX.i980 = bitcast %union.anon* %8045 to i64*
  %8046 = load i64, i64* %RCX.i980
  %8047 = load i64, i64* %PC.i979
  %8048 = add i64 %8047, 7
  store i64 %8048, i64* %PC.i979
  %8049 = sext i64 %8046 to i128
  %8050 = and i128 %8049, -18446744073709551616
  %8051 = zext i64 %8046 to i128
  %8052 = or i128 %8050, %8051
  %8053 = mul i128 564, %8052
  %8054 = trunc i128 %8053 to i64
  store i64 %8054, i64* %RCX.i980, align 8
  %8055 = sext i64 %8054 to i128
  %8056 = icmp ne i128 %8055, %8053
  %8057 = zext i1 %8056 to i8
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8057, i8* %8058, align 1
  %8059 = trunc i128 %8053 to i32
  %8060 = and i32 %8059, 255
  %8061 = call i32 @llvm.ctpop.i32(i32 %8060)
  %8062 = trunc i32 %8061 to i8
  %8063 = and i8 %8062, 1
  %8064 = xor i8 %8063, 1
  %8065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8064, i8* %8065, align 1
  %8066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8066, align 1
  %8067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8067, align 1
  %8068 = lshr i64 %8054, 63
  %8069 = trunc i64 %8068 to i8
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8069, i8* %8070, align 1
  %8071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8057, i8* %8071, align 1
  store %struct.Memory* %loadMem_48075b, %struct.Memory** %MEMORY
  %loadMem_480762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8073 = getelementptr inbounds %struct.GPR, %struct.GPR* %8072, i32 0, i32 33
  %8074 = getelementptr inbounds %struct.Reg, %struct.Reg* %8073, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %8074 to i64*
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8076 = getelementptr inbounds %struct.GPR, %struct.GPR* %8075, i32 0, i32 1
  %8077 = getelementptr inbounds %struct.Reg, %struct.Reg* %8076, i32 0, i32 0
  %RAX.i977 = bitcast %union.anon* %8077 to i64*
  %8078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8079 = getelementptr inbounds %struct.GPR, %struct.GPR* %8078, i32 0, i32 5
  %8080 = getelementptr inbounds %struct.Reg, %struct.Reg* %8079, i32 0, i32 0
  %RCX.i978 = bitcast %union.anon* %8080 to i64*
  %8081 = load i64, i64* %RAX.i977
  %8082 = load i64, i64* %RCX.i978
  %8083 = load i64, i64* %PC.i976
  %8084 = add i64 %8083, 3
  store i64 %8084, i64* %PC.i976
  %8085 = add i64 %8082, %8081
  store i64 %8085, i64* %RAX.i977, align 8
  %8086 = icmp ult i64 %8085, %8081
  %8087 = icmp ult i64 %8085, %8082
  %8088 = or i1 %8086, %8087
  %8089 = zext i1 %8088 to i8
  %8090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8089, i8* %8090, align 1
  %8091 = trunc i64 %8085 to i32
  %8092 = and i32 %8091, 255
  %8093 = call i32 @llvm.ctpop.i32(i32 %8092)
  %8094 = trunc i32 %8093 to i8
  %8095 = and i8 %8094, 1
  %8096 = xor i8 %8095, 1
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8096, i8* %8097, align 1
  %8098 = xor i64 %8082, %8081
  %8099 = xor i64 %8098, %8085
  %8100 = lshr i64 %8099, 4
  %8101 = trunc i64 %8100 to i8
  %8102 = and i8 %8101, 1
  %8103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8102, i8* %8103, align 1
  %8104 = icmp eq i64 %8085, 0
  %8105 = zext i1 %8104 to i8
  %8106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8105, i8* %8106, align 1
  %8107 = lshr i64 %8085, 63
  %8108 = trunc i64 %8107 to i8
  %8109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8108, i8* %8109, align 1
  %8110 = lshr i64 %8081, 63
  %8111 = lshr i64 %8082, 63
  %8112 = xor i64 %8107, %8110
  %8113 = xor i64 %8107, %8111
  %8114 = add i64 %8112, %8113
  %8115 = icmp eq i64 %8114, 2
  %8116 = zext i1 %8115 to i8
  %8117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8116, i8* %8117, align 1
  store %struct.Memory* %loadMem_480762, %struct.Memory** %MEMORY
  %loadMem_480765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8119 = getelementptr inbounds %struct.GPR, %struct.GPR* %8118, i32 0, i32 33
  %8120 = getelementptr inbounds %struct.Reg, %struct.Reg* %8119, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %8120 to i64*
  %8121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8122 = getelementptr inbounds %struct.GPR, %struct.GPR* %8121, i32 0, i32 1
  %8123 = getelementptr inbounds %struct.Reg, %struct.Reg* %8122, i32 0, i32 0
  %RAX.i974 = bitcast %union.anon* %8123 to i64*
  %8124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8125 = getelementptr inbounds %struct.GPR, %struct.GPR* %8124, i32 0, i32 9
  %8126 = getelementptr inbounds %struct.Reg, %struct.Reg* %8125, i32 0, i32 0
  %RSI.i975 = bitcast %union.anon* %8126 to i64*
  %8127 = load i64, i64* %RSI.i975
  %8128 = load i64, i64* %RAX.i974
  %8129 = add i64 %8128, 32
  %8130 = load i64, i64* %PC.i973
  %8131 = add i64 %8130, 3
  store i64 %8131, i64* %PC.i973
  %8132 = trunc i64 %8127 to i32
  %8133 = inttoptr i64 %8129 to i32*
  %8134 = load i32, i32* %8133
  %8135 = add i32 %8134, %8132
  %8136 = zext i32 %8135 to i64
  store i64 %8136, i64* %RSI.i975, align 8
  %8137 = icmp ult i32 %8135, %8132
  %8138 = icmp ult i32 %8135, %8134
  %8139 = or i1 %8137, %8138
  %8140 = zext i1 %8139 to i8
  %8141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8140, i8* %8141, align 1
  %8142 = and i32 %8135, 255
  %8143 = call i32 @llvm.ctpop.i32(i32 %8142)
  %8144 = trunc i32 %8143 to i8
  %8145 = and i8 %8144, 1
  %8146 = xor i8 %8145, 1
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8146, i8* %8147, align 1
  %8148 = xor i32 %8134, %8132
  %8149 = xor i32 %8148, %8135
  %8150 = lshr i32 %8149, 4
  %8151 = trunc i32 %8150 to i8
  %8152 = and i8 %8151, 1
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8152, i8* %8153, align 1
  %8154 = icmp eq i32 %8135, 0
  %8155 = zext i1 %8154 to i8
  %8156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8155, i8* %8156, align 1
  %8157 = lshr i32 %8135, 31
  %8158 = trunc i32 %8157 to i8
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8158, i8* %8159, align 1
  %8160 = lshr i32 %8132, 31
  %8161 = lshr i32 %8134, 31
  %8162 = xor i32 %8157, %8160
  %8163 = xor i32 %8157, %8161
  %8164 = add i32 %8162, %8163
  %8165 = icmp eq i32 %8164, 2
  %8166 = zext i1 %8165 to i8
  %8167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8166, i8* %8167, align 1
  store %struct.Memory* %loadMem_480765, %struct.Memory** %MEMORY
  %loadMem_480768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8169 = getelementptr inbounds %struct.GPR, %struct.GPR* %8168, i32 0, i32 33
  %8170 = getelementptr inbounds %struct.Reg, %struct.Reg* %8169, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %8170 to i64*
  %8171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8172 = getelementptr inbounds %struct.GPR, %struct.GPR* %8171, i32 0, i32 9
  %8173 = getelementptr inbounds %struct.Reg, %struct.Reg* %8172, i32 0, i32 0
  %ESI.i972 = bitcast %union.anon* %8173 to i32*
  %8174 = load i32, i32* %ESI.i972
  %8175 = zext i32 %8174 to i64
  %8176 = load i64, i64* %PC.i971
  %8177 = add i64 %8176, 3
  store i64 %8177, i64* %PC.i971
  %8178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8178, align 1
  %8179 = and i32 %8174, 255
  %8180 = call i32 @llvm.ctpop.i32(i32 %8179)
  %8181 = trunc i32 %8180 to i8
  %8182 = and i8 %8181, 1
  %8183 = xor i8 %8182, 1
  %8184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8183, i8* %8184, align 1
  %8185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8185, align 1
  %8186 = icmp eq i32 %8174, 0
  %8187 = zext i1 %8186 to i8
  %8188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8187, i8* %8188, align 1
  %8189 = lshr i32 %8174, 31
  %8190 = trunc i32 %8189 to i8
  %8191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8190, i8* %8191, align 1
  %8192 = lshr i32 %8174, 31
  %8193 = xor i32 %8189, %8192
  %8194 = add i32 %8193, %8192
  %8195 = icmp eq i32 %8194, 2
  %8196 = zext i1 %8195 to i8
  %8197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8196, i8* %8197, align 1
  store %struct.Memory* %loadMem_480768, %struct.Memory** %MEMORY
  %loadMem_48076b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8199 = getelementptr inbounds %struct.GPR, %struct.GPR* %8198, i32 0, i32 33
  %8200 = getelementptr inbounds %struct.Reg, %struct.Reg* %8199, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %8200 to i64*
  %8201 = load i64, i64* %PC.i970
  %8202 = add i64 %8201, 221
  %8203 = load i64, i64* %PC.i970
  %8204 = add i64 %8203, 6
  %8205 = load i64, i64* %PC.i970
  %8206 = add i64 %8205, 6
  store i64 %8206, i64* %PC.i970
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8208 = load i8, i8* %8207, align 1
  %8209 = icmp ne i8 %8208, 0
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8211 = load i8, i8* %8210, align 1
  %8212 = icmp ne i8 %8211, 0
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8214 = load i8, i8* %8213, align 1
  %8215 = icmp ne i8 %8214, 0
  %8216 = xor i1 %8212, %8215
  %8217 = or i1 %8209, %8216
  %8218 = zext i1 %8217 to i8
  store i8 %8218, i8* %BRANCH_TAKEN, align 1
  %8219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8220 = select i1 %8217, i64 %8202, i64 %8204
  store i64 %8220, i64* %8219, align 8
  store %struct.Memory* %loadMem_48076b, %struct.Memory** %MEMORY
  %loadBr_48076b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48076b = icmp eq i8 %loadBr_48076b, 1
  br i1 %cmpBr_48076b, label %block_.L_480848, label %block_480771

block_480771:                                     ; preds = %block_.L_480739
  %loadMem_480771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8222 = getelementptr inbounds %struct.GPR, %struct.GPR* %8221, i32 0, i32 33
  %8223 = getelementptr inbounds %struct.Reg, %struct.Reg* %8222, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %8223 to i64*
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8225 = getelementptr inbounds %struct.GPR, %struct.GPR* %8224, i32 0, i32 15
  %8226 = getelementptr inbounds %struct.Reg, %struct.Reg* %8225, i32 0, i32 0
  %RBP.i968 = bitcast %union.anon* %8226 to i64*
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8228 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8227, i64 0, i64 0
  %YMM0.i969 = bitcast %union.VectorReg* %8228 to %"class.std::bitset"*
  %8229 = bitcast %"class.std::bitset"* %YMM0.i969 to i8*
  %8230 = load i64, i64* %RBP.i968
  %8231 = sub i64 %8230, 24
  %8232 = load i64, i64* %PC.i967
  %8233 = add i64 %8232, 5
  store i64 %8233, i64* %PC.i967
  %8234 = inttoptr i64 %8231 to float*
  %8235 = load float, float* %8234
  %8236 = bitcast i8* %8229 to float*
  store float %8235, float* %8236, align 1
  %8237 = getelementptr inbounds i8, i8* %8229, i64 4
  %8238 = bitcast i8* %8237 to float*
  store float 0.000000e+00, float* %8238, align 1
  %8239 = getelementptr inbounds i8, i8* %8229, i64 8
  %8240 = bitcast i8* %8239 to float*
  store float 0.000000e+00, float* %8240, align 1
  %8241 = getelementptr inbounds i8, i8* %8229, i64 12
  %8242 = bitcast i8* %8241 to float*
  store float 0.000000e+00, float* %8242, align 1
  store %struct.Memory* %loadMem_480771, %struct.Memory** %MEMORY
  %loadMem_480776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8244 = getelementptr inbounds %struct.GPR, %struct.GPR* %8243, i32 0, i32 33
  %8245 = getelementptr inbounds %struct.Reg, %struct.Reg* %8244, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %8245 to i64*
  %8246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8247 = getelementptr inbounds %struct.GPR, %struct.GPR* %8246, i32 0, i32 15
  %8248 = getelementptr inbounds %struct.Reg, %struct.Reg* %8247, i32 0, i32 0
  %RBP.i965 = bitcast %union.anon* %8248 to i64*
  %8249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8250 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8249, i64 0, i64 0
  %XMM0.i966 = bitcast %union.VectorReg* %8250 to %union.vec128_t*
  %8251 = load i64, i64* %RBP.i965
  %8252 = sub i64 %8251, 52
  %8253 = bitcast %union.vec128_t* %XMM0.i966 to i8*
  %8254 = load i64, i64* %PC.i964
  %8255 = add i64 %8254, 5
  store i64 %8255, i64* %PC.i964
  %8256 = bitcast i8* %8253 to <2 x float>*
  %8257 = load <2 x float>, <2 x float>* %8256, align 1
  %8258 = extractelement <2 x float> %8257, i32 0
  %8259 = inttoptr i64 %8252 to float*
  store float %8258, float* %8259
  store %struct.Memory* %loadMem_480776, %struct.Memory** %MEMORY
  %loadMem_48077b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8261 = getelementptr inbounds %struct.GPR, %struct.GPR* %8260, i32 0, i32 33
  %8262 = getelementptr inbounds %struct.Reg, %struct.Reg* %8261, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %8262 to i64*
  %8263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8264 = getelementptr inbounds %struct.GPR, %struct.GPR* %8263, i32 0, i32 15
  %8265 = getelementptr inbounds %struct.Reg, %struct.Reg* %8264, i32 0, i32 0
  %RBP.i962 = bitcast %union.anon* %8265 to i64*
  %8266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8266, i64 0, i64 0
  %YMM0.i963 = bitcast %union.VectorReg* %8267 to %"class.std::bitset"*
  %8268 = bitcast %"class.std::bitset"* %YMM0.i963 to i8*
  %8269 = load i64, i64* %RBP.i962
  %8270 = sub i64 %8269, 28
  %8271 = load i64, i64* %PC.i961
  %8272 = add i64 %8271, 5
  store i64 %8272, i64* %PC.i961
  %8273 = inttoptr i64 %8270 to float*
  %8274 = load float, float* %8273
  %8275 = bitcast i8* %8268 to float*
  store float %8274, float* %8275, align 1
  %8276 = getelementptr inbounds i8, i8* %8268, i64 4
  %8277 = bitcast i8* %8276 to float*
  store float 0.000000e+00, float* %8277, align 1
  %8278 = getelementptr inbounds i8, i8* %8268, i64 8
  %8279 = bitcast i8* %8278 to float*
  store float 0.000000e+00, float* %8279, align 1
  %8280 = getelementptr inbounds i8, i8* %8268, i64 12
  %8281 = bitcast i8* %8280 to float*
  store float 0.000000e+00, float* %8281, align 1
  store %struct.Memory* %loadMem_48077b, %struct.Memory** %MEMORY
  %loadMem_480780 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8283 = getelementptr inbounds %struct.GPR, %struct.GPR* %8282, i32 0, i32 33
  %8284 = getelementptr inbounds %struct.Reg, %struct.Reg* %8283, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %8284 to i64*
  %8285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8286 = getelementptr inbounds %struct.GPR, %struct.GPR* %8285, i32 0, i32 15
  %8287 = getelementptr inbounds %struct.Reg, %struct.Reg* %8286, i32 0, i32 0
  %RBP.i959 = bitcast %union.anon* %8287 to i64*
  %8288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8288, i64 0, i64 0
  %YMM0.i960 = bitcast %union.VectorReg* %8289 to %"class.std::bitset"*
  %8290 = bitcast %"class.std::bitset"* %YMM0.i960 to i8*
  %8291 = bitcast %"class.std::bitset"* %YMM0.i960 to i8*
  %8292 = load i64, i64* %RBP.i959
  %8293 = sub i64 %8292, 24
  %8294 = load i64, i64* %PC.i958
  %8295 = add i64 %8294, 5
  store i64 %8295, i64* %PC.i958
  %8296 = bitcast i8* %8291 to <2 x float>*
  %8297 = load <2 x float>, <2 x float>* %8296, align 1
  %8298 = getelementptr inbounds i8, i8* %8291, i64 8
  %8299 = bitcast i8* %8298 to <2 x i32>*
  %8300 = load <2 x i32>, <2 x i32>* %8299, align 1
  %8301 = inttoptr i64 %8293 to float*
  %8302 = load float, float* %8301
  %8303 = extractelement <2 x float> %8297, i32 0
  %8304 = fmul float %8303, %8302
  %8305 = bitcast i8* %8290 to float*
  store float %8304, float* %8305, align 1
  %8306 = bitcast <2 x float> %8297 to <2 x i32>
  %8307 = extractelement <2 x i32> %8306, i32 1
  %8308 = getelementptr inbounds i8, i8* %8290, i64 4
  %8309 = bitcast i8* %8308 to i32*
  store i32 %8307, i32* %8309, align 1
  %8310 = extractelement <2 x i32> %8300, i32 0
  %8311 = getelementptr inbounds i8, i8* %8290, i64 8
  %8312 = bitcast i8* %8311 to i32*
  store i32 %8310, i32* %8312, align 1
  %8313 = extractelement <2 x i32> %8300, i32 1
  %8314 = getelementptr inbounds i8, i8* %8290, i64 12
  %8315 = bitcast i8* %8314 to i32*
  store i32 %8313, i32* %8315, align 1
  store %struct.Memory* %loadMem_480780, %struct.Memory** %MEMORY
  %loadMem_480785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8317 = getelementptr inbounds %struct.GPR, %struct.GPR* %8316, i32 0, i32 33
  %8318 = getelementptr inbounds %struct.Reg, %struct.Reg* %8317, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %8318 to i64*
  %8319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8320 = getelementptr inbounds %struct.GPR, %struct.GPR* %8319, i32 0, i32 15
  %8321 = getelementptr inbounds %struct.Reg, %struct.Reg* %8320, i32 0, i32 0
  %RBP.i956 = bitcast %union.anon* %8321 to i64*
  %8322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8323 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8322, i64 0, i64 0
  %XMM0.i957 = bitcast %union.VectorReg* %8323 to %union.vec128_t*
  %8324 = load i64, i64* %RBP.i956
  %8325 = sub i64 %8324, 24
  %8326 = bitcast %union.vec128_t* %XMM0.i957 to i8*
  %8327 = load i64, i64* %PC.i955
  %8328 = add i64 %8327, 5
  store i64 %8328, i64* %PC.i955
  %8329 = bitcast i8* %8326 to <2 x float>*
  %8330 = load <2 x float>, <2 x float>* %8329, align 1
  %8331 = extractelement <2 x float> %8330, i32 0
  %8332 = inttoptr i64 %8325 to float*
  store float %8331, float* %8332
  store %struct.Memory* %loadMem_480785, %struct.Memory** %MEMORY
  %loadMem_48078a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8334 = getelementptr inbounds %struct.GPR, %struct.GPR* %8333, i32 0, i32 33
  %8335 = getelementptr inbounds %struct.Reg, %struct.Reg* %8334, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %8335 to i64*
  %8336 = load i64, i64* %PC.i954
  %8337 = add i64 %8336, 8
  store i64 %8337, i64* %PC.i954
  %8338 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8339, align 1
  %8340 = and i32 %8338, 255
  %8341 = call i32 @llvm.ctpop.i32(i32 %8340)
  %8342 = trunc i32 %8341 to i8
  %8343 = and i8 %8342, 1
  %8344 = xor i8 %8343, 1
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8344, i8* %8345, align 1
  %8346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8346, align 1
  %8347 = icmp eq i32 %8338, 0
  %8348 = zext i1 %8347 to i8
  %8349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8348, i8* %8349, align 1
  %8350 = lshr i32 %8338, 31
  %8351 = trunc i32 %8350 to i8
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8351, i8* %8352, align 1
  %8353 = lshr i32 %8338, 31
  %8354 = xor i32 %8350, %8353
  %8355 = add i32 %8354, %8353
  %8356 = icmp eq i32 %8355, 2
  %8357 = zext i1 %8356 to i8
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8357, i8* %8358, align 1
  store %struct.Memory* %loadMem_48078a, %struct.Memory** %MEMORY
  %loadMem_480792 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8360 = getelementptr inbounds %struct.GPR, %struct.GPR* %8359, i32 0, i32 33
  %8361 = getelementptr inbounds %struct.Reg, %struct.Reg* %8360, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %8361 to i64*
  %8362 = load i64, i64* %PC.i953
  %8363 = add i64 %8362, 177
  %8364 = load i64, i64* %PC.i953
  %8365 = add i64 %8364, 6
  %8366 = load i64, i64* %PC.i953
  %8367 = add i64 %8366, 6
  store i64 %8367, i64* %PC.i953
  %8368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8369 = load i8, i8* %8368, align 1
  store i8 %8369, i8* %BRANCH_TAKEN, align 1
  %8370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8371 = icmp ne i8 %8369, 0
  %8372 = select i1 %8371, i64 %8363, i64 %8365
  store i64 %8372, i64* %8370, align 8
  store %struct.Memory* %loadMem_480792, %struct.Memory** %MEMORY
  %loadBr_480792 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480792 = icmp eq i8 %loadBr_480792, 1
  br i1 %cmpBr_480792, label %block_.L_480843, label %block_480798

block_480798:                                     ; preds = %block_480771
  %loadMem_480798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8374 = getelementptr inbounds %struct.GPR, %struct.GPR* %8373, i32 0, i32 33
  %8375 = getelementptr inbounds %struct.Reg, %struct.Reg* %8374, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %8375 to i64*
  %8376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8377 = getelementptr inbounds %struct.GPR, %struct.GPR* %8376, i32 0, i32 11
  %8378 = getelementptr inbounds %struct.Reg, %struct.Reg* %8377, i32 0, i32 0
  %RDI.i952 = bitcast %union.anon* %8378 to i64*
  %8379 = load i64, i64* %PC.i951
  %8380 = add i64 %8379, 10
  store i64 %8380, i64* %PC.i951
  store i64 ptrtoint (%G__0x5820ea_type* @G__0x5820ea to i64), i64* %RDI.i952, align 8
  store %struct.Memory* %loadMem_480798, %struct.Memory** %MEMORY
  %loadMem_4807a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8382 = getelementptr inbounds %struct.GPR, %struct.GPR* %8381, i32 0, i32 33
  %8383 = getelementptr inbounds %struct.Reg, %struct.Reg* %8382, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %8383 to i64*
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8385 = getelementptr inbounds %struct.GPR, %struct.GPR* %8384, i32 0, i32 9
  %8386 = getelementptr inbounds %struct.Reg, %struct.Reg* %8385, i32 0, i32 0
  %RSI.i949 = bitcast %union.anon* %8386 to i64*
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8388 = getelementptr inbounds %struct.GPR, %struct.GPR* %8387, i32 0, i32 15
  %8389 = getelementptr inbounds %struct.Reg, %struct.Reg* %8388, i32 0, i32 0
  %RBP.i950 = bitcast %union.anon* %8389 to i64*
  %8390 = load i64, i64* %RBP.i950
  %8391 = sub i64 %8390, 8
  %8392 = load i64, i64* %PC.i948
  %8393 = add i64 %8392, 3
  store i64 %8393, i64* %PC.i948
  %8394 = inttoptr i64 %8391 to i32*
  %8395 = load i32, i32* %8394
  %8396 = zext i32 %8395 to i64
  store i64 %8396, i64* %RSI.i949, align 8
  store %struct.Memory* %loadMem_4807a2, %struct.Memory** %MEMORY
  %loadMem_4807a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8398 = getelementptr inbounds %struct.GPR, %struct.GPR* %8397, i32 0, i32 33
  %8399 = getelementptr inbounds %struct.Reg, %struct.Reg* %8398, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %8399 to i64*
  %8400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8401 = getelementptr inbounds %struct.GPR, %struct.GPR* %8400, i32 0, i32 15
  %8402 = getelementptr inbounds %struct.Reg, %struct.Reg* %8401, i32 0, i32 0
  %RBP.i946 = bitcast %union.anon* %8402 to i64*
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8404 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8403, i64 0, i64 0
  %YMM0.i947 = bitcast %union.VectorReg* %8404 to %"class.std::bitset"*
  %8405 = bitcast %"class.std::bitset"* %YMM0.i947 to i8*
  %8406 = load i64, i64* %RBP.i946
  %8407 = sub i64 %8406, 24
  %8408 = load i64, i64* %PC.i945
  %8409 = add i64 %8408, 5
  store i64 %8409, i64* %PC.i945
  %8410 = inttoptr i64 %8407 to float*
  %8411 = load float, float* %8410
  %8412 = bitcast i8* %8405 to float*
  store float %8411, float* %8412, align 1
  %8413 = getelementptr inbounds i8, i8* %8405, i64 4
  %8414 = bitcast i8* %8413 to float*
  store float 0.000000e+00, float* %8414, align 1
  %8415 = getelementptr inbounds i8, i8* %8405, i64 8
  %8416 = bitcast i8* %8415 to float*
  store float 0.000000e+00, float* %8416, align 1
  %8417 = getelementptr inbounds i8, i8* %8405, i64 12
  %8418 = bitcast i8* %8417 to float*
  store float 0.000000e+00, float* %8418, align 1
  store %struct.Memory* %loadMem_4807a5, %struct.Memory** %MEMORY
  %loadMem_4807aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8420 = getelementptr inbounds %struct.GPR, %struct.GPR* %8419, i32 0, i32 33
  %8421 = getelementptr inbounds %struct.Reg, %struct.Reg* %8420, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %8421 to i64*
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 15
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %RBP.i943 = bitcast %union.anon* %8424 to i64*
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8426 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8425, i64 0, i64 0
  %YMM0.i944 = bitcast %union.VectorReg* %8426 to %"class.std::bitset"*
  %8427 = bitcast %"class.std::bitset"* %YMM0.i944 to i8*
  %8428 = bitcast %"class.std::bitset"* %YMM0.i944 to i8*
  %8429 = load i64, i64* %RBP.i943
  %8430 = sub i64 %8429, 52
  %8431 = load i64, i64* %PC.i942
  %8432 = add i64 %8431, 5
  store i64 %8432, i64* %PC.i942
  %8433 = bitcast i8* %8428 to <2 x float>*
  %8434 = load <2 x float>, <2 x float>* %8433, align 1
  %8435 = getelementptr inbounds i8, i8* %8428, i64 8
  %8436 = bitcast i8* %8435 to <2 x i32>*
  %8437 = load <2 x i32>, <2 x i32>* %8436, align 1
  %8438 = inttoptr i64 %8430 to float*
  %8439 = load float, float* %8438
  %8440 = extractelement <2 x float> %8434, i32 0
  %8441 = fsub float %8440, %8439
  %8442 = bitcast i8* %8427 to float*
  store float %8441, float* %8442, align 1
  %8443 = bitcast <2 x float> %8434 to <2 x i32>
  %8444 = extractelement <2 x i32> %8443, i32 1
  %8445 = getelementptr inbounds i8, i8* %8427, i64 4
  %8446 = bitcast i8* %8445 to i32*
  store i32 %8444, i32* %8446, align 1
  %8447 = extractelement <2 x i32> %8437, i32 0
  %8448 = getelementptr inbounds i8, i8* %8427, i64 8
  %8449 = bitcast i8* %8448 to i32*
  store i32 %8447, i32* %8449, align 1
  %8450 = extractelement <2 x i32> %8437, i32 1
  %8451 = getelementptr inbounds i8, i8* %8427, i64 12
  %8452 = bitcast i8* %8451 to i32*
  store i32 %8450, i32* %8452, align 1
  store %struct.Memory* %loadMem_4807aa, %struct.Memory** %MEMORY
  %loadMem_4807af = load %struct.Memory*, %struct.Memory** %MEMORY
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8454 = getelementptr inbounds %struct.GPR, %struct.GPR* %8453, i32 0, i32 33
  %8455 = getelementptr inbounds %struct.Reg, %struct.Reg* %8454, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %8455 to i64*
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8457 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8456, i64 0, i64 0
  %YMM0.i940 = bitcast %union.VectorReg* %8457 to %"class.std::bitset"*
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8459 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8458, i64 0, i64 0
  %XMM0.i941 = bitcast %union.VectorReg* %8459 to %union.vec128_t*
  %8460 = bitcast %"class.std::bitset"* %YMM0.i940 to i8*
  %8461 = bitcast %union.vec128_t* %XMM0.i941 to i8*
  %8462 = load i64, i64* %PC.i939
  %8463 = add i64 %8462, 4
  store i64 %8463, i64* %PC.i939
  %8464 = bitcast i8* %8461 to <2 x float>*
  %8465 = load <2 x float>, <2 x float>* %8464, align 1
  %8466 = extractelement <2 x float> %8465, i32 0
  %8467 = fpext float %8466 to double
  %8468 = bitcast i8* %8460 to double*
  store double %8467, double* %8468, align 1
  store %struct.Memory* %loadMem_4807af, %struct.Memory** %MEMORY
  %loadMem_4807b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8470 = getelementptr inbounds %struct.GPR, %struct.GPR* %8469, i32 0, i32 33
  %8471 = getelementptr inbounds %struct.Reg, %struct.Reg* %8470, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %8471 to i64*
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8473 = getelementptr inbounds %struct.GPR, %struct.GPR* %8472, i32 0, i32 1
  %8474 = getelementptr inbounds %struct.Reg, %struct.Reg* %8473, i32 0, i32 0
  %8475 = bitcast %union.anon* %8474 to %struct.anon.2*
  %AL.i938 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8475, i32 0, i32 0
  %8476 = load i64, i64* %PC.i937
  %8477 = add i64 %8476, 2
  store i64 %8477, i64* %PC.i937
  store i8 1, i8* %AL.i938, align 1
  store %struct.Memory* %loadMem_4807b3, %struct.Memory** %MEMORY
  %loadMem1_4807b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8479 = getelementptr inbounds %struct.GPR, %struct.GPR* %8478, i32 0, i32 33
  %8480 = getelementptr inbounds %struct.Reg, %struct.Reg* %8479, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %8480 to i64*
  %8481 = load i64, i64* %PC.i936
  %8482 = add i64 %8481, -190981
  %8483 = load i64, i64* %PC.i936
  %8484 = add i64 %8483, 5
  %8485 = load i64, i64* %PC.i936
  %8486 = add i64 %8485, 5
  store i64 %8486, i64* %PC.i936
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8488 = load i64, i64* %8487, align 8
  %8489 = add i64 %8488, -8
  %8490 = inttoptr i64 %8489 to i64*
  store i64 %8484, i64* %8490
  store i64 %8489, i64* %8487, align 8
  %8491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8482, i64* %8491, align 8
  store %struct.Memory* %loadMem1_4807b5, %struct.Memory** %MEMORY
  %loadMem2_4807b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4807b5 = load i64, i64* %3
  %call2_4807b5 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_4807b5, %struct.Memory* %loadMem2_4807b5)
  store %struct.Memory* %call2_4807b5, %struct.Memory** %MEMORY
  %loadMem_4807ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8493 = getelementptr inbounds %struct.GPR, %struct.GPR* %8492, i32 0, i32 33
  %8494 = getelementptr inbounds %struct.Reg, %struct.Reg* %8493, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %8494 to i64*
  %8495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8496 = getelementptr inbounds %struct.GPR, %struct.GPR* %8495, i32 0, i32 9
  %8497 = getelementptr inbounds %struct.Reg, %struct.Reg* %8496, i32 0, i32 0
  %RSI.i935 = bitcast %union.anon* %8497 to i64*
  %8498 = load i64, i64* %PC.i934
  %8499 = add i64 %8498, 10
  store i64 %8499, i64* %PC.i934
  store i64 ptrtoint (%G__0x5820fd_type* @G__0x5820fd to i64), i64* %RSI.i935, align 8
  store %struct.Memory* %loadMem_4807ba, %struct.Memory** %MEMORY
  %loadMem_4807c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8501 = getelementptr inbounds %struct.GPR, %struct.GPR* %8500, i32 0, i32 33
  %8502 = getelementptr inbounds %struct.Reg, %struct.Reg* %8501, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %8502 to i64*
  %8503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8504 = getelementptr inbounds %struct.GPR, %struct.GPR* %8503, i32 0, i32 11
  %8505 = getelementptr inbounds %struct.Reg, %struct.Reg* %8504, i32 0, i32 0
  %RDI.i933 = bitcast %union.anon* %8505 to i64*
  %8506 = load i64, i64* %PC.i932
  %8507 = add i64 %8506, 10
  store i64 %8507, i64* %PC.i932
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RDI.i933, align 8
  store %struct.Memory* %loadMem_4807c4, %struct.Memory** %MEMORY
  %loadMem_4807ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %8508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8509 = getelementptr inbounds %struct.GPR, %struct.GPR* %8508, i32 0, i32 33
  %8510 = getelementptr inbounds %struct.Reg, %struct.Reg* %8509, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %8510 to i64*
  %8511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8512 = getelementptr inbounds %struct.GPR, %struct.GPR* %8511, i32 0, i32 5
  %8513 = getelementptr inbounds %struct.Reg, %struct.Reg* %8512, i32 0, i32 0
  %RCX.i931 = bitcast %union.anon* %8513 to i64*
  %8514 = load i64, i64* %PC.i930
  %8515 = add i64 %8514, 8
  store i64 %8515, i64* %PC.i930
  %8516 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %8516, i64* %RCX.i931, align 8
  store %struct.Memory* %loadMem_4807ce, %struct.Memory** %MEMORY
  %loadMem_4807d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8518 = getelementptr inbounds %struct.GPR, %struct.GPR* %8517, i32 0, i32 33
  %8519 = getelementptr inbounds %struct.Reg, %struct.Reg* %8518, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %8519 to i64*
  %8520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8521 = getelementptr inbounds %struct.GPR, %struct.GPR* %8520, i32 0, i32 7
  %8522 = getelementptr inbounds %struct.Reg, %struct.Reg* %8521, i32 0, i32 0
  %RDX.i928 = bitcast %union.anon* %8522 to i64*
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8524 = getelementptr inbounds %struct.GPR, %struct.GPR* %8523, i32 0, i32 15
  %8525 = getelementptr inbounds %struct.Reg, %struct.Reg* %8524, i32 0, i32 0
  %RBP.i929 = bitcast %union.anon* %8525 to i64*
  %8526 = load i64, i64* %RBP.i929
  %8527 = sub i64 %8526, 8
  %8528 = load i64, i64* %PC.i927
  %8529 = add i64 %8528, 4
  store i64 %8529, i64* %PC.i927
  %8530 = inttoptr i64 %8527 to i32*
  %8531 = load i32, i32* %8530
  %8532 = sext i32 %8531 to i64
  store i64 %8532, i64* %RDX.i928, align 8
  store %struct.Memory* %loadMem_4807d6, %struct.Memory** %MEMORY
  %loadMem_4807da = load %struct.Memory*, %struct.Memory** %MEMORY
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8534 = getelementptr inbounds %struct.GPR, %struct.GPR* %8533, i32 0, i32 33
  %8535 = getelementptr inbounds %struct.Reg, %struct.Reg* %8534, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %8535 to i64*
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8537 = getelementptr inbounds %struct.GPR, %struct.GPR* %8536, i32 0, i32 7
  %8538 = getelementptr inbounds %struct.Reg, %struct.Reg* %8537, i32 0, i32 0
  %RDX.i926 = bitcast %union.anon* %8538 to i64*
  %8539 = load i64, i64* %RDX.i926
  %8540 = load i64, i64* %PC.i925
  %8541 = add i64 %8540, 7
  store i64 %8541, i64* %PC.i925
  %8542 = sext i64 %8539 to i128
  %8543 = and i128 %8542, -18446744073709551616
  %8544 = zext i64 %8539 to i128
  %8545 = or i128 %8543, %8544
  %8546 = mul i128 564, %8545
  %8547 = trunc i128 %8546 to i64
  store i64 %8547, i64* %RDX.i926, align 8
  %8548 = sext i64 %8547 to i128
  %8549 = icmp ne i128 %8548, %8546
  %8550 = zext i1 %8549 to i8
  %8551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8550, i8* %8551, align 1
  %8552 = trunc i128 %8546 to i32
  %8553 = and i32 %8552, 255
  %8554 = call i32 @llvm.ctpop.i32(i32 %8553)
  %8555 = trunc i32 %8554 to i8
  %8556 = and i8 %8555, 1
  %8557 = xor i8 %8556, 1
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8557, i8* %8558, align 1
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8559, align 1
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8560, align 1
  %8561 = lshr i64 %8547, 63
  %8562 = trunc i64 %8561 to i8
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8562, i8* %8563, align 1
  %8564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8550, i8* %8564, align 1
  store %struct.Memory* %loadMem_4807da, %struct.Memory** %MEMORY
  %loadMem_4807e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8566 = getelementptr inbounds %struct.GPR, %struct.GPR* %8565, i32 0, i32 33
  %8567 = getelementptr inbounds %struct.Reg, %struct.Reg* %8566, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %8567 to i64*
  %8568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8569 = getelementptr inbounds %struct.GPR, %struct.GPR* %8568, i32 0, i32 11
  %8570 = getelementptr inbounds %struct.Reg, %struct.Reg* %8569, i32 0, i32 0
  %RDI.i923 = bitcast %union.anon* %8570 to i64*
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8572 = getelementptr inbounds %struct.GPR, %struct.GPR* %8571, i32 0, i32 17
  %8573 = getelementptr inbounds %struct.Reg, %struct.Reg* %8572, i32 0, i32 0
  %R8.i924 = bitcast %union.anon* %8573 to i64*
  %8574 = load i64, i64* %RDI.i923
  %8575 = load i64, i64* %PC.i922
  %8576 = add i64 %8575, 3
  store i64 %8576, i64* %PC.i922
  store i64 %8574, i64* %R8.i924, align 8
  store %struct.Memory* %loadMem_4807e1, %struct.Memory** %MEMORY
  %loadMem_4807e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8578 = getelementptr inbounds %struct.GPR, %struct.GPR* %8577, i32 0, i32 33
  %8579 = getelementptr inbounds %struct.Reg, %struct.Reg* %8578, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %8579 to i64*
  %8580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8581 = getelementptr inbounds %struct.GPR, %struct.GPR* %8580, i32 0, i32 7
  %8582 = getelementptr inbounds %struct.Reg, %struct.Reg* %8581, i32 0, i32 0
  %RDX.i920 = bitcast %union.anon* %8582 to i64*
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8584 = getelementptr inbounds %struct.GPR, %struct.GPR* %8583, i32 0, i32 17
  %8585 = getelementptr inbounds %struct.Reg, %struct.Reg* %8584, i32 0, i32 0
  %R8.i921 = bitcast %union.anon* %8585 to i64*
  %8586 = load i64, i64* %R8.i921
  %8587 = load i64, i64* %RDX.i920
  %8588 = load i64, i64* %PC.i919
  %8589 = add i64 %8588, 3
  store i64 %8589, i64* %PC.i919
  %8590 = add i64 %8587, %8586
  store i64 %8590, i64* %R8.i921, align 8
  %8591 = icmp ult i64 %8590, %8586
  %8592 = icmp ult i64 %8590, %8587
  %8593 = or i1 %8591, %8592
  %8594 = zext i1 %8593 to i8
  %8595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8594, i8* %8595, align 1
  %8596 = trunc i64 %8590 to i32
  %8597 = and i32 %8596, 255
  %8598 = call i32 @llvm.ctpop.i32(i32 %8597)
  %8599 = trunc i32 %8598 to i8
  %8600 = and i8 %8599, 1
  %8601 = xor i8 %8600, 1
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8601, i8* %8602, align 1
  %8603 = xor i64 %8587, %8586
  %8604 = xor i64 %8603, %8590
  %8605 = lshr i64 %8604, 4
  %8606 = trunc i64 %8605 to i8
  %8607 = and i8 %8606, 1
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8607, i8* %8608, align 1
  %8609 = icmp eq i64 %8590, 0
  %8610 = zext i1 %8609 to i8
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8610, i8* %8611, align 1
  %8612 = lshr i64 %8590, 63
  %8613 = trunc i64 %8612 to i8
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8613, i8* %8614, align 1
  %8615 = lshr i64 %8586, 63
  %8616 = lshr i64 %8587, 63
  %8617 = xor i64 %8612, %8615
  %8618 = xor i64 %8612, %8616
  %8619 = add i64 %8617, %8618
  %8620 = icmp eq i64 %8619, 2
  %8621 = zext i1 %8620 to i8
  %8622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8621, i8* %8622, align 1
  store %struct.Memory* %loadMem_4807e4, %struct.Memory** %MEMORY
  %loadMem_4807e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8624 = getelementptr inbounds %struct.GPR, %struct.GPR* %8623, i32 0, i32 33
  %8625 = getelementptr inbounds %struct.Reg, %struct.Reg* %8624, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %8625 to i64*
  %8626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8627 = getelementptr inbounds %struct.GPR, %struct.GPR* %8626, i32 0, i32 17
  %8628 = getelementptr inbounds %struct.Reg, %struct.Reg* %8627, i32 0, i32 0
  %R8.i917 = bitcast %union.anon* %8628 to i64*
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8630 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8629, i64 0, i64 0
  %YMM0.i918 = bitcast %union.VectorReg* %8630 to %"class.std::bitset"*
  %8631 = bitcast %"class.std::bitset"* %YMM0.i918 to i8*
  %8632 = load i64, i64* %R8.i917
  %8633 = add i64 %8632, 20
  %8634 = load i64, i64* %PC.i916
  %8635 = add i64 %8634, 6
  store i64 %8635, i64* %PC.i916
  %8636 = inttoptr i64 %8633 to float*
  %8637 = load float, float* %8636
  %8638 = fpext float %8637 to double
  %8639 = bitcast i8* %8631 to double*
  store double %8638, double* %8639, align 1
  store %struct.Memory* %loadMem_4807e7, %struct.Memory** %MEMORY
  %loadMem_4807ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8641 = getelementptr inbounds %struct.GPR, %struct.GPR* %8640, i32 0, i32 33
  %8642 = getelementptr inbounds %struct.Reg, %struct.Reg* %8641, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %8642 to i64*
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8644 = getelementptr inbounds %struct.GPR, %struct.GPR* %8643, i32 0, i32 7
  %8645 = getelementptr inbounds %struct.Reg, %struct.Reg* %8644, i32 0, i32 0
  %RDX.i914 = bitcast %union.anon* %8645 to i64*
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8647 = getelementptr inbounds %struct.GPR, %struct.GPR* %8646, i32 0, i32 15
  %8648 = getelementptr inbounds %struct.Reg, %struct.Reg* %8647, i32 0, i32 0
  %RBP.i915 = bitcast %union.anon* %8648 to i64*
  %8649 = load i64, i64* %RBP.i915
  %8650 = sub i64 %8649, 8
  %8651 = load i64, i64* %PC.i913
  %8652 = add i64 %8651, 4
  store i64 %8652, i64* %PC.i913
  %8653 = inttoptr i64 %8650 to i32*
  %8654 = load i32, i32* %8653
  %8655 = sext i32 %8654 to i64
  store i64 %8655, i64* %RDX.i914, align 8
  store %struct.Memory* %loadMem_4807ed, %struct.Memory** %MEMORY
  %loadMem_4807f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8657 = getelementptr inbounds %struct.GPR, %struct.GPR* %8656, i32 0, i32 33
  %8658 = getelementptr inbounds %struct.Reg, %struct.Reg* %8657, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %8658 to i64*
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8660 = getelementptr inbounds %struct.GPR, %struct.GPR* %8659, i32 0, i32 7
  %8661 = getelementptr inbounds %struct.Reg, %struct.Reg* %8660, i32 0, i32 0
  %RDX.i912 = bitcast %union.anon* %8661 to i64*
  %8662 = load i64, i64* %RDX.i912
  %8663 = load i64, i64* %PC.i911
  %8664 = add i64 %8663, 7
  store i64 %8664, i64* %PC.i911
  %8665 = sext i64 %8662 to i128
  %8666 = and i128 %8665, -18446744073709551616
  %8667 = zext i64 %8662 to i128
  %8668 = or i128 %8666, %8667
  %8669 = mul i128 564, %8668
  %8670 = trunc i128 %8669 to i64
  store i64 %8670, i64* %RDX.i912, align 8
  %8671 = sext i64 %8670 to i128
  %8672 = icmp ne i128 %8671, %8669
  %8673 = zext i1 %8672 to i8
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8673, i8* %8674, align 1
  %8675 = trunc i128 %8669 to i32
  %8676 = and i32 %8675, 255
  %8677 = call i32 @llvm.ctpop.i32(i32 %8676)
  %8678 = trunc i32 %8677 to i8
  %8679 = and i8 %8678, 1
  %8680 = xor i8 %8679, 1
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8680, i8* %8681, align 1
  %8682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8682, align 1
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8683, align 1
  %8684 = lshr i64 %8670, 63
  %8685 = trunc i64 %8684 to i8
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8685, i8* %8686, align 1
  %8687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8673, i8* %8687, align 1
  store %struct.Memory* %loadMem_4807f1, %struct.Memory** %MEMORY
  %loadMem_4807f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8689 = getelementptr inbounds %struct.GPR, %struct.GPR* %8688, i32 0, i32 33
  %8690 = getelementptr inbounds %struct.Reg, %struct.Reg* %8689, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %8690 to i64*
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8692 = getelementptr inbounds %struct.GPR, %struct.GPR* %8691, i32 0, i32 11
  %8693 = getelementptr inbounds %struct.Reg, %struct.Reg* %8692, i32 0, i32 0
  %RDI.i909 = bitcast %union.anon* %8693 to i64*
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8695 = getelementptr inbounds %struct.GPR, %struct.GPR* %8694, i32 0, i32 17
  %8696 = getelementptr inbounds %struct.Reg, %struct.Reg* %8695, i32 0, i32 0
  %R8.i910 = bitcast %union.anon* %8696 to i64*
  %8697 = load i64, i64* %RDI.i909
  %8698 = load i64, i64* %PC.i908
  %8699 = add i64 %8698, 3
  store i64 %8699, i64* %PC.i908
  store i64 %8697, i64* %R8.i910, align 8
  store %struct.Memory* %loadMem_4807f8, %struct.Memory** %MEMORY
  %loadMem_4807fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8701 = getelementptr inbounds %struct.GPR, %struct.GPR* %8700, i32 0, i32 33
  %8702 = getelementptr inbounds %struct.Reg, %struct.Reg* %8701, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %8702 to i64*
  %8703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8704 = getelementptr inbounds %struct.GPR, %struct.GPR* %8703, i32 0, i32 7
  %8705 = getelementptr inbounds %struct.Reg, %struct.Reg* %8704, i32 0, i32 0
  %RDX.i906 = bitcast %union.anon* %8705 to i64*
  %8706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8707 = getelementptr inbounds %struct.GPR, %struct.GPR* %8706, i32 0, i32 17
  %8708 = getelementptr inbounds %struct.Reg, %struct.Reg* %8707, i32 0, i32 0
  %R8.i907 = bitcast %union.anon* %8708 to i64*
  %8709 = load i64, i64* %R8.i907
  %8710 = load i64, i64* %RDX.i906
  %8711 = load i64, i64* %PC.i905
  %8712 = add i64 %8711, 3
  store i64 %8712, i64* %PC.i905
  %8713 = add i64 %8710, %8709
  store i64 %8713, i64* %R8.i907, align 8
  %8714 = icmp ult i64 %8713, %8709
  %8715 = icmp ult i64 %8713, %8710
  %8716 = or i1 %8714, %8715
  %8717 = zext i1 %8716 to i8
  %8718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8717, i8* %8718, align 1
  %8719 = trunc i64 %8713 to i32
  %8720 = and i32 %8719, 255
  %8721 = call i32 @llvm.ctpop.i32(i32 %8720)
  %8722 = trunc i32 %8721 to i8
  %8723 = and i8 %8722, 1
  %8724 = xor i8 %8723, 1
  %8725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8724, i8* %8725, align 1
  %8726 = xor i64 %8710, %8709
  %8727 = xor i64 %8726, %8713
  %8728 = lshr i64 %8727, 4
  %8729 = trunc i64 %8728 to i8
  %8730 = and i8 %8729, 1
  %8731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8730, i8* %8731, align 1
  %8732 = icmp eq i64 %8713, 0
  %8733 = zext i1 %8732 to i8
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8733, i8* %8734, align 1
  %8735 = lshr i64 %8713, 63
  %8736 = trunc i64 %8735 to i8
  %8737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8736, i8* %8737, align 1
  %8738 = lshr i64 %8709, 63
  %8739 = lshr i64 %8710, 63
  %8740 = xor i64 %8735, %8738
  %8741 = xor i64 %8735, %8739
  %8742 = add i64 %8740, %8741
  %8743 = icmp eq i64 %8742, 2
  %8744 = zext i1 %8743 to i8
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8744, i8* %8745, align 1
  store %struct.Memory* %loadMem_4807fb, %struct.Memory** %MEMORY
  %loadMem_4807fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %8746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8747 = getelementptr inbounds %struct.GPR, %struct.GPR* %8746, i32 0, i32 33
  %8748 = getelementptr inbounds %struct.Reg, %struct.Reg* %8747, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %8748 to i64*
  %8749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8750 = getelementptr inbounds %struct.GPR, %struct.GPR* %8749, i32 0, i32 7
  %8751 = getelementptr inbounds %struct.Reg, %struct.Reg* %8750, i32 0, i32 0
  %RDX.i903 = bitcast %union.anon* %8751 to i64*
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8753 = getelementptr inbounds %struct.GPR, %struct.GPR* %8752, i32 0, i32 17
  %8754 = getelementptr inbounds %struct.Reg, %struct.Reg* %8753, i32 0, i32 0
  %R8.i904 = bitcast %union.anon* %8754 to i64*
  %8755 = load i64, i64* %R8.i904
  %8756 = add i64 %8755, 28
  %8757 = load i64, i64* %PC.i902
  %8758 = add i64 %8757, 4
  store i64 %8758, i64* %PC.i902
  %8759 = inttoptr i64 %8756 to i32*
  %8760 = load i32, i32* %8759
  %8761 = zext i32 %8760 to i64
  store i64 %8761, i64* %RDX.i903, align 8
  store %struct.Memory* %loadMem_4807fe, %struct.Memory** %MEMORY
  %loadMem_480802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8763 = getelementptr inbounds %struct.GPR, %struct.GPR* %8762, i32 0, i32 33
  %8764 = getelementptr inbounds %struct.Reg, %struct.Reg* %8763, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %8764 to i64*
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8766 = getelementptr inbounds %struct.GPR, %struct.GPR* %8765, i32 0, i32 15
  %8767 = getelementptr inbounds %struct.Reg, %struct.Reg* %8766, i32 0, i32 0
  %RBP.i900 = bitcast %union.anon* %8767 to i64*
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8769 = getelementptr inbounds %struct.GPR, %struct.GPR* %8768, i32 0, i32 17
  %8770 = getelementptr inbounds %struct.Reg, %struct.Reg* %8769, i32 0, i32 0
  %R8.i901 = bitcast %union.anon* %8770 to i64*
  %8771 = load i64, i64* %RBP.i900
  %8772 = sub i64 %8771, 8
  %8773 = load i64, i64* %PC.i899
  %8774 = add i64 %8773, 4
  store i64 %8774, i64* %PC.i899
  %8775 = inttoptr i64 %8772 to i32*
  %8776 = load i32, i32* %8775
  %8777 = sext i32 %8776 to i64
  store i64 %8777, i64* %R8.i901, align 8
  store %struct.Memory* %loadMem_480802, %struct.Memory** %MEMORY
  %loadMem_480806 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8779 = getelementptr inbounds %struct.GPR, %struct.GPR* %8778, i32 0, i32 33
  %8780 = getelementptr inbounds %struct.Reg, %struct.Reg* %8779, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %8780 to i64*
  %8781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8782 = getelementptr inbounds %struct.GPR, %struct.GPR* %8781, i32 0, i32 17
  %8783 = getelementptr inbounds %struct.Reg, %struct.Reg* %8782, i32 0, i32 0
  %R8.i898 = bitcast %union.anon* %8783 to i64*
  %8784 = load i64, i64* %R8.i898
  %8785 = load i64, i64* %PC.i897
  %8786 = add i64 %8785, 7
  store i64 %8786, i64* %PC.i897
  %8787 = sext i64 %8784 to i128
  %8788 = and i128 %8787, -18446744073709551616
  %8789 = zext i64 %8784 to i128
  %8790 = or i128 %8788, %8789
  %8791 = mul i128 564, %8790
  %8792 = trunc i128 %8791 to i64
  store i64 %8792, i64* %R8.i898, align 8
  %8793 = sext i64 %8792 to i128
  %8794 = icmp ne i128 %8793, %8791
  %8795 = zext i1 %8794 to i8
  %8796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8795, i8* %8796, align 1
  %8797 = trunc i128 %8791 to i32
  %8798 = and i32 %8797, 255
  %8799 = call i32 @llvm.ctpop.i32(i32 %8798)
  %8800 = trunc i32 %8799 to i8
  %8801 = and i8 %8800, 1
  %8802 = xor i8 %8801, 1
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8802, i8* %8803, align 1
  %8804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8804, align 1
  %8805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8805, align 1
  %8806 = lshr i64 %8792, 63
  %8807 = trunc i64 %8806 to i8
  %8808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8807, i8* %8808, align 1
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8795, i8* %8809, align 1
  store %struct.Memory* %loadMem_480806, %struct.Memory** %MEMORY
  %loadMem_48080d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8811 = getelementptr inbounds %struct.GPR, %struct.GPR* %8810, i32 0, i32 33
  %8812 = getelementptr inbounds %struct.Reg, %struct.Reg* %8811, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %8812 to i64*
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8814 = getelementptr inbounds %struct.GPR, %struct.GPR* %8813, i32 0, i32 11
  %8815 = getelementptr inbounds %struct.Reg, %struct.Reg* %8814, i32 0, i32 0
  %RDI.i895 = bitcast %union.anon* %8815 to i64*
  %8816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8817 = getelementptr inbounds %struct.GPR, %struct.GPR* %8816, i32 0, i32 19
  %8818 = getelementptr inbounds %struct.Reg, %struct.Reg* %8817, i32 0, i32 0
  %R9.i896 = bitcast %union.anon* %8818 to i64*
  %8819 = load i64, i64* %RDI.i895
  %8820 = load i64, i64* %PC.i894
  %8821 = add i64 %8820, 3
  store i64 %8821, i64* %PC.i894
  store i64 %8819, i64* %R9.i896, align 8
  store %struct.Memory* %loadMem_48080d, %struct.Memory** %MEMORY
  %loadMem_480810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8823 = getelementptr inbounds %struct.GPR, %struct.GPR* %8822, i32 0, i32 33
  %8824 = getelementptr inbounds %struct.Reg, %struct.Reg* %8823, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %8824 to i64*
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8826 = getelementptr inbounds %struct.GPR, %struct.GPR* %8825, i32 0, i32 17
  %8827 = getelementptr inbounds %struct.Reg, %struct.Reg* %8826, i32 0, i32 0
  %R8.i892 = bitcast %union.anon* %8827 to i64*
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8829 = getelementptr inbounds %struct.GPR, %struct.GPR* %8828, i32 0, i32 19
  %8830 = getelementptr inbounds %struct.Reg, %struct.Reg* %8829, i32 0, i32 0
  %R9.i893 = bitcast %union.anon* %8830 to i64*
  %8831 = load i64, i64* %R9.i893
  %8832 = load i64, i64* %R8.i892
  %8833 = load i64, i64* %PC.i891
  %8834 = add i64 %8833, 3
  store i64 %8834, i64* %PC.i891
  %8835 = add i64 %8832, %8831
  store i64 %8835, i64* %R9.i893, align 8
  %8836 = icmp ult i64 %8835, %8831
  %8837 = icmp ult i64 %8835, %8832
  %8838 = or i1 %8836, %8837
  %8839 = zext i1 %8838 to i8
  %8840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8839, i8* %8840, align 1
  %8841 = trunc i64 %8835 to i32
  %8842 = and i32 %8841, 255
  %8843 = call i32 @llvm.ctpop.i32(i32 %8842)
  %8844 = trunc i32 %8843 to i8
  %8845 = and i8 %8844, 1
  %8846 = xor i8 %8845, 1
  %8847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8846, i8* %8847, align 1
  %8848 = xor i64 %8832, %8831
  %8849 = xor i64 %8848, %8835
  %8850 = lshr i64 %8849, 4
  %8851 = trunc i64 %8850 to i8
  %8852 = and i8 %8851, 1
  %8853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8852, i8* %8853, align 1
  %8854 = icmp eq i64 %8835, 0
  %8855 = zext i1 %8854 to i8
  %8856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8855, i8* %8856, align 1
  %8857 = lshr i64 %8835, 63
  %8858 = trunc i64 %8857 to i8
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8858, i8* %8859, align 1
  %8860 = lshr i64 %8831, 63
  %8861 = lshr i64 %8832, 63
  %8862 = xor i64 %8857, %8860
  %8863 = xor i64 %8857, %8861
  %8864 = add i64 %8862, %8863
  %8865 = icmp eq i64 %8864, 2
  %8866 = zext i1 %8865 to i8
  %8867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8866, i8* %8867, align 1
  store %struct.Memory* %loadMem_480810, %struct.Memory** %MEMORY
  %loadMem_480813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8869 = getelementptr inbounds %struct.GPR, %struct.GPR* %8868, i32 0, i32 33
  %8870 = getelementptr inbounds %struct.Reg, %struct.Reg* %8869, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %8870 to i64*
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8872 = getelementptr inbounds %struct.GPR, %struct.GPR* %8871, i32 0, i32 19
  %8873 = getelementptr inbounds %struct.Reg, %struct.Reg* %8872, i32 0, i32 0
  %R9.i = bitcast %union.anon* %8873 to i64*
  %8874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8875 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8874, i64 0, i64 1
  %YMM1.i890 = bitcast %union.VectorReg* %8875 to %"class.std::bitset"*
  %8876 = bitcast %"class.std::bitset"* %YMM1.i890 to i8*
  %8877 = load i64, i64* %R9.i
  %8878 = add i64 %8877, 24
  %8879 = load i64, i64* %PC.i889
  %8880 = add i64 %8879, 6
  store i64 %8880, i64* %PC.i889
  %8881 = inttoptr i64 %8878 to float*
  %8882 = load float, float* %8881
  %8883 = fpext float %8882 to double
  %8884 = bitcast i8* %8876 to double*
  store double %8883, double* %8884, align 1
  store %struct.Memory* %loadMem_480813, %struct.Memory** %MEMORY
  %loadMem_480819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8886 = getelementptr inbounds %struct.GPR, %struct.GPR* %8885, i32 0, i32 33
  %8887 = getelementptr inbounds %struct.Reg, %struct.Reg* %8886, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %8887 to i64*
  %8888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8889 = getelementptr inbounds %struct.GPR, %struct.GPR* %8888, i32 0, i32 15
  %8890 = getelementptr inbounds %struct.Reg, %struct.Reg* %8889, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %8890 to i64*
  %8891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8892 = getelementptr inbounds %struct.GPR, %struct.GPR* %8891, i32 0, i32 17
  %8893 = getelementptr inbounds %struct.Reg, %struct.Reg* %8892, i32 0, i32 0
  %R8.i888 = bitcast %union.anon* %8893 to i64*
  %8894 = load i64, i64* %RBP.i887
  %8895 = sub i64 %8894, 8
  %8896 = load i64, i64* %PC.i886
  %8897 = add i64 %8896, 4
  store i64 %8897, i64* %PC.i886
  %8898 = inttoptr i64 %8895 to i32*
  %8899 = load i32, i32* %8898
  %8900 = sext i32 %8899 to i64
  store i64 %8900, i64* %R8.i888, align 8
  store %struct.Memory* %loadMem_480819, %struct.Memory** %MEMORY
  %loadMem_48081d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8902 = getelementptr inbounds %struct.GPR, %struct.GPR* %8901, i32 0, i32 33
  %8903 = getelementptr inbounds %struct.Reg, %struct.Reg* %8902, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %8903 to i64*
  %8904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8905 = getelementptr inbounds %struct.GPR, %struct.GPR* %8904, i32 0, i32 17
  %8906 = getelementptr inbounds %struct.Reg, %struct.Reg* %8905, i32 0, i32 0
  %R8.i885 = bitcast %union.anon* %8906 to i64*
  %8907 = load i64, i64* %R8.i885
  %8908 = load i64, i64* %PC.i884
  %8909 = add i64 %8908, 7
  store i64 %8909, i64* %PC.i884
  %8910 = sext i64 %8907 to i128
  %8911 = and i128 %8910, -18446744073709551616
  %8912 = zext i64 %8907 to i128
  %8913 = or i128 %8911, %8912
  %8914 = mul i128 564, %8913
  %8915 = trunc i128 %8914 to i64
  store i64 %8915, i64* %R8.i885, align 8
  %8916 = sext i64 %8915 to i128
  %8917 = icmp ne i128 %8916, %8914
  %8918 = zext i1 %8917 to i8
  %8919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8918, i8* %8919, align 1
  %8920 = trunc i128 %8914 to i32
  %8921 = and i32 %8920, 255
  %8922 = call i32 @llvm.ctpop.i32(i32 %8921)
  %8923 = trunc i32 %8922 to i8
  %8924 = and i8 %8923, 1
  %8925 = xor i8 %8924, 1
  %8926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8925, i8* %8926, align 1
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8927, align 1
  %8928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8928, align 1
  %8929 = lshr i64 %8915, 63
  %8930 = trunc i64 %8929 to i8
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8930, i8* %8931, align 1
  %8932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8918, i8* %8932, align 1
  store %struct.Memory* %loadMem_48081d, %struct.Memory** %MEMORY
  %loadMem_480824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8934 = getelementptr inbounds %struct.GPR, %struct.GPR* %8933, i32 0, i32 33
  %8935 = getelementptr inbounds %struct.Reg, %struct.Reg* %8934, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %8935 to i64*
  %8936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8937 = getelementptr inbounds %struct.GPR, %struct.GPR* %8936, i32 0, i32 11
  %8938 = getelementptr inbounds %struct.Reg, %struct.Reg* %8937, i32 0, i32 0
  %RDI.i883 = bitcast %union.anon* %8938 to i64*
  %8939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8940 = getelementptr inbounds %struct.GPR, %struct.GPR* %8939, i32 0, i32 17
  %8941 = getelementptr inbounds %struct.Reg, %struct.Reg* %8940, i32 0, i32 0
  %R8.i = bitcast %union.anon* %8941 to i64*
  %8942 = load i64, i64* %RDI.i883
  %8943 = load i64, i64* %R8.i
  %8944 = load i64, i64* %PC.i882
  %8945 = add i64 %8944, 3
  store i64 %8945, i64* %PC.i882
  %8946 = add i64 %8943, %8942
  store i64 %8946, i64* %RDI.i883, align 8
  %8947 = icmp ult i64 %8946, %8942
  %8948 = icmp ult i64 %8946, %8943
  %8949 = or i1 %8947, %8948
  %8950 = zext i1 %8949 to i8
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8950, i8* %8951, align 1
  %8952 = trunc i64 %8946 to i32
  %8953 = and i32 %8952, 255
  %8954 = call i32 @llvm.ctpop.i32(i32 %8953)
  %8955 = trunc i32 %8954 to i8
  %8956 = and i8 %8955, 1
  %8957 = xor i8 %8956, 1
  %8958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8957, i8* %8958, align 1
  %8959 = xor i64 %8943, %8942
  %8960 = xor i64 %8959, %8946
  %8961 = lshr i64 %8960, 4
  %8962 = trunc i64 %8961 to i8
  %8963 = and i8 %8962, 1
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8963, i8* %8964, align 1
  %8965 = icmp eq i64 %8946, 0
  %8966 = zext i1 %8965 to i8
  %8967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8966, i8* %8967, align 1
  %8968 = lshr i64 %8946, 63
  %8969 = trunc i64 %8968 to i8
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8969, i8* %8970, align 1
  %8971 = lshr i64 %8942, 63
  %8972 = lshr i64 %8943, 63
  %8973 = xor i64 %8968, %8971
  %8974 = xor i64 %8968, %8972
  %8975 = add i64 %8973, %8974
  %8976 = icmp eq i64 %8975, 2
  %8977 = zext i1 %8976 to i8
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8977, i8* %8978, align 1
  store %struct.Memory* %loadMem_480824, %struct.Memory** %MEMORY
  %loadMem_480827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8980 = getelementptr inbounds %struct.GPR, %struct.GPR* %8979, i32 0, i32 33
  %8981 = getelementptr inbounds %struct.Reg, %struct.Reg* %8980, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %8981 to i64*
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8983 = getelementptr inbounds %struct.GPR, %struct.GPR* %8982, i32 0, i32 21
  %8984 = getelementptr inbounds %struct.Reg, %struct.Reg* %8983, i32 0, i32 0
  %R10D.i880 = bitcast %union.anon* %8984 to i32*
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8986 = getelementptr inbounds %struct.GPR, %struct.GPR* %8985, i32 0, i32 11
  %8987 = getelementptr inbounds %struct.Reg, %struct.Reg* %8986, i32 0, i32 0
  %RDI.i881 = bitcast %union.anon* %8987 to i64*
  %8988 = bitcast i32* %R10D.i880 to i64*
  %8989 = load i64, i64* %RDI.i881
  %8990 = add i64 %8989, 32
  %8991 = load i64, i64* %PC.i879
  %8992 = add i64 %8991, 4
  store i64 %8992, i64* %PC.i879
  %8993 = inttoptr i64 %8990 to i32*
  %8994 = load i32, i32* %8993
  %8995 = zext i32 %8994 to i64
  store i64 %8995, i64* %8988, align 8
  store %struct.Memory* %loadMem_480827, %struct.Memory** %MEMORY
  %loadMem_48082b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8997 = getelementptr inbounds %struct.GPR, %struct.GPR* %8996, i32 0, i32 33
  %8998 = getelementptr inbounds %struct.Reg, %struct.Reg* %8997, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %8998 to i64*
  %8999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9000 = getelementptr inbounds %struct.GPR, %struct.GPR* %8999, i32 0, i32 15
  %9001 = getelementptr inbounds %struct.Reg, %struct.Reg* %9000, i32 0, i32 0
  %RBP.i877 = bitcast %union.anon* %9001 to i64*
  %9002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9003 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9002, i64 0, i64 2
  %YMM2.i878 = bitcast %union.VectorReg* %9003 to %"class.std::bitset"*
  %9004 = bitcast %"class.std::bitset"* %YMM2.i878 to i8*
  %9005 = load i64, i64* %RBP.i877
  %9006 = sub i64 %9005, 28
  %9007 = load i64, i64* %PC.i876
  %9008 = add i64 %9007, 5
  store i64 %9008, i64* %PC.i876
  %9009 = inttoptr i64 %9006 to float*
  %9010 = load float, float* %9009
  %9011 = fpext float %9010 to double
  %9012 = bitcast i8* %9004 to double*
  store double %9011, double* %9012, align 1
  store %struct.Memory* %loadMem_48082b, %struct.Memory** %MEMORY
  %loadMem_480830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9014 = getelementptr inbounds %struct.GPR, %struct.GPR* %9013, i32 0, i32 33
  %9015 = getelementptr inbounds %struct.Reg, %struct.Reg* %9014, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %9015 to i64*
  %9016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9017 = getelementptr inbounds %struct.GPR, %struct.GPR* %9016, i32 0, i32 5
  %9018 = getelementptr inbounds %struct.Reg, %struct.Reg* %9017, i32 0, i32 0
  %RCX.i874 = bitcast %union.anon* %9018 to i64*
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9020 = getelementptr inbounds %struct.GPR, %struct.GPR* %9019, i32 0, i32 11
  %9021 = getelementptr inbounds %struct.Reg, %struct.Reg* %9020, i32 0, i32 0
  %RDI.i875 = bitcast %union.anon* %9021 to i64*
  %9022 = load i64, i64* %RCX.i874
  %9023 = load i64, i64* %PC.i873
  %9024 = add i64 %9023, 3
  store i64 %9024, i64* %PC.i873
  store i64 %9022, i64* %RDI.i875, align 8
  store %struct.Memory* %loadMem_480830, %struct.Memory** %MEMORY
  %loadMem_480833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9026 = getelementptr inbounds %struct.GPR, %struct.GPR* %9025, i32 0, i32 33
  %9027 = getelementptr inbounds %struct.Reg, %struct.Reg* %9026, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %9027 to i64*
  %9028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9029 = getelementptr inbounds %struct.GPR, %struct.GPR* %9028, i32 0, i32 21
  %9030 = getelementptr inbounds %struct.Reg, %struct.Reg* %9029, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %9030 to i32*
  %9031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9032 = getelementptr inbounds %struct.GPR, %struct.GPR* %9031, i32 0, i32 5
  %9033 = getelementptr inbounds %struct.Reg, %struct.Reg* %9032, i32 0, i32 0
  %RCX.i872 = bitcast %union.anon* %9033 to i64*
  %9034 = load i32, i32* %R10D.i
  %9035 = zext i32 %9034 to i64
  %9036 = load i64, i64* %PC.i871
  %9037 = add i64 %9036, 3
  store i64 %9037, i64* %PC.i871
  %9038 = and i64 %9035, 4294967295
  store i64 %9038, i64* %RCX.i872, align 8
  store %struct.Memory* %loadMem_480833, %struct.Memory** %MEMORY
  %loadMem_480836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9040 = getelementptr inbounds %struct.GPR, %struct.GPR* %9039, i32 0, i32 33
  %9041 = getelementptr inbounds %struct.Reg, %struct.Reg* %9040, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %9041 to i64*
  %9042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9043 = getelementptr inbounds %struct.GPR, %struct.GPR* %9042, i32 0, i32 1
  %9044 = getelementptr inbounds %struct.Reg, %struct.Reg* %9043, i32 0, i32 0
  %EAX.i869 = bitcast %union.anon* %9044 to i32*
  %9045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9046 = getelementptr inbounds %struct.GPR, %struct.GPR* %9045, i32 0, i32 15
  %9047 = getelementptr inbounds %struct.Reg, %struct.Reg* %9046, i32 0, i32 0
  %RBP.i870 = bitcast %union.anon* %9047 to i64*
  %9048 = load i64, i64* %RBP.i870
  %9049 = sub i64 %9048, 124
  %9050 = load i32, i32* %EAX.i869
  %9051 = zext i32 %9050 to i64
  %9052 = load i64, i64* %PC.i868
  %9053 = add i64 %9052, 3
  store i64 %9053, i64* %PC.i868
  %9054 = inttoptr i64 %9049 to i32*
  store i32 %9050, i32* %9054
  store %struct.Memory* %loadMem_480836, %struct.Memory** %MEMORY
  %loadMem_480839 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9056 = getelementptr inbounds %struct.GPR, %struct.GPR* %9055, i32 0, i32 33
  %9057 = getelementptr inbounds %struct.Reg, %struct.Reg* %9056, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %9057 to i64*
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9059 = getelementptr inbounds %struct.GPR, %struct.GPR* %9058, i32 0, i32 1
  %9060 = getelementptr inbounds %struct.Reg, %struct.Reg* %9059, i32 0, i32 0
  %9061 = bitcast %union.anon* %9060 to %struct.anon.2*
  %AL.i867 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9061, i32 0, i32 0
  %9062 = load i64, i64* %PC.i866
  %9063 = add i64 %9062, 2
  store i64 %9063, i64* %PC.i866
  store i8 3, i8* %AL.i867, align 1
  store %struct.Memory* %loadMem_480839, %struct.Memory** %MEMORY
  %loadMem1_48083b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9065 = getelementptr inbounds %struct.GPR, %struct.GPR* %9064, i32 0, i32 33
  %9066 = getelementptr inbounds %struct.Reg, %struct.Reg* %9065, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %9066 to i64*
  %9067 = load i64, i64* %PC.i865
  %9068 = add i64 %9067, -522091
  %9069 = load i64, i64* %PC.i865
  %9070 = add i64 %9069, 5
  %9071 = load i64, i64* %PC.i865
  %9072 = add i64 %9071, 5
  store i64 %9072, i64* %PC.i865
  %9073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9074 = load i64, i64* %9073, align 8
  %9075 = add i64 %9074, -8
  %9076 = inttoptr i64 %9075 to i64*
  store i64 %9070, i64* %9076
  store i64 %9075, i64* %9073, align 8
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9068, i64* %9077, align 8
  store %struct.Memory* %loadMem1_48083b, %struct.Memory** %MEMORY
  %loadMem2_48083b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48083b = load i64, i64* %3
  %9078 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_48083b)
  store %struct.Memory* %9078, %struct.Memory** %MEMORY
  %loadMem_480840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9080 = getelementptr inbounds %struct.GPR, %struct.GPR* %9079, i32 0, i32 33
  %9081 = getelementptr inbounds %struct.Reg, %struct.Reg* %9080, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %9081 to i64*
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9083 = getelementptr inbounds %struct.GPR, %struct.GPR* %9082, i32 0, i32 1
  %9084 = getelementptr inbounds %struct.Reg, %struct.Reg* %9083, i32 0, i32 0
  %EAX.i862 = bitcast %union.anon* %9084 to i32*
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9086 = getelementptr inbounds %struct.GPR, %struct.GPR* %9085, i32 0, i32 15
  %9087 = getelementptr inbounds %struct.Reg, %struct.Reg* %9086, i32 0, i32 0
  %RBP.i863 = bitcast %union.anon* %9087 to i64*
  %9088 = load i64, i64* %RBP.i863
  %9089 = sub i64 %9088, 128
  %9090 = load i32, i32* %EAX.i862
  %9091 = zext i32 %9090 to i64
  %9092 = load i64, i64* %PC.i861
  %9093 = add i64 %9092, 3
  store i64 %9093, i64* %PC.i861
  %9094 = inttoptr i64 %9089 to i32*
  store i32 %9090, i32* %9094
  store %struct.Memory* %loadMem_480840, %struct.Memory** %MEMORY
  br label %block_.L_480843

block_.L_480843:                                  ; preds = %block_480798, %block_480771
  %loadMem_480843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9096 = getelementptr inbounds %struct.GPR, %struct.GPR* %9095, i32 0, i32 33
  %9097 = getelementptr inbounds %struct.Reg, %struct.Reg* %9096, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %9097 to i64*
  %9098 = load i64, i64* %PC.i860
  %9099 = add i64 %9098, 5
  %9100 = load i64, i64* %PC.i860
  %9101 = add i64 %9100, 5
  store i64 %9101, i64* %PC.i860
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9099, i64* %9102, align 8
  store %struct.Memory* %loadMem_480843, %struct.Memory** %MEMORY
  br label %block_.L_480848

block_.L_480848:                                  ; preds = %block_.L_480843, %block_.L_480739
  %loadMem_480848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9104 = getelementptr inbounds %struct.GPR, %struct.GPR* %9103, i32 0, i32 33
  %9105 = getelementptr inbounds %struct.Reg, %struct.Reg* %9104, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %9105 to i64*
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9107 = getelementptr inbounds %struct.GPR, %struct.GPR* %9106, i32 0, i32 11
  %9108 = getelementptr inbounds %struct.Reg, %struct.Reg* %9107, i32 0, i32 0
  %RDI.i858 = bitcast %union.anon* %9108 to i64*
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 15
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %RBP.i859 = bitcast %union.anon* %9111 to i64*
  %9112 = load i64, i64* %RBP.i859
  %9113 = sub i64 %9112, 8
  %9114 = load i64, i64* %PC.i857
  %9115 = add i64 %9114, 3
  store i64 %9115, i64* %PC.i857
  %9116 = inttoptr i64 %9113 to i32*
  %9117 = load i32, i32* %9116
  %9118 = zext i32 %9117 to i64
  store i64 %9118, i64* %RDI.i858, align 8
  store %struct.Memory* %loadMem_480848, %struct.Memory** %MEMORY
  %loadMem_48084b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9120 = getelementptr inbounds %struct.GPR, %struct.GPR* %9119, i32 0, i32 33
  %9121 = getelementptr inbounds %struct.Reg, %struct.Reg* %9120, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %9121 to i64*
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9123 = getelementptr inbounds %struct.GPR, %struct.GPR* %9122, i32 0, i32 9
  %9124 = getelementptr inbounds %struct.Reg, %struct.Reg* %9123, i32 0, i32 0
  %RSI.i855 = bitcast %union.anon* %9124 to i64*
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9126 = getelementptr inbounds %struct.GPR, %struct.GPR* %9125, i32 0, i32 15
  %9127 = getelementptr inbounds %struct.Reg, %struct.Reg* %9126, i32 0, i32 0
  %RBP.i856 = bitcast %union.anon* %9127 to i64*
  %9128 = load i64, i64* %RBP.i856
  %9129 = sub i64 %9128, 12
  %9130 = load i64, i64* %PC.i854
  %9131 = add i64 %9130, 3
  store i64 %9131, i64* %PC.i854
  %9132 = inttoptr i64 %9129 to i32*
  %9133 = load i32, i32* %9132
  %9134 = zext i32 %9133 to i64
  store i64 %9134, i64* %RSI.i855, align 8
  store %struct.Memory* %loadMem_48084b, %struct.Memory** %MEMORY
  %loadMem1_48084e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9136 = getelementptr inbounds %struct.GPR, %struct.GPR* %9135, i32 0, i32 33
  %9137 = getelementptr inbounds %struct.Reg, %struct.Reg* %9136, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %9137 to i64*
  %9138 = load i64, i64* %PC.i853
  %9139 = add i64 %9138, 17986
  %9140 = load i64, i64* %PC.i853
  %9141 = add i64 %9140, 5
  %9142 = load i64, i64* %PC.i853
  %9143 = add i64 %9142, 5
  store i64 %9143, i64* %PC.i853
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9145 = load i64, i64* %9144, align 8
  %9146 = add i64 %9145, -8
  %9147 = inttoptr i64 %9146 to i64*
  store i64 %9141, i64* %9147
  store i64 %9146, i64* %9144, align 8
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9139, i64* %9148, align 8
  store %struct.Memory* %loadMem1_48084e, %struct.Memory** %MEMORY
  %loadMem2_48084e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48084e = load i64, i64* %3
  %call2_48084e = call %struct.Memory* @sub_484e90.move_connects_strings(%struct.State* %0, i64 %loadPC_48084e, %struct.Memory* %loadMem2_48084e)
  store %struct.Memory* %call2_48084e, %struct.Memory** %MEMORY
  %loadMem_480853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9150 = getelementptr inbounds %struct.GPR, %struct.GPR* %9149, i32 0, i32 33
  %9151 = getelementptr inbounds %struct.Reg, %struct.Reg* %9150, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %9151 to i64*
  %9152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9153 = getelementptr inbounds %struct.GPR, %struct.GPR* %9152, i32 0, i32 9
  %9154 = getelementptr inbounds %struct.Reg, %struct.Reg* %9153, i32 0, i32 0
  %RSI.i852 = bitcast %union.anon* %9154 to i64*
  %9155 = load i64, i64* %PC.i851
  %9156 = add i64 %9155, 5
  store i64 %9156, i64* %PC.i851
  store i64 3, i64* %RSI.i852, align 8
  store %struct.Memory* %loadMem_480853, %struct.Memory** %MEMORY
  %loadMem_480858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9158 = getelementptr inbounds %struct.GPR, %struct.GPR* %9157, i32 0, i32 33
  %9159 = getelementptr inbounds %struct.Reg, %struct.Reg* %9158, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %9159 to i64*
  %9160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9161 = getelementptr inbounds %struct.GPR, %struct.GPR* %9160, i32 0, i32 11
  %9162 = getelementptr inbounds %struct.Reg, %struct.Reg* %9161, i32 0, i32 0
  %RDI.i849 = bitcast %union.anon* %9162 to i64*
  %9163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9164 = getelementptr inbounds %struct.GPR, %struct.GPR* %9163, i32 0, i32 15
  %9165 = getelementptr inbounds %struct.Reg, %struct.Reg* %9164, i32 0, i32 0
  %RBP.i850 = bitcast %union.anon* %9165 to i64*
  %9166 = load i64, i64* %RBP.i850
  %9167 = sub i64 %9166, 8
  %9168 = load i64, i64* %PC.i848
  %9169 = add i64 %9168, 3
  store i64 %9169, i64* %PC.i848
  %9170 = inttoptr i64 %9167 to i32*
  %9171 = load i32, i32* %9170
  %9172 = zext i32 %9171 to i64
  store i64 %9172, i64* %RDI.i849, align 8
  store %struct.Memory* %loadMem_480858, %struct.Memory** %MEMORY
  %loadMem_48085b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9174 = getelementptr inbounds %struct.GPR, %struct.GPR* %9173, i32 0, i32 33
  %9175 = getelementptr inbounds %struct.Reg, %struct.Reg* %9174, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %9175 to i64*
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9177 = getelementptr inbounds %struct.GPR, %struct.GPR* %9176, i32 0, i32 9
  %9178 = getelementptr inbounds %struct.Reg, %struct.Reg* %9177, i32 0, i32 0
  %RSI.i846 = bitcast %union.anon* %9178 to i64*
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9180 = getelementptr inbounds %struct.GPR, %struct.GPR* %9179, i32 0, i32 15
  %9181 = getelementptr inbounds %struct.Reg, %struct.Reg* %9180, i32 0, i32 0
  %RBP.i847 = bitcast %union.anon* %9181 to i64*
  %9182 = load i64, i64* %RSI.i846
  %9183 = load i64, i64* %RBP.i847
  %9184 = sub i64 %9183, 12
  %9185 = load i64, i64* %PC.i845
  %9186 = add i64 %9185, 3
  store i64 %9186, i64* %PC.i845
  %9187 = trunc i64 %9182 to i32
  %9188 = inttoptr i64 %9184 to i32*
  %9189 = load i32, i32* %9188
  %9190 = sub i32 %9187, %9189
  %9191 = zext i32 %9190 to i64
  store i64 %9191, i64* %RSI.i846, align 8
  %9192 = icmp ult i32 %9187, %9189
  %9193 = zext i1 %9192 to i8
  %9194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9193, i8* %9194, align 1
  %9195 = and i32 %9190, 255
  %9196 = call i32 @llvm.ctpop.i32(i32 %9195)
  %9197 = trunc i32 %9196 to i8
  %9198 = and i8 %9197, 1
  %9199 = xor i8 %9198, 1
  %9200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9199, i8* %9200, align 1
  %9201 = xor i32 %9189, %9187
  %9202 = xor i32 %9201, %9190
  %9203 = lshr i32 %9202, 4
  %9204 = trunc i32 %9203 to i8
  %9205 = and i8 %9204, 1
  %9206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9205, i8* %9206, align 1
  %9207 = icmp eq i32 %9190, 0
  %9208 = zext i1 %9207 to i8
  %9209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9208, i8* %9209, align 1
  %9210 = lshr i32 %9190, 31
  %9211 = trunc i32 %9210 to i8
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9211, i8* %9212, align 1
  %9213 = lshr i32 %9187, 31
  %9214 = lshr i32 %9189, 31
  %9215 = xor i32 %9214, %9213
  %9216 = xor i32 %9210, %9213
  %9217 = add i32 %9216, %9215
  %9218 = icmp eq i32 %9217, 2
  %9219 = zext i1 %9218 to i8
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9219, i8* %9220, align 1
  store %struct.Memory* %loadMem_48085b, %struct.Memory** %MEMORY
  %loadMem_48085e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9222 = getelementptr inbounds %struct.GPR, %struct.GPR* %9221, i32 0, i32 33
  %9223 = getelementptr inbounds %struct.Reg, %struct.Reg* %9222, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %9223 to i64*
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9225 = getelementptr inbounds %struct.GPR, %struct.GPR* %9224, i32 0, i32 1
  %9226 = getelementptr inbounds %struct.Reg, %struct.Reg* %9225, i32 0, i32 0
  %EAX.i843 = bitcast %union.anon* %9226 to i32*
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9228 = getelementptr inbounds %struct.GPR, %struct.GPR* %9227, i32 0, i32 15
  %9229 = getelementptr inbounds %struct.Reg, %struct.Reg* %9228, i32 0, i32 0
  %RBP.i844 = bitcast %union.anon* %9229 to i64*
  %9230 = load i64, i64* %RBP.i844
  %9231 = sub i64 %9230, 132
  %9232 = load i32, i32* %EAX.i843
  %9233 = zext i32 %9232 to i64
  %9234 = load i64, i64* %PC.i842
  %9235 = add i64 %9234, 6
  store i64 %9235, i64* %PC.i842
  %9236 = inttoptr i64 %9231 to i32*
  store i32 %9232, i32* %9236
  store %struct.Memory* %loadMem_48085e, %struct.Memory** %MEMORY
  %loadMem1_480864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9238 = getelementptr inbounds %struct.GPR, %struct.GPR* %9237, i32 0, i32 33
  %9239 = getelementptr inbounds %struct.Reg, %struct.Reg* %9238, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %9239 to i64*
  %9240 = load i64, i64* %PC.i841
  %9241 = add i64 %9240, 17964
  %9242 = load i64, i64* %PC.i841
  %9243 = add i64 %9242, 5
  %9244 = load i64, i64* %PC.i841
  %9245 = add i64 %9244, 5
  store i64 %9245, i64* %PC.i841
  %9246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9247 = load i64, i64* %9246, align 8
  %9248 = add i64 %9247, -8
  %9249 = inttoptr i64 %9248 to i64*
  store i64 %9243, i64* %9249
  store i64 %9248, i64* %9246, align 8
  %9250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9241, i64* %9250, align 8
  store %struct.Memory* %loadMem1_480864, %struct.Memory** %MEMORY
  %loadMem2_480864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480864 = load i64, i64* %3
  %call2_480864 = call %struct.Memory* @sub_484e90.move_connects_strings(%struct.State* %0, i64 %loadPC_480864, %struct.Memory* %loadMem2_480864)
  store %struct.Memory* %call2_480864, %struct.Memory** %MEMORY
  %loadMem_480869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9252 = getelementptr inbounds %struct.GPR, %struct.GPR* %9251, i32 0, i32 33
  %9253 = getelementptr inbounds %struct.Reg, %struct.Reg* %9252, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %9253 to i64*
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9255 = getelementptr inbounds %struct.GPR, %struct.GPR* %9254, i32 0, i32 9
  %9256 = getelementptr inbounds %struct.Reg, %struct.Reg* %9255, i32 0, i32 0
  %RSI.i839 = bitcast %union.anon* %9256 to i64*
  %9257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9258 = getelementptr inbounds %struct.GPR, %struct.GPR* %9257, i32 0, i32 15
  %9259 = getelementptr inbounds %struct.Reg, %struct.Reg* %9258, i32 0, i32 0
  %RBP.i840 = bitcast %union.anon* %9259 to i64*
  %9260 = load i64, i64* %RBP.i840
  %9261 = sub i64 %9260, 132
  %9262 = load i64, i64* %PC.i838
  %9263 = add i64 %9262, 6
  store i64 %9263, i64* %PC.i838
  %9264 = inttoptr i64 %9261 to i32*
  %9265 = load i32, i32* %9264
  %9266 = zext i32 %9265 to i64
  store i64 %9266, i64* %RSI.i839, align 8
  store %struct.Memory* %loadMem_480869, %struct.Memory** %MEMORY
  %loadMem_48086f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9268 = getelementptr inbounds %struct.GPR, %struct.GPR* %9267, i32 0, i32 33
  %9269 = getelementptr inbounds %struct.Reg, %struct.Reg* %9268, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %9269 to i64*
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9271 = getelementptr inbounds %struct.GPR, %struct.GPR* %9270, i32 0, i32 1
  %9272 = getelementptr inbounds %struct.Reg, %struct.Reg* %9271, i32 0, i32 0
  %EAX.i836 = bitcast %union.anon* %9272 to i32*
  %9273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9274 = getelementptr inbounds %struct.GPR, %struct.GPR* %9273, i32 0, i32 9
  %9275 = getelementptr inbounds %struct.Reg, %struct.Reg* %9274, i32 0, i32 0
  %RSI.i837 = bitcast %union.anon* %9275 to i64*
  %9276 = load i64, i64* %RSI.i837
  %9277 = load i32, i32* %EAX.i836
  %9278 = zext i32 %9277 to i64
  %9279 = load i64, i64* %PC.i835
  %9280 = add i64 %9279, 2
  store i64 %9280, i64* %PC.i835
  %9281 = trunc i64 %9276 to i32
  %9282 = add i32 %9277, %9281
  %9283 = zext i32 %9282 to i64
  store i64 %9283, i64* %RSI.i837, align 8
  %9284 = icmp ult i32 %9282, %9281
  %9285 = icmp ult i32 %9282, %9277
  %9286 = or i1 %9284, %9285
  %9287 = zext i1 %9286 to i8
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9287, i8* %9288, align 1
  %9289 = and i32 %9282, 255
  %9290 = call i32 @llvm.ctpop.i32(i32 %9289)
  %9291 = trunc i32 %9290 to i8
  %9292 = and i8 %9291, 1
  %9293 = xor i8 %9292, 1
  %9294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9293, i8* %9294, align 1
  %9295 = xor i64 %9278, %9276
  %9296 = trunc i64 %9295 to i32
  %9297 = xor i32 %9296, %9282
  %9298 = lshr i32 %9297, 4
  %9299 = trunc i32 %9298 to i8
  %9300 = and i8 %9299, 1
  %9301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9300, i8* %9301, align 1
  %9302 = icmp eq i32 %9282, 0
  %9303 = zext i1 %9302 to i8
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9303, i8* %9304, align 1
  %9305 = lshr i32 %9282, 31
  %9306 = trunc i32 %9305 to i8
  %9307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9306, i8* %9307, align 1
  %9308 = lshr i32 %9281, 31
  %9309 = lshr i32 %9277, 31
  %9310 = xor i32 %9305, %9308
  %9311 = xor i32 %9305, %9309
  %9312 = add i32 %9310, %9311
  %9313 = icmp eq i32 %9312, 2
  %9314 = zext i1 %9313 to i8
  %9315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9314, i8* %9315, align 1
  store %struct.Memory* %loadMem_48086f, %struct.Memory** %MEMORY
  %loadMem_480871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9317 = getelementptr inbounds %struct.GPR, %struct.GPR* %9316, i32 0, i32 33
  %9318 = getelementptr inbounds %struct.Reg, %struct.Reg* %9317, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %9318 to i64*
  %9319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9320 = getelementptr inbounds %struct.GPR, %struct.GPR* %9319, i32 0, i32 9
  %9321 = getelementptr inbounds %struct.Reg, %struct.Reg* %9320, i32 0, i32 0
  %ESI.i833 = bitcast %union.anon* %9321 to i32*
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9323 = getelementptr inbounds %struct.GPR, %struct.GPR* %9322, i32 0, i32 15
  %9324 = getelementptr inbounds %struct.Reg, %struct.Reg* %9323, i32 0, i32 0
  %RBP.i834 = bitcast %union.anon* %9324 to i64*
  %9325 = load i64, i64* %RBP.i834
  %9326 = sub i64 %9325, 36
  %9327 = load i32, i32* %ESI.i833
  %9328 = zext i32 %9327 to i64
  %9329 = load i64, i64* %PC.i832
  %9330 = add i64 %9329, 3
  store i64 %9330, i64* %PC.i832
  %9331 = inttoptr i64 %9326 to i32*
  store i32 %9327, i32* %9331
  store %struct.Memory* %loadMem_480871, %struct.Memory** %MEMORY
  %loadMem_480874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9333 = getelementptr inbounds %struct.GPR, %struct.GPR* %9332, i32 0, i32 33
  %9334 = getelementptr inbounds %struct.Reg, %struct.Reg* %9333, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %9334 to i64*
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9336 = getelementptr inbounds %struct.GPR, %struct.GPR* %9335, i32 0, i32 15
  %9337 = getelementptr inbounds %struct.Reg, %struct.Reg* %9336, i32 0, i32 0
  %RBP.i831 = bitcast %union.anon* %9337 to i64*
  %9338 = load i64, i64* %RBP.i831
  %9339 = sub i64 %9338, 36
  %9340 = load i64, i64* %PC.i830
  %9341 = add i64 %9340, 4
  store i64 %9341, i64* %PC.i830
  %9342 = inttoptr i64 %9339 to i32*
  %9343 = load i32, i32* %9342
  %9344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9344, align 1
  %9345 = and i32 %9343, 255
  %9346 = call i32 @llvm.ctpop.i32(i32 %9345)
  %9347 = trunc i32 %9346 to i8
  %9348 = and i8 %9347, 1
  %9349 = xor i8 %9348, 1
  %9350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9349, i8* %9350, align 1
  %9351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9351, align 1
  %9352 = icmp eq i32 %9343, 0
  %9353 = zext i1 %9352 to i8
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9353, i8* %9354, align 1
  %9355 = lshr i32 %9343, 31
  %9356 = trunc i32 %9355 to i8
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9356, i8* %9357, align 1
  %9358 = lshr i32 %9343, 31
  %9359 = xor i32 %9355, %9358
  %9360 = add i32 %9359, %9358
  %9361 = icmp eq i32 %9360, 2
  %9362 = zext i1 %9361 to i8
  %9363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9362, i8* %9363, align 1
  store %struct.Memory* %loadMem_480874, %struct.Memory** %MEMORY
  %loadMem_480878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9365 = getelementptr inbounds %struct.GPR, %struct.GPR* %9364, i32 0, i32 33
  %9366 = getelementptr inbounds %struct.Reg, %struct.Reg* %9365, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %9366 to i64*
  %9367 = load i64, i64* %PC.i829
  %9368 = add i64 %9367, 366
  %9369 = load i64, i64* %PC.i829
  %9370 = add i64 %9369, 6
  %9371 = load i64, i64* %PC.i829
  %9372 = add i64 %9371, 6
  store i64 %9372, i64* %PC.i829
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9374 = load i8, i8* %9373, align 1
  %9375 = icmp ne i8 %9374, 0
  %9376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9377 = load i8, i8* %9376, align 1
  %9378 = icmp ne i8 %9377, 0
  %9379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9380 = load i8, i8* %9379, align 1
  %9381 = icmp ne i8 %9380, 0
  %9382 = xor i1 %9378, %9381
  %9383 = or i1 %9375, %9382
  %9384 = zext i1 %9383 to i8
  store i8 %9384, i8* %BRANCH_TAKEN, align 1
  %9385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9386 = select i1 %9383, i64 %9368, i64 %9370
  store i64 %9386, i64* %9385, align 8
  store %struct.Memory* %loadMem_480878, %struct.Memory** %MEMORY
  %loadBr_480878 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480878 = icmp eq i8 %loadBr_480878, 1
  br i1 %cmpBr_480878, label %block_.L_4809e6, label %block_48087e

block_48087e:                                     ; preds = %block_.L_480848
  %loadMem_48087e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9388 = getelementptr inbounds %struct.GPR, %struct.GPR* %9387, i32 0, i32 33
  %9389 = getelementptr inbounds %struct.Reg, %struct.Reg* %9388, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %9389 to i64*
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9391 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9390, i64 0, i64 0
  %YMM0.i828 = bitcast %union.VectorReg* %9391 to %"class.std::bitset"*
  %9392 = bitcast %"class.std::bitset"* %YMM0.i828 to i8*
  %9393 = load i64, i64* %PC.i827
  %9394 = add i64 %9393, ptrtoint (%G_0x62812__rip__type* @G_0x62812__rip_ to i64)
  %9395 = load i64, i64* %PC.i827
  %9396 = add i64 %9395, 8
  store i64 %9396, i64* %PC.i827
  %9397 = inttoptr i64 %9394 to double*
  %9398 = load double, double* %9397
  %9399 = bitcast i8* %9392 to double*
  store double %9398, double* %9399, align 1
  %9400 = getelementptr inbounds i8, i8* %9392, i64 8
  %9401 = bitcast i8* %9400 to double*
  store double 0.000000e+00, double* %9401, align 1
  store %struct.Memory* %loadMem_48087e, %struct.Memory** %MEMORY
  %loadMem_480886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9403 = getelementptr inbounds %struct.GPR, %struct.GPR* %9402, i32 0, i32 33
  %9404 = getelementptr inbounds %struct.Reg, %struct.Reg* %9403, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %9404 to i64*
  %9405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9406 = getelementptr inbounds %struct.GPR, %struct.GPR* %9405, i32 0, i32 15
  %9407 = getelementptr inbounds %struct.Reg, %struct.Reg* %9406, i32 0, i32 0
  %RBP.i825 = bitcast %union.anon* %9407 to i64*
  %9408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9409 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9408, i64 0, i64 1
  %YMM1.i826 = bitcast %union.VectorReg* %9409 to %"class.std::bitset"*
  %9410 = bitcast %"class.std::bitset"* %YMM1.i826 to i8*
  %9411 = load i64, i64* %RBP.i825
  %9412 = sub i64 %9411, 36
  %9413 = load i64, i64* %PC.i824
  %9414 = add i64 %9413, 5
  store i64 %9414, i64* %PC.i824
  %9415 = bitcast i8* %9410 to <2 x i32>*
  %9416 = load <2 x i32>, <2 x i32>* %9415, align 1
  %9417 = getelementptr inbounds i8, i8* %9410, i64 8
  %9418 = bitcast i8* %9417 to <2 x i32>*
  %9419 = load <2 x i32>, <2 x i32>* %9418, align 1
  %9420 = inttoptr i64 %9412 to i32*
  %9421 = load i32, i32* %9420
  %9422 = sitofp i32 %9421 to float
  %9423 = bitcast i8* %9410 to float*
  store float %9422, float* %9423, align 1
  %9424 = extractelement <2 x i32> %9416, i32 1
  %9425 = getelementptr inbounds i8, i8* %9410, i64 4
  %9426 = bitcast i8* %9425 to i32*
  store i32 %9424, i32* %9426, align 1
  %9427 = extractelement <2 x i32> %9419, i32 0
  %9428 = bitcast i8* %9417 to i32*
  store i32 %9427, i32* %9428, align 1
  %9429 = extractelement <2 x i32> %9419, i32 1
  %9430 = getelementptr inbounds i8, i8* %9410, i64 12
  %9431 = bitcast i8* %9430 to i32*
  store i32 %9429, i32* %9431, align 1
  store %struct.Memory* %loadMem_480886, %struct.Memory** %MEMORY
  %loadMem_48088b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9433 = getelementptr inbounds %struct.GPR, %struct.GPR* %9432, i32 0, i32 33
  %9434 = getelementptr inbounds %struct.Reg, %struct.Reg* %9433, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %9434 to i64*
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9436 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9435, i64 0, i64 1
  %YMM1.i822 = bitcast %union.VectorReg* %9436 to %"class.std::bitset"*
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9438 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9437, i64 0, i64 1
  %XMM1.i823 = bitcast %union.VectorReg* %9438 to %union.vec128_t*
  %9439 = bitcast %"class.std::bitset"* %YMM1.i822 to i8*
  %9440 = bitcast %union.vec128_t* %XMM1.i823 to i8*
  %9441 = load i64, i64* %PC.i821
  %9442 = add i64 %9441, 4
  store i64 %9442, i64* %PC.i821
  %9443 = bitcast i8* %9440 to <2 x float>*
  %9444 = load <2 x float>, <2 x float>* %9443, align 1
  %9445 = extractelement <2 x float> %9444, i32 0
  %9446 = fpext float %9445 to double
  %9447 = bitcast i8* %9439 to double*
  store double %9446, double* %9447, align 1
  store %struct.Memory* %loadMem_48088b, %struct.Memory** %MEMORY
  %loadMem1_48088f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9449 = getelementptr inbounds %struct.GPR, %struct.GPR* %9448, i32 0, i32 33
  %9450 = getelementptr inbounds %struct.Reg, %struct.Reg* %9449, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %9450 to i64*
  %9451 = load i64, i64* %PC.i820
  %9452 = add i64 %9451, -522255
  %9453 = load i64, i64* %PC.i820
  %9454 = add i64 %9453, 5
  %9455 = load i64, i64* %PC.i820
  %9456 = add i64 %9455, 5
  store i64 %9456, i64* %PC.i820
  %9457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9458 = load i64, i64* %9457, align 8
  %9459 = add i64 %9458, -8
  %9460 = inttoptr i64 %9459 to i64*
  store i64 %9454, i64* %9460
  store i64 %9459, i64* %9457, align 8
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9452, i64* %9461, align 8
  store %struct.Memory* %loadMem1_48088f, %struct.Memory** %MEMORY
  %loadMem2_48088f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48088f = load i64, i64* %3
  %9462 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %loadMem2_48088f)
  store %struct.Memory* %9462, %struct.Memory** %MEMORY
  %loadMem_480894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9464 = getelementptr inbounds %struct.GPR, %struct.GPR* %9463, i32 0, i32 33
  %9465 = getelementptr inbounds %struct.Reg, %struct.Reg* %9464, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %9465 to i64*
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9467 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9466, i64 0, i64 1
  %YMM1.i817 = bitcast %union.VectorReg* %9467 to %"class.std::bitset"*
  %9468 = bitcast %"class.std::bitset"* %YMM1.i817 to i8*
  %9469 = load i64, i64* %PC.i816
  %9470 = add i64 %9469, ptrtoint (%G_0x6276c__rip__type* @G_0x6276c__rip_ to i64)
  %9471 = load i64, i64* %PC.i816
  %9472 = add i64 %9471, 8
  store i64 %9472, i64* %PC.i816
  %9473 = inttoptr i64 %9470 to double*
  %9474 = load double, double* %9473
  %9475 = bitcast i8* %9468 to double*
  store double %9474, double* %9475, align 1
  %9476 = getelementptr inbounds i8, i8* %9468, i64 8
  %9477 = bitcast i8* %9476 to double*
  store double 0.000000e+00, double* %9477, align 1
  store %struct.Memory* %loadMem_480894, %struct.Memory** %MEMORY
  %loadMem_48089c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9479 = getelementptr inbounds %struct.GPR, %struct.GPR* %9478, i32 0, i32 33
  %9480 = getelementptr inbounds %struct.Reg, %struct.Reg* %9479, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %9480 to i64*
  %9481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9482 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9481, i64 0, i64 2
  %YMM2.i815 = bitcast %union.VectorReg* %9482 to %"class.std::bitset"*
  %9483 = bitcast %"class.std::bitset"* %YMM2.i815 to i8*
  %9484 = load i64, i64* %PC.i814
  %9485 = add i64 %9484, ptrtoint (%G_0x626bc__rip__type* @G_0x626bc__rip_ to i64)
  %9486 = load i64, i64* %PC.i814
  %9487 = add i64 %9486, 8
  store i64 %9487, i64* %PC.i814
  %9488 = inttoptr i64 %9485 to double*
  %9489 = load double, double* %9488
  %9490 = bitcast i8* %9483 to double*
  store double %9489, double* %9490, align 1
  %9491 = getelementptr inbounds i8, i8* %9483, i64 8
  %9492 = bitcast i8* %9491 to double*
  store double 0.000000e+00, double* %9492, align 1
  store %struct.Memory* %loadMem_48089c, %struct.Memory** %MEMORY
  %loadMem_4808a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9494 = getelementptr inbounds %struct.GPR, %struct.GPR* %9493, i32 0, i32 33
  %9495 = getelementptr inbounds %struct.Reg, %struct.Reg* %9494, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %9495 to i64*
  %9496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9497 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9496, i64 0, i64 0
  %YMM0.i812 = bitcast %union.VectorReg* %9497 to %"class.std::bitset"*
  %9498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9499 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9498, i64 0, i64 2
  %XMM2.i813 = bitcast %union.VectorReg* %9499 to %union.vec128_t*
  %9500 = bitcast %"class.std::bitset"* %YMM0.i812 to i8*
  %9501 = bitcast %"class.std::bitset"* %YMM0.i812 to i8*
  %9502 = bitcast %union.vec128_t* %XMM2.i813 to i8*
  %9503 = load i64, i64* %PC.i811
  %9504 = add i64 %9503, 4
  store i64 %9504, i64* %PC.i811
  %9505 = bitcast i8* %9501 to double*
  %9506 = load double, double* %9505, align 1
  %9507 = getelementptr inbounds i8, i8* %9501, i64 8
  %9508 = bitcast i8* %9507 to i64*
  %9509 = load i64, i64* %9508, align 1
  %9510 = bitcast i8* %9502 to double*
  %9511 = load double, double* %9510, align 1
  %9512 = fsub double %9506, %9511
  %9513 = bitcast i8* %9500 to double*
  store double %9512, double* %9513, align 1
  %9514 = getelementptr inbounds i8, i8* %9500, i64 8
  %9515 = bitcast i8* %9514 to i64*
  store i64 %9509, i64* %9515, align 1
  store %struct.Memory* %loadMem_4808a4, %struct.Memory** %MEMORY
  %loadMem_4808a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9517 = getelementptr inbounds %struct.GPR, %struct.GPR* %9516, i32 0, i32 33
  %9518 = getelementptr inbounds %struct.Reg, %struct.Reg* %9517, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %9518 to i64*
  %9519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9520 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9519, i64 0, i64 0
  %YMM0.i809 = bitcast %union.VectorReg* %9520 to %"class.std::bitset"*
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9522 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9521, i64 0, i64 0
  %XMM0.i810 = bitcast %union.VectorReg* %9522 to %union.vec128_t*
  %9523 = bitcast %"class.std::bitset"* %YMM0.i809 to i8*
  %9524 = bitcast %union.vec128_t* %XMM0.i810 to i8*
  %9525 = load i64, i64* %PC.i808
  %9526 = add i64 %9525, 4
  store i64 %9526, i64* %PC.i808
  %9527 = bitcast i8* %9523 to <2 x i32>*
  %9528 = load <2 x i32>, <2 x i32>* %9527, align 1
  %9529 = getelementptr inbounds i8, i8* %9523, i64 8
  %9530 = bitcast i8* %9529 to <2 x i32>*
  %9531 = load <2 x i32>, <2 x i32>* %9530, align 1
  %9532 = bitcast i8* %9524 to double*
  %9533 = load double, double* %9532, align 1
  %9534 = fptrunc double %9533 to float
  %9535 = bitcast i8* %9523 to float*
  store float %9534, float* %9535, align 1
  %9536 = extractelement <2 x i32> %9528, i32 1
  %9537 = getelementptr inbounds i8, i8* %9523, i64 4
  %9538 = bitcast i8* %9537 to i32*
  store i32 %9536, i32* %9538, align 1
  %9539 = extractelement <2 x i32> %9531, i32 0
  %9540 = bitcast i8* %9529 to i32*
  store i32 %9539, i32* %9540, align 1
  %9541 = extractelement <2 x i32> %9531, i32 1
  %9542 = getelementptr inbounds i8, i8* %9523, i64 12
  %9543 = bitcast i8* %9542 to i32*
  store i32 %9541, i32* %9543, align 1
  store %struct.Memory* %loadMem_4808a8, %struct.Memory** %MEMORY
  %loadMem_4808ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9545 = getelementptr inbounds %struct.GPR, %struct.GPR* %9544, i32 0, i32 33
  %9546 = getelementptr inbounds %struct.Reg, %struct.Reg* %9545, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %9546 to i64*
  %9547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9548 = getelementptr inbounds %struct.GPR, %struct.GPR* %9547, i32 0, i32 15
  %9549 = getelementptr inbounds %struct.Reg, %struct.Reg* %9548, i32 0, i32 0
  %RBP.i806 = bitcast %union.anon* %9549 to i64*
  %9550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9551 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9550, i64 0, i64 0
  %XMM0.i807 = bitcast %union.VectorReg* %9551 to %union.vec128_t*
  %9552 = load i64, i64* %RBP.i806
  %9553 = sub i64 %9552, 56
  %9554 = bitcast %union.vec128_t* %XMM0.i807 to i8*
  %9555 = load i64, i64* %PC.i805
  %9556 = add i64 %9555, 5
  store i64 %9556, i64* %PC.i805
  %9557 = bitcast i8* %9554 to <2 x float>*
  %9558 = load <2 x float>, <2 x float>* %9557, align 1
  %9559 = extractelement <2 x float> %9558, i32 0
  %9560 = inttoptr i64 %9553 to float*
  store float %9559, float* %9560
  store %struct.Memory* %loadMem_4808ac, %struct.Memory** %MEMORY
  %loadMem_4808b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9562 = getelementptr inbounds %struct.GPR, %struct.GPR* %9561, i32 0, i32 33
  %9563 = getelementptr inbounds %struct.Reg, %struct.Reg* %9562, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %9563 to i64*
  %9564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9565 = getelementptr inbounds %struct.GPR, %struct.GPR* %9564, i32 0, i32 15
  %9566 = getelementptr inbounds %struct.Reg, %struct.Reg* %9565, i32 0, i32 0
  %RBP.i803 = bitcast %union.anon* %9566 to i64*
  %9567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9568 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9567, i64 0, i64 0
  %YMM0.i804 = bitcast %union.VectorReg* %9568 to %"class.std::bitset"*
  %9569 = bitcast %"class.std::bitset"* %YMM0.i804 to i8*
  %9570 = load i64, i64* %RBP.i803
  %9571 = sub i64 %9570, 24
  %9572 = load i64, i64* %PC.i802
  %9573 = add i64 %9572, 5
  store i64 %9573, i64* %PC.i802
  %9574 = inttoptr i64 %9571 to float*
  %9575 = load float, float* %9574
  %9576 = fpext float %9575 to double
  %9577 = bitcast i8* %9569 to double*
  store double %9576, double* %9577, align 1
  store %struct.Memory* %loadMem_4808b1, %struct.Memory** %MEMORY
  %loadMem_4808b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9579 = getelementptr inbounds %struct.GPR, %struct.GPR* %9578, i32 0, i32 33
  %9580 = getelementptr inbounds %struct.Reg, %struct.Reg* %9579, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %9580 to i64*
  %9581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9582 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9581, i64 0, i64 0
  %XMM0.i798 = bitcast %union.VectorReg* %9582 to %union.vec128_t*
  %9583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9584 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9583, i64 0, i64 1
  %XMM1.i799 = bitcast %union.VectorReg* %9584 to %union.vec128_t*
  %9585 = bitcast %union.vec128_t* %XMM1.i799 to i8*
  %9586 = bitcast %union.vec128_t* %XMM0.i798 to i8*
  %9587 = load i64, i64* %PC.i797
  %9588 = add i64 %9587, 4
  store i64 %9588, i64* %PC.i797
  %9589 = bitcast i8* %9585 to double*
  %9590 = load double, double* %9589, align 1
  %9591 = bitcast i8* %9586 to double*
  %9592 = load double, double* %9591, align 1
  %9593 = fcmp uno double %9590, %9592
  br i1 %9593, label %9594, label %9606

; <label>:9594:                                   ; preds = %block_48087e
  %9595 = fadd double %9590, %9592
  %9596 = bitcast double %9595 to i64
  %9597 = and i64 %9596, 9221120237041090560
  %9598 = icmp eq i64 %9597, 9218868437227405312
  %9599 = and i64 %9596, 2251799813685247
  %9600 = icmp ne i64 %9599, 0
  %9601 = and i1 %9598, %9600
  br i1 %9601, label %9602, label %9612

; <label>:9602:                                   ; preds = %9594
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9604 = load i64, i64* %9603, align 8
  %9605 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9604, %struct.Memory* %loadMem_4808b6)
  br label %routine_ucomisd__xmm0___xmm1.exit800

; <label>:9606:                                   ; preds = %block_48087e
  %9607 = fcmp ogt double %9590, %9592
  br i1 %9607, label %9612, label %9608

; <label>:9608:                                   ; preds = %9606
  %9609 = fcmp olt double %9590, %9592
  br i1 %9609, label %9612, label %9610

; <label>:9610:                                   ; preds = %9608
  %9611 = fcmp oeq double %9590, %9592
  br i1 %9611, label %9612, label %9619

; <label>:9612:                                   ; preds = %9610, %9608, %9606, %9594
  %9613 = phi i8 [ 0, %9606 ], [ 0, %9608 ], [ 1, %9610 ], [ 1, %9594 ]
  %9614 = phi i8 [ 0, %9606 ], [ 0, %9608 ], [ 0, %9610 ], [ 1, %9594 ]
  %9615 = phi i8 [ 0, %9606 ], [ 1, %9608 ], [ 0, %9610 ], [ 1, %9594 ]
  %9616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9613, i8* %9616, align 1
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9614, i8* %9617, align 1
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9615, i8* %9618, align 1
  br label %9619

; <label>:9619:                                   ; preds = %9612, %9610
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9620, align 1
  %9621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9621, align 1
  %9622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9622, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit800

routine_ucomisd__xmm0___xmm1.exit800:             ; preds = %9602, %9619
  %9623 = phi %struct.Memory* [ %9605, %9602 ], [ %loadMem_4808b6, %9619 ]
  store %struct.Memory* %9623, %struct.Memory** %MEMORY
  %loadMem_4808ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %9624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9625 = getelementptr inbounds %struct.GPR, %struct.GPR* %9624, i32 0, i32 33
  %9626 = getelementptr inbounds %struct.Reg, %struct.Reg* %9625, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %9626 to i64*
  %9627 = load i64, i64* %PC.i796
  %9628 = add i64 %9627, 24
  %9629 = load i64, i64* %PC.i796
  %9630 = add i64 %9629, 6
  %9631 = load i64, i64* %PC.i796
  %9632 = add i64 %9631, 6
  store i64 %9632, i64* %PC.i796
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9634 = load i8, i8* %9633, align 1
  %9635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9636 = load i8, i8* %9635, align 1
  %9637 = or i8 %9636, %9634
  %9638 = icmp ne i8 %9637, 0
  %9639 = zext i1 %9638 to i8
  store i8 %9639, i8* %BRANCH_TAKEN, align 1
  %9640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9641 = select i1 %9638, i64 %9628, i64 %9630
  store i64 %9641, i64* %9640, align 8
  store %struct.Memory* %loadMem_4808ba, %struct.Memory** %MEMORY
  %loadBr_4808ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4808ba = icmp eq i8 %loadBr_4808ba, 1
  br i1 %cmpBr_4808ba, label %block_.L_4808d2, label %block_4808c0

block_4808c0:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit800
  %loadMem_4808c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9643 = getelementptr inbounds %struct.GPR, %struct.GPR* %9642, i32 0, i32 33
  %9644 = getelementptr inbounds %struct.Reg, %struct.Reg* %9643, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %9644 to i64*
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9646 = getelementptr inbounds %struct.GPR, %struct.GPR* %9645, i32 0, i32 15
  %9647 = getelementptr inbounds %struct.Reg, %struct.Reg* %9646, i32 0, i32 0
  %RBP.i794 = bitcast %union.anon* %9647 to i64*
  %9648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9649 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9648, i64 0, i64 0
  %YMM0.i795 = bitcast %union.VectorReg* %9649 to %"class.std::bitset"*
  %9650 = bitcast %"class.std::bitset"* %YMM0.i795 to i8*
  %9651 = load i64, i64* %RBP.i794
  %9652 = sub i64 %9651, 24
  %9653 = load i64, i64* %PC.i793
  %9654 = add i64 %9653, 5
  store i64 %9654, i64* %PC.i793
  %9655 = inttoptr i64 %9652 to float*
  %9656 = load float, float* %9655
  %9657 = fpext float %9656 to double
  %9658 = bitcast i8* %9650 to double*
  store double %9657, double* %9658, align 1
  store %struct.Memory* %loadMem_4808c0, %struct.Memory** %MEMORY
  %loadMem_4808c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9660 = getelementptr inbounds %struct.GPR, %struct.GPR* %9659, i32 0, i32 33
  %9661 = getelementptr inbounds %struct.Reg, %struct.Reg* %9660, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %9661 to i64*
  %9662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9663 = getelementptr inbounds %struct.GPR, %struct.GPR* %9662, i32 0, i32 15
  %9664 = getelementptr inbounds %struct.Reg, %struct.Reg* %9663, i32 0, i32 0
  %RBP.i791 = bitcast %union.anon* %9664 to i64*
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9666 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9665, i64 0, i64 0
  %XMM0.i792 = bitcast %union.VectorReg* %9666 to %union.vec128_t*
  %9667 = load i64, i64* %RBP.i791
  %9668 = sub i64 %9667, 144
  %9669 = bitcast %union.vec128_t* %XMM0.i792 to i8*
  %9670 = load i64, i64* %PC.i790
  %9671 = add i64 %9670, 8
  store i64 %9671, i64* %PC.i790
  %9672 = bitcast i8* %9669 to double*
  %9673 = load double, double* %9672, align 1
  %9674 = inttoptr i64 %9668 to double*
  store double %9673, double* %9674
  store %struct.Memory* %loadMem_4808c5, %struct.Memory** %MEMORY
  %loadMem_4808cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9676 = getelementptr inbounds %struct.GPR, %struct.GPR* %9675, i32 0, i32 33
  %9677 = getelementptr inbounds %struct.Reg, %struct.Reg* %9676, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %9677 to i64*
  %9678 = load i64, i64* %PC.i789
  %9679 = add i64 %9678, 26
  %9680 = load i64, i64* %PC.i789
  %9681 = add i64 %9680, 5
  store i64 %9681, i64* %PC.i789
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9679, i64* %9682, align 8
  store %struct.Memory* %loadMem_4808cd, %struct.Memory** %MEMORY
  br label %block_.L_4808e7

block_.L_4808d2:                                  ; preds = %routine_ucomisd__xmm0___xmm1.exit800
  %loadMem_4808d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9684 = getelementptr inbounds %struct.GPR, %struct.GPR* %9683, i32 0, i32 33
  %9685 = getelementptr inbounds %struct.Reg, %struct.Reg* %9684, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %9685 to i64*
  %9686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9687 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9686, i64 0, i64 0
  %YMM0.i788 = bitcast %union.VectorReg* %9687 to %"class.std::bitset"*
  %9688 = bitcast %"class.std::bitset"* %YMM0.i788 to i8*
  %9689 = load i64, i64* %PC.i787
  %9690 = add i64 %9689, ptrtoint (%G_0x6272e__rip__type* @G_0x6272e__rip_ to i64)
  %9691 = load i64, i64* %PC.i787
  %9692 = add i64 %9691, 8
  store i64 %9692, i64* %PC.i787
  %9693 = inttoptr i64 %9690 to double*
  %9694 = load double, double* %9693
  %9695 = bitcast i8* %9688 to double*
  store double %9694, double* %9695, align 1
  %9696 = getelementptr inbounds i8, i8* %9688, i64 8
  %9697 = bitcast i8* %9696 to double*
  store double 0.000000e+00, double* %9697, align 1
  store %struct.Memory* %loadMem_4808d2, %struct.Memory** %MEMORY
  %loadMem_4808da = load %struct.Memory*, %struct.Memory** %MEMORY
  %9698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9699 = getelementptr inbounds %struct.GPR, %struct.GPR* %9698, i32 0, i32 33
  %9700 = getelementptr inbounds %struct.Reg, %struct.Reg* %9699, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %9700 to i64*
  %9701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9702 = getelementptr inbounds %struct.GPR, %struct.GPR* %9701, i32 0, i32 15
  %9703 = getelementptr inbounds %struct.Reg, %struct.Reg* %9702, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %9703 to i64*
  %9704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9705 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9704, i64 0, i64 0
  %XMM0.i786 = bitcast %union.VectorReg* %9705 to %union.vec128_t*
  %9706 = load i64, i64* %RBP.i785
  %9707 = sub i64 %9706, 144
  %9708 = bitcast %union.vec128_t* %XMM0.i786 to i8*
  %9709 = load i64, i64* %PC.i784
  %9710 = add i64 %9709, 8
  store i64 %9710, i64* %PC.i784
  %9711 = bitcast i8* %9708 to double*
  %9712 = load double, double* %9711, align 1
  %9713 = inttoptr i64 %9707 to double*
  store double %9712, double* %9713
  store %struct.Memory* %loadMem_4808da, %struct.Memory** %MEMORY
  %loadMem_4808e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9715 = getelementptr inbounds %struct.GPR, %struct.GPR* %9714, i32 0, i32 33
  %9716 = getelementptr inbounds %struct.Reg, %struct.Reg* %9715, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %9716 to i64*
  %9717 = load i64, i64* %PC.i783
  %9718 = add i64 %9717, 5
  %9719 = load i64, i64* %PC.i783
  %9720 = add i64 %9719, 5
  store i64 %9720, i64* %PC.i783
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9718, i64* %9721, align 8
  store %struct.Memory* %loadMem_4808e2, %struct.Memory** %MEMORY
  br label %block_.L_4808e7

block_.L_4808e7:                                  ; preds = %block_.L_4808d2, %block_4808c0
  %loadMem_4808e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9723 = getelementptr inbounds %struct.GPR, %struct.GPR* %9722, i32 0, i32 33
  %9724 = getelementptr inbounds %struct.Reg, %struct.Reg* %9723, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %9724 to i64*
  %9725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9726 = getelementptr inbounds %struct.GPR, %struct.GPR* %9725, i32 0, i32 15
  %9727 = getelementptr inbounds %struct.Reg, %struct.Reg* %9726, i32 0, i32 0
  %RBP.i781 = bitcast %union.anon* %9727 to i64*
  %9728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9729 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9728, i64 0, i64 0
  %YMM0.i782 = bitcast %union.VectorReg* %9729 to %"class.std::bitset"*
  %9730 = bitcast %"class.std::bitset"* %YMM0.i782 to i8*
  %9731 = load i64, i64* %RBP.i781
  %9732 = sub i64 %9731, 144
  %9733 = load i64, i64* %PC.i780
  %9734 = add i64 %9733, 8
  store i64 %9734, i64* %PC.i780
  %9735 = inttoptr i64 %9732 to double*
  %9736 = load double, double* %9735
  %9737 = bitcast i8* %9730 to double*
  store double %9736, double* %9737, align 1
  %9738 = getelementptr inbounds i8, i8* %9730, i64 8
  %9739 = bitcast i8* %9738 to double*
  store double 0.000000e+00, double* %9739, align 1
  store %struct.Memory* %loadMem_4808e7, %struct.Memory** %MEMORY
  %loadMem_4808ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %9740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9741 = getelementptr inbounds %struct.GPR, %struct.GPR* %9740, i32 0, i32 33
  %9742 = getelementptr inbounds %struct.Reg, %struct.Reg* %9741, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %9742 to i64*
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9744 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9743, i64 0, i64 1
  %YMM1.i779 = bitcast %union.VectorReg* %9744 to %"class.std::bitset"*
  %9745 = bitcast %"class.std::bitset"* %YMM1.i779 to i8*
  %9746 = load i64, i64* %PC.i778
  %9747 = add i64 %9746, ptrtoint (%G_0x62669__rip__type* @G_0x62669__rip_ to i64)
  %9748 = load i64, i64* %PC.i778
  %9749 = add i64 %9748, 8
  store i64 %9749, i64* %PC.i778
  %9750 = inttoptr i64 %9747 to double*
  %9751 = load double, double* %9750
  %9752 = bitcast i8* %9745 to double*
  store double %9751, double* %9752, align 1
  %9753 = getelementptr inbounds i8, i8* %9745, i64 8
  %9754 = bitcast i8* %9753 to double*
  store double 0.000000e+00, double* %9754, align 1
  store %struct.Memory* %loadMem_4808ef, %struct.Memory** %MEMORY
  %loadMem_4808f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9756 = getelementptr inbounds %struct.GPR, %struct.GPR* %9755, i32 0, i32 33
  %9757 = getelementptr inbounds %struct.Reg, %struct.Reg* %9756, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %9757 to i64*
  %9758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9759 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9758, i64 0, i64 0
  %XMM0.i772 = bitcast %union.VectorReg* %9759 to %union.vec128_t*
  %9760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9761 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9760, i64 0, i64 1
  %XMM1.i773 = bitcast %union.VectorReg* %9761 to %union.vec128_t*
  %9762 = bitcast %union.vec128_t* %XMM1.i773 to i8*
  %9763 = bitcast %union.vec128_t* %XMM0.i772 to i8*
  %9764 = load i64, i64* %PC.i771
  %9765 = add i64 %9764, 4
  store i64 %9765, i64* %PC.i771
  %9766 = bitcast i8* %9762 to double*
  %9767 = load double, double* %9766, align 1
  %9768 = bitcast i8* %9763 to double*
  %9769 = load double, double* %9768, align 1
  %9770 = fcmp uno double %9767, %9769
  br i1 %9770, label %9771, label %9783

; <label>:9771:                                   ; preds = %block_.L_4808e7
  %9772 = fadd double %9767, %9769
  %9773 = bitcast double %9772 to i64
  %9774 = and i64 %9773, 9221120237041090560
  %9775 = icmp eq i64 %9774, 9218868437227405312
  %9776 = and i64 %9773, 2251799813685247
  %9777 = icmp ne i64 %9776, 0
  %9778 = and i1 %9775, %9777
  br i1 %9778, label %9779, label %9789

; <label>:9779:                                   ; preds = %9771
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9781 = load i64, i64* %9780, align 8
  %9782 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9781, %struct.Memory* %loadMem_4808f7)
  br label %routine_ucomisd__xmm0___xmm1.exit774

; <label>:9783:                                   ; preds = %block_.L_4808e7
  %9784 = fcmp ogt double %9767, %9769
  br i1 %9784, label %9789, label %9785

; <label>:9785:                                   ; preds = %9783
  %9786 = fcmp olt double %9767, %9769
  br i1 %9786, label %9789, label %9787

; <label>:9787:                                   ; preds = %9785
  %9788 = fcmp oeq double %9767, %9769
  br i1 %9788, label %9789, label %9796

; <label>:9789:                                   ; preds = %9787, %9785, %9783, %9771
  %9790 = phi i8 [ 0, %9783 ], [ 0, %9785 ], [ 1, %9787 ], [ 1, %9771 ]
  %9791 = phi i8 [ 0, %9783 ], [ 0, %9785 ], [ 0, %9787 ], [ 1, %9771 ]
  %9792 = phi i8 [ 0, %9783 ], [ 1, %9785 ], [ 0, %9787 ], [ 1, %9771 ]
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9790, i8* %9793, align 1
  %9794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9791, i8* %9794, align 1
  %9795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9792, i8* %9795, align 1
  br label %9796

; <label>:9796:                                   ; preds = %9789, %9787
  %9797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9797, align 1
  %9798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9798, align 1
  %9799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9799, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit774

routine_ucomisd__xmm0___xmm1.exit774:             ; preds = %9779, %9796
  %9800 = phi %struct.Memory* [ %9782, %9779 ], [ %loadMem_4808f7, %9796 ]
  store %struct.Memory* %9800, %struct.Memory** %MEMORY
  %loadMem_4808fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9802 = getelementptr inbounds %struct.GPR, %struct.GPR* %9801, i32 0, i32 33
  %9803 = getelementptr inbounds %struct.Reg, %struct.Reg* %9802, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %9803 to i64*
  %9804 = load i64, i64* %PC.i770
  %9805 = add i64 %9804, 27
  %9806 = load i64, i64* %PC.i770
  %9807 = add i64 %9806, 6
  %9808 = load i64, i64* %PC.i770
  %9809 = add i64 %9808, 6
  store i64 %9809, i64* %PC.i770
  %9810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9811 = load i8, i8* %9810, align 1
  %9812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9813 = load i8, i8* %9812, align 1
  %9814 = or i8 %9813, %9811
  %9815 = icmp ne i8 %9814, 0
  %9816 = zext i1 %9815 to i8
  store i8 %9816, i8* %BRANCH_TAKEN, align 1
  %9817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9818 = select i1 %9815, i64 %9805, i64 %9807
  store i64 %9818, i64* %9817, align 8
  store %struct.Memory* %loadMem_4808fb, %struct.Memory** %MEMORY
  %loadBr_4808fb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4808fb = icmp eq i8 %loadBr_4808fb, 1
  br i1 %cmpBr_4808fb, label %block_.L_480916, label %block_480901

block_480901:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit774
  %loadMem_480901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9820 = getelementptr inbounds %struct.GPR, %struct.GPR* %9819, i32 0, i32 33
  %9821 = getelementptr inbounds %struct.Reg, %struct.Reg* %9820, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %9821 to i64*
  %9822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9823 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9822, i64 0, i64 0
  %YMM0.i769 = bitcast %union.VectorReg* %9823 to %"class.std::bitset"*
  %9824 = bitcast %"class.std::bitset"* %YMM0.i769 to i8*
  %9825 = load i64, i64* %PC.i768
  %9826 = add i64 %9825, ptrtoint (%G_0x62657__rip__type* @G_0x62657__rip_ to i64)
  %9827 = load i64, i64* %PC.i768
  %9828 = add i64 %9827, 8
  store i64 %9828, i64* %PC.i768
  %9829 = inttoptr i64 %9826 to double*
  %9830 = load double, double* %9829
  %9831 = bitcast i8* %9824 to double*
  store double %9830, double* %9831, align 1
  %9832 = getelementptr inbounds i8, i8* %9824, i64 8
  %9833 = bitcast i8* %9832 to double*
  store double 0.000000e+00, double* %9833, align 1
  store %struct.Memory* %loadMem_480901, %struct.Memory** %MEMORY
  %loadMem_480909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9835 = getelementptr inbounds %struct.GPR, %struct.GPR* %9834, i32 0, i32 33
  %9836 = getelementptr inbounds %struct.Reg, %struct.Reg* %9835, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %9836 to i64*
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9838 = getelementptr inbounds %struct.GPR, %struct.GPR* %9837, i32 0, i32 15
  %9839 = getelementptr inbounds %struct.Reg, %struct.Reg* %9838, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %9839 to i64*
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9841 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9840, i64 0, i64 0
  %XMM0.i767 = bitcast %union.VectorReg* %9841 to %union.vec128_t*
  %9842 = load i64, i64* %RBP.i766
  %9843 = sub i64 %9842, 152
  %9844 = bitcast %union.vec128_t* %XMM0.i767 to i8*
  %9845 = load i64, i64* %PC.i765
  %9846 = add i64 %9845, 8
  store i64 %9846, i64* %PC.i765
  %9847 = bitcast i8* %9844 to double*
  %9848 = load double, double* %9847, align 1
  %9849 = inttoptr i64 %9843 to double*
  store double %9848, double* %9849
  store %struct.Memory* %loadMem_480909, %struct.Memory** %MEMORY
  %loadMem_480911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9851 = getelementptr inbounds %struct.GPR, %struct.GPR* %9850, i32 0, i32 33
  %9852 = getelementptr inbounds %struct.Reg, %struct.Reg* %9851, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %9852 to i64*
  %9853 = load i64, i64* %PC.i764
  %9854 = add i64 %9853, 83
  %9855 = load i64, i64* %PC.i764
  %9856 = add i64 %9855, 5
  store i64 %9856, i64* %PC.i764
  %9857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9854, i64* %9857, align 8
  store %struct.Memory* %loadMem_480911, %struct.Memory** %MEMORY
  br label %block_.L_480964

block_.L_480916:                                  ; preds = %routine_ucomisd__xmm0___xmm1.exit774
  %loadMem_480916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9859 = getelementptr inbounds %struct.GPR, %struct.GPR* %9858, i32 0, i32 33
  %9860 = getelementptr inbounds %struct.Reg, %struct.Reg* %9859, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %9860 to i64*
  %9861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9862 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9861, i64 0, i64 0
  %YMM0.i763 = bitcast %union.VectorReg* %9862 to %"class.std::bitset"*
  %9863 = bitcast %"class.std::bitset"* %YMM0.i763 to i8*
  %9864 = load i64, i64* %PC.i762
  %9865 = add i64 %9864, ptrtoint (%G_0x626ea__rip__type* @G_0x626ea__rip_ to i64)
  %9866 = load i64, i64* %PC.i762
  %9867 = add i64 %9866, 8
  store i64 %9867, i64* %PC.i762
  %9868 = inttoptr i64 %9865 to double*
  %9869 = load double, double* %9868
  %9870 = bitcast i8* %9863 to double*
  store double %9869, double* %9870, align 1
  %9871 = getelementptr inbounds i8, i8* %9863, i64 8
  %9872 = bitcast i8* %9871 to double*
  store double 0.000000e+00, double* %9872, align 1
  store %struct.Memory* %loadMem_480916, %struct.Memory** %MEMORY
  %loadMem_48091e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9874 = getelementptr inbounds %struct.GPR, %struct.GPR* %9873, i32 0, i32 33
  %9875 = getelementptr inbounds %struct.Reg, %struct.Reg* %9874, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %9875 to i64*
  %9876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9877 = getelementptr inbounds %struct.GPR, %struct.GPR* %9876, i32 0, i32 15
  %9878 = getelementptr inbounds %struct.Reg, %struct.Reg* %9877, i32 0, i32 0
  %RBP.i760 = bitcast %union.anon* %9878 to i64*
  %9879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9880 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9879, i64 0, i64 1
  %YMM1.i761 = bitcast %union.VectorReg* %9880 to %"class.std::bitset"*
  %9881 = bitcast %"class.std::bitset"* %YMM1.i761 to i8*
  %9882 = load i64, i64* %RBP.i760
  %9883 = sub i64 %9882, 24
  %9884 = load i64, i64* %PC.i759
  %9885 = add i64 %9884, 5
  store i64 %9885, i64* %PC.i759
  %9886 = inttoptr i64 %9883 to float*
  %9887 = load float, float* %9886
  %9888 = fpext float %9887 to double
  %9889 = bitcast i8* %9881 to double*
  store double %9888, double* %9889, align 1
  store %struct.Memory* %loadMem_48091e, %struct.Memory** %MEMORY
  %loadMem_480923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9891 = getelementptr inbounds %struct.GPR, %struct.GPR* %9890, i32 0, i32 33
  %9892 = getelementptr inbounds %struct.Reg, %struct.Reg* %9891, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %9892 to i64*
  %9893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9894 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9893, i64 0, i64 0
  %XMM0.i756 = bitcast %union.VectorReg* %9894 to %union.vec128_t*
  %9895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9896 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9895, i64 0, i64 1
  %XMM1.i757 = bitcast %union.VectorReg* %9896 to %union.vec128_t*
  %9897 = bitcast %union.vec128_t* %XMM0.i756 to i8*
  %9898 = bitcast %union.vec128_t* %XMM1.i757 to i8*
  %9899 = load i64, i64* %PC.i755
  %9900 = add i64 %9899, 4
  store i64 %9900, i64* %PC.i755
  %9901 = bitcast i8* %9897 to double*
  %9902 = load double, double* %9901, align 1
  %9903 = bitcast i8* %9898 to double*
  %9904 = load double, double* %9903, align 1
  %9905 = fcmp uno double %9902, %9904
  br i1 %9905, label %9906, label %9918

; <label>:9906:                                   ; preds = %block_.L_480916
  %9907 = fadd double %9902, %9904
  %9908 = bitcast double %9907 to i64
  %9909 = and i64 %9908, 9221120237041090560
  %9910 = icmp eq i64 %9909, 9218868437227405312
  %9911 = and i64 %9908, 2251799813685247
  %9912 = icmp ne i64 %9911, 0
  %9913 = and i1 %9910, %9912
  br i1 %9913, label %9914, label %9924

; <label>:9914:                                   ; preds = %9906
  %9915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9916 = load i64, i64* %9915, align 8
  %9917 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9916, %struct.Memory* %loadMem_480923)
  br label %routine_ucomisd__xmm1___xmm0.exit

; <label>:9918:                                   ; preds = %block_.L_480916
  %9919 = fcmp ogt double %9902, %9904
  br i1 %9919, label %9924, label %9920

; <label>:9920:                                   ; preds = %9918
  %9921 = fcmp olt double %9902, %9904
  br i1 %9921, label %9924, label %9922

; <label>:9922:                                   ; preds = %9920
  %9923 = fcmp oeq double %9902, %9904
  br i1 %9923, label %9924, label %9931

; <label>:9924:                                   ; preds = %9922, %9920, %9918, %9906
  %9925 = phi i8 [ 0, %9918 ], [ 0, %9920 ], [ 1, %9922 ], [ 1, %9906 ]
  %9926 = phi i8 [ 0, %9918 ], [ 0, %9920 ], [ 0, %9922 ], [ 1, %9906 ]
  %9927 = phi i8 [ 0, %9918 ], [ 1, %9920 ], [ 0, %9922 ], [ 1, %9906 ]
  %9928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9925, i8* %9928, align 1
  %9929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9926, i8* %9929, align 1
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9927, i8* %9930, align 1
  br label %9931

; <label>:9931:                                   ; preds = %9924, %9922
  %9932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9932, align 1
  %9933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9933, align 1
  %9934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9934, align 1
  br label %routine_ucomisd__xmm1___xmm0.exit

routine_ucomisd__xmm1___xmm0.exit:                ; preds = %9914, %9931
  %9935 = phi %struct.Memory* [ %9917, %9914 ], [ %loadMem_480923, %9931 ]
  store %struct.Memory* %9935, %struct.Memory** %MEMORY
  %loadMem_480927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9937 = getelementptr inbounds %struct.GPR, %struct.GPR* %9936, i32 0, i32 33
  %9938 = getelementptr inbounds %struct.Reg, %struct.Reg* %9937, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %9938 to i64*
  %9939 = load i64, i64* %PC.i754
  %9940 = add i64 %9939, 24
  %9941 = load i64, i64* %PC.i754
  %9942 = add i64 %9941, 6
  %9943 = load i64, i64* %PC.i754
  %9944 = add i64 %9943, 6
  store i64 %9944, i64* %PC.i754
  %9945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9946 = load i8, i8* %9945, align 1
  %9947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9948 = load i8, i8* %9947, align 1
  %9949 = or i8 %9948, %9946
  %9950 = icmp ne i8 %9949, 0
  %9951 = zext i1 %9950 to i8
  store i8 %9951, i8* %BRANCH_TAKEN, align 1
  %9952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9953 = select i1 %9950, i64 %9940, i64 %9942
  store i64 %9953, i64* %9952, align 8
  store %struct.Memory* %loadMem_480927, %struct.Memory** %MEMORY
  %loadBr_480927 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480927 = icmp eq i8 %loadBr_480927, 1
  br i1 %cmpBr_480927, label %block_.L_48093f, label %block_48092d

block_48092d:                                     ; preds = %routine_ucomisd__xmm1___xmm0.exit
  %loadMem_48092d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9955 = getelementptr inbounds %struct.GPR, %struct.GPR* %9954, i32 0, i32 33
  %9956 = getelementptr inbounds %struct.Reg, %struct.Reg* %9955, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %9956 to i64*
  %9957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9958 = getelementptr inbounds %struct.GPR, %struct.GPR* %9957, i32 0, i32 15
  %9959 = getelementptr inbounds %struct.Reg, %struct.Reg* %9958, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %9959 to i64*
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9961 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9960, i64 0, i64 0
  %YMM0.i753 = bitcast %union.VectorReg* %9961 to %"class.std::bitset"*
  %9962 = bitcast %"class.std::bitset"* %YMM0.i753 to i8*
  %9963 = load i64, i64* %RBP.i752
  %9964 = sub i64 %9963, 24
  %9965 = load i64, i64* %PC.i751
  %9966 = add i64 %9965, 5
  store i64 %9966, i64* %PC.i751
  %9967 = inttoptr i64 %9964 to float*
  %9968 = load float, float* %9967
  %9969 = fpext float %9968 to double
  %9970 = bitcast i8* %9962 to double*
  store double %9969, double* %9970, align 1
  store %struct.Memory* %loadMem_48092d, %struct.Memory** %MEMORY
  %loadMem_480932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9972 = getelementptr inbounds %struct.GPR, %struct.GPR* %9971, i32 0, i32 33
  %9973 = getelementptr inbounds %struct.Reg, %struct.Reg* %9972, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %9973 to i64*
  %9974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9975 = getelementptr inbounds %struct.GPR, %struct.GPR* %9974, i32 0, i32 15
  %9976 = getelementptr inbounds %struct.Reg, %struct.Reg* %9975, i32 0, i32 0
  %RBP.i749 = bitcast %union.anon* %9976 to i64*
  %9977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9978 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9977, i64 0, i64 0
  %XMM0.i750 = bitcast %union.VectorReg* %9978 to %union.vec128_t*
  %9979 = load i64, i64* %RBP.i749
  %9980 = sub i64 %9979, 160
  %9981 = bitcast %union.vec128_t* %XMM0.i750 to i8*
  %9982 = load i64, i64* %PC.i748
  %9983 = add i64 %9982, 8
  store i64 %9983, i64* %PC.i748
  %9984 = bitcast i8* %9981 to double*
  %9985 = load double, double* %9984, align 1
  %9986 = inttoptr i64 %9980 to double*
  store double %9985, double* %9986
  store %struct.Memory* %loadMem_480932, %struct.Memory** %MEMORY
  %loadMem_48093a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9988 = getelementptr inbounds %struct.GPR, %struct.GPR* %9987, i32 0, i32 33
  %9989 = getelementptr inbounds %struct.Reg, %struct.Reg* %9988, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %9989 to i64*
  %9990 = load i64, i64* %PC.i747
  %9991 = add i64 %9990, 26
  %9992 = load i64, i64* %PC.i747
  %9993 = add i64 %9992, 5
  store i64 %9993, i64* %PC.i747
  %9994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9991, i64* %9994, align 8
  store %struct.Memory* %loadMem_48093a, %struct.Memory** %MEMORY
  br label %block_.L_480954

block_.L_48093f:                                  ; preds = %routine_ucomisd__xmm1___xmm0.exit
  %loadMem_48093f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9996 = getelementptr inbounds %struct.GPR, %struct.GPR* %9995, i32 0, i32 33
  %9997 = getelementptr inbounds %struct.Reg, %struct.Reg* %9996, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %9997 to i64*
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9999 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9998, i64 0, i64 0
  %YMM0.i746 = bitcast %union.VectorReg* %9999 to %"class.std::bitset"*
  %10000 = bitcast %"class.std::bitset"* %YMM0.i746 to i8*
  %10001 = load i64, i64* %PC.i745
  %10002 = add i64 %10001, ptrtoint (%G_0x626c1__rip__type* @G_0x626c1__rip_ to i64)
  %10003 = load i64, i64* %PC.i745
  %10004 = add i64 %10003, 8
  store i64 %10004, i64* %PC.i745
  %10005 = inttoptr i64 %10002 to double*
  %10006 = load double, double* %10005
  %10007 = bitcast i8* %10000 to double*
  store double %10006, double* %10007, align 1
  %10008 = getelementptr inbounds i8, i8* %10000, i64 8
  %10009 = bitcast i8* %10008 to double*
  store double 0.000000e+00, double* %10009, align 1
  store %struct.Memory* %loadMem_48093f, %struct.Memory** %MEMORY
  %loadMem_480947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10011 = getelementptr inbounds %struct.GPR, %struct.GPR* %10010, i32 0, i32 33
  %10012 = getelementptr inbounds %struct.Reg, %struct.Reg* %10011, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %10012 to i64*
  %10013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10014 = getelementptr inbounds %struct.GPR, %struct.GPR* %10013, i32 0, i32 15
  %10015 = getelementptr inbounds %struct.Reg, %struct.Reg* %10014, i32 0, i32 0
  %RBP.i743 = bitcast %union.anon* %10015 to i64*
  %10016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10017 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10016, i64 0, i64 0
  %XMM0.i744 = bitcast %union.VectorReg* %10017 to %union.vec128_t*
  %10018 = load i64, i64* %RBP.i743
  %10019 = sub i64 %10018, 160
  %10020 = bitcast %union.vec128_t* %XMM0.i744 to i8*
  %10021 = load i64, i64* %PC.i742
  %10022 = add i64 %10021, 8
  store i64 %10022, i64* %PC.i742
  %10023 = bitcast i8* %10020 to double*
  %10024 = load double, double* %10023, align 1
  %10025 = inttoptr i64 %10019 to double*
  store double %10024, double* %10025
  store %struct.Memory* %loadMem_480947, %struct.Memory** %MEMORY
  %loadMem_48094f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10027 = getelementptr inbounds %struct.GPR, %struct.GPR* %10026, i32 0, i32 33
  %10028 = getelementptr inbounds %struct.Reg, %struct.Reg* %10027, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %10028 to i64*
  %10029 = load i64, i64* %PC.i741
  %10030 = add i64 %10029, 5
  %10031 = load i64, i64* %PC.i741
  %10032 = add i64 %10031, 5
  store i64 %10032, i64* %PC.i741
  %10033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10030, i64* %10033, align 8
  store %struct.Memory* %loadMem_48094f, %struct.Memory** %MEMORY
  br label %block_.L_480954

block_.L_480954:                                  ; preds = %block_.L_48093f, %block_48092d
  %loadMem_480954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10035 = getelementptr inbounds %struct.GPR, %struct.GPR* %10034, i32 0, i32 33
  %10036 = getelementptr inbounds %struct.Reg, %struct.Reg* %10035, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %10036 to i64*
  %10037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10038 = getelementptr inbounds %struct.GPR, %struct.GPR* %10037, i32 0, i32 15
  %10039 = getelementptr inbounds %struct.Reg, %struct.Reg* %10038, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %10039 to i64*
  %10040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10041 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10040, i64 0, i64 0
  %YMM0.i740 = bitcast %union.VectorReg* %10041 to %"class.std::bitset"*
  %10042 = bitcast %"class.std::bitset"* %YMM0.i740 to i8*
  %10043 = load i64, i64* %RBP.i739
  %10044 = sub i64 %10043, 160
  %10045 = load i64, i64* %PC.i738
  %10046 = add i64 %10045, 8
  store i64 %10046, i64* %PC.i738
  %10047 = inttoptr i64 %10044 to double*
  %10048 = load double, double* %10047
  %10049 = bitcast i8* %10042 to double*
  store double %10048, double* %10049, align 1
  %10050 = getelementptr inbounds i8, i8* %10042, i64 8
  %10051 = bitcast i8* %10050 to double*
  store double 0.000000e+00, double* %10051, align 1
  store %struct.Memory* %loadMem_480954, %struct.Memory** %MEMORY
  %loadMem_48095c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10053 = getelementptr inbounds %struct.GPR, %struct.GPR* %10052, i32 0, i32 33
  %10054 = getelementptr inbounds %struct.Reg, %struct.Reg* %10053, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %10054 to i64*
  %10055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10056 = getelementptr inbounds %struct.GPR, %struct.GPR* %10055, i32 0, i32 15
  %10057 = getelementptr inbounds %struct.Reg, %struct.Reg* %10056, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %10057 to i64*
  %10058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10059 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10058, i64 0, i64 0
  %XMM0.i737 = bitcast %union.VectorReg* %10059 to %union.vec128_t*
  %10060 = load i64, i64* %RBP.i736
  %10061 = sub i64 %10060, 152
  %10062 = bitcast %union.vec128_t* %XMM0.i737 to i8*
  %10063 = load i64, i64* %PC.i735
  %10064 = add i64 %10063, 8
  store i64 %10064, i64* %PC.i735
  %10065 = bitcast i8* %10062 to double*
  %10066 = load double, double* %10065, align 1
  %10067 = inttoptr i64 %10061 to double*
  store double %10066, double* %10067
  store %struct.Memory* %loadMem_48095c, %struct.Memory** %MEMORY
  br label %block_.L_480964

block_.L_480964:                                  ; preds = %block_.L_480954, %block_480901
  %loadMem_480964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10069 = getelementptr inbounds %struct.GPR, %struct.GPR* %10068, i32 0, i32 33
  %10070 = getelementptr inbounds %struct.Reg, %struct.Reg* %10069, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %10070 to i64*
  %10071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10072 = getelementptr inbounds %struct.GPR, %struct.GPR* %10071, i32 0, i32 15
  %10073 = getelementptr inbounds %struct.Reg, %struct.Reg* %10072, i32 0, i32 0
  %RBP.i733 = bitcast %union.anon* %10073 to i64*
  %10074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10075 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10074, i64 0, i64 0
  %YMM0.i734 = bitcast %union.VectorReg* %10075 to %"class.std::bitset"*
  %10076 = bitcast %"class.std::bitset"* %YMM0.i734 to i8*
  %10077 = load i64, i64* %RBP.i733
  %10078 = sub i64 %10077, 152
  %10079 = load i64, i64* %PC.i732
  %10080 = add i64 %10079, 8
  store i64 %10080, i64* %PC.i732
  %10081 = inttoptr i64 %10078 to double*
  %10082 = load double, double* %10081
  %10083 = bitcast i8* %10076 to double*
  store double %10082, double* %10083, align 1
  %10084 = getelementptr inbounds i8, i8* %10076, i64 8
  %10085 = bitcast i8* %10084 to double*
  store double 0.000000e+00, double* %10085, align 1
  store %struct.Memory* %loadMem_480964, %struct.Memory** %MEMORY
  %loadMem_48096c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10087 = getelementptr inbounds %struct.GPR, %struct.GPR* %10086, i32 0, i32 33
  %10088 = getelementptr inbounds %struct.Reg, %struct.Reg* %10087, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %10088 to i64*
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10090 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10089, i64 0, i64 0
  %YMM0.i730 = bitcast %union.VectorReg* %10090 to %"class.std::bitset"*
  %10091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10092 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10091, i64 0, i64 0
  %XMM0.i731 = bitcast %union.VectorReg* %10092 to %union.vec128_t*
  %10093 = bitcast %"class.std::bitset"* %YMM0.i730 to i8*
  %10094 = bitcast %union.vec128_t* %XMM0.i731 to i8*
  %10095 = load i64, i64* %PC.i729
  %10096 = add i64 %10095, 4
  store i64 %10096, i64* %PC.i729
  %10097 = bitcast i8* %10093 to <2 x i32>*
  %10098 = load <2 x i32>, <2 x i32>* %10097, align 1
  %10099 = getelementptr inbounds i8, i8* %10093, i64 8
  %10100 = bitcast i8* %10099 to <2 x i32>*
  %10101 = load <2 x i32>, <2 x i32>* %10100, align 1
  %10102 = bitcast i8* %10094 to double*
  %10103 = load double, double* %10102, align 1
  %10104 = fptrunc double %10103 to float
  %10105 = bitcast i8* %10093 to float*
  store float %10104, float* %10105, align 1
  %10106 = extractelement <2 x i32> %10098, i32 1
  %10107 = getelementptr inbounds i8, i8* %10093, i64 4
  %10108 = bitcast i8* %10107 to i32*
  store i32 %10106, i32* %10108, align 1
  %10109 = extractelement <2 x i32> %10101, i32 0
  %10110 = bitcast i8* %10099 to i32*
  store i32 %10109, i32* %10110, align 1
  %10111 = extractelement <2 x i32> %10101, i32 1
  %10112 = getelementptr inbounds i8, i8* %10093, i64 12
  %10113 = bitcast i8* %10112 to i32*
  store i32 %10111, i32* %10113, align 1
  store %struct.Memory* %loadMem_48096c, %struct.Memory** %MEMORY
  %loadMem_480970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10115 = getelementptr inbounds %struct.GPR, %struct.GPR* %10114, i32 0, i32 33
  %10116 = getelementptr inbounds %struct.Reg, %struct.Reg* %10115, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %10116 to i64*
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10118 = getelementptr inbounds %struct.GPR, %struct.GPR* %10117, i32 0, i32 15
  %10119 = getelementptr inbounds %struct.Reg, %struct.Reg* %10118, i32 0, i32 0
  %RBP.i727 = bitcast %union.anon* %10119 to i64*
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10121 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10120, i64 0, i64 0
  %XMM0.i728 = bitcast %union.VectorReg* %10121 to %union.vec128_t*
  %10122 = load i64, i64* %RBP.i727
  %10123 = sub i64 %10122, 60
  %10124 = bitcast %union.vec128_t* %XMM0.i728 to i8*
  %10125 = load i64, i64* %PC.i726
  %10126 = add i64 %10125, 5
  store i64 %10126, i64* %PC.i726
  %10127 = bitcast i8* %10124 to <2 x float>*
  %10128 = load <2 x float>, <2 x float>* %10127, align 1
  %10129 = extractelement <2 x float> %10128, i32 0
  %10130 = inttoptr i64 %10123 to float*
  store float %10129, float* %10130
  store %struct.Memory* %loadMem_480970, %struct.Memory** %MEMORY
  %loadMem_480975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10132 = getelementptr inbounds %struct.GPR, %struct.GPR* %10131, i32 0, i32 33
  %10133 = getelementptr inbounds %struct.Reg, %struct.Reg* %10132, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %10133 to i64*
  %10134 = load i64, i64* %PC.i725
  %10135 = add i64 %10134, 8
  store i64 %10135, i64* %PC.i725
  %10136 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10137, align 1
  %10138 = and i32 %10136, 255
  %10139 = call i32 @llvm.ctpop.i32(i32 %10138)
  %10140 = trunc i32 %10139 to i8
  %10141 = and i8 %10140, 1
  %10142 = xor i8 %10141, 1
  %10143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10142, i8* %10143, align 1
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10144, align 1
  %10145 = icmp eq i32 %10136, 0
  %10146 = zext i1 %10145 to i8
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10146, i8* %10147, align 1
  %10148 = lshr i32 %10136, 31
  %10149 = trunc i32 %10148 to i8
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10149, i8* %10150, align 1
  %10151 = lshr i32 %10136, 31
  %10152 = xor i32 %10148, %10151
  %10153 = add i32 %10152, %10151
  %10154 = icmp eq i32 %10153, 2
  %10155 = zext i1 %10154 to i8
  %10156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10155, i8* %10156, align 1
  store %struct.Memory* %loadMem_480975, %struct.Memory** %MEMORY
  %loadMem_48097d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10158 = getelementptr inbounds %struct.GPR, %struct.GPR* %10157, i32 0, i32 33
  %10159 = getelementptr inbounds %struct.Reg, %struct.Reg* %10158, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %10159 to i64*
  %10160 = load i64, i64* %PC.i724
  %10161 = add i64 %10160, 85
  %10162 = load i64, i64* %PC.i724
  %10163 = add i64 %10162, 6
  %10164 = load i64, i64* %PC.i724
  %10165 = add i64 %10164, 6
  store i64 %10165, i64* %PC.i724
  %10166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10167 = load i8, i8* %10166, align 1
  store i8 %10167, i8* %BRANCH_TAKEN, align 1
  %10168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10169 = icmp ne i8 %10167, 0
  %10170 = select i1 %10169, i64 %10161, i64 %10163
  store i64 %10170, i64* %10168, align 8
  store %struct.Memory* %loadMem_48097d, %struct.Memory** %MEMORY
  %loadBr_48097d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48097d = icmp eq i8 %loadBr_48097d, 1
  br i1 %cmpBr_48097d, label %block_.L_4809d2, label %block_480983

block_480983:                                     ; preds = %block_.L_480964
  %loadMem_480983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10172 = getelementptr inbounds %struct.GPR, %struct.GPR* %10171, i32 0, i32 33
  %10173 = getelementptr inbounds %struct.Reg, %struct.Reg* %10172, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %10173 to i64*
  %10174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10175 = getelementptr inbounds %struct.GPR, %struct.GPR* %10174, i32 0, i32 11
  %10176 = getelementptr inbounds %struct.Reg, %struct.Reg* %10175, i32 0, i32 0
  %RDI.i723 = bitcast %union.anon* %10176 to i64*
  %10177 = load i64, i64* %PC.i722
  %10178 = add i64 %10177, 10
  store i64 %10178, i64* %PC.i722
  store i64 ptrtoint (%G__0x582137_type* @G__0x582137 to i64), i64* %RDI.i723, align 8
  store %struct.Memory* %loadMem_480983, %struct.Memory** %MEMORY
  %loadMem_48098d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10180 = getelementptr inbounds %struct.GPR, %struct.GPR* %10179, i32 0, i32 33
  %10181 = getelementptr inbounds %struct.Reg, %struct.Reg* %10180, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %10181 to i64*
  %10182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10183 = getelementptr inbounds %struct.GPR, %struct.GPR* %10182, i32 0, i32 9
  %10184 = getelementptr inbounds %struct.Reg, %struct.Reg* %10183, i32 0, i32 0
  %RSI.i720 = bitcast %union.anon* %10184 to i64*
  %10185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10186 = getelementptr inbounds %struct.GPR, %struct.GPR* %10185, i32 0, i32 15
  %10187 = getelementptr inbounds %struct.Reg, %struct.Reg* %10186, i32 0, i32 0
  %RBP.i721 = bitcast %union.anon* %10187 to i64*
  %10188 = load i64, i64* %RBP.i721
  %10189 = sub i64 %10188, 8
  %10190 = load i64, i64* %PC.i719
  %10191 = add i64 %10190, 3
  store i64 %10191, i64* %PC.i719
  %10192 = inttoptr i64 %10189 to i32*
  %10193 = load i32, i32* %10192
  %10194 = zext i32 %10193 to i64
  store i64 %10194, i64* %RSI.i720, align 8
  store %struct.Memory* %loadMem_48098d, %struct.Memory** %MEMORY
  %loadMem_480990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10196 = getelementptr inbounds %struct.GPR, %struct.GPR* %10195, i32 0, i32 33
  %10197 = getelementptr inbounds %struct.Reg, %struct.Reg* %10196, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %10197 to i64*
  %10198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10199 = getelementptr inbounds %struct.GPR, %struct.GPR* %10198, i32 0, i32 15
  %10200 = getelementptr inbounds %struct.Reg, %struct.Reg* %10199, i32 0, i32 0
  %RBP.i717 = bitcast %union.anon* %10200 to i64*
  %10201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10202 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10201, i64 0, i64 0
  %YMM0.i718 = bitcast %union.VectorReg* %10202 to %"class.std::bitset"*
  %10203 = bitcast %"class.std::bitset"* %YMM0.i718 to i8*
  %10204 = load i64, i64* %RBP.i717
  %10205 = sub i64 %10204, 60
  %10206 = load i64, i64* %PC.i716
  %10207 = add i64 %10206, 5
  store i64 %10207, i64* %PC.i716
  %10208 = inttoptr i64 %10205 to float*
  %10209 = load float, float* %10208
  %10210 = bitcast i8* %10203 to float*
  store float %10209, float* %10210, align 1
  %10211 = getelementptr inbounds i8, i8* %10203, i64 4
  %10212 = bitcast i8* %10211 to float*
  store float 0.000000e+00, float* %10212, align 1
  %10213 = getelementptr inbounds i8, i8* %10203, i64 8
  %10214 = bitcast i8* %10213 to float*
  store float 0.000000e+00, float* %10214, align 1
  %10215 = getelementptr inbounds i8, i8* %10203, i64 12
  %10216 = bitcast i8* %10215 to float*
  store float 0.000000e+00, float* %10216, align 1
  store %struct.Memory* %loadMem_480990, %struct.Memory** %MEMORY
  %loadMem_480995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10218 = getelementptr inbounds %struct.GPR, %struct.GPR* %10217, i32 0, i32 33
  %10219 = getelementptr inbounds %struct.Reg, %struct.Reg* %10218, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %10219 to i64*
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10221 = getelementptr inbounds %struct.GPR, %struct.GPR* %10220, i32 0, i32 15
  %10222 = getelementptr inbounds %struct.Reg, %struct.Reg* %10221, i32 0, i32 0
  %RBP.i714 = bitcast %union.anon* %10222 to i64*
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10224 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10223, i64 0, i64 0
  %YMM0.i715 = bitcast %union.VectorReg* %10224 to %"class.std::bitset"*
  %10225 = bitcast %"class.std::bitset"* %YMM0.i715 to i8*
  %10226 = bitcast %"class.std::bitset"* %YMM0.i715 to i8*
  %10227 = load i64, i64* %RBP.i714
  %10228 = sub i64 %10227, 56
  %10229 = load i64, i64* %PC.i713
  %10230 = add i64 %10229, 5
  store i64 %10230, i64* %PC.i713
  %10231 = bitcast i8* %10226 to <2 x float>*
  %10232 = load <2 x float>, <2 x float>* %10231, align 1
  %10233 = getelementptr inbounds i8, i8* %10226, i64 8
  %10234 = bitcast i8* %10233 to <2 x i32>*
  %10235 = load <2 x i32>, <2 x i32>* %10234, align 1
  %10236 = inttoptr i64 %10228 to float*
  %10237 = load float, float* %10236
  %10238 = extractelement <2 x float> %10232, i32 0
  %10239 = fmul float %10238, %10237
  %10240 = bitcast i8* %10225 to float*
  store float %10239, float* %10240, align 1
  %10241 = bitcast <2 x float> %10232 to <2 x i32>
  %10242 = extractelement <2 x i32> %10241, i32 1
  %10243 = getelementptr inbounds i8, i8* %10225, i64 4
  %10244 = bitcast i8* %10243 to i32*
  store i32 %10242, i32* %10244, align 1
  %10245 = extractelement <2 x i32> %10235, i32 0
  %10246 = getelementptr inbounds i8, i8* %10225, i64 8
  %10247 = bitcast i8* %10246 to i32*
  store i32 %10245, i32* %10247, align 1
  %10248 = extractelement <2 x i32> %10235, i32 1
  %10249 = getelementptr inbounds i8, i8* %10225, i64 12
  %10250 = bitcast i8* %10249 to i32*
  store i32 %10248, i32* %10250, align 1
  store %struct.Memory* %loadMem_480995, %struct.Memory** %MEMORY
  %loadMem_48099a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10252 = getelementptr inbounds %struct.GPR, %struct.GPR* %10251, i32 0, i32 33
  %10253 = getelementptr inbounds %struct.Reg, %struct.Reg* %10252, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %10253 to i64*
  %10254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10255 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10254, i64 0, i64 0
  %YMM0.i711 = bitcast %union.VectorReg* %10255 to %"class.std::bitset"*
  %10256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10257 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10256, i64 0, i64 0
  %XMM0.i712 = bitcast %union.VectorReg* %10257 to %union.vec128_t*
  %10258 = bitcast %"class.std::bitset"* %YMM0.i711 to i8*
  %10259 = bitcast %union.vec128_t* %XMM0.i712 to i8*
  %10260 = load i64, i64* %PC.i710
  %10261 = add i64 %10260, 4
  store i64 %10261, i64* %PC.i710
  %10262 = bitcast i8* %10259 to <2 x float>*
  %10263 = load <2 x float>, <2 x float>* %10262, align 1
  %10264 = extractelement <2 x float> %10263, i32 0
  %10265 = fpext float %10264 to double
  %10266 = bitcast i8* %10258 to double*
  store double %10265, double* %10266, align 1
  store %struct.Memory* %loadMem_48099a, %struct.Memory** %MEMORY
  %loadMem_48099e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10268 = getelementptr inbounds %struct.GPR, %struct.GPR* %10267, i32 0, i32 33
  %10269 = getelementptr inbounds %struct.Reg, %struct.Reg* %10268, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %10269 to i64*
  %10270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10271 = getelementptr inbounds %struct.GPR, %struct.GPR* %10270, i32 0, i32 1
  %10272 = getelementptr inbounds %struct.Reg, %struct.Reg* %10271, i32 0, i32 0
  %10273 = bitcast %union.anon* %10272 to %struct.anon.2*
  %AL.i709 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10273, i32 0, i32 0
  %10274 = load i64, i64* %PC.i708
  %10275 = add i64 %10274, 2
  store i64 %10275, i64* %PC.i708
  store i8 1, i8* %AL.i709, align 1
  store %struct.Memory* %loadMem_48099e, %struct.Memory** %MEMORY
  %loadMem1_4809a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10277 = getelementptr inbounds %struct.GPR, %struct.GPR* %10276, i32 0, i32 33
  %10278 = getelementptr inbounds %struct.Reg, %struct.Reg* %10277, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %10278 to i64*
  %10279 = load i64, i64* %PC.i707
  %10280 = add i64 %10279, -191472
  %10281 = load i64, i64* %PC.i707
  %10282 = add i64 %10281, 5
  %10283 = load i64, i64* %PC.i707
  %10284 = add i64 %10283, 5
  store i64 %10284, i64* %PC.i707
  %10285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10286 = load i64, i64* %10285, align 8
  %10287 = add i64 %10286, -8
  %10288 = inttoptr i64 %10287 to i64*
  store i64 %10282, i64* %10288
  store i64 %10287, i64* %10285, align 8
  %10289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10280, i64* %10289, align 8
  store %struct.Memory* %loadMem1_4809a0, %struct.Memory** %MEMORY
  %loadMem2_4809a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4809a0 = load i64, i64* %3
  %call2_4809a0 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_4809a0, %struct.Memory* %loadMem2_4809a0)
  store %struct.Memory* %call2_4809a0, %struct.Memory** %MEMORY
  %loadMem_4809a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10291 = getelementptr inbounds %struct.GPR, %struct.GPR* %10290, i32 0, i32 33
  %10292 = getelementptr inbounds %struct.Reg, %struct.Reg* %10291, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %10292 to i64*
  %10293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10294 = getelementptr inbounds %struct.GPR, %struct.GPR* %10293, i32 0, i32 9
  %10295 = getelementptr inbounds %struct.Reg, %struct.Reg* %10294, i32 0, i32 0
  %RSI.i706 = bitcast %union.anon* %10295 to i64*
  %10296 = load i64, i64* %PC.i705
  %10297 = add i64 %10296, 10
  store i64 %10297, i64* %PC.i705
  store i64 ptrtoint (%G__0x582155_type* @G__0x582155 to i64), i64* %RSI.i706, align 8
  store %struct.Memory* %loadMem_4809a5, %struct.Memory** %MEMORY
  %loadMem_4809af = load %struct.Memory*, %struct.Memory** %MEMORY
  %10298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10299 = getelementptr inbounds %struct.GPR, %struct.GPR* %10298, i32 0, i32 33
  %10300 = getelementptr inbounds %struct.Reg, %struct.Reg* %10299, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %10300 to i64*
  %10301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10302 = getelementptr inbounds %struct.GPR, %struct.GPR* %10301, i32 0, i32 11
  %10303 = getelementptr inbounds %struct.Reg, %struct.Reg* %10302, i32 0, i32 0
  %RDI.i704 = bitcast %union.anon* %10303 to i64*
  %10304 = load i64, i64* %PC.i703
  %10305 = add i64 %10304, 8
  store i64 %10305, i64* %PC.i703
  %10306 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %10306, i64* %RDI.i704, align 8
  store %struct.Memory* %loadMem_4809af, %struct.Memory** %MEMORY
  %loadMem_4809b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10308 = getelementptr inbounds %struct.GPR, %struct.GPR* %10307, i32 0, i32 33
  %10309 = getelementptr inbounds %struct.Reg, %struct.Reg* %10308, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %10309 to i64*
  %10310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10311 = getelementptr inbounds %struct.GPR, %struct.GPR* %10310, i32 0, i32 7
  %10312 = getelementptr inbounds %struct.Reg, %struct.Reg* %10311, i32 0, i32 0
  %RDX.i701 = bitcast %union.anon* %10312 to i64*
  %10313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10314 = getelementptr inbounds %struct.GPR, %struct.GPR* %10313, i32 0, i32 15
  %10315 = getelementptr inbounds %struct.Reg, %struct.Reg* %10314, i32 0, i32 0
  %RBP.i702 = bitcast %union.anon* %10315 to i64*
  %10316 = load i64, i64* %RBP.i702
  %10317 = sub i64 %10316, 36
  %10318 = load i64, i64* %PC.i700
  %10319 = add i64 %10318, 3
  store i64 %10319, i64* %PC.i700
  %10320 = inttoptr i64 %10317 to i32*
  %10321 = load i32, i32* %10320
  %10322 = zext i32 %10321 to i64
  store i64 %10322, i64* %RDX.i701, align 8
  store %struct.Memory* %loadMem_4809b7, %struct.Memory** %MEMORY
  %loadMem_4809ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %10323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10324 = getelementptr inbounds %struct.GPR, %struct.GPR* %10323, i32 0, i32 33
  %10325 = getelementptr inbounds %struct.Reg, %struct.Reg* %10324, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %10325 to i64*
  %10326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10327 = getelementptr inbounds %struct.GPR, %struct.GPR* %10326, i32 0, i32 15
  %10328 = getelementptr inbounds %struct.Reg, %struct.Reg* %10327, i32 0, i32 0
  %RBP.i698 = bitcast %union.anon* %10328 to i64*
  %10329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10330 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10329, i64 0, i64 0
  %YMM0.i699 = bitcast %union.VectorReg* %10330 to %"class.std::bitset"*
  %10331 = bitcast %"class.std::bitset"* %YMM0.i699 to i8*
  %10332 = load i64, i64* %RBP.i698
  %10333 = sub i64 %10332, 56
  %10334 = load i64, i64* %PC.i697
  %10335 = add i64 %10334, 5
  store i64 %10335, i64* %PC.i697
  %10336 = inttoptr i64 %10333 to float*
  %10337 = load float, float* %10336
  %10338 = fpext float %10337 to double
  %10339 = bitcast i8* %10331 to double*
  store double %10338, double* %10339, align 1
  store %struct.Memory* %loadMem_4809ba, %struct.Memory** %MEMORY
  %loadMem_4809bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10341 = getelementptr inbounds %struct.GPR, %struct.GPR* %10340, i32 0, i32 33
  %10342 = getelementptr inbounds %struct.Reg, %struct.Reg* %10341, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %10342 to i64*
  %10343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10344 = getelementptr inbounds %struct.GPR, %struct.GPR* %10343, i32 0, i32 1
  %10345 = getelementptr inbounds %struct.Reg, %struct.Reg* %10344, i32 0, i32 0
  %EAX.i695 = bitcast %union.anon* %10345 to i32*
  %10346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10347 = getelementptr inbounds %struct.GPR, %struct.GPR* %10346, i32 0, i32 15
  %10348 = getelementptr inbounds %struct.Reg, %struct.Reg* %10347, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %10348 to i64*
  %10349 = load i64, i64* %RBP.i696
  %10350 = sub i64 %10349, 164
  %10351 = load i32, i32* %EAX.i695
  %10352 = zext i32 %10351 to i64
  %10353 = load i64, i64* %PC.i694
  %10354 = add i64 %10353, 6
  store i64 %10354, i64* %PC.i694
  %10355 = inttoptr i64 %10350 to i32*
  store i32 %10351, i32* %10355
  store %struct.Memory* %loadMem_4809bf, %struct.Memory** %MEMORY
  %loadMem_4809c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10357 = getelementptr inbounds %struct.GPR, %struct.GPR* %10356, i32 0, i32 33
  %10358 = getelementptr inbounds %struct.Reg, %struct.Reg* %10357, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %10358 to i64*
  %10359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10360 = getelementptr inbounds %struct.GPR, %struct.GPR* %10359, i32 0, i32 1
  %10361 = getelementptr inbounds %struct.Reg, %struct.Reg* %10360, i32 0, i32 0
  %10362 = bitcast %union.anon* %10361 to %struct.anon.2*
  %AL.i693 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10362, i32 0, i32 0
  %10363 = load i64, i64* %PC.i692
  %10364 = add i64 %10363, 2
  store i64 %10364, i64* %PC.i692
  store i8 1, i8* %AL.i693, align 1
  store %struct.Memory* %loadMem_4809c5, %struct.Memory** %MEMORY
  %loadMem1_4809c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10366 = getelementptr inbounds %struct.GPR, %struct.GPR* %10365, i32 0, i32 33
  %10367 = getelementptr inbounds %struct.Reg, %struct.Reg* %10366, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %10367 to i64*
  %10368 = load i64, i64* %PC.i691
  %10369 = add i64 %10368, -522487
  %10370 = load i64, i64* %PC.i691
  %10371 = add i64 %10370, 5
  %10372 = load i64, i64* %PC.i691
  %10373 = add i64 %10372, 5
  store i64 %10373, i64* %PC.i691
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10375 = load i64, i64* %10374, align 8
  %10376 = add i64 %10375, -8
  %10377 = inttoptr i64 %10376 to i64*
  store i64 %10371, i64* %10377
  store i64 %10376, i64* %10374, align 8
  %10378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10369, i64* %10378, align 8
  store %struct.Memory* %loadMem1_4809c7, %struct.Memory** %MEMORY
  %loadMem2_4809c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4809c7 = load i64, i64* %3
  %10379 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4809c7)
  store %struct.Memory* %10379, %struct.Memory** %MEMORY
  %loadMem_4809cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10381 = getelementptr inbounds %struct.GPR, %struct.GPR* %10380, i32 0, i32 33
  %10382 = getelementptr inbounds %struct.Reg, %struct.Reg* %10381, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %10382 to i64*
  %10383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10384 = getelementptr inbounds %struct.GPR, %struct.GPR* %10383, i32 0, i32 1
  %10385 = getelementptr inbounds %struct.Reg, %struct.Reg* %10384, i32 0, i32 0
  %EAX.i687 = bitcast %union.anon* %10385 to i32*
  %10386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10387 = getelementptr inbounds %struct.GPR, %struct.GPR* %10386, i32 0, i32 15
  %10388 = getelementptr inbounds %struct.Reg, %struct.Reg* %10387, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %10388 to i64*
  %10389 = load i64, i64* %RBP.i688
  %10390 = sub i64 %10389, 168
  %10391 = load i32, i32* %EAX.i687
  %10392 = zext i32 %10391 to i64
  %10393 = load i64, i64* %PC.i686
  %10394 = add i64 %10393, 6
  store i64 %10394, i64* %PC.i686
  %10395 = inttoptr i64 %10390 to i32*
  store i32 %10391, i32* %10395
  store %struct.Memory* %loadMem_4809cc, %struct.Memory** %MEMORY
  br label %block_.L_4809d2

block_.L_4809d2:                                  ; preds = %block_480983, %block_.L_480964
  %loadMem_4809d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10397 = getelementptr inbounds %struct.GPR, %struct.GPR* %10396, i32 0, i32 33
  %10398 = getelementptr inbounds %struct.Reg, %struct.Reg* %10397, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %10398 to i64*
  %10399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10400 = getelementptr inbounds %struct.GPR, %struct.GPR* %10399, i32 0, i32 15
  %10401 = getelementptr inbounds %struct.Reg, %struct.Reg* %10400, i32 0, i32 0
  %RBP.i684 = bitcast %union.anon* %10401 to i64*
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10403 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10402, i64 0, i64 0
  %YMM0.i685 = bitcast %union.VectorReg* %10403 to %"class.std::bitset"*
  %10404 = bitcast %"class.std::bitset"* %YMM0.i685 to i8*
  %10405 = load i64, i64* %RBP.i684
  %10406 = sub i64 %10405, 60
  %10407 = load i64, i64* %PC.i683
  %10408 = add i64 %10407, 5
  store i64 %10408, i64* %PC.i683
  %10409 = inttoptr i64 %10406 to float*
  %10410 = load float, float* %10409
  %10411 = bitcast i8* %10404 to float*
  store float %10410, float* %10411, align 1
  %10412 = getelementptr inbounds i8, i8* %10404, i64 4
  %10413 = bitcast i8* %10412 to float*
  store float 0.000000e+00, float* %10413, align 1
  %10414 = getelementptr inbounds i8, i8* %10404, i64 8
  %10415 = bitcast i8* %10414 to float*
  store float 0.000000e+00, float* %10415, align 1
  %10416 = getelementptr inbounds i8, i8* %10404, i64 12
  %10417 = bitcast i8* %10416 to float*
  store float 0.000000e+00, float* %10417, align 1
  store %struct.Memory* %loadMem_4809d2, %struct.Memory** %MEMORY
  %loadMem_4809d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10419 = getelementptr inbounds %struct.GPR, %struct.GPR* %10418, i32 0, i32 33
  %10420 = getelementptr inbounds %struct.Reg, %struct.Reg* %10419, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %10420 to i64*
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10422 = getelementptr inbounds %struct.GPR, %struct.GPR* %10421, i32 0, i32 15
  %10423 = getelementptr inbounds %struct.Reg, %struct.Reg* %10422, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %10423 to i64*
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10425 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10424, i64 0, i64 0
  %YMM0.i682 = bitcast %union.VectorReg* %10425 to %"class.std::bitset"*
  %10426 = bitcast %"class.std::bitset"* %YMM0.i682 to i8*
  %10427 = bitcast %"class.std::bitset"* %YMM0.i682 to i8*
  %10428 = load i64, i64* %RBP.i681
  %10429 = sub i64 %10428, 56
  %10430 = load i64, i64* %PC.i680
  %10431 = add i64 %10430, 5
  store i64 %10431, i64* %PC.i680
  %10432 = bitcast i8* %10427 to <2 x float>*
  %10433 = load <2 x float>, <2 x float>* %10432, align 1
  %10434 = getelementptr inbounds i8, i8* %10427, i64 8
  %10435 = bitcast i8* %10434 to <2 x i32>*
  %10436 = load <2 x i32>, <2 x i32>* %10435, align 1
  %10437 = inttoptr i64 %10429 to float*
  %10438 = load float, float* %10437
  %10439 = extractelement <2 x float> %10433, i32 0
  %10440 = fmul float %10439, %10438
  %10441 = bitcast i8* %10426 to float*
  store float %10440, float* %10441, align 1
  %10442 = bitcast <2 x float> %10433 to <2 x i32>
  %10443 = extractelement <2 x i32> %10442, i32 1
  %10444 = getelementptr inbounds i8, i8* %10426, i64 4
  %10445 = bitcast i8* %10444 to i32*
  store i32 %10443, i32* %10445, align 1
  %10446 = extractelement <2 x i32> %10436, i32 0
  %10447 = getelementptr inbounds i8, i8* %10426, i64 8
  %10448 = bitcast i8* %10447 to i32*
  store i32 %10446, i32* %10448, align 1
  %10449 = extractelement <2 x i32> %10436, i32 1
  %10450 = getelementptr inbounds i8, i8* %10426, i64 12
  %10451 = bitcast i8* %10450 to i32*
  store i32 %10449, i32* %10451, align 1
  store %struct.Memory* %loadMem_4809d7, %struct.Memory** %MEMORY
  %loadMem_4809dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10453 = getelementptr inbounds %struct.GPR, %struct.GPR* %10452, i32 0, i32 33
  %10454 = getelementptr inbounds %struct.Reg, %struct.Reg* %10453, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %10454 to i64*
  %10455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10456 = getelementptr inbounds %struct.GPR, %struct.GPR* %10455, i32 0, i32 15
  %10457 = getelementptr inbounds %struct.Reg, %struct.Reg* %10456, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %10457 to i64*
  %10458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10459 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10458, i64 0, i64 0
  %YMM0.i679 = bitcast %union.VectorReg* %10459 to %"class.std::bitset"*
  %10460 = bitcast %"class.std::bitset"* %YMM0.i679 to i8*
  %10461 = bitcast %"class.std::bitset"* %YMM0.i679 to i8*
  %10462 = load i64, i64* %RBP.i678
  %10463 = sub i64 %10462, 24
  %10464 = load i64, i64* %PC.i677
  %10465 = add i64 %10464, 5
  store i64 %10465, i64* %PC.i677
  %10466 = bitcast i8* %10461 to <2 x float>*
  %10467 = load <2 x float>, <2 x float>* %10466, align 1
  %10468 = getelementptr inbounds i8, i8* %10461, i64 8
  %10469 = bitcast i8* %10468 to <2 x i32>*
  %10470 = load <2 x i32>, <2 x i32>* %10469, align 1
  %10471 = inttoptr i64 %10463 to float*
  %10472 = load float, float* %10471
  %10473 = extractelement <2 x float> %10467, i32 0
  %10474 = fadd float %10473, %10472
  %10475 = bitcast i8* %10460 to float*
  store float %10474, float* %10475, align 1
  %10476 = bitcast <2 x float> %10467 to <2 x i32>
  %10477 = extractelement <2 x i32> %10476, i32 1
  %10478 = getelementptr inbounds i8, i8* %10460, i64 4
  %10479 = bitcast i8* %10478 to i32*
  store i32 %10477, i32* %10479, align 1
  %10480 = extractelement <2 x i32> %10470, i32 0
  %10481 = getelementptr inbounds i8, i8* %10460, i64 8
  %10482 = bitcast i8* %10481 to i32*
  store i32 %10480, i32* %10482, align 1
  %10483 = extractelement <2 x i32> %10470, i32 1
  %10484 = getelementptr inbounds i8, i8* %10460, i64 12
  %10485 = bitcast i8* %10484 to i32*
  store i32 %10483, i32* %10485, align 1
  store %struct.Memory* %loadMem_4809dc, %struct.Memory** %MEMORY
  %loadMem_4809e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10487 = getelementptr inbounds %struct.GPR, %struct.GPR* %10486, i32 0, i32 33
  %10488 = getelementptr inbounds %struct.Reg, %struct.Reg* %10487, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %10488 to i64*
  %10489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10490 = getelementptr inbounds %struct.GPR, %struct.GPR* %10489, i32 0, i32 15
  %10491 = getelementptr inbounds %struct.Reg, %struct.Reg* %10490, i32 0, i32 0
  %RBP.i675 = bitcast %union.anon* %10491 to i64*
  %10492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10493 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10492, i64 0, i64 0
  %XMM0.i676 = bitcast %union.VectorReg* %10493 to %union.vec128_t*
  %10494 = load i64, i64* %RBP.i675
  %10495 = sub i64 %10494, 24
  %10496 = bitcast %union.vec128_t* %XMM0.i676 to i8*
  %10497 = load i64, i64* %PC.i674
  %10498 = add i64 %10497, 5
  store i64 %10498, i64* %PC.i674
  %10499 = bitcast i8* %10496 to <2 x float>*
  %10500 = load <2 x float>, <2 x float>* %10499, align 1
  %10501 = extractelement <2 x float> %10500, i32 0
  %10502 = inttoptr i64 %10495 to float*
  store float %10501, float* %10502
  store %struct.Memory* %loadMem_4809e1, %struct.Memory** %MEMORY
  br label %block_.L_4809e6

block_.L_4809e6:                                  ; preds = %block_.L_4809d2, %block_.L_480848
  %loadMem_4809e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10504 = getelementptr inbounds %struct.GPR, %struct.GPR* %10503, i32 0, i32 33
  %10505 = getelementptr inbounds %struct.Reg, %struct.Reg* %10504, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %10505 to i64*
  %10506 = load i64, i64* %PC.i673
  %10507 = add i64 %10506, 248
  %10508 = load i64, i64* %PC.i673
  %10509 = add i64 %10508, 5
  store i64 %10509, i64* %PC.i673
  %10510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10507, i64* %10510, align 8
  store %struct.Memory* %loadMem_4809e6, %struct.Memory** %MEMORY
  br label %block_.L_480ade

block_.L_4809eb:                                  ; preds = %routine_ucomisd__xmm0___xmm1.exit1655
  %loadMem_4809eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10512 = getelementptr inbounds %struct.GPR, %struct.GPR* %10511, i32 0, i32 33
  %10513 = getelementptr inbounds %struct.Reg, %struct.Reg* %10512, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %10513 to i64*
  %10514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10515 = getelementptr inbounds %struct.GPR, %struct.GPR* %10514, i32 0, i32 1
  %10516 = getelementptr inbounds %struct.Reg, %struct.Reg* %10515, i32 0, i32 0
  %RAX.i672 = bitcast %union.anon* %10516 to i64*
  %10517 = load i64, i64* %PC.i671
  %10518 = add i64 %10517, 10
  store i64 %10518, i64* %PC.i671
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i672, align 8
  store %struct.Memory* %loadMem_4809eb, %struct.Memory** %MEMORY
  %loadMem_4809f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10520 = getelementptr inbounds %struct.GPR, %struct.GPR* %10519, i32 0, i32 33
  %10521 = getelementptr inbounds %struct.Reg, %struct.Reg* %10520, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %10521 to i64*
  %10522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10523 = getelementptr inbounds %struct.GPR, %struct.GPR* %10522, i32 0, i32 15
  %10524 = getelementptr inbounds %struct.Reg, %struct.Reg* %10523, i32 0, i32 0
  %RBP.i669 = bitcast %union.anon* %10524 to i64*
  %10525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10526 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10525, i64 0, i64 0
  %YMM0.i670 = bitcast %union.VectorReg* %10526 to %"class.std::bitset"*
  %10527 = bitcast %"class.std::bitset"* %YMM0.i670 to i8*
  %10528 = load i64, i64* %RBP.i669
  %10529 = sub i64 %10528, 28
  %10530 = load i64, i64* %PC.i668
  %10531 = add i64 %10530, 5
  store i64 %10531, i64* %PC.i668
  %10532 = inttoptr i64 %10529 to float*
  %10533 = load float, float* %10532
  %10534 = bitcast i8* %10527 to float*
  store float %10533, float* %10534, align 1
  %10535 = getelementptr inbounds i8, i8* %10527, i64 4
  %10536 = bitcast i8* %10535 to float*
  store float 0.000000e+00, float* %10536, align 1
  %10537 = getelementptr inbounds i8, i8* %10527, i64 8
  %10538 = bitcast i8* %10537 to float*
  store float 0.000000e+00, float* %10538, align 1
  %10539 = getelementptr inbounds i8, i8* %10527, i64 12
  %10540 = bitcast i8* %10539 to float*
  store float 0.000000e+00, float* %10540, align 1
  store %struct.Memory* %loadMem_4809f5, %struct.Memory** %MEMORY
  %loadMem_4809fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10542 = getelementptr inbounds %struct.GPR, %struct.GPR* %10541, i32 0, i32 33
  %10543 = getelementptr inbounds %struct.Reg, %struct.Reg* %10542, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %10543 to i64*
  %10544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10545 = getelementptr inbounds %struct.GPR, %struct.GPR* %10544, i32 0, i32 5
  %10546 = getelementptr inbounds %struct.Reg, %struct.Reg* %10545, i32 0, i32 0
  %RCX.i666 = bitcast %union.anon* %10546 to i64*
  %10547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10548 = getelementptr inbounds %struct.GPR, %struct.GPR* %10547, i32 0, i32 15
  %10549 = getelementptr inbounds %struct.Reg, %struct.Reg* %10548, i32 0, i32 0
  %RBP.i667 = bitcast %union.anon* %10549 to i64*
  %10550 = load i64, i64* %RBP.i667
  %10551 = sub i64 %10550, 8
  %10552 = load i64, i64* %PC.i665
  %10553 = add i64 %10552, 4
  store i64 %10553, i64* %PC.i665
  %10554 = inttoptr i64 %10551 to i32*
  %10555 = load i32, i32* %10554
  %10556 = sext i32 %10555 to i64
  store i64 %10556, i64* %RCX.i666, align 8
  store %struct.Memory* %loadMem_4809fa, %struct.Memory** %MEMORY
  %loadMem_4809fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10558 = getelementptr inbounds %struct.GPR, %struct.GPR* %10557, i32 0, i32 33
  %10559 = getelementptr inbounds %struct.Reg, %struct.Reg* %10558, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %10559 to i64*
  %10560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10561 = getelementptr inbounds %struct.GPR, %struct.GPR* %10560, i32 0, i32 5
  %10562 = getelementptr inbounds %struct.Reg, %struct.Reg* %10561, i32 0, i32 0
  %RCX.i664 = bitcast %union.anon* %10562 to i64*
  %10563 = load i64, i64* %RCX.i664
  %10564 = load i64, i64* %PC.i663
  %10565 = add i64 %10564, 7
  store i64 %10565, i64* %PC.i663
  %10566 = sext i64 %10563 to i128
  %10567 = and i128 %10566, -18446744073709551616
  %10568 = zext i64 %10563 to i128
  %10569 = or i128 %10567, %10568
  %10570 = mul i128 564, %10569
  %10571 = trunc i128 %10570 to i64
  store i64 %10571, i64* %RCX.i664, align 8
  %10572 = sext i64 %10571 to i128
  %10573 = icmp ne i128 %10572, %10570
  %10574 = zext i1 %10573 to i8
  %10575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10574, i8* %10575, align 1
  %10576 = trunc i128 %10570 to i32
  %10577 = and i32 %10576, 255
  %10578 = call i32 @llvm.ctpop.i32(i32 %10577)
  %10579 = trunc i32 %10578 to i8
  %10580 = and i8 %10579, 1
  %10581 = xor i8 %10580, 1
  %10582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10581, i8* %10582, align 1
  %10583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10583, align 1
  %10584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10584, align 1
  %10585 = lshr i64 %10571, 63
  %10586 = trunc i64 %10585 to i8
  %10587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10586, i8* %10587, align 1
  %10588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10574, i8* %10588, align 1
  store %struct.Memory* %loadMem_4809fe, %struct.Memory** %MEMORY
  %loadMem_480a05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10590 = getelementptr inbounds %struct.GPR, %struct.GPR* %10589, i32 0, i32 33
  %10591 = getelementptr inbounds %struct.Reg, %struct.Reg* %10590, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %10591 to i64*
  %10592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10593 = getelementptr inbounds %struct.GPR, %struct.GPR* %10592, i32 0, i32 1
  %10594 = getelementptr inbounds %struct.Reg, %struct.Reg* %10593, i32 0, i32 0
  %RAX.i661 = bitcast %union.anon* %10594 to i64*
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10596 = getelementptr inbounds %struct.GPR, %struct.GPR* %10595, i32 0, i32 7
  %10597 = getelementptr inbounds %struct.Reg, %struct.Reg* %10596, i32 0, i32 0
  %RDX.i662 = bitcast %union.anon* %10597 to i64*
  %10598 = load i64, i64* %RAX.i661
  %10599 = load i64, i64* %PC.i660
  %10600 = add i64 %10599, 3
  store i64 %10600, i64* %PC.i660
  store i64 %10598, i64* %RDX.i662, align 8
  store %struct.Memory* %loadMem_480a05, %struct.Memory** %MEMORY
  %loadMem_480a08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10602 = getelementptr inbounds %struct.GPR, %struct.GPR* %10601, i32 0, i32 33
  %10603 = getelementptr inbounds %struct.Reg, %struct.Reg* %10602, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %10603 to i64*
  %10604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10605 = getelementptr inbounds %struct.GPR, %struct.GPR* %10604, i32 0, i32 5
  %10606 = getelementptr inbounds %struct.Reg, %struct.Reg* %10605, i32 0, i32 0
  %RCX.i658 = bitcast %union.anon* %10606 to i64*
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10608 = getelementptr inbounds %struct.GPR, %struct.GPR* %10607, i32 0, i32 7
  %10609 = getelementptr inbounds %struct.Reg, %struct.Reg* %10608, i32 0, i32 0
  %RDX.i659 = bitcast %union.anon* %10609 to i64*
  %10610 = load i64, i64* %RDX.i659
  %10611 = load i64, i64* %RCX.i658
  %10612 = load i64, i64* %PC.i657
  %10613 = add i64 %10612, 3
  store i64 %10613, i64* %PC.i657
  %10614 = add i64 %10611, %10610
  store i64 %10614, i64* %RDX.i659, align 8
  %10615 = icmp ult i64 %10614, %10610
  %10616 = icmp ult i64 %10614, %10611
  %10617 = or i1 %10615, %10616
  %10618 = zext i1 %10617 to i8
  %10619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10618, i8* %10619, align 1
  %10620 = trunc i64 %10614 to i32
  %10621 = and i32 %10620, 255
  %10622 = call i32 @llvm.ctpop.i32(i32 %10621)
  %10623 = trunc i32 %10622 to i8
  %10624 = and i8 %10623, 1
  %10625 = xor i8 %10624, 1
  %10626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10625, i8* %10626, align 1
  %10627 = xor i64 %10611, %10610
  %10628 = xor i64 %10627, %10614
  %10629 = lshr i64 %10628, 4
  %10630 = trunc i64 %10629 to i8
  %10631 = and i8 %10630, 1
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10631, i8* %10632, align 1
  %10633 = icmp eq i64 %10614, 0
  %10634 = zext i1 %10633 to i8
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10634, i8* %10635, align 1
  %10636 = lshr i64 %10614, 63
  %10637 = trunc i64 %10636 to i8
  %10638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10637, i8* %10638, align 1
  %10639 = lshr i64 %10610, 63
  %10640 = lshr i64 %10611, 63
  %10641 = xor i64 %10636, %10639
  %10642 = xor i64 %10636, %10640
  %10643 = add i64 %10641, %10642
  %10644 = icmp eq i64 %10643, 2
  %10645 = zext i1 %10644 to i8
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10645, i8* %10646, align 1
  store %struct.Memory* %loadMem_480a08, %struct.Memory** %MEMORY
  %loadMem_480a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10648 = getelementptr inbounds %struct.GPR, %struct.GPR* %10647, i32 0, i32 33
  %10649 = getelementptr inbounds %struct.Reg, %struct.Reg* %10648, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %10649 to i64*
  %10650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10651 = getelementptr inbounds %struct.GPR, %struct.GPR* %10650, i32 0, i32 7
  %10652 = getelementptr inbounds %struct.Reg, %struct.Reg* %10651, i32 0, i32 0
  %RDX.i655 = bitcast %union.anon* %10652 to i64*
  %10653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10654 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10653, i64 0, i64 1
  %YMM1.i656 = bitcast %union.VectorReg* %10654 to %"class.std::bitset"*
  %10655 = bitcast %"class.std::bitset"* %YMM1.i656 to i8*
  %10656 = load i64, i64* %RDX.i655
  %10657 = add i64 %10656, 36
  %10658 = load i64, i64* %PC.i654
  %10659 = add i64 %10658, 5
  store i64 %10659, i64* %PC.i654
  %10660 = inttoptr i64 %10657 to float*
  %10661 = load float, float* %10660
  %10662 = bitcast i8* %10655 to float*
  store float %10661, float* %10662, align 1
  %10663 = getelementptr inbounds i8, i8* %10655, i64 4
  %10664 = bitcast i8* %10663 to float*
  store float 0.000000e+00, float* %10664, align 1
  %10665 = getelementptr inbounds i8, i8* %10655, i64 8
  %10666 = bitcast i8* %10665 to float*
  store float 0.000000e+00, float* %10666, align 1
  %10667 = getelementptr inbounds i8, i8* %10655, i64 12
  %10668 = bitcast i8* %10667 to float*
  store float 0.000000e+00, float* %10668, align 1
  store %struct.Memory* %loadMem_480a0b, %struct.Memory** %MEMORY
  %loadMem_480a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10670 = getelementptr inbounds %struct.GPR, %struct.GPR* %10669, i32 0, i32 33
  %10671 = getelementptr inbounds %struct.Reg, %struct.Reg* %10670, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %10671 to i64*
  %10672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10673 = getelementptr inbounds %struct.GPR, %struct.GPR* %10672, i32 0, i32 5
  %10674 = getelementptr inbounds %struct.Reg, %struct.Reg* %10673, i32 0, i32 0
  %RCX.i652 = bitcast %union.anon* %10674 to i64*
  %10675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10676 = getelementptr inbounds %struct.GPR, %struct.GPR* %10675, i32 0, i32 15
  %10677 = getelementptr inbounds %struct.Reg, %struct.Reg* %10676, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %10677 to i64*
  %10678 = load i64, i64* %RBP.i653
  %10679 = sub i64 %10678, 8
  %10680 = load i64, i64* %PC.i651
  %10681 = add i64 %10680, 4
  store i64 %10681, i64* %PC.i651
  %10682 = inttoptr i64 %10679 to i32*
  %10683 = load i32, i32* %10682
  %10684 = sext i32 %10683 to i64
  store i64 %10684, i64* %RCX.i652, align 8
  store %struct.Memory* %loadMem_480a10, %struct.Memory** %MEMORY
  %loadMem_480a14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10686 = getelementptr inbounds %struct.GPR, %struct.GPR* %10685, i32 0, i32 33
  %10687 = getelementptr inbounds %struct.Reg, %struct.Reg* %10686, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %10687 to i64*
  %10688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10689 = getelementptr inbounds %struct.GPR, %struct.GPR* %10688, i32 0, i32 5
  %10690 = getelementptr inbounds %struct.Reg, %struct.Reg* %10689, i32 0, i32 0
  %RCX.i650 = bitcast %union.anon* %10690 to i64*
  %10691 = load i64, i64* %RCX.i650
  %10692 = load i64, i64* %PC.i649
  %10693 = add i64 %10692, 7
  store i64 %10693, i64* %PC.i649
  %10694 = sext i64 %10691 to i128
  %10695 = and i128 %10694, -18446744073709551616
  %10696 = zext i64 %10691 to i128
  %10697 = or i128 %10695, %10696
  %10698 = mul i128 564, %10697
  %10699 = trunc i128 %10698 to i64
  store i64 %10699, i64* %RCX.i650, align 8
  %10700 = sext i64 %10699 to i128
  %10701 = icmp ne i128 %10700, %10698
  %10702 = zext i1 %10701 to i8
  %10703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10702, i8* %10703, align 1
  %10704 = trunc i128 %10698 to i32
  %10705 = and i32 %10704, 255
  %10706 = call i32 @llvm.ctpop.i32(i32 %10705)
  %10707 = trunc i32 %10706 to i8
  %10708 = and i8 %10707, 1
  %10709 = xor i8 %10708, 1
  %10710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10709, i8* %10710, align 1
  %10711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10711, align 1
  %10712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10712, align 1
  %10713 = lshr i64 %10699, 63
  %10714 = trunc i64 %10713 to i8
  %10715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10714, i8* %10715, align 1
  %10716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10702, i8* %10716, align 1
  store %struct.Memory* %loadMem_480a14, %struct.Memory** %MEMORY
  %loadMem_480a1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10718 = getelementptr inbounds %struct.GPR, %struct.GPR* %10717, i32 0, i32 33
  %10719 = getelementptr inbounds %struct.Reg, %struct.Reg* %10718, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %10719 to i64*
  %10720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10721 = getelementptr inbounds %struct.GPR, %struct.GPR* %10720, i32 0, i32 1
  %10722 = getelementptr inbounds %struct.Reg, %struct.Reg* %10721, i32 0, i32 0
  %RAX.i647 = bitcast %union.anon* %10722 to i64*
  %10723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10724 = getelementptr inbounds %struct.GPR, %struct.GPR* %10723, i32 0, i32 7
  %10725 = getelementptr inbounds %struct.Reg, %struct.Reg* %10724, i32 0, i32 0
  %RDX.i648 = bitcast %union.anon* %10725 to i64*
  %10726 = load i64, i64* %RAX.i647
  %10727 = load i64, i64* %PC.i646
  %10728 = add i64 %10727, 3
  store i64 %10728, i64* %PC.i646
  store i64 %10726, i64* %RDX.i648, align 8
  store %struct.Memory* %loadMem_480a1b, %struct.Memory** %MEMORY
  %loadMem_480a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10730 = getelementptr inbounds %struct.GPR, %struct.GPR* %10729, i32 0, i32 33
  %10731 = getelementptr inbounds %struct.Reg, %struct.Reg* %10730, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %10731 to i64*
  %10732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10733 = getelementptr inbounds %struct.GPR, %struct.GPR* %10732, i32 0, i32 5
  %10734 = getelementptr inbounds %struct.Reg, %struct.Reg* %10733, i32 0, i32 0
  %RCX.i644 = bitcast %union.anon* %10734 to i64*
  %10735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10736 = getelementptr inbounds %struct.GPR, %struct.GPR* %10735, i32 0, i32 7
  %10737 = getelementptr inbounds %struct.Reg, %struct.Reg* %10736, i32 0, i32 0
  %RDX.i645 = bitcast %union.anon* %10737 to i64*
  %10738 = load i64, i64* %RDX.i645
  %10739 = load i64, i64* %RCX.i644
  %10740 = load i64, i64* %PC.i643
  %10741 = add i64 %10740, 3
  store i64 %10741, i64* %PC.i643
  %10742 = add i64 %10739, %10738
  store i64 %10742, i64* %RDX.i645, align 8
  %10743 = icmp ult i64 %10742, %10738
  %10744 = icmp ult i64 %10742, %10739
  %10745 = or i1 %10743, %10744
  %10746 = zext i1 %10745 to i8
  %10747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10746, i8* %10747, align 1
  %10748 = trunc i64 %10742 to i32
  %10749 = and i32 %10748, 255
  %10750 = call i32 @llvm.ctpop.i32(i32 %10749)
  %10751 = trunc i32 %10750 to i8
  %10752 = and i8 %10751, 1
  %10753 = xor i8 %10752, 1
  %10754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10753, i8* %10754, align 1
  %10755 = xor i64 %10739, %10738
  %10756 = xor i64 %10755, %10742
  %10757 = lshr i64 %10756, 4
  %10758 = trunc i64 %10757 to i8
  %10759 = and i8 %10758, 1
  %10760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10759, i8* %10760, align 1
  %10761 = icmp eq i64 %10742, 0
  %10762 = zext i1 %10761 to i8
  %10763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10762, i8* %10763, align 1
  %10764 = lshr i64 %10742, 63
  %10765 = trunc i64 %10764 to i8
  %10766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10765, i8* %10766, align 1
  %10767 = lshr i64 %10738, 63
  %10768 = lshr i64 %10739, 63
  %10769 = xor i64 %10764, %10767
  %10770 = xor i64 %10764, %10768
  %10771 = add i64 %10769, %10770
  %10772 = icmp eq i64 %10771, 2
  %10773 = zext i1 %10772 to i8
  %10774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10773, i8* %10774, align 1
  store %struct.Memory* %loadMem_480a1e, %struct.Memory** %MEMORY
  %loadMem_480a21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10776 = getelementptr inbounds %struct.GPR, %struct.GPR* %10775, i32 0, i32 33
  %10777 = getelementptr inbounds %struct.Reg, %struct.Reg* %10776, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %10777 to i64*
  %10778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10779 = getelementptr inbounds %struct.GPR, %struct.GPR* %10778, i32 0, i32 7
  %10780 = getelementptr inbounds %struct.Reg, %struct.Reg* %10779, i32 0, i32 0
  %RDX.i641 = bitcast %union.anon* %10780 to i64*
  %10781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10782 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10781, i64 0, i64 2
  %YMM2.i642 = bitcast %union.VectorReg* %10782 to %"class.std::bitset"*
  %10783 = bitcast %"class.std::bitset"* %YMM2.i642 to i8*
  %10784 = load i64, i64* %RDX.i641
  %10785 = add i64 %10784, 36
  %10786 = load i64, i64* %PC.i640
  %10787 = add i64 %10786, 5
  store i64 %10787, i64* %PC.i640
  %10788 = inttoptr i64 %10785 to float*
  %10789 = load float, float* %10788
  %10790 = bitcast i8* %10783 to float*
  store float %10789, float* %10790, align 1
  %10791 = getelementptr inbounds i8, i8* %10783, i64 4
  %10792 = bitcast i8* %10791 to float*
  store float 0.000000e+00, float* %10792, align 1
  %10793 = getelementptr inbounds i8, i8* %10783, i64 8
  %10794 = bitcast i8* %10793 to float*
  store float 0.000000e+00, float* %10794, align 1
  %10795 = getelementptr inbounds i8, i8* %10783, i64 12
  %10796 = bitcast i8* %10795 to float*
  store float 0.000000e+00, float* %10796, align 1
  store %struct.Memory* %loadMem_480a21, %struct.Memory** %MEMORY
  %loadMem_480a26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10798 = getelementptr inbounds %struct.GPR, %struct.GPR* %10797, i32 0, i32 33
  %10799 = getelementptr inbounds %struct.Reg, %struct.Reg* %10798, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %10799 to i64*
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10801 = getelementptr inbounds %struct.GPR, %struct.GPR* %10800, i32 0, i32 5
  %10802 = getelementptr inbounds %struct.Reg, %struct.Reg* %10801, i32 0, i32 0
  %RCX.i638 = bitcast %union.anon* %10802 to i64*
  %10803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10804 = getelementptr inbounds %struct.GPR, %struct.GPR* %10803, i32 0, i32 15
  %10805 = getelementptr inbounds %struct.Reg, %struct.Reg* %10804, i32 0, i32 0
  %RBP.i639 = bitcast %union.anon* %10805 to i64*
  %10806 = load i64, i64* %RBP.i639
  %10807 = sub i64 %10806, 8
  %10808 = load i64, i64* %PC.i637
  %10809 = add i64 %10808, 4
  store i64 %10809, i64* %PC.i637
  %10810 = inttoptr i64 %10807 to i32*
  %10811 = load i32, i32* %10810
  %10812 = sext i32 %10811 to i64
  store i64 %10812, i64* %RCX.i638, align 8
  store %struct.Memory* %loadMem_480a26, %struct.Memory** %MEMORY
  %loadMem_480a2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10814 = getelementptr inbounds %struct.GPR, %struct.GPR* %10813, i32 0, i32 33
  %10815 = getelementptr inbounds %struct.Reg, %struct.Reg* %10814, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %10815 to i64*
  %10816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10817 = getelementptr inbounds %struct.GPR, %struct.GPR* %10816, i32 0, i32 5
  %10818 = getelementptr inbounds %struct.Reg, %struct.Reg* %10817, i32 0, i32 0
  %RCX.i636 = bitcast %union.anon* %10818 to i64*
  %10819 = load i64, i64* %RCX.i636
  %10820 = load i64, i64* %PC.i635
  %10821 = add i64 %10820, 7
  store i64 %10821, i64* %PC.i635
  %10822 = sext i64 %10819 to i128
  %10823 = and i128 %10822, -18446744073709551616
  %10824 = zext i64 %10819 to i128
  %10825 = or i128 %10823, %10824
  %10826 = mul i128 564, %10825
  %10827 = trunc i128 %10826 to i64
  store i64 %10827, i64* %RCX.i636, align 8
  %10828 = sext i64 %10827 to i128
  %10829 = icmp ne i128 %10828, %10826
  %10830 = zext i1 %10829 to i8
  %10831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10830, i8* %10831, align 1
  %10832 = trunc i128 %10826 to i32
  %10833 = and i32 %10832, 255
  %10834 = call i32 @llvm.ctpop.i32(i32 %10833)
  %10835 = trunc i32 %10834 to i8
  %10836 = and i8 %10835, 1
  %10837 = xor i8 %10836, 1
  %10838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10837, i8* %10838, align 1
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10839, align 1
  %10840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10840, align 1
  %10841 = lshr i64 %10827, 63
  %10842 = trunc i64 %10841 to i8
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10842, i8* %10843, align 1
  %10844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10830, i8* %10844, align 1
  store %struct.Memory* %loadMem_480a2a, %struct.Memory** %MEMORY
  %loadMem_480a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10846 = getelementptr inbounds %struct.GPR, %struct.GPR* %10845, i32 0, i32 33
  %10847 = getelementptr inbounds %struct.Reg, %struct.Reg* %10846, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %10847 to i64*
  %10848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10849 = getelementptr inbounds %struct.GPR, %struct.GPR* %10848, i32 0, i32 1
  %10850 = getelementptr inbounds %struct.Reg, %struct.Reg* %10849, i32 0, i32 0
  %RAX.i633 = bitcast %union.anon* %10850 to i64*
  %10851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10852 = getelementptr inbounds %struct.GPR, %struct.GPR* %10851, i32 0, i32 5
  %10853 = getelementptr inbounds %struct.Reg, %struct.Reg* %10852, i32 0, i32 0
  %RCX.i634 = bitcast %union.anon* %10853 to i64*
  %10854 = load i64, i64* %RAX.i633
  %10855 = load i64, i64* %RCX.i634
  %10856 = load i64, i64* %PC.i632
  %10857 = add i64 %10856, 3
  store i64 %10857, i64* %PC.i632
  %10858 = add i64 %10855, %10854
  store i64 %10858, i64* %RAX.i633, align 8
  %10859 = icmp ult i64 %10858, %10854
  %10860 = icmp ult i64 %10858, %10855
  %10861 = or i1 %10859, %10860
  %10862 = zext i1 %10861 to i8
  %10863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10862, i8* %10863, align 1
  %10864 = trunc i64 %10858 to i32
  %10865 = and i32 %10864, 255
  %10866 = call i32 @llvm.ctpop.i32(i32 %10865)
  %10867 = trunc i32 %10866 to i8
  %10868 = and i8 %10867, 1
  %10869 = xor i8 %10868, 1
  %10870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10869, i8* %10870, align 1
  %10871 = xor i64 %10855, %10854
  %10872 = xor i64 %10871, %10858
  %10873 = lshr i64 %10872, 4
  %10874 = trunc i64 %10873 to i8
  %10875 = and i8 %10874, 1
  %10876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10875, i8* %10876, align 1
  %10877 = icmp eq i64 %10858, 0
  %10878 = zext i1 %10877 to i8
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10878, i8* %10879, align 1
  %10880 = lshr i64 %10858, 63
  %10881 = trunc i64 %10880 to i8
  %10882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10881, i8* %10882, align 1
  %10883 = lshr i64 %10854, 63
  %10884 = lshr i64 %10855, 63
  %10885 = xor i64 %10880, %10883
  %10886 = xor i64 %10880, %10884
  %10887 = add i64 %10885, %10886
  %10888 = icmp eq i64 %10887, 2
  %10889 = zext i1 %10888 to i8
  %10890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10889, i8* %10890, align 1
  store %struct.Memory* %loadMem_480a31, %struct.Memory** %MEMORY
  %loadMem_480a34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10892 = getelementptr inbounds %struct.GPR, %struct.GPR* %10891, i32 0, i32 33
  %10893 = getelementptr inbounds %struct.Reg, %struct.Reg* %10892, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %10893 to i64*
  %10894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10895 = getelementptr inbounds %struct.GPR, %struct.GPR* %10894, i32 0, i32 1
  %10896 = getelementptr inbounds %struct.Reg, %struct.Reg* %10895, i32 0, i32 0
  %RAX.i630 = bitcast %union.anon* %10896 to i64*
  %10897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10898 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10897, i64 0, i64 3
  %YMM3.i631 = bitcast %union.VectorReg* %10898 to %"class.std::bitset"*
  %10899 = bitcast %"class.std::bitset"* %YMM3.i631 to i8*
  %10900 = load i64, i64* %RAX.i630
  %10901 = add i64 %10900, 44
  %10902 = load i64, i64* %PC.i629
  %10903 = add i64 %10902, 5
  store i64 %10903, i64* %PC.i629
  %10904 = inttoptr i64 %10901 to float*
  %10905 = load float, float* %10904
  %10906 = bitcast i8* %10899 to float*
  store float %10905, float* %10906, align 1
  %10907 = getelementptr inbounds i8, i8* %10899, i64 4
  %10908 = bitcast i8* %10907 to float*
  store float 0.000000e+00, float* %10908, align 1
  %10909 = getelementptr inbounds i8, i8* %10899, i64 8
  %10910 = bitcast i8* %10909 to float*
  store float 0.000000e+00, float* %10910, align 1
  %10911 = getelementptr inbounds i8, i8* %10899, i64 12
  %10912 = bitcast i8* %10911 to float*
  store float 0.000000e+00, float* %10912, align 1
  store %struct.Memory* %loadMem_480a34, %struct.Memory** %MEMORY
  %loadMem_480a39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10914 = getelementptr inbounds %struct.GPR, %struct.GPR* %10913, i32 0, i32 33
  %10915 = getelementptr inbounds %struct.Reg, %struct.Reg* %10914, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %10915 to i64*
  %10916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10917 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10916, i64 0, i64 2
  %XMM2.i624 = bitcast %union.VectorReg* %10917 to %union.vec128_t*
  %10918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10919 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10918, i64 0, i64 3
  %XMM3.i625 = bitcast %union.VectorReg* %10919 to %union.vec128_t*
  %10920 = bitcast %union.vec128_t* %XMM3.i625 to i8*
  %10921 = bitcast %union.vec128_t* %XMM2.i624 to i8*
  %10922 = load i64, i64* %PC.i623
  %10923 = add i64 %10922, 3
  store i64 %10923, i64* %PC.i623
  %10924 = bitcast i8* %10920 to <2 x float>*
  %10925 = load <2 x float>, <2 x float>* %10924, align 1
  %10926 = extractelement <2 x float> %10925, i32 0
  %10927 = bitcast i8* %10921 to <2 x float>*
  %10928 = load <2 x float>, <2 x float>* %10927, align 1
  %10929 = extractelement <2 x float> %10928, i32 0
  %10930 = fcmp uno float %10926, %10929
  br i1 %10930, label %10931, label %10943

; <label>:10931:                                  ; preds = %block_.L_4809eb
  %10932 = fadd float %10926, %10929
  %10933 = bitcast float %10932 to i32
  %10934 = and i32 %10933, 2143289344
  %10935 = icmp eq i32 %10934, 2139095040
  %10936 = and i32 %10933, 4194303
  %10937 = icmp ne i32 %10936, 0
  %10938 = and i1 %10935, %10937
  br i1 %10938, label %10939, label %10949

; <label>:10939:                                  ; preds = %10931
  %10940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10941 = load i64, i64* %10940, align 8
  %10942 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %10941, %struct.Memory* %loadMem_480a39)
  br label %routine_ucomiss__xmm2___xmm3.exit

; <label>:10943:                                  ; preds = %block_.L_4809eb
  %10944 = fcmp ogt float %10926, %10929
  br i1 %10944, label %10949, label %10945

; <label>:10945:                                  ; preds = %10943
  %10946 = fcmp olt float %10926, %10929
  br i1 %10946, label %10949, label %10947

; <label>:10947:                                  ; preds = %10945
  %10948 = fcmp oeq float %10926, %10929
  br i1 %10948, label %10949, label %10956

; <label>:10949:                                  ; preds = %10947, %10945, %10943, %10931
  %10950 = phi i8 [ 0, %10943 ], [ 0, %10945 ], [ 1, %10947 ], [ 1, %10931 ]
  %10951 = phi i8 [ 0, %10943 ], [ 0, %10945 ], [ 0, %10947 ], [ 1, %10931 ]
  %10952 = phi i8 [ 0, %10943 ], [ 1, %10945 ], [ 0, %10947 ], [ 1, %10931 ]
  %10953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10950, i8* %10953, align 1
  %10954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10951, i8* %10954, align 1
  %10955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10952, i8* %10955, align 1
  br label %10956

; <label>:10956:                                  ; preds = %10949, %10947
  %10957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10957, align 1
  %10958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10958, align 1
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10959, align 1
  br label %routine_ucomiss__xmm2___xmm3.exit

routine_ucomiss__xmm2___xmm3.exit:                ; preds = %10939, %10956
  %10960 = phi %struct.Memory* [ %10942, %10939 ], [ %loadMem_480a39, %10956 ]
  store %struct.Memory* %10960, %struct.Memory** %MEMORY
  %loadMem_480a3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10962 = getelementptr inbounds %struct.GPR, %struct.GPR* %10961, i32 0, i32 33
  %10963 = getelementptr inbounds %struct.Reg, %struct.Reg* %10962, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %10963 to i64*
  %10964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10965 = getelementptr inbounds %struct.GPR, %struct.GPR* %10964, i32 0, i32 15
  %10966 = getelementptr inbounds %struct.Reg, %struct.Reg* %10965, i32 0, i32 0
  %RBP.i621 = bitcast %union.anon* %10966 to i64*
  %10967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10968 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10967, i64 0, i64 1
  %XMM1.i622 = bitcast %union.VectorReg* %10968 to %union.vec128_t*
  %10969 = load i64, i64* %RBP.i621
  %10970 = sub i64 %10969, 172
  %10971 = bitcast %union.vec128_t* %XMM1.i622 to i8*
  %10972 = load i64, i64* %PC.i620
  %10973 = add i64 %10972, 8
  store i64 %10973, i64* %PC.i620
  %10974 = bitcast i8* %10971 to <2 x float>*
  %10975 = load <2 x float>, <2 x float>* %10974, align 1
  %10976 = extractelement <2 x float> %10975, i32 0
  %10977 = inttoptr i64 %10970 to float*
  store float %10976, float* %10977
  store %struct.Memory* %loadMem_480a3c, %struct.Memory** %MEMORY
  %loadMem_480a44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10979 = getelementptr inbounds %struct.GPR, %struct.GPR* %10978, i32 0, i32 33
  %10980 = getelementptr inbounds %struct.Reg, %struct.Reg* %10979, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %10980 to i64*
  %10981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10982 = getelementptr inbounds %struct.GPR, %struct.GPR* %10981, i32 0, i32 15
  %10983 = getelementptr inbounds %struct.Reg, %struct.Reg* %10982, i32 0, i32 0
  %RBP.i618 = bitcast %union.anon* %10983 to i64*
  %10984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10985 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10984, i64 0, i64 0
  %XMM0.i619 = bitcast %union.VectorReg* %10985 to %union.vec128_t*
  %10986 = load i64, i64* %RBP.i618
  %10987 = sub i64 %10986, 176
  %10988 = bitcast %union.vec128_t* %XMM0.i619 to i8*
  %10989 = load i64, i64* %PC.i617
  %10990 = add i64 %10989, 8
  store i64 %10990, i64* %PC.i617
  %10991 = bitcast i8* %10988 to <2 x float>*
  %10992 = load <2 x float>, <2 x float>* %10991, align 1
  %10993 = extractelement <2 x float> %10992, i32 0
  %10994 = inttoptr i64 %10987 to float*
  store float %10993, float* %10994
  store %struct.Memory* %loadMem_480a44, %struct.Memory** %MEMORY
  %loadMem_480a4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10996 = getelementptr inbounds %struct.GPR, %struct.GPR* %10995, i32 0, i32 33
  %10997 = getelementptr inbounds %struct.Reg, %struct.Reg* %10996, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %10997 to i64*
  %10998 = load i64, i64* %PC.i616
  %10999 = add i64 %10998, 48
  %11000 = load i64, i64* %PC.i616
  %11001 = add i64 %11000, 6
  %11002 = load i64, i64* %PC.i616
  %11003 = add i64 %11002, 6
  store i64 %11003, i64* %PC.i616
  %11004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11005 = load i8, i8* %11004, align 1
  %11006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11007 = load i8, i8* %11006, align 1
  %11008 = or i8 %11007, %11005
  %11009 = icmp ne i8 %11008, 0
  %11010 = zext i1 %11009 to i8
  store i8 %11010, i8* %BRANCH_TAKEN, align 1
  %11011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11012 = select i1 %11009, i64 %10999, i64 %11001
  store i64 %11012, i64* %11011, align 8
  store %struct.Memory* %loadMem_480a4c, %struct.Memory** %MEMORY
  %loadBr_480a4c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480a4c = icmp eq i8 %loadBr_480a4c, 1
  br i1 %cmpBr_480a4c, label %block_.L_480a7c, label %block_480a52

block_480a52:                                     ; preds = %routine_ucomiss__xmm2___xmm3.exit
  %loadMem_480a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11014 = getelementptr inbounds %struct.GPR, %struct.GPR* %11013, i32 0, i32 33
  %11015 = getelementptr inbounds %struct.Reg, %struct.Reg* %11014, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %11015 to i64*
  %11016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11017 = getelementptr inbounds %struct.GPR, %struct.GPR* %11016, i32 0, i32 1
  %11018 = getelementptr inbounds %struct.Reg, %struct.Reg* %11017, i32 0, i32 0
  %RAX.i615 = bitcast %union.anon* %11018 to i64*
  %11019 = load i64, i64* %PC.i614
  %11020 = add i64 %11019, 10
  store i64 %11020, i64* %PC.i614
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i615, align 8
  store %struct.Memory* %loadMem_480a52, %struct.Memory** %MEMORY
  %loadMem_480a5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11022 = getelementptr inbounds %struct.GPR, %struct.GPR* %11021, i32 0, i32 33
  %11023 = getelementptr inbounds %struct.Reg, %struct.Reg* %11022, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %11023 to i64*
  %11024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11025 = getelementptr inbounds %struct.GPR, %struct.GPR* %11024, i32 0, i32 5
  %11026 = getelementptr inbounds %struct.Reg, %struct.Reg* %11025, i32 0, i32 0
  %RCX.i612 = bitcast %union.anon* %11026 to i64*
  %11027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11028 = getelementptr inbounds %struct.GPR, %struct.GPR* %11027, i32 0, i32 15
  %11029 = getelementptr inbounds %struct.Reg, %struct.Reg* %11028, i32 0, i32 0
  %RBP.i613 = bitcast %union.anon* %11029 to i64*
  %11030 = load i64, i64* %RBP.i613
  %11031 = sub i64 %11030, 8
  %11032 = load i64, i64* %PC.i611
  %11033 = add i64 %11032, 4
  store i64 %11033, i64* %PC.i611
  %11034 = inttoptr i64 %11031 to i32*
  %11035 = load i32, i32* %11034
  %11036 = sext i32 %11035 to i64
  store i64 %11036, i64* %RCX.i612, align 8
  store %struct.Memory* %loadMem_480a5c, %struct.Memory** %MEMORY
  %loadMem_480a60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11038 = getelementptr inbounds %struct.GPR, %struct.GPR* %11037, i32 0, i32 33
  %11039 = getelementptr inbounds %struct.Reg, %struct.Reg* %11038, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %11039 to i64*
  %11040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11041 = getelementptr inbounds %struct.GPR, %struct.GPR* %11040, i32 0, i32 5
  %11042 = getelementptr inbounds %struct.Reg, %struct.Reg* %11041, i32 0, i32 0
  %RCX.i610 = bitcast %union.anon* %11042 to i64*
  %11043 = load i64, i64* %RCX.i610
  %11044 = load i64, i64* %PC.i609
  %11045 = add i64 %11044, 7
  store i64 %11045, i64* %PC.i609
  %11046 = sext i64 %11043 to i128
  %11047 = and i128 %11046, -18446744073709551616
  %11048 = zext i64 %11043 to i128
  %11049 = or i128 %11047, %11048
  %11050 = mul i128 564, %11049
  %11051 = trunc i128 %11050 to i64
  store i64 %11051, i64* %RCX.i610, align 8
  %11052 = sext i64 %11051 to i128
  %11053 = icmp ne i128 %11052, %11050
  %11054 = zext i1 %11053 to i8
  %11055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11054, i8* %11055, align 1
  %11056 = trunc i128 %11050 to i32
  %11057 = and i32 %11056, 255
  %11058 = call i32 @llvm.ctpop.i32(i32 %11057)
  %11059 = trunc i32 %11058 to i8
  %11060 = and i8 %11059, 1
  %11061 = xor i8 %11060, 1
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11061, i8* %11062, align 1
  %11063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11063, align 1
  %11064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11064, align 1
  %11065 = lshr i64 %11051, 63
  %11066 = trunc i64 %11065 to i8
  %11067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11066, i8* %11067, align 1
  %11068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11054, i8* %11068, align 1
  store %struct.Memory* %loadMem_480a60, %struct.Memory** %MEMORY
  %loadMem_480a67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11070 = getelementptr inbounds %struct.GPR, %struct.GPR* %11069, i32 0, i32 33
  %11071 = getelementptr inbounds %struct.Reg, %struct.Reg* %11070, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %11071 to i64*
  %11072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11073 = getelementptr inbounds %struct.GPR, %struct.GPR* %11072, i32 0, i32 1
  %11074 = getelementptr inbounds %struct.Reg, %struct.Reg* %11073, i32 0, i32 0
  %RAX.i607 = bitcast %union.anon* %11074 to i64*
  %11075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11076 = getelementptr inbounds %struct.GPR, %struct.GPR* %11075, i32 0, i32 5
  %11077 = getelementptr inbounds %struct.Reg, %struct.Reg* %11076, i32 0, i32 0
  %RCX.i608 = bitcast %union.anon* %11077 to i64*
  %11078 = load i64, i64* %RAX.i607
  %11079 = load i64, i64* %RCX.i608
  %11080 = load i64, i64* %PC.i606
  %11081 = add i64 %11080, 3
  store i64 %11081, i64* %PC.i606
  %11082 = add i64 %11079, %11078
  store i64 %11082, i64* %RAX.i607, align 8
  %11083 = icmp ult i64 %11082, %11078
  %11084 = icmp ult i64 %11082, %11079
  %11085 = or i1 %11083, %11084
  %11086 = zext i1 %11085 to i8
  %11087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11086, i8* %11087, align 1
  %11088 = trunc i64 %11082 to i32
  %11089 = and i32 %11088, 255
  %11090 = call i32 @llvm.ctpop.i32(i32 %11089)
  %11091 = trunc i32 %11090 to i8
  %11092 = and i8 %11091, 1
  %11093 = xor i8 %11092, 1
  %11094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11093, i8* %11094, align 1
  %11095 = xor i64 %11079, %11078
  %11096 = xor i64 %11095, %11082
  %11097 = lshr i64 %11096, 4
  %11098 = trunc i64 %11097 to i8
  %11099 = and i8 %11098, 1
  %11100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11099, i8* %11100, align 1
  %11101 = icmp eq i64 %11082, 0
  %11102 = zext i1 %11101 to i8
  %11103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11102, i8* %11103, align 1
  %11104 = lshr i64 %11082, 63
  %11105 = trunc i64 %11104 to i8
  %11106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11105, i8* %11106, align 1
  %11107 = lshr i64 %11078, 63
  %11108 = lshr i64 %11079, 63
  %11109 = xor i64 %11104, %11107
  %11110 = xor i64 %11104, %11108
  %11111 = add i64 %11109, %11110
  %11112 = icmp eq i64 %11111, 2
  %11113 = zext i1 %11112 to i8
  %11114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11113, i8* %11114, align 1
  store %struct.Memory* %loadMem_480a67, %struct.Memory** %MEMORY
  %loadMem_480a6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11116 = getelementptr inbounds %struct.GPR, %struct.GPR* %11115, i32 0, i32 33
  %11117 = getelementptr inbounds %struct.Reg, %struct.Reg* %11116, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %11117 to i64*
  %11118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11119 = getelementptr inbounds %struct.GPR, %struct.GPR* %11118, i32 0, i32 1
  %11120 = getelementptr inbounds %struct.Reg, %struct.Reg* %11119, i32 0, i32 0
  %RAX.i604 = bitcast %union.anon* %11120 to i64*
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11122 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11121, i64 0, i64 0
  %YMM0.i605 = bitcast %union.VectorReg* %11122 to %"class.std::bitset"*
  %11123 = bitcast %"class.std::bitset"* %YMM0.i605 to i8*
  %11124 = load i64, i64* %RAX.i604
  %11125 = add i64 %11124, 36
  %11126 = load i64, i64* %PC.i603
  %11127 = add i64 %11126, 5
  store i64 %11127, i64* %PC.i603
  %11128 = inttoptr i64 %11125 to float*
  %11129 = load float, float* %11128
  %11130 = bitcast i8* %11123 to float*
  store float %11129, float* %11130, align 1
  %11131 = getelementptr inbounds i8, i8* %11123, i64 4
  %11132 = bitcast i8* %11131 to float*
  store float 0.000000e+00, float* %11132, align 1
  %11133 = getelementptr inbounds i8, i8* %11123, i64 8
  %11134 = bitcast i8* %11133 to float*
  store float 0.000000e+00, float* %11134, align 1
  %11135 = getelementptr inbounds i8, i8* %11123, i64 12
  %11136 = bitcast i8* %11135 to float*
  store float 0.000000e+00, float* %11136, align 1
  store %struct.Memory* %loadMem_480a6a, %struct.Memory** %MEMORY
  %loadMem_480a6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11138 = getelementptr inbounds %struct.GPR, %struct.GPR* %11137, i32 0, i32 33
  %11139 = getelementptr inbounds %struct.Reg, %struct.Reg* %11138, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %11139 to i64*
  %11140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11141 = getelementptr inbounds %struct.GPR, %struct.GPR* %11140, i32 0, i32 15
  %11142 = getelementptr inbounds %struct.Reg, %struct.Reg* %11141, i32 0, i32 0
  %RBP.i601 = bitcast %union.anon* %11142 to i64*
  %11143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11144 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11143, i64 0, i64 0
  %XMM0.i602 = bitcast %union.VectorReg* %11144 to %union.vec128_t*
  %11145 = load i64, i64* %RBP.i601
  %11146 = sub i64 %11145, 180
  %11147 = bitcast %union.vec128_t* %XMM0.i602 to i8*
  %11148 = load i64, i64* %PC.i600
  %11149 = add i64 %11148, 8
  store i64 %11149, i64* %PC.i600
  %11150 = bitcast i8* %11147 to <2 x float>*
  %11151 = load <2 x float>, <2 x float>* %11150, align 1
  %11152 = extractelement <2 x float> %11151, i32 0
  %11153 = inttoptr i64 %11146 to float*
  store float %11152, float* %11153
  store %struct.Memory* %loadMem_480a6f, %struct.Memory** %MEMORY
  %loadMem_480a77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11155 = getelementptr inbounds %struct.GPR, %struct.GPR* %11154, i32 0, i32 33
  %11156 = getelementptr inbounds %struct.Reg, %struct.Reg* %11155, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %11156 to i64*
  %11157 = load i64, i64* %PC.i599
  %11158 = add i64 %11157, 42
  %11159 = load i64, i64* %PC.i599
  %11160 = add i64 %11159, 5
  store i64 %11160, i64* %PC.i599
  %11161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11158, i64* %11161, align 8
  store %struct.Memory* %loadMem_480a77, %struct.Memory** %MEMORY
  br label %block_.L_480aa1

block_.L_480a7c:                                  ; preds = %routine_ucomiss__xmm2___xmm3.exit
  %loadMem_480a7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11163 = getelementptr inbounds %struct.GPR, %struct.GPR* %11162, i32 0, i32 33
  %11164 = getelementptr inbounds %struct.Reg, %struct.Reg* %11163, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %11164 to i64*
  %11165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11166 = getelementptr inbounds %struct.GPR, %struct.GPR* %11165, i32 0, i32 1
  %11167 = getelementptr inbounds %struct.Reg, %struct.Reg* %11166, i32 0, i32 0
  %RAX.i598 = bitcast %union.anon* %11167 to i64*
  %11168 = load i64, i64* %PC.i597
  %11169 = add i64 %11168, 10
  store i64 %11169, i64* %PC.i597
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i598, align 8
  store %struct.Memory* %loadMem_480a7c, %struct.Memory** %MEMORY
  %loadMem_480a86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11171 = getelementptr inbounds %struct.GPR, %struct.GPR* %11170, i32 0, i32 33
  %11172 = getelementptr inbounds %struct.Reg, %struct.Reg* %11171, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %11172 to i64*
  %11173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11174 = getelementptr inbounds %struct.GPR, %struct.GPR* %11173, i32 0, i32 5
  %11175 = getelementptr inbounds %struct.Reg, %struct.Reg* %11174, i32 0, i32 0
  %RCX.i595 = bitcast %union.anon* %11175 to i64*
  %11176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11177 = getelementptr inbounds %struct.GPR, %struct.GPR* %11176, i32 0, i32 15
  %11178 = getelementptr inbounds %struct.Reg, %struct.Reg* %11177, i32 0, i32 0
  %RBP.i596 = bitcast %union.anon* %11178 to i64*
  %11179 = load i64, i64* %RBP.i596
  %11180 = sub i64 %11179, 8
  %11181 = load i64, i64* %PC.i594
  %11182 = add i64 %11181, 4
  store i64 %11182, i64* %PC.i594
  %11183 = inttoptr i64 %11180 to i32*
  %11184 = load i32, i32* %11183
  %11185 = sext i32 %11184 to i64
  store i64 %11185, i64* %RCX.i595, align 8
  store %struct.Memory* %loadMem_480a86, %struct.Memory** %MEMORY
  %loadMem_480a8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11187 = getelementptr inbounds %struct.GPR, %struct.GPR* %11186, i32 0, i32 33
  %11188 = getelementptr inbounds %struct.Reg, %struct.Reg* %11187, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %11188 to i64*
  %11189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11190 = getelementptr inbounds %struct.GPR, %struct.GPR* %11189, i32 0, i32 5
  %11191 = getelementptr inbounds %struct.Reg, %struct.Reg* %11190, i32 0, i32 0
  %RCX.i593 = bitcast %union.anon* %11191 to i64*
  %11192 = load i64, i64* %RCX.i593
  %11193 = load i64, i64* %PC.i592
  %11194 = add i64 %11193, 7
  store i64 %11194, i64* %PC.i592
  %11195 = sext i64 %11192 to i128
  %11196 = and i128 %11195, -18446744073709551616
  %11197 = zext i64 %11192 to i128
  %11198 = or i128 %11196, %11197
  %11199 = mul i128 564, %11198
  %11200 = trunc i128 %11199 to i64
  store i64 %11200, i64* %RCX.i593, align 8
  %11201 = sext i64 %11200 to i128
  %11202 = icmp ne i128 %11201, %11199
  %11203 = zext i1 %11202 to i8
  %11204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11203, i8* %11204, align 1
  %11205 = trunc i128 %11199 to i32
  %11206 = and i32 %11205, 255
  %11207 = call i32 @llvm.ctpop.i32(i32 %11206)
  %11208 = trunc i32 %11207 to i8
  %11209 = and i8 %11208, 1
  %11210 = xor i8 %11209, 1
  %11211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11210, i8* %11211, align 1
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11212, align 1
  %11213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11213, align 1
  %11214 = lshr i64 %11200, 63
  %11215 = trunc i64 %11214 to i8
  %11216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11215, i8* %11216, align 1
  %11217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11203, i8* %11217, align 1
  store %struct.Memory* %loadMem_480a8a, %struct.Memory** %MEMORY
  %loadMem_480a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11219 = getelementptr inbounds %struct.GPR, %struct.GPR* %11218, i32 0, i32 33
  %11220 = getelementptr inbounds %struct.Reg, %struct.Reg* %11219, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %11220 to i64*
  %11221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11222 = getelementptr inbounds %struct.GPR, %struct.GPR* %11221, i32 0, i32 1
  %11223 = getelementptr inbounds %struct.Reg, %struct.Reg* %11222, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %11223 to i64*
  %11224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11225 = getelementptr inbounds %struct.GPR, %struct.GPR* %11224, i32 0, i32 5
  %11226 = getelementptr inbounds %struct.Reg, %struct.Reg* %11225, i32 0, i32 0
  %RCX.i591 = bitcast %union.anon* %11226 to i64*
  %11227 = load i64, i64* %RAX.i590
  %11228 = load i64, i64* %RCX.i591
  %11229 = load i64, i64* %PC.i589
  %11230 = add i64 %11229, 3
  store i64 %11230, i64* %PC.i589
  %11231 = add i64 %11228, %11227
  store i64 %11231, i64* %RAX.i590, align 8
  %11232 = icmp ult i64 %11231, %11227
  %11233 = icmp ult i64 %11231, %11228
  %11234 = or i1 %11232, %11233
  %11235 = zext i1 %11234 to i8
  %11236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11235, i8* %11236, align 1
  %11237 = trunc i64 %11231 to i32
  %11238 = and i32 %11237, 255
  %11239 = call i32 @llvm.ctpop.i32(i32 %11238)
  %11240 = trunc i32 %11239 to i8
  %11241 = and i8 %11240, 1
  %11242 = xor i8 %11241, 1
  %11243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11242, i8* %11243, align 1
  %11244 = xor i64 %11228, %11227
  %11245 = xor i64 %11244, %11231
  %11246 = lshr i64 %11245, 4
  %11247 = trunc i64 %11246 to i8
  %11248 = and i8 %11247, 1
  %11249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11248, i8* %11249, align 1
  %11250 = icmp eq i64 %11231, 0
  %11251 = zext i1 %11250 to i8
  %11252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11251, i8* %11252, align 1
  %11253 = lshr i64 %11231, 63
  %11254 = trunc i64 %11253 to i8
  %11255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11254, i8* %11255, align 1
  %11256 = lshr i64 %11227, 63
  %11257 = lshr i64 %11228, 63
  %11258 = xor i64 %11253, %11256
  %11259 = xor i64 %11253, %11257
  %11260 = add i64 %11258, %11259
  %11261 = icmp eq i64 %11260, 2
  %11262 = zext i1 %11261 to i8
  %11263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11262, i8* %11263, align 1
  store %struct.Memory* %loadMem_480a91, %struct.Memory** %MEMORY
  %loadMem_480a94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11265 = getelementptr inbounds %struct.GPR, %struct.GPR* %11264, i32 0, i32 33
  %11266 = getelementptr inbounds %struct.Reg, %struct.Reg* %11265, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %11266 to i64*
  %11267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11268 = getelementptr inbounds %struct.GPR, %struct.GPR* %11267, i32 0, i32 1
  %11269 = getelementptr inbounds %struct.Reg, %struct.Reg* %11268, i32 0, i32 0
  %RAX.i587 = bitcast %union.anon* %11269 to i64*
  %11270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11270, i64 0, i64 0
  %YMM0.i588 = bitcast %union.VectorReg* %11271 to %"class.std::bitset"*
  %11272 = bitcast %"class.std::bitset"* %YMM0.i588 to i8*
  %11273 = load i64, i64* %RAX.i587
  %11274 = add i64 %11273, 44
  %11275 = load i64, i64* %PC.i586
  %11276 = add i64 %11275, 5
  store i64 %11276, i64* %PC.i586
  %11277 = inttoptr i64 %11274 to float*
  %11278 = load float, float* %11277
  %11279 = bitcast i8* %11272 to float*
  store float %11278, float* %11279, align 1
  %11280 = getelementptr inbounds i8, i8* %11272, i64 4
  %11281 = bitcast i8* %11280 to float*
  store float 0.000000e+00, float* %11281, align 1
  %11282 = getelementptr inbounds i8, i8* %11272, i64 8
  %11283 = bitcast i8* %11282 to float*
  store float 0.000000e+00, float* %11283, align 1
  %11284 = getelementptr inbounds i8, i8* %11272, i64 12
  %11285 = bitcast i8* %11284 to float*
  store float 0.000000e+00, float* %11285, align 1
  store %struct.Memory* %loadMem_480a94, %struct.Memory** %MEMORY
  %loadMem_480a99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11287 = getelementptr inbounds %struct.GPR, %struct.GPR* %11286, i32 0, i32 33
  %11288 = getelementptr inbounds %struct.Reg, %struct.Reg* %11287, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %11288 to i64*
  %11289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11290 = getelementptr inbounds %struct.GPR, %struct.GPR* %11289, i32 0, i32 15
  %11291 = getelementptr inbounds %struct.Reg, %struct.Reg* %11290, i32 0, i32 0
  %RBP.i584 = bitcast %union.anon* %11291 to i64*
  %11292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11292, i64 0, i64 0
  %XMM0.i585 = bitcast %union.VectorReg* %11293 to %union.vec128_t*
  %11294 = load i64, i64* %RBP.i584
  %11295 = sub i64 %11294, 180
  %11296 = bitcast %union.vec128_t* %XMM0.i585 to i8*
  %11297 = load i64, i64* %PC.i583
  %11298 = add i64 %11297, 8
  store i64 %11298, i64* %PC.i583
  %11299 = bitcast i8* %11296 to <2 x float>*
  %11300 = load <2 x float>, <2 x float>* %11299, align 1
  %11301 = extractelement <2 x float> %11300, i32 0
  %11302 = inttoptr i64 %11295 to float*
  store float %11301, float* %11302
  store %struct.Memory* %loadMem_480a99, %struct.Memory** %MEMORY
  br label %block_.L_480aa1

block_.L_480aa1:                                  ; preds = %block_.L_480a7c, %block_480a52
  %loadMem_480aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11304 = getelementptr inbounds %struct.GPR, %struct.GPR* %11303, i32 0, i32 33
  %11305 = getelementptr inbounds %struct.Reg, %struct.Reg* %11304, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %11305 to i64*
  %11306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11307 = getelementptr inbounds %struct.GPR, %struct.GPR* %11306, i32 0, i32 15
  %11308 = getelementptr inbounds %struct.Reg, %struct.Reg* %11307, i32 0, i32 0
  %RBP.i581 = bitcast %union.anon* %11308 to i64*
  %11309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11310 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11309, i64 0, i64 0
  %YMM0.i582 = bitcast %union.VectorReg* %11310 to %"class.std::bitset"*
  %11311 = bitcast %"class.std::bitset"* %YMM0.i582 to i8*
  %11312 = load i64, i64* %RBP.i581
  %11313 = sub i64 %11312, 180
  %11314 = load i64, i64* %PC.i580
  %11315 = add i64 %11314, 8
  store i64 %11315, i64* %PC.i580
  %11316 = inttoptr i64 %11313 to float*
  %11317 = load float, float* %11316
  %11318 = bitcast i8* %11311 to float*
  store float %11317, float* %11318, align 1
  %11319 = getelementptr inbounds i8, i8* %11311, i64 4
  %11320 = bitcast i8* %11319 to float*
  store float 0.000000e+00, float* %11320, align 1
  %11321 = getelementptr inbounds i8, i8* %11311, i64 8
  %11322 = bitcast i8* %11321 to float*
  store float 0.000000e+00, float* %11322, align 1
  %11323 = getelementptr inbounds i8, i8* %11311, i64 12
  %11324 = bitcast i8* %11323 to float*
  store float 0.000000e+00, float* %11324, align 1
  store %struct.Memory* %loadMem_480aa1, %struct.Memory** %MEMORY
  %loadMem_480aa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11326 = getelementptr inbounds %struct.GPR, %struct.GPR* %11325, i32 0, i32 33
  %11327 = getelementptr inbounds %struct.Reg, %struct.Reg* %11326, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %11327 to i64*
  %11328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11329 = getelementptr inbounds %struct.GPR, %struct.GPR* %11328, i32 0, i32 1
  %11330 = getelementptr inbounds %struct.Reg, %struct.Reg* %11329, i32 0, i32 0
  %RAX.i579 = bitcast %union.anon* %11330 to i64*
  %11331 = load i64, i64* %PC.i578
  %11332 = add i64 %11331, 10
  store i64 %11332, i64* %PC.i578
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i579, align 8
  store %struct.Memory* %loadMem_480aa9, %struct.Memory** %MEMORY
  %loadMem_480ab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11334 = getelementptr inbounds %struct.GPR, %struct.GPR* %11333, i32 0, i32 33
  %11335 = getelementptr inbounds %struct.Reg, %struct.Reg* %11334, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %11335 to i64*
  %11336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11337 = getelementptr inbounds %struct.GPR, %struct.GPR* %11336, i32 0, i32 15
  %11338 = getelementptr inbounds %struct.Reg, %struct.Reg* %11337, i32 0, i32 0
  %RBP.i576 = bitcast %union.anon* %11338 to i64*
  %11339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11340 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11339, i64 0, i64 1
  %YMM1.i577 = bitcast %union.VectorReg* %11340 to %"class.std::bitset"*
  %11341 = bitcast %"class.std::bitset"* %YMM1.i577 to i8*
  %11342 = load i64, i64* %RBP.i576
  %11343 = sub i64 %11342, 172
  %11344 = load i64, i64* %PC.i575
  %11345 = add i64 %11344, 8
  store i64 %11345, i64* %PC.i575
  %11346 = inttoptr i64 %11343 to float*
  %11347 = load float, float* %11346
  %11348 = bitcast i8* %11341 to float*
  store float %11347, float* %11348, align 1
  %11349 = getelementptr inbounds i8, i8* %11341, i64 4
  %11350 = bitcast i8* %11349 to float*
  store float 0.000000e+00, float* %11350, align 1
  %11351 = getelementptr inbounds i8, i8* %11341, i64 8
  %11352 = bitcast i8* %11351 to float*
  store float 0.000000e+00, float* %11352, align 1
  %11353 = getelementptr inbounds i8, i8* %11341, i64 12
  %11354 = bitcast i8* %11353 to float*
  store float 0.000000e+00, float* %11354, align 1
  store %struct.Memory* %loadMem_480ab3, %struct.Memory** %MEMORY
  %loadMem_480abb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11356 = getelementptr inbounds %struct.GPR, %struct.GPR* %11355, i32 0, i32 33
  %11357 = getelementptr inbounds %struct.Reg, %struct.Reg* %11356, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %11357 to i64*
  %11358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11359 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11358, i64 0, i64 1
  %YMM1.i573 = bitcast %union.VectorReg* %11359 to %"class.std::bitset"*
  %11360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11361 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11360, i64 0, i64 0
  %XMM0.i574 = bitcast %union.VectorReg* %11361 to %union.vec128_t*
  %11362 = bitcast %"class.std::bitset"* %YMM1.i573 to i8*
  %11363 = bitcast %"class.std::bitset"* %YMM1.i573 to i8*
  %11364 = bitcast %union.vec128_t* %XMM0.i574 to i8*
  %11365 = load i64, i64* %PC.i572
  %11366 = add i64 %11365, 4
  store i64 %11366, i64* %PC.i572
  %11367 = bitcast i8* %11363 to <2 x float>*
  %11368 = load <2 x float>, <2 x float>* %11367, align 1
  %11369 = getelementptr inbounds i8, i8* %11363, i64 8
  %11370 = bitcast i8* %11369 to <2 x i32>*
  %11371 = load <2 x i32>, <2 x i32>* %11370, align 1
  %11372 = bitcast i8* %11364 to <2 x float>*
  %11373 = load <2 x float>, <2 x float>* %11372, align 1
  %11374 = extractelement <2 x float> %11368, i32 0
  %11375 = extractelement <2 x float> %11373, i32 0
  %11376 = fadd float %11374, %11375
  %11377 = bitcast i8* %11362 to float*
  store float %11376, float* %11377, align 1
  %11378 = bitcast <2 x float> %11368 to <2 x i32>
  %11379 = extractelement <2 x i32> %11378, i32 1
  %11380 = getelementptr inbounds i8, i8* %11362, i64 4
  %11381 = bitcast i8* %11380 to i32*
  store i32 %11379, i32* %11381, align 1
  %11382 = extractelement <2 x i32> %11371, i32 0
  %11383 = getelementptr inbounds i8, i8* %11362, i64 8
  %11384 = bitcast i8* %11383 to i32*
  store i32 %11382, i32* %11384, align 1
  %11385 = extractelement <2 x i32> %11371, i32 1
  %11386 = getelementptr inbounds i8, i8* %11362, i64 12
  %11387 = bitcast i8* %11386 to i32*
  store i32 %11385, i32* %11387, align 1
  store %struct.Memory* %loadMem_480abb, %struct.Memory** %MEMORY
  %loadMem_480abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11389 = getelementptr inbounds %struct.GPR, %struct.GPR* %11388, i32 0, i32 33
  %11390 = getelementptr inbounds %struct.Reg, %struct.Reg* %11389, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %11390 to i64*
  %11391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11392 = getelementptr inbounds %struct.GPR, %struct.GPR* %11391, i32 0, i32 15
  %11393 = getelementptr inbounds %struct.Reg, %struct.Reg* %11392, i32 0, i32 0
  %RBP.i570 = bitcast %union.anon* %11393 to i64*
  %11394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11395 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11394, i64 0, i64 0
  %YMM0.i571 = bitcast %union.VectorReg* %11395 to %"class.std::bitset"*
  %11396 = bitcast %"class.std::bitset"* %YMM0.i571 to i8*
  %11397 = load i64, i64* %RBP.i570
  %11398 = sub i64 %11397, 176
  %11399 = load i64, i64* %PC.i569
  %11400 = add i64 %11399, 8
  store i64 %11400, i64* %PC.i569
  %11401 = inttoptr i64 %11398 to float*
  %11402 = load float, float* %11401
  %11403 = bitcast i8* %11396 to float*
  store float %11402, float* %11403, align 1
  %11404 = getelementptr inbounds i8, i8* %11396, i64 4
  %11405 = bitcast i8* %11404 to float*
  store float 0.000000e+00, float* %11405, align 1
  %11406 = getelementptr inbounds i8, i8* %11396, i64 8
  %11407 = bitcast i8* %11406 to float*
  store float 0.000000e+00, float* %11407, align 1
  %11408 = getelementptr inbounds i8, i8* %11396, i64 12
  %11409 = bitcast i8* %11408 to float*
  store float 0.000000e+00, float* %11409, align 1
  store %struct.Memory* %loadMem_480abf, %struct.Memory** %MEMORY
  %loadMem_480ac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11411 = getelementptr inbounds %struct.GPR, %struct.GPR* %11410, i32 0, i32 33
  %11412 = getelementptr inbounds %struct.Reg, %struct.Reg* %11411, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %11412 to i64*
  %11413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11414 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11413, i64 0, i64 0
  %YMM0.i567 = bitcast %union.VectorReg* %11414 to %"class.std::bitset"*
  %11415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11416 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11415, i64 0, i64 1
  %XMM1.i568 = bitcast %union.VectorReg* %11416 to %union.vec128_t*
  %11417 = bitcast %"class.std::bitset"* %YMM0.i567 to i8*
  %11418 = bitcast %"class.std::bitset"* %YMM0.i567 to i8*
  %11419 = bitcast %union.vec128_t* %XMM1.i568 to i8*
  %11420 = load i64, i64* %PC.i566
  %11421 = add i64 %11420, 4
  store i64 %11421, i64* %PC.i566
  %11422 = bitcast i8* %11418 to <2 x float>*
  %11423 = load <2 x float>, <2 x float>* %11422, align 1
  %11424 = getelementptr inbounds i8, i8* %11418, i64 8
  %11425 = bitcast i8* %11424 to <2 x i32>*
  %11426 = load <2 x i32>, <2 x i32>* %11425, align 1
  %11427 = bitcast i8* %11419 to <2 x float>*
  %11428 = load <2 x float>, <2 x float>* %11427, align 1
  %11429 = extractelement <2 x float> %11423, i32 0
  %11430 = extractelement <2 x float> %11428, i32 0
  %11431 = fmul float %11429, %11430
  %11432 = bitcast i8* %11417 to float*
  store float %11431, float* %11432, align 1
  %11433 = bitcast <2 x float> %11423 to <2 x i32>
  %11434 = extractelement <2 x i32> %11433, i32 1
  %11435 = getelementptr inbounds i8, i8* %11417, i64 4
  %11436 = bitcast i8* %11435 to i32*
  store i32 %11434, i32* %11436, align 1
  %11437 = extractelement <2 x i32> %11426, i32 0
  %11438 = getelementptr inbounds i8, i8* %11417, i64 8
  %11439 = bitcast i8* %11438 to i32*
  store i32 %11437, i32* %11439, align 1
  %11440 = extractelement <2 x i32> %11426, i32 1
  %11441 = getelementptr inbounds i8, i8* %11417, i64 12
  %11442 = bitcast i8* %11441 to i32*
  store i32 %11440, i32* %11442, align 1
  store %struct.Memory* %loadMem_480ac7, %struct.Memory** %MEMORY
  %loadMem_480acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11444 = getelementptr inbounds %struct.GPR, %struct.GPR* %11443, i32 0, i32 33
  %11445 = getelementptr inbounds %struct.Reg, %struct.Reg* %11444, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %11445 to i64*
  %11446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11447 = getelementptr inbounds %struct.GPR, %struct.GPR* %11446, i32 0, i32 5
  %11448 = getelementptr inbounds %struct.Reg, %struct.Reg* %11447, i32 0, i32 0
  %RCX.i564 = bitcast %union.anon* %11448 to i64*
  %11449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11450 = getelementptr inbounds %struct.GPR, %struct.GPR* %11449, i32 0, i32 15
  %11451 = getelementptr inbounds %struct.Reg, %struct.Reg* %11450, i32 0, i32 0
  %RBP.i565 = bitcast %union.anon* %11451 to i64*
  %11452 = load i64, i64* %RBP.i565
  %11453 = sub i64 %11452, 8
  %11454 = load i64, i64* %PC.i563
  %11455 = add i64 %11454, 4
  store i64 %11455, i64* %PC.i563
  %11456 = inttoptr i64 %11453 to i32*
  %11457 = load i32, i32* %11456
  %11458 = sext i32 %11457 to i64
  store i64 %11458, i64* %RCX.i564, align 8
  store %struct.Memory* %loadMem_480acb, %struct.Memory** %MEMORY
  %loadMem_480acf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11460 = getelementptr inbounds %struct.GPR, %struct.GPR* %11459, i32 0, i32 33
  %11461 = getelementptr inbounds %struct.Reg, %struct.Reg* %11460, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %11461 to i64*
  %11462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11463 = getelementptr inbounds %struct.GPR, %struct.GPR* %11462, i32 0, i32 5
  %11464 = getelementptr inbounds %struct.Reg, %struct.Reg* %11463, i32 0, i32 0
  %RCX.i562 = bitcast %union.anon* %11464 to i64*
  %11465 = load i64, i64* %RCX.i562
  %11466 = load i64, i64* %PC.i561
  %11467 = add i64 %11466, 7
  store i64 %11467, i64* %PC.i561
  %11468 = sext i64 %11465 to i128
  %11469 = and i128 %11468, -18446744073709551616
  %11470 = zext i64 %11465 to i128
  %11471 = or i128 %11469, %11470
  %11472 = mul i128 564, %11471
  %11473 = trunc i128 %11472 to i64
  store i64 %11473, i64* %RCX.i562, align 8
  %11474 = sext i64 %11473 to i128
  %11475 = icmp ne i128 %11474, %11472
  %11476 = zext i1 %11475 to i8
  %11477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11476, i8* %11477, align 1
  %11478 = trunc i128 %11472 to i32
  %11479 = and i32 %11478, 255
  %11480 = call i32 @llvm.ctpop.i32(i32 %11479)
  %11481 = trunc i32 %11480 to i8
  %11482 = and i8 %11481, 1
  %11483 = xor i8 %11482, 1
  %11484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11483, i8* %11484, align 1
  %11485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11485, align 1
  %11486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11486, align 1
  %11487 = lshr i64 %11473, 63
  %11488 = trunc i64 %11487 to i8
  %11489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11488, i8* %11489, align 1
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11476, i8* %11490, align 1
  store %struct.Memory* %loadMem_480acf, %struct.Memory** %MEMORY
  %loadMem_480ad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11492 = getelementptr inbounds %struct.GPR, %struct.GPR* %11491, i32 0, i32 33
  %11493 = getelementptr inbounds %struct.Reg, %struct.Reg* %11492, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %11493 to i64*
  %11494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11495 = getelementptr inbounds %struct.GPR, %struct.GPR* %11494, i32 0, i32 1
  %11496 = getelementptr inbounds %struct.Reg, %struct.Reg* %11495, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %11496 to i64*
  %11497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11498 = getelementptr inbounds %struct.GPR, %struct.GPR* %11497, i32 0, i32 5
  %11499 = getelementptr inbounds %struct.Reg, %struct.Reg* %11498, i32 0, i32 0
  %RCX.i560 = bitcast %union.anon* %11499 to i64*
  %11500 = load i64, i64* %RAX.i559
  %11501 = load i64, i64* %RCX.i560
  %11502 = load i64, i64* %PC.i558
  %11503 = add i64 %11502, 3
  store i64 %11503, i64* %PC.i558
  %11504 = add i64 %11501, %11500
  store i64 %11504, i64* %RAX.i559, align 8
  %11505 = icmp ult i64 %11504, %11500
  %11506 = icmp ult i64 %11504, %11501
  %11507 = or i1 %11505, %11506
  %11508 = zext i1 %11507 to i8
  %11509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11508, i8* %11509, align 1
  %11510 = trunc i64 %11504 to i32
  %11511 = and i32 %11510, 255
  %11512 = call i32 @llvm.ctpop.i32(i32 %11511)
  %11513 = trunc i32 %11512 to i8
  %11514 = and i8 %11513, 1
  %11515 = xor i8 %11514, 1
  %11516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11515, i8* %11516, align 1
  %11517 = xor i64 %11501, %11500
  %11518 = xor i64 %11517, %11504
  %11519 = lshr i64 %11518, 4
  %11520 = trunc i64 %11519 to i8
  %11521 = and i8 %11520, 1
  %11522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11521, i8* %11522, align 1
  %11523 = icmp eq i64 %11504, 0
  %11524 = zext i1 %11523 to i8
  %11525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11524, i8* %11525, align 1
  %11526 = lshr i64 %11504, 63
  %11527 = trunc i64 %11526 to i8
  %11528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11527, i8* %11528, align 1
  %11529 = lshr i64 %11500, 63
  %11530 = lshr i64 %11501, 63
  %11531 = xor i64 %11526, %11529
  %11532 = xor i64 %11526, %11530
  %11533 = add i64 %11531, %11532
  %11534 = icmp eq i64 %11533, 2
  %11535 = zext i1 %11534 to i8
  %11536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11535, i8* %11536, align 1
  store %struct.Memory* %loadMem_480ad6, %struct.Memory** %MEMORY
  %loadMem_480ad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11538 = getelementptr inbounds %struct.GPR, %struct.GPR* %11537, i32 0, i32 33
  %11539 = getelementptr inbounds %struct.Reg, %struct.Reg* %11538, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %11539 to i64*
  %11540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11541 = getelementptr inbounds %struct.GPR, %struct.GPR* %11540, i32 0, i32 1
  %11542 = getelementptr inbounds %struct.Reg, %struct.Reg* %11541, i32 0, i32 0
  %RAX.i556 = bitcast %union.anon* %11542 to i64*
  %11543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11544 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11543, i64 0, i64 0
  %XMM0.i557 = bitcast %union.VectorReg* %11544 to %union.vec128_t*
  %11545 = load i64, i64* %RAX.i556
  %11546 = add i64 %11545, 8
  %11547 = bitcast %union.vec128_t* %XMM0.i557 to i8*
  %11548 = load i64, i64* %PC.i555
  %11549 = add i64 %11548, 5
  store i64 %11549, i64* %PC.i555
  %11550 = bitcast i8* %11547 to <2 x float>*
  %11551 = load <2 x float>, <2 x float>* %11550, align 1
  %11552 = extractelement <2 x float> %11551, i32 0
  %11553 = inttoptr i64 %11546 to float*
  store float %11552, float* %11553
  store %struct.Memory* %loadMem_480ad9, %struct.Memory** %MEMORY
  br label %block_.L_480ade

block_.L_480ade:                                  ; preds = %block_.L_480aa1, %block_.L_4809e6
  %loadMem_480ade = load %struct.Memory*, %struct.Memory** %MEMORY
  %11554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11555 = getelementptr inbounds %struct.GPR, %struct.GPR* %11554, i32 0, i32 33
  %11556 = getelementptr inbounds %struct.Reg, %struct.Reg* %11555, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %11556 to i64*
  %11557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11558 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11557, i64 0, i64 0
  %YMM0.i553 = bitcast %union.VectorReg* %11558 to %"class.std::bitset"*
  %11559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11560 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11559, i64 0, i64 0
  %XMM0.i554 = bitcast %union.VectorReg* %11560 to %union.vec128_t*
  %11561 = bitcast %"class.std::bitset"* %YMM0.i553 to i8*
  %11562 = bitcast %"class.std::bitset"* %YMM0.i553 to i8*
  %11563 = bitcast %union.vec128_t* %XMM0.i554 to i8*
  %11564 = load i64, i64* %PC.i552
  %11565 = add i64 %11564, 3
  store i64 %11565, i64* %PC.i552
  %11566 = bitcast i8* %11562 to i64*
  %11567 = load i64, i64* %11566, align 1
  %11568 = getelementptr inbounds i8, i8* %11562, i64 8
  %11569 = bitcast i8* %11568 to i64*
  %11570 = load i64, i64* %11569, align 1
  %11571 = bitcast i8* %11563 to i64*
  %11572 = load i64, i64* %11571, align 1
  %11573 = getelementptr inbounds i8, i8* %11563, i64 8
  %11574 = bitcast i8* %11573 to i64*
  %11575 = load i64, i64* %11574, align 1
  %11576 = xor i64 %11572, %11567
  %11577 = xor i64 %11575, %11570
  %11578 = trunc i64 %11576 to i32
  %11579 = lshr i64 %11576, 32
  %11580 = trunc i64 %11579 to i32
  %11581 = bitcast i8* %11561 to i32*
  store i32 %11578, i32* %11581, align 1
  %11582 = getelementptr inbounds i8, i8* %11561, i64 4
  %11583 = bitcast i8* %11582 to i32*
  store i32 %11580, i32* %11583, align 1
  %11584 = trunc i64 %11577 to i32
  %11585 = getelementptr inbounds i8, i8* %11561, i64 8
  %11586 = bitcast i8* %11585 to i32*
  store i32 %11584, i32* %11586, align 1
  %11587 = lshr i64 %11577, 32
  %11588 = trunc i64 %11587 to i32
  %11589 = getelementptr inbounds i8, i8* %11561, i64 12
  %11590 = bitcast i8* %11589 to i32*
  store i32 %11588, i32* %11590, align 1
  store %struct.Memory* %loadMem_480ade, %struct.Memory** %MEMORY
  %loadMem_480ae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11592 = getelementptr inbounds %struct.GPR, %struct.GPR* %11591, i32 0, i32 33
  %11593 = getelementptr inbounds %struct.Reg, %struct.Reg* %11592, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %11593 to i64*
  %11594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11595 = getelementptr inbounds %struct.GPR, %struct.GPR* %11594, i32 0, i32 15
  %11596 = getelementptr inbounds %struct.Reg, %struct.Reg* %11595, i32 0, i32 0
  %RBP.i550 = bitcast %union.anon* %11596 to i64*
  %11597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11598 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11597, i64 0, i64 1
  %YMM1.i551 = bitcast %union.VectorReg* %11598 to %"class.std::bitset"*
  %11599 = bitcast %"class.std::bitset"* %YMM1.i551 to i8*
  %11600 = load i64, i64* %RBP.i550
  %11601 = sub i64 %11600, 16
  %11602 = load i64, i64* %PC.i549
  %11603 = add i64 %11602, 5
  store i64 %11603, i64* %PC.i549
  %11604 = inttoptr i64 %11601 to float*
  %11605 = load float, float* %11604
  %11606 = fpext float %11605 to double
  %11607 = bitcast i8* %11599 to double*
  store double %11606, double* %11607, align 1
  store %struct.Memory* %loadMem_480ae1, %struct.Memory** %MEMORY
  %loadMem_480ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11609 = getelementptr inbounds %struct.GPR, %struct.GPR* %11608, i32 0, i32 33
  %11610 = getelementptr inbounds %struct.Reg, %struct.Reg* %11609, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %11610 to i64*
  %11611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11612 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11611, i64 0, i64 0
  %XMM0.i544 = bitcast %union.VectorReg* %11612 to %union.vec128_t*
  %11613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11614 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11613, i64 0, i64 1
  %XMM1.i545 = bitcast %union.VectorReg* %11614 to %union.vec128_t*
  %11615 = bitcast %union.vec128_t* %XMM1.i545 to i8*
  %11616 = bitcast %union.vec128_t* %XMM0.i544 to i8*
  %11617 = load i64, i64* %PC.i543
  %11618 = add i64 %11617, 4
  store i64 %11618, i64* %PC.i543
  %11619 = bitcast i8* %11615 to double*
  %11620 = load double, double* %11619, align 1
  %11621 = bitcast i8* %11616 to double*
  %11622 = load double, double* %11621, align 1
  %11623 = fcmp uno double %11620, %11622
  br i1 %11623, label %11624, label %11636

; <label>:11624:                                  ; preds = %block_.L_480ade
  %11625 = fadd double %11620, %11622
  %11626 = bitcast double %11625 to i64
  %11627 = and i64 %11626, 9221120237041090560
  %11628 = icmp eq i64 %11627, 9218868437227405312
  %11629 = and i64 %11626, 2251799813685247
  %11630 = icmp ne i64 %11629, 0
  %11631 = and i1 %11628, %11630
  br i1 %11631, label %11632, label %11642

; <label>:11632:                                  ; preds = %11624
  %11633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11634 = load i64, i64* %11633, align 8
  %11635 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11634, %struct.Memory* %loadMem_480ae6)
  br label %routine_ucomisd__xmm0___xmm1.exit546

; <label>:11636:                                  ; preds = %block_.L_480ade
  %11637 = fcmp ogt double %11620, %11622
  br i1 %11637, label %11642, label %11638

; <label>:11638:                                  ; preds = %11636
  %11639 = fcmp olt double %11620, %11622
  br i1 %11639, label %11642, label %11640

; <label>:11640:                                  ; preds = %11638
  %11641 = fcmp oeq double %11620, %11622
  br i1 %11641, label %11642, label %11649

; <label>:11642:                                  ; preds = %11640, %11638, %11636, %11624
  %11643 = phi i8 [ 0, %11636 ], [ 0, %11638 ], [ 1, %11640 ], [ 1, %11624 ]
  %11644 = phi i8 [ 0, %11636 ], [ 0, %11638 ], [ 0, %11640 ], [ 1, %11624 ]
  %11645 = phi i8 [ 0, %11636 ], [ 1, %11638 ], [ 0, %11640 ], [ 1, %11624 ]
  %11646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11643, i8* %11646, align 1
  %11647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11644, i8* %11647, align 1
  %11648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11645, i8* %11648, align 1
  br label %11649

; <label>:11649:                                  ; preds = %11642, %11640
  %11650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11650, align 1
  %11651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11651, align 1
  %11652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11652, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit546

routine_ucomisd__xmm0___xmm1.exit546:             ; preds = %11632, %11649
  %11653 = phi %struct.Memory* [ %11635, %11632 ], [ %loadMem_480ae6, %11649 ]
  store %struct.Memory* %11653, %struct.Memory** %MEMORY
  %loadMem_480aea = load %struct.Memory*, %struct.Memory** %MEMORY
  %11654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11655 = getelementptr inbounds %struct.GPR, %struct.GPR* %11654, i32 0, i32 33
  %11656 = getelementptr inbounds %struct.Reg, %struct.Reg* %11655, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %11656 to i64*
  %11657 = load i64, i64* %PC.i542
  %11658 = add i64 %11657, 477
  %11659 = load i64, i64* %PC.i542
  %11660 = add i64 %11659, 6
  %11661 = load i64, i64* %PC.i542
  %11662 = add i64 %11661, 6
  store i64 %11662, i64* %PC.i542
  %11663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11664 = load i8, i8* %11663, align 1
  %11665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11666 = load i8, i8* %11665, align 1
  %11667 = or i8 %11666, %11664
  %11668 = icmp ne i8 %11667, 0
  %11669 = zext i1 %11668 to i8
  store i8 %11669, i8* %BRANCH_TAKEN, align 1
  %11670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11671 = select i1 %11668, i64 %11658, i64 %11660
  store i64 %11671, i64* %11670, align 8
  store %struct.Memory* %loadMem_480aea, %struct.Memory** %MEMORY
  %loadBr_480aea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480aea = icmp eq i8 %loadBr_480aea, 1
  br i1 %cmpBr_480aea, label %block_.L_480cc7, label %block_480af0

block_480af0:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit546
  %loadMem_480af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11673 = getelementptr inbounds %struct.GPR, %struct.GPR* %11672, i32 0, i32 33
  %11674 = getelementptr inbounds %struct.Reg, %struct.Reg* %11673, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %11674 to i64*
  %11675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11676 = getelementptr inbounds %struct.GPR, %struct.GPR* %11675, i32 0, i32 1
  %11677 = getelementptr inbounds %struct.Reg, %struct.Reg* %11676, i32 0, i32 0
  %RAX.i541 = bitcast %union.anon* %11677 to i64*
  %11678 = load i64, i64* %PC.i540
  %11679 = add i64 %11678, 10
  store i64 %11679, i64* %PC.i540
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i541, align 8
  store %struct.Memory* %loadMem_480af0, %struct.Memory** %MEMORY
  %loadMem_480afa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11681 = getelementptr inbounds %struct.GPR, %struct.GPR* %11680, i32 0, i32 33
  %11682 = getelementptr inbounds %struct.Reg, %struct.Reg* %11681, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %11682 to i64*
  %11683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11684 = getelementptr inbounds %struct.GPR, %struct.GPR* %11683, i32 0, i32 5
  %11685 = getelementptr inbounds %struct.Reg, %struct.Reg* %11684, i32 0, i32 0
  %RCX.i538 = bitcast %union.anon* %11685 to i64*
  %11686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11687 = getelementptr inbounds %struct.GPR, %struct.GPR* %11686, i32 0, i32 15
  %11688 = getelementptr inbounds %struct.Reg, %struct.Reg* %11687, i32 0, i32 0
  %RBP.i539 = bitcast %union.anon* %11688 to i64*
  %11689 = load i64, i64* %RBP.i539
  %11690 = sub i64 %11689, 8
  %11691 = load i64, i64* %PC.i537
  %11692 = add i64 %11691, 4
  store i64 %11692, i64* %PC.i537
  %11693 = inttoptr i64 %11690 to i32*
  %11694 = load i32, i32* %11693
  %11695 = sext i32 %11694 to i64
  store i64 %11695, i64* %RCX.i538, align 8
  store %struct.Memory* %loadMem_480afa, %struct.Memory** %MEMORY
  %loadMem_480afe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11697 = getelementptr inbounds %struct.GPR, %struct.GPR* %11696, i32 0, i32 33
  %11698 = getelementptr inbounds %struct.Reg, %struct.Reg* %11697, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %11698 to i64*
  %11699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11700 = getelementptr inbounds %struct.GPR, %struct.GPR* %11699, i32 0, i32 5
  %11701 = getelementptr inbounds %struct.Reg, %struct.Reg* %11700, i32 0, i32 0
  %RCX.i536 = bitcast %union.anon* %11701 to i64*
  %11702 = load i64, i64* %RCX.i536
  %11703 = load i64, i64* %PC.i535
  %11704 = add i64 %11703, 7
  store i64 %11704, i64* %PC.i535
  %11705 = sext i64 %11702 to i128
  %11706 = and i128 %11705, -18446744073709551616
  %11707 = zext i64 %11702 to i128
  %11708 = or i128 %11706, %11707
  %11709 = mul i128 564, %11708
  %11710 = trunc i128 %11709 to i64
  store i64 %11710, i64* %RCX.i536, align 8
  %11711 = sext i64 %11710 to i128
  %11712 = icmp ne i128 %11711, %11709
  %11713 = zext i1 %11712 to i8
  %11714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11713, i8* %11714, align 1
  %11715 = trunc i128 %11709 to i32
  %11716 = and i32 %11715, 255
  %11717 = call i32 @llvm.ctpop.i32(i32 %11716)
  %11718 = trunc i32 %11717 to i8
  %11719 = and i8 %11718, 1
  %11720 = xor i8 %11719, 1
  %11721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11720, i8* %11721, align 1
  %11722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11722, align 1
  %11723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11723, align 1
  %11724 = lshr i64 %11710, 63
  %11725 = trunc i64 %11724 to i8
  %11726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11725, i8* %11726, align 1
  %11727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11713, i8* %11727, align 1
  store %struct.Memory* %loadMem_480afe, %struct.Memory** %MEMORY
  %loadMem_480b05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11729 = getelementptr inbounds %struct.GPR, %struct.GPR* %11728, i32 0, i32 33
  %11730 = getelementptr inbounds %struct.Reg, %struct.Reg* %11729, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %11730 to i64*
  %11731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11732 = getelementptr inbounds %struct.GPR, %struct.GPR* %11731, i32 0, i32 1
  %11733 = getelementptr inbounds %struct.Reg, %struct.Reg* %11732, i32 0, i32 0
  %RAX.i533 = bitcast %union.anon* %11733 to i64*
  %11734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11735 = getelementptr inbounds %struct.GPR, %struct.GPR* %11734, i32 0, i32 5
  %11736 = getelementptr inbounds %struct.Reg, %struct.Reg* %11735, i32 0, i32 0
  %RCX.i534 = bitcast %union.anon* %11736 to i64*
  %11737 = load i64, i64* %RAX.i533
  %11738 = load i64, i64* %RCX.i534
  %11739 = load i64, i64* %PC.i532
  %11740 = add i64 %11739, 3
  store i64 %11740, i64* %PC.i532
  %11741 = add i64 %11738, %11737
  store i64 %11741, i64* %RAX.i533, align 8
  %11742 = icmp ult i64 %11741, %11737
  %11743 = icmp ult i64 %11741, %11738
  %11744 = or i1 %11742, %11743
  %11745 = zext i1 %11744 to i8
  %11746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11745, i8* %11746, align 1
  %11747 = trunc i64 %11741 to i32
  %11748 = and i32 %11747, 255
  %11749 = call i32 @llvm.ctpop.i32(i32 %11748)
  %11750 = trunc i32 %11749 to i8
  %11751 = and i8 %11750, 1
  %11752 = xor i8 %11751, 1
  %11753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11752, i8* %11753, align 1
  %11754 = xor i64 %11738, %11737
  %11755 = xor i64 %11754, %11741
  %11756 = lshr i64 %11755, 4
  %11757 = trunc i64 %11756 to i8
  %11758 = and i8 %11757, 1
  %11759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11758, i8* %11759, align 1
  %11760 = icmp eq i64 %11741, 0
  %11761 = zext i1 %11760 to i8
  %11762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11761, i8* %11762, align 1
  %11763 = lshr i64 %11741, 63
  %11764 = trunc i64 %11763 to i8
  %11765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11764, i8* %11765, align 1
  %11766 = lshr i64 %11737, 63
  %11767 = lshr i64 %11738, 63
  %11768 = xor i64 %11763, %11766
  %11769 = xor i64 %11763, %11767
  %11770 = add i64 %11768, %11769
  %11771 = icmp eq i64 %11770, 2
  %11772 = zext i1 %11771 to i8
  %11773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11772, i8* %11773, align 1
  store %struct.Memory* %loadMem_480b05, %struct.Memory** %MEMORY
  %loadMem_480b08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11775 = getelementptr inbounds %struct.GPR, %struct.GPR* %11774, i32 0, i32 33
  %11776 = getelementptr inbounds %struct.Reg, %struct.Reg* %11775, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %11776 to i64*
  %11777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11778 = getelementptr inbounds %struct.GPR, %struct.GPR* %11777, i32 0, i32 1
  %11779 = getelementptr inbounds %struct.Reg, %struct.Reg* %11778, i32 0, i32 0
  %RAX.i531 = bitcast %union.anon* %11779 to i64*
  %11780 = load i64, i64* %RAX.i531
  %11781 = add i64 %11780, 556
  %11782 = load i64, i64* %PC.i530
  %11783 = add i64 %11782, 7
  store i64 %11783, i64* %PC.i530
  %11784 = inttoptr i64 %11781 to i32*
  %11785 = load i32, i32* %11784
  %11786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11786, align 1
  %11787 = and i32 %11785, 255
  %11788 = call i32 @llvm.ctpop.i32(i32 %11787)
  %11789 = trunc i32 %11788 to i8
  %11790 = and i8 %11789, 1
  %11791 = xor i8 %11790, 1
  %11792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11791, i8* %11792, align 1
  %11793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11793, align 1
  %11794 = icmp eq i32 %11785, 0
  %11795 = zext i1 %11794 to i8
  %11796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11795, i8* %11796, align 1
  %11797 = lshr i32 %11785, 31
  %11798 = trunc i32 %11797 to i8
  %11799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11798, i8* %11799, align 1
  %11800 = lshr i32 %11785, 31
  %11801 = xor i32 %11797, %11800
  %11802 = add i32 %11801, %11800
  %11803 = icmp eq i32 %11802, 2
  %11804 = zext i1 %11803 to i8
  %11805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11804, i8* %11805, align 1
  store %struct.Memory* %loadMem_480b08, %struct.Memory** %MEMORY
  %loadMem_480b0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11807 = getelementptr inbounds %struct.GPR, %struct.GPR* %11806, i32 0, i32 33
  %11808 = getelementptr inbounds %struct.Reg, %struct.Reg* %11807, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %11808 to i64*
  %11809 = load i64, i64* %PC.i529
  %11810 = add i64 %11809, 440
  %11811 = load i64, i64* %PC.i529
  %11812 = add i64 %11811, 6
  %11813 = load i64, i64* %PC.i529
  %11814 = add i64 %11813, 6
  store i64 %11814, i64* %PC.i529
  %11815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11816 = load i8, i8* %11815, align 1
  store i8 %11816, i8* %BRANCH_TAKEN, align 1
  %11817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11818 = icmp ne i8 %11816, 0
  %11819 = select i1 %11818, i64 %11810, i64 %11812
  store i64 %11819, i64* %11817, align 8
  store %struct.Memory* %loadMem_480b0f, %struct.Memory** %MEMORY
  %loadBr_480b0f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480b0f = icmp eq i8 %loadBr_480b0f, 1
  br i1 %cmpBr_480b0f, label %block_.L_480cc7, label %block_480b15

block_480b15:                                     ; preds = %block_480af0
  %loadMem_480b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11821 = getelementptr inbounds %struct.GPR, %struct.GPR* %11820, i32 0, i32 33
  %11822 = getelementptr inbounds %struct.Reg, %struct.Reg* %11821, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %11822 to i64*
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11824 = getelementptr inbounds %struct.GPR, %struct.GPR* %11823, i32 0, i32 15
  %11825 = getelementptr inbounds %struct.Reg, %struct.Reg* %11824, i32 0, i32 0
  %RBP.i527 = bitcast %union.anon* %11825 to i64*
  %11826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11827 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11826, i64 0, i64 0
  %YMM0.i528 = bitcast %union.VectorReg* %11827 to %"class.std::bitset"*
  %11828 = bitcast %"class.std::bitset"* %YMM0.i528 to i8*
  %11829 = load i64, i64* %RBP.i527
  %11830 = sub i64 %11829, 24
  %11831 = load i64, i64* %PC.i526
  %11832 = add i64 %11831, 5
  store i64 %11832, i64* %PC.i526
  %11833 = inttoptr i64 %11830 to float*
  %11834 = load float, float* %11833
  %11835 = bitcast i8* %11828 to float*
  store float %11834, float* %11835, align 1
  %11836 = getelementptr inbounds i8, i8* %11828, i64 4
  %11837 = bitcast i8* %11836 to float*
  store float 0.000000e+00, float* %11837, align 1
  %11838 = getelementptr inbounds i8, i8* %11828, i64 8
  %11839 = bitcast i8* %11838 to float*
  store float 0.000000e+00, float* %11839, align 1
  %11840 = getelementptr inbounds i8, i8* %11828, i64 12
  %11841 = bitcast i8* %11840 to float*
  store float 0.000000e+00, float* %11841, align 1
  store %struct.Memory* %loadMem_480b15, %struct.Memory** %MEMORY
  %loadMem_480b1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11843 = getelementptr inbounds %struct.GPR, %struct.GPR* %11842, i32 0, i32 33
  %11844 = getelementptr inbounds %struct.Reg, %struct.Reg* %11843, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %11844 to i64*
  %11845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11846 = getelementptr inbounds %struct.GPR, %struct.GPR* %11845, i32 0, i32 15
  %11847 = getelementptr inbounds %struct.Reg, %struct.Reg* %11846, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %11847 to i64*
  %11848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11849 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11848, i64 0, i64 1
  %YMM1.i525 = bitcast %union.VectorReg* %11849 to %"class.std::bitset"*
  %11850 = bitcast %"class.std::bitset"* %YMM1.i525 to i8*
  %11851 = load i64, i64* %RBP.i524
  %11852 = sub i64 %11851, 16
  %11853 = load i64, i64* %PC.i523
  %11854 = add i64 %11853, 5
  store i64 %11854, i64* %PC.i523
  %11855 = inttoptr i64 %11852 to float*
  %11856 = load float, float* %11855
  %11857 = bitcast i8* %11850 to float*
  store float %11856, float* %11857, align 1
  %11858 = getelementptr inbounds i8, i8* %11850, i64 4
  %11859 = bitcast i8* %11858 to float*
  store float 0.000000e+00, float* %11859, align 1
  %11860 = getelementptr inbounds i8, i8* %11850, i64 8
  %11861 = bitcast i8* %11860 to float*
  store float 0.000000e+00, float* %11861, align 1
  %11862 = getelementptr inbounds i8, i8* %11850, i64 12
  %11863 = bitcast i8* %11862 to float*
  store float 0.000000e+00, float* %11863, align 1
  store %struct.Memory* %loadMem_480b1a, %struct.Memory** %MEMORY
  %loadMem_480b1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11865 = getelementptr inbounds %struct.GPR, %struct.GPR* %11864, i32 0, i32 33
  %11866 = getelementptr inbounds %struct.Reg, %struct.Reg* %11865, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %11866 to i64*
  %11867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11868 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11867, i64 0, i64 0
  %XMM0.i518 = bitcast %union.VectorReg* %11868 to %union.vec128_t*
  %11869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11870 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11869, i64 0, i64 1
  %XMM1.i519 = bitcast %union.VectorReg* %11870 to %union.vec128_t*
  %11871 = bitcast %union.vec128_t* %XMM1.i519 to i8*
  %11872 = bitcast %union.vec128_t* %XMM0.i518 to i8*
  %11873 = load i64, i64* %PC.i517
  %11874 = add i64 %11873, 3
  store i64 %11874, i64* %PC.i517
  %11875 = bitcast i8* %11871 to <2 x float>*
  %11876 = load <2 x float>, <2 x float>* %11875, align 1
  %11877 = extractelement <2 x float> %11876, i32 0
  %11878 = bitcast i8* %11872 to <2 x float>*
  %11879 = load <2 x float>, <2 x float>* %11878, align 1
  %11880 = extractelement <2 x float> %11879, i32 0
  %11881 = fcmp uno float %11877, %11880
  br i1 %11881, label %11882, label %11894

; <label>:11882:                                  ; preds = %block_480b15
  %11883 = fadd float %11877, %11880
  %11884 = bitcast float %11883 to i32
  %11885 = and i32 %11884, 2143289344
  %11886 = icmp eq i32 %11885, 2139095040
  %11887 = and i32 %11884, 4194303
  %11888 = icmp ne i32 %11887, 0
  %11889 = and i1 %11886, %11888
  br i1 %11889, label %11890, label %11900

; <label>:11890:                                  ; preds = %11882
  %11891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11892 = load i64, i64* %11891, align 8
  %11893 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11892, %struct.Memory* %loadMem_480b1f)
  br label %routine_ucomiss__xmm0___xmm1.exit520

; <label>:11894:                                  ; preds = %block_480b15
  %11895 = fcmp ogt float %11877, %11880
  br i1 %11895, label %11900, label %11896

; <label>:11896:                                  ; preds = %11894
  %11897 = fcmp olt float %11877, %11880
  br i1 %11897, label %11900, label %11898

; <label>:11898:                                  ; preds = %11896
  %11899 = fcmp oeq float %11877, %11880
  br i1 %11899, label %11900, label %11907

; <label>:11900:                                  ; preds = %11898, %11896, %11894, %11882
  %11901 = phi i8 [ 0, %11894 ], [ 0, %11896 ], [ 1, %11898 ], [ 1, %11882 ]
  %11902 = phi i8 [ 0, %11894 ], [ 0, %11896 ], [ 0, %11898 ], [ 1, %11882 ]
  %11903 = phi i8 [ 0, %11894 ], [ 1, %11896 ], [ 0, %11898 ], [ 1, %11882 ]
  %11904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11901, i8* %11904, align 1
  %11905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11902, i8* %11905, align 1
  %11906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11903, i8* %11906, align 1
  br label %11907

; <label>:11907:                                  ; preds = %11900, %11898
  %11908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11908, align 1
  %11909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11909, align 1
  %11910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11910, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit520

routine_ucomiss__xmm0___xmm1.exit520:             ; preds = %11890, %11907
  %11911 = phi %struct.Memory* [ %11893, %11890 ], [ %loadMem_480b1f, %11907 ]
  store %struct.Memory* %11911, %struct.Memory** %MEMORY
  %loadMem_480b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11913 = getelementptr inbounds %struct.GPR, %struct.GPR* %11912, i32 0, i32 33
  %11914 = getelementptr inbounds %struct.Reg, %struct.Reg* %11913, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %11914 to i64*
  %11915 = load i64, i64* %PC.i516
  %11916 = add i64 %11915, 421
  %11917 = load i64, i64* %PC.i516
  %11918 = add i64 %11917, 6
  %11919 = load i64, i64* %PC.i516
  %11920 = add i64 %11919, 6
  store i64 %11920, i64* %PC.i516
  %11921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11922 = load i8, i8* %11921, align 1
  store i8 %11922, i8* %BRANCH_TAKEN, align 1
  %11923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11924 = icmp ne i8 %11922, 0
  %11925 = select i1 %11924, i64 %11916, i64 %11918
  store i64 %11925, i64* %11923, align 8
  store %struct.Memory* %loadMem_480b22, %struct.Memory** %MEMORY
  %loadBr_480b22 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480b22 = icmp eq i8 %loadBr_480b22, 1
  br i1 %cmpBr_480b22, label %block_.L_480cc7, label %block_480b28

block_480b28:                                     ; preds = %routine_ucomiss__xmm0___xmm1.exit520
  %loadMem_480b28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11927 = getelementptr inbounds %struct.GPR, %struct.GPR* %11926, i32 0, i32 33
  %11928 = getelementptr inbounds %struct.Reg, %struct.Reg* %11927, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %11928 to i64*
  %11929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11930 = getelementptr inbounds %struct.GPR, %struct.GPR* %11929, i32 0, i32 1
  %11931 = getelementptr inbounds %struct.Reg, %struct.Reg* %11930, i32 0, i32 0
  %RAX.i514 = bitcast %union.anon* %11931 to i64*
  %11932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11933 = getelementptr inbounds %struct.GPR, %struct.GPR* %11932, i32 0, i32 15
  %11934 = getelementptr inbounds %struct.Reg, %struct.Reg* %11933, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %11934 to i64*
  %11935 = load i64, i64* %RBP.i515
  %11936 = sub i64 %11935, 8
  %11937 = load i64, i64* %PC.i513
  %11938 = add i64 %11937, 4
  store i64 %11938, i64* %PC.i513
  %11939 = inttoptr i64 %11936 to i32*
  %11940 = load i32, i32* %11939
  %11941 = sext i32 %11940 to i64
  store i64 %11941, i64* %RAX.i514, align 8
  store %struct.Memory* %loadMem_480b28, %struct.Memory** %MEMORY
  %loadMem_480b2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11943 = getelementptr inbounds %struct.GPR, %struct.GPR* %11942, i32 0, i32 33
  %11944 = getelementptr inbounds %struct.Reg, %struct.Reg* %11943, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %11944 to i64*
  %11945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11946 = getelementptr inbounds %struct.GPR, %struct.GPR* %11945, i32 0, i32 1
  %11947 = getelementptr inbounds %struct.Reg, %struct.Reg* %11946, i32 0, i32 0
  %RAX.i511 = bitcast %union.anon* %11947 to i64*
  %11948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11949 = getelementptr inbounds %struct.GPR, %struct.GPR* %11948, i32 0, i32 5
  %11950 = getelementptr inbounds %struct.Reg, %struct.Reg* %11949, i32 0, i32 0
  %RCX.i512 = bitcast %union.anon* %11950 to i64*
  %11951 = load i64, i64* %RAX.i511
  %11952 = add i64 %11951, 12099168
  %11953 = load i64, i64* %PC.i510
  %11954 = add i64 %11953, 8
  store i64 %11954, i64* %PC.i510
  %11955 = inttoptr i64 %11952 to i8*
  %11956 = load i8, i8* %11955
  %11957 = zext i8 %11956 to i64
  store i64 %11957, i64* %RCX.i512, align 8
  store %struct.Memory* %loadMem_480b2c, %struct.Memory** %MEMORY
  %loadMem_480b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11959 = getelementptr inbounds %struct.GPR, %struct.GPR* %11958, i32 0, i32 33
  %11960 = getelementptr inbounds %struct.Reg, %struct.Reg* %11959, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %11960 to i64*
  %11961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11962 = getelementptr inbounds %struct.GPR, %struct.GPR* %11961, i32 0, i32 5
  %11963 = getelementptr inbounds %struct.Reg, %struct.Reg* %11962, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %11963 to i32*
  %11964 = load i32, i32* %ECX.i
  %11965 = zext i32 %11964 to i64
  %11966 = load i64, i64* %PC.i509
  %11967 = add i64 %11966, 3
  store i64 %11967, i64* %PC.i509
  %11968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11968, align 1
  %11969 = and i32 %11964, 255
  %11970 = call i32 @llvm.ctpop.i32(i32 %11969)
  %11971 = trunc i32 %11970 to i8
  %11972 = and i8 %11971, 1
  %11973 = xor i8 %11972, 1
  %11974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11973, i8* %11974, align 1
  %11975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11975, align 1
  %11976 = icmp eq i32 %11964, 0
  %11977 = zext i1 %11976 to i8
  %11978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11977, i8* %11978, align 1
  %11979 = lshr i32 %11964, 31
  %11980 = trunc i32 %11979 to i8
  %11981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11980, i8* %11981, align 1
  %11982 = lshr i32 %11964, 31
  %11983 = xor i32 %11979, %11982
  %11984 = add i32 %11983, %11982
  %11985 = icmp eq i32 %11984, 2
  %11986 = zext i1 %11985 to i8
  %11987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11986, i8* %11987, align 1
  store %struct.Memory* %loadMem_480b34, %struct.Memory** %MEMORY
  %loadMem_480b37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11989 = getelementptr inbounds %struct.GPR, %struct.GPR* %11988, i32 0, i32 33
  %11990 = getelementptr inbounds %struct.Reg, %struct.Reg* %11989, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %11990 to i64*
  %11991 = load i64, i64* %PC.i508
  %11992 = add i64 %11991, 400
  %11993 = load i64, i64* %PC.i508
  %11994 = add i64 %11993, 6
  %11995 = load i64, i64* %PC.i508
  %11996 = add i64 %11995, 6
  store i64 %11996, i64* %PC.i508
  %11997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11998 = load i8, i8* %11997, align 1
  %11999 = icmp eq i8 %11998, 0
  %12000 = zext i1 %11999 to i8
  store i8 %12000, i8* %BRANCH_TAKEN, align 1
  %12001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12002 = select i1 %11999, i64 %11992, i64 %11994
  store i64 %12002, i64* %12001, align 8
  store %struct.Memory* %loadMem_480b37, %struct.Memory** %MEMORY
  %loadBr_480b37 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480b37 = icmp eq i8 %loadBr_480b37, 1
  br i1 %cmpBr_480b37, label %block_.L_480cc7, label %block_480b3d

block_480b3d:                                     ; preds = %block_480b28
  %loadMem_480b3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12004 = getelementptr inbounds %struct.GPR, %struct.GPR* %12003, i32 0, i32 33
  %12005 = getelementptr inbounds %struct.Reg, %struct.Reg* %12004, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %12005 to i64*
  %12006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12007 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12006, i64 0, i64 0
  %YMM0.i506 = bitcast %union.VectorReg* %12007 to %"class.std::bitset"*
  %12008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12009 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12008, i64 0, i64 0
  %XMM0.i507 = bitcast %union.VectorReg* %12009 to %union.vec128_t*
  %12010 = bitcast %"class.std::bitset"* %YMM0.i506 to i8*
  %12011 = bitcast %"class.std::bitset"* %YMM0.i506 to i8*
  %12012 = bitcast %union.vec128_t* %XMM0.i507 to i8*
  %12013 = load i64, i64* %PC.i505
  %12014 = add i64 %12013, 3
  store i64 %12014, i64* %PC.i505
  %12015 = bitcast i8* %12011 to i64*
  %12016 = load i64, i64* %12015, align 1
  %12017 = getelementptr inbounds i8, i8* %12011, i64 8
  %12018 = bitcast i8* %12017 to i64*
  %12019 = load i64, i64* %12018, align 1
  %12020 = bitcast i8* %12012 to i64*
  %12021 = load i64, i64* %12020, align 1
  %12022 = getelementptr inbounds i8, i8* %12012, i64 8
  %12023 = bitcast i8* %12022 to i64*
  %12024 = load i64, i64* %12023, align 1
  %12025 = xor i64 %12021, %12016
  %12026 = xor i64 %12024, %12019
  %12027 = trunc i64 %12025 to i32
  %12028 = lshr i64 %12025, 32
  %12029 = trunc i64 %12028 to i32
  %12030 = bitcast i8* %12010 to i32*
  store i32 %12027, i32* %12030, align 1
  %12031 = getelementptr inbounds i8, i8* %12010, i64 4
  %12032 = bitcast i8* %12031 to i32*
  store i32 %12029, i32* %12032, align 1
  %12033 = trunc i64 %12026 to i32
  %12034 = getelementptr inbounds i8, i8* %12010, i64 8
  %12035 = bitcast i8* %12034 to i32*
  store i32 %12033, i32* %12035, align 1
  %12036 = lshr i64 %12026, 32
  %12037 = trunc i64 %12036 to i32
  %12038 = getelementptr inbounds i8, i8* %12010, i64 12
  %12039 = bitcast i8* %12038 to i32*
  store i32 %12037, i32* %12039, align 1
  store %struct.Memory* %loadMem_480b3d, %struct.Memory** %MEMORY
  %loadMem_480b40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12041 = getelementptr inbounds %struct.GPR, %struct.GPR* %12040, i32 0, i32 33
  %12042 = getelementptr inbounds %struct.Reg, %struct.Reg* %12041, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %12042 to i64*
  %12043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12044 = getelementptr inbounds %struct.GPR, %struct.GPR* %12043, i32 0, i32 1
  %12045 = getelementptr inbounds %struct.Reg, %struct.Reg* %12044, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %12045 to i64*
  %12046 = load i64, i64* %PC.i503
  %12047 = add i64 %12046, 10
  store i64 %12047, i64* %PC.i503
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i504, align 8
  store %struct.Memory* %loadMem_480b40, %struct.Memory** %MEMORY
  %loadMem_480b4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12049 = getelementptr inbounds %struct.GPR, %struct.GPR* %12048, i32 0, i32 33
  %12050 = getelementptr inbounds %struct.Reg, %struct.Reg* %12049, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %12050 to i64*
  %12051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12052 = getelementptr inbounds %struct.GPR, %struct.GPR* %12051, i32 0, i32 5
  %12053 = getelementptr inbounds %struct.Reg, %struct.Reg* %12052, i32 0, i32 0
  %RCX.i501 = bitcast %union.anon* %12053 to i64*
  %12054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12055 = getelementptr inbounds %struct.GPR, %struct.GPR* %12054, i32 0, i32 15
  %12056 = getelementptr inbounds %struct.Reg, %struct.Reg* %12055, i32 0, i32 0
  %RBP.i502 = bitcast %union.anon* %12056 to i64*
  %12057 = load i64, i64* %RBP.i502
  %12058 = sub i64 %12057, 8
  %12059 = load i64, i64* %PC.i500
  %12060 = add i64 %12059, 4
  store i64 %12060, i64* %PC.i500
  %12061 = inttoptr i64 %12058 to i32*
  %12062 = load i32, i32* %12061
  %12063 = sext i32 %12062 to i64
  store i64 %12063, i64* %RCX.i501, align 8
  store %struct.Memory* %loadMem_480b4a, %struct.Memory** %MEMORY
  %loadMem_480b4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12065 = getelementptr inbounds %struct.GPR, %struct.GPR* %12064, i32 0, i32 33
  %12066 = getelementptr inbounds %struct.Reg, %struct.Reg* %12065, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %12066 to i64*
  %12067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12068 = getelementptr inbounds %struct.GPR, %struct.GPR* %12067, i32 0, i32 5
  %12069 = getelementptr inbounds %struct.Reg, %struct.Reg* %12068, i32 0, i32 0
  %RCX.i499 = bitcast %union.anon* %12069 to i64*
  %12070 = load i64, i64* %RCX.i499
  %12071 = load i64, i64* %PC.i498
  %12072 = add i64 %12071, 7
  store i64 %12072, i64* %PC.i498
  %12073 = sext i64 %12070 to i128
  %12074 = and i128 %12073, -18446744073709551616
  %12075 = zext i64 %12070 to i128
  %12076 = or i128 %12074, %12075
  %12077 = mul i128 564, %12076
  %12078 = trunc i128 %12077 to i64
  store i64 %12078, i64* %RCX.i499, align 8
  %12079 = sext i64 %12078 to i128
  %12080 = icmp ne i128 %12079, %12077
  %12081 = zext i1 %12080 to i8
  %12082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12081, i8* %12082, align 1
  %12083 = trunc i128 %12077 to i32
  %12084 = and i32 %12083, 255
  %12085 = call i32 @llvm.ctpop.i32(i32 %12084)
  %12086 = trunc i32 %12085 to i8
  %12087 = and i8 %12086, 1
  %12088 = xor i8 %12087, 1
  %12089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12088, i8* %12089, align 1
  %12090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12090, align 1
  %12091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12091, align 1
  %12092 = lshr i64 %12078, 63
  %12093 = trunc i64 %12092 to i8
  %12094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12093, i8* %12094, align 1
  %12095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12081, i8* %12095, align 1
  store %struct.Memory* %loadMem_480b4e, %struct.Memory** %MEMORY
  %loadMem_480b55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12097 = getelementptr inbounds %struct.GPR, %struct.GPR* %12096, i32 0, i32 33
  %12098 = getelementptr inbounds %struct.Reg, %struct.Reg* %12097, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %12098 to i64*
  %12099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12100 = getelementptr inbounds %struct.GPR, %struct.GPR* %12099, i32 0, i32 1
  %12101 = getelementptr inbounds %struct.Reg, %struct.Reg* %12100, i32 0, i32 0
  %RAX.i496 = bitcast %union.anon* %12101 to i64*
  %12102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12103 = getelementptr inbounds %struct.GPR, %struct.GPR* %12102, i32 0, i32 5
  %12104 = getelementptr inbounds %struct.Reg, %struct.Reg* %12103, i32 0, i32 0
  %RCX.i497 = bitcast %union.anon* %12104 to i64*
  %12105 = load i64, i64* %RAX.i496
  %12106 = load i64, i64* %RCX.i497
  %12107 = load i64, i64* %PC.i495
  %12108 = add i64 %12107, 3
  store i64 %12108, i64* %PC.i495
  %12109 = add i64 %12106, %12105
  store i64 %12109, i64* %RAX.i496, align 8
  %12110 = icmp ult i64 %12109, %12105
  %12111 = icmp ult i64 %12109, %12106
  %12112 = or i1 %12110, %12111
  %12113 = zext i1 %12112 to i8
  %12114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12113, i8* %12114, align 1
  %12115 = trunc i64 %12109 to i32
  %12116 = and i32 %12115, 255
  %12117 = call i32 @llvm.ctpop.i32(i32 %12116)
  %12118 = trunc i32 %12117 to i8
  %12119 = and i8 %12118, 1
  %12120 = xor i8 %12119, 1
  %12121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12120, i8* %12121, align 1
  %12122 = xor i64 %12106, %12105
  %12123 = xor i64 %12122, %12109
  %12124 = lshr i64 %12123, 4
  %12125 = trunc i64 %12124 to i8
  %12126 = and i8 %12125, 1
  %12127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12126, i8* %12127, align 1
  %12128 = icmp eq i64 %12109, 0
  %12129 = zext i1 %12128 to i8
  %12130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12129, i8* %12130, align 1
  %12131 = lshr i64 %12109, 63
  %12132 = trunc i64 %12131 to i8
  %12133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12132, i8* %12133, align 1
  %12134 = lshr i64 %12105, 63
  %12135 = lshr i64 %12106, 63
  %12136 = xor i64 %12131, %12134
  %12137 = xor i64 %12131, %12135
  %12138 = add i64 %12136, %12137
  %12139 = icmp eq i64 %12138, 2
  %12140 = zext i1 %12139 to i8
  %12141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12140, i8* %12141, align 1
  store %struct.Memory* %loadMem_480b55, %struct.Memory** %MEMORY
  %loadMem_480b58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12143 = getelementptr inbounds %struct.GPR, %struct.GPR* %12142, i32 0, i32 33
  %12144 = getelementptr inbounds %struct.Reg, %struct.Reg* %12143, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %12144 to i64*
  %12145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12146 = getelementptr inbounds %struct.GPR, %struct.GPR* %12145, i32 0, i32 1
  %12147 = getelementptr inbounds %struct.Reg, %struct.Reg* %12146, i32 0, i32 0
  %RAX.i493 = bitcast %union.anon* %12147 to i64*
  %12148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12149 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12148, i64 0, i64 1
  %YMM1.i494 = bitcast %union.VectorReg* %12149 to %"class.std::bitset"*
  %12150 = bitcast %"class.std::bitset"* %YMM1.i494 to i8*
  %12151 = load i64, i64* %RAX.i493
  %12152 = add i64 %12151, 8
  %12153 = load i64, i64* %PC.i492
  %12154 = add i64 %12153, 5
  store i64 %12154, i64* %PC.i492
  %12155 = inttoptr i64 %12152 to float*
  %12156 = load float, float* %12155
  %12157 = fpext float %12156 to double
  %12158 = bitcast i8* %12150 to double*
  store double %12157, double* %12158, align 1
  store %struct.Memory* %loadMem_480b58, %struct.Memory** %MEMORY
  %loadMem_480b5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12160 = getelementptr inbounds %struct.GPR, %struct.GPR* %12159, i32 0, i32 33
  %12161 = getelementptr inbounds %struct.Reg, %struct.Reg* %12160, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %12161 to i64*
  %12162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12163 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12162, i64 0, i64 0
  %XMM0.i488 = bitcast %union.VectorReg* %12163 to %union.vec128_t*
  %12164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12165 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12164, i64 0, i64 1
  %XMM1.i489 = bitcast %union.VectorReg* %12165 to %union.vec128_t*
  %12166 = bitcast %union.vec128_t* %XMM1.i489 to i8*
  %12167 = bitcast %union.vec128_t* %XMM0.i488 to i8*
  %12168 = load i64, i64* %PC.i487
  %12169 = add i64 %12168, 4
  store i64 %12169, i64* %PC.i487
  %12170 = bitcast i8* %12166 to double*
  %12171 = load double, double* %12170, align 1
  %12172 = bitcast i8* %12167 to double*
  %12173 = load double, double* %12172, align 1
  %12174 = fcmp uno double %12171, %12173
  br i1 %12174, label %12175, label %12187

; <label>:12175:                                  ; preds = %block_480b3d
  %12176 = fadd double %12171, %12173
  %12177 = bitcast double %12176 to i64
  %12178 = and i64 %12177, 9221120237041090560
  %12179 = icmp eq i64 %12178, 9218868437227405312
  %12180 = and i64 %12177, 2251799813685247
  %12181 = icmp ne i64 %12180, 0
  %12182 = and i1 %12179, %12181
  br i1 %12182, label %12183, label %12193

; <label>:12183:                                  ; preds = %12175
  %12184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12185 = load i64, i64* %12184, align 8
  %12186 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12185, %struct.Memory* %loadMem_480b5d)
  br label %routine_ucomisd__xmm0___xmm1.exit

; <label>:12187:                                  ; preds = %block_480b3d
  %12188 = fcmp ogt double %12171, %12173
  br i1 %12188, label %12193, label %12189

; <label>:12189:                                  ; preds = %12187
  %12190 = fcmp olt double %12171, %12173
  br i1 %12190, label %12193, label %12191

; <label>:12191:                                  ; preds = %12189
  %12192 = fcmp oeq double %12171, %12173
  br i1 %12192, label %12193, label %12200

; <label>:12193:                                  ; preds = %12191, %12189, %12187, %12175
  %12194 = phi i8 [ 0, %12187 ], [ 0, %12189 ], [ 1, %12191 ], [ 1, %12175 ]
  %12195 = phi i8 [ 0, %12187 ], [ 0, %12189 ], [ 0, %12191 ], [ 1, %12175 ]
  %12196 = phi i8 [ 0, %12187 ], [ 1, %12189 ], [ 0, %12191 ], [ 1, %12175 ]
  %12197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12194, i8* %12197, align 1
  %12198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12195, i8* %12198, align 1
  %12199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12196, i8* %12199, align 1
  br label %12200

; <label>:12200:                                  ; preds = %12193, %12191
  %12201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12201, align 1
  %12202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12202, align 1
  %12203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12203, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit

routine_ucomisd__xmm0___xmm1.exit:                ; preds = %12183, %12200
  %12204 = phi %struct.Memory* [ %12186, %12183 ], [ %loadMem_480b5d, %12200 ]
  store %struct.Memory* %12204, %struct.Memory** %MEMORY
  %loadMem_480b61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12206 = getelementptr inbounds %struct.GPR, %struct.GPR* %12205, i32 0, i32 33
  %12207 = getelementptr inbounds %struct.Reg, %struct.Reg* %12206, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %12207 to i64*
  %12208 = load i64, i64* %PC.i486
  %12209 = add i64 %12208, 358
  %12210 = load i64, i64* %PC.i486
  %12211 = add i64 %12210, 6
  %12212 = load i64, i64* %PC.i486
  %12213 = add i64 %12212, 6
  store i64 %12213, i64* %PC.i486
  %12214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12215 = load i8, i8* %12214, align 1
  %12216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12217 = load i8, i8* %12216, align 1
  %12218 = or i8 %12217, %12215
  %12219 = icmp ne i8 %12218, 0
  %12220 = zext i1 %12219 to i8
  store i8 %12220, i8* %BRANCH_TAKEN, align 1
  %12221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12222 = select i1 %12219, i64 %12209, i64 %12211
  store i64 %12222, i64* %12221, align 8
  store %struct.Memory* %loadMem_480b61, %struct.Memory** %MEMORY
  %loadBr_480b61 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480b61 = icmp eq i8 %loadBr_480b61, 1
  br i1 %cmpBr_480b61, label %block_.L_480cc7, label %block_480b67

block_480b67:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_480b67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12224 = getelementptr inbounds %struct.GPR, %struct.GPR* %12223, i32 0, i32 33
  %12225 = getelementptr inbounds %struct.Reg, %struct.Reg* %12224, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %12225 to i64*
  %12226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12227 = getelementptr inbounds %struct.GPR, %struct.GPR* %12226, i32 0, i32 11
  %12228 = getelementptr inbounds %struct.Reg, %struct.Reg* %12227, i32 0, i32 0
  %RDI.i484 = bitcast %union.anon* %12228 to i64*
  %12229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12230 = getelementptr inbounds %struct.GPR, %struct.GPR* %12229, i32 0, i32 15
  %12231 = getelementptr inbounds %struct.Reg, %struct.Reg* %12230, i32 0, i32 0
  %RBP.i485 = bitcast %union.anon* %12231 to i64*
  %12232 = load i64, i64* %RBP.i485
  %12233 = sub i64 %12232, 8
  %12234 = load i64, i64* %PC.i483
  %12235 = add i64 %12234, 3
  store i64 %12235, i64* %PC.i483
  %12236 = inttoptr i64 %12233 to i32*
  %12237 = load i32, i32* %12236
  %12238 = zext i32 %12237 to i64
  store i64 %12238, i64* %RDI.i484, align 8
  store %struct.Memory* %loadMem_480b67, %struct.Memory** %MEMORY
  %loadMem_480b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12240 = getelementptr inbounds %struct.GPR, %struct.GPR* %12239, i32 0, i32 33
  %12241 = getelementptr inbounds %struct.Reg, %struct.Reg* %12240, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %12241 to i64*
  %12242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12243 = getelementptr inbounds %struct.GPR, %struct.GPR* %12242, i32 0, i32 9
  %12244 = getelementptr inbounds %struct.Reg, %struct.Reg* %12243, i32 0, i32 0
  %RSI.i481 = bitcast %union.anon* %12244 to i64*
  %12245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12246 = getelementptr inbounds %struct.GPR, %struct.GPR* %12245, i32 0, i32 15
  %12247 = getelementptr inbounds %struct.Reg, %struct.Reg* %12246, i32 0, i32 0
  %RBP.i482 = bitcast %union.anon* %12247 to i64*
  %12248 = load i64, i64* %RBP.i482
  %12249 = sub i64 %12248, 12
  %12250 = load i64, i64* %PC.i480
  %12251 = add i64 %12250, 3
  store i64 %12251, i64* %PC.i480
  %12252 = inttoptr i64 %12249 to i32*
  %12253 = load i32, i32* %12252
  %12254 = zext i32 %12253 to i64
  store i64 %12254, i64* %RSI.i481, align 8
  store %struct.Memory* %loadMem_480b6a, %struct.Memory** %MEMORY
  %loadMem1_480b6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12256 = getelementptr inbounds %struct.GPR, %struct.GPR* %12255, i32 0, i32 33
  %12257 = getelementptr inbounds %struct.Reg, %struct.Reg* %12256, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %12257 to i64*
  %12258 = load i64, i64* %PC.i479
  %12259 = add i64 %12258, -467101
  %12260 = load i64, i64* %PC.i479
  %12261 = add i64 %12260, 5
  %12262 = load i64, i64* %PC.i479
  %12263 = add i64 %12262, 5
  store i64 %12263, i64* %PC.i479
  %12264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12265 = load i64, i64* %12264, align 8
  %12266 = add i64 %12265, -8
  %12267 = inttoptr i64 %12266 to i64*
  store i64 %12261, i64* %12267
  store i64 %12266, i64* %12264, align 8
  %12268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12259, i64* %12268, align 8
  store %struct.Memory* %loadMem1_480b6d, %struct.Memory** %MEMORY
  %loadMem2_480b6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480b6d = load i64, i64* %3
  %call2_480b6d = call %struct.Memory* @sub_40ead0.is_legal(%struct.State* %0, i64 %loadPC_480b6d, %struct.Memory* %loadMem2_480b6d)
  store %struct.Memory* %call2_480b6d, %struct.Memory** %MEMORY
  %loadMem_480b72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12270 = getelementptr inbounds %struct.GPR, %struct.GPR* %12269, i32 0, i32 33
  %12271 = getelementptr inbounds %struct.Reg, %struct.Reg* %12270, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %12271 to i64*
  %12272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12273 = getelementptr inbounds %struct.GPR, %struct.GPR* %12272, i32 0, i32 1
  %12274 = getelementptr inbounds %struct.Reg, %struct.Reg* %12273, i32 0, i32 0
  %EAX.i478 = bitcast %union.anon* %12274 to i32*
  %12275 = load i32, i32* %EAX.i478
  %12276 = zext i32 %12275 to i64
  %12277 = load i64, i64* %PC.i477
  %12278 = add i64 %12277, 3
  store i64 %12278, i64* %PC.i477
  %12279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12279, align 1
  %12280 = and i32 %12275, 255
  %12281 = call i32 @llvm.ctpop.i32(i32 %12280)
  %12282 = trunc i32 %12281 to i8
  %12283 = and i8 %12282, 1
  %12284 = xor i8 %12283, 1
  %12285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12284, i8* %12285, align 1
  %12286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12286, align 1
  %12287 = icmp eq i32 %12275, 0
  %12288 = zext i1 %12287 to i8
  %12289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12288, i8* %12289, align 1
  %12290 = lshr i32 %12275, 31
  %12291 = trunc i32 %12290 to i8
  %12292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12291, i8* %12292, align 1
  %12293 = lshr i32 %12275, 31
  %12294 = xor i32 %12290, %12293
  %12295 = add i32 %12294, %12293
  %12296 = icmp eq i32 %12295, 2
  %12297 = zext i1 %12296 to i8
  %12298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12297, i8* %12298, align 1
  store %struct.Memory* %loadMem_480b72, %struct.Memory** %MEMORY
  %loadMem_480b75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12300 = getelementptr inbounds %struct.GPR, %struct.GPR* %12299, i32 0, i32 33
  %12301 = getelementptr inbounds %struct.Reg, %struct.Reg* %12300, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %12301 to i64*
  %12302 = load i64, i64* %PC.i476
  %12303 = add i64 %12302, 338
  %12304 = load i64, i64* %PC.i476
  %12305 = add i64 %12304, 6
  %12306 = load i64, i64* %PC.i476
  %12307 = add i64 %12306, 6
  store i64 %12307, i64* %PC.i476
  %12308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12309 = load i8, i8* %12308, align 1
  store i8 %12309, i8* %BRANCH_TAKEN, align 1
  %12310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12311 = icmp ne i8 %12309, 0
  %12312 = select i1 %12311, i64 %12303, i64 %12305
  store i64 %12312, i64* %12310, align 8
  store %struct.Memory* %loadMem_480b75, %struct.Memory** %MEMORY
  %loadBr_480b75 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480b75 = icmp eq i8 %loadBr_480b75, 1
  br i1 %cmpBr_480b75, label %block_.L_480cc7, label %block_480b7b

block_480b7b:                                     ; preds = %block_480b67
  %loadMem_480b7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12314 = getelementptr inbounds %struct.GPR, %struct.GPR* %12313, i32 0, i32 33
  %12315 = getelementptr inbounds %struct.Reg, %struct.Reg* %12314, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %12315 to i64*
  %12316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12317 = getelementptr inbounds %struct.GPR, %struct.GPR* %12316, i32 0, i32 11
  %12318 = getelementptr inbounds %struct.Reg, %struct.Reg* %12317, i32 0, i32 0
  %RDI.i474 = bitcast %union.anon* %12318 to i64*
  %12319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12320 = getelementptr inbounds %struct.GPR, %struct.GPR* %12319, i32 0, i32 15
  %12321 = getelementptr inbounds %struct.Reg, %struct.Reg* %12320, i32 0, i32 0
  %RBP.i475 = bitcast %union.anon* %12321 to i64*
  %12322 = load i64, i64* %RBP.i475
  %12323 = sub i64 %12322, 8
  %12324 = load i64, i64* %PC.i473
  %12325 = add i64 %12324, 3
  store i64 %12325, i64* %PC.i473
  %12326 = inttoptr i64 %12323 to i32*
  %12327 = load i32, i32* %12326
  %12328 = zext i32 %12327 to i64
  store i64 %12328, i64* %RDI.i474, align 8
  store %struct.Memory* %loadMem_480b7b, %struct.Memory** %MEMORY
  %loadMem_480b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12330 = getelementptr inbounds %struct.GPR, %struct.GPR* %12329, i32 0, i32 33
  %12331 = getelementptr inbounds %struct.Reg, %struct.Reg* %12330, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %12331 to i64*
  %12332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12333 = getelementptr inbounds %struct.GPR, %struct.GPR* %12332, i32 0, i32 9
  %12334 = getelementptr inbounds %struct.Reg, %struct.Reg* %12333, i32 0, i32 0
  %RSI.i471 = bitcast %union.anon* %12334 to i64*
  %12335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12336 = getelementptr inbounds %struct.GPR, %struct.GPR* %12335, i32 0, i32 15
  %12337 = getelementptr inbounds %struct.Reg, %struct.Reg* %12336, i32 0, i32 0
  %RBP.i472 = bitcast %union.anon* %12337 to i64*
  %12338 = load i64, i64* %RBP.i472
  %12339 = sub i64 %12338, 12
  %12340 = load i64, i64* %PC.i470
  %12341 = add i64 %12340, 3
  store i64 %12341, i64* %PC.i470
  %12342 = inttoptr i64 %12339 to i32*
  %12343 = load i32, i32* %12342
  %12344 = zext i32 %12343 to i64
  store i64 %12344, i64* %RSI.i471, align 8
  store %struct.Memory* %loadMem_480b7e, %struct.Memory** %MEMORY
  %loadMem1_480b81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12346 = getelementptr inbounds %struct.GPR, %struct.GPR* %12345, i32 0, i32 33
  %12347 = getelementptr inbounds %struct.Reg, %struct.Reg* %12346, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %12347 to i64*
  %12348 = load i64, i64* %PC.i469
  %12349 = add i64 %12348, 17727
  %12350 = load i64, i64* %PC.i469
  %12351 = add i64 %12350, 5
  %12352 = load i64, i64* %PC.i469
  %12353 = add i64 %12352, 5
  store i64 %12353, i64* %PC.i469
  %12354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12355 = load i64, i64* %12354, align 8
  %12356 = add i64 %12355, -8
  %12357 = inttoptr i64 %12356 to i64*
  store i64 %12351, i64* %12357
  store i64 %12356, i64* %12354, align 8
  %12358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12349, i64* %12358, align 8
  store %struct.Memory* %loadMem1_480b81, %struct.Memory** %MEMORY
  %loadMem2_480b81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480b81 = load i64, i64* %3
  %call2_480b81 = call %struct.Memory* @sub_4850c0.value_moves_confirm_safety(%struct.State* %0, i64 %loadPC_480b81, %struct.Memory* %loadMem2_480b81)
  store %struct.Memory* %call2_480b81, %struct.Memory** %MEMORY
  %loadMem_480b86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12360 = getelementptr inbounds %struct.GPR, %struct.GPR* %12359, i32 0, i32 33
  %12361 = getelementptr inbounds %struct.Reg, %struct.Reg* %12360, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %12361 to i64*
  %12362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12363 = getelementptr inbounds %struct.GPR, %struct.GPR* %12362, i32 0, i32 1
  %12364 = getelementptr inbounds %struct.Reg, %struct.Reg* %12363, i32 0, i32 0
  %EAX.i468 = bitcast %union.anon* %12364 to i32*
  %12365 = load i32, i32* %EAX.i468
  %12366 = zext i32 %12365 to i64
  %12367 = load i64, i64* %PC.i467
  %12368 = add i64 %12367, 3
  store i64 %12368, i64* %PC.i467
  %12369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12369, align 1
  %12370 = and i32 %12365, 255
  %12371 = call i32 @llvm.ctpop.i32(i32 %12370)
  %12372 = trunc i32 %12371 to i8
  %12373 = and i8 %12372, 1
  %12374 = xor i8 %12373, 1
  %12375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12374, i8* %12375, align 1
  %12376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12376, align 1
  %12377 = icmp eq i32 %12365, 0
  %12378 = zext i1 %12377 to i8
  %12379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12378, i8* %12379, align 1
  %12380 = lshr i32 %12365, 31
  %12381 = trunc i32 %12380 to i8
  %12382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12381, i8* %12382, align 1
  %12383 = lshr i32 %12365, 31
  %12384 = xor i32 %12380, %12383
  %12385 = add i32 %12384, %12383
  %12386 = icmp eq i32 %12385, 2
  %12387 = zext i1 %12386 to i8
  %12388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12387, i8* %12388, align 1
  store %struct.Memory* %loadMem_480b86, %struct.Memory** %MEMORY
  %loadMem_480b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12390 = getelementptr inbounds %struct.GPR, %struct.GPR* %12389, i32 0, i32 33
  %12391 = getelementptr inbounds %struct.Reg, %struct.Reg* %12390, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %12391 to i64*
  %12392 = load i64, i64* %PC.i466
  %12393 = add i64 %12392, 318
  %12394 = load i64, i64* %PC.i466
  %12395 = add i64 %12394, 6
  %12396 = load i64, i64* %PC.i466
  %12397 = add i64 %12396, 6
  store i64 %12397, i64* %PC.i466
  %12398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12399 = load i8, i8* %12398, align 1
  store i8 %12399, i8* %BRANCH_TAKEN, align 1
  %12400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12401 = icmp ne i8 %12399, 0
  %12402 = select i1 %12401, i64 %12393, i64 %12395
  store i64 %12402, i64* %12400, align 8
  store %struct.Memory* %loadMem_480b89, %struct.Memory** %MEMORY
  %loadBr_480b89 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480b89 = icmp eq i8 %loadBr_480b89, 1
  br i1 %cmpBr_480b89, label %block_.L_480cc7, label %block_480b8f

block_480b8f:                                     ; preds = %block_480b7b
  %loadMem_480b8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12404 = getelementptr inbounds %struct.GPR, %struct.GPR* %12403, i32 0, i32 33
  %12405 = getelementptr inbounds %struct.Reg, %struct.Reg* %12404, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %12405 to i64*
  %12406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12407 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12406, i64 0, i64 0
  %YMM0.i465 = bitcast %union.VectorReg* %12407 to %"class.std::bitset"*
  %12408 = bitcast %"class.std::bitset"* %YMM0.i465 to i8*
  %12409 = load i64, i64* %PC.i464
  %12410 = add i64 %12409, ptrtoint (%G_0x62411__rip__type* @G_0x62411__rip_ to i64)
  %12411 = load i64, i64* %PC.i464
  %12412 = add i64 %12411, 8
  store i64 %12412, i64* %PC.i464
  %12413 = inttoptr i64 %12410 to double*
  %12414 = load double, double* %12413
  %12415 = bitcast i8* %12408 to double*
  store double %12414, double* %12415, align 1
  %12416 = getelementptr inbounds i8, i8* %12408, i64 8
  %12417 = bitcast i8* %12416 to double*
  store double 0.000000e+00, double* %12417, align 1
  store %struct.Memory* %loadMem_480b8f, %struct.Memory** %MEMORY
  %loadMem_480b97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12419 = getelementptr inbounds %struct.GPR, %struct.GPR* %12418, i32 0, i32 33
  %12420 = getelementptr inbounds %struct.Reg, %struct.Reg* %12419, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %12420 to i64*
  %12421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12422 = getelementptr inbounds %struct.GPR, %struct.GPR* %12421, i32 0, i32 1
  %12423 = getelementptr inbounds %struct.Reg, %struct.Reg* %12422, i32 0, i32 0
  %RAX.i463 = bitcast %union.anon* %12423 to i64*
  %12424 = load i64, i64* %PC.i462
  %12425 = add i64 %12424, 10
  store i64 %12425, i64* %PC.i462
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i463, align 8
  store %struct.Memory* %loadMem_480b97, %struct.Memory** %MEMORY
  %loadMem_480ba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12427 = getelementptr inbounds %struct.GPR, %struct.GPR* %12426, i32 0, i32 33
  %12428 = getelementptr inbounds %struct.Reg, %struct.Reg* %12427, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %12428 to i64*
  %12429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12430 = getelementptr inbounds %struct.GPR, %struct.GPR* %12429, i32 0, i32 15
  %12431 = getelementptr inbounds %struct.Reg, %struct.Reg* %12430, i32 0, i32 0
  %RBP.i460 = bitcast %union.anon* %12431 to i64*
  %12432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12433 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12432, i64 0, i64 1
  %YMM1.i461 = bitcast %union.VectorReg* %12433 to %"class.std::bitset"*
  %12434 = bitcast %"class.std::bitset"* %YMM1.i461 to i8*
  %12435 = load i64, i64* %RBP.i460
  %12436 = sub i64 %12435, 16
  %12437 = load i64, i64* %PC.i459
  %12438 = add i64 %12437, 5
  store i64 %12438, i64* %PC.i459
  %12439 = inttoptr i64 %12436 to float*
  %12440 = load float, float* %12439
  %12441 = fpext float %12440 to double
  %12442 = bitcast i8* %12434 to double*
  store double %12441, double* %12442, align 1
  store %struct.Memory* %loadMem_480ba1, %struct.Memory** %MEMORY
  %loadMem_480ba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12444 = getelementptr inbounds %struct.GPR, %struct.GPR* %12443, i32 0, i32 33
  %12445 = getelementptr inbounds %struct.Reg, %struct.Reg* %12444, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %12445 to i64*
  %12446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12447 = getelementptr inbounds %struct.GPR, %struct.GPR* %12446, i32 0, i32 15
  %12448 = getelementptr inbounds %struct.Reg, %struct.Reg* %12447, i32 0, i32 0
  %RBP.i457 = bitcast %union.anon* %12448 to i64*
  %12449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12450 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12449, i64 0, i64 2
  %YMM2.i458 = bitcast %union.VectorReg* %12450 to %"class.std::bitset"*
  %12451 = bitcast %"class.std::bitset"* %YMM2.i458 to i8*
  %12452 = load i64, i64* %RBP.i457
  %12453 = sub i64 %12452, 24
  %12454 = load i64, i64* %PC.i456
  %12455 = add i64 %12454, 5
  store i64 %12455, i64* %PC.i456
  %12456 = inttoptr i64 %12453 to float*
  %12457 = load float, float* %12456
  %12458 = fpext float %12457 to double
  %12459 = bitcast i8* %12451 to double*
  store double %12458, double* %12459, align 1
  store %struct.Memory* %loadMem_480ba6, %struct.Memory** %MEMORY
  %loadMem_480bab = load %struct.Memory*, %struct.Memory** %MEMORY
  %12460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12461 = getelementptr inbounds %struct.GPR, %struct.GPR* %12460, i32 0, i32 33
  %12462 = getelementptr inbounds %struct.Reg, %struct.Reg* %12461, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %12462 to i64*
  %12463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12464 = getelementptr inbounds %struct.GPR, %struct.GPR* %12463, i32 0, i32 5
  %12465 = getelementptr inbounds %struct.Reg, %struct.Reg* %12464, i32 0, i32 0
  %RCX.i454 = bitcast %union.anon* %12465 to i64*
  %12466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12467 = getelementptr inbounds %struct.GPR, %struct.GPR* %12466, i32 0, i32 15
  %12468 = getelementptr inbounds %struct.Reg, %struct.Reg* %12467, i32 0, i32 0
  %RBP.i455 = bitcast %union.anon* %12468 to i64*
  %12469 = load i64, i64* %RBP.i455
  %12470 = sub i64 %12469, 8
  %12471 = load i64, i64* %PC.i453
  %12472 = add i64 %12471, 4
  store i64 %12472, i64* %PC.i453
  %12473 = inttoptr i64 %12470 to i32*
  %12474 = load i32, i32* %12473
  %12475 = sext i32 %12474 to i64
  store i64 %12475, i64* %RCX.i454, align 8
  store %struct.Memory* %loadMem_480bab, %struct.Memory** %MEMORY
  %loadMem_480baf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12477 = getelementptr inbounds %struct.GPR, %struct.GPR* %12476, i32 0, i32 33
  %12478 = getelementptr inbounds %struct.Reg, %struct.Reg* %12477, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %12478 to i64*
  %12479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12480 = getelementptr inbounds %struct.GPR, %struct.GPR* %12479, i32 0, i32 5
  %12481 = getelementptr inbounds %struct.Reg, %struct.Reg* %12480, i32 0, i32 0
  %RCX.i452 = bitcast %union.anon* %12481 to i64*
  %12482 = load i64, i64* %RCX.i452
  %12483 = load i64, i64* %PC.i451
  %12484 = add i64 %12483, 7
  store i64 %12484, i64* %PC.i451
  %12485 = sext i64 %12482 to i128
  %12486 = and i128 %12485, -18446744073709551616
  %12487 = zext i64 %12482 to i128
  %12488 = or i128 %12486, %12487
  %12489 = mul i128 564, %12488
  %12490 = trunc i128 %12489 to i64
  store i64 %12490, i64* %RCX.i452, align 8
  %12491 = sext i64 %12490 to i128
  %12492 = icmp ne i128 %12491, %12489
  %12493 = zext i1 %12492 to i8
  %12494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12493, i8* %12494, align 1
  %12495 = trunc i128 %12489 to i32
  %12496 = and i32 %12495, 255
  %12497 = call i32 @llvm.ctpop.i32(i32 %12496)
  %12498 = trunc i32 %12497 to i8
  %12499 = and i8 %12498, 1
  %12500 = xor i8 %12499, 1
  %12501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12500, i8* %12501, align 1
  %12502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12502, align 1
  %12503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12503, align 1
  %12504 = lshr i64 %12490, 63
  %12505 = trunc i64 %12504 to i8
  %12506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12505, i8* %12506, align 1
  %12507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12493, i8* %12507, align 1
  store %struct.Memory* %loadMem_480baf, %struct.Memory** %MEMORY
  %loadMem_480bb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12509 = getelementptr inbounds %struct.GPR, %struct.GPR* %12508, i32 0, i32 33
  %12510 = getelementptr inbounds %struct.Reg, %struct.Reg* %12509, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %12510 to i64*
  %12511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12512 = getelementptr inbounds %struct.GPR, %struct.GPR* %12511, i32 0, i32 1
  %12513 = getelementptr inbounds %struct.Reg, %struct.Reg* %12512, i32 0, i32 0
  %RAX.i449 = bitcast %union.anon* %12513 to i64*
  %12514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12515 = getelementptr inbounds %struct.GPR, %struct.GPR* %12514, i32 0, i32 5
  %12516 = getelementptr inbounds %struct.Reg, %struct.Reg* %12515, i32 0, i32 0
  %RCX.i450 = bitcast %union.anon* %12516 to i64*
  %12517 = load i64, i64* %RAX.i449
  %12518 = load i64, i64* %RCX.i450
  %12519 = load i64, i64* %PC.i448
  %12520 = add i64 %12519, 3
  store i64 %12520, i64* %PC.i448
  %12521 = add i64 %12518, %12517
  store i64 %12521, i64* %RAX.i449, align 8
  %12522 = icmp ult i64 %12521, %12517
  %12523 = icmp ult i64 %12521, %12518
  %12524 = or i1 %12522, %12523
  %12525 = zext i1 %12524 to i8
  %12526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12525, i8* %12526, align 1
  %12527 = trunc i64 %12521 to i32
  %12528 = and i32 %12527, 255
  %12529 = call i32 @llvm.ctpop.i32(i32 %12528)
  %12530 = trunc i32 %12529 to i8
  %12531 = and i8 %12530, 1
  %12532 = xor i8 %12531, 1
  %12533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12532, i8* %12533, align 1
  %12534 = xor i64 %12518, %12517
  %12535 = xor i64 %12534, %12521
  %12536 = lshr i64 %12535, 4
  %12537 = trunc i64 %12536 to i8
  %12538 = and i8 %12537, 1
  %12539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12538, i8* %12539, align 1
  %12540 = icmp eq i64 %12521, 0
  %12541 = zext i1 %12540 to i8
  %12542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12541, i8* %12542, align 1
  %12543 = lshr i64 %12521, 63
  %12544 = trunc i64 %12543 to i8
  %12545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12544, i8* %12545, align 1
  %12546 = lshr i64 %12517, 63
  %12547 = lshr i64 %12518, 63
  %12548 = xor i64 %12543, %12546
  %12549 = xor i64 %12543, %12547
  %12550 = add i64 %12548, %12549
  %12551 = icmp eq i64 %12550, 2
  %12552 = zext i1 %12551 to i8
  %12553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12552, i8* %12553, align 1
  store %struct.Memory* %loadMem_480bb6, %struct.Memory** %MEMORY
  %loadMem_480bb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12555 = getelementptr inbounds %struct.GPR, %struct.GPR* %12554, i32 0, i32 33
  %12556 = getelementptr inbounds %struct.Reg, %struct.Reg* %12555, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %12556 to i64*
  %12557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12558 = getelementptr inbounds %struct.GPR, %struct.GPR* %12557, i32 0, i32 1
  %12559 = getelementptr inbounds %struct.Reg, %struct.Reg* %12558, i32 0, i32 0
  %RAX.i447 = bitcast %union.anon* %12559 to i64*
  %12560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12561 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12560, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %12561 to %"class.std::bitset"*
  %12562 = bitcast %"class.std::bitset"* %YMM3.i to i8*
  %12563 = load i64, i64* %RAX.i447
  %12564 = add i64 %12563, 8
  %12565 = load i64, i64* %PC.i446
  %12566 = add i64 %12565, 5
  store i64 %12566, i64* %PC.i446
  %12567 = inttoptr i64 %12564 to float*
  %12568 = load float, float* %12567
  %12569 = fpext float %12568 to double
  %12570 = bitcast i8* %12562 to double*
  store double %12569, double* %12570, align 1
  store %struct.Memory* %loadMem_480bb9, %struct.Memory** %MEMORY
  %loadMem_480bbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %12571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12572 = getelementptr inbounds %struct.GPR, %struct.GPR* %12571, i32 0, i32 33
  %12573 = getelementptr inbounds %struct.Reg, %struct.Reg* %12572, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %12573 to i64*
  %12574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12575 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12574, i64 0, i64 0
  %YMM0.i445 = bitcast %union.VectorReg* %12575 to %"class.std::bitset"*
  %12576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12577 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12576, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %12577 to %union.vec128_t*
  %12578 = bitcast %"class.std::bitset"* %YMM0.i445 to i8*
  %12579 = bitcast %"class.std::bitset"* %YMM0.i445 to i8*
  %12580 = bitcast %union.vec128_t* %XMM3.i to i8*
  %12581 = load i64, i64* %PC.i444
  %12582 = add i64 %12581, 4
  store i64 %12582, i64* %PC.i444
  %12583 = bitcast i8* %12579 to double*
  %12584 = load double, double* %12583, align 1
  %12585 = getelementptr inbounds i8, i8* %12579, i64 8
  %12586 = bitcast i8* %12585 to i64*
  %12587 = load i64, i64* %12586, align 1
  %12588 = bitcast i8* %12580 to double*
  %12589 = load double, double* %12588, align 1
  %12590 = fmul double %12584, %12589
  %12591 = bitcast i8* %12578 to double*
  store double %12590, double* %12591, align 1
  %12592 = getelementptr inbounds i8, i8* %12578, i64 8
  %12593 = bitcast i8* %12592 to i64*
  store i64 %12587, i64* %12593, align 1
  store %struct.Memory* %loadMem_480bbe, %struct.Memory** %MEMORY
  %loadMem_480bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12595 = getelementptr inbounds %struct.GPR, %struct.GPR* %12594, i32 0, i32 33
  %12596 = getelementptr inbounds %struct.Reg, %struct.Reg* %12595, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %12596 to i64*
  %12597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12598 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12597, i64 0, i64 2
  %YMM2.i442 = bitcast %union.VectorReg* %12598 to %"class.std::bitset"*
  %12599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12600 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12599, i64 0, i64 0
  %XMM0.i443 = bitcast %union.VectorReg* %12600 to %union.vec128_t*
  %12601 = bitcast %"class.std::bitset"* %YMM2.i442 to i8*
  %12602 = bitcast %"class.std::bitset"* %YMM2.i442 to i8*
  %12603 = bitcast %union.vec128_t* %XMM0.i443 to i8*
  %12604 = load i64, i64* %PC.i441
  %12605 = add i64 %12604, 4
  store i64 %12605, i64* %PC.i441
  %12606 = bitcast i8* %12602 to double*
  %12607 = load double, double* %12606, align 1
  %12608 = getelementptr inbounds i8, i8* %12602, i64 8
  %12609 = bitcast i8* %12608 to i64*
  %12610 = load i64, i64* %12609, align 1
  %12611 = bitcast i8* %12603 to double*
  %12612 = load double, double* %12611, align 1
  %12613 = fadd double %12607, %12612
  %12614 = bitcast i8* %12601 to double*
  store double %12613, double* %12614, align 1
  %12615 = getelementptr inbounds i8, i8* %12601, i64 8
  %12616 = bitcast i8* %12615 to i64*
  store i64 %12610, i64* %12616, align 1
  store %struct.Memory* %loadMem_480bc2, %struct.Memory** %MEMORY
  %loadMem_480bc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12618 = getelementptr inbounds %struct.GPR, %struct.GPR* %12617, i32 0, i32 33
  %12619 = getelementptr inbounds %struct.Reg, %struct.Reg* %12618, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %12619 to i64*
  %12620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12621 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12620, i64 0, i64 1
  %XMM1.i437 = bitcast %union.VectorReg* %12621 to %union.vec128_t*
  %12622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12623 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12622, i64 0, i64 2
  %XMM2.i438 = bitcast %union.VectorReg* %12623 to %union.vec128_t*
  %12624 = bitcast %union.vec128_t* %XMM2.i438 to i8*
  %12625 = bitcast %union.vec128_t* %XMM1.i437 to i8*
  %12626 = load i64, i64* %PC.i436
  %12627 = add i64 %12626, 4
  store i64 %12627, i64* %PC.i436
  %12628 = bitcast i8* %12624 to double*
  %12629 = load double, double* %12628, align 1
  %12630 = bitcast i8* %12625 to double*
  %12631 = load double, double* %12630, align 1
  %12632 = fcmp uno double %12629, %12631
  br i1 %12632, label %12633, label %12645

; <label>:12633:                                  ; preds = %block_480b8f
  %12634 = fadd double %12629, %12631
  %12635 = bitcast double %12634 to i64
  %12636 = and i64 %12635, 9221120237041090560
  %12637 = icmp eq i64 %12636, 9218868437227405312
  %12638 = and i64 %12635, 2251799813685247
  %12639 = icmp ne i64 %12638, 0
  %12640 = and i1 %12637, %12639
  br i1 %12640, label %12641, label %12651

; <label>:12641:                                  ; preds = %12633
  %12642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12643 = load i64, i64* %12642, align 8
  %12644 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12643, %struct.Memory* %loadMem_480bc6)
  br label %routine_ucomisd__xmm1___xmm2.exit

; <label>:12645:                                  ; preds = %block_480b8f
  %12646 = fcmp ogt double %12629, %12631
  br i1 %12646, label %12651, label %12647

; <label>:12647:                                  ; preds = %12645
  %12648 = fcmp olt double %12629, %12631
  br i1 %12648, label %12651, label %12649

; <label>:12649:                                  ; preds = %12647
  %12650 = fcmp oeq double %12629, %12631
  br i1 %12650, label %12651, label %12658

; <label>:12651:                                  ; preds = %12649, %12647, %12645, %12633
  %12652 = phi i8 [ 0, %12645 ], [ 0, %12647 ], [ 1, %12649 ], [ 1, %12633 ]
  %12653 = phi i8 [ 0, %12645 ], [ 0, %12647 ], [ 0, %12649 ], [ 1, %12633 ]
  %12654 = phi i8 [ 0, %12645 ], [ 1, %12647 ], [ 0, %12649 ], [ 1, %12633 ]
  %12655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12652, i8* %12655, align 1
  %12656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12653, i8* %12656, align 1
  %12657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12654, i8* %12657, align 1
  br label %12658

; <label>:12658:                                  ; preds = %12651, %12649
  %12659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12659, align 1
  %12660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12660, align 1
  %12661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12661, align 1
  br label %routine_ucomisd__xmm1___xmm2.exit

routine_ucomisd__xmm1___xmm2.exit:                ; preds = %12641, %12658
  %12662 = phi %struct.Memory* [ %12644, %12641 ], [ %loadMem_480bc6, %12658 ]
  store %struct.Memory* %12662, %struct.Memory** %MEMORY
  %loadMem_480bca = load %struct.Memory*, %struct.Memory** %MEMORY
  %12663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12664 = getelementptr inbounds %struct.GPR, %struct.GPR* %12663, i32 0, i32 33
  %12665 = getelementptr inbounds %struct.Reg, %struct.Reg* %12664, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %12665 to i64*
  %12666 = load i64, i64* %PC.i435
  %12667 = add i64 %12666, 24
  %12668 = load i64, i64* %PC.i435
  %12669 = add i64 %12668, 6
  %12670 = load i64, i64* %PC.i435
  %12671 = add i64 %12670, 6
  store i64 %12671, i64* %PC.i435
  %12672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12673 = load i8, i8* %12672, align 1
  %12674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12675 = load i8, i8* %12674, align 1
  %12676 = or i8 %12675, %12673
  %12677 = icmp ne i8 %12676, 0
  %12678 = zext i1 %12677 to i8
  store i8 %12678, i8* %BRANCH_TAKEN, align 1
  %12679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12680 = select i1 %12677, i64 %12667, i64 %12669
  store i64 %12680, i64* %12679, align 8
  store %struct.Memory* %loadMem_480bca, %struct.Memory** %MEMORY
  %loadBr_480bca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480bca = icmp eq i8 %loadBr_480bca, 1
  br i1 %cmpBr_480bca, label %block_.L_480be2, label %block_480bd0

block_480bd0:                                     ; preds = %routine_ucomisd__xmm1___xmm2.exit
  %loadMem_480bd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12682 = getelementptr inbounds %struct.GPR, %struct.GPR* %12681, i32 0, i32 33
  %12683 = getelementptr inbounds %struct.Reg, %struct.Reg* %12682, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %12683 to i64*
  %12684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12685 = getelementptr inbounds %struct.GPR, %struct.GPR* %12684, i32 0, i32 15
  %12686 = getelementptr inbounds %struct.Reg, %struct.Reg* %12685, i32 0, i32 0
  %RBP.i433 = bitcast %union.anon* %12686 to i64*
  %12687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12688 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12687, i64 0, i64 0
  %YMM0.i434 = bitcast %union.VectorReg* %12688 to %"class.std::bitset"*
  %12689 = bitcast %"class.std::bitset"* %YMM0.i434 to i8*
  %12690 = load i64, i64* %RBP.i433
  %12691 = sub i64 %12690, 16
  %12692 = load i64, i64* %PC.i432
  %12693 = add i64 %12692, 5
  store i64 %12693, i64* %PC.i432
  %12694 = inttoptr i64 %12691 to float*
  %12695 = load float, float* %12694
  %12696 = fpext float %12695 to double
  %12697 = bitcast i8* %12689 to double*
  store double %12696, double* %12697, align 1
  store %struct.Memory* %loadMem_480bd0, %struct.Memory** %MEMORY
  %loadMem_480bd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12699 = getelementptr inbounds %struct.GPR, %struct.GPR* %12698, i32 0, i32 33
  %12700 = getelementptr inbounds %struct.Reg, %struct.Reg* %12699, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %12700 to i64*
  %12701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12702 = getelementptr inbounds %struct.GPR, %struct.GPR* %12701, i32 0, i32 15
  %12703 = getelementptr inbounds %struct.Reg, %struct.Reg* %12702, i32 0, i32 0
  %RBP.i430 = bitcast %union.anon* %12703 to i64*
  %12704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12705 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12704, i64 0, i64 0
  %XMM0.i431 = bitcast %union.VectorReg* %12705 to %union.vec128_t*
  %12706 = load i64, i64* %RBP.i430
  %12707 = sub i64 %12706, 192
  %12708 = bitcast %union.vec128_t* %XMM0.i431 to i8*
  %12709 = load i64, i64* %PC.i429
  %12710 = add i64 %12709, 8
  store i64 %12710, i64* %PC.i429
  %12711 = bitcast i8* %12708 to double*
  %12712 = load double, double* %12711, align 1
  %12713 = inttoptr i64 %12707 to double*
  store double %12712, double* %12713
  store %struct.Memory* %loadMem_480bd5, %struct.Memory** %MEMORY
  %loadMem_480bdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12715 = getelementptr inbounds %struct.GPR, %struct.GPR* %12714, i32 0, i32 33
  %12716 = getelementptr inbounds %struct.Reg, %struct.Reg* %12715, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %12716 to i64*
  %12717 = load i64, i64* %PC.i428
  %12718 = add i64 %12717, 63
  %12719 = load i64, i64* %PC.i428
  %12720 = add i64 %12719, 5
  store i64 %12720, i64* %PC.i428
  %12721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12718, i64* %12721, align 8
  store %struct.Memory* %loadMem_480bdd, %struct.Memory** %MEMORY
  br label %block_.L_480c1c

block_.L_480be2:                                  ; preds = %routine_ucomisd__xmm1___xmm2.exit
  %loadMem_480be2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12723 = getelementptr inbounds %struct.GPR, %struct.GPR* %12722, i32 0, i32 33
  %12724 = getelementptr inbounds %struct.Reg, %struct.Reg* %12723, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %12724 to i64*
  %12725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12726 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12725, i64 0, i64 0
  %YMM0.i427 = bitcast %union.VectorReg* %12726 to %"class.std::bitset"*
  %12727 = bitcast %"class.std::bitset"* %YMM0.i427 to i8*
  %12728 = load i64, i64* %PC.i426
  %12729 = add i64 %12728, ptrtoint (%G_0x623be__rip__type* @G_0x623be__rip_ to i64)
  %12730 = load i64, i64* %PC.i426
  %12731 = add i64 %12730, 8
  store i64 %12731, i64* %PC.i426
  %12732 = inttoptr i64 %12729 to double*
  %12733 = load double, double* %12732
  %12734 = bitcast i8* %12727 to double*
  store double %12733, double* %12734, align 1
  %12735 = getelementptr inbounds i8, i8* %12727, i64 8
  %12736 = bitcast i8* %12735 to double*
  store double 0.000000e+00, double* %12736, align 1
  store %struct.Memory* %loadMem_480be2, %struct.Memory** %MEMORY
  %loadMem_480bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %12737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12738 = getelementptr inbounds %struct.GPR, %struct.GPR* %12737, i32 0, i32 33
  %12739 = getelementptr inbounds %struct.Reg, %struct.Reg* %12738, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %12739 to i64*
  %12740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12741 = getelementptr inbounds %struct.GPR, %struct.GPR* %12740, i32 0, i32 1
  %12742 = getelementptr inbounds %struct.Reg, %struct.Reg* %12741, i32 0, i32 0
  %RAX.i425 = bitcast %union.anon* %12742 to i64*
  %12743 = load i64, i64* %PC.i424
  %12744 = add i64 %12743, 10
  store i64 %12744, i64* %PC.i424
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i425, align 8
  store %struct.Memory* %loadMem_480bea, %struct.Memory** %MEMORY
  %loadMem_480bf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12746 = getelementptr inbounds %struct.GPR, %struct.GPR* %12745, i32 0, i32 33
  %12747 = getelementptr inbounds %struct.Reg, %struct.Reg* %12746, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %12747 to i64*
  %12748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12749 = getelementptr inbounds %struct.GPR, %struct.GPR* %12748, i32 0, i32 15
  %12750 = getelementptr inbounds %struct.Reg, %struct.Reg* %12749, i32 0, i32 0
  %RBP.i422 = bitcast %union.anon* %12750 to i64*
  %12751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12752 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12751, i64 0, i64 1
  %YMM1.i423 = bitcast %union.VectorReg* %12752 to %"class.std::bitset"*
  %12753 = bitcast %"class.std::bitset"* %YMM1.i423 to i8*
  %12754 = load i64, i64* %RBP.i422
  %12755 = sub i64 %12754, 24
  %12756 = load i64, i64* %PC.i421
  %12757 = add i64 %12756, 5
  store i64 %12757, i64* %PC.i421
  %12758 = inttoptr i64 %12755 to float*
  %12759 = load float, float* %12758
  %12760 = fpext float %12759 to double
  %12761 = bitcast i8* %12753 to double*
  store double %12760, double* %12761, align 1
  store %struct.Memory* %loadMem_480bf4, %struct.Memory** %MEMORY
  %loadMem_480bf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12763 = getelementptr inbounds %struct.GPR, %struct.GPR* %12762, i32 0, i32 33
  %12764 = getelementptr inbounds %struct.Reg, %struct.Reg* %12763, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %12764 to i64*
  %12765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12766 = getelementptr inbounds %struct.GPR, %struct.GPR* %12765, i32 0, i32 5
  %12767 = getelementptr inbounds %struct.Reg, %struct.Reg* %12766, i32 0, i32 0
  %RCX.i419 = bitcast %union.anon* %12767 to i64*
  %12768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12769 = getelementptr inbounds %struct.GPR, %struct.GPR* %12768, i32 0, i32 15
  %12770 = getelementptr inbounds %struct.Reg, %struct.Reg* %12769, i32 0, i32 0
  %RBP.i420 = bitcast %union.anon* %12770 to i64*
  %12771 = load i64, i64* %RBP.i420
  %12772 = sub i64 %12771, 8
  %12773 = load i64, i64* %PC.i418
  %12774 = add i64 %12773, 4
  store i64 %12774, i64* %PC.i418
  %12775 = inttoptr i64 %12772 to i32*
  %12776 = load i32, i32* %12775
  %12777 = sext i32 %12776 to i64
  store i64 %12777, i64* %RCX.i419, align 8
  store %struct.Memory* %loadMem_480bf9, %struct.Memory** %MEMORY
  %loadMem_480bfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12779 = getelementptr inbounds %struct.GPR, %struct.GPR* %12778, i32 0, i32 33
  %12780 = getelementptr inbounds %struct.Reg, %struct.Reg* %12779, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %12780 to i64*
  %12781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12782 = getelementptr inbounds %struct.GPR, %struct.GPR* %12781, i32 0, i32 5
  %12783 = getelementptr inbounds %struct.Reg, %struct.Reg* %12782, i32 0, i32 0
  %RCX.i417 = bitcast %union.anon* %12783 to i64*
  %12784 = load i64, i64* %RCX.i417
  %12785 = load i64, i64* %PC.i416
  %12786 = add i64 %12785, 7
  store i64 %12786, i64* %PC.i416
  %12787 = sext i64 %12784 to i128
  %12788 = and i128 %12787, -18446744073709551616
  %12789 = zext i64 %12784 to i128
  %12790 = or i128 %12788, %12789
  %12791 = mul i128 564, %12790
  %12792 = trunc i128 %12791 to i64
  store i64 %12792, i64* %RCX.i417, align 8
  %12793 = sext i64 %12792 to i128
  %12794 = icmp ne i128 %12793, %12791
  %12795 = zext i1 %12794 to i8
  %12796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12795, i8* %12796, align 1
  %12797 = trunc i128 %12791 to i32
  %12798 = and i32 %12797, 255
  %12799 = call i32 @llvm.ctpop.i32(i32 %12798)
  %12800 = trunc i32 %12799 to i8
  %12801 = and i8 %12800, 1
  %12802 = xor i8 %12801, 1
  %12803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12802, i8* %12803, align 1
  %12804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12804, align 1
  %12805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12805, align 1
  %12806 = lshr i64 %12792, 63
  %12807 = trunc i64 %12806 to i8
  %12808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12807, i8* %12808, align 1
  %12809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12795, i8* %12809, align 1
  store %struct.Memory* %loadMem_480bfd, %struct.Memory** %MEMORY
  %loadMem_480c04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12811 = getelementptr inbounds %struct.GPR, %struct.GPR* %12810, i32 0, i32 33
  %12812 = getelementptr inbounds %struct.Reg, %struct.Reg* %12811, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %12812 to i64*
  %12813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12814 = getelementptr inbounds %struct.GPR, %struct.GPR* %12813, i32 0, i32 1
  %12815 = getelementptr inbounds %struct.Reg, %struct.Reg* %12814, i32 0, i32 0
  %RAX.i414 = bitcast %union.anon* %12815 to i64*
  %12816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12817 = getelementptr inbounds %struct.GPR, %struct.GPR* %12816, i32 0, i32 5
  %12818 = getelementptr inbounds %struct.Reg, %struct.Reg* %12817, i32 0, i32 0
  %RCX.i415 = bitcast %union.anon* %12818 to i64*
  %12819 = load i64, i64* %RAX.i414
  %12820 = load i64, i64* %RCX.i415
  %12821 = load i64, i64* %PC.i413
  %12822 = add i64 %12821, 3
  store i64 %12822, i64* %PC.i413
  %12823 = add i64 %12820, %12819
  store i64 %12823, i64* %RAX.i414, align 8
  %12824 = icmp ult i64 %12823, %12819
  %12825 = icmp ult i64 %12823, %12820
  %12826 = or i1 %12824, %12825
  %12827 = zext i1 %12826 to i8
  %12828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12827, i8* %12828, align 1
  %12829 = trunc i64 %12823 to i32
  %12830 = and i32 %12829, 255
  %12831 = call i32 @llvm.ctpop.i32(i32 %12830)
  %12832 = trunc i32 %12831 to i8
  %12833 = and i8 %12832, 1
  %12834 = xor i8 %12833, 1
  %12835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12834, i8* %12835, align 1
  %12836 = xor i64 %12820, %12819
  %12837 = xor i64 %12836, %12823
  %12838 = lshr i64 %12837, 4
  %12839 = trunc i64 %12838 to i8
  %12840 = and i8 %12839, 1
  %12841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12840, i8* %12841, align 1
  %12842 = icmp eq i64 %12823, 0
  %12843 = zext i1 %12842 to i8
  %12844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12843, i8* %12844, align 1
  %12845 = lshr i64 %12823, 63
  %12846 = trunc i64 %12845 to i8
  %12847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12846, i8* %12847, align 1
  %12848 = lshr i64 %12819, 63
  %12849 = lshr i64 %12820, 63
  %12850 = xor i64 %12845, %12848
  %12851 = xor i64 %12845, %12849
  %12852 = add i64 %12850, %12851
  %12853 = icmp eq i64 %12852, 2
  %12854 = zext i1 %12853 to i8
  %12855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12854, i8* %12855, align 1
  store %struct.Memory* %loadMem_480c04, %struct.Memory** %MEMORY
  %loadMem_480c07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12857 = getelementptr inbounds %struct.GPR, %struct.GPR* %12856, i32 0, i32 33
  %12858 = getelementptr inbounds %struct.Reg, %struct.Reg* %12857, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %12858 to i64*
  %12859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12860 = getelementptr inbounds %struct.GPR, %struct.GPR* %12859, i32 0, i32 1
  %12861 = getelementptr inbounds %struct.Reg, %struct.Reg* %12860, i32 0, i32 0
  %RAX.i411 = bitcast %union.anon* %12861 to i64*
  %12862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12863 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12862, i64 0, i64 2
  %YMM2.i412 = bitcast %union.VectorReg* %12863 to %"class.std::bitset"*
  %12864 = bitcast %"class.std::bitset"* %YMM2.i412 to i8*
  %12865 = load i64, i64* %RAX.i411
  %12866 = add i64 %12865, 8
  %12867 = load i64, i64* %PC.i410
  %12868 = add i64 %12867, 5
  store i64 %12868, i64* %PC.i410
  %12869 = inttoptr i64 %12866 to float*
  %12870 = load float, float* %12869
  %12871 = fpext float %12870 to double
  %12872 = bitcast i8* %12864 to double*
  store double %12871, double* %12872, align 1
  store %struct.Memory* %loadMem_480c07, %struct.Memory** %MEMORY
  %loadMem_480c0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12874 = getelementptr inbounds %struct.GPR, %struct.GPR* %12873, i32 0, i32 33
  %12875 = getelementptr inbounds %struct.Reg, %struct.Reg* %12874, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %12875 to i64*
  %12876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12877 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12876, i64 0, i64 0
  %YMM0.i408 = bitcast %union.VectorReg* %12877 to %"class.std::bitset"*
  %12878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12879 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12878, i64 0, i64 2
  %XMM2.i409 = bitcast %union.VectorReg* %12879 to %union.vec128_t*
  %12880 = bitcast %"class.std::bitset"* %YMM0.i408 to i8*
  %12881 = bitcast %"class.std::bitset"* %YMM0.i408 to i8*
  %12882 = bitcast %union.vec128_t* %XMM2.i409 to i8*
  %12883 = load i64, i64* %PC.i407
  %12884 = add i64 %12883, 4
  store i64 %12884, i64* %PC.i407
  %12885 = bitcast i8* %12881 to double*
  %12886 = load double, double* %12885, align 1
  %12887 = getelementptr inbounds i8, i8* %12881, i64 8
  %12888 = bitcast i8* %12887 to i64*
  %12889 = load i64, i64* %12888, align 1
  %12890 = bitcast i8* %12882 to double*
  %12891 = load double, double* %12890, align 1
  %12892 = fmul double %12886, %12891
  %12893 = bitcast i8* %12880 to double*
  store double %12892, double* %12893, align 1
  %12894 = getelementptr inbounds i8, i8* %12880, i64 8
  %12895 = bitcast i8* %12894 to i64*
  store i64 %12889, i64* %12895, align 1
  store %struct.Memory* %loadMem_480c0c, %struct.Memory** %MEMORY
  %loadMem_480c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12897 = getelementptr inbounds %struct.GPR, %struct.GPR* %12896, i32 0, i32 33
  %12898 = getelementptr inbounds %struct.Reg, %struct.Reg* %12897, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %12898 to i64*
  %12899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12900 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12899, i64 0, i64 1
  %YMM1.i405 = bitcast %union.VectorReg* %12900 to %"class.std::bitset"*
  %12901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12902 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12901, i64 0, i64 0
  %XMM0.i406 = bitcast %union.VectorReg* %12902 to %union.vec128_t*
  %12903 = bitcast %"class.std::bitset"* %YMM1.i405 to i8*
  %12904 = bitcast %"class.std::bitset"* %YMM1.i405 to i8*
  %12905 = bitcast %union.vec128_t* %XMM0.i406 to i8*
  %12906 = load i64, i64* %PC.i404
  %12907 = add i64 %12906, 4
  store i64 %12907, i64* %PC.i404
  %12908 = bitcast i8* %12904 to double*
  %12909 = load double, double* %12908, align 1
  %12910 = getelementptr inbounds i8, i8* %12904, i64 8
  %12911 = bitcast i8* %12910 to i64*
  %12912 = load i64, i64* %12911, align 1
  %12913 = bitcast i8* %12905 to double*
  %12914 = load double, double* %12913, align 1
  %12915 = fadd double %12909, %12914
  %12916 = bitcast i8* %12903 to double*
  store double %12915, double* %12916, align 1
  %12917 = getelementptr inbounds i8, i8* %12903, i64 8
  %12918 = bitcast i8* %12917 to i64*
  store i64 %12912, i64* %12918, align 1
  store %struct.Memory* %loadMem_480c10, %struct.Memory** %MEMORY
  %loadMem_480c14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12920 = getelementptr inbounds %struct.GPR, %struct.GPR* %12919, i32 0, i32 33
  %12921 = getelementptr inbounds %struct.Reg, %struct.Reg* %12920, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %12921 to i64*
  %12922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12923 = getelementptr inbounds %struct.GPR, %struct.GPR* %12922, i32 0, i32 15
  %12924 = getelementptr inbounds %struct.Reg, %struct.Reg* %12923, i32 0, i32 0
  %RBP.i402 = bitcast %union.anon* %12924 to i64*
  %12925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12926 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12925, i64 0, i64 1
  %XMM1.i403 = bitcast %union.VectorReg* %12926 to %union.vec128_t*
  %12927 = load i64, i64* %RBP.i402
  %12928 = sub i64 %12927, 192
  %12929 = bitcast %union.vec128_t* %XMM1.i403 to i8*
  %12930 = load i64, i64* %PC.i401
  %12931 = add i64 %12930, 8
  store i64 %12931, i64* %PC.i401
  %12932 = bitcast i8* %12929 to double*
  %12933 = load double, double* %12932, align 1
  %12934 = inttoptr i64 %12928 to double*
  store double %12933, double* %12934
  store %struct.Memory* %loadMem_480c14, %struct.Memory** %MEMORY
  br label %block_.L_480c1c

block_.L_480c1c:                                  ; preds = %block_.L_480be2, %block_480bd0
  %loadMem_480c1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12936 = getelementptr inbounds %struct.GPR, %struct.GPR* %12935, i32 0, i32 33
  %12937 = getelementptr inbounds %struct.Reg, %struct.Reg* %12936, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %12937 to i64*
  %12938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12939 = getelementptr inbounds %struct.GPR, %struct.GPR* %12938, i32 0, i32 15
  %12940 = getelementptr inbounds %struct.Reg, %struct.Reg* %12939, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %12940 to i64*
  %12941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12942 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12941, i64 0, i64 0
  %YMM0.i400 = bitcast %union.VectorReg* %12942 to %"class.std::bitset"*
  %12943 = bitcast %"class.std::bitset"* %YMM0.i400 to i8*
  %12944 = load i64, i64* %RBP.i399
  %12945 = sub i64 %12944, 192
  %12946 = load i64, i64* %PC.i398
  %12947 = add i64 %12946, 8
  store i64 %12947, i64* %PC.i398
  %12948 = inttoptr i64 %12945 to double*
  %12949 = load double, double* %12948
  %12950 = bitcast i8* %12943 to double*
  store double %12949, double* %12950, align 1
  %12951 = getelementptr inbounds i8, i8* %12943, i64 8
  %12952 = bitcast i8* %12951 to double*
  store double 0.000000e+00, double* %12952, align 1
  store %struct.Memory* %loadMem_480c1c, %struct.Memory** %MEMORY
  %loadMem_480c24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12954 = getelementptr inbounds %struct.GPR, %struct.GPR* %12953, i32 0, i32 33
  %12955 = getelementptr inbounds %struct.Reg, %struct.Reg* %12954, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %12955 to i64*
  %12956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12957 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12956, i64 0, i64 1
  %YMM1.i397 = bitcast %union.VectorReg* %12957 to %"class.std::bitset"*
  %12958 = bitcast %"class.std::bitset"* %YMM1.i397 to i8*
  %12959 = load i64, i64* %PC.i396
  %12960 = add i64 %12959, ptrtoint (%G_0x62334__rip__type* @G_0x62334__rip_ to i64)
  %12961 = load i64, i64* %PC.i396
  %12962 = add i64 %12961, 8
  store i64 %12962, i64* %PC.i396
  %12963 = inttoptr i64 %12960 to double*
  %12964 = load double, double* %12963
  %12965 = bitcast i8* %12958 to double*
  store double %12964, double* %12965, align 1
  %12966 = getelementptr inbounds i8, i8* %12958, i64 8
  %12967 = bitcast i8* %12966 to double*
  store double 0.000000e+00, double* %12967, align 1
  store %struct.Memory* %loadMem_480c24, %struct.Memory** %MEMORY
  %loadMem_480c2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12969 = getelementptr inbounds %struct.GPR, %struct.GPR* %12968, i32 0, i32 33
  %12970 = getelementptr inbounds %struct.Reg, %struct.Reg* %12969, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %12970 to i64*
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12972 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12971, i64 0, i64 2
  %YMM2.i395 = bitcast %union.VectorReg* %12972 to %"class.std::bitset"*
  %12973 = bitcast %"class.std::bitset"* %YMM2.i395 to i8*
  %12974 = load i64, i64* %PC.i394
  %12975 = add i64 %12974, ptrtoint (%G_0x62404__rip__type* @G_0x62404__rip_ to i64)
  %12976 = load i64, i64* %PC.i394
  %12977 = add i64 %12976, 8
  store i64 %12977, i64* %PC.i394
  %12978 = inttoptr i64 %12975 to double*
  %12979 = load double, double* %12978
  %12980 = bitcast i8* %12973 to double*
  store double %12979, double* %12980, align 1
  %12981 = getelementptr inbounds i8, i8* %12973, i64 8
  %12982 = bitcast i8* %12981 to double*
  store double 0.000000e+00, double* %12982, align 1
  store %struct.Memory* %loadMem_480c2c, %struct.Memory** %MEMORY
  %loadMem_480c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12984 = getelementptr inbounds %struct.GPR, %struct.GPR* %12983, i32 0, i32 33
  %12985 = getelementptr inbounds %struct.Reg, %struct.Reg* %12984, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %12985 to i64*
  %12986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12987 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12986, i64 0, i64 0
  %YMM0.i392 = bitcast %union.VectorReg* %12987 to %"class.std::bitset"*
  %12988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12989 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12988, i64 0, i64 0
  %XMM0.i393 = bitcast %union.VectorReg* %12989 to %union.vec128_t*
  %12990 = bitcast %"class.std::bitset"* %YMM0.i392 to i8*
  %12991 = bitcast %union.vec128_t* %XMM0.i393 to i8*
  %12992 = load i64, i64* %PC.i391
  %12993 = add i64 %12992, 4
  store i64 %12993, i64* %PC.i391
  %12994 = bitcast i8* %12990 to <2 x i32>*
  %12995 = load <2 x i32>, <2 x i32>* %12994, align 1
  %12996 = getelementptr inbounds i8, i8* %12990, i64 8
  %12997 = bitcast i8* %12996 to <2 x i32>*
  %12998 = load <2 x i32>, <2 x i32>* %12997, align 1
  %12999 = bitcast i8* %12991 to double*
  %13000 = load double, double* %12999, align 1
  %13001 = fptrunc double %13000 to float
  %13002 = bitcast i8* %12990 to float*
  store float %13001, float* %13002, align 1
  %13003 = extractelement <2 x i32> %12995, i32 1
  %13004 = getelementptr inbounds i8, i8* %12990, i64 4
  %13005 = bitcast i8* %13004 to i32*
  store i32 %13003, i32* %13005, align 1
  %13006 = extractelement <2 x i32> %12998, i32 0
  %13007 = bitcast i8* %12996 to i32*
  store i32 %13006, i32* %13007, align 1
  %13008 = extractelement <2 x i32> %12998, i32 1
  %13009 = getelementptr inbounds i8, i8* %12990, i64 12
  %13010 = bitcast i8* %13009 to i32*
  store i32 %13008, i32* %13010, align 1
  store %struct.Memory* %loadMem_480c34, %struct.Memory** %MEMORY
  %loadMem_480c38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13012 = getelementptr inbounds %struct.GPR, %struct.GPR* %13011, i32 0, i32 33
  %13013 = getelementptr inbounds %struct.Reg, %struct.Reg* %13012, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %13013 to i64*
  %13014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13015 = getelementptr inbounds %struct.GPR, %struct.GPR* %13014, i32 0, i32 15
  %13016 = getelementptr inbounds %struct.Reg, %struct.Reg* %13015, i32 0, i32 0
  %RBP.i389 = bitcast %union.anon* %13016 to i64*
  %13017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13018 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13017, i64 0, i64 0
  %XMM0.i390 = bitcast %union.VectorReg* %13018 to %union.vec128_t*
  %13019 = load i64, i64* %RBP.i389
  %13020 = sub i64 %13019, 64
  %13021 = bitcast %union.vec128_t* %XMM0.i390 to i8*
  %13022 = load i64, i64* %PC.i388
  %13023 = add i64 %13022, 5
  store i64 %13023, i64* %PC.i388
  %13024 = bitcast i8* %13021 to <2 x float>*
  %13025 = load <2 x float>, <2 x float>* %13024, align 1
  %13026 = extractelement <2 x float> %13025, i32 0
  %13027 = inttoptr i64 %13020 to float*
  store float %13026, float* %13027
  store %struct.Memory* %loadMem_480c38, %struct.Memory** %MEMORY
  %loadMem_480c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13029 = getelementptr inbounds %struct.GPR, %struct.GPR* %13028, i32 0, i32 33
  %13030 = getelementptr inbounds %struct.Reg, %struct.Reg* %13029, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %13030 to i64*
  %13031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13032 = getelementptr inbounds %struct.GPR, %struct.GPR* %13031, i32 0, i32 15
  %13033 = getelementptr inbounds %struct.Reg, %struct.Reg* %13032, i32 0, i32 0
  %RBP.i386 = bitcast %union.anon* %13033 to i64*
  %13034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13035 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13034, i64 0, i64 0
  %YMM0.i387 = bitcast %union.VectorReg* %13035 to %"class.std::bitset"*
  %13036 = bitcast %"class.std::bitset"* %YMM0.i387 to i8*
  %13037 = load i64, i64* %RBP.i386
  %13038 = sub i64 %13037, 16
  %13039 = load i64, i64* %PC.i385
  %13040 = add i64 %13039, 5
  store i64 %13040, i64* %PC.i385
  %13041 = inttoptr i64 %13038 to float*
  %13042 = load float, float* %13041
  %13043 = bitcast i8* %13036 to float*
  store float %13042, float* %13043, align 1
  %13044 = getelementptr inbounds i8, i8* %13036, i64 4
  %13045 = bitcast i8* %13044 to float*
  store float 0.000000e+00, float* %13045, align 1
  %13046 = getelementptr inbounds i8, i8* %13036, i64 8
  %13047 = bitcast i8* %13046 to float*
  store float 0.000000e+00, float* %13047, align 1
  %13048 = getelementptr inbounds i8, i8* %13036, i64 12
  %13049 = bitcast i8* %13048 to float*
  store float 0.000000e+00, float* %13049, align 1
  store %struct.Memory* %loadMem_480c3d, %struct.Memory** %MEMORY
  %loadMem_480c42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13051 = getelementptr inbounds %struct.GPR, %struct.GPR* %13050, i32 0, i32 33
  %13052 = getelementptr inbounds %struct.Reg, %struct.Reg* %13051, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %13052 to i64*
  %13053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13054 = getelementptr inbounds %struct.GPR, %struct.GPR* %13053, i32 0, i32 15
  %13055 = getelementptr inbounds %struct.Reg, %struct.Reg* %13054, i32 0, i32 0
  %RBP.i383 = bitcast %union.anon* %13055 to i64*
  %13056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13057 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13056, i64 0, i64 0
  %YMM0.i384 = bitcast %union.VectorReg* %13057 to %"class.std::bitset"*
  %13058 = bitcast %"class.std::bitset"* %YMM0.i384 to i8*
  %13059 = bitcast %"class.std::bitset"* %YMM0.i384 to i8*
  %13060 = load i64, i64* %RBP.i383
  %13061 = sub i64 %13060, 24
  %13062 = load i64, i64* %PC.i382
  %13063 = add i64 %13062, 5
  store i64 %13063, i64* %PC.i382
  %13064 = bitcast i8* %13059 to <2 x float>*
  %13065 = load <2 x float>, <2 x float>* %13064, align 1
  %13066 = getelementptr inbounds i8, i8* %13059, i64 8
  %13067 = bitcast i8* %13066 to <2 x i32>*
  %13068 = load <2 x i32>, <2 x i32>* %13067, align 1
  %13069 = inttoptr i64 %13061 to float*
  %13070 = load float, float* %13069
  %13071 = extractelement <2 x float> %13065, i32 0
  %13072 = fsub float %13071, %13070
  %13073 = bitcast i8* %13058 to float*
  store float %13072, float* %13073, align 1
  %13074 = bitcast <2 x float> %13065 to <2 x i32>
  %13075 = extractelement <2 x i32> %13074, i32 1
  %13076 = getelementptr inbounds i8, i8* %13058, i64 4
  %13077 = bitcast i8* %13076 to i32*
  store i32 %13075, i32* %13077, align 1
  %13078 = extractelement <2 x i32> %13068, i32 0
  %13079 = getelementptr inbounds i8, i8* %13058, i64 8
  %13080 = bitcast i8* %13079 to i32*
  store i32 %13078, i32* %13080, align 1
  %13081 = extractelement <2 x i32> %13068, i32 1
  %13082 = getelementptr inbounds i8, i8* %13058, i64 12
  %13083 = bitcast i8* %13082 to i32*
  store i32 %13081, i32* %13083, align 1
  store %struct.Memory* %loadMem_480c42, %struct.Memory** %MEMORY
  %loadMem_480c47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13085 = getelementptr inbounds %struct.GPR, %struct.GPR* %13084, i32 0, i32 33
  %13086 = getelementptr inbounds %struct.Reg, %struct.Reg* %13085, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %13086 to i64*
  %13087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13088 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13087, i64 0, i64 0
  %YMM0.i380 = bitcast %union.VectorReg* %13088 to %"class.std::bitset"*
  %13089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13090 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13089, i64 0, i64 0
  %XMM0.i381 = bitcast %union.VectorReg* %13090 to %union.vec128_t*
  %13091 = bitcast %"class.std::bitset"* %YMM0.i380 to i8*
  %13092 = bitcast %union.vec128_t* %XMM0.i381 to i8*
  %13093 = load i64, i64* %PC.i379
  %13094 = add i64 %13093, 4
  store i64 %13094, i64* %PC.i379
  %13095 = bitcast i8* %13092 to <2 x float>*
  %13096 = load <2 x float>, <2 x float>* %13095, align 1
  %13097 = extractelement <2 x float> %13096, i32 0
  %13098 = fpext float %13097 to double
  %13099 = bitcast i8* %13091 to double*
  store double %13098, double* %13099, align 1
  store %struct.Memory* %loadMem_480c47, %struct.Memory** %MEMORY
  %loadMem_480c4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13101 = getelementptr inbounds %struct.GPR, %struct.GPR* %13100, i32 0, i32 33
  %13102 = getelementptr inbounds %struct.Reg, %struct.Reg* %13101, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %13102 to i64*
  %13103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13104 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13103, i64 0, i64 2
  %YMM2.i377 = bitcast %union.VectorReg* %13104 to %"class.std::bitset"*
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13106 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13105, i64 0, i64 0
  %XMM0.i378 = bitcast %union.VectorReg* %13106 to %union.vec128_t*
  %13107 = bitcast %"class.std::bitset"* %YMM2.i377 to i8*
  %13108 = bitcast %"class.std::bitset"* %YMM2.i377 to i8*
  %13109 = bitcast %union.vec128_t* %XMM0.i378 to i8*
  %13110 = load i64, i64* %PC.i376
  %13111 = add i64 %13110, 4
  store i64 %13111, i64* %PC.i376
  %13112 = bitcast i8* %13108 to double*
  %13113 = load double, double* %13112, align 1
  %13114 = getelementptr inbounds i8, i8* %13108, i64 8
  %13115 = bitcast i8* %13114 to i64*
  %13116 = load i64, i64* %13115, align 1
  %13117 = bitcast i8* %13109 to double*
  %13118 = load double, double* %13117, align 1
  %13119 = fmul double %13113, %13118
  %13120 = bitcast i8* %13107 to double*
  store double %13119, double* %13120, align 1
  %13121 = getelementptr inbounds i8, i8* %13107, i64 8
  %13122 = bitcast i8* %13121 to i64*
  store i64 %13116, i64* %13122, align 1
  store %struct.Memory* %loadMem_480c4b, %struct.Memory** %MEMORY
  %loadMem_480c4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13124 = getelementptr inbounds %struct.GPR, %struct.GPR* %13123, i32 0, i32 33
  %13125 = getelementptr inbounds %struct.Reg, %struct.Reg* %13124, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %13125 to i64*
  %13126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13127 = getelementptr inbounds %struct.GPR, %struct.GPR* %13126, i32 0, i32 15
  %13128 = getelementptr inbounds %struct.Reg, %struct.Reg* %13127, i32 0, i32 0
  %RBP.i374 = bitcast %union.anon* %13128 to i64*
  %13129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13130 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13129, i64 0, i64 0
  %YMM0.i375 = bitcast %union.VectorReg* %13130 to %"class.std::bitset"*
  %13131 = bitcast %"class.std::bitset"* %YMM0.i375 to i8*
  %13132 = load i64, i64* %RBP.i374
  %13133 = sub i64 %13132, 16
  %13134 = load i64, i64* %PC.i373
  %13135 = add i64 %13134, 5
  store i64 %13135, i64* %PC.i373
  %13136 = inttoptr i64 %13133 to float*
  %13137 = load float, float* %13136
  %13138 = fpext float %13137 to double
  %13139 = bitcast i8* %13131 to double*
  store double %13138, double* %13139, align 1
  store %struct.Memory* %loadMem_480c4f, %struct.Memory** %MEMORY
  %loadMem_480c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13141 = getelementptr inbounds %struct.GPR, %struct.GPR* %13140, i32 0, i32 33
  %13142 = getelementptr inbounds %struct.Reg, %struct.Reg* %13141, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %13142 to i64*
  %13143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13144 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13143, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %13144 to %"class.std::bitset"*
  %13145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13146 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13145, i64 0, i64 0
  %XMM0.i372 = bitcast %union.VectorReg* %13146 to %union.vec128_t*
  %13147 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %13148 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %13149 = bitcast %union.vec128_t* %XMM0.i372 to i8*
  %13150 = load i64, i64* %PC.i371
  %13151 = add i64 %13150, 4
  store i64 %13151, i64* %PC.i371
  %13152 = bitcast i8* %13148 to double*
  %13153 = load double, double* %13152, align 1
  %13154 = getelementptr inbounds i8, i8* %13148, i64 8
  %13155 = bitcast i8* %13154 to i64*
  %13156 = load i64, i64* %13155, align 1
  %13157 = bitcast i8* %13149 to double*
  %13158 = load double, double* %13157, align 1
  %13159 = fdiv double %13153, %13158
  %13160 = bitcast i8* %13147 to double*
  store double %13159, double* %13160, align 1
  %13161 = getelementptr inbounds i8, i8* %13147, i64 8
  %13162 = bitcast i8* %13161 to i64*
  store i64 %13156, i64* %13162, align 1
  store %struct.Memory* %loadMem_480c54, %struct.Memory** %MEMORY
  %loadMem_480c58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13164 = getelementptr inbounds %struct.GPR, %struct.GPR* %13163, i32 0, i32 33
  %13165 = getelementptr inbounds %struct.Reg, %struct.Reg* %13164, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %13165 to i64*
  %13166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13167 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13166, i64 0, i64 1
  %YMM1.i370 = bitcast %union.VectorReg* %13167 to %"class.std::bitset"*
  %13168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13169 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13168, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %13169 to %union.vec128_t*
  %13170 = bitcast %"class.std::bitset"* %YMM1.i370 to i8*
  %13171 = bitcast %"class.std::bitset"* %YMM1.i370 to i8*
  %13172 = bitcast %union.vec128_t* %XMM2.i to i8*
  %13173 = load i64, i64* %PC.i369
  %13174 = add i64 %13173, 4
  store i64 %13174, i64* %PC.i369
  %13175 = bitcast i8* %13171 to double*
  %13176 = load double, double* %13175, align 1
  %13177 = getelementptr inbounds i8, i8* %13171, i64 8
  %13178 = bitcast i8* %13177 to i64*
  %13179 = load i64, i64* %13178, align 1
  %13180 = bitcast i8* %13172 to double*
  %13181 = load double, double* %13180, align 1
  %13182 = fsub double %13176, %13181
  %13183 = bitcast i8* %13170 to double*
  store double %13182, double* %13183, align 1
  %13184 = getelementptr inbounds i8, i8* %13170, i64 8
  %13185 = bitcast i8* %13184 to i64*
  store i64 %13179, i64* %13185, align 1
  store %struct.Memory* %loadMem_480c58, %struct.Memory** %MEMORY
  %loadMem_480c5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13187 = getelementptr inbounds %struct.GPR, %struct.GPR* %13186, i32 0, i32 33
  %13188 = getelementptr inbounds %struct.Reg, %struct.Reg* %13187, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %13188 to i64*
  %13189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13190 = getelementptr inbounds %struct.GPR, %struct.GPR* %13189, i32 0, i32 15
  %13191 = getelementptr inbounds %struct.Reg, %struct.Reg* %13190, i32 0, i32 0
  %RBP.i367 = bitcast %union.anon* %13191 to i64*
  %13192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13193 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13192, i64 0, i64 0
  %YMM0.i368 = bitcast %union.VectorReg* %13193 to %"class.std::bitset"*
  %13194 = bitcast %"class.std::bitset"* %YMM0.i368 to i8*
  %13195 = load i64, i64* %RBP.i367
  %13196 = sub i64 %13195, 64
  %13197 = load i64, i64* %PC.i366
  %13198 = add i64 %13197, 5
  store i64 %13198, i64* %PC.i366
  %13199 = inttoptr i64 %13196 to float*
  %13200 = load float, float* %13199
  %13201 = fpext float %13200 to double
  %13202 = bitcast i8* %13194 to double*
  store double %13201, double* %13202, align 1
  store %struct.Memory* %loadMem_480c5c, %struct.Memory** %MEMORY
  %loadMem_480c61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13204 = getelementptr inbounds %struct.GPR, %struct.GPR* %13203, i32 0, i32 33
  %13205 = getelementptr inbounds %struct.Reg, %struct.Reg* %13204, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %13205 to i64*
  %13206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13207 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13206, i64 0, i64 0
  %YMM0.i364 = bitcast %union.VectorReg* %13207 to %"class.std::bitset"*
  %13208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13209 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13208, i64 0, i64 1
  %XMM1.i365 = bitcast %union.VectorReg* %13209 to %union.vec128_t*
  %13210 = bitcast %"class.std::bitset"* %YMM0.i364 to i8*
  %13211 = bitcast %"class.std::bitset"* %YMM0.i364 to i8*
  %13212 = bitcast %union.vec128_t* %XMM1.i365 to i8*
  %13213 = load i64, i64* %PC.i363
  %13214 = add i64 %13213, 4
  store i64 %13214, i64* %PC.i363
  %13215 = bitcast i8* %13211 to double*
  %13216 = load double, double* %13215, align 1
  %13217 = getelementptr inbounds i8, i8* %13211, i64 8
  %13218 = bitcast i8* %13217 to i64*
  %13219 = load i64, i64* %13218, align 1
  %13220 = bitcast i8* %13212 to double*
  %13221 = load double, double* %13220, align 1
  %13222 = fmul double %13216, %13221
  %13223 = bitcast i8* %13210 to double*
  store double %13222, double* %13223, align 1
  %13224 = getelementptr inbounds i8, i8* %13210, i64 8
  %13225 = bitcast i8* %13224 to i64*
  store i64 %13219, i64* %13225, align 1
  store %struct.Memory* %loadMem_480c61, %struct.Memory** %MEMORY
  %loadMem_480c65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13227 = getelementptr inbounds %struct.GPR, %struct.GPR* %13226, i32 0, i32 33
  %13228 = getelementptr inbounds %struct.Reg, %struct.Reg* %13227, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %13228 to i64*
  %13229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13230 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13229, i64 0, i64 0
  %YMM0.i361 = bitcast %union.VectorReg* %13230 to %"class.std::bitset"*
  %13231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13232 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13231, i64 0, i64 0
  %XMM0.i362 = bitcast %union.VectorReg* %13232 to %union.vec128_t*
  %13233 = bitcast %"class.std::bitset"* %YMM0.i361 to i8*
  %13234 = bitcast %union.vec128_t* %XMM0.i362 to i8*
  %13235 = load i64, i64* %PC.i360
  %13236 = add i64 %13235, 4
  store i64 %13236, i64* %PC.i360
  %13237 = bitcast i8* %13233 to <2 x i32>*
  %13238 = load <2 x i32>, <2 x i32>* %13237, align 1
  %13239 = getelementptr inbounds i8, i8* %13233, i64 8
  %13240 = bitcast i8* %13239 to <2 x i32>*
  %13241 = load <2 x i32>, <2 x i32>* %13240, align 1
  %13242 = bitcast i8* %13234 to double*
  %13243 = load double, double* %13242, align 1
  %13244 = fptrunc double %13243 to float
  %13245 = bitcast i8* %13233 to float*
  store float %13244, float* %13245, align 1
  %13246 = extractelement <2 x i32> %13238, i32 1
  %13247 = getelementptr inbounds i8, i8* %13233, i64 4
  %13248 = bitcast i8* %13247 to i32*
  store i32 %13246, i32* %13248, align 1
  %13249 = extractelement <2 x i32> %13241, i32 0
  %13250 = bitcast i8* %13239 to i32*
  store i32 %13249, i32* %13250, align 1
  %13251 = extractelement <2 x i32> %13241, i32 1
  %13252 = getelementptr inbounds i8, i8* %13233, i64 12
  %13253 = bitcast i8* %13252 to i32*
  store i32 %13251, i32* %13253, align 1
  store %struct.Memory* %loadMem_480c65, %struct.Memory** %MEMORY
  %loadMem_480c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13255 = getelementptr inbounds %struct.GPR, %struct.GPR* %13254, i32 0, i32 33
  %13256 = getelementptr inbounds %struct.Reg, %struct.Reg* %13255, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %13256 to i64*
  %13257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13258 = getelementptr inbounds %struct.GPR, %struct.GPR* %13257, i32 0, i32 15
  %13259 = getelementptr inbounds %struct.Reg, %struct.Reg* %13258, i32 0, i32 0
  %RBP.i358 = bitcast %union.anon* %13259 to i64*
  %13260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13260, i64 0, i64 0
  %XMM0.i359 = bitcast %union.VectorReg* %13261 to %union.vec128_t*
  %13262 = load i64, i64* %RBP.i358
  %13263 = sub i64 %13262, 64
  %13264 = bitcast %union.vec128_t* %XMM0.i359 to i8*
  %13265 = load i64, i64* %PC.i357
  %13266 = add i64 %13265, 5
  store i64 %13266, i64* %PC.i357
  %13267 = bitcast i8* %13264 to <2 x float>*
  %13268 = load <2 x float>, <2 x float>* %13267, align 1
  %13269 = extractelement <2 x float> %13268, i32 0
  %13270 = inttoptr i64 %13263 to float*
  store float %13269, float* %13270
  store %struct.Memory* %loadMem_480c69, %struct.Memory** %MEMORY
  %loadMem_480c6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13272 = getelementptr inbounds %struct.GPR, %struct.GPR* %13271, i32 0, i32 33
  %13273 = getelementptr inbounds %struct.Reg, %struct.Reg* %13272, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %13273 to i64*
  %13274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13275 = getelementptr inbounds %struct.GPR, %struct.GPR* %13274, i32 0, i32 15
  %13276 = getelementptr inbounds %struct.Reg, %struct.Reg* %13275, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %13276 to i64*
  %13277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13278 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13277, i64 0, i64 0
  %YMM0.i356 = bitcast %union.VectorReg* %13278 to %"class.std::bitset"*
  %13279 = bitcast %"class.std::bitset"* %YMM0.i356 to i8*
  %13280 = load i64, i64* %RBP.i355
  %13281 = sub i64 %13280, 64
  %13282 = load i64, i64* %PC.i354
  %13283 = add i64 %13282, 5
  store i64 %13283, i64* %PC.i354
  %13284 = inttoptr i64 %13281 to float*
  %13285 = load float, float* %13284
  %13286 = bitcast i8* %13279 to float*
  store float %13285, float* %13286, align 1
  %13287 = getelementptr inbounds i8, i8* %13279, i64 4
  %13288 = bitcast i8* %13287 to float*
  store float 0.000000e+00, float* %13288, align 1
  %13289 = getelementptr inbounds i8, i8* %13279, i64 8
  %13290 = bitcast i8* %13289 to float*
  store float 0.000000e+00, float* %13290, align 1
  %13291 = getelementptr inbounds i8, i8* %13279, i64 12
  %13292 = bitcast i8* %13291 to float*
  store float 0.000000e+00, float* %13292, align 1
  store %struct.Memory* %loadMem_480c6e, %struct.Memory** %MEMORY
  %loadMem_480c73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13294 = getelementptr inbounds %struct.GPR, %struct.GPR* %13293, i32 0, i32 33
  %13295 = getelementptr inbounds %struct.Reg, %struct.Reg* %13294, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %13295 to i64*
  %13296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13297 = getelementptr inbounds %struct.GPR, %struct.GPR* %13296, i32 0, i32 15
  %13298 = getelementptr inbounds %struct.Reg, %struct.Reg* %13297, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %13298 to i64*
  %13299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13300 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13299, i64 0, i64 0
  %XMM0.i352 = bitcast %union.VectorReg* %13300 to %union.vec128_t*
  %13301 = bitcast %union.vec128_t* %XMM0.i352 to i8*
  %13302 = load i64, i64* %RBP.i351
  %13303 = sub i64 %13302, 24
  %13304 = load i64, i64* %PC.i350
  %13305 = add i64 %13304, 4
  store i64 %13305, i64* %PC.i350
  %13306 = bitcast i8* %13301 to <2 x float>*
  %13307 = load <2 x float>, <2 x float>* %13306, align 1
  %13308 = extractelement <2 x float> %13307, i32 0
  %13309 = inttoptr i64 %13303 to float*
  %13310 = load float, float* %13309
  %13311 = fcmp uno float %13308, %13310
  br i1 %13311, label %13312, label %13324

; <label>:13312:                                  ; preds = %block_.L_480c1c
  %13313 = fadd float %13308, %13310
  %13314 = bitcast float %13313 to i32
  %13315 = and i32 %13314, 2143289344
  %13316 = icmp eq i32 %13315, 2139095040
  %13317 = and i32 %13314, 4194303
  %13318 = icmp ne i32 %13317, 0
  %13319 = and i1 %13316, %13318
  br i1 %13319, label %13320, label %13330

; <label>:13320:                                  ; preds = %13312
  %13321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13322 = load i64, i64* %13321, align 8
  %13323 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %13322, %struct.Memory* %loadMem_480c73)
  br label %routine_ucomiss_MINUS0x18__rbp____xmm0.exit

; <label>:13324:                                  ; preds = %block_.L_480c1c
  %13325 = fcmp ogt float %13308, %13310
  br i1 %13325, label %13330, label %13326

; <label>:13326:                                  ; preds = %13324
  %13327 = fcmp olt float %13308, %13310
  br i1 %13327, label %13330, label %13328

; <label>:13328:                                  ; preds = %13326
  %13329 = fcmp oeq float %13308, %13310
  br i1 %13329, label %13330, label %13337

; <label>:13330:                                  ; preds = %13328, %13326, %13324, %13312
  %13331 = phi i8 [ 0, %13324 ], [ 0, %13326 ], [ 1, %13328 ], [ 1, %13312 ]
  %13332 = phi i8 [ 0, %13324 ], [ 0, %13326 ], [ 0, %13328 ], [ 1, %13312 ]
  %13333 = phi i8 [ 0, %13324 ], [ 1, %13326 ], [ 0, %13328 ], [ 1, %13312 ]
  %13334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13331, i8* %13334, align 1
  %13335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13332, i8* %13335, align 1
  %13336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13333, i8* %13336, align 1
  br label %13337

; <label>:13337:                                  ; preds = %13330, %13328
  %13338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13338, align 1
  %13339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13339, align 1
  %13340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13340, align 1
  br label %routine_ucomiss_MINUS0x18__rbp____xmm0.exit

routine_ucomiss_MINUS0x18__rbp____xmm0.exit:      ; preds = %13320, %13337
  %13341 = phi %struct.Memory* [ %13323, %13320 ], [ %loadMem_480c73, %13337 ]
  store %struct.Memory* %13341, %struct.Memory** %MEMORY
  %loadMem_480c77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13343 = getelementptr inbounds %struct.GPR, %struct.GPR* %13342, i32 0, i32 33
  %13344 = getelementptr inbounds %struct.Reg, %struct.Reg* %13343, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %13344 to i64*
  %13345 = load i64, i64* %PC.i349
  %13346 = add i64 %13345, 75
  %13347 = load i64, i64* %PC.i349
  %13348 = add i64 %13347, 6
  %13349 = load i64, i64* %PC.i349
  %13350 = add i64 %13349, 6
  store i64 %13350, i64* %PC.i349
  %13351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13352 = load i8, i8* %13351, align 1
  %13353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13354 = load i8, i8* %13353, align 1
  %13355 = or i8 %13354, %13352
  %13356 = icmp ne i8 %13355, 0
  %13357 = zext i1 %13356 to i8
  store i8 %13357, i8* %BRANCH_TAKEN, align 1
  %13358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13359 = select i1 %13356, i64 %13346, i64 %13348
  store i64 %13359, i64* %13358, align 8
  store %struct.Memory* %loadMem_480c77, %struct.Memory** %MEMORY
  %loadBr_480c77 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480c77 = icmp eq i8 %loadBr_480c77, 1
  br i1 %cmpBr_480c77, label %block_.L_480cc2, label %block_480c7d

block_480c7d:                                     ; preds = %routine_ucomiss_MINUS0x18__rbp____xmm0.exit
  %loadMem_480c7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13361 = getelementptr inbounds %struct.GPR, %struct.GPR* %13360, i32 0, i32 33
  %13362 = getelementptr inbounds %struct.Reg, %struct.Reg* %13361, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %13362 to i64*
  %13363 = load i64, i64* %PC.i348
  %13364 = add i64 %13363, 8
  store i64 %13364, i64* %PC.i348
  %13365 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %13366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13366, align 1
  %13367 = and i32 %13365, 255
  %13368 = call i32 @llvm.ctpop.i32(i32 %13367)
  %13369 = trunc i32 %13368 to i8
  %13370 = and i8 %13369, 1
  %13371 = xor i8 %13370, 1
  %13372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13371, i8* %13372, align 1
  %13373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13373, align 1
  %13374 = icmp eq i32 %13365, 0
  %13375 = zext i1 %13374 to i8
  %13376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13375, i8* %13376, align 1
  %13377 = lshr i32 %13365, 31
  %13378 = trunc i32 %13377 to i8
  %13379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13378, i8* %13379, align 1
  %13380 = lshr i32 %13365, 31
  %13381 = xor i32 %13377, %13380
  %13382 = add i32 %13381, %13380
  %13383 = icmp eq i32 %13382, 2
  %13384 = zext i1 %13383 to i8
  %13385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13384, i8* %13385, align 1
  store %struct.Memory* %loadMem_480c7d, %struct.Memory** %MEMORY
  %loadMem_480c85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13387 = getelementptr inbounds %struct.GPR, %struct.GPR* %13386, i32 0, i32 33
  %13388 = getelementptr inbounds %struct.Reg, %struct.Reg* %13387, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %13388 to i64*
  %13389 = load i64, i64* %PC.i347
  %13390 = add i64 %13389, 11
  %13391 = load i64, i64* %PC.i347
  %13392 = add i64 %13391, 6
  %13393 = load i64, i64* %PC.i347
  %13394 = add i64 %13393, 6
  store i64 %13394, i64* %PC.i347
  %13395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13396 = load i8, i8* %13395, align 1
  %13397 = icmp eq i8 %13396, 0
  %13398 = zext i1 %13397 to i8
  store i8 %13398, i8* %BRANCH_TAKEN, align 1
  %13399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13400 = select i1 %13397, i64 %13390, i64 %13392
  store i64 %13400, i64* %13399, align 8
  store %struct.Memory* %loadMem_480c85, %struct.Memory** %MEMORY
  %loadBr_480c85 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480c85 = icmp eq i8 %loadBr_480c85, 1
  br i1 %cmpBr_480c85, label %block_.L_480c90, label %block_480c8b

block_480c8b:                                     ; preds = %block_480c7d
  %loadMem_480c8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13402 = getelementptr inbounds %struct.GPR, %struct.GPR* %13401, i32 0, i32 33
  %13403 = getelementptr inbounds %struct.Reg, %struct.Reg* %13402, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %13403 to i64*
  %13404 = load i64, i64* %PC.i346
  %13405 = add i64 %13404, 45
  %13406 = load i64, i64* %PC.i346
  %13407 = add i64 %13406, 5
  store i64 %13407, i64* %PC.i346
  %13408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13405, i64* %13408, align 8
  store %struct.Memory* %loadMem_480c8b, %struct.Memory** %MEMORY
  br label %block_.L_480cb8

block_.L_480c90:                                  ; preds = %block_480c7d
  %loadMem_480c90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13410 = getelementptr inbounds %struct.GPR, %struct.GPR* %13409, i32 0, i32 33
  %13411 = getelementptr inbounds %struct.Reg, %struct.Reg* %13410, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %13411 to i64*
  %13412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13413 = getelementptr inbounds %struct.GPR, %struct.GPR* %13412, i32 0, i32 11
  %13414 = getelementptr inbounds %struct.Reg, %struct.Reg* %13413, i32 0, i32 0
  %RDI.i345 = bitcast %union.anon* %13414 to i64*
  %13415 = load i64, i64* %PC.i344
  %13416 = add i64 %13415, 10
  store i64 %13416, i64* %PC.i344
  store i64 ptrtoint (%G__0x58217d_type* @G__0x58217d to i64), i64* %RDI.i345, align 8
  store %struct.Memory* %loadMem_480c90, %struct.Memory** %MEMORY
  %loadMem_480c9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13418 = getelementptr inbounds %struct.GPR, %struct.GPR* %13417, i32 0, i32 33
  %13419 = getelementptr inbounds %struct.Reg, %struct.Reg* %13418, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %13419 to i64*
  %13420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13421 = getelementptr inbounds %struct.GPR, %struct.GPR* %13420, i32 0, i32 9
  %13422 = getelementptr inbounds %struct.Reg, %struct.Reg* %13421, i32 0, i32 0
  %RSI.i342 = bitcast %union.anon* %13422 to i64*
  %13423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13424 = getelementptr inbounds %struct.GPR, %struct.GPR* %13423, i32 0, i32 15
  %13425 = getelementptr inbounds %struct.Reg, %struct.Reg* %13424, i32 0, i32 0
  %RBP.i343 = bitcast %union.anon* %13425 to i64*
  %13426 = load i64, i64* %RBP.i343
  %13427 = sub i64 %13426, 8
  %13428 = load i64, i64* %PC.i341
  %13429 = add i64 %13428, 3
  store i64 %13429, i64* %PC.i341
  %13430 = inttoptr i64 %13427 to i32*
  %13431 = load i32, i32* %13430
  %13432 = zext i32 %13431 to i64
  store i64 %13432, i64* %RSI.i342, align 8
  store %struct.Memory* %loadMem_480c9a, %struct.Memory** %MEMORY
  %loadMem_480c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13434 = getelementptr inbounds %struct.GPR, %struct.GPR* %13433, i32 0, i32 33
  %13435 = getelementptr inbounds %struct.Reg, %struct.Reg* %13434, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %13435 to i64*
  %13436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13437 = getelementptr inbounds %struct.GPR, %struct.GPR* %13436, i32 0, i32 15
  %13438 = getelementptr inbounds %struct.Reg, %struct.Reg* %13437, i32 0, i32 0
  %RBP.i339 = bitcast %union.anon* %13438 to i64*
  %13439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13440 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13439, i64 0, i64 0
  %YMM0.i340 = bitcast %union.VectorReg* %13440 to %"class.std::bitset"*
  %13441 = bitcast %"class.std::bitset"* %YMM0.i340 to i8*
  %13442 = load i64, i64* %RBP.i339
  %13443 = sub i64 %13442, 64
  %13444 = load i64, i64* %PC.i338
  %13445 = add i64 %13444, 5
  store i64 %13445, i64* %PC.i338
  %13446 = inttoptr i64 %13443 to float*
  %13447 = load float, float* %13446
  %13448 = bitcast i8* %13441 to float*
  store float %13447, float* %13448, align 1
  %13449 = getelementptr inbounds i8, i8* %13441, i64 4
  %13450 = bitcast i8* %13449 to float*
  store float 0.000000e+00, float* %13450, align 1
  %13451 = getelementptr inbounds i8, i8* %13441, i64 8
  %13452 = bitcast i8* %13451 to float*
  store float 0.000000e+00, float* %13452, align 1
  %13453 = getelementptr inbounds i8, i8* %13441, i64 12
  %13454 = bitcast i8* %13453 to float*
  store float 0.000000e+00, float* %13454, align 1
  store %struct.Memory* %loadMem_480c9d, %struct.Memory** %MEMORY
  %loadMem_480ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13456 = getelementptr inbounds %struct.GPR, %struct.GPR* %13455, i32 0, i32 33
  %13457 = getelementptr inbounds %struct.Reg, %struct.Reg* %13456, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %13457 to i64*
  %13458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13459 = getelementptr inbounds %struct.GPR, %struct.GPR* %13458, i32 0, i32 15
  %13460 = getelementptr inbounds %struct.Reg, %struct.Reg* %13459, i32 0, i32 0
  %RBP.i336 = bitcast %union.anon* %13460 to i64*
  %13461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13462 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13461, i64 0, i64 0
  %YMM0.i337 = bitcast %union.VectorReg* %13462 to %"class.std::bitset"*
  %13463 = bitcast %"class.std::bitset"* %YMM0.i337 to i8*
  %13464 = bitcast %"class.std::bitset"* %YMM0.i337 to i8*
  %13465 = load i64, i64* %RBP.i336
  %13466 = sub i64 %13465, 24
  %13467 = load i64, i64* %PC.i335
  %13468 = add i64 %13467, 5
  store i64 %13468, i64* %PC.i335
  %13469 = bitcast i8* %13464 to <2 x float>*
  %13470 = load <2 x float>, <2 x float>* %13469, align 1
  %13471 = getelementptr inbounds i8, i8* %13464, i64 8
  %13472 = bitcast i8* %13471 to <2 x i32>*
  %13473 = load <2 x i32>, <2 x i32>* %13472, align 1
  %13474 = inttoptr i64 %13466 to float*
  %13475 = load float, float* %13474
  %13476 = extractelement <2 x float> %13470, i32 0
  %13477 = fsub float %13476, %13475
  %13478 = bitcast i8* %13463 to float*
  store float %13477, float* %13478, align 1
  %13479 = bitcast <2 x float> %13470 to <2 x i32>
  %13480 = extractelement <2 x i32> %13479, i32 1
  %13481 = getelementptr inbounds i8, i8* %13463, i64 4
  %13482 = bitcast i8* %13481 to i32*
  store i32 %13480, i32* %13482, align 1
  %13483 = extractelement <2 x i32> %13473, i32 0
  %13484 = getelementptr inbounds i8, i8* %13463, i64 8
  %13485 = bitcast i8* %13484 to i32*
  store i32 %13483, i32* %13485, align 1
  %13486 = extractelement <2 x i32> %13473, i32 1
  %13487 = getelementptr inbounds i8, i8* %13463, i64 12
  %13488 = bitcast i8* %13487 to i32*
  store i32 %13486, i32* %13488, align 1
  store %struct.Memory* %loadMem_480ca2, %struct.Memory** %MEMORY
  %loadMem_480ca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13490 = getelementptr inbounds %struct.GPR, %struct.GPR* %13489, i32 0, i32 33
  %13491 = getelementptr inbounds %struct.Reg, %struct.Reg* %13490, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %13491 to i64*
  %13492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13493 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13492, i64 0, i64 0
  %YMM0.i333 = bitcast %union.VectorReg* %13493 to %"class.std::bitset"*
  %13494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13495 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13494, i64 0, i64 0
  %XMM0.i334 = bitcast %union.VectorReg* %13495 to %union.vec128_t*
  %13496 = bitcast %"class.std::bitset"* %YMM0.i333 to i8*
  %13497 = bitcast %union.vec128_t* %XMM0.i334 to i8*
  %13498 = load i64, i64* %PC.i332
  %13499 = add i64 %13498, 4
  store i64 %13499, i64* %PC.i332
  %13500 = bitcast i8* %13497 to <2 x float>*
  %13501 = load <2 x float>, <2 x float>* %13500, align 1
  %13502 = extractelement <2 x float> %13501, i32 0
  %13503 = fpext float %13502 to double
  %13504 = bitcast i8* %13496 to double*
  store double %13503, double* %13504, align 1
  store %struct.Memory* %loadMem_480ca7, %struct.Memory** %MEMORY
  %loadMem_480cab = load %struct.Memory*, %struct.Memory** %MEMORY
  %13505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13506 = getelementptr inbounds %struct.GPR, %struct.GPR* %13505, i32 0, i32 33
  %13507 = getelementptr inbounds %struct.Reg, %struct.Reg* %13506, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %13507 to i64*
  %13508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13509 = getelementptr inbounds %struct.GPR, %struct.GPR* %13508, i32 0, i32 1
  %13510 = getelementptr inbounds %struct.Reg, %struct.Reg* %13509, i32 0, i32 0
  %13511 = bitcast %union.anon* %13510 to %struct.anon.2*
  %AL.i331 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13511, i32 0, i32 0
  %13512 = load i64, i64* %PC.i330
  %13513 = add i64 %13512, 2
  store i64 %13513, i64* %PC.i330
  store i8 1, i8* %AL.i331, align 1
  store %struct.Memory* %loadMem_480cab, %struct.Memory** %MEMORY
  %loadMem1_480cad = load %struct.Memory*, %struct.Memory** %MEMORY
  %13514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13515 = getelementptr inbounds %struct.GPR, %struct.GPR* %13514, i32 0, i32 33
  %13516 = getelementptr inbounds %struct.Reg, %struct.Reg* %13515, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %13516 to i64*
  %13517 = load i64, i64* %PC.i329
  %13518 = add i64 %13517, -192253
  %13519 = load i64, i64* %PC.i329
  %13520 = add i64 %13519, 5
  %13521 = load i64, i64* %PC.i329
  %13522 = add i64 %13521, 5
  store i64 %13522, i64* %PC.i329
  %13523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13524 = load i64, i64* %13523, align 8
  %13525 = add i64 %13524, -8
  %13526 = inttoptr i64 %13525 to i64*
  store i64 %13520, i64* %13526
  store i64 %13525, i64* %13523, align 8
  %13527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13518, i64* %13527, align 8
  store %struct.Memory* %loadMem1_480cad, %struct.Memory** %MEMORY
  %loadMem2_480cad = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480cad = load i64, i64* %3
  %call2_480cad = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_480cad, %struct.Memory* %loadMem2_480cad)
  store %struct.Memory* %call2_480cad, %struct.Memory** %MEMORY
  %loadMem_480cb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13529 = getelementptr inbounds %struct.GPR, %struct.GPR* %13528, i32 0, i32 33
  %13530 = getelementptr inbounds %struct.Reg, %struct.Reg* %13529, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %13530 to i64*
  %13531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13532 = getelementptr inbounds %struct.GPR, %struct.GPR* %13531, i32 0, i32 1
  %13533 = getelementptr inbounds %struct.Reg, %struct.Reg* %13532, i32 0, i32 0
  %EAX.i327 = bitcast %union.anon* %13533 to i32*
  %13534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13535 = getelementptr inbounds %struct.GPR, %struct.GPR* %13534, i32 0, i32 15
  %13536 = getelementptr inbounds %struct.Reg, %struct.Reg* %13535, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %13536 to i64*
  %13537 = load i64, i64* %RBP.i328
  %13538 = sub i64 %13537, 196
  %13539 = load i32, i32* %EAX.i327
  %13540 = zext i32 %13539 to i64
  %13541 = load i64, i64* %PC.i326
  %13542 = add i64 %13541, 6
  store i64 %13542, i64* %PC.i326
  %13543 = inttoptr i64 %13538 to i32*
  store i32 %13539, i32* %13543
  store %struct.Memory* %loadMem_480cb2, %struct.Memory** %MEMORY
  br label %block_.L_480cb8

block_.L_480cb8:                                  ; preds = %block_.L_480c90, %block_480c8b
  %loadMem_480cb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13545 = getelementptr inbounds %struct.GPR, %struct.GPR* %13544, i32 0, i32 33
  %13546 = getelementptr inbounds %struct.Reg, %struct.Reg* %13545, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %13546 to i64*
  %13547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13548 = getelementptr inbounds %struct.GPR, %struct.GPR* %13547, i32 0, i32 15
  %13549 = getelementptr inbounds %struct.Reg, %struct.Reg* %13548, i32 0, i32 0
  %RBP.i324 = bitcast %union.anon* %13549 to i64*
  %13550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13551 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13550, i64 0, i64 0
  %YMM0.i325 = bitcast %union.VectorReg* %13551 to %"class.std::bitset"*
  %13552 = bitcast %"class.std::bitset"* %YMM0.i325 to i8*
  %13553 = load i64, i64* %RBP.i324
  %13554 = sub i64 %13553, 64
  %13555 = load i64, i64* %PC.i323
  %13556 = add i64 %13555, 5
  store i64 %13556, i64* %PC.i323
  %13557 = inttoptr i64 %13554 to float*
  %13558 = load float, float* %13557
  %13559 = bitcast i8* %13552 to float*
  store float %13558, float* %13559, align 1
  %13560 = getelementptr inbounds i8, i8* %13552, i64 4
  %13561 = bitcast i8* %13560 to float*
  store float 0.000000e+00, float* %13561, align 1
  %13562 = getelementptr inbounds i8, i8* %13552, i64 8
  %13563 = bitcast i8* %13562 to float*
  store float 0.000000e+00, float* %13563, align 1
  %13564 = getelementptr inbounds i8, i8* %13552, i64 12
  %13565 = bitcast i8* %13564 to float*
  store float 0.000000e+00, float* %13565, align 1
  store %struct.Memory* %loadMem_480cb8, %struct.Memory** %MEMORY
  %loadMem_480cbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13567 = getelementptr inbounds %struct.GPR, %struct.GPR* %13566, i32 0, i32 33
  %13568 = getelementptr inbounds %struct.Reg, %struct.Reg* %13567, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %13568 to i64*
  %13569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13570 = getelementptr inbounds %struct.GPR, %struct.GPR* %13569, i32 0, i32 15
  %13571 = getelementptr inbounds %struct.Reg, %struct.Reg* %13570, i32 0, i32 0
  %RBP.i321 = bitcast %union.anon* %13571 to i64*
  %13572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13573 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13572, i64 0, i64 0
  %XMM0.i322 = bitcast %union.VectorReg* %13573 to %union.vec128_t*
  %13574 = load i64, i64* %RBP.i321
  %13575 = sub i64 %13574, 24
  %13576 = bitcast %union.vec128_t* %XMM0.i322 to i8*
  %13577 = load i64, i64* %PC.i320
  %13578 = add i64 %13577, 5
  store i64 %13578, i64* %PC.i320
  %13579 = bitcast i8* %13576 to <2 x float>*
  %13580 = load <2 x float>, <2 x float>* %13579, align 1
  %13581 = extractelement <2 x float> %13580, i32 0
  %13582 = inttoptr i64 %13575 to float*
  store float %13581, float* %13582
  store %struct.Memory* %loadMem_480cbd, %struct.Memory** %MEMORY
  br label %block_.L_480cc2

block_.L_480cc2:                                  ; preds = %block_.L_480cb8, %routine_ucomiss_MINUS0x18__rbp____xmm0.exit
  %loadMem_480cc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13584 = getelementptr inbounds %struct.GPR, %struct.GPR* %13583, i32 0, i32 33
  %13585 = getelementptr inbounds %struct.Reg, %struct.Reg* %13584, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %13585 to i64*
  %13586 = load i64, i64* %PC.i319
  %13587 = add i64 %13586, 5
  %13588 = load i64, i64* %PC.i319
  %13589 = add i64 %13588, 5
  store i64 %13589, i64* %PC.i319
  %13590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13587, i64* %13590, align 8
  store %struct.Memory* %loadMem_480cc2, %struct.Memory** %MEMORY
  br label %block_.L_480cc7

block_.L_480cc7:                                  ; preds = %block_.L_480cc2, %block_480b7b, %block_480b67, %routine_ucomisd__xmm0___xmm1.exit, %block_480b28, %routine_ucomiss__xmm0___xmm1.exit520, %block_480af0, %routine_ucomisd__xmm0___xmm1.exit546
  %loadMem_480cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13592 = getelementptr inbounds %struct.GPR, %struct.GPR* %13591, i32 0, i32 33
  %13593 = getelementptr inbounds %struct.Reg, %struct.Reg* %13592, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %13593 to i64*
  %13594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13595 = getelementptr inbounds %struct.GPR, %struct.GPR* %13594, i32 0, i32 1
  %13596 = getelementptr inbounds %struct.Reg, %struct.Reg* %13595, i32 0, i32 0
  %RAX.i318 = bitcast %union.anon* %13596 to i64*
  %13597 = load i64, i64* %PC.i317
  %13598 = add i64 %13597, 10
  store i64 %13598, i64* %PC.i317
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i318, align 8
  store %struct.Memory* %loadMem_480cc7, %struct.Memory** %MEMORY
  %loadMem_480cd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13600 = getelementptr inbounds %struct.GPR, %struct.GPR* %13599, i32 0, i32 33
  %13601 = getelementptr inbounds %struct.Reg, %struct.Reg* %13600, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %13601 to i64*
  %13602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13603 = getelementptr inbounds %struct.GPR, %struct.GPR* %13602, i32 0, i32 5
  %13604 = getelementptr inbounds %struct.Reg, %struct.Reg* %13603, i32 0, i32 0
  %RCX.i315 = bitcast %union.anon* %13604 to i64*
  %13605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13606 = getelementptr inbounds %struct.GPR, %struct.GPR* %13605, i32 0, i32 15
  %13607 = getelementptr inbounds %struct.Reg, %struct.Reg* %13606, i32 0, i32 0
  %RBP.i316 = bitcast %union.anon* %13607 to i64*
  %13608 = load i64, i64* %RBP.i316
  %13609 = sub i64 %13608, 8
  %13610 = load i64, i64* %PC.i314
  %13611 = add i64 %13610, 4
  store i64 %13611, i64* %PC.i314
  %13612 = inttoptr i64 %13609 to i32*
  %13613 = load i32, i32* %13612
  %13614 = sext i32 %13613 to i64
  store i64 %13614, i64* %RCX.i315, align 8
  store %struct.Memory* %loadMem_480cd1, %struct.Memory** %MEMORY
  %loadMem_480cd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13616 = getelementptr inbounds %struct.GPR, %struct.GPR* %13615, i32 0, i32 33
  %13617 = getelementptr inbounds %struct.Reg, %struct.Reg* %13616, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %13617 to i64*
  %13618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13619 = getelementptr inbounds %struct.GPR, %struct.GPR* %13618, i32 0, i32 5
  %13620 = getelementptr inbounds %struct.Reg, %struct.Reg* %13619, i32 0, i32 0
  %RCX.i313 = bitcast %union.anon* %13620 to i64*
  %13621 = load i64, i64* %RCX.i313
  %13622 = load i64, i64* %PC.i312
  %13623 = add i64 %13622, 7
  store i64 %13623, i64* %PC.i312
  %13624 = sext i64 %13621 to i128
  %13625 = and i128 %13624, -18446744073709551616
  %13626 = zext i64 %13621 to i128
  %13627 = or i128 %13625, %13626
  %13628 = mul i128 564, %13627
  %13629 = trunc i128 %13628 to i64
  store i64 %13629, i64* %RCX.i313, align 8
  %13630 = sext i64 %13629 to i128
  %13631 = icmp ne i128 %13630, %13628
  %13632 = zext i1 %13631 to i8
  %13633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13632, i8* %13633, align 1
  %13634 = trunc i128 %13628 to i32
  %13635 = and i32 %13634, 255
  %13636 = call i32 @llvm.ctpop.i32(i32 %13635)
  %13637 = trunc i32 %13636 to i8
  %13638 = and i8 %13637, 1
  %13639 = xor i8 %13638, 1
  %13640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13639, i8* %13640, align 1
  %13641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13641, align 1
  %13642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13642, align 1
  %13643 = lshr i64 %13629, 63
  %13644 = trunc i64 %13643 to i8
  %13645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13644, i8* %13645, align 1
  %13646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13632, i8* %13646, align 1
  store %struct.Memory* %loadMem_480cd5, %struct.Memory** %MEMORY
  %loadMem_480cdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13648 = getelementptr inbounds %struct.GPR, %struct.GPR* %13647, i32 0, i32 33
  %13649 = getelementptr inbounds %struct.Reg, %struct.Reg* %13648, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %13649 to i64*
  %13650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13651 = getelementptr inbounds %struct.GPR, %struct.GPR* %13650, i32 0, i32 1
  %13652 = getelementptr inbounds %struct.Reg, %struct.Reg* %13651, i32 0, i32 0
  %RAX.i310 = bitcast %union.anon* %13652 to i64*
  %13653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13654 = getelementptr inbounds %struct.GPR, %struct.GPR* %13653, i32 0, i32 7
  %13655 = getelementptr inbounds %struct.Reg, %struct.Reg* %13654, i32 0, i32 0
  %RDX.i311 = bitcast %union.anon* %13655 to i64*
  %13656 = load i64, i64* %RAX.i310
  %13657 = load i64, i64* %PC.i309
  %13658 = add i64 %13657, 3
  store i64 %13658, i64* %PC.i309
  store i64 %13656, i64* %RDX.i311, align 8
  store %struct.Memory* %loadMem_480cdc, %struct.Memory** %MEMORY
  %loadMem_480cdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %13659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13660 = getelementptr inbounds %struct.GPR, %struct.GPR* %13659, i32 0, i32 33
  %13661 = getelementptr inbounds %struct.Reg, %struct.Reg* %13660, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %13661 to i64*
  %13662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13663 = getelementptr inbounds %struct.GPR, %struct.GPR* %13662, i32 0, i32 5
  %13664 = getelementptr inbounds %struct.Reg, %struct.Reg* %13663, i32 0, i32 0
  %RCX.i307 = bitcast %union.anon* %13664 to i64*
  %13665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13666 = getelementptr inbounds %struct.GPR, %struct.GPR* %13665, i32 0, i32 7
  %13667 = getelementptr inbounds %struct.Reg, %struct.Reg* %13666, i32 0, i32 0
  %RDX.i308 = bitcast %union.anon* %13667 to i64*
  %13668 = load i64, i64* %RDX.i308
  %13669 = load i64, i64* %RCX.i307
  %13670 = load i64, i64* %PC.i306
  %13671 = add i64 %13670, 3
  store i64 %13671, i64* %PC.i306
  %13672 = add i64 %13669, %13668
  store i64 %13672, i64* %RDX.i308, align 8
  %13673 = icmp ult i64 %13672, %13668
  %13674 = icmp ult i64 %13672, %13669
  %13675 = or i1 %13673, %13674
  %13676 = zext i1 %13675 to i8
  %13677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13676, i8* %13677, align 1
  %13678 = trunc i64 %13672 to i32
  %13679 = and i32 %13678, 255
  %13680 = call i32 @llvm.ctpop.i32(i32 %13679)
  %13681 = trunc i32 %13680 to i8
  %13682 = and i8 %13681, 1
  %13683 = xor i8 %13682, 1
  %13684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13683, i8* %13684, align 1
  %13685 = xor i64 %13669, %13668
  %13686 = xor i64 %13685, %13672
  %13687 = lshr i64 %13686, 4
  %13688 = trunc i64 %13687 to i8
  %13689 = and i8 %13688, 1
  %13690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13689, i8* %13690, align 1
  %13691 = icmp eq i64 %13672, 0
  %13692 = zext i1 %13691 to i8
  %13693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13692, i8* %13693, align 1
  %13694 = lshr i64 %13672, 63
  %13695 = trunc i64 %13694 to i8
  %13696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13695, i8* %13696, align 1
  %13697 = lshr i64 %13668, 63
  %13698 = lshr i64 %13669, 63
  %13699 = xor i64 %13694, %13697
  %13700 = xor i64 %13694, %13698
  %13701 = add i64 %13699, %13700
  %13702 = icmp eq i64 %13701, 2
  %13703 = zext i1 %13702 to i8
  %13704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13703, i8* %13704, align 1
  store %struct.Memory* %loadMem_480cdf, %struct.Memory** %MEMORY
  %loadMem_480ce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13706 = getelementptr inbounds %struct.GPR, %struct.GPR* %13705, i32 0, i32 33
  %13707 = getelementptr inbounds %struct.Reg, %struct.Reg* %13706, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %13707 to i64*
  %13708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13709 = getelementptr inbounds %struct.GPR, %struct.GPR* %13708, i32 0, i32 7
  %13710 = getelementptr inbounds %struct.Reg, %struct.Reg* %13709, i32 0, i32 0
  %RDX.i304 = bitcast %union.anon* %13710 to i64*
  %13711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13712 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13711, i64 0, i64 0
  %YMM0.i305 = bitcast %union.VectorReg* %13712 to %"class.std::bitset"*
  %13713 = bitcast %"class.std::bitset"* %YMM0.i305 to i8*
  %13714 = load i64, i64* %RDX.i304
  %13715 = add i64 %13714, 52
  %13716 = load i64, i64* %PC.i303
  %13717 = add i64 %13716, 5
  store i64 %13717, i64* %PC.i303
  %13718 = inttoptr i64 %13715 to float*
  %13719 = load float, float* %13718
  %13720 = bitcast i8* %13713 to float*
  store float %13719, float* %13720, align 1
  %13721 = getelementptr inbounds i8, i8* %13713, i64 4
  %13722 = bitcast i8* %13721 to float*
  store float 0.000000e+00, float* %13722, align 1
  %13723 = getelementptr inbounds i8, i8* %13713, i64 8
  %13724 = bitcast i8* %13723 to float*
  store float 0.000000e+00, float* %13724, align 1
  %13725 = getelementptr inbounds i8, i8* %13713, i64 12
  %13726 = bitcast i8* %13725 to float*
  store float 0.000000e+00, float* %13726, align 1
  store %struct.Memory* %loadMem_480ce2, %struct.Memory** %MEMORY
  %loadMem_480ce7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13728 = getelementptr inbounds %struct.GPR, %struct.GPR* %13727, i32 0, i32 33
  %13729 = getelementptr inbounds %struct.Reg, %struct.Reg* %13728, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %13729 to i64*
  %13730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13731 = getelementptr inbounds %struct.GPR, %struct.GPR* %13730, i32 0, i32 5
  %13732 = getelementptr inbounds %struct.Reg, %struct.Reg* %13731, i32 0, i32 0
  %RCX.i301 = bitcast %union.anon* %13732 to i64*
  %13733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13734 = getelementptr inbounds %struct.GPR, %struct.GPR* %13733, i32 0, i32 15
  %13735 = getelementptr inbounds %struct.Reg, %struct.Reg* %13734, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %13735 to i64*
  %13736 = load i64, i64* %RBP.i302
  %13737 = sub i64 %13736, 8
  %13738 = load i64, i64* %PC.i300
  %13739 = add i64 %13738, 4
  store i64 %13739, i64* %PC.i300
  %13740 = inttoptr i64 %13737 to i32*
  %13741 = load i32, i32* %13740
  %13742 = sext i32 %13741 to i64
  store i64 %13742, i64* %RCX.i301, align 8
  store %struct.Memory* %loadMem_480ce7, %struct.Memory** %MEMORY
  %loadMem_480ceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13744 = getelementptr inbounds %struct.GPR, %struct.GPR* %13743, i32 0, i32 33
  %13745 = getelementptr inbounds %struct.Reg, %struct.Reg* %13744, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %13745 to i64*
  %13746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13747 = getelementptr inbounds %struct.GPR, %struct.GPR* %13746, i32 0, i32 5
  %13748 = getelementptr inbounds %struct.Reg, %struct.Reg* %13747, i32 0, i32 0
  %RCX.i299 = bitcast %union.anon* %13748 to i64*
  %13749 = load i64, i64* %RCX.i299
  %13750 = load i64, i64* %PC.i298
  %13751 = add i64 %13750, 7
  store i64 %13751, i64* %PC.i298
  %13752 = sext i64 %13749 to i128
  %13753 = and i128 %13752, -18446744073709551616
  %13754 = zext i64 %13749 to i128
  %13755 = or i128 %13753, %13754
  %13756 = mul i128 564, %13755
  %13757 = trunc i128 %13756 to i64
  store i64 %13757, i64* %RCX.i299, align 8
  %13758 = sext i64 %13757 to i128
  %13759 = icmp ne i128 %13758, %13756
  %13760 = zext i1 %13759 to i8
  %13761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13760, i8* %13761, align 1
  %13762 = trunc i128 %13756 to i32
  %13763 = and i32 %13762, 255
  %13764 = call i32 @llvm.ctpop.i32(i32 %13763)
  %13765 = trunc i32 %13764 to i8
  %13766 = and i8 %13765, 1
  %13767 = xor i8 %13766, 1
  %13768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13767, i8* %13768, align 1
  %13769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13769, align 1
  %13770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13770, align 1
  %13771 = lshr i64 %13757, 63
  %13772 = trunc i64 %13771 to i8
  %13773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13772, i8* %13773, align 1
  %13774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13760, i8* %13774, align 1
  store %struct.Memory* %loadMem_480ceb, %struct.Memory** %MEMORY
  %loadMem_480cf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13776 = getelementptr inbounds %struct.GPR, %struct.GPR* %13775, i32 0, i32 33
  %13777 = getelementptr inbounds %struct.Reg, %struct.Reg* %13776, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %13777 to i64*
  %13778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13779 = getelementptr inbounds %struct.GPR, %struct.GPR* %13778, i32 0, i32 1
  %13780 = getelementptr inbounds %struct.Reg, %struct.Reg* %13779, i32 0, i32 0
  %RAX.i296 = bitcast %union.anon* %13780 to i64*
  %13781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13782 = getelementptr inbounds %struct.GPR, %struct.GPR* %13781, i32 0, i32 5
  %13783 = getelementptr inbounds %struct.Reg, %struct.Reg* %13782, i32 0, i32 0
  %RCX.i297 = bitcast %union.anon* %13783 to i64*
  %13784 = load i64, i64* %RAX.i296
  %13785 = load i64, i64* %RCX.i297
  %13786 = load i64, i64* %PC.i295
  %13787 = add i64 %13786, 3
  store i64 %13787, i64* %PC.i295
  %13788 = add i64 %13785, %13784
  store i64 %13788, i64* %RAX.i296, align 8
  %13789 = icmp ult i64 %13788, %13784
  %13790 = icmp ult i64 %13788, %13785
  %13791 = or i1 %13789, %13790
  %13792 = zext i1 %13791 to i8
  %13793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13792, i8* %13793, align 1
  %13794 = trunc i64 %13788 to i32
  %13795 = and i32 %13794, 255
  %13796 = call i32 @llvm.ctpop.i32(i32 %13795)
  %13797 = trunc i32 %13796 to i8
  %13798 = and i8 %13797, 1
  %13799 = xor i8 %13798, 1
  %13800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13799, i8* %13800, align 1
  %13801 = xor i64 %13785, %13784
  %13802 = xor i64 %13801, %13788
  %13803 = lshr i64 %13802, 4
  %13804 = trunc i64 %13803 to i8
  %13805 = and i8 %13804, 1
  %13806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13805, i8* %13806, align 1
  %13807 = icmp eq i64 %13788, 0
  %13808 = zext i1 %13807 to i8
  %13809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13808, i8* %13809, align 1
  %13810 = lshr i64 %13788, 63
  %13811 = trunc i64 %13810 to i8
  %13812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13811, i8* %13812, align 1
  %13813 = lshr i64 %13784, 63
  %13814 = lshr i64 %13785, 63
  %13815 = xor i64 %13810, %13813
  %13816 = xor i64 %13810, %13814
  %13817 = add i64 %13815, %13816
  %13818 = icmp eq i64 %13817, 2
  %13819 = zext i1 %13818 to i8
  %13820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13819, i8* %13820, align 1
  store %struct.Memory* %loadMem_480cf2, %struct.Memory** %MEMORY
  %loadMem_480cf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13822 = getelementptr inbounds %struct.GPR, %struct.GPR* %13821, i32 0, i32 33
  %13823 = getelementptr inbounds %struct.Reg, %struct.Reg* %13822, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %13823 to i64*
  %13824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13825 = getelementptr inbounds %struct.GPR, %struct.GPR* %13824, i32 0, i32 1
  %13826 = getelementptr inbounds %struct.Reg, %struct.Reg* %13825, i32 0, i32 0
  %RAX.i291 = bitcast %union.anon* %13826 to i64*
  %13827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13828 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13827, i64 0, i64 0
  %XMM0.i292 = bitcast %union.VectorReg* %13828 to %union.vec128_t*
  %13829 = bitcast %union.vec128_t* %XMM0.i292 to i8*
  %13830 = load i64, i64* %RAX.i291
  %13831 = add i64 %13830, 56
  %13832 = load i64, i64* %PC.i290
  %13833 = add i64 %13832, 4
  store i64 %13833, i64* %PC.i290
  %13834 = bitcast i8* %13829 to <2 x float>*
  %13835 = load <2 x float>, <2 x float>* %13834, align 1
  %13836 = extractelement <2 x float> %13835, i32 0
  %13837 = inttoptr i64 %13831 to float*
  %13838 = load float, float* %13837
  %13839 = fcmp uno float %13836, %13838
  br i1 %13839, label %13840, label %13852

; <label>:13840:                                  ; preds = %block_.L_480cc7
  %13841 = fadd float %13836, %13838
  %13842 = bitcast float %13841 to i32
  %13843 = and i32 %13842, 2143289344
  %13844 = icmp eq i32 %13843, 2139095040
  %13845 = and i32 %13842, 4194303
  %13846 = icmp ne i32 %13845, 0
  %13847 = and i1 %13844, %13846
  br i1 %13847, label %13848, label %13858

; <label>:13848:                                  ; preds = %13840
  %13849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13850 = load i64, i64* %13849, align 8
  %13851 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %13850, %struct.Memory* %loadMem_480cf5)
  br label %routine_ucomiss_0x38__rax____xmm0.exit293

; <label>:13852:                                  ; preds = %block_.L_480cc7
  %13853 = fcmp ogt float %13836, %13838
  br i1 %13853, label %13858, label %13854

; <label>:13854:                                  ; preds = %13852
  %13855 = fcmp olt float %13836, %13838
  br i1 %13855, label %13858, label %13856

; <label>:13856:                                  ; preds = %13854
  %13857 = fcmp oeq float %13836, %13838
  br i1 %13857, label %13858, label %13865

; <label>:13858:                                  ; preds = %13856, %13854, %13852, %13840
  %13859 = phi i8 [ 0, %13852 ], [ 0, %13854 ], [ 1, %13856 ], [ 1, %13840 ]
  %13860 = phi i8 [ 0, %13852 ], [ 0, %13854 ], [ 0, %13856 ], [ 1, %13840 ]
  %13861 = phi i8 [ 0, %13852 ], [ 1, %13854 ], [ 0, %13856 ], [ 1, %13840 ]
  %13862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13859, i8* %13862, align 1
  %13863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13860, i8* %13863, align 1
  %13864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13861, i8* %13864, align 1
  br label %13865

; <label>:13865:                                  ; preds = %13858, %13856
  %13866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13866, align 1
  %13867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13867, align 1
  %13868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13868, align 1
  br label %routine_ucomiss_0x38__rax____xmm0.exit293

routine_ucomiss_0x38__rax____xmm0.exit293:        ; preds = %13848, %13865
  %13869 = phi %struct.Memory* [ %13851, %13848 ], [ %loadMem_480cf5, %13865 ]
  store %struct.Memory* %13869, %struct.Memory** %MEMORY
  %loadMem_480cf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13871 = getelementptr inbounds %struct.GPR, %struct.GPR* %13870, i32 0, i32 33
  %13872 = getelementptr inbounds %struct.Reg, %struct.Reg* %13871, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %13872 to i64*
  %13873 = load i64, i64* %PC.i289
  %13874 = add i64 %13873, 57
  %13875 = load i64, i64* %PC.i289
  %13876 = add i64 %13875, 6
  %13877 = load i64, i64* %PC.i289
  %13878 = add i64 %13877, 6
  store i64 %13878, i64* %PC.i289
  %13879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13880 = load i8, i8* %13879, align 1
  %13881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13882 = load i8, i8* %13881, align 1
  %13883 = or i8 %13882, %13880
  %13884 = icmp ne i8 %13883, 0
  %13885 = zext i1 %13884 to i8
  store i8 %13885, i8* %BRANCH_TAKEN, align 1
  %13886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13887 = select i1 %13884, i64 %13874, i64 %13876
  store i64 %13887, i64* %13886, align 8
  store %struct.Memory* %loadMem_480cf9, %struct.Memory** %MEMORY
  %loadBr_480cf9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480cf9 = icmp eq i8 %loadBr_480cf9, 1
  br i1 %cmpBr_480cf9, label %block_.L_480d32, label %block_480cff

block_480cff:                                     ; preds = %routine_ucomiss_0x38__rax____xmm0.exit293
  %loadMem_480cff = load %struct.Memory*, %struct.Memory** %MEMORY
  %13888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13889 = getelementptr inbounds %struct.GPR, %struct.GPR* %13888, i32 0, i32 33
  %13890 = getelementptr inbounds %struct.Reg, %struct.Reg* %13889, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %13890 to i64*
  %13891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13892 = getelementptr inbounds %struct.GPR, %struct.GPR* %13891, i32 0, i32 1
  %13893 = getelementptr inbounds %struct.Reg, %struct.Reg* %13892, i32 0, i32 0
  %RAX.i288 = bitcast %union.anon* %13893 to i64*
  %13894 = load i64, i64* %PC.i287
  %13895 = add i64 %13894, 10
  store i64 %13895, i64* %PC.i287
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i288, align 8
  store %struct.Memory* %loadMem_480cff, %struct.Memory** %MEMORY
  %loadMem_480d09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13897 = getelementptr inbounds %struct.GPR, %struct.GPR* %13896, i32 0, i32 33
  %13898 = getelementptr inbounds %struct.Reg, %struct.Reg* %13897, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %13898 to i64*
  %13899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13900 = getelementptr inbounds %struct.GPR, %struct.GPR* %13899, i32 0, i32 5
  %13901 = getelementptr inbounds %struct.Reg, %struct.Reg* %13900, i32 0, i32 0
  %RCX.i285 = bitcast %union.anon* %13901 to i64*
  %13902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13903 = getelementptr inbounds %struct.GPR, %struct.GPR* %13902, i32 0, i32 15
  %13904 = getelementptr inbounds %struct.Reg, %struct.Reg* %13903, i32 0, i32 0
  %RBP.i286 = bitcast %union.anon* %13904 to i64*
  %13905 = load i64, i64* %RBP.i286
  %13906 = sub i64 %13905, 8
  %13907 = load i64, i64* %PC.i284
  %13908 = add i64 %13907, 4
  store i64 %13908, i64* %PC.i284
  %13909 = inttoptr i64 %13906 to i32*
  %13910 = load i32, i32* %13909
  %13911 = sext i32 %13910 to i64
  store i64 %13911, i64* %RCX.i285, align 8
  store %struct.Memory* %loadMem_480d09, %struct.Memory** %MEMORY
  %loadMem_480d0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13913 = getelementptr inbounds %struct.GPR, %struct.GPR* %13912, i32 0, i32 33
  %13914 = getelementptr inbounds %struct.Reg, %struct.Reg* %13913, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %13914 to i64*
  %13915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13916 = getelementptr inbounds %struct.GPR, %struct.GPR* %13915, i32 0, i32 5
  %13917 = getelementptr inbounds %struct.Reg, %struct.Reg* %13916, i32 0, i32 0
  %RCX.i283 = bitcast %union.anon* %13917 to i64*
  %13918 = load i64, i64* %RCX.i283
  %13919 = load i64, i64* %PC.i282
  %13920 = add i64 %13919, 7
  store i64 %13920, i64* %PC.i282
  %13921 = sext i64 %13918 to i128
  %13922 = and i128 %13921, -18446744073709551616
  %13923 = zext i64 %13918 to i128
  %13924 = or i128 %13922, %13923
  %13925 = mul i128 564, %13924
  %13926 = trunc i128 %13925 to i64
  store i64 %13926, i64* %RCX.i283, align 8
  %13927 = sext i64 %13926 to i128
  %13928 = icmp ne i128 %13927, %13925
  %13929 = zext i1 %13928 to i8
  %13930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13929, i8* %13930, align 1
  %13931 = trunc i128 %13925 to i32
  %13932 = and i32 %13931, 255
  %13933 = call i32 @llvm.ctpop.i32(i32 %13932)
  %13934 = trunc i32 %13933 to i8
  %13935 = and i8 %13934, 1
  %13936 = xor i8 %13935, 1
  %13937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13936, i8* %13937, align 1
  %13938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13938, align 1
  %13939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13939, align 1
  %13940 = lshr i64 %13926, 63
  %13941 = trunc i64 %13940 to i8
  %13942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13941, i8* %13942, align 1
  %13943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13929, i8* %13943, align 1
  store %struct.Memory* %loadMem_480d0d, %struct.Memory** %MEMORY
  %loadMem_480d14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13945 = getelementptr inbounds %struct.GPR, %struct.GPR* %13944, i32 0, i32 33
  %13946 = getelementptr inbounds %struct.Reg, %struct.Reg* %13945, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %13946 to i64*
  %13947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13948 = getelementptr inbounds %struct.GPR, %struct.GPR* %13947, i32 0, i32 1
  %13949 = getelementptr inbounds %struct.Reg, %struct.Reg* %13948, i32 0, i32 0
  %RAX.i280 = bitcast %union.anon* %13949 to i64*
  %13950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13951 = getelementptr inbounds %struct.GPR, %struct.GPR* %13950, i32 0, i32 7
  %13952 = getelementptr inbounds %struct.Reg, %struct.Reg* %13951, i32 0, i32 0
  %RDX.i281 = bitcast %union.anon* %13952 to i64*
  %13953 = load i64, i64* %RAX.i280
  %13954 = load i64, i64* %PC.i279
  %13955 = add i64 %13954, 3
  store i64 %13955, i64* %PC.i279
  store i64 %13953, i64* %RDX.i281, align 8
  store %struct.Memory* %loadMem_480d14, %struct.Memory** %MEMORY
  %loadMem_480d17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13957 = getelementptr inbounds %struct.GPR, %struct.GPR* %13956, i32 0, i32 33
  %13958 = getelementptr inbounds %struct.Reg, %struct.Reg* %13957, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %13958 to i64*
  %13959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13960 = getelementptr inbounds %struct.GPR, %struct.GPR* %13959, i32 0, i32 5
  %13961 = getelementptr inbounds %struct.Reg, %struct.Reg* %13960, i32 0, i32 0
  %RCX.i277 = bitcast %union.anon* %13961 to i64*
  %13962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13963 = getelementptr inbounds %struct.GPR, %struct.GPR* %13962, i32 0, i32 7
  %13964 = getelementptr inbounds %struct.Reg, %struct.Reg* %13963, i32 0, i32 0
  %RDX.i278 = bitcast %union.anon* %13964 to i64*
  %13965 = load i64, i64* %RDX.i278
  %13966 = load i64, i64* %RCX.i277
  %13967 = load i64, i64* %PC.i276
  %13968 = add i64 %13967, 3
  store i64 %13968, i64* %PC.i276
  %13969 = add i64 %13966, %13965
  store i64 %13969, i64* %RDX.i278, align 8
  %13970 = icmp ult i64 %13969, %13965
  %13971 = icmp ult i64 %13969, %13966
  %13972 = or i1 %13970, %13971
  %13973 = zext i1 %13972 to i8
  %13974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13973, i8* %13974, align 1
  %13975 = trunc i64 %13969 to i32
  %13976 = and i32 %13975, 255
  %13977 = call i32 @llvm.ctpop.i32(i32 %13976)
  %13978 = trunc i32 %13977 to i8
  %13979 = and i8 %13978, 1
  %13980 = xor i8 %13979, 1
  %13981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13980, i8* %13981, align 1
  %13982 = xor i64 %13966, %13965
  %13983 = xor i64 %13982, %13969
  %13984 = lshr i64 %13983, 4
  %13985 = trunc i64 %13984 to i8
  %13986 = and i8 %13985, 1
  %13987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13986, i8* %13987, align 1
  %13988 = icmp eq i64 %13969, 0
  %13989 = zext i1 %13988 to i8
  %13990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13989, i8* %13990, align 1
  %13991 = lshr i64 %13969, 63
  %13992 = trunc i64 %13991 to i8
  %13993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13992, i8* %13993, align 1
  %13994 = lshr i64 %13965, 63
  %13995 = lshr i64 %13966, 63
  %13996 = xor i64 %13991, %13994
  %13997 = xor i64 %13991, %13995
  %13998 = add i64 %13996, %13997
  %13999 = icmp eq i64 %13998, 2
  %14000 = zext i1 %13999 to i8
  %14001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14000, i8* %14001, align 1
  store %struct.Memory* %loadMem_480d17, %struct.Memory** %MEMORY
  %loadMem_480d1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14003 = getelementptr inbounds %struct.GPR, %struct.GPR* %14002, i32 0, i32 33
  %14004 = getelementptr inbounds %struct.Reg, %struct.Reg* %14003, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %14004 to i64*
  %14005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14006 = getelementptr inbounds %struct.GPR, %struct.GPR* %14005, i32 0, i32 7
  %14007 = getelementptr inbounds %struct.Reg, %struct.Reg* %14006, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %14007 to i64*
  %14008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14009 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14008, i64 0, i64 0
  %YMM0.i275 = bitcast %union.VectorReg* %14009 to %"class.std::bitset"*
  %14010 = bitcast %"class.std::bitset"* %YMM0.i275 to i8*
  %14011 = load i64, i64* %RDX.i
  %14012 = add i64 %14011, 52
  %14013 = load i64, i64* %PC.i274
  %14014 = add i64 %14013, 5
  store i64 %14014, i64* %PC.i274
  %14015 = inttoptr i64 %14012 to float*
  %14016 = load float, float* %14015
  %14017 = bitcast i8* %14010 to float*
  store float %14016, float* %14017, align 1
  %14018 = getelementptr inbounds i8, i8* %14010, i64 4
  %14019 = bitcast i8* %14018 to float*
  store float 0.000000e+00, float* %14019, align 1
  %14020 = getelementptr inbounds i8, i8* %14010, i64 8
  %14021 = bitcast i8* %14020 to float*
  store float 0.000000e+00, float* %14021, align 1
  %14022 = getelementptr inbounds i8, i8* %14010, i64 12
  %14023 = bitcast i8* %14022 to float*
  store float 0.000000e+00, float* %14023, align 1
  store %struct.Memory* %loadMem_480d1a, %struct.Memory** %MEMORY
  %loadMem_480d1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14025 = getelementptr inbounds %struct.GPR, %struct.GPR* %14024, i32 0, i32 33
  %14026 = getelementptr inbounds %struct.Reg, %struct.Reg* %14025, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %14026 to i64*
  %14027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14028 = getelementptr inbounds %struct.GPR, %struct.GPR* %14027, i32 0, i32 5
  %14029 = getelementptr inbounds %struct.Reg, %struct.Reg* %14028, i32 0, i32 0
  %RCX.i272 = bitcast %union.anon* %14029 to i64*
  %14030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14031 = getelementptr inbounds %struct.GPR, %struct.GPR* %14030, i32 0, i32 15
  %14032 = getelementptr inbounds %struct.Reg, %struct.Reg* %14031, i32 0, i32 0
  %RBP.i273 = bitcast %union.anon* %14032 to i64*
  %14033 = load i64, i64* %RBP.i273
  %14034 = sub i64 %14033, 8
  %14035 = load i64, i64* %PC.i271
  %14036 = add i64 %14035, 4
  store i64 %14036, i64* %PC.i271
  %14037 = inttoptr i64 %14034 to i32*
  %14038 = load i32, i32* %14037
  %14039 = sext i32 %14038 to i64
  store i64 %14039, i64* %RCX.i272, align 8
  store %struct.Memory* %loadMem_480d1f, %struct.Memory** %MEMORY
  %loadMem_480d23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14041 = getelementptr inbounds %struct.GPR, %struct.GPR* %14040, i32 0, i32 33
  %14042 = getelementptr inbounds %struct.Reg, %struct.Reg* %14041, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %14042 to i64*
  %14043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14044 = getelementptr inbounds %struct.GPR, %struct.GPR* %14043, i32 0, i32 5
  %14045 = getelementptr inbounds %struct.Reg, %struct.Reg* %14044, i32 0, i32 0
  %RCX.i270 = bitcast %union.anon* %14045 to i64*
  %14046 = load i64, i64* %RCX.i270
  %14047 = load i64, i64* %PC.i269
  %14048 = add i64 %14047, 7
  store i64 %14048, i64* %PC.i269
  %14049 = sext i64 %14046 to i128
  %14050 = and i128 %14049, -18446744073709551616
  %14051 = zext i64 %14046 to i128
  %14052 = or i128 %14050, %14051
  %14053 = mul i128 564, %14052
  %14054 = trunc i128 %14053 to i64
  store i64 %14054, i64* %RCX.i270, align 8
  %14055 = sext i64 %14054 to i128
  %14056 = icmp ne i128 %14055, %14053
  %14057 = zext i1 %14056 to i8
  %14058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14057, i8* %14058, align 1
  %14059 = trunc i128 %14053 to i32
  %14060 = and i32 %14059, 255
  %14061 = call i32 @llvm.ctpop.i32(i32 %14060)
  %14062 = trunc i32 %14061 to i8
  %14063 = and i8 %14062, 1
  %14064 = xor i8 %14063, 1
  %14065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14064, i8* %14065, align 1
  %14066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14066, align 1
  %14067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14067, align 1
  %14068 = lshr i64 %14054, 63
  %14069 = trunc i64 %14068 to i8
  %14070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14069, i8* %14070, align 1
  %14071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14057, i8* %14071, align 1
  store %struct.Memory* %loadMem_480d23, %struct.Memory** %MEMORY
  %loadMem_480d2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14073 = getelementptr inbounds %struct.GPR, %struct.GPR* %14072, i32 0, i32 33
  %14074 = getelementptr inbounds %struct.Reg, %struct.Reg* %14073, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %14074 to i64*
  %14075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14076 = getelementptr inbounds %struct.GPR, %struct.GPR* %14075, i32 0, i32 1
  %14077 = getelementptr inbounds %struct.Reg, %struct.Reg* %14076, i32 0, i32 0
  %RAX.i267 = bitcast %union.anon* %14077 to i64*
  %14078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14079 = getelementptr inbounds %struct.GPR, %struct.GPR* %14078, i32 0, i32 5
  %14080 = getelementptr inbounds %struct.Reg, %struct.Reg* %14079, i32 0, i32 0
  %RCX.i268 = bitcast %union.anon* %14080 to i64*
  %14081 = load i64, i64* %RAX.i267
  %14082 = load i64, i64* %RCX.i268
  %14083 = load i64, i64* %PC.i266
  %14084 = add i64 %14083, 3
  store i64 %14084, i64* %PC.i266
  %14085 = add i64 %14082, %14081
  store i64 %14085, i64* %RAX.i267, align 8
  %14086 = icmp ult i64 %14085, %14081
  %14087 = icmp ult i64 %14085, %14082
  %14088 = or i1 %14086, %14087
  %14089 = zext i1 %14088 to i8
  %14090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14089, i8* %14090, align 1
  %14091 = trunc i64 %14085 to i32
  %14092 = and i32 %14091, 255
  %14093 = call i32 @llvm.ctpop.i32(i32 %14092)
  %14094 = trunc i32 %14093 to i8
  %14095 = and i8 %14094, 1
  %14096 = xor i8 %14095, 1
  %14097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14096, i8* %14097, align 1
  %14098 = xor i64 %14082, %14081
  %14099 = xor i64 %14098, %14085
  %14100 = lshr i64 %14099, 4
  %14101 = trunc i64 %14100 to i8
  %14102 = and i8 %14101, 1
  %14103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14102, i8* %14103, align 1
  %14104 = icmp eq i64 %14085, 0
  %14105 = zext i1 %14104 to i8
  %14106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14105, i8* %14106, align 1
  %14107 = lshr i64 %14085, 63
  %14108 = trunc i64 %14107 to i8
  %14109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14108, i8* %14109, align 1
  %14110 = lshr i64 %14081, 63
  %14111 = lshr i64 %14082, 63
  %14112 = xor i64 %14107, %14110
  %14113 = xor i64 %14107, %14111
  %14114 = add i64 %14112, %14113
  %14115 = icmp eq i64 %14114, 2
  %14116 = zext i1 %14115 to i8
  %14117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14116, i8* %14117, align 1
  store %struct.Memory* %loadMem_480d2a, %struct.Memory** %MEMORY
  %loadMem_480d2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14119 = getelementptr inbounds %struct.GPR, %struct.GPR* %14118, i32 0, i32 33
  %14120 = getelementptr inbounds %struct.Reg, %struct.Reg* %14119, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %14120 to i64*
  %14121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14122 = getelementptr inbounds %struct.GPR, %struct.GPR* %14121, i32 0, i32 1
  %14123 = getelementptr inbounds %struct.Reg, %struct.Reg* %14122, i32 0, i32 0
  %RAX.i264 = bitcast %union.anon* %14123 to i64*
  %14124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14125 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14124, i64 0, i64 0
  %XMM0.i265 = bitcast %union.VectorReg* %14125 to %union.vec128_t*
  %14126 = load i64, i64* %RAX.i264
  %14127 = add i64 %14126, 56
  %14128 = bitcast %union.vec128_t* %XMM0.i265 to i8*
  %14129 = load i64, i64* %PC.i263
  %14130 = add i64 %14129, 5
  store i64 %14130, i64* %PC.i263
  %14131 = bitcast i8* %14128 to <2 x float>*
  %14132 = load <2 x float>, <2 x float>* %14131, align 1
  %14133 = extractelement <2 x float> %14132, i32 0
  %14134 = inttoptr i64 %14127 to float*
  store float %14133, float* %14134
  store %struct.Memory* %loadMem_480d2d, %struct.Memory** %MEMORY
  br label %block_.L_480d32

block_.L_480d32:                                  ; preds = %block_480cff, %routine_ucomiss_0x38__rax____xmm0.exit293
  %loadMem_480d32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14136 = getelementptr inbounds %struct.GPR, %struct.GPR* %14135, i32 0, i32 33
  %14137 = getelementptr inbounds %struct.Reg, %struct.Reg* %14136, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %14137 to i64*
  %14138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14139 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14138, i64 0, i64 0
  %YMM0.i262 = bitcast %union.VectorReg* %14139 to %"class.std::bitset"*
  %14140 = bitcast %"class.std::bitset"* %YMM0.i262 to i8*
  %14141 = load i64, i64* %PC.i261
  %14142 = add i64 %14141, ptrtoint (%G_0x62436__rip__type* @G_0x62436__rip_ to i64)
  %14143 = load i64, i64* %PC.i261
  %14144 = add i64 %14143, 8
  store i64 %14144, i64* %PC.i261
  %14145 = inttoptr i64 %14142 to float*
  %14146 = load float, float* %14145
  %14147 = bitcast i8* %14140 to float*
  store float %14146, float* %14147, align 1
  %14148 = getelementptr inbounds i8, i8* %14140, i64 4
  %14149 = bitcast i8* %14148 to float*
  store float 0.000000e+00, float* %14149, align 1
  %14150 = getelementptr inbounds i8, i8* %14140, i64 8
  %14151 = bitcast i8* %14150 to float*
  store float 0.000000e+00, float* %14151, align 1
  %14152 = getelementptr inbounds i8, i8* %14140, i64 12
  %14153 = bitcast i8* %14152 to float*
  store float 0.000000e+00, float* %14153, align 1
  store %struct.Memory* %loadMem_480d32, %struct.Memory** %MEMORY
  %loadMem_480d3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14155 = getelementptr inbounds %struct.GPR, %struct.GPR* %14154, i32 0, i32 33
  %14156 = getelementptr inbounds %struct.Reg, %struct.Reg* %14155, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %14156 to i64*
  %14157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14158 = getelementptr inbounds %struct.GPR, %struct.GPR* %14157, i32 0, i32 1
  %14159 = getelementptr inbounds %struct.Reg, %struct.Reg* %14158, i32 0, i32 0
  %RAX.i260 = bitcast %union.anon* %14159 to i64*
  %14160 = load i64, i64* %PC.i259
  %14161 = add i64 %14160, 10
  store i64 %14161, i64* %PC.i259
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i260, align 8
  store %struct.Memory* %loadMem_480d3a, %struct.Memory** %MEMORY
  %loadMem_480d44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14163 = getelementptr inbounds %struct.GPR, %struct.GPR* %14162, i32 0, i32 33
  %14164 = getelementptr inbounds %struct.Reg, %struct.Reg* %14163, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %14164 to i64*
  %14165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14166 = getelementptr inbounds %struct.GPR, %struct.GPR* %14165, i32 0, i32 5
  %14167 = getelementptr inbounds %struct.Reg, %struct.Reg* %14166, i32 0, i32 0
  %RCX.i257 = bitcast %union.anon* %14167 to i64*
  %14168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14169 = getelementptr inbounds %struct.GPR, %struct.GPR* %14168, i32 0, i32 15
  %14170 = getelementptr inbounds %struct.Reg, %struct.Reg* %14169, i32 0, i32 0
  %RBP.i258 = bitcast %union.anon* %14170 to i64*
  %14171 = load i64, i64* %RBP.i258
  %14172 = sub i64 %14171, 8
  %14173 = load i64, i64* %PC.i256
  %14174 = add i64 %14173, 4
  store i64 %14174, i64* %PC.i256
  %14175 = inttoptr i64 %14172 to i32*
  %14176 = load i32, i32* %14175
  %14177 = sext i32 %14176 to i64
  store i64 %14177, i64* %RCX.i257, align 8
  store %struct.Memory* %loadMem_480d44, %struct.Memory** %MEMORY
  %loadMem_480d48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14179 = getelementptr inbounds %struct.GPR, %struct.GPR* %14178, i32 0, i32 33
  %14180 = getelementptr inbounds %struct.Reg, %struct.Reg* %14179, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %14180 to i64*
  %14181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14182 = getelementptr inbounds %struct.GPR, %struct.GPR* %14181, i32 0, i32 5
  %14183 = getelementptr inbounds %struct.Reg, %struct.Reg* %14182, i32 0, i32 0
  %RCX.i255 = bitcast %union.anon* %14183 to i64*
  %14184 = load i64, i64* %RCX.i255
  %14185 = load i64, i64* %PC.i254
  %14186 = add i64 %14185, 7
  store i64 %14186, i64* %PC.i254
  %14187 = sext i64 %14184 to i128
  %14188 = and i128 %14187, -18446744073709551616
  %14189 = zext i64 %14184 to i128
  %14190 = or i128 %14188, %14189
  %14191 = mul i128 564, %14190
  %14192 = trunc i128 %14191 to i64
  store i64 %14192, i64* %RCX.i255, align 8
  %14193 = sext i64 %14192 to i128
  %14194 = icmp ne i128 %14193, %14191
  %14195 = zext i1 %14194 to i8
  %14196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14195, i8* %14196, align 1
  %14197 = trunc i128 %14191 to i32
  %14198 = and i32 %14197, 255
  %14199 = call i32 @llvm.ctpop.i32(i32 %14198)
  %14200 = trunc i32 %14199 to i8
  %14201 = and i8 %14200, 1
  %14202 = xor i8 %14201, 1
  %14203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14202, i8* %14203, align 1
  %14204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14204, align 1
  %14205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14205, align 1
  %14206 = lshr i64 %14192, 63
  %14207 = trunc i64 %14206 to i8
  %14208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14207, i8* %14208, align 1
  %14209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14195, i8* %14209, align 1
  store %struct.Memory* %loadMem_480d48, %struct.Memory** %MEMORY
  %loadMem_480d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14211 = getelementptr inbounds %struct.GPR, %struct.GPR* %14210, i32 0, i32 33
  %14212 = getelementptr inbounds %struct.Reg, %struct.Reg* %14211, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %14212 to i64*
  %14213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14214 = getelementptr inbounds %struct.GPR, %struct.GPR* %14213, i32 0, i32 1
  %14215 = getelementptr inbounds %struct.Reg, %struct.Reg* %14214, i32 0, i32 0
  %RAX.i252 = bitcast %union.anon* %14215 to i64*
  %14216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14217 = getelementptr inbounds %struct.GPR, %struct.GPR* %14216, i32 0, i32 5
  %14218 = getelementptr inbounds %struct.Reg, %struct.Reg* %14217, i32 0, i32 0
  %RCX.i253 = bitcast %union.anon* %14218 to i64*
  %14219 = load i64, i64* %RAX.i252
  %14220 = load i64, i64* %RCX.i253
  %14221 = load i64, i64* %PC.i251
  %14222 = add i64 %14221, 3
  store i64 %14222, i64* %PC.i251
  %14223 = add i64 %14220, %14219
  store i64 %14223, i64* %RAX.i252, align 8
  %14224 = icmp ult i64 %14223, %14219
  %14225 = icmp ult i64 %14223, %14220
  %14226 = or i1 %14224, %14225
  %14227 = zext i1 %14226 to i8
  %14228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14227, i8* %14228, align 1
  %14229 = trunc i64 %14223 to i32
  %14230 = and i32 %14229, 255
  %14231 = call i32 @llvm.ctpop.i32(i32 %14230)
  %14232 = trunc i32 %14231 to i8
  %14233 = and i8 %14232, 1
  %14234 = xor i8 %14233, 1
  %14235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14234, i8* %14235, align 1
  %14236 = xor i64 %14220, %14219
  %14237 = xor i64 %14236, %14223
  %14238 = lshr i64 %14237, 4
  %14239 = trunc i64 %14238 to i8
  %14240 = and i8 %14239, 1
  %14241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14240, i8* %14241, align 1
  %14242 = icmp eq i64 %14223, 0
  %14243 = zext i1 %14242 to i8
  %14244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14243, i8* %14244, align 1
  %14245 = lshr i64 %14223, 63
  %14246 = trunc i64 %14245 to i8
  %14247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14246, i8* %14247, align 1
  %14248 = lshr i64 %14219, 63
  %14249 = lshr i64 %14220, 63
  %14250 = xor i64 %14245, %14248
  %14251 = xor i64 %14245, %14249
  %14252 = add i64 %14250, %14251
  %14253 = icmp eq i64 %14252, 2
  %14254 = zext i1 %14253 to i8
  %14255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14254, i8* %14255, align 1
  store %struct.Memory* %loadMem_480d4f, %struct.Memory** %MEMORY
  %loadMem_480d52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14257 = getelementptr inbounds %struct.GPR, %struct.GPR* %14256, i32 0, i32 33
  %14258 = getelementptr inbounds %struct.Reg, %struct.Reg* %14257, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %14258 to i64*
  %14259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14260 = getelementptr inbounds %struct.GPR, %struct.GPR* %14259, i32 0, i32 1
  %14261 = getelementptr inbounds %struct.Reg, %struct.Reg* %14260, i32 0, i32 0
  %RAX.i248 = bitcast %union.anon* %14261 to i64*
  %14262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14262, i64 0, i64 0
  %XMM0.i249 = bitcast %union.VectorReg* %14263 to %union.vec128_t*
  %14264 = bitcast %union.vec128_t* %XMM0.i249 to i8*
  %14265 = load i64, i64* %RAX.i248
  %14266 = add i64 %14265, 52
  %14267 = load i64, i64* %PC.i247
  %14268 = add i64 %14267, 4
  store i64 %14268, i64* %PC.i247
  %14269 = bitcast i8* %14264 to <2 x float>*
  %14270 = load <2 x float>, <2 x float>* %14269, align 1
  %14271 = extractelement <2 x float> %14270, i32 0
  %14272 = inttoptr i64 %14266 to float*
  %14273 = load float, float* %14272
  %14274 = fcmp uno float %14271, %14273
  br i1 %14274, label %14275, label %14287

; <label>:14275:                                  ; preds = %block_.L_480d32
  %14276 = fadd float %14271, %14273
  %14277 = bitcast float %14276 to i32
  %14278 = and i32 %14277, 2143289344
  %14279 = icmp eq i32 %14278, 2139095040
  %14280 = and i32 %14277, 4194303
  %14281 = icmp ne i32 %14280, 0
  %14282 = and i1 %14279, %14281
  br i1 %14282, label %14283, label %14293

; <label>:14283:                                  ; preds = %14275
  %14284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14285 = load i64, i64* %14284, align 8
  %14286 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %14285, %struct.Memory* %loadMem_480d52)
  br label %routine_ucomiss_0x34__rax____xmm0.exit

; <label>:14287:                                  ; preds = %block_.L_480d32
  %14288 = fcmp ogt float %14271, %14273
  br i1 %14288, label %14293, label %14289

; <label>:14289:                                  ; preds = %14287
  %14290 = fcmp olt float %14271, %14273
  br i1 %14290, label %14293, label %14291

; <label>:14291:                                  ; preds = %14289
  %14292 = fcmp oeq float %14271, %14273
  br i1 %14292, label %14293, label %14300

; <label>:14293:                                  ; preds = %14291, %14289, %14287, %14275
  %14294 = phi i8 [ 0, %14287 ], [ 0, %14289 ], [ 1, %14291 ], [ 1, %14275 ]
  %14295 = phi i8 [ 0, %14287 ], [ 0, %14289 ], [ 0, %14291 ], [ 1, %14275 ]
  %14296 = phi i8 [ 0, %14287 ], [ 1, %14289 ], [ 0, %14291 ], [ 1, %14275 ]
  %14297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14294, i8* %14297, align 1
  %14298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14295, i8* %14298, align 1
  %14299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14296, i8* %14299, align 1
  br label %14300

; <label>:14300:                                  ; preds = %14293, %14291
  %14301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14301, align 1
  %14302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %14302, align 1
  %14303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14303, align 1
  br label %routine_ucomiss_0x34__rax____xmm0.exit

routine_ucomiss_0x34__rax____xmm0.exit:           ; preds = %14283, %14300
  %14304 = phi %struct.Memory* [ %14286, %14283 ], [ %loadMem_480d52, %14300 ]
  store %struct.Memory* %14304, %struct.Memory** %MEMORY
  %loadMem_480d56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14306 = getelementptr inbounds %struct.GPR, %struct.GPR* %14305, i32 0, i32 33
  %14307 = getelementptr inbounds %struct.Reg, %struct.Reg* %14306, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %14307 to i64*
  %14308 = load i64, i64* %PC.i246
  %14309 = add i64 %14308, 57
  %14310 = load i64, i64* %PC.i246
  %14311 = add i64 %14310, 6
  %14312 = load i64, i64* %PC.i246
  %14313 = add i64 %14312, 6
  store i64 %14313, i64* %PC.i246
  %14314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14315 = load i8, i8* %14314, align 1
  %14316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14317 = load i8, i8* %14316, align 1
  %14318 = or i8 %14317, %14315
  %14319 = icmp ne i8 %14318, 0
  %14320 = zext i1 %14319 to i8
  store i8 %14320, i8* %BRANCH_TAKEN, align 1
  %14321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14322 = select i1 %14319, i64 %14309, i64 %14311
  store i64 %14322, i64* %14321, align 8
  store %struct.Memory* %loadMem_480d56, %struct.Memory** %MEMORY
  %loadBr_480d56 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480d56 = icmp eq i8 %loadBr_480d56, 1
  br i1 %cmpBr_480d56, label %block_.L_480d8f, label %block_480d5c

block_480d5c:                                     ; preds = %routine_ucomiss_0x34__rax____xmm0.exit
  %loadMem_480d5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14324 = getelementptr inbounds %struct.GPR, %struct.GPR* %14323, i32 0, i32 33
  %14325 = getelementptr inbounds %struct.Reg, %struct.Reg* %14324, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %14325 to i64*
  %14326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14327 = getelementptr inbounds %struct.GPR, %struct.GPR* %14326, i32 0, i32 1
  %14328 = getelementptr inbounds %struct.Reg, %struct.Reg* %14327, i32 0, i32 0
  %RAX.i245 = bitcast %union.anon* %14328 to i64*
  %14329 = load i64, i64* %PC.i244
  %14330 = add i64 %14329, 10
  store i64 %14330, i64* %PC.i244
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i245, align 8
  store %struct.Memory* %loadMem_480d5c, %struct.Memory** %MEMORY
  %loadMem_480d66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14332 = getelementptr inbounds %struct.GPR, %struct.GPR* %14331, i32 0, i32 33
  %14333 = getelementptr inbounds %struct.Reg, %struct.Reg* %14332, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %14333 to i64*
  %14334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14335 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14334, i64 0, i64 0
  %YMM0.i243 = bitcast %union.VectorReg* %14335 to %"class.std::bitset"*
  %14336 = bitcast %"class.std::bitset"* %YMM0.i243 to i8*
  %14337 = load i64, i64* %PC.i242
  %14338 = add i64 %14337, ptrtoint (%G_0x62406__rip__type* @G_0x62406__rip_ to i64)
  %14339 = load i64, i64* %PC.i242
  %14340 = add i64 %14339, 8
  store i64 %14340, i64* %PC.i242
  %14341 = inttoptr i64 %14338 to float*
  %14342 = load float, float* %14341
  %14343 = bitcast i8* %14336 to float*
  store float %14342, float* %14343, align 1
  %14344 = getelementptr inbounds i8, i8* %14336, i64 4
  %14345 = bitcast i8* %14344 to float*
  store float 0.000000e+00, float* %14345, align 1
  %14346 = getelementptr inbounds i8, i8* %14336, i64 8
  %14347 = bitcast i8* %14346 to float*
  store float 0.000000e+00, float* %14347, align 1
  %14348 = getelementptr inbounds i8, i8* %14336, i64 12
  %14349 = bitcast i8* %14348 to float*
  store float 0.000000e+00, float* %14349, align 1
  store %struct.Memory* %loadMem_480d66, %struct.Memory** %MEMORY
  %loadMem_480d6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14351 = getelementptr inbounds %struct.GPR, %struct.GPR* %14350, i32 0, i32 33
  %14352 = getelementptr inbounds %struct.Reg, %struct.Reg* %14351, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %14352 to i64*
  %14353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14354 = getelementptr inbounds %struct.GPR, %struct.GPR* %14353, i32 0, i32 15
  %14355 = getelementptr inbounds %struct.Reg, %struct.Reg* %14354, i32 0, i32 0
  %RBP.i240 = bitcast %union.anon* %14355 to i64*
  %14356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14357 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14356, i64 0, i64 1
  %YMM1.i241 = bitcast %union.VectorReg* %14357 to %"class.std::bitset"*
  %14358 = bitcast %"class.std::bitset"* %YMM1.i241 to i8*
  %14359 = load i64, i64* %RBP.i240
  %14360 = sub i64 %14359, 24
  %14361 = load i64, i64* %PC.i239
  %14362 = add i64 %14361, 5
  store i64 %14362, i64* %PC.i239
  %14363 = inttoptr i64 %14360 to float*
  %14364 = load float, float* %14363
  %14365 = bitcast i8* %14358 to float*
  store float %14364, float* %14365, align 1
  %14366 = getelementptr inbounds i8, i8* %14358, i64 4
  %14367 = bitcast i8* %14366 to float*
  store float 0.000000e+00, float* %14367, align 1
  %14368 = getelementptr inbounds i8, i8* %14358, i64 8
  %14369 = bitcast i8* %14368 to float*
  store float 0.000000e+00, float* %14369, align 1
  %14370 = getelementptr inbounds i8, i8* %14358, i64 12
  %14371 = bitcast i8* %14370 to float*
  store float 0.000000e+00, float* %14371, align 1
  store %struct.Memory* %loadMem_480d6e, %struct.Memory** %MEMORY
  %loadMem_480d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14373 = getelementptr inbounds %struct.GPR, %struct.GPR* %14372, i32 0, i32 33
  %14374 = getelementptr inbounds %struct.Reg, %struct.Reg* %14373, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %14374 to i64*
  %14375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14376 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14375, i64 0, i64 1
  %YMM1.i237 = bitcast %union.VectorReg* %14376 to %"class.std::bitset"*
  %14377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14378 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14377, i64 0, i64 0
  %XMM0.i238 = bitcast %union.VectorReg* %14378 to %union.vec128_t*
  %14379 = bitcast %"class.std::bitset"* %YMM1.i237 to i8*
  %14380 = bitcast %"class.std::bitset"* %YMM1.i237 to i8*
  %14381 = bitcast %union.vec128_t* %XMM0.i238 to i8*
  %14382 = load i64, i64* %PC.i236
  %14383 = add i64 %14382, 4
  store i64 %14383, i64* %PC.i236
  %14384 = bitcast i8* %14380 to <2 x float>*
  %14385 = load <2 x float>, <2 x float>* %14384, align 1
  %14386 = getelementptr inbounds i8, i8* %14380, i64 8
  %14387 = bitcast i8* %14386 to <2 x i32>*
  %14388 = load <2 x i32>, <2 x i32>* %14387, align 1
  %14389 = bitcast i8* %14381 to <2 x float>*
  %14390 = load <2 x float>, <2 x float>* %14389, align 1
  %14391 = extractelement <2 x float> %14385, i32 0
  %14392 = extractelement <2 x float> %14390, i32 0
  %14393 = fdiv float %14391, %14392
  %14394 = bitcast i8* %14379 to float*
  store float %14393, float* %14394, align 1
  %14395 = bitcast <2 x float> %14385 to <2 x i32>
  %14396 = extractelement <2 x i32> %14395, i32 1
  %14397 = getelementptr inbounds i8, i8* %14379, i64 4
  %14398 = bitcast i8* %14397 to i32*
  store i32 %14396, i32* %14398, align 1
  %14399 = extractelement <2 x i32> %14388, i32 0
  %14400 = getelementptr inbounds i8, i8* %14379, i64 8
  %14401 = bitcast i8* %14400 to i32*
  store i32 %14399, i32* %14401, align 1
  %14402 = extractelement <2 x i32> %14388, i32 1
  %14403 = getelementptr inbounds i8, i8* %14379, i64 12
  %14404 = bitcast i8* %14403 to i32*
  store i32 %14402, i32* %14404, align 1
  store %struct.Memory* %loadMem_480d73, %struct.Memory** %MEMORY
  %loadMem_480d77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14406 = getelementptr inbounds %struct.GPR, %struct.GPR* %14405, i32 0, i32 33
  %14407 = getelementptr inbounds %struct.Reg, %struct.Reg* %14406, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %14407 to i64*
  %14408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14409 = getelementptr inbounds %struct.GPR, %struct.GPR* %14408, i32 0, i32 5
  %14410 = getelementptr inbounds %struct.Reg, %struct.Reg* %14409, i32 0, i32 0
  %RCX.i234 = bitcast %union.anon* %14410 to i64*
  %14411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14412 = getelementptr inbounds %struct.GPR, %struct.GPR* %14411, i32 0, i32 15
  %14413 = getelementptr inbounds %struct.Reg, %struct.Reg* %14412, i32 0, i32 0
  %RBP.i235 = bitcast %union.anon* %14413 to i64*
  %14414 = load i64, i64* %RBP.i235
  %14415 = sub i64 %14414, 8
  %14416 = load i64, i64* %PC.i233
  %14417 = add i64 %14416, 4
  store i64 %14417, i64* %PC.i233
  %14418 = inttoptr i64 %14415 to i32*
  %14419 = load i32, i32* %14418
  %14420 = sext i32 %14419 to i64
  store i64 %14420, i64* %RCX.i234, align 8
  store %struct.Memory* %loadMem_480d77, %struct.Memory** %MEMORY
  %loadMem_480d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14422 = getelementptr inbounds %struct.GPR, %struct.GPR* %14421, i32 0, i32 33
  %14423 = getelementptr inbounds %struct.Reg, %struct.Reg* %14422, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %14423 to i64*
  %14424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14425 = getelementptr inbounds %struct.GPR, %struct.GPR* %14424, i32 0, i32 5
  %14426 = getelementptr inbounds %struct.Reg, %struct.Reg* %14425, i32 0, i32 0
  %RCX.i232 = bitcast %union.anon* %14426 to i64*
  %14427 = load i64, i64* %RCX.i232
  %14428 = load i64, i64* %PC.i231
  %14429 = add i64 %14428, 7
  store i64 %14429, i64* %PC.i231
  %14430 = sext i64 %14427 to i128
  %14431 = and i128 %14430, -18446744073709551616
  %14432 = zext i64 %14427 to i128
  %14433 = or i128 %14431, %14432
  %14434 = mul i128 564, %14433
  %14435 = trunc i128 %14434 to i64
  store i64 %14435, i64* %RCX.i232, align 8
  %14436 = sext i64 %14435 to i128
  %14437 = icmp ne i128 %14436, %14434
  %14438 = zext i1 %14437 to i8
  %14439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14438, i8* %14439, align 1
  %14440 = trunc i128 %14434 to i32
  %14441 = and i32 %14440, 255
  %14442 = call i32 @llvm.ctpop.i32(i32 %14441)
  %14443 = trunc i32 %14442 to i8
  %14444 = and i8 %14443, 1
  %14445 = xor i8 %14444, 1
  %14446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14445, i8* %14446, align 1
  %14447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14447, align 1
  %14448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14448, align 1
  %14449 = lshr i64 %14435, 63
  %14450 = trunc i64 %14449 to i8
  %14451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14450, i8* %14451, align 1
  %14452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14438, i8* %14452, align 1
  store %struct.Memory* %loadMem_480d7b, %struct.Memory** %MEMORY
  %loadMem_480d82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14454 = getelementptr inbounds %struct.GPR, %struct.GPR* %14453, i32 0, i32 33
  %14455 = getelementptr inbounds %struct.Reg, %struct.Reg* %14454, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %14455 to i64*
  %14456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14457 = getelementptr inbounds %struct.GPR, %struct.GPR* %14456, i32 0, i32 1
  %14458 = getelementptr inbounds %struct.Reg, %struct.Reg* %14457, i32 0, i32 0
  %RAX.i229 = bitcast %union.anon* %14458 to i64*
  %14459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14460 = getelementptr inbounds %struct.GPR, %struct.GPR* %14459, i32 0, i32 5
  %14461 = getelementptr inbounds %struct.Reg, %struct.Reg* %14460, i32 0, i32 0
  %RCX.i230 = bitcast %union.anon* %14461 to i64*
  %14462 = load i64, i64* %RAX.i229
  %14463 = load i64, i64* %RCX.i230
  %14464 = load i64, i64* %PC.i228
  %14465 = add i64 %14464, 3
  store i64 %14465, i64* %PC.i228
  %14466 = add i64 %14463, %14462
  store i64 %14466, i64* %RAX.i229, align 8
  %14467 = icmp ult i64 %14466, %14462
  %14468 = icmp ult i64 %14466, %14463
  %14469 = or i1 %14467, %14468
  %14470 = zext i1 %14469 to i8
  %14471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14470, i8* %14471, align 1
  %14472 = trunc i64 %14466 to i32
  %14473 = and i32 %14472, 255
  %14474 = call i32 @llvm.ctpop.i32(i32 %14473)
  %14475 = trunc i32 %14474 to i8
  %14476 = and i8 %14475, 1
  %14477 = xor i8 %14476, 1
  %14478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14477, i8* %14478, align 1
  %14479 = xor i64 %14463, %14462
  %14480 = xor i64 %14479, %14466
  %14481 = lshr i64 %14480, 4
  %14482 = trunc i64 %14481 to i8
  %14483 = and i8 %14482, 1
  %14484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14483, i8* %14484, align 1
  %14485 = icmp eq i64 %14466, 0
  %14486 = zext i1 %14485 to i8
  %14487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14486, i8* %14487, align 1
  %14488 = lshr i64 %14466, 63
  %14489 = trunc i64 %14488 to i8
  %14490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14489, i8* %14490, align 1
  %14491 = lshr i64 %14462, 63
  %14492 = lshr i64 %14463, 63
  %14493 = xor i64 %14488, %14491
  %14494 = xor i64 %14488, %14492
  %14495 = add i64 %14493, %14494
  %14496 = icmp eq i64 %14495, 2
  %14497 = zext i1 %14496 to i8
  %14498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14497, i8* %14498, align 1
  store %struct.Memory* %loadMem_480d82, %struct.Memory** %MEMORY
  %loadMem_480d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14500 = getelementptr inbounds %struct.GPR, %struct.GPR* %14499, i32 0, i32 33
  %14501 = getelementptr inbounds %struct.Reg, %struct.Reg* %14500, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %14501 to i64*
  %14502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14503 = getelementptr inbounds %struct.GPR, %struct.GPR* %14502, i32 0, i32 1
  %14504 = getelementptr inbounds %struct.Reg, %struct.Reg* %14503, i32 0, i32 0
  %RAX.i226 = bitcast %union.anon* %14504 to i64*
  %14505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14506 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14505, i64 0, i64 1
  %YMM1.i227 = bitcast %union.VectorReg* %14506 to %"class.std::bitset"*
  %14507 = bitcast %"class.std::bitset"* %YMM1.i227 to i8*
  %14508 = bitcast %"class.std::bitset"* %YMM1.i227 to i8*
  %14509 = load i64, i64* %RAX.i226
  %14510 = add i64 %14509, 52
  %14511 = load i64, i64* %PC.i225
  %14512 = add i64 %14511, 5
  store i64 %14512, i64* %PC.i225
  %14513 = bitcast i8* %14508 to <2 x float>*
  %14514 = load <2 x float>, <2 x float>* %14513, align 1
  %14515 = getelementptr inbounds i8, i8* %14508, i64 8
  %14516 = bitcast i8* %14515 to <2 x i32>*
  %14517 = load <2 x i32>, <2 x i32>* %14516, align 1
  %14518 = inttoptr i64 %14510 to float*
  %14519 = load float, float* %14518
  %14520 = extractelement <2 x float> %14514, i32 0
  %14521 = fadd float %14520, %14519
  %14522 = bitcast i8* %14507 to float*
  store float %14521, float* %14522, align 1
  %14523 = bitcast <2 x float> %14514 to <2 x i32>
  %14524 = extractelement <2 x i32> %14523, i32 1
  %14525 = getelementptr inbounds i8, i8* %14507, i64 4
  %14526 = bitcast i8* %14525 to i32*
  store i32 %14524, i32* %14526, align 1
  %14527 = extractelement <2 x i32> %14517, i32 0
  %14528 = getelementptr inbounds i8, i8* %14507, i64 8
  %14529 = bitcast i8* %14528 to i32*
  store i32 %14527, i32* %14529, align 1
  %14530 = extractelement <2 x i32> %14517, i32 1
  %14531 = getelementptr inbounds i8, i8* %14507, i64 12
  %14532 = bitcast i8* %14531 to i32*
  store i32 %14530, i32* %14532, align 1
  store %struct.Memory* %loadMem_480d85, %struct.Memory** %MEMORY
  %loadMem_480d8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14534 = getelementptr inbounds %struct.GPR, %struct.GPR* %14533, i32 0, i32 33
  %14535 = getelementptr inbounds %struct.Reg, %struct.Reg* %14534, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %14535 to i64*
  %14536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14537 = getelementptr inbounds %struct.GPR, %struct.GPR* %14536, i32 0, i32 1
  %14538 = getelementptr inbounds %struct.Reg, %struct.Reg* %14537, i32 0, i32 0
  %RAX.i223 = bitcast %union.anon* %14538 to i64*
  %14539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14540 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14539, i64 0, i64 1
  %XMM1.i224 = bitcast %union.VectorReg* %14540 to %union.vec128_t*
  %14541 = load i64, i64* %RAX.i223
  %14542 = add i64 %14541, 52
  %14543 = bitcast %union.vec128_t* %XMM1.i224 to i8*
  %14544 = load i64, i64* %PC.i222
  %14545 = add i64 %14544, 5
  store i64 %14545, i64* %PC.i222
  %14546 = bitcast i8* %14543 to <2 x float>*
  %14547 = load <2 x float>, <2 x float>* %14546, align 1
  %14548 = extractelement <2 x float> %14547, i32 0
  %14549 = inttoptr i64 %14542 to float*
  store float %14548, float* %14549
  store %struct.Memory* %loadMem_480d8a, %struct.Memory** %MEMORY
  br label %block_.L_480d8f

block_.L_480d8f:                                  ; preds = %block_480d5c, %routine_ucomiss_0x34__rax____xmm0.exit
  %loadMem_480d8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14551 = getelementptr inbounds %struct.GPR, %struct.GPR* %14550, i32 0, i32 33
  %14552 = getelementptr inbounds %struct.Reg, %struct.Reg* %14551, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %14552 to i64*
  %14553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14554 = getelementptr inbounds %struct.GPR, %struct.GPR* %14553, i32 0, i32 1
  %14555 = getelementptr inbounds %struct.Reg, %struct.Reg* %14554, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %14555 to i64*
  %14556 = load i64, i64* %PC.i220
  %14557 = add i64 %14556, 10
  store i64 %14557, i64* %PC.i220
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i221, align 8
  store %struct.Memory* %loadMem_480d8f, %struct.Memory** %MEMORY
  %loadMem_480d99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14559 = getelementptr inbounds %struct.GPR, %struct.GPR* %14558, i32 0, i32 33
  %14560 = getelementptr inbounds %struct.Reg, %struct.Reg* %14559, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %14560 to i64*
  %14561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14562 = getelementptr inbounds %struct.GPR, %struct.GPR* %14561, i32 0, i32 15
  %14563 = getelementptr inbounds %struct.Reg, %struct.Reg* %14562, i32 0, i32 0
  %RBP.i218 = bitcast %union.anon* %14563 to i64*
  %14564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14565 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14564, i64 0, i64 0
  %YMM0.i219 = bitcast %union.VectorReg* %14565 to %"class.std::bitset"*
  %14566 = bitcast %"class.std::bitset"* %YMM0.i219 to i8*
  %14567 = load i64, i64* %RBP.i218
  %14568 = sub i64 %14567, 24
  %14569 = load i64, i64* %PC.i217
  %14570 = add i64 %14569, 5
  store i64 %14570, i64* %PC.i217
  %14571 = inttoptr i64 %14568 to float*
  %14572 = load float, float* %14571
  %14573 = bitcast i8* %14566 to float*
  store float %14572, float* %14573, align 1
  %14574 = getelementptr inbounds i8, i8* %14566, i64 4
  %14575 = bitcast i8* %14574 to float*
  store float 0.000000e+00, float* %14575, align 1
  %14576 = getelementptr inbounds i8, i8* %14566, i64 8
  %14577 = bitcast i8* %14576 to float*
  store float 0.000000e+00, float* %14577, align 1
  %14578 = getelementptr inbounds i8, i8* %14566, i64 12
  %14579 = bitcast i8* %14578 to float*
  store float 0.000000e+00, float* %14579, align 1
  store %struct.Memory* %loadMem_480d99, %struct.Memory** %MEMORY
  %loadMem_480d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14581 = getelementptr inbounds %struct.GPR, %struct.GPR* %14580, i32 0, i32 33
  %14582 = getelementptr inbounds %struct.Reg, %struct.Reg* %14581, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %14582 to i64*
  %14583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14584 = getelementptr inbounds %struct.GPR, %struct.GPR* %14583, i32 0, i32 5
  %14585 = getelementptr inbounds %struct.Reg, %struct.Reg* %14584, i32 0, i32 0
  %RCX.i215 = bitcast %union.anon* %14585 to i64*
  %14586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14587 = getelementptr inbounds %struct.GPR, %struct.GPR* %14586, i32 0, i32 15
  %14588 = getelementptr inbounds %struct.Reg, %struct.Reg* %14587, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %14588 to i64*
  %14589 = load i64, i64* %RBP.i216
  %14590 = sub i64 %14589, 8
  %14591 = load i64, i64* %PC.i214
  %14592 = add i64 %14591, 4
  store i64 %14592, i64* %PC.i214
  %14593 = inttoptr i64 %14590 to i32*
  %14594 = load i32, i32* %14593
  %14595 = sext i32 %14594 to i64
  store i64 %14595, i64* %RCX.i215, align 8
  store %struct.Memory* %loadMem_480d9e, %struct.Memory** %MEMORY
  %loadMem_480da2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14597 = getelementptr inbounds %struct.GPR, %struct.GPR* %14596, i32 0, i32 33
  %14598 = getelementptr inbounds %struct.Reg, %struct.Reg* %14597, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %14598 to i64*
  %14599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14600 = getelementptr inbounds %struct.GPR, %struct.GPR* %14599, i32 0, i32 5
  %14601 = getelementptr inbounds %struct.Reg, %struct.Reg* %14600, i32 0, i32 0
  %RCX.i213 = bitcast %union.anon* %14601 to i64*
  %14602 = load i64, i64* %RCX.i213
  %14603 = load i64, i64* %PC.i212
  %14604 = add i64 %14603, 7
  store i64 %14604, i64* %PC.i212
  %14605 = sext i64 %14602 to i128
  %14606 = and i128 %14605, -18446744073709551616
  %14607 = zext i64 %14602 to i128
  %14608 = or i128 %14606, %14607
  %14609 = mul i128 564, %14608
  %14610 = trunc i128 %14609 to i64
  store i64 %14610, i64* %RCX.i213, align 8
  %14611 = sext i64 %14610 to i128
  %14612 = icmp ne i128 %14611, %14609
  %14613 = zext i1 %14612 to i8
  %14614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14613, i8* %14614, align 1
  %14615 = trunc i128 %14609 to i32
  %14616 = and i32 %14615, 255
  %14617 = call i32 @llvm.ctpop.i32(i32 %14616)
  %14618 = trunc i32 %14617 to i8
  %14619 = and i8 %14618, 1
  %14620 = xor i8 %14619, 1
  %14621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14620, i8* %14621, align 1
  %14622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14622, align 1
  %14623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14623, align 1
  %14624 = lshr i64 %14610, 63
  %14625 = trunc i64 %14624 to i8
  %14626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14625, i8* %14626, align 1
  %14627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14613, i8* %14627, align 1
  store %struct.Memory* %loadMem_480da2, %struct.Memory** %MEMORY
  %loadMem_480da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14629 = getelementptr inbounds %struct.GPR, %struct.GPR* %14628, i32 0, i32 33
  %14630 = getelementptr inbounds %struct.Reg, %struct.Reg* %14629, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %14630 to i64*
  %14631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14632 = getelementptr inbounds %struct.GPR, %struct.GPR* %14631, i32 0, i32 1
  %14633 = getelementptr inbounds %struct.Reg, %struct.Reg* %14632, i32 0, i32 0
  %RAX.i210 = bitcast %union.anon* %14633 to i64*
  %14634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14635 = getelementptr inbounds %struct.GPR, %struct.GPR* %14634, i32 0, i32 5
  %14636 = getelementptr inbounds %struct.Reg, %struct.Reg* %14635, i32 0, i32 0
  %RCX.i211 = bitcast %union.anon* %14636 to i64*
  %14637 = load i64, i64* %RAX.i210
  %14638 = load i64, i64* %RCX.i211
  %14639 = load i64, i64* %PC.i209
  %14640 = add i64 %14639, 3
  store i64 %14640, i64* %PC.i209
  %14641 = add i64 %14638, %14637
  store i64 %14641, i64* %RAX.i210, align 8
  %14642 = icmp ult i64 %14641, %14637
  %14643 = icmp ult i64 %14641, %14638
  %14644 = or i1 %14642, %14643
  %14645 = zext i1 %14644 to i8
  %14646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14645, i8* %14646, align 1
  %14647 = trunc i64 %14641 to i32
  %14648 = and i32 %14647, 255
  %14649 = call i32 @llvm.ctpop.i32(i32 %14648)
  %14650 = trunc i32 %14649 to i8
  %14651 = and i8 %14650, 1
  %14652 = xor i8 %14651, 1
  %14653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14652, i8* %14653, align 1
  %14654 = xor i64 %14638, %14637
  %14655 = xor i64 %14654, %14641
  %14656 = lshr i64 %14655, 4
  %14657 = trunc i64 %14656 to i8
  %14658 = and i8 %14657, 1
  %14659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14658, i8* %14659, align 1
  %14660 = icmp eq i64 %14641, 0
  %14661 = zext i1 %14660 to i8
  %14662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14661, i8* %14662, align 1
  %14663 = lshr i64 %14641, 63
  %14664 = trunc i64 %14663 to i8
  %14665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14664, i8* %14665, align 1
  %14666 = lshr i64 %14637, 63
  %14667 = lshr i64 %14638, 63
  %14668 = xor i64 %14663, %14666
  %14669 = xor i64 %14663, %14667
  %14670 = add i64 %14668, %14669
  %14671 = icmp eq i64 %14670, 2
  %14672 = zext i1 %14671 to i8
  %14673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14672, i8* %14673, align 1
  store %struct.Memory* %loadMem_480da9, %struct.Memory** %MEMORY
  %loadMem_480dac = load %struct.Memory*, %struct.Memory** %MEMORY
  %14674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14675 = getelementptr inbounds %struct.GPR, %struct.GPR* %14674, i32 0, i32 33
  %14676 = getelementptr inbounds %struct.Reg, %struct.Reg* %14675, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %14676 to i64*
  %14677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14678 = getelementptr inbounds %struct.GPR, %struct.GPR* %14677, i32 0, i32 1
  %14679 = getelementptr inbounds %struct.Reg, %struct.Reg* %14678, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %14679 to i64*
  %14680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14681 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14680, i64 0, i64 1
  %YMM1.i208 = bitcast %union.VectorReg* %14681 to %"class.std::bitset"*
  %14682 = bitcast %"class.std::bitset"* %YMM1.i208 to i8*
  %14683 = load i64, i64* %RAX.i207
  %14684 = add i64 %14683, 52
  %14685 = load i64, i64* %PC.i206
  %14686 = add i64 %14685, 5
  store i64 %14686, i64* %PC.i206
  %14687 = inttoptr i64 %14684 to float*
  %14688 = load float, float* %14687
  %14689 = bitcast i8* %14682 to float*
  store float %14688, float* %14689, align 1
  %14690 = getelementptr inbounds i8, i8* %14682, i64 4
  %14691 = bitcast i8* %14690 to float*
  store float 0.000000e+00, float* %14691, align 1
  %14692 = getelementptr inbounds i8, i8* %14682, i64 8
  %14693 = bitcast i8* %14692 to float*
  store float 0.000000e+00, float* %14693, align 1
  %14694 = getelementptr inbounds i8, i8* %14682, i64 12
  %14695 = bitcast i8* %14694 to float*
  store float 0.000000e+00, float* %14695, align 1
  store %struct.Memory* %loadMem_480dac, %struct.Memory** %MEMORY
  %loadMem_480db1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14697 = getelementptr inbounds %struct.GPR, %struct.GPR* %14696, i32 0, i32 33
  %14698 = getelementptr inbounds %struct.Reg, %struct.Reg* %14697, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %14698 to i64*
  %14699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14700 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14699, i64 0, i64 0
  %XMM0.i200 = bitcast %union.VectorReg* %14700 to %union.vec128_t*
  %14701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14702 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14701, i64 0, i64 1
  %XMM1.i201 = bitcast %union.VectorReg* %14702 to %union.vec128_t*
  %14703 = bitcast %union.vec128_t* %XMM1.i201 to i8*
  %14704 = bitcast %union.vec128_t* %XMM0.i200 to i8*
  %14705 = load i64, i64* %PC.i199
  %14706 = add i64 %14705, 3
  store i64 %14706, i64* %PC.i199
  %14707 = bitcast i8* %14703 to <2 x float>*
  %14708 = load <2 x float>, <2 x float>* %14707, align 1
  %14709 = extractelement <2 x float> %14708, i32 0
  %14710 = bitcast i8* %14704 to <2 x float>*
  %14711 = load <2 x float>, <2 x float>* %14710, align 1
  %14712 = extractelement <2 x float> %14711, i32 0
  %14713 = fcmp uno float %14709, %14712
  br i1 %14713, label %14714, label %14726

; <label>:14714:                                  ; preds = %block_.L_480d8f
  %14715 = fadd float %14709, %14712
  %14716 = bitcast float %14715 to i32
  %14717 = and i32 %14716, 2143289344
  %14718 = icmp eq i32 %14717, 2139095040
  %14719 = and i32 %14716, 4194303
  %14720 = icmp ne i32 %14719, 0
  %14721 = and i1 %14718, %14720
  br i1 %14721, label %14722, label %14732

; <label>:14722:                                  ; preds = %14714
  %14723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14724 = load i64, i64* %14723, align 8
  %14725 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %14724, %struct.Memory* %loadMem_480db1)
  br label %routine_ucomiss__xmm0___xmm1.exit202

; <label>:14726:                                  ; preds = %block_.L_480d8f
  %14727 = fcmp ogt float %14709, %14712
  br i1 %14727, label %14732, label %14728

; <label>:14728:                                  ; preds = %14726
  %14729 = fcmp olt float %14709, %14712
  br i1 %14729, label %14732, label %14730

; <label>:14730:                                  ; preds = %14728
  %14731 = fcmp oeq float %14709, %14712
  br i1 %14731, label %14732, label %14739

; <label>:14732:                                  ; preds = %14730, %14728, %14726, %14714
  %14733 = phi i8 [ 0, %14726 ], [ 0, %14728 ], [ 1, %14730 ], [ 1, %14714 ]
  %14734 = phi i8 [ 0, %14726 ], [ 0, %14728 ], [ 0, %14730 ], [ 1, %14714 ]
  %14735 = phi i8 [ 0, %14726 ], [ 1, %14728 ], [ 0, %14730 ], [ 1, %14714 ]
  %14736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14733, i8* %14736, align 1
  %14737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14734, i8* %14737, align 1
  %14738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14735, i8* %14738, align 1
  br label %14739

; <label>:14739:                                  ; preds = %14732, %14730
  %14740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14740, align 1
  %14741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %14741, align 1
  %14742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14742, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit202

routine_ucomiss__xmm0___xmm1.exit202:             ; preds = %14722, %14739
  %14743 = phi %struct.Memory* [ %14725, %14722 ], [ %loadMem_480db1, %14739 ]
  store %struct.Memory* %14743, %struct.Memory** %MEMORY
  %loadMem_480db4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14745 = getelementptr inbounds %struct.GPR, %struct.GPR* %14744, i32 0, i32 33
  %14746 = getelementptr inbounds %struct.Reg, %struct.Reg* %14745, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %14746 to i64*
  %14747 = load i64, i64* %PC.i198
  %14748 = add i64 %14747, 136
  %14749 = load i64, i64* %PC.i198
  %14750 = add i64 %14749, 6
  %14751 = load i64, i64* %PC.i198
  %14752 = add i64 %14751, 6
  store i64 %14752, i64* %PC.i198
  %14753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14754 = load i8, i8* %14753, align 1
  %14755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14756 = load i8, i8* %14755, align 1
  %14757 = or i8 %14756, %14754
  %14758 = icmp ne i8 %14757, 0
  %14759 = zext i1 %14758 to i8
  store i8 %14759, i8* %BRANCH_TAKEN, align 1
  %14760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14761 = select i1 %14758, i64 %14748, i64 %14750
  store i64 %14761, i64* %14760, align 8
  store %struct.Memory* %loadMem_480db4, %struct.Memory** %MEMORY
  %loadBr_480db4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480db4 = icmp eq i8 %loadBr_480db4, 1
  br i1 %cmpBr_480db4, label %block_.L_480e3c, label %block_480dba

block_480dba:                                     ; preds = %routine_ucomiss__xmm0___xmm1.exit202
  %loadMem_480dba = load %struct.Memory*, %struct.Memory** %MEMORY
  %14762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14763 = getelementptr inbounds %struct.GPR, %struct.GPR* %14762, i32 0, i32 33
  %14764 = getelementptr inbounds %struct.Reg, %struct.Reg* %14763, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %14764 to i64*
  %14765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14766 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14765, i64 0, i64 0
  %YMM0.i196 = bitcast %union.VectorReg* %14766 to %"class.std::bitset"*
  %14767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14768 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14767, i64 0, i64 0
  %XMM0.i197 = bitcast %union.VectorReg* %14768 to %union.vec128_t*
  %14769 = bitcast %"class.std::bitset"* %YMM0.i196 to i8*
  %14770 = bitcast %"class.std::bitset"* %YMM0.i196 to i8*
  %14771 = bitcast %union.vec128_t* %XMM0.i197 to i8*
  %14772 = load i64, i64* %PC.i195
  %14773 = add i64 %14772, 3
  store i64 %14773, i64* %PC.i195
  %14774 = bitcast i8* %14770 to i64*
  %14775 = load i64, i64* %14774, align 1
  %14776 = getelementptr inbounds i8, i8* %14770, i64 8
  %14777 = bitcast i8* %14776 to i64*
  %14778 = load i64, i64* %14777, align 1
  %14779 = bitcast i8* %14771 to i64*
  %14780 = load i64, i64* %14779, align 1
  %14781 = getelementptr inbounds i8, i8* %14771, i64 8
  %14782 = bitcast i8* %14781 to i64*
  %14783 = load i64, i64* %14782, align 1
  %14784 = xor i64 %14780, %14775
  %14785 = xor i64 %14783, %14778
  %14786 = trunc i64 %14784 to i32
  %14787 = lshr i64 %14784, 32
  %14788 = trunc i64 %14787 to i32
  %14789 = bitcast i8* %14769 to i32*
  store i32 %14786, i32* %14789, align 1
  %14790 = getelementptr inbounds i8, i8* %14769, i64 4
  %14791 = bitcast i8* %14790 to i32*
  store i32 %14788, i32* %14791, align 1
  %14792 = trunc i64 %14785 to i32
  %14793 = getelementptr inbounds i8, i8* %14769, i64 8
  %14794 = bitcast i8* %14793 to i32*
  store i32 %14792, i32* %14794, align 1
  %14795 = lshr i64 %14785, 32
  %14796 = trunc i64 %14795 to i32
  %14797 = getelementptr inbounds i8, i8* %14769, i64 12
  %14798 = bitcast i8* %14797 to i32*
  store i32 %14796, i32* %14798, align 1
  store %struct.Memory* %loadMem_480dba, %struct.Memory** %MEMORY
  %loadMem_480dbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14800 = getelementptr inbounds %struct.GPR, %struct.GPR* %14799, i32 0, i32 33
  %14801 = getelementptr inbounds %struct.Reg, %struct.Reg* %14800, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %14801 to i64*
  %14802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14803 = getelementptr inbounds %struct.GPR, %struct.GPR* %14802, i32 0, i32 1
  %14804 = getelementptr inbounds %struct.Reg, %struct.Reg* %14803, i32 0, i32 0
  %RAX.i194 = bitcast %union.anon* %14804 to i64*
  %14805 = load i64, i64* %PC.i193
  %14806 = add i64 %14805, 10
  store i64 %14806, i64* %PC.i193
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i194, align 8
  store %struct.Memory* %loadMem_480dbd, %struct.Memory** %MEMORY
  %loadMem_480dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14808 = getelementptr inbounds %struct.GPR, %struct.GPR* %14807, i32 0, i32 33
  %14809 = getelementptr inbounds %struct.Reg, %struct.Reg* %14808, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %14809 to i64*
  %14810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14811 = getelementptr inbounds %struct.GPR, %struct.GPR* %14810, i32 0, i32 5
  %14812 = getelementptr inbounds %struct.Reg, %struct.Reg* %14811, i32 0, i32 0
  %RCX.i191 = bitcast %union.anon* %14812 to i64*
  %14813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14814 = getelementptr inbounds %struct.GPR, %struct.GPR* %14813, i32 0, i32 15
  %14815 = getelementptr inbounds %struct.Reg, %struct.Reg* %14814, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %14815 to i64*
  %14816 = load i64, i64* %RBP.i192
  %14817 = sub i64 %14816, 8
  %14818 = load i64, i64* %PC.i190
  %14819 = add i64 %14818, 4
  store i64 %14819, i64* %PC.i190
  %14820 = inttoptr i64 %14817 to i32*
  %14821 = load i32, i32* %14820
  %14822 = sext i32 %14821 to i64
  store i64 %14822, i64* %RCX.i191, align 8
  store %struct.Memory* %loadMem_480dc7, %struct.Memory** %MEMORY
  %loadMem_480dcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14824 = getelementptr inbounds %struct.GPR, %struct.GPR* %14823, i32 0, i32 33
  %14825 = getelementptr inbounds %struct.Reg, %struct.Reg* %14824, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %14825 to i64*
  %14826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14827 = getelementptr inbounds %struct.GPR, %struct.GPR* %14826, i32 0, i32 5
  %14828 = getelementptr inbounds %struct.Reg, %struct.Reg* %14827, i32 0, i32 0
  %RCX.i189 = bitcast %union.anon* %14828 to i64*
  %14829 = load i64, i64* %RCX.i189
  %14830 = load i64, i64* %PC.i188
  %14831 = add i64 %14830, 7
  store i64 %14831, i64* %PC.i188
  %14832 = sext i64 %14829 to i128
  %14833 = and i128 %14832, -18446744073709551616
  %14834 = zext i64 %14829 to i128
  %14835 = or i128 %14833, %14834
  %14836 = mul i128 564, %14835
  %14837 = trunc i128 %14836 to i64
  store i64 %14837, i64* %RCX.i189, align 8
  %14838 = sext i64 %14837 to i128
  %14839 = icmp ne i128 %14838, %14836
  %14840 = zext i1 %14839 to i8
  %14841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14840, i8* %14841, align 1
  %14842 = trunc i128 %14836 to i32
  %14843 = and i32 %14842, 255
  %14844 = call i32 @llvm.ctpop.i32(i32 %14843)
  %14845 = trunc i32 %14844 to i8
  %14846 = and i8 %14845, 1
  %14847 = xor i8 %14846, 1
  %14848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14847, i8* %14848, align 1
  %14849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14849, align 1
  %14850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14850, align 1
  %14851 = lshr i64 %14837, 63
  %14852 = trunc i64 %14851 to i8
  %14853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14852, i8* %14853, align 1
  %14854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14840, i8* %14854, align 1
  store %struct.Memory* %loadMem_480dcb, %struct.Memory** %MEMORY
  %loadMem_480dd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14856 = getelementptr inbounds %struct.GPR, %struct.GPR* %14855, i32 0, i32 33
  %14857 = getelementptr inbounds %struct.Reg, %struct.Reg* %14856, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %14857 to i64*
  %14858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14859 = getelementptr inbounds %struct.GPR, %struct.GPR* %14858, i32 0, i32 1
  %14860 = getelementptr inbounds %struct.Reg, %struct.Reg* %14859, i32 0, i32 0
  %RAX.i186 = bitcast %union.anon* %14860 to i64*
  %14861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14862 = getelementptr inbounds %struct.GPR, %struct.GPR* %14861, i32 0, i32 5
  %14863 = getelementptr inbounds %struct.Reg, %struct.Reg* %14862, i32 0, i32 0
  %RCX.i187 = bitcast %union.anon* %14863 to i64*
  %14864 = load i64, i64* %RAX.i186
  %14865 = load i64, i64* %RCX.i187
  %14866 = load i64, i64* %PC.i185
  %14867 = add i64 %14866, 3
  store i64 %14867, i64* %PC.i185
  %14868 = add i64 %14865, %14864
  store i64 %14868, i64* %RAX.i186, align 8
  %14869 = icmp ult i64 %14868, %14864
  %14870 = icmp ult i64 %14868, %14865
  %14871 = or i1 %14869, %14870
  %14872 = zext i1 %14871 to i8
  %14873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14872, i8* %14873, align 1
  %14874 = trunc i64 %14868 to i32
  %14875 = and i32 %14874, 255
  %14876 = call i32 @llvm.ctpop.i32(i32 %14875)
  %14877 = trunc i32 %14876 to i8
  %14878 = and i8 %14877, 1
  %14879 = xor i8 %14878, 1
  %14880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14879, i8* %14880, align 1
  %14881 = xor i64 %14865, %14864
  %14882 = xor i64 %14881, %14868
  %14883 = lshr i64 %14882, 4
  %14884 = trunc i64 %14883 to i8
  %14885 = and i8 %14884, 1
  %14886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14885, i8* %14886, align 1
  %14887 = icmp eq i64 %14868, 0
  %14888 = zext i1 %14887 to i8
  %14889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14888, i8* %14889, align 1
  %14890 = lshr i64 %14868, 63
  %14891 = trunc i64 %14890 to i8
  %14892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14891, i8* %14892, align 1
  %14893 = lshr i64 %14864, 63
  %14894 = lshr i64 %14865, 63
  %14895 = xor i64 %14890, %14893
  %14896 = xor i64 %14890, %14894
  %14897 = add i64 %14895, %14896
  %14898 = icmp eq i64 %14897, 2
  %14899 = zext i1 %14898 to i8
  %14900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14899, i8* %14900, align 1
  store %struct.Memory* %loadMem_480dd2, %struct.Memory** %MEMORY
  %loadMem_480dd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14902 = getelementptr inbounds %struct.GPR, %struct.GPR* %14901, i32 0, i32 33
  %14903 = getelementptr inbounds %struct.Reg, %struct.Reg* %14902, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %14903 to i64*
  %14904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14905 = getelementptr inbounds %struct.GPR, %struct.GPR* %14904, i32 0, i32 1
  %14906 = getelementptr inbounds %struct.Reg, %struct.Reg* %14905, i32 0, i32 0
  %RAX.i183 = bitcast %union.anon* %14906 to i64*
  %14907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14908 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14907, i64 0, i64 1
  %YMM1.i184 = bitcast %union.VectorReg* %14908 to %"class.std::bitset"*
  %14909 = bitcast %"class.std::bitset"* %YMM1.i184 to i8*
  %14910 = load i64, i64* %RAX.i183
  %14911 = add i64 %14910, 52
  %14912 = load i64, i64* %PC.i182
  %14913 = add i64 %14912, 5
  store i64 %14913, i64* %PC.i182
  %14914 = inttoptr i64 %14911 to float*
  %14915 = load float, float* %14914
  %14916 = bitcast i8* %14909 to float*
  store float %14915, float* %14916, align 1
  %14917 = getelementptr inbounds i8, i8* %14909, i64 4
  %14918 = bitcast i8* %14917 to float*
  store float 0.000000e+00, float* %14918, align 1
  %14919 = getelementptr inbounds i8, i8* %14909, i64 8
  %14920 = bitcast i8* %14919 to float*
  store float 0.000000e+00, float* %14920, align 1
  %14921 = getelementptr inbounds i8, i8* %14909, i64 12
  %14922 = bitcast i8* %14921 to float*
  store float 0.000000e+00, float* %14922, align 1
  store %struct.Memory* %loadMem_480dd5, %struct.Memory** %MEMORY
  %loadMem_480dda = load %struct.Memory*, %struct.Memory** %MEMORY
  %14923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14924 = getelementptr inbounds %struct.GPR, %struct.GPR* %14923, i32 0, i32 33
  %14925 = getelementptr inbounds %struct.Reg, %struct.Reg* %14924, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %14925 to i64*
  %14926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14927 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14926, i64 0, i64 0
  %XMM0.i176 = bitcast %union.VectorReg* %14927 to %union.vec128_t*
  %14928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14929 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14928, i64 0, i64 1
  %XMM1.i177 = bitcast %union.VectorReg* %14929 to %union.vec128_t*
  %14930 = bitcast %union.vec128_t* %XMM1.i177 to i8*
  %14931 = bitcast %union.vec128_t* %XMM0.i176 to i8*
  %14932 = load i64, i64* %PC.i175
  %14933 = add i64 %14932, 3
  store i64 %14933, i64* %PC.i175
  %14934 = bitcast i8* %14930 to <2 x float>*
  %14935 = load <2 x float>, <2 x float>* %14934, align 1
  %14936 = extractelement <2 x float> %14935, i32 0
  %14937 = bitcast i8* %14931 to <2 x float>*
  %14938 = load <2 x float>, <2 x float>* %14937, align 1
  %14939 = extractelement <2 x float> %14938, i32 0
  %14940 = fcmp uno float %14936, %14939
  br i1 %14940, label %14941, label %14953

; <label>:14941:                                  ; preds = %block_480dba
  %14942 = fadd float %14936, %14939
  %14943 = bitcast float %14942 to i32
  %14944 = and i32 %14943, 2143289344
  %14945 = icmp eq i32 %14944, 2139095040
  %14946 = and i32 %14943, 4194303
  %14947 = icmp ne i32 %14946, 0
  %14948 = and i1 %14945, %14947
  br i1 %14948, label %14949, label %14959

; <label>:14949:                                  ; preds = %14941
  %14950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14951 = load i64, i64* %14950, align 8
  %14952 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %14951, %struct.Memory* %loadMem_480dda)
  br label %routine_ucomiss__xmm0___xmm1.exit178

; <label>:14953:                                  ; preds = %block_480dba
  %14954 = fcmp ogt float %14936, %14939
  br i1 %14954, label %14959, label %14955

; <label>:14955:                                  ; preds = %14953
  %14956 = fcmp olt float %14936, %14939
  br i1 %14956, label %14959, label %14957

; <label>:14957:                                  ; preds = %14955
  %14958 = fcmp oeq float %14936, %14939
  br i1 %14958, label %14959, label %14966

; <label>:14959:                                  ; preds = %14957, %14955, %14953, %14941
  %14960 = phi i8 [ 0, %14953 ], [ 0, %14955 ], [ 1, %14957 ], [ 1, %14941 ]
  %14961 = phi i8 [ 0, %14953 ], [ 0, %14955 ], [ 0, %14957 ], [ 1, %14941 ]
  %14962 = phi i8 [ 0, %14953 ], [ 1, %14955 ], [ 0, %14957 ], [ 1, %14941 ]
  %14963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14960, i8* %14963, align 1
  %14964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14961, i8* %14964, align 1
  %14965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14962, i8* %14965, align 1
  br label %14966

; <label>:14966:                                  ; preds = %14959, %14957
  %14967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14967, align 1
  %14968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %14968, align 1
  %14969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14969, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit178

routine_ucomiss__xmm0___xmm1.exit178:             ; preds = %14949, %14966
  %14970 = phi %struct.Memory* [ %14952, %14949 ], [ %loadMem_480dda, %14966 ]
  store %struct.Memory* %14970, %struct.Memory** %MEMORY
  %loadMem_480ddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14972 = getelementptr inbounds %struct.GPR, %struct.GPR* %14971, i32 0, i32 33
  %14973 = getelementptr inbounds %struct.Reg, %struct.Reg* %14972, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %14973 to i64*
  %14974 = load i64, i64* %PC.i174
  %14975 = add i64 %14974, 95
  %14976 = load i64, i64* %PC.i174
  %14977 = add i64 %14976, 6
  %14978 = load i64, i64* %PC.i174
  %14979 = add i64 %14978, 6
  store i64 %14979, i64* %PC.i174
  %14980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14981 = load i8, i8* %14980, align 1
  %14982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14983 = load i8, i8* %14982, align 1
  %14984 = or i8 %14983, %14981
  %14985 = icmp ne i8 %14984, 0
  %14986 = zext i1 %14985 to i8
  store i8 %14986, i8* %BRANCH_TAKEN, align 1
  %14987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14988 = select i1 %14985, i64 %14975, i64 %14977
  store i64 %14988, i64* %14987, align 8
  store %struct.Memory* %loadMem_480ddd, %struct.Memory** %MEMORY
  %loadBr_480ddd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480ddd = icmp eq i8 %loadBr_480ddd, 1
  br i1 %cmpBr_480ddd, label %block_.L_480e3c, label %block_480de3

block_480de3:                                     ; preds = %routine_ucomiss__xmm0___xmm1.exit178
  %loadMem_480de3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14990 = getelementptr inbounds %struct.GPR, %struct.GPR* %14989, i32 0, i32 33
  %14991 = getelementptr inbounds %struct.Reg, %struct.Reg* %14990, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %14991 to i64*
  %14992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14993 = getelementptr inbounds %struct.GPR, %struct.GPR* %14992, i32 0, i32 1
  %14994 = getelementptr inbounds %struct.Reg, %struct.Reg* %14993, i32 0, i32 0
  %RAX.i173 = bitcast %union.anon* %14994 to i64*
  %14995 = load i64, i64* %PC.i172
  %14996 = add i64 %14995, 10
  store i64 %14996, i64* %PC.i172
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i173, align 8
  store %struct.Memory* %loadMem_480de3, %struct.Memory** %MEMORY
  %loadMem_480ded = load %struct.Memory*, %struct.Memory** %MEMORY
  %14997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14998 = getelementptr inbounds %struct.GPR, %struct.GPR* %14997, i32 0, i32 33
  %14999 = getelementptr inbounds %struct.Reg, %struct.Reg* %14998, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %14999 to i64*
  %15000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15001 = getelementptr inbounds %struct.GPR, %struct.GPR* %15000, i32 0, i32 5
  %15002 = getelementptr inbounds %struct.Reg, %struct.Reg* %15001, i32 0, i32 0
  %RCX.i170 = bitcast %union.anon* %15002 to i64*
  %15003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15004 = getelementptr inbounds %struct.GPR, %struct.GPR* %15003, i32 0, i32 15
  %15005 = getelementptr inbounds %struct.Reg, %struct.Reg* %15004, i32 0, i32 0
  %RBP.i171 = bitcast %union.anon* %15005 to i64*
  %15006 = load i64, i64* %RBP.i171
  %15007 = sub i64 %15006, 8
  %15008 = load i64, i64* %PC.i169
  %15009 = add i64 %15008, 4
  store i64 %15009, i64* %PC.i169
  %15010 = inttoptr i64 %15007 to i32*
  %15011 = load i32, i32* %15010
  %15012 = sext i32 %15011 to i64
  store i64 %15012, i64* %RCX.i170, align 8
  store %struct.Memory* %loadMem_480ded, %struct.Memory** %MEMORY
  %loadMem_480df1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15014 = getelementptr inbounds %struct.GPR, %struct.GPR* %15013, i32 0, i32 33
  %15015 = getelementptr inbounds %struct.Reg, %struct.Reg* %15014, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %15015 to i64*
  %15016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15017 = getelementptr inbounds %struct.GPR, %struct.GPR* %15016, i32 0, i32 5
  %15018 = getelementptr inbounds %struct.Reg, %struct.Reg* %15017, i32 0, i32 0
  %RCX.i168 = bitcast %union.anon* %15018 to i64*
  %15019 = load i64, i64* %RCX.i168
  %15020 = load i64, i64* %PC.i167
  %15021 = add i64 %15020, 7
  store i64 %15021, i64* %PC.i167
  %15022 = sext i64 %15019 to i128
  %15023 = and i128 %15022, -18446744073709551616
  %15024 = zext i64 %15019 to i128
  %15025 = or i128 %15023, %15024
  %15026 = mul i128 564, %15025
  %15027 = trunc i128 %15026 to i64
  store i64 %15027, i64* %RCX.i168, align 8
  %15028 = sext i64 %15027 to i128
  %15029 = icmp ne i128 %15028, %15026
  %15030 = zext i1 %15029 to i8
  %15031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15030, i8* %15031, align 1
  %15032 = trunc i128 %15026 to i32
  %15033 = and i32 %15032, 255
  %15034 = call i32 @llvm.ctpop.i32(i32 %15033)
  %15035 = trunc i32 %15034 to i8
  %15036 = and i8 %15035, 1
  %15037 = xor i8 %15036, 1
  %15038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15037, i8* %15038, align 1
  %15039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15039, align 1
  %15040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15040, align 1
  %15041 = lshr i64 %15027, 63
  %15042 = trunc i64 %15041 to i8
  %15043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15042, i8* %15043, align 1
  %15044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15030, i8* %15044, align 1
  store %struct.Memory* %loadMem_480df1, %struct.Memory** %MEMORY
  %loadMem_480df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15046 = getelementptr inbounds %struct.GPR, %struct.GPR* %15045, i32 0, i32 33
  %15047 = getelementptr inbounds %struct.Reg, %struct.Reg* %15046, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %15047 to i64*
  %15048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15049 = getelementptr inbounds %struct.GPR, %struct.GPR* %15048, i32 0, i32 1
  %15050 = getelementptr inbounds %struct.Reg, %struct.Reg* %15049, i32 0, i32 0
  %RAX.i165 = bitcast %union.anon* %15050 to i64*
  %15051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15052 = getelementptr inbounds %struct.GPR, %struct.GPR* %15051, i32 0, i32 5
  %15053 = getelementptr inbounds %struct.Reg, %struct.Reg* %15052, i32 0, i32 0
  %RCX.i166 = bitcast %union.anon* %15053 to i64*
  %15054 = load i64, i64* %RAX.i165
  %15055 = load i64, i64* %RCX.i166
  %15056 = load i64, i64* %PC.i164
  %15057 = add i64 %15056, 3
  store i64 %15057, i64* %PC.i164
  %15058 = add i64 %15055, %15054
  store i64 %15058, i64* %RAX.i165, align 8
  %15059 = icmp ult i64 %15058, %15054
  %15060 = icmp ult i64 %15058, %15055
  %15061 = or i1 %15059, %15060
  %15062 = zext i1 %15061 to i8
  %15063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15062, i8* %15063, align 1
  %15064 = trunc i64 %15058 to i32
  %15065 = and i32 %15064, 255
  %15066 = call i32 @llvm.ctpop.i32(i32 %15065)
  %15067 = trunc i32 %15066 to i8
  %15068 = and i8 %15067, 1
  %15069 = xor i8 %15068, 1
  %15070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15069, i8* %15070, align 1
  %15071 = xor i64 %15055, %15054
  %15072 = xor i64 %15071, %15058
  %15073 = lshr i64 %15072, 4
  %15074 = trunc i64 %15073 to i8
  %15075 = and i8 %15074, 1
  %15076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15075, i8* %15076, align 1
  %15077 = icmp eq i64 %15058, 0
  %15078 = zext i1 %15077 to i8
  %15079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15078, i8* %15079, align 1
  %15080 = lshr i64 %15058, 63
  %15081 = trunc i64 %15080 to i8
  %15082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15081, i8* %15082, align 1
  %15083 = lshr i64 %15054, 63
  %15084 = lshr i64 %15055, 63
  %15085 = xor i64 %15080, %15083
  %15086 = xor i64 %15080, %15084
  %15087 = add i64 %15085, %15086
  %15088 = icmp eq i64 %15087, 2
  %15089 = zext i1 %15088 to i8
  %15090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15089, i8* %15090, align 1
  store %struct.Memory* %loadMem_480df8, %struct.Memory** %MEMORY
  %loadMem_480dfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %15091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15092 = getelementptr inbounds %struct.GPR, %struct.GPR* %15091, i32 0, i32 33
  %15093 = getelementptr inbounds %struct.Reg, %struct.Reg* %15092, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %15093 to i64*
  %15094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15095 = getelementptr inbounds %struct.GPR, %struct.GPR* %15094, i32 0, i32 1
  %15096 = getelementptr inbounds %struct.Reg, %struct.Reg* %15095, i32 0, i32 0
  %RAX.i162 = bitcast %union.anon* %15096 to i64*
  %15097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15098 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15097, i64 0, i64 0
  %YMM0.i163 = bitcast %union.VectorReg* %15098 to %"class.std::bitset"*
  %15099 = bitcast %"class.std::bitset"* %YMM0.i163 to i8*
  %15100 = load i64, i64* %RAX.i162
  %15101 = add i64 %15100, 52
  %15102 = load i64, i64* %PC.i161
  %15103 = add i64 %15102, 5
  store i64 %15103, i64* %PC.i161
  %15104 = inttoptr i64 %15101 to float*
  %15105 = load float, float* %15104
  %15106 = bitcast i8* %15099 to float*
  store float %15105, float* %15106, align 1
  %15107 = getelementptr inbounds i8, i8* %15099, i64 4
  %15108 = bitcast i8* %15107 to float*
  store float 0.000000e+00, float* %15108, align 1
  %15109 = getelementptr inbounds i8, i8* %15099, i64 8
  %15110 = bitcast i8* %15109 to float*
  store float 0.000000e+00, float* %15110, align 1
  %15111 = getelementptr inbounds i8, i8* %15099, i64 12
  %15112 = bitcast i8* %15111 to float*
  store float 0.000000e+00, float* %15112, align 1
  store %struct.Memory* %loadMem_480dfb, %struct.Memory** %MEMORY
  %loadMem_480e00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15114 = getelementptr inbounds %struct.GPR, %struct.GPR* %15113, i32 0, i32 33
  %15115 = getelementptr inbounds %struct.Reg, %struct.Reg* %15114, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %15115 to i64*
  %15116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15117 = getelementptr inbounds %struct.GPR, %struct.GPR* %15116, i32 0, i32 15
  %15118 = getelementptr inbounds %struct.Reg, %struct.Reg* %15117, i32 0, i32 0
  %RBP.i159 = bitcast %union.anon* %15118 to i64*
  %15119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15120 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15119, i64 0, i64 0
  %XMM0.i160 = bitcast %union.VectorReg* %15120 to %union.vec128_t*
  %15121 = load i64, i64* %RBP.i159
  %15122 = sub i64 %15121, 24
  %15123 = bitcast %union.vec128_t* %XMM0.i160 to i8*
  %15124 = load i64, i64* %PC.i158
  %15125 = add i64 %15124, 5
  store i64 %15125, i64* %PC.i158
  %15126 = bitcast i8* %15123 to <2 x float>*
  %15127 = load <2 x float>, <2 x float>* %15126, align 1
  %15128 = extractelement <2 x float> %15127, i32 0
  %15129 = inttoptr i64 %15122 to float*
  store float %15128, float* %15129
  store %struct.Memory* %loadMem_480e00, %struct.Memory** %MEMORY
  %loadMem_480e05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15131 = getelementptr inbounds %struct.GPR, %struct.GPR* %15130, i32 0, i32 33
  %15132 = getelementptr inbounds %struct.Reg, %struct.Reg* %15131, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %15132 to i64*
  %15133 = load i64, i64* %PC.i157
  %15134 = add i64 %15133, 8
  store i64 %15134, i64* %PC.i157
  %15135 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %15136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15136, align 1
  %15137 = and i32 %15135, 255
  %15138 = call i32 @llvm.ctpop.i32(i32 %15137)
  %15139 = trunc i32 %15138 to i8
  %15140 = and i8 %15139, 1
  %15141 = xor i8 %15140, 1
  %15142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15141, i8* %15142, align 1
  %15143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15143, align 1
  %15144 = icmp eq i32 %15135, 0
  %15145 = zext i1 %15144 to i8
  %15146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15145, i8* %15146, align 1
  %15147 = lshr i32 %15135, 31
  %15148 = trunc i32 %15147 to i8
  %15149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15148, i8* %15149, align 1
  %15150 = lshr i32 %15135, 31
  %15151 = xor i32 %15147, %15150
  %15152 = add i32 %15151, %15150
  %15153 = icmp eq i32 %15152, 2
  %15154 = zext i1 %15153 to i8
  %15155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15154, i8* %15155, align 1
  store %struct.Memory* %loadMem_480e05, %struct.Memory** %MEMORY
  %loadMem_480e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15157 = getelementptr inbounds %struct.GPR, %struct.GPR* %15156, i32 0, i32 33
  %15158 = getelementptr inbounds %struct.Reg, %struct.Reg* %15157, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %15158 to i64*
  %15159 = load i64, i64* %PC.i156
  %15160 = add i64 %15159, 11
  %15161 = load i64, i64* %PC.i156
  %15162 = add i64 %15161, 6
  %15163 = load i64, i64* %PC.i156
  %15164 = add i64 %15163, 6
  store i64 %15164, i64* %PC.i156
  %15165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15166 = load i8, i8* %15165, align 1
  %15167 = icmp eq i8 %15166, 0
  %15168 = zext i1 %15167 to i8
  store i8 %15168, i8* %BRANCH_TAKEN, align 1
  %15169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15170 = select i1 %15167, i64 %15160, i64 %15162
  store i64 %15170, i64* %15169, align 8
  store %struct.Memory* %loadMem_480e0d, %struct.Memory** %MEMORY
  %loadBr_480e0d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480e0d = icmp eq i8 %loadBr_480e0d, 1
  br i1 %cmpBr_480e0d, label %block_.L_480e18, label %block_480e13

block_480e13:                                     ; preds = %block_480de3
  %loadMem_480e13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15172 = getelementptr inbounds %struct.GPR, %struct.GPR* %15171, i32 0, i32 33
  %15173 = getelementptr inbounds %struct.Reg, %struct.Reg* %15172, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %15173 to i64*
  %15174 = load i64, i64* %PC.i155
  %15175 = add i64 %15174, 36
  %15176 = load i64, i64* %PC.i155
  %15177 = add i64 %15176, 5
  store i64 %15177, i64* %PC.i155
  %15178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15175, i64* %15178, align 8
  store %struct.Memory* %loadMem_480e13, %struct.Memory** %MEMORY
  br label %block_.L_480e37

block_.L_480e18:                                  ; preds = %block_480de3
  %loadMem_480e18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15180 = getelementptr inbounds %struct.GPR, %struct.GPR* %15179, i32 0, i32 33
  %15181 = getelementptr inbounds %struct.Reg, %struct.Reg* %15180, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %15181 to i64*
  %15182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15183 = getelementptr inbounds %struct.GPR, %struct.GPR* %15182, i32 0, i32 11
  %15184 = getelementptr inbounds %struct.Reg, %struct.Reg* %15183, i32 0, i32 0
  %RDI.i154 = bitcast %union.anon* %15184 to i64*
  %15185 = load i64, i64* %PC.i153
  %15186 = add i64 %15185, 10
  store i64 %15186, i64* %PC.i153
  store i64 ptrtoint (%G__0x5821b4_type* @G__0x5821b4 to i64), i64* %RDI.i154, align 8
  store %struct.Memory* %loadMem_480e18, %struct.Memory** %MEMORY
  %loadMem_480e22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15188 = getelementptr inbounds %struct.GPR, %struct.GPR* %15187, i32 0, i32 33
  %15189 = getelementptr inbounds %struct.Reg, %struct.Reg* %15188, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %15189 to i64*
  %15190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15191 = getelementptr inbounds %struct.GPR, %struct.GPR* %15190, i32 0, i32 9
  %15192 = getelementptr inbounds %struct.Reg, %struct.Reg* %15191, i32 0, i32 0
  %RSI.i151 = bitcast %union.anon* %15192 to i64*
  %15193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15194 = getelementptr inbounds %struct.GPR, %struct.GPR* %15193, i32 0, i32 15
  %15195 = getelementptr inbounds %struct.Reg, %struct.Reg* %15194, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %15195 to i64*
  %15196 = load i64, i64* %RBP.i152
  %15197 = sub i64 %15196, 8
  %15198 = load i64, i64* %PC.i150
  %15199 = add i64 %15198, 3
  store i64 %15199, i64* %PC.i150
  %15200 = inttoptr i64 %15197 to i32*
  %15201 = load i32, i32* %15200
  %15202 = zext i32 %15201 to i64
  store i64 %15202, i64* %RSI.i151, align 8
  store %struct.Memory* %loadMem_480e22, %struct.Memory** %MEMORY
  %loadMem_480e25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15204 = getelementptr inbounds %struct.GPR, %struct.GPR* %15203, i32 0, i32 33
  %15205 = getelementptr inbounds %struct.Reg, %struct.Reg* %15204, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %15205 to i64*
  %15206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15207 = getelementptr inbounds %struct.GPR, %struct.GPR* %15206, i32 0, i32 15
  %15208 = getelementptr inbounds %struct.Reg, %struct.Reg* %15207, i32 0, i32 0
  %RBP.i148 = bitcast %union.anon* %15208 to i64*
  %15209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15210 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15209, i64 0, i64 0
  %YMM0.i149 = bitcast %union.VectorReg* %15210 to %"class.std::bitset"*
  %15211 = bitcast %"class.std::bitset"* %YMM0.i149 to i8*
  %15212 = load i64, i64* %RBP.i148
  %15213 = sub i64 %15212, 24
  %15214 = load i64, i64* %PC.i147
  %15215 = add i64 %15214, 5
  store i64 %15215, i64* %PC.i147
  %15216 = inttoptr i64 %15213 to float*
  %15217 = load float, float* %15216
  %15218 = fpext float %15217 to double
  %15219 = bitcast i8* %15211 to double*
  store double %15218, double* %15219, align 1
  store %struct.Memory* %loadMem_480e25, %struct.Memory** %MEMORY
  %loadMem_480e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15221 = getelementptr inbounds %struct.GPR, %struct.GPR* %15220, i32 0, i32 33
  %15222 = getelementptr inbounds %struct.Reg, %struct.Reg* %15221, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %15222 to i64*
  %15223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15224 = getelementptr inbounds %struct.GPR, %struct.GPR* %15223, i32 0, i32 1
  %15225 = getelementptr inbounds %struct.Reg, %struct.Reg* %15224, i32 0, i32 0
  %15226 = bitcast %union.anon* %15225 to %struct.anon.2*
  %AL.i146 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15226, i32 0, i32 0
  %15227 = load i64, i64* %PC.i145
  %15228 = add i64 %15227, 2
  store i64 %15228, i64* %PC.i145
  store i8 1, i8* %AL.i146, align 1
  store %struct.Memory* %loadMem_480e2a, %struct.Memory** %MEMORY
  %loadMem1_480e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15230 = getelementptr inbounds %struct.GPR, %struct.GPR* %15229, i32 0, i32 33
  %15231 = getelementptr inbounds %struct.Reg, %struct.Reg* %15230, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %15231 to i64*
  %15232 = load i64, i64* %PC.i144
  %15233 = add i64 %15232, -192636
  %15234 = load i64, i64* %PC.i144
  %15235 = add i64 %15234, 5
  %15236 = load i64, i64* %PC.i144
  %15237 = add i64 %15236, 5
  store i64 %15237, i64* %PC.i144
  %15238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15239 = load i64, i64* %15238, align 8
  %15240 = add i64 %15239, -8
  %15241 = inttoptr i64 %15240 to i64*
  store i64 %15235, i64* %15241
  store i64 %15240, i64* %15238, align 8
  %15242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15233, i64* %15242, align 8
  store %struct.Memory* %loadMem1_480e2c, %struct.Memory** %MEMORY
  %loadMem2_480e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480e2c = load i64, i64* %3
  %call2_480e2c = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_480e2c, %struct.Memory* %loadMem2_480e2c)
  store %struct.Memory* %call2_480e2c, %struct.Memory** %MEMORY
  %loadMem_480e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15244 = getelementptr inbounds %struct.GPR, %struct.GPR* %15243, i32 0, i32 33
  %15245 = getelementptr inbounds %struct.Reg, %struct.Reg* %15244, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %15245 to i64*
  %15246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15247 = getelementptr inbounds %struct.GPR, %struct.GPR* %15246, i32 0, i32 1
  %15248 = getelementptr inbounds %struct.Reg, %struct.Reg* %15247, i32 0, i32 0
  %EAX.i142 = bitcast %union.anon* %15248 to i32*
  %15249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15250 = getelementptr inbounds %struct.GPR, %struct.GPR* %15249, i32 0, i32 15
  %15251 = getelementptr inbounds %struct.Reg, %struct.Reg* %15250, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %15251 to i64*
  %15252 = load i64, i64* %RBP.i143
  %15253 = sub i64 %15252, 200
  %15254 = load i32, i32* %EAX.i142
  %15255 = zext i32 %15254 to i64
  %15256 = load i64, i64* %PC.i141
  %15257 = add i64 %15256, 6
  store i64 %15257, i64* %PC.i141
  %15258 = inttoptr i64 %15253 to i32*
  store i32 %15254, i32* %15258
  store %struct.Memory* %loadMem_480e31, %struct.Memory** %MEMORY
  br label %block_.L_480e37

block_.L_480e37:                                  ; preds = %block_.L_480e18, %block_480e13
  %loadMem_480e37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15260 = getelementptr inbounds %struct.GPR, %struct.GPR* %15259, i32 0, i32 33
  %15261 = getelementptr inbounds %struct.Reg, %struct.Reg* %15260, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %15261 to i64*
  %15262 = load i64, i64* %PC.i140
  %15263 = add i64 %15262, 5
  %15264 = load i64, i64* %PC.i140
  %15265 = add i64 %15264, 5
  store i64 %15265, i64* %PC.i140
  %15266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15263, i64* %15266, align 8
  store %struct.Memory* %loadMem_480e37, %struct.Memory** %MEMORY
  br label %block_.L_480e3c

block_.L_480e3c:                                  ; preds = %block_.L_480e37, %routine_ucomiss__xmm0___xmm1.exit178, %routine_ucomiss__xmm0___xmm1.exit202
  %loadMem_480e3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15268 = getelementptr inbounds %struct.GPR, %struct.GPR* %15267, i32 0, i32 33
  %15269 = getelementptr inbounds %struct.Reg, %struct.Reg* %15268, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %15269 to i64*
  %15270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15271 = getelementptr inbounds %struct.GPR, %struct.GPR* %15270, i32 0, i32 1
  %15272 = getelementptr inbounds %struct.Reg, %struct.Reg* %15271, i32 0, i32 0
  %RAX.i139 = bitcast %union.anon* %15272 to i64*
  %15273 = load i64, i64* %PC.i138
  %15274 = add i64 %15273, 10
  store i64 %15274, i64* %PC.i138
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i139, align 8
  store %struct.Memory* %loadMem_480e3c, %struct.Memory** %MEMORY
  %loadMem_480e46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15276 = getelementptr inbounds %struct.GPR, %struct.GPR* %15275, i32 0, i32 33
  %15277 = getelementptr inbounds %struct.Reg, %struct.Reg* %15276, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %15277 to i64*
  %15278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15279 = getelementptr inbounds %struct.GPR, %struct.GPR* %15278, i32 0, i32 15
  %15280 = getelementptr inbounds %struct.Reg, %struct.Reg* %15279, i32 0, i32 0
  %RBP.i136 = bitcast %union.anon* %15280 to i64*
  %15281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15282 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15281, i64 0, i64 0
  %YMM0.i137 = bitcast %union.VectorReg* %15282 to %"class.std::bitset"*
  %15283 = bitcast %"class.std::bitset"* %YMM0.i137 to i8*
  %15284 = load i64, i64* %RBP.i136
  %15285 = sub i64 %15284, 24
  %15286 = load i64, i64* %PC.i135
  %15287 = add i64 %15286, 5
  store i64 %15287, i64* %PC.i135
  %15288 = inttoptr i64 %15285 to float*
  %15289 = load float, float* %15288
  %15290 = bitcast i8* %15283 to float*
  store float %15289, float* %15290, align 1
  %15291 = getelementptr inbounds i8, i8* %15283, i64 4
  %15292 = bitcast i8* %15291 to float*
  store float 0.000000e+00, float* %15292, align 1
  %15293 = getelementptr inbounds i8, i8* %15283, i64 8
  %15294 = bitcast i8* %15293 to float*
  store float 0.000000e+00, float* %15294, align 1
  %15295 = getelementptr inbounds i8, i8* %15283, i64 12
  %15296 = bitcast i8* %15295 to float*
  store float 0.000000e+00, float* %15296, align 1
  store %struct.Memory* %loadMem_480e46, %struct.Memory** %MEMORY
  %loadMem_480e4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15298 = getelementptr inbounds %struct.GPR, %struct.GPR* %15297, i32 0, i32 33
  %15299 = getelementptr inbounds %struct.Reg, %struct.Reg* %15298, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %15299 to i64*
  %15300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15301 = getelementptr inbounds %struct.GPR, %struct.GPR* %15300, i32 0, i32 5
  %15302 = getelementptr inbounds %struct.Reg, %struct.Reg* %15301, i32 0, i32 0
  %RCX.i133 = bitcast %union.anon* %15302 to i64*
  %15303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15304 = getelementptr inbounds %struct.GPR, %struct.GPR* %15303, i32 0, i32 15
  %15305 = getelementptr inbounds %struct.Reg, %struct.Reg* %15304, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %15305 to i64*
  %15306 = load i64, i64* %RBP.i134
  %15307 = sub i64 %15306, 8
  %15308 = load i64, i64* %PC.i132
  %15309 = add i64 %15308, 4
  store i64 %15309, i64* %PC.i132
  %15310 = inttoptr i64 %15307 to i32*
  %15311 = load i32, i32* %15310
  %15312 = sext i32 %15311 to i64
  store i64 %15312, i64* %RCX.i133, align 8
  store %struct.Memory* %loadMem_480e4b, %struct.Memory** %MEMORY
  %loadMem_480e4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15314 = getelementptr inbounds %struct.GPR, %struct.GPR* %15313, i32 0, i32 33
  %15315 = getelementptr inbounds %struct.Reg, %struct.Reg* %15314, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %15315 to i64*
  %15316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15317 = getelementptr inbounds %struct.GPR, %struct.GPR* %15316, i32 0, i32 5
  %15318 = getelementptr inbounds %struct.Reg, %struct.Reg* %15317, i32 0, i32 0
  %RCX.i131 = bitcast %union.anon* %15318 to i64*
  %15319 = load i64, i64* %RCX.i131
  %15320 = load i64, i64* %PC.i130
  %15321 = add i64 %15320, 7
  store i64 %15321, i64* %PC.i130
  %15322 = sext i64 %15319 to i128
  %15323 = and i128 %15322, -18446744073709551616
  %15324 = zext i64 %15319 to i128
  %15325 = or i128 %15323, %15324
  %15326 = mul i128 564, %15325
  %15327 = trunc i128 %15326 to i64
  store i64 %15327, i64* %RCX.i131, align 8
  %15328 = sext i64 %15327 to i128
  %15329 = icmp ne i128 %15328, %15326
  %15330 = zext i1 %15329 to i8
  %15331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15330, i8* %15331, align 1
  %15332 = trunc i128 %15326 to i32
  %15333 = and i32 %15332, 255
  %15334 = call i32 @llvm.ctpop.i32(i32 %15333)
  %15335 = trunc i32 %15334 to i8
  %15336 = and i8 %15335, 1
  %15337 = xor i8 %15336, 1
  %15338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15337, i8* %15338, align 1
  %15339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15339, align 1
  %15340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15340, align 1
  %15341 = lshr i64 %15327, 63
  %15342 = trunc i64 %15341 to i8
  %15343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15342, i8* %15343, align 1
  %15344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15330, i8* %15344, align 1
  store %struct.Memory* %loadMem_480e4f, %struct.Memory** %MEMORY
  %loadMem_480e56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15346 = getelementptr inbounds %struct.GPR, %struct.GPR* %15345, i32 0, i32 33
  %15347 = getelementptr inbounds %struct.Reg, %struct.Reg* %15346, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %15347 to i64*
  %15348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15349 = getelementptr inbounds %struct.GPR, %struct.GPR* %15348, i32 0, i32 1
  %15350 = getelementptr inbounds %struct.Reg, %struct.Reg* %15349, i32 0, i32 0
  %RAX.i128 = bitcast %union.anon* %15350 to i64*
  %15351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15352 = getelementptr inbounds %struct.GPR, %struct.GPR* %15351, i32 0, i32 5
  %15353 = getelementptr inbounds %struct.Reg, %struct.Reg* %15352, i32 0, i32 0
  %RCX.i129 = bitcast %union.anon* %15353 to i64*
  %15354 = load i64, i64* %RAX.i128
  %15355 = load i64, i64* %RCX.i129
  %15356 = load i64, i64* %PC.i127
  %15357 = add i64 %15356, 3
  store i64 %15357, i64* %PC.i127
  %15358 = add i64 %15355, %15354
  store i64 %15358, i64* %RAX.i128, align 8
  %15359 = icmp ult i64 %15358, %15354
  %15360 = icmp ult i64 %15358, %15355
  %15361 = or i1 %15359, %15360
  %15362 = zext i1 %15361 to i8
  %15363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15362, i8* %15363, align 1
  %15364 = trunc i64 %15358 to i32
  %15365 = and i32 %15364, 255
  %15366 = call i32 @llvm.ctpop.i32(i32 %15365)
  %15367 = trunc i32 %15366 to i8
  %15368 = and i8 %15367, 1
  %15369 = xor i8 %15368, 1
  %15370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15369, i8* %15370, align 1
  %15371 = xor i64 %15355, %15354
  %15372 = xor i64 %15371, %15358
  %15373 = lshr i64 %15372, 4
  %15374 = trunc i64 %15373 to i8
  %15375 = and i8 %15374, 1
  %15376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15375, i8* %15376, align 1
  %15377 = icmp eq i64 %15358, 0
  %15378 = zext i1 %15377 to i8
  %15379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15378, i8* %15379, align 1
  %15380 = lshr i64 %15358, 63
  %15381 = trunc i64 %15380 to i8
  %15382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15381, i8* %15382, align 1
  %15383 = lshr i64 %15354, 63
  %15384 = lshr i64 %15355, 63
  %15385 = xor i64 %15380, %15383
  %15386 = xor i64 %15380, %15384
  %15387 = add i64 %15385, %15386
  %15388 = icmp eq i64 %15387, 2
  %15389 = zext i1 %15388 to i8
  %15390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15389, i8* %15390, align 1
  store %struct.Memory* %loadMem_480e56, %struct.Memory** %MEMORY
  %loadMem_480e59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15392 = getelementptr inbounds %struct.GPR, %struct.GPR* %15391, i32 0, i32 33
  %15393 = getelementptr inbounds %struct.Reg, %struct.Reg* %15392, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %15393 to i64*
  %15394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15395 = getelementptr inbounds %struct.GPR, %struct.GPR* %15394, i32 0, i32 1
  %15396 = getelementptr inbounds %struct.Reg, %struct.Reg* %15395, i32 0, i32 0
  %RAX.i123 = bitcast %union.anon* %15396 to i64*
  %15397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15398 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15397, i64 0, i64 0
  %XMM0.i124 = bitcast %union.VectorReg* %15398 to %union.vec128_t*
  %15399 = bitcast %union.vec128_t* %XMM0.i124 to i8*
  %15400 = load i64, i64* %RAX.i123
  %15401 = add i64 %15400, 56
  %15402 = load i64, i64* %PC.i122
  %15403 = add i64 %15402, 4
  store i64 %15403, i64* %PC.i122
  %15404 = bitcast i8* %15399 to <2 x float>*
  %15405 = load <2 x float>, <2 x float>* %15404, align 1
  %15406 = extractelement <2 x float> %15405, i32 0
  %15407 = inttoptr i64 %15401 to float*
  %15408 = load float, float* %15407
  %15409 = fcmp uno float %15406, %15408
  br i1 %15409, label %15410, label %15422

; <label>:15410:                                  ; preds = %block_.L_480e3c
  %15411 = fadd float %15406, %15408
  %15412 = bitcast float %15411 to i32
  %15413 = and i32 %15412, 2143289344
  %15414 = icmp eq i32 %15413, 2139095040
  %15415 = and i32 %15412, 4194303
  %15416 = icmp ne i32 %15415, 0
  %15417 = and i1 %15414, %15416
  br i1 %15417, label %15418, label %15428

; <label>:15418:                                  ; preds = %15410
  %15419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15420 = load i64, i64* %15419, align 8
  %15421 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %15420, %struct.Memory* %loadMem_480e59)
  br label %routine_ucomiss_0x38__rax____xmm0.exit

; <label>:15422:                                  ; preds = %block_.L_480e3c
  %15423 = fcmp ogt float %15406, %15408
  br i1 %15423, label %15428, label %15424

; <label>:15424:                                  ; preds = %15422
  %15425 = fcmp olt float %15406, %15408
  br i1 %15425, label %15428, label %15426

; <label>:15426:                                  ; preds = %15424
  %15427 = fcmp oeq float %15406, %15408
  br i1 %15427, label %15428, label %15435

; <label>:15428:                                  ; preds = %15426, %15424, %15422, %15410
  %15429 = phi i8 [ 0, %15422 ], [ 0, %15424 ], [ 1, %15426 ], [ 1, %15410 ]
  %15430 = phi i8 [ 0, %15422 ], [ 0, %15424 ], [ 0, %15426 ], [ 1, %15410 ]
  %15431 = phi i8 [ 0, %15422 ], [ 1, %15424 ], [ 0, %15426 ], [ 1, %15410 ]
  %15432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15429, i8* %15432, align 1
  %15433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15430, i8* %15433, align 1
  %15434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15431, i8* %15434, align 1
  br label %15435

; <label>:15435:                                  ; preds = %15428, %15426
  %15436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15436, align 1
  %15437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %15437, align 1
  %15438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15438, align 1
  br label %routine_ucomiss_0x38__rax____xmm0.exit

routine_ucomiss_0x38__rax____xmm0.exit:           ; preds = %15418, %15435
  %15439 = phi %struct.Memory* [ %15421, %15418 ], [ %loadMem_480e59, %15435 ]
  store %struct.Memory* %15439, %struct.Memory** %MEMORY
  %loadMem_480e5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15441 = getelementptr inbounds %struct.GPR, %struct.GPR* %15440, i32 0, i32 33
  %15442 = getelementptr inbounds %struct.Reg, %struct.Reg* %15441, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %15442 to i64*
  %15443 = load i64, i64* %PC.i121
  %15444 = add i64 %15443, 95
  %15445 = load i64, i64* %PC.i121
  %15446 = add i64 %15445, 6
  %15447 = load i64, i64* %PC.i121
  %15448 = add i64 %15447, 6
  store i64 %15448, i64* %PC.i121
  %15449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15450 = load i8, i8* %15449, align 1
  %15451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15452 = load i8, i8* %15451, align 1
  %15453 = or i8 %15452, %15450
  %15454 = icmp ne i8 %15453, 0
  %15455 = zext i1 %15454 to i8
  store i8 %15455, i8* %BRANCH_TAKEN, align 1
  %15456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15457 = select i1 %15454, i64 %15444, i64 %15446
  store i64 %15457, i64* %15456, align 8
  store %struct.Memory* %loadMem_480e5d, %struct.Memory** %MEMORY
  %loadBr_480e5d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480e5d = icmp eq i8 %loadBr_480e5d, 1
  br i1 %cmpBr_480e5d, label %block_.L_480ebc, label %block_480e63

block_480e63:                                     ; preds = %routine_ucomiss_0x38__rax____xmm0.exit
  %loadMem_480e63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15459 = getelementptr inbounds %struct.GPR, %struct.GPR* %15458, i32 0, i32 33
  %15460 = getelementptr inbounds %struct.Reg, %struct.Reg* %15459, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %15460 to i64*
  %15461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15462 = getelementptr inbounds %struct.GPR, %struct.GPR* %15461, i32 0, i32 1
  %15463 = getelementptr inbounds %struct.Reg, %struct.Reg* %15462, i32 0, i32 0
  %RAX.i120 = bitcast %union.anon* %15463 to i64*
  %15464 = load i64, i64* %PC.i119
  %15465 = add i64 %15464, 10
  store i64 %15465, i64* %PC.i119
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i120, align 8
  store %struct.Memory* %loadMem_480e63, %struct.Memory** %MEMORY
  %loadMem_480e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15467 = getelementptr inbounds %struct.GPR, %struct.GPR* %15466, i32 0, i32 33
  %15468 = getelementptr inbounds %struct.Reg, %struct.Reg* %15467, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %15468 to i64*
  %15469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15470 = getelementptr inbounds %struct.GPR, %struct.GPR* %15469, i32 0, i32 5
  %15471 = getelementptr inbounds %struct.Reg, %struct.Reg* %15470, i32 0, i32 0
  %RCX.i117 = bitcast %union.anon* %15471 to i64*
  %15472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15473 = getelementptr inbounds %struct.GPR, %struct.GPR* %15472, i32 0, i32 15
  %15474 = getelementptr inbounds %struct.Reg, %struct.Reg* %15473, i32 0, i32 0
  %RBP.i118 = bitcast %union.anon* %15474 to i64*
  %15475 = load i64, i64* %RBP.i118
  %15476 = sub i64 %15475, 8
  %15477 = load i64, i64* %PC.i116
  %15478 = add i64 %15477, 4
  store i64 %15478, i64* %PC.i116
  %15479 = inttoptr i64 %15476 to i32*
  %15480 = load i32, i32* %15479
  %15481 = sext i32 %15480 to i64
  store i64 %15481, i64* %RCX.i117, align 8
  store %struct.Memory* %loadMem_480e6d, %struct.Memory** %MEMORY
  %loadMem_480e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15483 = getelementptr inbounds %struct.GPR, %struct.GPR* %15482, i32 0, i32 33
  %15484 = getelementptr inbounds %struct.Reg, %struct.Reg* %15483, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %15484 to i64*
  %15485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15486 = getelementptr inbounds %struct.GPR, %struct.GPR* %15485, i32 0, i32 5
  %15487 = getelementptr inbounds %struct.Reg, %struct.Reg* %15486, i32 0, i32 0
  %RCX.i115 = bitcast %union.anon* %15487 to i64*
  %15488 = load i64, i64* %RCX.i115
  %15489 = load i64, i64* %PC.i114
  %15490 = add i64 %15489, 7
  store i64 %15490, i64* %PC.i114
  %15491 = sext i64 %15488 to i128
  %15492 = and i128 %15491, -18446744073709551616
  %15493 = zext i64 %15488 to i128
  %15494 = or i128 %15492, %15493
  %15495 = mul i128 564, %15494
  %15496 = trunc i128 %15495 to i64
  store i64 %15496, i64* %RCX.i115, align 8
  %15497 = sext i64 %15496 to i128
  %15498 = icmp ne i128 %15497, %15495
  %15499 = zext i1 %15498 to i8
  %15500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15499, i8* %15500, align 1
  %15501 = trunc i128 %15495 to i32
  %15502 = and i32 %15501, 255
  %15503 = call i32 @llvm.ctpop.i32(i32 %15502)
  %15504 = trunc i32 %15503 to i8
  %15505 = and i8 %15504, 1
  %15506 = xor i8 %15505, 1
  %15507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15506, i8* %15507, align 1
  %15508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15508, align 1
  %15509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15509, align 1
  %15510 = lshr i64 %15496, 63
  %15511 = trunc i64 %15510 to i8
  %15512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15511, i8* %15512, align 1
  %15513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15499, i8* %15513, align 1
  store %struct.Memory* %loadMem_480e71, %struct.Memory** %MEMORY
  %loadMem_480e78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15515 = getelementptr inbounds %struct.GPR, %struct.GPR* %15514, i32 0, i32 33
  %15516 = getelementptr inbounds %struct.Reg, %struct.Reg* %15515, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %15516 to i64*
  %15517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15518 = getelementptr inbounds %struct.GPR, %struct.GPR* %15517, i32 0, i32 1
  %15519 = getelementptr inbounds %struct.Reg, %struct.Reg* %15518, i32 0, i32 0
  %RAX.i112 = bitcast %union.anon* %15519 to i64*
  %15520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15521 = getelementptr inbounds %struct.GPR, %struct.GPR* %15520, i32 0, i32 5
  %15522 = getelementptr inbounds %struct.Reg, %struct.Reg* %15521, i32 0, i32 0
  %RCX.i113 = bitcast %union.anon* %15522 to i64*
  %15523 = load i64, i64* %RAX.i112
  %15524 = load i64, i64* %RCX.i113
  %15525 = load i64, i64* %PC.i111
  %15526 = add i64 %15525, 3
  store i64 %15526, i64* %PC.i111
  %15527 = add i64 %15524, %15523
  store i64 %15527, i64* %RAX.i112, align 8
  %15528 = icmp ult i64 %15527, %15523
  %15529 = icmp ult i64 %15527, %15524
  %15530 = or i1 %15528, %15529
  %15531 = zext i1 %15530 to i8
  %15532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15531, i8* %15532, align 1
  %15533 = trunc i64 %15527 to i32
  %15534 = and i32 %15533, 255
  %15535 = call i32 @llvm.ctpop.i32(i32 %15534)
  %15536 = trunc i32 %15535 to i8
  %15537 = and i8 %15536, 1
  %15538 = xor i8 %15537, 1
  %15539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15538, i8* %15539, align 1
  %15540 = xor i64 %15524, %15523
  %15541 = xor i64 %15540, %15527
  %15542 = lshr i64 %15541, 4
  %15543 = trunc i64 %15542 to i8
  %15544 = and i8 %15543, 1
  %15545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15544, i8* %15545, align 1
  %15546 = icmp eq i64 %15527, 0
  %15547 = zext i1 %15546 to i8
  %15548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15547, i8* %15548, align 1
  %15549 = lshr i64 %15527, 63
  %15550 = trunc i64 %15549 to i8
  %15551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15550, i8* %15551, align 1
  %15552 = lshr i64 %15523, 63
  %15553 = lshr i64 %15524, 63
  %15554 = xor i64 %15549, %15552
  %15555 = xor i64 %15549, %15553
  %15556 = add i64 %15554, %15555
  %15557 = icmp eq i64 %15556, 2
  %15558 = zext i1 %15557 to i8
  %15559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15558, i8* %15559, align 1
  store %struct.Memory* %loadMem_480e78, %struct.Memory** %MEMORY
  %loadMem_480e7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15561 = getelementptr inbounds %struct.GPR, %struct.GPR* %15560, i32 0, i32 33
  %15562 = getelementptr inbounds %struct.Reg, %struct.Reg* %15561, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %15562 to i64*
  %15563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15564 = getelementptr inbounds %struct.GPR, %struct.GPR* %15563, i32 0, i32 1
  %15565 = getelementptr inbounds %struct.Reg, %struct.Reg* %15564, i32 0, i32 0
  %RAX.i109 = bitcast %union.anon* %15565 to i64*
  %15566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15567 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15566, i64 0, i64 0
  %YMM0.i110 = bitcast %union.VectorReg* %15567 to %"class.std::bitset"*
  %15568 = bitcast %"class.std::bitset"* %YMM0.i110 to i8*
  %15569 = load i64, i64* %RAX.i109
  %15570 = add i64 %15569, 56
  %15571 = load i64, i64* %PC.i108
  %15572 = add i64 %15571, 5
  store i64 %15572, i64* %PC.i108
  %15573 = inttoptr i64 %15570 to float*
  %15574 = load float, float* %15573
  %15575 = bitcast i8* %15568 to float*
  store float %15574, float* %15575, align 1
  %15576 = getelementptr inbounds i8, i8* %15568, i64 4
  %15577 = bitcast i8* %15576 to float*
  store float 0.000000e+00, float* %15577, align 1
  %15578 = getelementptr inbounds i8, i8* %15568, i64 8
  %15579 = bitcast i8* %15578 to float*
  store float 0.000000e+00, float* %15579, align 1
  %15580 = getelementptr inbounds i8, i8* %15568, i64 12
  %15581 = bitcast i8* %15580 to float*
  store float 0.000000e+00, float* %15581, align 1
  store %struct.Memory* %loadMem_480e7b, %struct.Memory** %MEMORY
  %loadMem_480e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15583 = getelementptr inbounds %struct.GPR, %struct.GPR* %15582, i32 0, i32 33
  %15584 = getelementptr inbounds %struct.Reg, %struct.Reg* %15583, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %15584 to i64*
  %15585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15586 = getelementptr inbounds %struct.GPR, %struct.GPR* %15585, i32 0, i32 15
  %15587 = getelementptr inbounds %struct.Reg, %struct.Reg* %15586, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %15587 to i64*
  %15588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15589 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15588, i64 0, i64 0
  %XMM0.i107 = bitcast %union.VectorReg* %15589 to %union.vec128_t*
  %15590 = load i64, i64* %RBP.i106
  %15591 = sub i64 %15590, 24
  %15592 = bitcast %union.vec128_t* %XMM0.i107 to i8*
  %15593 = load i64, i64* %PC.i105
  %15594 = add i64 %15593, 5
  store i64 %15594, i64* %PC.i105
  %15595 = bitcast i8* %15592 to <2 x float>*
  %15596 = load <2 x float>, <2 x float>* %15595, align 1
  %15597 = extractelement <2 x float> %15596, i32 0
  %15598 = inttoptr i64 %15591 to float*
  store float %15597, float* %15598
  store %struct.Memory* %loadMem_480e80, %struct.Memory** %MEMORY
  %loadMem_480e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15600 = getelementptr inbounds %struct.GPR, %struct.GPR* %15599, i32 0, i32 33
  %15601 = getelementptr inbounds %struct.Reg, %struct.Reg* %15600, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %15601 to i64*
  %15602 = load i64, i64* %PC.i104
  %15603 = add i64 %15602, 8
  store i64 %15603, i64* %PC.i104
  %15604 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %15605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15605, align 1
  %15606 = and i32 %15604, 255
  %15607 = call i32 @llvm.ctpop.i32(i32 %15606)
  %15608 = trunc i32 %15607 to i8
  %15609 = and i8 %15608, 1
  %15610 = xor i8 %15609, 1
  %15611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15610, i8* %15611, align 1
  %15612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15612, align 1
  %15613 = icmp eq i32 %15604, 0
  %15614 = zext i1 %15613 to i8
  %15615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15614, i8* %15615, align 1
  %15616 = lshr i32 %15604, 31
  %15617 = trunc i32 %15616 to i8
  %15618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15617, i8* %15618, align 1
  %15619 = lshr i32 %15604, 31
  %15620 = xor i32 %15616, %15619
  %15621 = add i32 %15620, %15619
  %15622 = icmp eq i32 %15621, 2
  %15623 = zext i1 %15622 to i8
  %15624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15623, i8* %15624, align 1
  store %struct.Memory* %loadMem_480e85, %struct.Memory** %MEMORY
  %loadMem_480e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15626 = getelementptr inbounds %struct.GPR, %struct.GPR* %15625, i32 0, i32 33
  %15627 = getelementptr inbounds %struct.Reg, %struct.Reg* %15626, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %15627 to i64*
  %15628 = load i64, i64* %PC.i103
  %15629 = add i64 %15628, 11
  %15630 = load i64, i64* %PC.i103
  %15631 = add i64 %15630, 6
  %15632 = load i64, i64* %PC.i103
  %15633 = add i64 %15632, 6
  store i64 %15633, i64* %PC.i103
  %15634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15635 = load i8, i8* %15634, align 1
  %15636 = icmp eq i8 %15635, 0
  %15637 = zext i1 %15636 to i8
  store i8 %15637, i8* %BRANCH_TAKEN, align 1
  %15638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15639 = select i1 %15636, i64 %15629, i64 %15631
  store i64 %15639, i64* %15638, align 8
  store %struct.Memory* %loadMem_480e8d, %struct.Memory** %MEMORY
  %loadBr_480e8d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480e8d = icmp eq i8 %loadBr_480e8d, 1
  br i1 %cmpBr_480e8d, label %block_.L_480e98, label %block_480e93

block_480e93:                                     ; preds = %block_480e63
  %loadMem_480e93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15641 = getelementptr inbounds %struct.GPR, %struct.GPR* %15640, i32 0, i32 33
  %15642 = getelementptr inbounds %struct.Reg, %struct.Reg* %15641, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %15642 to i64*
  %15643 = load i64, i64* %PC.i102
  %15644 = add i64 %15643, 36
  %15645 = load i64, i64* %PC.i102
  %15646 = add i64 %15645, 5
  store i64 %15646, i64* %PC.i102
  %15647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15644, i64* %15647, align 8
  store %struct.Memory* %loadMem_480e93, %struct.Memory** %MEMORY
  br label %block_.L_480eb7

block_.L_480e98:                                  ; preds = %block_480e63
  %loadMem_480e98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15649 = getelementptr inbounds %struct.GPR, %struct.GPR* %15648, i32 0, i32 33
  %15650 = getelementptr inbounds %struct.Reg, %struct.Reg* %15649, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %15650 to i64*
  %15651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15652 = getelementptr inbounds %struct.GPR, %struct.GPR* %15651, i32 0, i32 11
  %15653 = getelementptr inbounds %struct.Reg, %struct.Reg* %15652, i32 0, i32 0
  %RDI.i101 = bitcast %union.anon* %15653 to i64*
  %15654 = load i64, i64* %PC.i100
  %15655 = add i64 %15654, 10
  store i64 %15655, i64* %PC.i100
  store i64 ptrtoint (%G__0x5821da_type* @G__0x5821da to i64), i64* %RDI.i101, align 8
  store %struct.Memory* %loadMem_480e98, %struct.Memory** %MEMORY
  %loadMem_480ea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15657 = getelementptr inbounds %struct.GPR, %struct.GPR* %15656, i32 0, i32 33
  %15658 = getelementptr inbounds %struct.Reg, %struct.Reg* %15657, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %15658 to i64*
  %15659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15660 = getelementptr inbounds %struct.GPR, %struct.GPR* %15659, i32 0, i32 9
  %15661 = getelementptr inbounds %struct.Reg, %struct.Reg* %15660, i32 0, i32 0
  %RSI.i98 = bitcast %union.anon* %15661 to i64*
  %15662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15663 = getelementptr inbounds %struct.GPR, %struct.GPR* %15662, i32 0, i32 15
  %15664 = getelementptr inbounds %struct.Reg, %struct.Reg* %15663, i32 0, i32 0
  %RBP.i99 = bitcast %union.anon* %15664 to i64*
  %15665 = load i64, i64* %RBP.i99
  %15666 = sub i64 %15665, 8
  %15667 = load i64, i64* %PC.i97
  %15668 = add i64 %15667, 3
  store i64 %15668, i64* %PC.i97
  %15669 = inttoptr i64 %15666 to i32*
  %15670 = load i32, i32* %15669
  %15671 = zext i32 %15670 to i64
  store i64 %15671, i64* %RSI.i98, align 8
  store %struct.Memory* %loadMem_480ea2, %struct.Memory** %MEMORY
  %loadMem_480ea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15673 = getelementptr inbounds %struct.GPR, %struct.GPR* %15672, i32 0, i32 33
  %15674 = getelementptr inbounds %struct.Reg, %struct.Reg* %15673, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %15674 to i64*
  %15675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15676 = getelementptr inbounds %struct.GPR, %struct.GPR* %15675, i32 0, i32 15
  %15677 = getelementptr inbounds %struct.Reg, %struct.Reg* %15676, i32 0, i32 0
  %RBP.i95 = bitcast %union.anon* %15677 to i64*
  %15678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15679 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15678, i64 0, i64 0
  %YMM0.i96 = bitcast %union.VectorReg* %15679 to %"class.std::bitset"*
  %15680 = bitcast %"class.std::bitset"* %YMM0.i96 to i8*
  %15681 = load i64, i64* %RBP.i95
  %15682 = sub i64 %15681, 24
  %15683 = load i64, i64* %PC.i94
  %15684 = add i64 %15683, 5
  store i64 %15684, i64* %PC.i94
  %15685 = inttoptr i64 %15682 to float*
  %15686 = load float, float* %15685
  %15687 = fpext float %15686 to double
  %15688 = bitcast i8* %15680 to double*
  store double %15687, double* %15688, align 1
  store %struct.Memory* %loadMem_480ea5, %struct.Memory** %MEMORY
  %loadMem_480eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %15689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15690 = getelementptr inbounds %struct.GPR, %struct.GPR* %15689, i32 0, i32 33
  %15691 = getelementptr inbounds %struct.Reg, %struct.Reg* %15690, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %15691 to i64*
  %15692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15693 = getelementptr inbounds %struct.GPR, %struct.GPR* %15692, i32 0, i32 1
  %15694 = getelementptr inbounds %struct.Reg, %struct.Reg* %15693, i32 0, i32 0
  %15695 = bitcast %union.anon* %15694 to %struct.anon.2*
  %AL.i93 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15695, i32 0, i32 0
  %15696 = load i64, i64* %PC.i92
  %15697 = add i64 %15696, 2
  store i64 %15697, i64* %PC.i92
  store i8 1, i8* %AL.i93, align 1
  store %struct.Memory* %loadMem_480eaa, %struct.Memory** %MEMORY
  %loadMem1_480eac = load %struct.Memory*, %struct.Memory** %MEMORY
  %15698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15699 = getelementptr inbounds %struct.GPR, %struct.GPR* %15698, i32 0, i32 33
  %15700 = getelementptr inbounds %struct.Reg, %struct.Reg* %15699, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %15700 to i64*
  %15701 = load i64, i64* %PC.i91
  %15702 = add i64 %15701, -192764
  %15703 = load i64, i64* %PC.i91
  %15704 = add i64 %15703, 5
  %15705 = load i64, i64* %PC.i91
  %15706 = add i64 %15705, 5
  store i64 %15706, i64* %PC.i91
  %15707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15708 = load i64, i64* %15707, align 8
  %15709 = add i64 %15708, -8
  %15710 = inttoptr i64 %15709 to i64*
  store i64 %15704, i64* %15710
  store i64 %15709, i64* %15707, align 8
  %15711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15702, i64* %15711, align 8
  store %struct.Memory* %loadMem1_480eac, %struct.Memory** %MEMORY
  %loadMem2_480eac = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480eac = load i64, i64* %3
  %call2_480eac = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_480eac, %struct.Memory* %loadMem2_480eac)
  store %struct.Memory* %call2_480eac, %struct.Memory** %MEMORY
  %loadMem_480eb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15713 = getelementptr inbounds %struct.GPR, %struct.GPR* %15712, i32 0, i32 33
  %15714 = getelementptr inbounds %struct.Reg, %struct.Reg* %15713, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %15714 to i64*
  %15715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15716 = getelementptr inbounds %struct.GPR, %struct.GPR* %15715, i32 0, i32 1
  %15717 = getelementptr inbounds %struct.Reg, %struct.Reg* %15716, i32 0, i32 0
  %EAX.i89 = bitcast %union.anon* %15717 to i32*
  %15718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15719 = getelementptr inbounds %struct.GPR, %struct.GPR* %15718, i32 0, i32 15
  %15720 = getelementptr inbounds %struct.Reg, %struct.Reg* %15719, i32 0, i32 0
  %RBP.i90 = bitcast %union.anon* %15720 to i64*
  %15721 = load i64, i64* %RBP.i90
  %15722 = sub i64 %15721, 204
  %15723 = load i32, i32* %EAX.i89
  %15724 = zext i32 %15723 to i64
  %15725 = load i64, i64* %PC.i88
  %15726 = add i64 %15725, 6
  store i64 %15726, i64* %PC.i88
  %15727 = inttoptr i64 %15722 to i32*
  store i32 %15723, i32* %15727
  store %struct.Memory* %loadMem_480eb1, %struct.Memory** %MEMORY
  br label %block_.L_480eb7

block_.L_480eb7:                                  ; preds = %block_.L_480e98, %block_480e93
  %loadMem_480eb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15729 = getelementptr inbounds %struct.GPR, %struct.GPR* %15728, i32 0, i32 33
  %15730 = getelementptr inbounds %struct.Reg, %struct.Reg* %15729, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %15730 to i64*
  %15731 = load i64, i64* %PC.i87
  %15732 = add i64 %15731, 5
  %15733 = load i64, i64* %PC.i87
  %15734 = add i64 %15733, 5
  store i64 %15734, i64* %PC.i87
  %15735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15732, i64* %15735, align 8
  store %struct.Memory* %loadMem_480eb7, %struct.Memory** %MEMORY
  br label %block_.L_480ebc

block_.L_480ebc:                                  ; preds = %block_.L_480eb7, %routine_ucomiss_0x38__rax____xmm0.exit
  %loadMem_480ebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15737 = getelementptr inbounds %struct.GPR, %struct.GPR* %15736, i32 0, i32 33
  %15738 = getelementptr inbounds %struct.Reg, %struct.Reg* %15737, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %15738 to i64*
  %15739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15740 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15739, i64 0, i64 0
  %YMM0.i85 = bitcast %union.VectorReg* %15740 to %"class.std::bitset"*
  %15741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15742 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15741, i64 0, i64 0
  %XMM0.i86 = bitcast %union.VectorReg* %15742 to %union.vec128_t*
  %15743 = bitcast %"class.std::bitset"* %YMM0.i85 to i8*
  %15744 = bitcast %"class.std::bitset"* %YMM0.i85 to i8*
  %15745 = bitcast %union.vec128_t* %XMM0.i86 to i8*
  %15746 = load i64, i64* %PC.i84
  %15747 = add i64 %15746, 3
  store i64 %15747, i64* %PC.i84
  %15748 = bitcast i8* %15744 to i64*
  %15749 = load i64, i64* %15748, align 1
  %15750 = getelementptr inbounds i8, i8* %15744, i64 8
  %15751 = bitcast i8* %15750 to i64*
  %15752 = load i64, i64* %15751, align 1
  %15753 = bitcast i8* %15745 to i64*
  %15754 = load i64, i64* %15753, align 1
  %15755 = getelementptr inbounds i8, i8* %15745, i64 8
  %15756 = bitcast i8* %15755 to i64*
  %15757 = load i64, i64* %15756, align 1
  %15758 = xor i64 %15754, %15749
  %15759 = xor i64 %15757, %15752
  %15760 = trunc i64 %15758 to i32
  %15761 = lshr i64 %15758, 32
  %15762 = trunc i64 %15761 to i32
  %15763 = bitcast i8* %15743 to i32*
  store i32 %15760, i32* %15763, align 1
  %15764 = getelementptr inbounds i8, i8* %15743, i64 4
  %15765 = bitcast i8* %15764 to i32*
  store i32 %15762, i32* %15765, align 1
  %15766 = trunc i64 %15759 to i32
  %15767 = getelementptr inbounds i8, i8* %15743, i64 8
  %15768 = bitcast i8* %15767 to i32*
  store i32 %15766, i32* %15768, align 1
  %15769 = lshr i64 %15759, 32
  %15770 = trunc i64 %15769 to i32
  %15771 = getelementptr inbounds i8, i8* %15743, i64 12
  %15772 = bitcast i8* %15771 to i32*
  store i32 %15770, i32* %15772, align 1
  store %struct.Memory* %loadMem_480ebc, %struct.Memory** %MEMORY
  %loadMem_480ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %15773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15774 = getelementptr inbounds %struct.GPR, %struct.GPR* %15773, i32 0, i32 33
  %15775 = getelementptr inbounds %struct.Reg, %struct.Reg* %15774, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %15775 to i64*
  %15776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15777 = getelementptr inbounds %struct.GPR, %struct.GPR* %15776, i32 0, i32 15
  %15778 = getelementptr inbounds %struct.Reg, %struct.Reg* %15777, i32 0, i32 0
  %RBP.i82 = bitcast %union.anon* %15778 to i64*
  %15779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15780 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15779, i64 0, i64 1
  %YMM1.i83 = bitcast %union.VectorReg* %15780 to %"class.std::bitset"*
  %15781 = bitcast %"class.std::bitset"* %YMM1.i83 to i8*
  %15782 = load i64, i64* %RBP.i82
  %15783 = sub i64 %15782, 24
  %15784 = load i64, i64* %PC.i81
  %15785 = add i64 %15784, 5
  store i64 %15785, i64* %PC.i81
  %15786 = inttoptr i64 %15783 to float*
  %15787 = load float, float* %15786
  %15788 = bitcast i8* %15781 to float*
  store float %15787, float* %15788, align 1
  %15789 = getelementptr inbounds i8, i8* %15781, i64 4
  %15790 = bitcast i8* %15789 to float*
  store float 0.000000e+00, float* %15790, align 1
  %15791 = getelementptr inbounds i8, i8* %15781, i64 8
  %15792 = bitcast i8* %15791 to float*
  store float 0.000000e+00, float* %15792, align 1
  %15793 = getelementptr inbounds i8, i8* %15781, i64 12
  %15794 = bitcast i8* %15793 to float*
  store float 0.000000e+00, float* %15794, align 1
  store %struct.Memory* %loadMem_480ebf, %struct.Memory** %MEMORY
  %loadMem_480ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15796 = getelementptr inbounds %struct.GPR, %struct.GPR* %15795, i32 0, i32 33
  %15797 = getelementptr inbounds %struct.Reg, %struct.Reg* %15796, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %15797 to i64*
  %15798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15799 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15798, i64 0, i64 0
  %XMM0.i76 = bitcast %union.VectorReg* %15799 to %union.vec128_t*
  %15800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15801 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15800, i64 0, i64 1
  %XMM1.i77 = bitcast %union.VectorReg* %15801 to %union.vec128_t*
  %15802 = bitcast %union.vec128_t* %XMM1.i77 to i8*
  %15803 = bitcast %union.vec128_t* %XMM0.i76 to i8*
  %15804 = load i64, i64* %PC.i75
  %15805 = add i64 %15804, 3
  store i64 %15805, i64* %PC.i75
  %15806 = bitcast i8* %15802 to <2 x float>*
  %15807 = load <2 x float>, <2 x float>* %15806, align 1
  %15808 = extractelement <2 x float> %15807, i32 0
  %15809 = bitcast i8* %15803 to <2 x float>*
  %15810 = load <2 x float>, <2 x float>* %15809, align 1
  %15811 = extractelement <2 x float> %15810, i32 0
  %15812 = fcmp uno float %15808, %15811
  br i1 %15812, label %15813, label %15825

; <label>:15813:                                  ; preds = %block_.L_480ebc
  %15814 = fadd float %15808, %15811
  %15815 = bitcast float %15814 to i32
  %15816 = and i32 %15815, 2143289344
  %15817 = icmp eq i32 %15816, 2139095040
  %15818 = and i32 %15815, 4194303
  %15819 = icmp ne i32 %15818, 0
  %15820 = and i1 %15817, %15819
  br i1 %15820, label %15821, label %15831

; <label>:15821:                                  ; preds = %15813
  %15822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15823 = load i64, i64* %15822, align 8
  %15824 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %15823, %struct.Memory* %loadMem_480ec4)
  br label %routine_ucomiss__xmm0___xmm1.exit78

; <label>:15825:                                  ; preds = %block_.L_480ebc
  %15826 = fcmp ogt float %15808, %15811
  br i1 %15826, label %15831, label %15827

; <label>:15827:                                  ; preds = %15825
  %15828 = fcmp olt float %15808, %15811
  br i1 %15828, label %15831, label %15829

; <label>:15829:                                  ; preds = %15827
  %15830 = fcmp oeq float %15808, %15811
  br i1 %15830, label %15831, label %15838

; <label>:15831:                                  ; preds = %15829, %15827, %15825, %15813
  %15832 = phi i8 [ 0, %15825 ], [ 0, %15827 ], [ 1, %15829 ], [ 1, %15813 ]
  %15833 = phi i8 [ 0, %15825 ], [ 0, %15827 ], [ 0, %15829 ], [ 1, %15813 ]
  %15834 = phi i8 [ 0, %15825 ], [ 1, %15827 ], [ 0, %15829 ], [ 1, %15813 ]
  %15835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15832, i8* %15835, align 1
  %15836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15833, i8* %15836, align 1
  %15837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15834, i8* %15837, align 1
  br label %15838

; <label>:15838:                                  ; preds = %15831, %15829
  %15839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15839, align 1
  %15840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %15840, align 1
  %15841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15841, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit78

routine_ucomiss__xmm0___xmm1.exit78:              ; preds = %15821, %15838
  %15842 = phi %struct.Memory* [ %15824, %15821 ], [ %loadMem_480ec4, %15838 ]
  store %struct.Memory* %15842, %struct.Memory** %MEMORY
  %loadMem_480ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15844 = getelementptr inbounds %struct.GPR, %struct.GPR* %15843, i32 0, i32 33
  %15845 = getelementptr inbounds %struct.Reg, %struct.Reg* %15844, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %15845 to i64*
  %15846 = load i64, i64* %PC.i74
  %15847 = add i64 %15846, 88
  %15848 = load i64, i64* %PC.i74
  %15849 = add i64 %15848, 6
  %15850 = load i64, i64* %PC.i74
  %15851 = add i64 %15850, 6
  store i64 %15851, i64* %PC.i74
  %15852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15853 = load i8, i8* %15852, align 1
  %15854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15855 = load i8, i8* %15854, align 1
  %15856 = or i8 %15855, %15853
  %15857 = icmp eq i8 %15856, 0
  %15858 = zext i1 %15857 to i8
  store i8 %15858, i8* %BRANCH_TAKEN, align 1
  %15859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15860 = select i1 %15857, i64 %15847, i64 %15849
  store i64 %15860, i64* %15859, align 8
  store %struct.Memory* %loadMem_480ec7, %struct.Memory** %MEMORY
  %loadBr_480ec7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480ec7 = icmp eq i8 %loadBr_480ec7, 1
  br i1 %cmpBr_480ec7, label %block_.L_480f1f, label %block_480ecd

block_480ecd:                                     ; preds = %routine_ucomiss__xmm0___xmm1.exit78
  %loadMem_480ecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %15861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15862 = getelementptr inbounds %struct.GPR, %struct.GPR* %15861, i32 0, i32 33
  %15863 = getelementptr inbounds %struct.Reg, %struct.Reg* %15862, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %15863 to i64*
  %15864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15865 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15864, i64 0, i64 0
  %YMM0.i72 = bitcast %union.VectorReg* %15865 to %"class.std::bitset"*
  %15866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15867 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15866, i64 0, i64 0
  %XMM0.i73 = bitcast %union.VectorReg* %15867 to %union.vec128_t*
  %15868 = bitcast %"class.std::bitset"* %YMM0.i72 to i8*
  %15869 = bitcast %"class.std::bitset"* %YMM0.i72 to i8*
  %15870 = bitcast %union.vec128_t* %XMM0.i73 to i8*
  %15871 = load i64, i64* %PC.i71
  %15872 = add i64 %15871, 3
  store i64 %15872, i64* %PC.i71
  %15873 = bitcast i8* %15869 to i64*
  %15874 = load i64, i64* %15873, align 1
  %15875 = getelementptr inbounds i8, i8* %15869, i64 8
  %15876 = bitcast i8* %15875 to i64*
  %15877 = load i64, i64* %15876, align 1
  %15878 = bitcast i8* %15870 to i64*
  %15879 = load i64, i64* %15878, align 1
  %15880 = getelementptr inbounds i8, i8* %15870, i64 8
  %15881 = bitcast i8* %15880 to i64*
  %15882 = load i64, i64* %15881, align 1
  %15883 = xor i64 %15879, %15874
  %15884 = xor i64 %15882, %15877
  %15885 = trunc i64 %15883 to i32
  %15886 = lshr i64 %15883, 32
  %15887 = trunc i64 %15886 to i32
  %15888 = bitcast i8* %15868 to i32*
  store i32 %15885, i32* %15888, align 1
  %15889 = getelementptr inbounds i8, i8* %15868, i64 4
  %15890 = bitcast i8* %15889 to i32*
  store i32 %15887, i32* %15890, align 1
  %15891 = trunc i64 %15884 to i32
  %15892 = getelementptr inbounds i8, i8* %15868, i64 8
  %15893 = bitcast i8* %15892 to i32*
  store i32 %15891, i32* %15893, align 1
  %15894 = lshr i64 %15884, 32
  %15895 = trunc i64 %15894 to i32
  %15896 = getelementptr inbounds i8, i8* %15868, i64 12
  %15897 = bitcast i8* %15896 to i32*
  store i32 %15895, i32* %15897, align 1
  store %struct.Memory* %loadMem_480ecd, %struct.Memory** %MEMORY
  %loadMem_480ed0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15899 = getelementptr inbounds %struct.GPR, %struct.GPR* %15898, i32 0, i32 33
  %15900 = getelementptr inbounds %struct.Reg, %struct.Reg* %15899, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %15900 to i64*
  %15901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15902 = getelementptr inbounds %struct.GPR, %struct.GPR* %15901, i32 0, i32 1
  %15903 = getelementptr inbounds %struct.Reg, %struct.Reg* %15902, i32 0, i32 0
  %RAX.i70 = bitcast %union.anon* %15903 to i64*
  %15904 = load i64, i64* %PC.i69
  %15905 = add i64 %15904, 10
  store i64 %15905, i64* %PC.i69
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i70, align 8
  store %struct.Memory* %loadMem_480ed0, %struct.Memory** %MEMORY
  %loadMem_480eda = load %struct.Memory*, %struct.Memory** %MEMORY
  %15906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15907 = getelementptr inbounds %struct.GPR, %struct.GPR* %15906, i32 0, i32 33
  %15908 = getelementptr inbounds %struct.Reg, %struct.Reg* %15907, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %15908 to i64*
  %15909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15910 = getelementptr inbounds %struct.GPR, %struct.GPR* %15909, i32 0, i32 5
  %15911 = getelementptr inbounds %struct.Reg, %struct.Reg* %15910, i32 0, i32 0
  %RCX.i67 = bitcast %union.anon* %15911 to i64*
  %15912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15913 = getelementptr inbounds %struct.GPR, %struct.GPR* %15912, i32 0, i32 15
  %15914 = getelementptr inbounds %struct.Reg, %struct.Reg* %15913, i32 0, i32 0
  %RBP.i68 = bitcast %union.anon* %15914 to i64*
  %15915 = load i64, i64* %RBP.i68
  %15916 = sub i64 %15915, 8
  %15917 = load i64, i64* %PC.i66
  %15918 = add i64 %15917, 4
  store i64 %15918, i64* %PC.i66
  %15919 = inttoptr i64 %15916 to i32*
  %15920 = load i32, i32* %15919
  %15921 = sext i32 %15920 to i64
  store i64 %15921, i64* %RCX.i67, align 8
  store %struct.Memory* %loadMem_480eda, %struct.Memory** %MEMORY
  %loadMem_480ede = load %struct.Memory*, %struct.Memory** %MEMORY
  %15922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15923 = getelementptr inbounds %struct.GPR, %struct.GPR* %15922, i32 0, i32 33
  %15924 = getelementptr inbounds %struct.Reg, %struct.Reg* %15923, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %15924 to i64*
  %15925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15926 = getelementptr inbounds %struct.GPR, %struct.GPR* %15925, i32 0, i32 5
  %15927 = getelementptr inbounds %struct.Reg, %struct.Reg* %15926, i32 0, i32 0
  %RCX.i65 = bitcast %union.anon* %15927 to i64*
  %15928 = load i64, i64* %RCX.i65
  %15929 = load i64, i64* %PC.i64
  %15930 = add i64 %15929, 7
  store i64 %15930, i64* %PC.i64
  %15931 = sext i64 %15928 to i128
  %15932 = and i128 %15931, -18446744073709551616
  %15933 = zext i64 %15928 to i128
  %15934 = or i128 %15932, %15933
  %15935 = mul i128 564, %15934
  %15936 = trunc i128 %15935 to i64
  store i64 %15936, i64* %RCX.i65, align 8
  %15937 = sext i64 %15936 to i128
  %15938 = icmp ne i128 %15937, %15935
  %15939 = zext i1 %15938 to i8
  %15940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15939, i8* %15940, align 1
  %15941 = trunc i128 %15935 to i32
  %15942 = and i32 %15941, 255
  %15943 = call i32 @llvm.ctpop.i32(i32 %15942)
  %15944 = trunc i32 %15943 to i8
  %15945 = and i8 %15944, 1
  %15946 = xor i8 %15945, 1
  %15947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15946, i8* %15947, align 1
  %15948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15948, align 1
  %15949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15949, align 1
  %15950 = lshr i64 %15936, 63
  %15951 = trunc i64 %15950 to i8
  %15952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15951, i8* %15952, align 1
  %15953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15939, i8* %15953, align 1
  store %struct.Memory* %loadMem_480ede, %struct.Memory** %MEMORY
  %loadMem_480ee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15955 = getelementptr inbounds %struct.GPR, %struct.GPR* %15954, i32 0, i32 33
  %15956 = getelementptr inbounds %struct.Reg, %struct.Reg* %15955, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %15956 to i64*
  %15957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15958 = getelementptr inbounds %struct.GPR, %struct.GPR* %15957, i32 0, i32 1
  %15959 = getelementptr inbounds %struct.Reg, %struct.Reg* %15958, i32 0, i32 0
  %RAX.i62 = bitcast %union.anon* %15959 to i64*
  %15960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15961 = getelementptr inbounds %struct.GPR, %struct.GPR* %15960, i32 0, i32 5
  %15962 = getelementptr inbounds %struct.Reg, %struct.Reg* %15961, i32 0, i32 0
  %RCX.i63 = bitcast %union.anon* %15962 to i64*
  %15963 = load i64, i64* %RAX.i62
  %15964 = load i64, i64* %RCX.i63
  %15965 = load i64, i64* %PC.i61
  %15966 = add i64 %15965, 3
  store i64 %15966, i64* %PC.i61
  %15967 = add i64 %15964, %15963
  store i64 %15967, i64* %RAX.i62, align 8
  %15968 = icmp ult i64 %15967, %15963
  %15969 = icmp ult i64 %15967, %15964
  %15970 = or i1 %15968, %15969
  %15971 = zext i1 %15970 to i8
  %15972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15971, i8* %15972, align 1
  %15973 = trunc i64 %15967 to i32
  %15974 = and i32 %15973, 255
  %15975 = call i32 @llvm.ctpop.i32(i32 %15974)
  %15976 = trunc i32 %15975 to i8
  %15977 = and i8 %15976, 1
  %15978 = xor i8 %15977, 1
  %15979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15978, i8* %15979, align 1
  %15980 = xor i64 %15964, %15963
  %15981 = xor i64 %15980, %15967
  %15982 = lshr i64 %15981, 4
  %15983 = trunc i64 %15982 to i8
  %15984 = and i8 %15983, 1
  %15985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15984, i8* %15985, align 1
  %15986 = icmp eq i64 %15967, 0
  %15987 = zext i1 %15986 to i8
  %15988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15987, i8* %15988, align 1
  %15989 = lshr i64 %15967, 63
  %15990 = trunc i64 %15989 to i8
  %15991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15990, i8* %15991, align 1
  %15992 = lshr i64 %15963, 63
  %15993 = lshr i64 %15964, 63
  %15994 = xor i64 %15989, %15992
  %15995 = xor i64 %15989, %15993
  %15996 = add i64 %15994, %15995
  %15997 = icmp eq i64 %15996, 2
  %15998 = zext i1 %15997 to i8
  %15999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15998, i8* %15999, align 1
  store %struct.Memory* %loadMem_480ee5, %struct.Memory** %MEMORY
  %loadMem_480ee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16001 = getelementptr inbounds %struct.GPR, %struct.GPR* %16000, i32 0, i32 33
  %16002 = getelementptr inbounds %struct.Reg, %struct.Reg* %16001, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %16002 to i64*
  %16003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16004 = getelementptr inbounds %struct.GPR, %struct.GPR* %16003, i32 0, i32 1
  %16005 = getelementptr inbounds %struct.Reg, %struct.Reg* %16004, i32 0, i32 0
  %RAX.i59 = bitcast %union.anon* %16005 to i64*
  %16006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16007 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16006, i64 0, i64 1
  %YMM1.i60 = bitcast %union.VectorReg* %16007 to %"class.std::bitset"*
  %16008 = bitcast %"class.std::bitset"* %YMM1.i60 to i8*
  %16009 = load i64, i64* %RAX.i59
  %16010 = add i64 %16009, 12
  %16011 = load i64, i64* %PC.i58
  %16012 = add i64 %16011, 5
  store i64 %16012, i64* %PC.i58
  %16013 = inttoptr i64 %16010 to float*
  %16014 = load float, float* %16013
  %16015 = bitcast i8* %16008 to float*
  store float %16014, float* %16015, align 1
  %16016 = getelementptr inbounds i8, i8* %16008, i64 4
  %16017 = bitcast i8* %16016 to float*
  store float 0.000000e+00, float* %16017, align 1
  %16018 = getelementptr inbounds i8, i8* %16008, i64 8
  %16019 = bitcast i8* %16018 to float*
  store float 0.000000e+00, float* %16019, align 1
  %16020 = getelementptr inbounds i8, i8* %16008, i64 12
  %16021 = bitcast i8* %16020 to float*
  store float 0.000000e+00, float* %16021, align 1
  store %struct.Memory* %loadMem_480ee8, %struct.Memory** %MEMORY
  %loadMem_480eed = load %struct.Memory*, %struct.Memory** %MEMORY
  %16022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16023 = getelementptr inbounds %struct.GPR, %struct.GPR* %16022, i32 0, i32 33
  %16024 = getelementptr inbounds %struct.Reg, %struct.Reg* %16023, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %16024 to i64*
  %16025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16026 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16025, i64 0, i64 0
  %XMM0.i53 = bitcast %union.VectorReg* %16026 to %union.vec128_t*
  %16027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16028 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16027, i64 0, i64 1
  %XMM1.i54 = bitcast %union.VectorReg* %16028 to %union.vec128_t*
  %16029 = bitcast %union.vec128_t* %XMM1.i54 to i8*
  %16030 = bitcast %union.vec128_t* %XMM0.i53 to i8*
  %16031 = load i64, i64* %PC.i52
  %16032 = add i64 %16031, 3
  store i64 %16032, i64* %PC.i52
  %16033 = bitcast i8* %16029 to <2 x float>*
  %16034 = load <2 x float>, <2 x float>* %16033, align 1
  %16035 = extractelement <2 x float> %16034, i32 0
  %16036 = bitcast i8* %16030 to <2 x float>*
  %16037 = load <2 x float>, <2 x float>* %16036, align 1
  %16038 = extractelement <2 x float> %16037, i32 0
  %16039 = fcmp uno float %16035, %16038
  br i1 %16039, label %16040, label %16052

; <label>:16040:                                  ; preds = %block_480ecd
  %16041 = fadd float %16035, %16038
  %16042 = bitcast float %16041 to i32
  %16043 = and i32 %16042, 2143289344
  %16044 = icmp eq i32 %16043, 2139095040
  %16045 = and i32 %16042, 4194303
  %16046 = icmp ne i32 %16045, 0
  %16047 = and i1 %16044, %16046
  br i1 %16047, label %16048, label %16058

; <label>:16048:                                  ; preds = %16040
  %16049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16050 = load i64, i64* %16049, align 8
  %16051 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %16050, %struct.Memory* %loadMem_480eed)
  br label %routine_ucomiss__xmm0___xmm1.exit55

; <label>:16052:                                  ; preds = %block_480ecd
  %16053 = fcmp ogt float %16035, %16038
  br i1 %16053, label %16058, label %16054

; <label>:16054:                                  ; preds = %16052
  %16055 = fcmp olt float %16035, %16038
  br i1 %16055, label %16058, label %16056

; <label>:16056:                                  ; preds = %16054
  %16057 = fcmp oeq float %16035, %16038
  br i1 %16057, label %16058, label %16065

; <label>:16058:                                  ; preds = %16056, %16054, %16052, %16040
  %16059 = phi i8 [ 0, %16052 ], [ 0, %16054 ], [ 1, %16056 ], [ 1, %16040 ]
  %16060 = phi i8 [ 0, %16052 ], [ 0, %16054 ], [ 0, %16056 ], [ 1, %16040 ]
  %16061 = phi i8 [ 0, %16052 ], [ 1, %16054 ], [ 0, %16056 ], [ 1, %16040 ]
  %16062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16059, i8* %16062, align 1
  %16063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16060, i8* %16063, align 1
  %16064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16061, i8* %16064, align 1
  br label %16065

; <label>:16065:                                  ; preds = %16058, %16056
  %16066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16066, align 1
  %16067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %16067, align 1
  %16068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16068, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit55

routine_ucomiss__xmm0___xmm1.exit55:              ; preds = %16048, %16065
  %16069 = phi %struct.Memory* [ %16051, %16048 ], [ %loadMem_480eed, %16065 ]
  store %struct.Memory* %16069, %struct.Memory** %MEMORY
  %loadMem_480ef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16071 = getelementptr inbounds %struct.GPR, %struct.GPR* %16070, i32 0, i32 33
  %16072 = getelementptr inbounds %struct.Reg, %struct.Reg* %16071, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %16072 to i64*
  %16073 = load i64, i64* %PC.i51
  %16074 = add i64 %16073, 47
  %16075 = load i64, i64* %PC.i51
  %16076 = add i64 %16075, 6
  %16077 = load i64, i64* %PC.i51
  %16078 = add i64 %16077, 6
  store i64 %16078, i64* %PC.i51
  %16079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16080 = load i8, i8* %16079, align 1
  %16081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16082 = load i8, i8* %16081, align 1
  %16083 = or i8 %16082, %16080
  %16084 = icmp eq i8 %16083, 0
  %16085 = zext i1 %16084 to i8
  store i8 %16085, i8* %BRANCH_TAKEN, align 1
  %16086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16087 = select i1 %16084, i64 %16074, i64 %16076
  store i64 %16087, i64* %16086, align 8
  store %struct.Memory* %loadMem_480ef0, %struct.Memory** %MEMORY
  %loadBr_480ef0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480ef0 = icmp eq i8 %loadBr_480ef0, 1
  br i1 %cmpBr_480ef0, label %block_.L_480f1f, label %block_480ef6

block_480ef6:                                     ; preds = %routine_ucomiss__xmm0___xmm1.exit55
  %loadMem_480ef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16089 = getelementptr inbounds %struct.GPR, %struct.GPR* %16088, i32 0, i32 33
  %16090 = getelementptr inbounds %struct.Reg, %struct.Reg* %16089, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %16090 to i64*
  %16091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16092 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16091, i64 0, i64 0
  %YMM0.i49 = bitcast %union.VectorReg* %16092 to %"class.std::bitset"*
  %16093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16094 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16093, i64 0, i64 0
  %XMM0.i50 = bitcast %union.VectorReg* %16094 to %union.vec128_t*
  %16095 = bitcast %"class.std::bitset"* %YMM0.i49 to i8*
  %16096 = bitcast %"class.std::bitset"* %YMM0.i49 to i8*
  %16097 = bitcast %union.vec128_t* %XMM0.i50 to i8*
  %16098 = load i64, i64* %PC.i48
  %16099 = add i64 %16098, 3
  store i64 %16099, i64* %PC.i48
  %16100 = bitcast i8* %16096 to i64*
  %16101 = load i64, i64* %16100, align 1
  %16102 = getelementptr inbounds i8, i8* %16096, i64 8
  %16103 = bitcast i8* %16102 to i64*
  %16104 = load i64, i64* %16103, align 1
  %16105 = bitcast i8* %16097 to i64*
  %16106 = load i64, i64* %16105, align 1
  %16107 = getelementptr inbounds i8, i8* %16097, i64 8
  %16108 = bitcast i8* %16107 to i64*
  %16109 = load i64, i64* %16108, align 1
  %16110 = xor i64 %16106, %16101
  %16111 = xor i64 %16109, %16104
  %16112 = trunc i64 %16110 to i32
  %16113 = lshr i64 %16110, 32
  %16114 = trunc i64 %16113 to i32
  %16115 = bitcast i8* %16095 to i32*
  store i32 %16112, i32* %16115, align 1
  %16116 = getelementptr inbounds i8, i8* %16095, i64 4
  %16117 = bitcast i8* %16116 to i32*
  store i32 %16114, i32* %16117, align 1
  %16118 = trunc i64 %16111 to i32
  %16119 = getelementptr inbounds i8, i8* %16095, i64 8
  %16120 = bitcast i8* %16119 to i32*
  store i32 %16118, i32* %16120, align 1
  %16121 = lshr i64 %16111, 32
  %16122 = trunc i64 %16121 to i32
  %16123 = getelementptr inbounds i8, i8* %16095, i64 12
  %16124 = bitcast i8* %16123 to i32*
  store i32 %16122, i32* %16124, align 1
  store %struct.Memory* %loadMem_480ef6, %struct.Memory** %MEMORY
  %loadMem_480ef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16126 = getelementptr inbounds %struct.GPR, %struct.GPR* %16125, i32 0, i32 33
  %16127 = getelementptr inbounds %struct.Reg, %struct.Reg* %16126, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %16127 to i64*
  %16128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16129 = getelementptr inbounds %struct.GPR, %struct.GPR* %16128, i32 0, i32 1
  %16130 = getelementptr inbounds %struct.Reg, %struct.Reg* %16129, i32 0, i32 0
  %RAX.i47 = bitcast %union.anon* %16130 to i64*
  %16131 = load i64, i64* %PC.i46
  %16132 = add i64 %16131, 10
  store i64 %16132, i64* %PC.i46
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i47, align 8
  store %struct.Memory* %loadMem_480ef9, %struct.Memory** %MEMORY
  %loadMem_480f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16134 = getelementptr inbounds %struct.GPR, %struct.GPR* %16133, i32 0, i32 33
  %16135 = getelementptr inbounds %struct.Reg, %struct.Reg* %16134, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %16135 to i64*
  %16136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16137 = getelementptr inbounds %struct.GPR, %struct.GPR* %16136, i32 0, i32 5
  %16138 = getelementptr inbounds %struct.Reg, %struct.Reg* %16137, i32 0, i32 0
  %RCX.i44 = bitcast %union.anon* %16138 to i64*
  %16139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16140 = getelementptr inbounds %struct.GPR, %struct.GPR* %16139, i32 0, i32 15
  %16141 = getelementptr inbounds %struct.Reg, %struct.Reg* %16140, i32 0, i32 0
  %RBP.i45 = bitcast %union.anon* %16141 to i64*
  %16142 = load i64, i64* %RBP.i45
  %16143 = sub i64 %16142, 8
  %16144 = load i64, i64* %PC.i43
  %16145 = add i64 %16144, 4
  store i64 %16145, i64* %PC.i43
  %16146 = inttoptr i64 %16143 to i32*
  %16147 = load i32, i32* %16146
  %16148 = sext i32 %16147 to i64
  store i64 %16148, i64* %RCX.i44, align 8
  store %struct.Memory* %loadMem_480f03, %struct.Memory** %MEMORY
  %loadMem_480f07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16150 = getelementptr inbounds %struct.GPR, %struct.GPR* %16149, i32 0, i32 33
  %16151 = getelementptr inbounds %struct.Reg, %struct.Reg* %16150, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %16151 to i64*
  %16152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16153 = getelementptr inbounds %struct.GPR, %struct.GPR* %16152, i32 0, i32 5
  %16154 = getelementptr inbounds %struct.Reg, %struct.Reg* %16153, i32 0, i32 0
  %RCX.i42 = bitcast %union.anon* %16154 to i64*
  %16155 = load i64, i64* %RCX.i42
  %16156 = load i64, i64* %PC.i41
  %16157 = add i64 %16156, 7
  store i64 %16157, i64* %PC.i41
  %16158 = sext i64 %16155 to i128
  %16159 = and i128 %16158, -18446744073709551616
  %16160 = zext i64 %16155 to i128
  %16161 = or i128 %16159, %16160
  %16162 = mul i128 564, %16161
  %16163 = trunc i128 %16162 to i64
  store i64 %16163, i64* %RCX.i42, align 8
  %16164 = sext i64 %16163 to i128
  %16165 = icmp ne i128 %16164, %16162
  %16166 = zext i1 %16165 to i8
  %16167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16166, i8* %16167, align 1
  %16168 = trunc i128 %16162 to i32
  %16169 = and i32 %16168, 255
  %16170 = call i32 @llvm.ctpop.i32(i32 %16169)
  %16171 = trunc i32 %16170 to i8
  %16172 = and i8 %16171, 1
  %16173 = xor i8 %16172, 1
  %16174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16173, i8* %16174, align 1
  %16175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16175, align 1
  %16176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16176, align 1
  %16177 = lshr i64 %16163, 63
  %16178 = trunc i64 %16177 to i8
  %16179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16178, i8* %16179, align 1
  %16180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16166, i8* %16180, align 1
  store %struct.Memory* %loadMem_480f07, %struct.Memory** %MEMORY
  %loadMem_480f0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16182 = getelementptr inbounds %struct.GPR, %struct.GPR* %16181, i32 0, i32 33
  %16183 = getelementptr inbounds %struct.Reg, %struct.Reg* %16182, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %16183 to i64*
  %16184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16185 = getelementptr inbounds %struct.GPR, %struct.GPR* %16184, i32 0, i32 1
  %16186 = getelementptr inbounds %struct.Reg, %struct.Reg* %16185, i32 0, i32 0
  %RAX.i40 = bitcast %union.anon* %16186 to i64*
  %16187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16188 = getelementptr inbounds %struct.GPR, %struct.GPR* %16187, i32 0, i32 5
  %16189 = getelementptr inbounds %struct.Reg, %struct.Reg* %16188, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %16189 to i64*
  %16190 = load i64, i64* %RAX.i40
  %16191 = load i64, i64* %RCX.i
  %16192 = load i64, i64* %PC.i39
  %16193 = add i64 %16192, 3
  store i64 %16193, i64* %PC.i39
  %16194 = add i64 %16191, %16190
  store i64 %16194, i64* %RAX.i40, align 8
  %16195 = icmp ult i64 %16194, %16190
  %16196 = icmp ult i64 %16194, %16191
  %16197 = or i1 %16195, %16196
  %16198 = zext i1 %16197 to i8
  %16199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16198, i8* %16199, align 1
  %16200 = trunc i64 %16194 to i32
  %16201 = and i32 %16200, 255
  %16202 = call i32 @llvm.ctpop.i32(i32 %16201)
  %16203 = trunc i32 %16202 to i8
  %16204 = and i8 %16203, 1
  %16205 = xor i8 %16204, 1
  %16206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16205, i8* %16206, align 1
  %16207 = xor i64 %16191, %16190
  %16208 = xor i64 %16207, %16194
  %16209 = lshr i64 %16208, 4
  %16210 = trunc i64 %16209 to i8
  %16211 = and i8 %16210, 1
  %16212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16211, i8* %16212, align 1
  %16213 = icmp eq i64 %16194, 0
  %16214 = zext i1 %16213 to i8
  %16215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16214, i8* %16215, align 1
  %16216 = lshr i64 %16194, 63
  %16217 = trunc i64 %16216 to i8
  %16218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16217, i8* %16218, align 1
  %16219 = lshr i64 %16190, 63
  %16220 = lshr i64 %16191, 63
  %16221 = xor i64 %16216, %16219
  %16222 = xor i64 %16216, %16220
  %16223 = add i64 %16221, %16222
  %16224 = icmp eq i64 %16223, 2
  %16225 = zext i1 %16224 to i8
  %16226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16225, i8* %16226, align 1
  store %struct.Memory* %loadMem_480f0e, %struct.Memory** %MEMORY
  %loadMem_480f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16228 = getelementptr inbounds %struct.GPR, %struct.GPR* %16227, i32 0, i32 33
  %16229 = getelementptr inbounds %struct.Reg, %struct.Reg* %16228, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %16229 to i64*
  %16230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16231 = getelementptr inbounds %struct.GPR, %struct.GPR* %16230, i32 0, i32 1
  %16232 = getelementptr inbounds %struct.Reg, %struct.Reg* %16231, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %16232 to i64*
  %16233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16234 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16233, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %16234 to %"class.std::bitset"*
  %16235 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %16236 = load i64, i64* %RAX.i
  %16237 = add i64 %16236, 16
  %16238 = load i64, i64* %PC.i38
  %16239 = add i64 %16238, 5
  store i64 %16239, i64* %PC.i38
  %16240 = inttoptr i64 %16237 to float*
  %16241 = load float, float* %16240
  %16242 = bitcast i8* %16235 to float*
  store float %16241, float* %16242, align 1
  %16243 = getelementptr inbounds i8, i8* %16235, i64 4
  %16244 = bitcast i8* %16243 to float*
  store float 0.000000e+00, float* %16244, align 1
  %16245 = getelementptr inbounds i8, i8* %16235, i64 8
  %16246 = bitcast i8* %16245 to float*
  store float 0.000000e+00, float* %16246, align 1
  %16247 = getelementptr inbounds i8, i8* %16235, i64 12
  %16248 = bitcast i8* %16247 to float*
  store float 0.000000e+00, float* %16248, align 1
  store %struct.Memory* %loadMem_480f11, %struct.Memory** %MEMORY
  %loadMem_480f16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16250 = getelementptr inbounds %struct.GPR, %struct.GPR* %16249, i32 0, i32 33
  %16251 = getelementptr inbounds %struct.Reg, %struct.Reg* %16250, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %16251 to i64*
  %16252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16253 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16252, i64 0, i64 0
  %XMM0.i34 = bitcast %union.VectorReg* %16253 to %union.vec128_t*
  %16254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16255 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16254, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %16255 to %union.vec128_t*
  %16256 = bitcast %union.vec128_t* %XMM1.i to i8*
  %16257 = bitcast %union.vec128_t* %XMM0.i34 to i8*
  %16258 = load i64, i64* %PC.i33
  %16259 = add i64 %16258, 3
  store i64 %16259, i64* %PC.i33
  %16260 = bitcast i8* %16256 to <2 x float>*
  %16261 = load <2 x float>, <2 x float>* %16260, align 1
  %16262 = extractelement <2 x float> %16261, i32 0
  %16263 = bitcast i8* %16257 to <2 x float>*
  %16264 = load <2 x float>, <2 x float>* %16263, align 1
  %16265 = extractelement <2 x float> %16264, i32 0
  %16266 = fcmp uno float %16262, %16265
  br i1 %16266, label %16267, label %16279

; <label>:16267:                                  ; preds = %block_480ef6
  %16268 = fadd float %16262, %16265
  %16269 = bitcast float %16268 to i32
  %16270 = and i32 %16269, 2143289344
  %16271 = icmp eq i32 %16270, 2139095040
  %16272 = and i32 %16269, 4194303
  %16273 = icmp ne i32 %16272, 0
  %16274 = and i1 %16271, %16273
  br i1 %16274, label %16275, label %16285

; <label>:16275:                                  ; preds = %16267
  %16276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16277 = load i64, i64* %16276, align 8
  %16278 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %16277, %struct.Memory* %loadMem_480f16)
  br label %routine_ucomiss__xmm0___xmm1.exit

; <label>:16279:                                  ; preds = %block_480ef6
  %16280 = fcmp ogt float %16262, %16265
  br i1 %16280, label %16285, label %16281

; <label>:16281:                                  ; preds = %16279
  %16282 = fcmp olt float %16262, %16265
  br i1 %16282, label %16285, label %16283

; <label>:16283:                                  ; preds = %16281
  %16284 = fcmp oeq float %16262, %16265
  br i1 %16284, label %16285, label %16292

; <label>:16285:                                  ; preds = %16283, %16281, %16279, %16267
  %16286 = phi i8 [ 0, %16279 ], [ 0, %16281 ], [ 1, %16283 ], [ 1, %16267 ]
  %16287 = phi i8 [ 0, %16279 ], [ 0, %16281 ], [ 0, %16283 ], [ 1, %16267 ]
  %16288 = phi i8 [ 0, %16279 ], [ 1, %16281 ], [ 0, %16283 ], [ 1, %16267 ]
  %16289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16286, i8* %16289, align 1
  %16290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16287, i8* %16290, align 1
  %16291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16288, i8* %16291, align 1
  br label %16292

; <label>:16292:                                  ; preds = %16285, %16283
  %16293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16293, align 1
  %16294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %16294, align 1
  %16295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16295, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit

routine_ucomiss__xmm0___xmm1.exit:                ; preds = %16275, %16292
  %16296 = phi %struct.Memory* [ %16278, %16275 ], [ %loadMem_480f16, %16292 ]
  store %struct.Memory* %16296, %struct.Memory** %MEMORY
  %loadMem_480f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16298 = getelementptr inbounds %struct.GPR, %struct.GPR* %16297, i32 0, i32 33
  %16299 = getelementptr inbounds %struct.Reg, %struct.Reg* %16298, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %16299 to i64*
  %16300 = load i64, i64* %PC.i32
  %16301 = add i64 %16300, 69
  %16302 = load i64, i64* %PC.i32
  %16303 = add i64 %16302, 6
  %16304 = load i64, i64* %PC.i32
  %16305 = add i64 %16304, 6
  store i64 %16305, i64* %PC.i32
  %16306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16307 = load i8, i8* %16306, align 1
  %16308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16309 = load i8, i8* %16308, align 1
  %16310 = or i8 %16309, %16307
  %16311 = icmp ne i8 %16310, 0
  %16312 = zext i1 %16311 to i8
  store i8 %16312, i8* %BRANCH_TAKEN, align 1
  %16313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16314 = select i1 %16311, i64 %16301, i64 %16303
  store i64 %16314, i64* %16313, align 8
  store %struct.Memory* %loadMem_480f19, %struct.Memory** %MEMORY
  %loadBr_480f19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480f19 = icmp eq i8 %loadBr_480f19, 1
  br i1 %cmpBr_480f19, label %block_.L_480f5e, label %block_.L_480f1f

block_.L_480f1f:                                  ; preds = %routine_ucomiss__xmm0___xmm1.exit, %routine_ucomiss__xmm0___xmm1.exit55, %routine_ucomiss__xmm0___xmm1.exit78
  %loadMem_480f1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16316 = getelementptr inbounds %struct.GPR, %struct.GPR* %16315, i32 0, i32 33
  %16317 = getelementptr inbounds %struct.Reg, %struct.Reg* %16316, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %16317 to i64*
  %16318 = load i64, i64* %PC.i31
  %16319 = add i64 %16318, 8
  store i64 %16319, i64* %PC.i31
  %16320 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %16321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16321, align 1
  %16322 = and i32 %16320, 255
  %16323 = call i32 @llvm.ctpop.i32(i32 %16322)
  %16324 = trunc i32 %16323 to i8
  %16325 = and i8 %16324, 1
  %16326 = xor i8 %16325, 1
  %16327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16326, i8* %16327, align 1
  %16328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16328, align 1
  %16329 = icmp eq i32 %16320, 0
  %16330 = zext i1 %16329 to i8
  %16331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16330, i8* %16331, align 1
  %16332 = lshr i32 %16320, 31
  %16333 = trunc i32 %16332 to i8
  %16334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16333, i8* %16334, align 1
  %16335 = lshr i32 %16320, 31
  %16336 = xor i32 %16332, %16335
  %16337 = add i32 %16336, %16335
  %16338 = icmp eq i32 %16337, 2
  %16339 = zext i1 %16338 to i8
  %16340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16339, i8* %16340, align 1
  store %struct.Memory* %loadMem_480f1f, %struct.Memory** %MEMORY
  %loadMem_480f27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16342 = getelementptr inbounds %struct.GPR, %struct.GPR* %16341, i32 0, i32 33
  %16343 = getelementptr inbounds %struct.Reg, %struct.Reg* %16342, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %16343 to i64*
  %16344 = load i64, i64* %PC.i30
  %16345 = add i64 %16344, 11
  %16346 = load i64, i64* %PC.i30
  %16347 = add i64 %16346, 6
  %16348 = load i64, i64* %PC.i30
  %16349 = add i64 %16348, 6
  store i64 %16349, i64* %PC.i30
  %16350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16351 = load i8, i8* %16350, align 1
  %16352 = icmp eq i8 %16351, 0
  %16353 = zext i1 %16352 to i8
  store i8 %16353, i8* %BRANCH_TAKEN, align 1
  %16354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16355 = select i1 %16352, i64 %16345, i64 %16347
  store i64 %16355, i64* %16354, align 8
  store %struct.Memory* %loadMem_480f27, %struct.Memory** %MEMORY
  %loadBr_480f27 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_480f27 = icmp eq i8 %loadBr_480f27, 1
  br i1 %cmpBr_480f27, label %block_.L_480f32, label %block_480f2d

block_480f2d:                                     ; preds = %block_.L_480f1f
  %loadMem_480f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16357 = getelementptr inbounds %struct.GPR, %struct.GPR* %16356, i32 0, i32 33
  %16358 = getelementptr inbounds %struct.Reg, %struct.Reg* %16357, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %16358 to i64*
  %16359 = load i64, i64* %PC.i29
  %16360 = add i64 %16359, 36
  %16361 = load i64, i64* %PC.i29
  %16362 = add i64 %16361, 5
  store i64 %16362, i64* %PC.i29
  %16363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16360, i64* %16363, align 8
  store %struct.Memory* %loadMem_480f2d, %struct.Memory** %MEMORY
  br label %block_.L_480f51

block_.L_480f32:                                  ; preds = %block_.L_480f1f
  %loadMem_480f32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16365 = getelementptr inbounds %struct.GPR, %struct.GPR* %16364, i32 0, i32 33
  %16366 = getelementptr inbounds %struct.Reg, %struct.Reg* %16365, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %16366 to i64*
  %16367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16368 = getelementptr inbounds %struct.GPR, %struct.GPR* %16367, i32 0, i32 11
  %16369 = getelementptr inbounds %struct.Reg, %struct.Reg* %16368, i32 0, i32 0
  %RDI.i28 = bitcast %union.anon* %16369 to i64*
  %16370 = load i64, i64* %PC.i27
  %16371 = add i64 %16370, 10
  store i64 %16371, i64* %PC.i27
  store i64 ptrtoint (%G__0x582200_type* @G__0x582200 to i64), i64* %RDI.i28, align 8
  store %struct.Memory* %loadMem_480f32, %struct.Memory** %MEMORY
  %loadMem_480f3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16373 = getelementptr inbounds %struct.GPR, %struct.GPR* %16372, i32 0, i32 33
  %16374 = getelementptr inbounds %struct.Reg, %struct.Reg* %16373, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %16374 to i64*
  %16375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16376 = getelementptr inbounds %struct.GPR, %struct.GPR* %16375, i32 0, i32 9
  %16377 = getelementptr inbounds %struct.Reg, %struct.Reg* %16376, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %16377 to i64*
  %16378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16379 = getelementptr inbounds %struct.GPR, %struct.GPR* %16378, i32 0, i32 15
  %16380 = getelementptr inbounds %struct.Reg, %struct.Reg* %16379, i32 0, i32 0
  %RBP.i26 = bitcast %union.anon* %16380 to i64*
  %16381 = load i64, i64* %RBP.i26
  %16382 = sub i64 %16381, 8
  %16383 = load i64, i64* %PC.i25
  %16384 = add i64 %16383, 3
  store i64 %16384, i64* %PC.i25
  %16385 = inttoptr i64 %16382 to i32*
  %16386 = load i32, i32* %16385
  %16387 = zext i32 %16386 to i64
  store i64 %16387, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_480f3c, %struct.Memory** %MEMORY
  %loadMem_480f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16389 = getelementptr inbounds %struct.GPR, %struct.GPR* %16388, i32 0, i32 33
  %16390 = getelementptr inbounds %struct.Reg, %struct.Reg* %16389, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %16390 to i64*
  %16391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16392 = getelementptr inbounds %struct.GPR, %struct.GPR* %16391, i32 0, i32 15
  %16393 = getelementptr inbounds %struct.Reg, %struct.Reg* %16392, i32 0, i32 0
  %RBP.i23 = bitcast %union.anon* %16393 to i64*
  %16394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16395 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16394, i64 0, i64 0
  %YMM0.i24 = bitcast %union.VectorReg* %16395 to %"class.std::bitset"*
  %16396 = bitcast %"class.std::bitset"* %YMM0.i24 to i8*
  %16397 = load i64, i64* %RBP.i23
  %16398 = sub i64 %16397, 24
  %16399 = load i64, i64* %PC.i22
  %16400 = add i64 %16399, 5
  store i64 %16400, i64* %PC.i22
  %16401 = inttoptr i64 %16398 to float*
  %16402 = load float, float* %16401
  %16403 = fpext float %16402 to double
  %16404 = bitcast i8* %16396 to double*
  store double %16403, double* %16404, align 1
  store %struct.Memory* %loadMem_480f3f, %struct.Memory** %MEMORY
  %loadMem_480f44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16406 = getelementptr inbounds %struct.GPR, %struct.GPR* %16405, i32 0, i32 33
  %16407 = getelementptr inbounds %struct.Reg, %struct.Reg* %16406, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %16407 to i64*
  %16408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16409 = getelementptr inbounds %struct.GPR, %struct.GPR* %16408, i32 0, i32 1
  %16410 = getelementptr inbounds %struct.Reg, %struct.Reg* %16409, i32 0, i32 0
  %16411 = bitcast %union.anon* %16410 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %16411, i32 0, i32 0
  %16412 = load i64, i64* %PC.i21
  %16413 = add i64 %16412, 2
  store i64 %16413, i64* %PC.i21
  store i8 1, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_480f44, %struct.Memory** %MEMORY
  %loadMem1_480f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16415 = getelementptr inbounds %struct.GPR, %struct.GPR* %16414, i32 0, i32 33
  %16416 = getelementptr inbounds %struct.Reg, %struct.Reg* %16415, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %16416 to i64*
  %16417 = load i64, i64* %PC.i20
  %16418 = add i64 %16417, -192918
  %16419 = load i64, i64* %PC.i20
  %16420 = add i64 %16419, 5
  %16421 = load i64, i64* %PC.i20
  %16422 = add i64 %16421, 5
  store i64 %16422, i64* %PC.i20
  %16423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16424 = load i64, i64* %16423, align 8
  %16425 = add i64 %16424, -8
  %16426 = inttoptr i64 %16425 to i64*
  store i64 %16420, i64* %16426
  store i64 %16425, i64* %16423, align 8
  %16427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16418, i64* %16427, align 8
  store %struct.Memory* %loadMem1_480f46, %struct.Memory** %MEMORY
  %loadMem2_480f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480f46 = load i64, i64* %3
  %call2_480f46 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_480f46, %struct.Memory* %loadMem2_480f46)
  store %struct.Memory* %call2_480f46, %struct.Memory** %MEMORY
  %loadMem_480f4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16429 = getelementptr inbounds %struct.GPR, %struct.GPR* %16428, i32 0, i32 33
  %16430 = getelementptr inbounds %struct.Reg, %struct.Reg* %16429, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %16430 to i64*
  %16431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16432 = getelementptr inbounds %struct.GPR, %struct.GPR* %16431, i32 0, i32 1
  %16433 = getelementptr inbounds %struct.Reg, %struct.Reg* %16432, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %16433 to i32*
  %16434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16435 = getelementptr inbounds %struct.GPR, %struct.GPR* %16434, i32 0, i32 15
  %16436 = getelementptr inbounds %struct.Reg, %struct.Reg* %16435, i32 0, i32 0
  %RBP.i19 = bitcast %union.anon* %16436 to i64*
  %16437 = load i64, i64* %RBP.i19
  %16438 = sub i64 %16437, 208
  %16439 = load i32, i32* %EAX.i
  %16440 = zext i32 %16439 to i64
  %16441 = load i64, i64* %PC.i18
  %16442 = add i64 %16441, 6
  store i64 %16442, i64* %PC.i18
  %16443 = inttoptr i64 %16438 to i32*
  store i32 %16439, i32* %16443
  store %struct.Memory* %loadMem_480f4b, %struct.Memory** %MEMORY
  br label %block_.L_480f51

block_.L_480f51:                                  ; preds = %block_.L_480f32, %block_480f2d
  %loadMem_480f51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16445 = getelementptr inbounds %struct.GPR, %struct.GPR* %16444, i32 0, i32 33
  %16446 = getelementptr inbounds %struct.Reg, %struct.Reg* %16445, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %16446 to i64*
  %16447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16448 = getelementptr inbounds %struct.GPR, %struct.GPR* %16447, i32 0, i32 11
  %16449 = getelementptr inbounds %struct.Reg, %struct.Reg* %16448, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %16449 to i64*
  %16450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16451 = getelementptr inbounds %struct.GPR, %struct.GPR* %16450, i32 0, i32 15
  %16452 = getelementptr inbounds %struct.Reg, %struct.Reg* %16451, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %16452 to i64*
  %16453 = load i64, i64* %RBP.i17
  %16454 = sub i64 %16453, 8
  %16455 = load i64, i64* %PC.i16
  %16456 = add i64 %16455, 3
  store i64 %16456, i64* %PC.i16
  %16457 = inttoptr i64 %16454 to i32*
  %16458 = load i32, i32* %16457
  %16459 = zext i32 %16458 to i64
  store i64 %16459, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_480f51, %struct.Memory** %MEMORY
  %loadMem_480f54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16461 = getelementptr inbounds %struct.GPR, %struct.GPR* %16460, i32 0, i32 33
  %16462 = getelementptr inbounds %struct.Reg, %struct.Reg* %16461, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %16462 to i64*
  %16463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16464 = getelementptr inbounds %struct.GPR, %struct.GPR* %16463, i32 0, i32 15
  %16465 = getelementptr inbounds %struct.Reg, %struct.Reg* %16464, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %16465 to i64*
  %16466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16467 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16466, i64 0, i64 0
  %YMM0.i15 = bitcast %union.VectorReg* %16467 to %"class.std::bitset"*
  %16468 = bitcast %"class.std::bitset"* %YMM0.i15 to i8*
  %16469 = load i64, i64* %RBP.i14
  %16470 = sub i64 %16469, 24
  %16471 = load i64, i64* %PC.i13
  %16472 = add i64 %16471, 5
  store i64 %16472, i64* %PC.i13
  %16473 = inttoptr i64 %16470 to float*
  %16474 = load float, float* %16473
  %16475 = bitcast i8* %16468 to float*
  store float %16474, float* %16475, align 1
  %16476 = getelementptr inbounds i8, i8* %16468, i64 4
  %16477 = bitcast i8* %16476 to float*
  store float 0.000000e+00, float* %16477, align 1
  %16478 = getelementptr inbounds i8, i8* %16468, i64 8
  %16479 = bitcast i8* %16478 to float*
  store float 0.000000e+00, float* %16479, align 1
  %16480 = getelementptr inbounds i8, i8* %16468, i64 12
  %16481 = bitcast i8* %16480 to float*
  store float 0.000000e+00, float* %16481, align 1
  store %struct.Memory* %loadMem_480f54, %struct.Memory** %MEMORY
  %loadMem1_480f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16483 = getelementptr inbounds %struct.GPR, %struct.GPR* %16482, i32 0, i32 33
  %16484 = getelementptr inbounds %struct.Reg, %struct.Reg* %16483, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %16484 to i64*
  %16485 = load i64, i64* %PC.i12
  %16486 = add i64 %16485, -365801
  %16487 = load i64, i64* %PC.i12
  %16488 = add i64 %16487, 5
  %16489 = load i64, i64* %PC.i12
  %16490 = add i64 %16489, 5
  store i64 %16490, i64* %PC.i12
  %16491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16492 = load i64, i64* %16491, align 8
  %16493 = add i64 %16492, -8
  %16494 = inttoptr i64 %16493 to i64*
  store i64 %16488, i64* %16494
  store i64 %16493, i64* %16491, align 8
  %16495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16486, i64* %16495, align 8
  store %struct.Memory* %loadMem1_480f59, %struct.Memory** %MEMORY
  %loadMem2_480f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_480f59 = load i64, i64* %3
  %call2_480f59 = call %struct.Memory* @sub_427a70.move_considered(%struct.State* %0, i64 %loadPC_480f59, %struct.Memory* %loadMem2_480f59)
  store %struct.Memory* %call2_480f59, %struct.Memory** %MEMORY
  br label %block_.L_480f5e

block_.L_480f5e:                                  ; preds = %block_.L_480f51, %routine_ucomiss__xmm0___xmm1.exit
  %loadMem_480f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16497 = getelementptr inbounds %struct.GPR, %struct.GPR* %16496, i32 0, i32 33
  %16498 = getelementptr inbounds %struct.Reg, %struct.Reg* %16497, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %16498 to i64*
  %16499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16500 = getelementptr inbounds %struct.GPR, %struct.GPR* %16499, i32 0, i32 15
  %16501 = getelementptr inbounds %struct.Reg, %struct.Reg* %16500, i32 0, i32 0
  %RBP.i10 = bitcast %union.anon* %16501 to i64*
  %16502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16503 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16502, i64 0, i64 0
  %YMM0.i11 = bitcast %union.VectorReg* %16503 to %"class.std::bitset"*
  %16504 = bitcast %"class.std::bitset"* %YMM0.i11 to i8*
  %16505 = load i64, i64* %RBP.i10
  %16506 = sub i64 %16505, 24
  %16507 = load i64, i64* %PC.i9
  %16508 = add i64 %16507, 5
  store i64 %16508, i64* %PC.i9
  %16509 = inttoptr i64 %16506 to float*
  %16510 = load float, float* %16509
  %16511 = bitcast i8* %16504 to float*
  store float %16510, float* %16511, align 1
  %16512 = getelementptr inbounds i8, i8* %16504, i64 4
  %16513 = bitcast i8* %16512 to float*
  store float 0.000000e+00, float* %16513, align 1
  %16514 = getelementptr inbounds i8, i8* %16504, i64 8
  %16515 = bitcast i8* %16514 to float*
  store float 0.000000e+00, float* %16515, align 1
  %16516 = getelementptr inbounds i8, i8* %16504, i64 12
  %16517 = bitcast i8* %16516 to float*
  store float 0.000000e+00, float* %16517, align 1
  store %struct.Memory* %loadMem_480f5e, %struct.Memory** %MEMORY
  %loadMem_480f63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16519 = getelementptr inbounds %struct.GPR, %struct.GPR* %16518, i32 0, i32 33
  %16520 = getelementptr inbounds %struct.Reg, %struct.Reg* %16519, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %16520 to i64*
  %16521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16522 = getelementptr inbounds %struct.GPR, %struct.GPR* %16521, i32 0, i32 15
  %16523 = getelementptr inbounds %struct.Reg, %struct.Reg* %16522, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %16523 to i64*
  %16524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16525 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16524, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %16525 to %union.vec128_t*
  %16526 = load i64, i64* %RBP.i8
  %16527 = sub i64 %16526, 4
  %16528 = bitcast %union.vec128_t* %XMM0.i to i8*
  %16529 = load i64, i64* %PC.i7
  %16530 = add i64 %16529, 5
  store i64 %16530, i64* %PC.i7
  %16531 = bitcast i8* %16528 to <2 x float>*
  %16532 = load <2 x float>, <2 x float>* %16531, align 1
  %16533 = extractelement <2 x float> %16532, i32 0
  %16534 = inttoptr i64 %16527 to float*
  store float %16533, float* %16534
  store %struct.Memory* %loadMem_480f63, %struct.Memory** %MEMORY
  br label %block_.L_480f68

block_.L_480f68:                                  ; preds = %block_.L_480f5e, %block_480067
  %loadMem_480f68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16536 = getelementptr inbounds %struct.GPR, %struct.GPR* %16535, i32 0, i32 33
  %16537 = getelementptr inbounds %struct.Reg, %struct.Reg* %16536, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %16537 to i64*
  %16538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16539 = getelementptr inbounds %struct.GPR, %struct.GPR* %16538, i32 0, i32 15
  %16540 = getelementptr inbounds %struct.Reg, %struct.Reg* %16539, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %16540 to i64*
  %16541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16542 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16541, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %16542 to %"class.std::bitset"*
  %16543 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %16544 = load i64, i64* %RBP.i6
  %16545 = sub i64 %16544, 4
  %16546 = load i64, i64* %PC.i5
  %16547 = add i64 %16546, 5
  store i64 %16547, i64* %PC.i5
  %16548 = inttoptr i64 %16545 to float*
  %16549 = load float, float* %16548
  %16550 = bitcast i8* %16543 to float*
  store float %16549, float* %16550, align 1
  %16551 = getelementptr inbounds i8, i8* %16543, i64 4
  %16552 = bitcast i8* %16551 to float*
  store float 0.000000e+00, float* %16552, align 1
  %16553 = getelementptr inbounds i8, i8* %16543, i64 8
  %16554 = bitcast i8* %16553 to float*
  store float 0.000000e+00, float* %16554, align 1
  %16555 = getelementptr inbounds i8, i8* %16543, i64 12
  %16556 = bitcast i8* %16555 to float*
  store float 0.000000e+00, float* %16556, align 1
  store %struct.Memory* %loadMem_480f68, %struct.Memory** %MEMORY
  %loadMem_480f6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16558 = getelementptr inbounds %struct.GPR, %struct.GPR* %16557, i32 0, i32 33
  %16559 = getelementptr inbounds %struct.Reg, %struct.Reg* %16558, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %16559 to i64*
  %16560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16561 = getelementptr inbounds %struct.GPR, %struct.GPR* %16560, i32 0, i32 13
  %16562 = getelementptr inbounds %struct.Reg, %struct.Reg* %16561, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %16562 to i64*
  %16563 = load i64, i64* %RSP.i
  %16564 = load i64, i64* %PC.i4
  %16565 = add i64 %16564, 7
  store i64 %16565, i64* %PC.i4
  %16566 = add i64 208, %16563
  store i64 %16566, i64* %RSP.i, align 8
  %16567 = icmp ult i64 %16566, %16563
  %16568 = icmp ult i64 %16566, 208
  %16569 = or i1 %16567, %16568
  %16570 = zext i1 %16569 to i8
  %16571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16570, i8* %16571, align 1
  %16572 = trunc i64 %16566 to i32
  %16573 = and i32 %16572, 255
  %16574 = call i32 @llvm.ctpop.i32(i32 %16573)
  %16575 = trunc i32 %16574 to i8
  %16576 = and i8 %16575, 1
  %16577 = xor i8 %16576, 1
  %16578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16577, i8* %16578, align 1
  %16579 = xor i64 208, %16563
  %16580 = xor i64 %16579, %16566
  %16581 = lshr i64 %16580, 4
  %16582 = trunc i64 %16581 to i8
  %16583 = and i8 %16582, 1
  %16584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16583, i8* %16584, align 1
  %16585 = icmp eq i64 %16566, 0
  %16586 = zext i1 %16585 to i8
  %16587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16586, i8* %16587, align 1
  %16588 = lshr i64 %16566, 63
  %16589 = trunc i64 %16588 to i8
  %16590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16589, i8* %16590, align 1
  %16591 = lshr i64 %16563, 63
  %16592 = xor i64 %16588, %16591
  %16593 = add i64 %16592, %16588
  %16594 = icmp eq i64 %16593, 2
  %16595 = zext i1 %16594 to i8
  %16596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16595, i8* %16596, align 1
  store %struct.Memory* %loadMem_480f6d, %struct.Memory** %MEMORY
  %loadMem_480f74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16598 = getelementptr inbounds %struct.GPR, %struct.GPR* %16597, i32 0, i32 33
  %16599 = getelementptr inbounds %struct.Reg, %struct.Reg* %16598, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %16599 to i64*
  %16600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16601 = getelementptr inbounds %struct.GPR, %struct.GPR* %16600, i32 0, i32 15
  %16602 = getelementptr inbounds %struct.Reg, %struct.Reg* %16601, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %16602 to i64*
  %16603 = load i64, i64* %PC.i2
  %16604 = add i64 %16603, 1
  store i64 %16604, i64* %PC.i2
  %16605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16606 = load i64, i64* %16605, align 8
  %16607 = add i64 %16606, 8
  %16608 = inttoptr i64 %16606 to i64*
  %16609 = load i64, i64* %16608
  store i64 %16609, i64* %RBP.i3, align 8
  store i64 %16607, i64* %16605, align 8
  store %struct.Memory* %loadMem_480f74, %struct.Memory** %MEMORY
  %loadMem_480f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16611 = getelementptr inbounds %struct.GPR, %struct.GPR* %16610, i32 0, i32 33
  %16612 = getelementptr inbounds %struct.Reg, %struct.Reg* %16611, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %16612 to i64*
  %16613 = load i64, i64* %PC.i1
  %16614 = add i64 %16613, 1
  store i64 %16614, i64* %PC.i1
  %16615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16617 = load i64, i64* %16616, align 8
  %16618 = inttoptr i64 %16617 to i64*
  %16619 = load i64, i64* %16618
  store i64 %16619, i64* %16615, align 8
  %16620 = add i64 %16617, 8
  store i64 %16620, i64* %16616, align 8
  store %struct.Memory* %loadMem_480f75, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_480f75
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0xd0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 208
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 208
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 208, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 16
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 20
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xb54ce4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48002e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480056(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x581e84___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x581e84_type* @G__0x581e84 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x957___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2391, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57a100___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57a100_type* @G__0x57a100 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967295, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abortgo(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.is_antisuji_move(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_480074(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %12, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = xor i64 %21, %16
  %26 = xor i64 %24, %19
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i8* %10 to i32*
  store i32 %27, i32* %30, align 1
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 1
  %33 = trunc i64 %26 to i32
  %34 = getelementptr inbounds i8, i8* %10, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  %36 = lshr i64 %26, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 4
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480f68(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xab0f20(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xab0f20_type* @G_0xab0f20 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_480090(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xab0edc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xab0edc_type* @G_0xab0edc to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4801a2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb9d8f0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x234___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 564, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x48__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4800dc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x3c__rax____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jbe_.L_4801a2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb9d8f0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x234___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 564, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x48__rdx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 72
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 5
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %21, align 1
  %22 = and i32 %20, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28, align 1
  %29 = icmp eq i32 %20, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %20, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = xor i32 %32, %35
  %37 = add i32 %36, %35
  %38 = icmp eq i32 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x41__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 65
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_48011b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x78__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 120
  %16 = icmp ult i32 %14, 120
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 120
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setl__al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x41__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 65
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x41__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 65
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48012b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480139(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4800e3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x480f80___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x480f80_type* @G__0x480f80 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb9d8f0___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x234___rdi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 564, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x48___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 72, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 72
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 72, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.gg_sort(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.discard_redundant_move_reasons(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x14__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.estimate_territorial_value(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.estimate_strategical_value(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0xc__rdx____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addss_0x10__rax____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fadd float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 24
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.compute_shape_factor(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62e96__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62e96__rip__type* @G_0x62e96__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 28
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x18__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_48021d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62e72__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62e72__rip__type* @G_0x62e72__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x18__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_4809eb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x24__rdx____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addss_0x28__rax____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fadd float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 40
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_48027a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4802b3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x582044___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x582044_type* @G__0x582044 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x28__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x28__rax____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x2___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 2, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.gprintf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62ccd__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62ccd__rip__type* @G_0x62ccd__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jae_.L_4802f9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62c8e__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62c8e__rip__type* @G_0x62c8e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x2c__rax____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jb_.L_480626(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62c5f__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62c5f__rip__type* @G_0x62c5f__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62c7f__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62c7f__rip__type* @G_0x62c7f__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x18__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm2__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 44
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x28__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm1___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm2___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x2c__rax____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm1___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x28__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm3___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM3 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jbe_.L_4803a3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62c20__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62c20__rip__type* @G_0x62c20__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 96
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4803c2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62bb5__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62bb5__rip__type* @G_0x62bb5__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 96
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x60__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62caf__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62caf__rip__type* @G_0x62caf__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x18__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_4804d1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62b55__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62b55__rip__type* @G_0x62b55__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62b75__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62b75__rip__type* @G_0x62b75__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_4804a3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62b20__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62b20__rip__type* @G_0x62b20__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 104
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4804c2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62ab5__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62ab5__rip__type* @G_0x62ab5__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 104
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x68__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 112
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480508(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62ba5__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62ba5__rip__type* @G_0x62ba5__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x70__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorps__xmm1___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %12, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = xor i64 %21, %16
  %26 = xor i64 %24, %19
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i8* %10 to i32*
  store i32 %27, i32* %30, align 1
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 1
  %33 = trunc i64 %26 to i32
  %34 = getelementptr inbounds i8, i8* %10, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  %36 = lshr i64 %26, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %10, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = bitcast i8* %11 to double*
  %20 = load double, double* %19, align 1
  %21 = fptrunc double %20 to float
  %22 = bitcast i8* %10 to float*
  store float %21, float* %22, align 1
  %23 = extractelement <2 x i32> %15, i32 1
  %24 = getelementptr inbounds i8, i8* %10, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  %26 = extractelement <2 x i32> %18, i32 0
  %27 = bitcast i8* %16 to i32*
  store i32 %26, i32* %27, align 1
  %28 = extractelement <2 x i32> %18, i32 1
  %29 = getelementptr inbounds i8, i8* %10, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 48
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x30__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addss_MINUS0x18__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fadd float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x30__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jne_.L_480542(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jp_.L_480542(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480598(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_480555(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480593(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x58208a___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x58208a_type* @G__0x58208a to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x3___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 3, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x28__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addss_0x2c__rdx____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fadd float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss_MINUS0x2c__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fsub float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fsub float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__0x8__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RDX
  %12 = add i64 %11, 8
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x8__rax____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_480621(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__0x8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RAX
  %12 = add i64 %11, 8
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480678(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x1c__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x24__rdx____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulss__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fmul float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62a03__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62a03__rip__type* @G_0x62a03__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x30__rdx____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsd2ss__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %10, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = bitcast i8* %11 to double*
  %20 = load double, double* %19, align 1
  %21 = fptrunc double %20 to float
  %22 = bitcast i8* %10 to float*
  store float %21, float* %22, align 1
  %23 = extractelement <2 x i32> %15, i32 1
  %24 = getelementptr inbounds i8, i8* %10, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  %26 = extractelement <2 x i32> %18, i32 0
  %27 = bitcast i8* %16 to i32*
  store i32 %26, i32* %27, align 1
  %28 = extractelement <2 x i32> %18, i32 1
  %29 = getelementptr inbounds i8, i8* %10, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 24
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x30__rax____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4806e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jp_.L_4806e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480739(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4806f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480734(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x5820d3___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x5820d3_type* @G__0x5820d3 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6298a__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x6298a__rip__type* @G_0x6298a__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x1c__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x20__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_480848(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x18__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 52
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulss_MINUS0x18__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fmul float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_480843(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x5820ea___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x5820ea_type* @G__0x5820ea to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss_MINUS0x34__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fsub float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = fpext float %16 to double
  %18 = bitcast i8* %10 to double*
  store double %17, double* %18, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x5820fd___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x5820fd_type* @G__0x5820fd to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb9d8f0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x99c0a0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x234___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 564, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x14__r8____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x1c__r8____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x234___r8___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 564, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R8, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R9, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x18__r9____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %R9
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x20__rdi____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x1c__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.fprintf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480848(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.move_connects_strings(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0xc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x84__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4809e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62812__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62812__rip__type* @G_0x62812__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl_MINUS0x24__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = inttoptr i64 %13 to i32*
  %22 = load i32, i32* %21
  %23 = sitofp i32 %22 to float
  %24 = bitcast i8* %11 to float*
  store float %23, float* %24, align 1
  %25 = extractelement <2 x i32> %17, i32 1
  %26 = getelementptr inbounds i8, i8* %11, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 0
  %29 = bitcast i8* %18 to i32*
  store i32 %28, i32* %29, align 1
  %30 = extractelement <2 x i32> %20, i32 1
  %31 = getelementptr inbounds i8, i8* %11, i64 12
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd__xmm1___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = fpext float %16 to double
  %18 = bitcast i8* %10 to double*
  store double %17, double* %18, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.pow_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6276c__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x6276c__rip__type* @G_0x6276c__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x626bc__rip____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x626bc__rip__type* @G_0x626bc__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd__xmm2___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fsub double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 56
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_4808d2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 144
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4808e7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6272e__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x6272e__rip__type* @G_0x6272e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62669__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62669__rip__type* @G_0x62669__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_480916(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62657__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62657__rip__type* @G_0x62657__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 152
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480964(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x626ea__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x626ea__rip__type* @G_0x626ea__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_48093f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 160
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480954(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x626c1__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x626c1__rip__type* @G_0x626c1__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xa0__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 60
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4809d2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x582137___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x582137_type* @G__0x582137 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x3c__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulss_MINUS0x38__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fmul float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x582155___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x582155_type* @G__0x582155 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x99c0a0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x38__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480ade(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x24__rdx____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x2c__rax____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomiss__xmm2___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM3 to i8*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = bitcast i8* %11 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = extractelement <2 x float> %18, i32 0
  %20 = fcmp uno float %16, %19
  br i1 %20, label %21, label %33

; <label>:21:                                     ; preds = %block_400488
  %22 = fadd float %16, %19
  %23 = bitcast float %22 to i32
  %24 = and i32 %23, 2143289344
  %25 = icmp eq i32 %24, 2139095040
  %26 = and i32 %23, 4194303
  %27 = icmp ne i32 %26, 0
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %39

; <label>:29:                                     ; preds = %21
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = fcmp ogt float %16, %19
  br i1 %34, label %39, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp olt float %16, %19
  br i1 %36, label %39, label %37

; <label>:37:                                     ; preds = %35
  %38 = fcmp oeq float %16, %19
  br i1 %38, label %39, label %46

; <label>:39:                                     ; preds = %37, %35, %33, %21
  %40 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 1, %37 ], [ 1, %21 ]
  %41 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 0, %37 ], [ 1, %21 ]
  %42 = phi i8 [ 0, %33 ], [ 1, %35 ], [ 0, %37 ], [ 1, %21 ]
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %41, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %42, i8* %45, align 1
  br label %46

; <label>:46:                                     ; preds = %39, %37
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %49, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %29, %46
  %50 = phi %struct.Memory* [ %32, %29 ], [ %2, %46 ]
  ret %struct.Memory* %50
}

define %struct.Memory* @routine_movss__xmm1__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 172
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 176
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_480a7c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x24__rax____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0xb4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 180
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480aa1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x2c__rax____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0xb4__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0xac__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addss__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fadd float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0xb0__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x10__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_480cc7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x22c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 556
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_480cc7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x10__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = bitcast i8* %11 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = extractelement <2 x float> %18, i32 0
  %20 = fcmp uno float %16, %19
  br i1 %20, label %21, label %33

; <label>:21:                                     ; preds = %block_400488
  %22 = fadd float %16, %19
  %23 = bitcast float %22 to i32
  %24 = and i32 %23, 2143289344
  %25 = icmp eq i32 %24, 2139095040
  %26 = and i32 %23, 4194303
  %27 = icmp ne i32 %26, 0
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %39

; <label>:29:                                     ; preds = %21
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = fcmp ogt float %16, %19
  br i1 %34, label %39, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp olt float %16, %19
  br i1 %36, label %39, label %37

; <label>:37:                                     ; preds = %35
  %38 = fcmp oeq float %16, %19
  br i1 %38, label %39, label %46

; <label>:39:                                     ; preds = %37, %35, %33, %21
  %40 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 1, %37 ], [ 1, %21 ]
  %41 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 0, %37 ], [ 1, %21 ]
  %42 = phi i8 [ 0, %33 ], [ 1, %35 ], [ 0, %37 ], [ 1, %21 ]
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %41, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %42, i8* %45, align 1
  br label %46

; <label>:46:                                     ; preds = %39, %37
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %49, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %29, %46
  %50 = phi %struct.Memory* [ %32, %29 ], [ %2, %46 ]
  ret %struct.Memory* %50
}

define %struct.Memory* @routine_jb_.L_480cc7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_480cc7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.is_legal(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.value_moves_confirm_safety(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62411__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62411__rip__type* @G_0x62411__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x8__rax____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm3___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM3 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM2 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jbe_.L_480be2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x10__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 192
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480c1c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x623be__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x623be__rip__type* @G_0x623be__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x8__rax____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm2___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 192
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xc0__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62334__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62334__rip__type* @G_0x62334__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x62404__rip____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62404__rip__type* @G_0x62404__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 64
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x10__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss_MINUS0x18__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fsub float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fsub double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x40__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x40__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomiss_MINUS0x18__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %13 to float*
  %20 = load float, float* %19
  %21 = fcmp uno float %18, %20
  br i1 %21, label %22, label %34

; <label>:22:                                     ; preds = %block_400488
  %23 = fadd float %18, %20
  %24 = bitcast float %23 to i32
  %25 = and i32 %24, 2143289344
  %26 = icmp eq i32 %25, 2139095040
  %27 = and i32 %24, 4194303
  %28 = icmp ne i32 %27, 0
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %40

; <label>:30:                                     ; preds = %22
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = fcmp ogt float %18, %20
  br i1 %35, label %40, label %36

; <label>:36:                                     ; preds = %34
  %37 = fcmp olt float %18, %20
  br i1 %37, label %40, label %38

; <label>:38:                                     ; preds = %36
  %39 = fcmp oeq float %18, %20
  br i1 %39, label %40, label %47

; <label>:40:                                     ; preds = %38, %36, %34, %22
  %41 = phi i8 [ 0, %34 ], [ 0, %36 ], [ 1, %38 ], [ 1, %22 ]
  %42 = phi i8 [ 0, %34 ], [ 0, %36 ], [ 0, %38 ], [ 1, %22 ]
  %43 = phi i8 [ 0, %34 ], [ 1, %36 ], [ 0, %38 ], [ 1, %22 ]
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %42, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %43, i8* %46, align 1
  br label %47

; <label>:47:                                     ; preds = %40, %38
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit: ; preds = %30, %47
  %51 = phi %struct.Memory* [ %33, %30 ], [ %2, %47 ]
  ret %struct.Memory* %51
}

define %struct.Memory* @routine_jbe_.L_480cc2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_480c90(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480cb8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x58217d___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x58217d_type* @G__0x58217d to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480cc7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x34__rdx____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomiss_0x38__rax____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %13 to float*
  %20 = load float, float* %19
  %21 = fcmp uno float %18, %20
  br i1 %21, label %22, label %34

; <label>:22:                                     ; preds = %block_400488
  %23 = fadd float %18, %20
  %24 = bitcast float %23 to i32
  %25 = and i32 %24, 2143289344
  %26 = icmp eq i32 %25, 2139095040
  %27 = and i32 %24, 4194303
  %28 = icmp ne i32 %27, 0
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %40

; <label>:30:                                     ; preds = %22
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = fcmp ogt float %18, %20
  br i1 %35, label %40, label %36

; <label>:36:                                     ; preds = %34
  %37 = fcmp olt float %18, %20
  br i1 %37, label %40, label %38

; <label>:38:                                     ; preds = %36
  %39 = fcmp oeq float %18, %20
  br i1 %39, label %40, label %47

; <label>:40:                                     ; preds = %38, %36, %34, %22
  %41 = phi i8 [ 0, %34 ], [ 0, %36 ], [ 1, %38 ], [ 1, %22 ]
  %42 = phi i8 [ 0, %34 ], [ 0, %36 ], [ 0, %38 ], [ 1, %22 ]
  %43 = phi i8 [ 0, %34 ], [ 1, %36 ], [ 0, %38 ], [ 1, %22 ]
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %42, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %43, i8* %46, align 1
  br label %47

; <label>:47:                                     ; preds = %40, %38
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit: ; preds = %30, %47
  %51 = phi %struct.Memory* [ %33, %30 ], [ %2, %47 ]
  ret %struct.Memory* %51
}

define %struct.Memory* @routine_jbe_.L_480d32(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__0x38__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RAX
  %12 = add i64 %11, 56
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x62436__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62436__rip__type* @G_0x62436__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomiss_0x34__rax____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %13 to float*
  %20 = load float, float* %19
  %21 = fcmp uno float %18, %20
  br i1 %21, label %22, label %34

; <label>:22:                                     ; preds = %block_400488
  %23 = fadd float %18, %20
  %24 = bitcast float %23 to i32
  %25 = and i32 %24, 2143289344
  %26 = icmp eq i32 %25, 2139095040
  %27 = and i32 %24, 4194303
  %28 = icmp ne i32 %27, 0
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %40

; <label>:30:                                     ; preds = %22
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = fcmp ogt float %18, %20
  br i1 %35, label %40, label %36

; <label>:36:                                     ; preds = %34
  %37 = fcmp olt float %18, %20
  br i1 %37, label %40, label %38

; <label>:38:                                     ; preds = %36
  %39 = fcmp oeq float %18, %20
  br i1 %39, label %40, label %47

; <label>:40:                                     ; preds = %38, %36, %34, %22
  %41 = phi i8 [ 0, %34 ], [ 0, %36 ], [ 1, %38 ], [ 1, %22 ]
  %42 = phi i8 [ 0, %34 ], [ 0, %36 ], [ 0, %38 ], [ 1, %22 ]
  %43 = phi i8 [ 0, %34 ], [ 1, %36 ], [ 0, %38 ], [ 1, %22 ]
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %42, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %43, i8* %46, align 1
  br label %47

; <label>:47:                                     ; preds = %40, %38
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit: ; preds = %30, %47
  %51 = phi %struct.Memory* [ %33, %30 ], [ %2, %47 ]
  ret %struct.Memory* %51
}

define %struct.Memory* @routine_jbe_.L_480d8f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x62406__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x62406__rip__type* @G_0x62406__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x18__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divss__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fdiv float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addss_0x34__rax____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fadd float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__0x34__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RAX
  %12 = add i64 %11, 52
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x34__rax____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_480e3c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x34__rax____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_480e18(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480e37(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x5821b4___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x5821b4_type* @G__0x5821b4 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480e3c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_480ebc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x38__rax____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_480e98(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480eb7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x5821da___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x5821da_type* @G__0x5821da to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xcc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480ebc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ja_.L_480f1f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp eq i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0xc__rax____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x10__rax____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_480f5e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_480f32(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_480f51(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x582200___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x582200_type* @G__0x582200 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.move_considered(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x4__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xd0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 208, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 208
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 208, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
