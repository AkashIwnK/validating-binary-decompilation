; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0C\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_47c350.start_timer(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41e0b0.initialize_dragon_data(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_437c30.make_domains(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_47c3d0.time_report(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4a6920.find_connections(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_415900.is_ko_point(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41e3b0.dragon_eye(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41e640.initialize_supplementary_dragon_data(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4317b0.add_lunch(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_451db0.gprintf(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43e310.find_half_and_false_eyes(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4a69b0.modify_eye_spaces(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4398a0.compute_eyes(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43bb10.eyevalue_to_string(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4393f0.propagate_eye(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41e9f0.analyze_false_eye_territory(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_439550.find_eye_dragons(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_452090.abortgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43b1a0.eye_move_urgency(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43cc10.add_eyevalues(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41ec60.compute_escape(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_42d360.resegment_initial_influence(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41ef50.compute_refined_dragon_weaknesses(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41f000.compute_crude_status(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41f340.find_neighbor_dragons(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_44fa70.purge_persistent_owl_cache(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4393a0.set_eyevalue(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41f950.crude_dragon_weakness(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_446910.owl_attack(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_44aac0.owl_defend(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_44c3c0.owl_does_defend(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40ea30.get_last_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41fc30.is_same_dragon(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_44adb0.owl_threaten_defense(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_44a3f0.owl_threaten_attack(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4757d0.compute_surroundings(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43b010.max_eyes(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43baf0.min_eyes(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41fdb0.dragon_looks_inessential(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41fe30.dragon_invincible(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_470590.new_semeai(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_46eab0.semeai(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4880f0.is_worm_origin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_413ec0.extended_chainlinks(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_488480.propagate_worm(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_420150.first_worm_in_dragon(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_420180.next_worm_in_dragon(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x7ae448_type = type <{ [1 x i8] }>
@G_0x7ae448= global %G_0x7ae448_type <{ [1 x i8] c"\00" }>
%G_0x7ae44c_type = type <{ [1 x i8] }>
@G_0x7ae44c= global %G_0x7ae44c_type <{ [1 x i8] c"\00" }>
%G_0x7ae454_type = type <{ [1 x i8] }>
@G_0x7ae454= global %G_0x7ae454_type <{ [1 x i8] c"\00" }>
%G_0xaaf050_type = type <{ [4 x i8] }>
@G_0xaaf050= global %G_0xaaf050_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xaaf054_type = type <{ [4 x i8] }>
@G_0xaaf054= global %G_0xaaf054_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xaaf058_type = type <{ [4 x i8] }>
@G_0xaaf058= global %G_0xaaf058_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xab0ed0_type = type <{ [4 x i8] }>
@G_0xab0ed0= global %G_0xab0ed0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xab0f24_type = type <{ [4 x i8] }>
@G_0xab0f24= global %G_0xab0f24_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xab0f28_type = type <{ [1 x i8] }>
@G_0xab0f28= global %G_0xab0f28_type <{ [1 x i8] c"\00" }>
%G_0xab0fb4_type = type <{ [1 x i8] }>
@G_0xab0fb4= global %G_0xab0fb4_type <{ [1 x i8] c"\00" }>
%G_0xab0fc4_type = type <{ [1 x i8] }>
@G_0xab0fc4= global %G_0xab0fc4_type <{ [1 x i8] c"\00" }>
%G_0xab0fe0_type = type <{ [8 x i8] }>
@G_0xab0fe0= global %G_0xab0fe0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xb54cec_type = type <{ [4 x i8] }>
@G_0xb54cec= global %G_0xb54cec_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xc4f96__rip__type = type <{ [8 x i8] }>
@G_0xc4f96__rip_= global %G_0xc4f96__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc5133__rip__type = type <{ [8 x i8] }>
@G_0xc5133__rip_= global %G_0xc5133__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc5393__rip__type = type <{ [8 x i8] }>
@G_0xc5393__rip_= global %G_0xc5393__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc53ea__rip__type = type <{ [8 x i8] }>
@G_0xc53ea__rip_= global %G_0xc53ea__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc57cf__rip__type = type <{ [8 x i8] }>
@G_0xc57cf__rip_= global %G_0xc57cf__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc589a__rip__type = type <{ [8 x i8] }>
@G_0xc589a__rip_= global %G_0xc589a__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc5b25__rip__type = type <{ [8 x i8] }>
@G_0xc5b25__rip_= global %G_0xc5b25__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc5b2a__rip__type = type <{ [8 x i8] }>
@G_0xc5b2a__rip_= global %G_0xc5b2a__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc5b71__rip__type = type <{ [8 x i8] }>
@G_0xc5b71__rip_= global %G_0xc5b71__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc5bb9__rip__type = type <{ [8 x i8] }>
@G_0xc5bb9__rip_= global %G_0xc5bb9__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc5db5__rip__type = type <{ [8 x i8] }>
@G_0xc5db5__rip_= global %G_0xc5db5__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc5f18__rip__type = type <{ [8 x i8] }>
@G_0xc5f18__rip_= global %G_0xc5f18__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc5fa4__rip__type = type <{ [8 x i8] }>
@G_0xc5fa4__rip_= global %G_0xc5fa4__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc636c__rip__type = type <{ [8 x i8] }>
@G_0xc636c__rip_= global %G_0xc636c__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc6371__rip__type = type <{ [8 x i8] }>
@G_0xc6371__rip_= global %G_0xc6371__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc63b8__rip__type = type <{ [8 x i8] }>
@G_0xc63b8__rip_= global %G_0xc63b8__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc6400__rip__type = type <{ [8 x i8] }>
@G_0xc6400__rip_= global %G_0xc6400__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc6512__rip__type = type <{ [8 x i8] }>
@G_0xc6512__rip_= global %G_0xc6512__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc714f__rip__type = type <{ [8 x i8] }>
@G_0xc714f__rip_= global %G_0xc714f__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc72d0__rip__type = type <{ [8 x i8] }>
@G_0xc72d0__rip_= global %G_0xc72d0__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xc72fb__rip__type = type <{ [8 x i8] }>
@G_0xc72fb__rip_= global %G_0xc72fb__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57ad9b_type = type <{ [8 x i8] }>
@G__0x57ad9b= global %G__0x57ad9b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57ae9c_type = type <{ [8 x i8] }>
@G__0x57ae9c= global %G__0x57ae9c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57aeb3_type = type <{ [8 x i8] }>
@G__0x57aeb3= global %G__0x57aeb3_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57aece_type = type <{ [8 x i8] }>
@G__0x57aece= global %G__0x57aece_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57aeeb_type = type <{ [8 x i8] }>
@G__0x57aeeb= global %G__0x57aeeb_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57af1a_type = type <{ [8 x i8] }>
@G__0x57af1a= global %G__0x57af1a_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57af35_type = type <{ [8 x i8] }>
@G__0x57af35= global %G__0x57af35_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57af50_type = type <{ [8 x i8] }>
@G__0x57af50= global %G__0x57af50_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57af5f_type = type <{ [8 x i8] }>
@G__0x57af5f= global %G__0x57af5f_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57af95_type = type <{ [8 x i8] }>
@G__0x57af95= global %G__0x57af95_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57afa4_type = type <{ [8 x i8] }>
@G__0x57afa4= global %G__0x57afa4_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57afba_type = type <{ [8 x i8] }>
@G__0x57afba= global %G__0x57afba_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57aff0_type = type <{ [8 x i8] }>
@G__0x57aff0= global %G__0x57aff0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b00f_type = type <{ [8 x i8] }>
@G__0x57b00f= global %G__0x57b00f_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b01d_type = type <{ [8 x i8] }>
@G__0x57b01d= global %G__0x57b01d_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b02e_type = type <{ [8 x i8] }>
@G__0x57b02e= global %G__0x57b02e_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b04d_type = type <{ [8 x i8] }>
@G__0x57b04d= global %G__0x57b04d_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b06c_type = type <{ [8 x i8] }>
@G__0x57b06c= global %G__0x57b06c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b07b_type = type <{ [8 x i8] }>
@G__0x57b07b= global %G__0x57b07b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b082_type = type <{ [8 x i8] }>
@G__0x57b082= global %G__0x57b082_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b0a2_type = type <{ [8 x i8] }>
@G__0x57b0a2= global %G__0x57b0a2_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b0b9_type = type <{ [8 x i8] }>
@G__0x57b0b9= global %G__0x57b0b9_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b0c9_type = type <{ [8 x i8] }>
@G__0x57b0c9= global %G__0x57b0c9_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b0ee_type = type <{ [8 x i8] }>
@G__0x57b0ee= global %G__0x57b0ee_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b10b_type = type <{ [8 x i8] }>
@G__0x57b10b= global %G__0x57b10b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57b132_type = type <{ [8 x i8] }>
@G__0x57b132= global %G__0x57b132_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0xb01180_type = type <{ [8 x i8] }>
@G__0xb01180= global %G__0xb01180_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0xb0eff0_type = type <{ [8 x i8] }>
@G__0xb0eff0= global %G__0xb0eff0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0xb45500_type = type <{ [8 x i8] }>
@G__0xb45500= global %G__0xb45500_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0xb4bd20_type = type <{ [8 x i8] }>
@G__0xb4bd20= global %G__0xb4bd20_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0xb9a0a0_type = type <{ [8 x i8] }>
@G__0xb9a0a0= global %G__0xb9a0a0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @make_dragons(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .make_dragons:	 RIP: 41bc00	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 41bc00	 Bytes: 1
  %loadMem_41bc00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc00 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc00)
  store %struct.Memory* %call_41bc00, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 41bc01	 Bytes: 3
  %loadMem_41bc01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc01 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc01)
  store %struct.Memory* %call_41bc01, %struct.Memory** %MEMORY

  ; Code: pushq %rbx	 RIP: 41bc04	 Bytes: 1
  %loadMem_41bc04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc04 = call %struct.Memory* @routine_pushq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc04)
  store %struct.Memory* %call_41bc04, %struct.Memory** %MEMORY

  ; Code: subq $0x468, %rsp	 RIP: 41bc05	 Bytes: 7
  %loadMem_41bc05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc05 = call %struct.Memory* @routine_subq__0x468___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc05)
  store %struct.Memory* %call_41bc05, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %eax	 RIP: 41bc0c	 Bytes: 5
  %loadMem_41bc0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc0c = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc0c)
  store %struct.Memory* %call_41bc0c, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0xc(%rbp)	 RIP: 41bc11	 Bytes: 3
  %loadMem_41bc11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc11 = call %struct.Memory* @routine_movl__edi__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc11)
  store %struct.Memory* %call_41bc11, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x10(%rbp)	 RIP: 41bc14	 Bytes: 3
  %loadMem_41bc14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc14 = call %struct.Memory* @routine_movl__esi__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc14)
  store %struct.Memory* %call_41bc14, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x14(%rbp)	 RIP: 41bc17	 Bytes: 3
  %loadMem_41bc17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc17 = call %struct.Memory* @routine_movl__edx__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc17)
  store %struct.Memory* %call_41bc17, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 41bc1a	 Bytes: 2
  %loadMem_41bc1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc1a = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc1a)
  store %struct.Memory* %call_41bc1a, %struct.Memory** %MEMORY

  ; Code: callq .start_timer	 RIP: 41bc1c	 Bytes: 5
  %loadMem1_41bc1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41bc1c = call %struct.Memory* @routine_callq_.start_timer(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41bc1c, i64 395060, i64 5, i64 5)
  store %struct.Memory* %call1_41bc1c, %struct.Memory** %MEMORY

  %loadMem2_41bc1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bc1c = load i64, i64* %3
  %call2_41bc1c = call %struct.Memory* @sub_47c350.start_timer(%struct.State* %0, i64  %loadPC_41bc1c, %struct.Memory* %loadMem2_41bc1c)
  store %struct.Memory* %call2_41bc1c, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0xaaf050	 RIP: 41bc21	 Bytes: 11
  %loadMem_41bc21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc21 = call %struct.Memory* @routine_movl__0x0__0xaaf050(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc21)
  store %struct.Memory* %call_41bc21, %struct.Memory** %MEMORY

  ; Code: callq .initialize_dragon_data	 RIP: 41bc2c	 Bytes: 5
  %loadMem1_41bc2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41bc2c = call %struct.Memory* @routine_callq_.initialize_dragon_data(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41bc2c, i64 9348, i64 5, i64 5)
  store %struct.Memory* %call1_41bc2c, %struct.Memory** %MEMORY

  %loadMem2_41bc2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bc2c = load i64, i64* %3
  %call2_41bc2c = call %struct.Memory* @sub_41e0b0.initialize_dragon_data(%struct.State* %0, i64  %loadPC_41bc2c, %struct.Memory* %loadMem2_41bc2c)
  store %struct.Memory* %call2_41bc2c, %struct.Memory** %MEMORY

  ; Code: movq $0xb01180, %rdi	 RIP: 41bc31	 Bytes: 10
  %loadMem_41bc31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc31 = call %struct.Memory* @routine_movq__0xb01180___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc31)
  store %struct.Memory* %call_41bc31, %struct.Memory** %MEMORY

  ; Code: movq $0xb9a0a0, %rsi	 RIP: 41bc3b	 Bytes: 10
  %loadMem_41bc3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc3b = call %struct.Memory* @routine_movq__0xb9a0a0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc3b)
  store %struct.Memory* %call_41bc3b, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41bc45	 Bytes: 2
  %loadMem_41bc45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc45 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc45)
  store %struct.Memory* %call_41bc45, %struct.Memory** %MEMORY

  ; Code: callq .make_domains	 RIP: 41bc47	 Bytes: 5
  %loadMem1_41bc47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41bc47 = call %struct.Memory* @routine_callq_.make_domains(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41bc47, i64 114665, i64 5, i64 5)
  store %struct.Memory* %call1_41bc47, %struct.Memory** %MEMORY

  %loadMem2_41bc47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bc47 = load i64, i64* %3
  %call2_41bc47 = call %struct.Memory* @sub_437c30.make_domains(%struct.State* %0, i64  %loadPC_41bc47, %struct.Memory* %loadMem2_41bc47)
  store %struct.Memory* %call2_41bc47, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %edi	 RIP: 41bc4c	 Bytes: 5
  %loadMem_41bc4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc4c = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc4c)
  store %struct.Memory* %call_41bc4c, %struct.Memory** %MEMORY

  ; Code: movq $0x57ae9c, %rsi	 RIP: 41bc51	 Bytes: 10
  %loadMem_41bc51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc51 = call %struct.Memory* @routine_movq__0x57ae9c___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc51)
  store %struct.Memory* %call_41bc51, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41bc5b	 Bytes: 2
  %loadMem_41bc5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc5b = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc5b)
  store %struct.Memory* %call_41bc5b, %struct.Memory** %MEMORY

  ; Code: movsd 0xc72fb(%rip), %xmm0	 RIP: 41bc5d	 Bytes: 8
  %loadMem_41bc5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc5d = call %struct.Memory* @routine_movsd_0xc72fb__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc5d)
  store %struct.Memory* %call_41bc5d, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41bc65	 Bytes: 5
  %loadMem1_41bc65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41bc65 = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41bc65, i64 395115, i64 5, i64 5)
  store %struct.Memory* %call1_41bc65, %struct.Memory** %MEMORY

  %loadMem2_41bc65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bc65 = load i64, i64* %3
  %call2_41bc65 = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41bc65, %struct.Memory* %loadMem2_41bc65)
  store %struct.Memory* %call2_41bc65, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x358(%rbp)	 RIP: 41bc6a	 Bytes: 8
  %loadMem_41bc6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc6a = call %struct.Memory* @routine_movsd__xmm0__MINUS0x358__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc6a)
  store %struct.Memory* %call_41bc6a, %struct.Memory** %MEMORY

  ; Code: callq .find_connections	 RIP: 41bc72	 Bytes: 5
  %loadMem1_41bc72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41bc72 = call %struct.Memory* @routine_callq_.find_connections(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41bc72, i64 568494, i64 5, i64 5)
  store %struct.Memory* %call1_41bc72, %struct.Memory** %MEMORY

  %loadMem2_41bc72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bc72 = load i64, i64* %3
  %call2_41bc72 = call %struct.Memory* @sub_4a6920.find_connections(%struct.State* %0, i64  %loadPC_41bc72, %struct.Memory* %loadMem2_41bc72)
  store %struct.Memory* %call2_41bc72, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %edi	 RIP: 41bc77	 Bytes: 5
  %loadMem_41bc77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc77 = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc77)
  store %struct.Memory* %call_41bc77, %struct.Memory** %MEMORY

  ; Code: movq $0x57aeb3, %rsi	 RIP: 41bc7c	 Bytes: 10
  %loadMem_41bc7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc7c = call %struct.Memory* @routine_movq__0x57aeb3___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc7c)
  store %struct.Memory* %call_41bc7c, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41bc86	 Bytes: 2
  %loadMem_41bc86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc86 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc86)
  store %struct.Memory* %call_41bc86, %struct.Memory** %MEMORY

  ; Code: movsd 0xc72d0(%rip), %xmm0	 RIP: 41bc88	 Bytes: 8
  %loadMem_41bc88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc88 = call %struct.Memory* @routine_movsd_0xc72d0__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc88)
  store %struct.Memory* %call_41bc88, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41bc90	 Bytes: 5
  %loadMem1_41bc90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41bc90 = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41bc90, i64 395072, i64 5, i64 5)
  store %struct.Memory* %call1_41bc90, %struct.Memory** %MEMORY

  %loadMem2_41bc90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bc90 = load i64, i64* %3
  %call2_41bc90 = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41bc90, %struct.Memory* %loadMem2_41bc90)
  store %struct.Memory* %call2_41bc90, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x7ae454	 RIP: 41bc95	 Bytes: 8
  %loadMem_41bc95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc95 = call %struct.Memory* @routine_cmpl__0x0__0x7ae454(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc95)
  store %struct.Memory* %call_41bc95, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x360(%rbp)	 RIP: 41bc9d	 Bytes: 8
  %loadMem_41bc9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bc9d = call %struct.Memory* @routine_movsd__xmm0__MINUS0x360__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bc9d)
  store %struct.Memory* %call_41bc9d, %struct.Memory** %MEMORY

  ; Code: jne .L_41be1e	 RIP: 41bca5	 Bytes: 6
  %loadMem_41bca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bca5 = call %struct.Memory* @routine_jne_.L_41be1e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bca5, i8* %BRANCH_TAKEN, i64 377, i64 6, i64 6)
  store %struct.Memory* %call_41bca5, %struct.Memory** %MEMORY

  %loadBr_41bca5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bca5 = icmp eq i8 %loadBr_41bca5, 1
  br i1 %cmpBr_41bca5, label %block_.L_41be1e, label %block_41bcab

block_41bcab:
  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41bcab	 Bytes: 7
  %loadMem_41bcab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bcab = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bcab)
  store %struct.Memory* %call_41bcab, %struct.Memory** %MEMORY

  ; Code: .L_41bcb2:	 RIP: 41bcb2	 Bytes: 0
  br label %block_.L_41bcb2
block_.L_41bcb2:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41bcb2	 Bytes: 7
  %loadMem_41bcb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bcb2 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bcb2)
  store %struct.Memory* %call_41bcb2, %struct.Memory** %MEMORY

  ; Code: jge .L_41bdf8	 RIP: 41bcb9	 Bytes: 6
  %loadMem_41bcb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bcb9 = call %struct.Memory* @routine_jge_.L_41bdf8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bcb9, i8* %BRANCH_TAKEN, i64 319, i64 6, i64 6)
  store %struct.Memory* %call_41bcb9, %struct.Memory** %MEMORY

  %loadBr_41bcb9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bcb9 = icmp eq i8 %loadBr_41bcb9, 1
  br i1 %cmpBr_41bcb9, label %block_.L_41bdf8, label %block_41bcbf

block_41bcbf:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41bcbf	 Bytes: 4
  %loadMem_41bcbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bcbf = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bcbf)
  store %struct.Memory* %call_41bcbf, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41bcc3	 Bytes: 8
  %loadMem_41bcc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bcc3 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bcc3)
  store %struct.Memory* %call_41bcc3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41bccb	 Bytes: 3
  %loadMem_41bccb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bccb = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bccb)
  store %struct.Memory* %call_41bccb, %struct.Memory** %MEMORY

  ; Code: je .L_41bde5	 RIP: 41bcce	 Bytes: 6
  %loadMem_41bcce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bcce = call %struct.Memory* @routine_je_.L_41bde5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bcce, i8* %BRANCH_TAKEN, i64 279, i64 6, i64 6)
  store %struct.Memory* %call_41bcce, %struct.Memory** %MEMORY

  %loadBr_41bcce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bcce = icmp eq i8 %loadBr_41bcce, 1
  br i1 %cmpBr_41bcce, label %block_.L_41bde5, label %block_41bcd4

block_41bcd4:
  ; Code: movq $0xb01180, %rax	 RIP: 41bcd4	 Bytes: 10
  %loadMem_41bcd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bcd4 = call %struct.Memory* @routine_movq__0xb01180___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bcd4)
  store %struct.Memory* %call_41bcd4, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41bcde	 Bytes: 4
  %loadMem_41bcde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bcde = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bcde)
  store %struct.Memory* %call_41bcde, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41bce2	 Bytes: 4
  %loadMem_41bce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bce2 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bce2)
  store %struct.Memory* %call_41bce2, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41bce6	 Bytes: 3
  %loadMem_41bce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bce6 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bce6)
  store %struct.Memory* %call_41bce6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5, (%rax)	 RIP: 41bce9	 Bytes: 3
  %loadMem_41bce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bce9 = call %struct.Memory* @routine_cmpl__0x5____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bce9)
  store %struct.Memory* %call_41bce9, %struct.Memory** %MEMORY

  ; Code: jne .L_41bd5a	 RIP: 41bcec	 Bytes: 6
  %loadMem_41bcec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bcec = call %struct.Memory* @routine_jne_.L_41bd5a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bcec, i8* %BRANCH_TAKEN, i64 110, i64 6, i64 6)
  store %struct.Memory* %call_41bcec, %struct.Memory** %MEMORY

  %loadBr_41bcec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bcec = icmp eq i8 %loadBr_41bcec, 1
  br i1 %cmpBr_41bcec, label %block_.L_41bd5a, label %block_41bcf2

block_41bcf2:
  ; Code: movq $0xb01180, %rax	 RIP: 41bcf2	 Bytes: 10
  %loadMem_41bcf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bcf2 = call %struct.Memory* @routine_movq__0xb01180___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bcf2)
  store %struct.Memory* %call_41bcf2, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41bcfc	 Bytes: 4
  %loadMem_41bcfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bcfc = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bcfc)
  store %struct.Memory* %call_41bcfc, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41bd00	 Bytes: 4
  %loadMem_41bd00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd00 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd00)
  store %struct.Memory* %call_41bd00, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41bd04	 Bytes: 3
  %loadMem_41bd04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd04 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd04)
  store %struct.Memory* %call_41bd04, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %edx	 RIP: 41bd07	 Bytes: 3
  %loadMem_41bd07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd07 = call %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd07)
  store %struct.Memory* %call_41bd07, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41bd0a	 Bytes: 3
  %loadMem_41bd0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd0a = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd0a)
  store %struct.Memory* %call_41bd0a, %struct.Memory** %MEMORY

  ; Code: jne .L_41bd5a	 RIP: 41bd0d	 Bytes: 6
  %loadMem_41bd0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd0d = call %struct.Memory* @routine_jne_.L_41bd5a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd0d, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_41bd0d, %struct.Memory** %MEMORY

  %loadBr_41bd0d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bd0d = icmp eq i8 %loadBr_41bd0d, 1
  br i1 %cmpBr_41bd0d, label %block_.L_41bd5a, label %block_41bd13

block_41bd13:
  ; Code: movl -0x18(%rbp), %edi	 RIP: 41bd13	 Bytes: 3
  %loadMem_41bd13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd13 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd13)
  store %struct.Memory* %call_41bd13, %struct.Memory** %MEMORY

  ; Code: callq .is_ko_point	 RIP: 41bd16	 Bytes: 5
  %loadMem1_41bd16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41bd16 = call %struct.Memory* @routine_callq_.is_ko_point(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41bd16, i64 -25622, i64 5, i64 5)
  store %struct.Memory* %call1_41bd16, %struct.Memory** %MEMORY

  %loadMem2_41bd16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bd16 = load i64, i64* %3
  %call2_41bd16 = call %struct.Memory* @sub_415900.is_ko_point(%struct.State* %0, i64  %loadPC_41bd16, %struct.Memory* %loadMem2_41bd16)
  store %struct.Memory* %call2_41bd16, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41bd1b	 Bytes: 3
  %loadMem_41bd1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd1b = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd1b)
  store %struct.Memory* %call_41bd1b, %struct.Memory** %MEMORY

  ; Code: je .L_41bd43	 RIP: 41bd1e	 Bytes: 6
  %loadMem_41bd1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd1e = call %struct.Memory* @routine_je_.L_41bd43(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd1e, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_41bd1e, %struct.Memory** %MEMORY

  %loadBr_41bd1e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bd1e = icmp eq i8 %loadBr_41bd1e, 1
  br i1 %cmpBr_41bd1e, label %block_.L_41bd43, label %block_41bd24

block_41bd24:
  ; Code: movq $0xb01180, %rax	 RIP: 41bd24	 Bytes: 10
  %loadMem_41bd24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd24 = call %struct.Memory* @routine_movq__0xb01180___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd24)
  store %struct.Memory* %call_41bd24, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41bd2e	 Bytes: 4
  %loadMem_41bd2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd2e = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd2e)
  store %struct.Memory* %call_41bd2e, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41bd32	 Bytes: 4
  %loadMem_41bd32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd32 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd32)
  store %struct.Memory* %call_41bd32, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41bd36	 Bytes: 3
  %loadMem_41bd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd36 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd36)
  store %struct.Memory* %call_41bd36, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x4(%rax)	 RIP: 41bd39	 Bytes: 4
  %loadMem_41bd39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd39 = call %struct.Memory* @routine_cmpl__0x1__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd39)
  store %struct.Memory* %call_41bd39, %struct.Memory** %MEMORY

  ; Code: jle .L_41bd55	 RIP: 41bd3d	 Bytes: 6
  %loadMem_41bd3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd3d = call %struct.Memory* @routine_jle_.L_41bd55(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd3d, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_41bd3d, %struct.Memory** %MEMORY

  %loadBr_41bd3d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bd3d = icmp eq i8 %loadBr_41bd3d, 1
  br i1 %cmpBr_41bd3d, label %block_.L_41bd55, label %block_.L_41bd43

  ; Code: .L_41bd43:	 RIP: 41bd43	 Bytes: 0
block_.L_41bd43:

  ; Code: movq $0xb01180, %rsi	 RIP: 41bd43	 Bytes: 10
  %loadMem_41bd43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd43 = call %struct.Memory* @routine_movq__0xb01180___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd43)
  store %struct.Memory* %call_41bd43, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41bd4d	 Bytes: 3
  %loadMem_41bd4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd4d = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd4d)
  store %struct.Memory* %call_41bd4d, %struct.Memory** %MEMORY

  ; Code: callq .dragon_eye	 RIP: 41bd50	 Bytes: 5
  %loadMem1_41bd50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41bd50 = call %struct.Memory* @routine_callq_.dragon_eye(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41bd50, i64 9824, i64 5, i64 5)
  store %struct.Memory* %call1_41bd50, %struct.Memory** %MEMORY

  %loadMem2_41bd50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bd50 = load i64, i64* %3
  %call2_41bd50 = call %struct.Memory* @sub_41e3b0.dragon_eye(%struct.State* %0, i64  %loadPC_41bd50, %struct.Memory* %loadMem2_41bd50)
  store %struct.Memory* %call2_41bd50, %struct.Memory** %MEMORY

  ; Code: .L_41bd55:	 RIP: 41bd55	 Bytes: 0
  br label %block_.L_41bd55
block_.L_41bd55:

  ; Code: jmpq .L_41bd5a	 RIP: 41bd55	 Bytes: 5
  %loadMem_41bd55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd55 = call %struct.Memory* @routine_jmpq_.L_41bd5a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd55, i64 5, i64 5)
  store %struct.Memory* %call_41bd55, %struct.Memory** %MEMORY

  br label %block_.L_41bd5a

  ; Code: .L_41bd5a:	 RIP: 41bd5a	 Bytes: 0
block_.L_41bd5a:

  ; Code: movq $0xb9a0a0, %rax	 RIP: 41bd5a	 Bytes: 10
  %loadMem_41bd5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd5a = call %struct.Memory* @routine_movq__0xb9a0a0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd5a)
  store %struct.Memory* %call_41bd5a, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41bd64	 Bytes: 4
  %loadMem_41bd64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd64 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd64)
  store %struct.Memory* %call_41bd64, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41bd68	 Bytes: 4
  %loadMem_41bd68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd68 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd68)
  store %struct.Memory* %call_41bd68, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41bd6c	 Bytes: 3
  %loadMem_41bd6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd6c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd6c)
  store %struct.Memory* %call_41bd6c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, (%rax)	 RIP: 41bd6f	 Bytes: 3
  %loadMem_41bd6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd6f = call %struct.Memory* @routine_cmpl__0x4____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd6f)
  store %struct.Memory* %call_41bd6f, %struct.Memory** %MEMORY

  ; Code: jne .L_41bde0	 RIP: 41bd72	 Bytes: 6
  %loadMem_41bd72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd72 = call %struct.Memory* @routine_jne_.L_41bde0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd72, i8* %BRANCH_TAKEN, i64 110, i64 6, i64 6)
  store %struct.Memory* %call_41bd72, %struct.Memory** %MEMORY

  %loadBr_41bd72 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bd72 = icmp eq i8 %loadBr_41bd72, 1
  br i1 %cmpBr_41bd72, label %block_.L_41bde0, label %block_41bd78

block_41bd78:
  ; Code: movq $0xb9a0a0, %rax	 RIP: 41bd78	 Bytes: 10
  %loadMem_41bd78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd78 = call %struct.Memory* @routine_movq__0xb9a0a0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd78)
  store %struct.Memory* %call_41bd78, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41bd82	 Bytes: 4
  %loadMem_41bd82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd82 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd82)
  store %struct.Memory* %call_41bd82, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41bd86	 Bytes: 4
  %loadMem_41bd86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd86 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd86)
  store %struct.Memory* %call_41bd86, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41bd8a	 Bytes: 3
  %loadMem_41bd8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd8a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd8a)
  store %struct.Memory* %call_41bd8a, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %edx	 RIP: 41bd8d	 Bytes: 3
  %loadMem_41bd8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd8d = call %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd8d)
  store %struct.Memory* %call_41bd8d, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41bd90	 Bytes: 3
  %loadMem_41bd90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd90 = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd90)
  store %struct.Memory* %call_41bd90, %struct.Memory** %MEMORY

  ; Code: jne .L_41bde0	 RIP: 41bd93	 Bytes: 6
  %loadMem_41bd93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd93 = call %struct.Memory* @routine_jne_.L_41bde0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd93, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_41bd93, %struct.Memory** %MEMORY

  %loadBr_41bd93 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bd93 = icmp eq i8 %loadBr_41bd93, 1
  br i1 %cmpBr_41bd93, label %block_.L_41bde0, label %block_41bd99

block_41bd99:
  ; Code: movl -0x18(%rbp), %edi	 RIP: 41bd99	 Bytes: 3
  %loadMem_41bd99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bd99 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bd99)
  store %struct.Memory* %call_41bd99, %struct.Memory** %MEMORY

  ; Code: callq .is_ko_point	 RIP: 41bd9c	 Bytes: 5
  %loadMem1_41bd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41bd9c = call %struct.Memory* @routine_callq_.is_ko_point(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41bd9c, i64 -25756, i64 5, i64 5)
  store %struct.Memory* %call1_41bd9c, %struct.Memory** %MEMORY

  %loadMem2_41bd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bd9c = load i64, i64* %3
  %call2_41bd9c = call %struct.Memory* @sub_415900.is_ko_point(%struct.State* %0, i64  %loadPC_41bd9c, %struct.Memory* %loadMem2_41bd9c)
  store %struct.Memory* %call2_41bd9c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41bda1	 Bytes: 3
  %loadMem_41bda1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bda1 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bda1)
  store %struct.Memory* %call_41bda1, %struct.Memory** %MEMORY

  ; Code: je .L_41bdc9	 RIP: 41bda4	 Bytes: 6
  %loadMem_41bda4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bda4 = call %struct.Memory* @routine_je_.L_41bdc9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bda4, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_41bda4, %struct.Memory** %MEMORY

  %loadBr_41bda4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bda4 = icmp eq i8 %loadBr_41bda4, 1
  br i1 %cmpBr_41bda4, label %block_.L_41bdc9, label %block_41bdaa

block_41bdaa:
  ; Code: movq $0xb9a0a0, %rax	 RIP: 41bdaa	 Bytes: 10
  %loadMem_41bdaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdaa = call %struct.Memory* @routine_movq__0xb9a0a0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdaa)
  store %struct.Memory* %call_41bdaa, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41bdb4	 Bytes: 4
  %loadMem_41bdb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdb4 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdb4)
  store %struct.Memory* %call_41bdb4, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41bdb8	 Bytes: 4
  %loadMem_41bdb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdb8 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdb8)
  store %struct.Memory* %call_41bdb8, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41bdbc	 Bytes: 3
  %loadMem_41bdbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdbc = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdbc)
  store %struct.Memory* %call_41bdbc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x4(%rax)	 RIP: 41bdbf	 Bytes: 4
  %loadMem_41bdbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdbf = call %struct.Memory* @routine_cmpl__0x1__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdbf)
  store %struct.Memory* %call_41bdbf, %struct.Memory** %MEMORY

  ; Code: jle .L_41bddb	 RIP: 41bdc3	 Bytes: 6
  %loadMem_41bdc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdc3 = call %struct.Memory* @routine_jle_.L_41bddb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdc3, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_41bdc3, %struct.Memory** %MEMORY

  %loadBr_41bdc3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bdc3 = icmp eq i8 %loadBr_41bdc3, 1
  br i1 %cmpBr_41bdc3, label %block_.L_41bddb, label %block_.L_41bdc9

  ; Code: .L_41bdc9:	 RIP: 41bdc9	 Bytes: 0
block_.L_41bdc9:

  ; Code: movq $0xb9a0a0, %rsi	 RIP: 41bdc9	 Bytes: 10
  %loadMem_41bdc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdc9 = call %struct.Memory* @routine_movq__0xb9a0a0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdc9)
  store %struct.Memory* %call_41bdc9, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41bdd3	 Bytes: 3
  %loadMem_41bdd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdd3 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdd3)
  store %struct.Memory* %call_41bdd3, %struct.Memory** %MEMORY

  ; Code: callq .dragon_eye	 RIP: 41bdd6	 Bytes: 5
  %loadMem1_41bdd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41bdd6 = call %struct.Memory* @routine_callq_.dragon_eye(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41bdd6, i64 9690, i64 5, i64 5)
  store %struct.Memory* %call1_41bdd6, %struct.Memory** %MEMORY

  %loadMem2_41bdd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bdd6 = load i64, i64* %3
  %call2_41bdd6 = call %struct.Memory* @sub_41e3b0.dragon_eye(%struct.State* %0, i64  %loadPC_41bdd6, %struct.Memory* %loadMem2_41bdd6)
  store %struct.Memory* %call2_41bdd6, %struct.Memory** %MEMORY

  ; Code: .L_41bddb:	 RIP: 41bddb	 Bytes: 0
  br label %block_.L_41bddb
block_.L_41bddb:

  ; Code: jmpq .L_41bde0	 RIP: 41bddb	 Bytes: 5
  %loadMem_41bddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bddb = call %struct.Memory* @routine_jmpq_.L_41bde0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bddb, i64 5, i64 5)
  store %struct.Memory* %call_41bddb, %struct.Memory** %MEMORY

  br label %block_.L_41bde0

  ; Code: .L_41bde0:	 RIP: 41bde0	 Bytes: 0
block_.L_41bde0:

  ; Code: jmpq .L_41bde5	 RIP: 41bde0	 Bytes: 5
  %loadMem_41bde0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bde0 = call %struct.Memory* @routine_jmpq_.L_41bde5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bde0, i64 5, i64 5)
  store %struct.Memory* %call_41bde0, %struct.Memory** %MEMORY

  br label %block_.L_41bde5

  ; Code: .L_41bde5:	 RIP: 41bde5	 Bytes: 0
block_.L_41bde5:

  ; Code: jmpq .L_41bdea	 RIP: 41bde5	 Bytes: 5
  %loadMem_41bde5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bde5 = call %struct.Memory* @routine_jmpq_.L_41bdea(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bde5, i64 5, i64 5)
  store %struct.Memory* %call_41bde5, %struct.Memory** %MEMORY

  br label %block_.L_41bdea

  ; Code: .L_41bdea:	 RIP: 41bdea	 Bytes: 0
block_.L_41bdea:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41bdea	 Bytes: 3
  %loadMem_41bdea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdea = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdea)
  store %struct.Memory* %call_41bdea, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41bded	 Bytes: 3
  %loadMem_41bded = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bded = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bded)
  store %struct.Memory* %call_41bded, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41bdf0	 Bytes: 3
  %loadMem_41bdf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdf0 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdf0)
  store %struct.Memory* %call_41bdf0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41bcb2	 RIP: 41bdf3	 Bytes: 5
  %loadMem_41bdf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdf3 = call %struct.Memory* @routine_jmpq_.L_41bcb2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdf3, i64 -321, i64 5)
  store %struct.Memory* %call_41bdf3, %struct.Memory** %MEMORY

  br label %block_.L_41bcb2

  ; Code: .L_41bdf8:	 RIP: 41bdf8	 Bytes: 0
block_.L_41bdf8:

  ; Code: movl $0x2, %edi	 RIP: 41bdf8	 Bytes: 5
  %loadMem_41bdf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdf8 = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdf8)
  store %struct.Memory* %call_41bdf8, %struct.Memory** %MEMORY

  ; Code: movq $0x57aece, %rsi	 RIP: 41bdfd	 Bytes: 10
  %loadMem_41bdfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bdfd = call %struct.Memory* @routine_movq__0x57aece___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bdfd)
  store %struct.Memory* %call_41bdfd, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41be07	 Bytes: 2
  %loadMem_41be07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be07 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be07)
  store %struct.Memory* %call_41be07, %struct.Memory** %MEMORY

  ; Code: movsd 0xc714f(%rip), %xmm0	 RIP: 41be09	 Bytes: 8
  %loadMem_41be09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be09 = call %struct.Memory* @routine_movsd_0xc714f__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be09)
  store %struct.Memory* %call_41be09, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41be11	 Bytes: 5
  %loadMem1_41be11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41be11 = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41be11, i64 394687, i64 5, i64 5)
  store %struct.Memory* %call1_41be11, %struct.Memory** %MEMORY

  %loadMem2_41be11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41be11 = load i64, i64* %3
  %call2_41be11 = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41be11, %struct.Memory* %loadMem2_41be11)
  store %struct.Memory* %call2_41be11, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x368(%rbp)	 RIP: 41be16	 Bytes: 8
  %loadMem_41be16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be16 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x368__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be16)
  store %struct.Memory* %call_41be16, %struct.Memory** %MEMORY

  ; Code: .L_41be1e:	 RIP: 41be1e	 Bytes: 0
  br label %block_.L_41be1e
block_.L_41be1e:

  ; Code: callq .initialize_supplementary_dragon_data	 RIP: 41be1e	 Bytes: 5
  %loadMem1_41be1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41be1e = call %struct.Memory* @routine_callq_.initialize_supplementary_dragon_data(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41be1e, i64 10274, i64 5, i64 5)
  store %struct.Memory* %call1_41be1e, %struct.Memory** %MEMORY

  %loadMem2_41be1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41be1e = load i64, i64* %3
  %call2_41be1e = call %struct.Memory* @sub_41e640.initialize_supplementary_dragon_data(%struct.State* %0, i64  %loadPC_41be1e, %struct.Memory* %loadMem2_41be1e)
  store %struct.Memory* %call2_41be1e, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41be23	 Bytes: 7
  %loadMem_41be23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be23 = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be23)
  store %struct.Memory* %call_41be23, %struct.Memory** %MEMORY

  ; Code: .L_41be2a:	 RIP: 41be2a	 Bytes: 0
  br label %block_.L_41be2a
block_.L_41be2a:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41be2a	 Bytes: 7
  %loadMem_41be2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be2a = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be2a)
  store %struct.Memory* %call_41be2a, %struct.Memory** %MEMORY

  ; Code: jge .L_41c0bb	 RIP: 41be31	 Bytes: 6
  %loadMem_41be31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be31 = call %struct.Memory* @routine_jge_.L_41c0bb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be31, i8* %BRANCH_TAKEN, i64 650, i64 6, i64 6)
  store %struct.Memory* %call_41be31, %struct.Memory** %MEMORY

  %loadBr_41be31 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41be31 = icmp eq i8 %loadBr_41be31, 1
  br i1 %cmpBr_41be31, label %block_.L_41c0bb, label %block_41be37

block_41be37:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41be37	 Bytes: 4
  %loadMem_41be37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be37 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be37)
  store %struct.Memory* %call_41be37, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41be3b	 Bytes: 8
  %loadMem_41be3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be3b = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be3b)
  store %struct.Memory* %call_41be3b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41be43	 Bytes: 3
  %loadMem_41be43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be43 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be43)
  store %struct.Memory* %call_41be43, %struct.Memory** %MEMORY

  ; Code: je .L_41c0a8	 RIP: 41be46	 Bytes: 6
  %loadMem_41be46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be46 = call %struct.Memory* @routine_je_.L_41c0a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be46, i8* %BRANCH_TAKEN, i64 610, i64 6, i64 6)
  store %struct.Memory* %call_41be46, %struct.Memory** %MEMORY

  %loadBr_41be46 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41be46 = icmp eq i8 %loadBr_41be46, 1
  br i1 %cmpBr_41be46, label %block_.L_41c0a8, label %block_41be4c

block_41be4c:
  ; Code: movq $0xb0eff0, %rax	 RIP: 41be4c	 Bytes: 10
  %loadMem_41be4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be4c = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be4c)
  store %struct.Memory* %call_41be4c, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41be56	 Bytes: 4
  %loadMem_41be56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be56 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be56)
  store %struct.Memory* %call_41be56, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41be5a	 Bytes: 7
  %loadMem_41be5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be5a = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be5a)
  store %struct.Memory* %call_41be5a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41be61	 Bytes: 3
  %loadMem_41be61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be61 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be61)
  store %struct.Memory* %call_41be61, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %edx	 RIP: 41be64	 Bytes: 3
  %loadMem_41be64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be64 = call %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be64)
  store %struct.Memory* %call_41be64, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41be67	 Bytes: 3
  %loadMem_41be67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be67 = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be67)
  store %struct.Memory* %call_41be67, %struct.Memory** %MEMORY

  ; Code: jne .L_41bea7	 RIP: 41be6a	 Bytes: 6
  %loadMem_41be6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be6a = call %struct.Memory* @routine_jne_.L_41bea7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be6a, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_41be6a, %struct.Memory** %MEMORY

  %loadBr_41be6a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41be6a = icmp eq i8 %loadBr_41be6a, 1
  br i1 %cmpBr_41be6a, label %block_.L_41bea7, label %block_41be70

block_41be70:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41be70	 Bytes: 4
  %loadMem_41be70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be70 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be70)
  store %struct.Memory* %call_41be70, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41be74	 Bytes: 8
  %loadMem_41be74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be74 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be74)
  store %struct.Memory* %call_41be74, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 41be7c	 Bytes: 3
  %loadMem_41be7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be7c = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be7c)
  store %struct.Memory* %call_41be7c, %struct.Memory** %MEMORY

  ; Code: je .L_41bea7	 RIP: 41be7f	 Bytes: 6
  %loadMem_41be7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be7f = call %struct.Memory* @routine_je_.L_41bea7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be7f, i8* %BRANCH_TAKEN, i64 40, i64 6, i64 6)
  store %struct.Memory* %call_41be7f, %struct.Memory** %MEMORY

  %loadBr_41be7f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41be7f = icmp eq i8 %loadBr_41be7f, 1
  br i1 %cmpBr_41be7f, label %block_.L_41bea7, label %block_41be85

block_41be85:
  ; Code: movq $0xb0eff0, %rax	 RIP: 41be85	 Bytes: 10
  %loadMem_41be85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be85 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be85)
  store %struct.Memory* %call_41be85, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41be8f	 Bytes: 4
  %loadMem_41be8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be8f = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be8f)
  store %struct.Memory* %call_41be8f, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41be93	 Bytes: 7
  %loadMem_41be93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be93 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be93)
  store %struct.Memory* %call_41be93, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41be9a	 Bytes: 3
  %loadMem_41be9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be9a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be9a)
  store %struct.Memory* %call_41be9a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x20(%rax)	 RIP: 41be9d	 Bytes: 4
  %loadMem_41be9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41be9d = call %struct.Memory* @routine_cmpl__0x0__0x20__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41be9d)
  store %struct.Memory* %call_41be9d, %struct.Memory** %MEMORY

  ; Code: jne .L_41beac	 RIP: 41bea1	 Bytes: 6
  %loadMem_41bea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bea1 = call %struct.Memory* @routine_jne_.L_41beac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bea1, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41bea1, %struct.Memory** %MEMORY

  %loadBr_41bea1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bea1 = icmp eq i8 %loadBr_41bea1, 1
  br i1 %cmpBr_41bea1, label %block_.L_41beac, label %block_.L_41bea7

  ; Code: .L_41bea7:	 RIP: 41bea7	 Bytes: 0
block_.L_41bea7:

  ; Code: jmpq .L_41c0ad	 RIP: 41bea7	 Bytes: 5
  %loadMem_41bea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bea7 = call %struct.Memory* @routine_jmpq_.L_41c0ad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bea7, i64 518, i64 5)
  store %struct.Memory* %call_41bea7, %struct.Memory** %MEMORY

  br label %block_.L_41c0ad

  ; Code: .L_41beac:	 RIP: 41beac	 Bytes: 0
block_.L_41beac:

  ; Code: movq $0xb0eff0, %rax	 RIP: 41beac	 Bytes: 10
  %loadMem_41beac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41beac = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41beac)
  store %struct.Memory* %call_41beac, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41beb6	 Bytes: 4
  %loadMem_41beb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41beb6 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41beb6)
  store %struct.Memory* %call_41beb6, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41beba	 Bytes: 7
  %loadMem_41beba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41beba = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41beba)
  store %struct.Memory* %call_41beba, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41bec1	 Bytes: 3
  %loadMem_41bec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bec1 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bec1)
  store %struct.Memory* %call_41bec1, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41bec4	 Bytes: 3
  %loadMem_41bec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bec4 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bec4)
  store %struct.Memory* %call_41bec4, %struct.Memory** %MEMORY

  ; Code: movl 0x20(%rdx), %esi	 RIP: 41bec7	 Bytes: 3
  %loadMem_41bec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bec7 = call %struct.Memory* @routine_movl_0x20__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bec7)
  store %struct.Memory* %call_41bec7, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x28(%rbp)	 RIP: 41beca	 Bytes: 3
  %loadMem_41beca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41beca = call %struct.Memory* @routine_movl__esi__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41beca)
  store %struct.Memory* %call_41beca, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 41becd	 Bytes: 4
  %loadMem_41becd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41becd = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41becd)
  store %struct.Memory* %call_41becd, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41bed1	 Bytes: 7
  %loadMem_41bed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bed1 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bed1)
  store %struct.Memory* %call_41bed1, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41bed8	 Bytes: 3
  %loadMem_41bed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bed8 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bed8)
  store %struct.Memory* %call_41bed8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb4(%rax)	 RIP: 41bedb	 Bytes: 7
  %loadMem_41bedb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bedb = call %struct.Memory* @routine_cmpl__0x0__0xb4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bedb)
  store %struct.Memory* %call_41bedb, %struct.Memory** %MEMORY

  ; Code: jne .L_41beed	 RIP: 41bee2	 Bytes: 6
  %loadMem_41bee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bee2 = call %struct.Memory* @routine_jne_.L_41beed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bee2, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41bee2, %struct.Memory** %MEMORY

  %loadBr_41bee2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bee2 = icmp eq i8 %loadBr_41bee2, 1
  br i1 %cmpBr_41bee2, label %block_.L_41beed, label %block_41bee8

block_41bee8:
  ; Code: jmpq .L_41c0ad	 RIP: 41bee8	 Bytes: 5
  %loadMem_41bee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bee8 = call %struct.Memory* @routine_jmpq_.L_41c0ad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bee8, i64 453, i64 5)
  store %struct.Memory* %call_41bee8, %struct.Memory** %MEMORY

  br label %block_.L_41c0ad

  ; Code: .L_41beed:	 RIP: 41beed	 Bytes: 0
block_.L_41beed:

  ; Code: cmpl $0x1, -0xc(%rbp)	 RIP: 41beed	 Bytes: 4
  %loadMem_41beed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41beed = call %struct.Memory* @routine_cmpl__0x1__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41beed)
  store %struct.Memory* %call_41beed, %struct.Memory** %MEMORY

  ; Code: je .L_41bf01	 RIP: 41bef1	 Bytes: 6
  %loadMem_41bef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bef1 = call %struct.Memory* @routine_je_.L_41bf01(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bef1, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_41bef1, %struct.Memory** %MEMORY

  %loadBr_41bef1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bef1 = icmp eq i8 %loadBr_41bef1, 1
  br i1 %cmpBr_41bef1, label %block_.L_41bf01, label %block_41bef7

block_41bef7:
  ; Code: cmpl $0x2, -0xc(%rbp)	 RIP: 41bef7	 Bytes: 4
  %loadMem_41bef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bef7 = call %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bef7)
  store %struct.Memory* %call_41bef7, %struct.Memory** %MEMORY

  ; Code: jne .L_41bf0c	 RIP: 41befb	 Bytes: 6
  %loadMem_41befb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41befb = call %struct.Memory* @routine_jne_.L_41bf0c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41befb, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_41befb, %struct.Memory** %MEMORY

  %loadBr_41befb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41befb = icmp eq i8 %loadBr_41befb, 1
  br i1 %cmpBr_41befb, label %block_.L_41bf0c, label %block_.L_41bf01

  ; Code: .L_41bf01:	 RIP: 41bf01	 Bytes: 0
block_.L_41bf01:

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41bf01	 Bytes: 3
  %loadMem_41bf01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf01 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf01)
  store %struct.Memory* %call_41bf01, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %esi	 RIP: 41bf04	 Bytes: 3
  %loadMem_41bf04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf04 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf04)
  store %struct.Memory* %call_41bf04, %struct.Memory** %MEMORY

  ; Code: callq .add_lunch	 RIP: 41bf07	 Bytes: 5
  %loadMem1_41bf07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41bf07 = call %struct.Memory* @routine_callq_.add_lunch(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41bf07, i64 88233, i64 5, i64 5)
  store %struct.Memory* %call1_41bf07, %struct.Memory** %MEMORY

  %loadMem2_41bf07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bf07 = load i64, i64* %3
  %call2_41bf07 = call %struct.Memory* @sub_4317b0.add_lunch(%struct.State* %0, i64  %loadPC_41bf07, %struct.Memory* %loadMem2_41bf07)
  store %struct.Memory* %call2_41bf07, %struct.Memory** %MEMORY

  ; Code: .L_41bf0c:	 RIP: 41bf0c	 Bytes: 0
  br label %block_.L_41bf0c
block_.L_41bf0c:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41bf0c	 Bytes: 10
  %loadMem_41bf0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf0c = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf0c)
  store %struct.Memory* %call_41bf0c, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41bf16	 Bytes: 4
  %loadMem_41bf16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf16 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf16)
  store %struct.Memory* %call_41bf16, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41bf1a	 Bytes: 4
  %loadMem_41bf1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf1a = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf1a)
  store %struct.Memory* %call_41bf1a, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41bf1e	 Bytes: 3
  %loadMem_41bf1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf1e = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf1e)
  store %struct.Memory* %call_41bf1e, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41bf21	 Bytes: 3
  %loadMem_41bf21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf21 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf21)
  store %struct.Memory* %call_41bf21, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rdx), %esi	 RIP: 41bf24	 Bytes: 3
  %loadMem_41bf24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf24 = call %struct.Memory* @routine_movl_0x8__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf24)
  store %struct.Memory* %call_41bf24, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x2c(%rbp)	 RIP: 41bf27	 Bytes: 3
  %loadMem_41bf27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf27 = call %struct.Memory* @routine_movl__esi__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf27)
  store %struct.Memory* %call_41bf27, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41bf2a	 Bytes: 8
  %loadMem_41bf2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf2a = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf2a)
  store %struct.Memory* %call_41bf2a, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 41bf32	 Bytes: 4
  %loadMem_41bf32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf32 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf32)
  store %struct.Memory* %call_41bf32, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41bf36	 Bytes: 4
  %loadMem_41bf36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf36 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf36)
  store %struct.Memory* %call_41bf36, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 41bf3a	 Bytes: 3
  %loadMem_41bf3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf3a = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf3a)
  store %struct.Memory* %call_41bf3a, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 41bf3d	 Bytes: 4
  %loadMem_41bf3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf3d = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf3d)
  store %struct.Memory* %call_41bf3d, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 41bf41	 Bytes: 4
  %loadMem_41bf41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf41 = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf41)
  store %struct.Memory* %call_41bf41, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 41bf45	 Bytes: 3
  %loadMem_41bf45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf45 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf45)
  store %struct.Memory* %call_41bf45, %struct.Memory** %MEMORY

  ; Code: movl 0x54(%rcx), %esi	 RIP: 41bf48	 Bytes: 3
  %loadMem_41bf48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf48 = call %struct.Memory* @routine_movl_0x54__rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf48)
  store %struct.Memory* %call_41bf48, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x30(%rbp)	 RIP: 41bf4b	 Bytes: 3
  %loadMem_41bf4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf4b = call %struct.Memory* @routine_movl__esi__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf4b)
  store %struct.Memory* %call_41bf4b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x30(%rbp)	 RIP: 41bf4e	 Bytes: 4
  %loadMem_41bf4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf4e = call %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf4e)
  store %struct.Memory* %call_41bf4e, %struct.Memory** %MEMORY

  ; Code: je .L_41bff7	 RIP: 41bf52	 Bytes: 6
  %loadMem_41bf52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf52 = call %struct.Memory* @routine_je_.L_41bff7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf52, i8* %BRANCH_TAKEN, i64 165, i64 6, i64 6)
  store %struct.Memory* %call_41bf52, %struct.Memory** %MEMORY

  %loadBr_41bf52 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bf52 = icmp eq i8 %loadBr_41bf52, 1
  br i1 %cmpBr_41bf52, label %block_.L_41bff7, label %block_41bf58

block_41bf58:
  ; Code: movq $0xb0eff0, %rax	 RIP: 41bf58	 Bytes: 10
  %loadMem_41bf58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf58 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf58)
  store %struct.Memory* %call_41bf58, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 41bf62	 Bytes: 4
  %loadMem_41bf62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf62 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf62)
  store %struct.Memory* %call_41bf62, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41bf66	 Bytes: 7
  %loadMem_41bf66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf66 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf66)
  store %struct.Memory* %call_41bf66, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41bf6d	 Bytes: 3
  %loadMem_41bf6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf6d = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf6d)
  store %struct.Memory* %call_41bf6d, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41bf70	 Bytes: 3
  %loadMem_41bf70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf70 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf70)
  store %struct.Memory* %call_41bf70, %struct.Memory** %MEMORY

  ; Code: movl 0x24(%rdx), %esi	 RIP: 41bf73	 Bytes: 3
  %loadMem_41bf73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf73 = call %struct.Memory* @routine_movl_0x24__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf73)
  store %struct.Memory* %call_41bf73, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 41bf76	 Bytes: 4
  %loadMem_41bf76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf76 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf76)
  store %struct.Memory* %call_41bf76, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41bf7a	 Bytes: 7
  %loadMem_41bf7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf7a = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf7a)
  store %struct.Memory* %call_41bf7a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41bf81	 Bytes: 3
  %loadMem_41bf81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf81 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf81)
  store %struct.Memory* %call_41bf81, %struct.Memory** %MEMORY

  ; Code: cmpl 0x24(%rax), %esi	 RIP: 41bf84	 Bytes: 3
  %loadMem_41bf84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf84 = call %struct.Memory* @routine_cmpl_0x24__rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf84)
  store %struct.Memory* %call_41bf84, %struct.Memory** %MEMORY

  ; Code: jg .L_41bff7	 RIP: 41bf87	 Bytes: 6
  %loadMem_41bf87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf87 = call %struct.Memory* @routine_jg_.L_41bff7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf87, i8* %BRANCH_TAKEN, i64 112, i64 6, i64 6)
  store %struct.Memory* %call_41bf87, %struct.Memory** %MEMORY

  %loadBr_41bf87 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bf87 = icmp eq i8 %loadBr_41bf87, 1
  br i1 %cmpBr_41bf87, label %block_.L_41bff7, label %block_41bf8d

block_41bf8d:
  ; Code: movq $0xb0eff0, %rax	 RIP: 41bf8d	 Bytes: 10
  %loadMem_41bf8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf8d = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf8d)
  store %struct.Memory* %call_41bf8d, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 41bf97	 Bytes: 4
  %loadMem_41bf97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf97 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf97)
  store %struct.Memory* %call_41bf97, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41bf9b	 Bytes: 7
  %loadMem_41bf9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bf9b = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bf9b)
  store %struct.Memory* %call_41bf9b, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41bfa2	 Bytes: 3
  %loadMem_41bfa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfa2 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfa2)
  store %struct.Memory* %call_41bfa2, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41bfa5	 Bytes: 3
  %loadMem_41bfa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfa5 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfa5)
  store %struct.Memory* %call_41bfa5, %struct.Memory** %MEMORY

  ; Code: movl 0x24(%rdx), %esi	 RIP: 41bfa8	 Bytes: 3
  %loadMem_41bfa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfa8 = call %struct.Memory* @routine_movl_0x24__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfa8)
  store %struct.Memory* %call_41bfa8, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 41bfab	 Bytes: 4
  %loadMem_41bfab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfab = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfab)
  store %struct.Memory* %call_41bfab, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41bfaf	 Bytes: 7
  %loadMem_41bfaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfaf = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfaf)
  store %struct.Memory* %call_41bfaf, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41bfb6	 Bytes: 3
  %loadMem_41bfb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfb6 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfb6)
  store %struct.Memory* %call_41bfb6, %struct.Memory** %MEMORY

  ; Code: cmpl 0x24(%rax), %esi	 RIP: 41bfb9	 Bytes: 3
  %loadMem_41bfb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfb9 = call %struct.Memory* @routine_cmpl_0x24__rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfb9)
  store %struct.Memory* %call_41bfb9, %struct.Memory** %MEMORY

  ; Code: jne .L_41c0a3	 RIP: 41bfbc	 Bytes: 6
  %loadMem_41bfbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfbc = call %struct.Memory* @routine_jne_.L_41c0a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfbc, i8* %BRANCH_TAKEN, i64 231, i64 6, i64 6)
  store %struct.Memory* %call_41bfbc, %struct.Memory** %MEMORY

  %loadBr_41bfbc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bfbc = icmp eq i8 %loadBr_41bfbc, 1
  br i1 %cmpBr_41bfbc, label %block_.L_41c0a3, label %block_41bfc2

block_41bfc2:
  ; Code: movq $0xb0eff0, %rax	 RIP: 41bfc2	 Bytes: 10
  %loadMem_41bfc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfc2 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfc2)
  store %struct.Memory* %call_41bfc2, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 41bfcc	 Bytes: 4
  %loadMem_41bfcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfcc = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfcc)
  store %struct.Memory* %call_41bfcc, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41bfd0	 Bytes: 7
  %loadMem_41bfd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfd0 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfd0)
  store %struct.Memory* %call_41bfd0, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41bfd7	 Bytes: 3
  %loadMem_41bfd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfd7 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfd7)
  store %struct.Memory* %call_41bfd7, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41bfda	 Bytes: 3
  %loadMem_41bfda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfda = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfda)
  store %struct.Memory* %call_41bfda, %struct.Memory** %MEMORY

  ; Code: movl 0x10(%rdx), %esi	 RIP: 41bfdd	 Bytes: 3
  %loadMem_41bfdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfdd = call %struct.Memory* @routine_movl_0x10__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfdd)
  store %struct.Memory* %call_41bfdd, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 41bfe0	 Bytes: 4
  %loadMem_41bfe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfe0 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfe0)
  store %struct.Memory* %call_41bfe0, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41bfe4	 Bytes: 7
  %loadMem_41bfe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfe4 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfe4)
  store %struct.Memory* %call_41bfe4, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41bfeb	 Bytes: 3
  %loadMem_41bfeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfeb = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfeb)
  store %struct.Memory* %call_41bfeb, %struct.Memory** %MEMORY

  ; Code: cmpl 0x10(%rax), %esi	 RIP: 41bfee	 Bytes: 3
  %loadMem_41bfee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bfee = call %struct.Memory* @routine_cmpl_0x10__rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bfee)
  store %struct.Memory* %call_41bfee, %struct.Memory** %MEMORY

  ; Code: jge .L_41c0a3	 RIP: 41bff1	 Bytes: 6
  %loadMem_41bff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bff1 = call %struct.Memory* @routine_jge_.L_41c0a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bff1, i8* %BRANCH_TAKEN, i64 178, i64 6, i64 6)
  store %struct.Memory* %call_41bff1, %struct.Memory** %MEMORY

  %loadBr_41bff1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bff1 = icmp eq i8 %loadBr_41bff1, 1
  br i1 %cmpBr_41bff1, label %block_.L_41c0a3, label %block_.L_41bff7

  ; Code: .L_41bff7:	 RIP: 41bff7	 Bytes: 0
block_.L_41bff7:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41bff7	 Bytes: 10
  %loadMem_41bff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41bff7 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41bff7)
  store %struct.Memory* %call_41bff7, %struct.Memory** %MEMORY

  ; Code: movq $0xb0eff0, %rcx	 RIP: 41c001	 Bytes: 10
  %loadMem_41c001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c001 = call %struct.Memory* @routine_movq__0xb0eff0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c001)
  store %struct.Memory* %call_41c001, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 41c00b	 Bytes: 4
  %loadMem_41c00b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c00b = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c00b)
  store %struct.Memory* %call_41c00b, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rdx, %rdx	 RIP: 41c00f	 Bytes: 7
  %loadMem_41c00f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c00f = call %struct.Memory* @routine_imulq__0x17c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c00f)
  store %struct.Memory* %call_41c00f, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 41c016	 Bytes: 3
  %loadMem_41c016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c016 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c016)
  store %struct.Memory* %call_41c016, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rcx), %esi	 RIP: 41c019	 Bytes: 3
  %loadMem_41c019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c019 = call %struct.Memory* @routine_movl_0xc__rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c019)
  store %struct.Memory* %call_41c019, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41c01c	 Bytes: 8
  %loadMem_41c01c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c01c = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c01c)
  store %struct.Memory* %call_41c01c, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 41c024	 Bytes: 4
  %loadMem_41c024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c024 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c024)
  store %struct.Memory* %call_41c024, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41c028	 Bytes: 4
  %loadMem_41c028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c028 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c028)
  store %struct.Memory* %call_41c028, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 41c02c	 Bytes: 3
  %loadMem_41c02c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c02c = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c02c)
  store %struct.Memory* %call_41c02c, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 41c02f	 Bytes: 4
  %loadMem_41c02f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c02f = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c02f)
  store %struct.Memory* %call_41c02f, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 41c033	 Bytes: 4
  %loadMem_41c033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c033 = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c033)
  store %struct.Memory* %call_41c033, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 41c037	 Bytes: 3
  %loadMem_41c037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c037 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c037)
  store %struct.Memory* %call_41c037, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x54(%rcx)	 RIP: 41c03a	 Bytes: 3
  %loadMem_41c03a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c03a = call %struct.Memory* @routine_movl__esi__0x54__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c03a)
  store %struct.Memory* %call_41c03a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 41c03d	 Bytes: 8
  %loadMem_41c03d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c03d = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c03d)
  store %struct.Memory* %call_41c03d, %struct.Memory** %MEMORY

  ; Code: jne .L_41c050	 RIP: 41c045	 Bytes: 6
  %loadMem_41c045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c045 = call %struct.Memory* @routine_jne_.L_41c050(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c045, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41c045, %struct.Memory** %MEMORY

  %loadBr_41c045 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c045 = icmp eq i8 %loadBr_41c045, 1
  br i1 %cmpBr_41c045, label %block_.L_41c050, label %block_41c04b

block_41c04b:
  ; Code: jmpq .L_41c09e	 RIP: 41c04b	 Bytes: 5
  %loadMem_41c04b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c04b = call %struct.Memory* @routine_jmpq_.L_41c09e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c04b, i64 83, i64 5)
  store %struct.Memory* %call_41c04b, %struct.Memory** %MEMORY

  br label %block_.L_41c09e

  ; Code: .L_41c050:	 RIP: 41c050	 Bytes: 0
block_.L_41c050:

  ; Code: movq $0x57aeeb, %rdi	 RIP: 41c050	 Bytes: 10
  %loadMem_41c050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c050 = call %struct.Memory* @routine_movq__0x57aeeb___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c050)
  store %struct.Memory* %call_41c050, %struct.Memory** %MEMORY

  ; Code: movq $0xb0eff0, %rax	 RIP: 41c05a	 Bytes: 10
  %loadMem_41c05a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c05a = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c05a)
  store %struct.Memory* %call_41c05a, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 41c064	 Bytes: 3
  %loadMem_41c064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c064 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c064)
  store %struct.Memory* %call_41c064, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %edx	 RIP: 41c067	 Bytes: 3
  %loadMem_41c067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c067 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c067)
  store %struct.Memory* %call_41c067, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 41c06a	 Bytes: 4
  %loadMem_41c06a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c06a = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c06a)
  store %struct.Memory* %call_41c06a, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41c06e	 Bytes: 7
  %loadMem_41c06e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c06e = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c06e)
  store %struct.Memory* %call_41c06e, %struct.Memory** %MEMORY

  ; Code: movq %rax, %r8	 RIP: 41c075	 Bytes: 3
  %loadMem_41c075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c075 = call %struct.Memory* @routine_movq__rax___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c075)
  store %struct.Memory* %call_41c075, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %r8	 RIP: 41c078	 Bytes: 3
  %loadMem_41c078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c078 = call %struct.Memory* @routine_addq__rcx___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c078)
  store %struct.Memory* %call_41c078, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%r8), %ecx	 RIP: 41c07b	 Bytes: 4
  %loadMem_41c07b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c07b = call %struct.Memory* @routine_movl_0xc__r8____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c07b)
  store %struct.Memory* %call_41c07b, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %r8	 RIP: 41c07f	 Bytes: 4
  %loadMem_41c07f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c07f = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c07f)
  store %struct.Memory* %call_41c07f, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %r8, %r8	 RIP: 41c083	 Bytes: 7
  %loadMem_41c083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c083 = call %struct.Memory* @routine_imulq__0x17c___r8___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c083)
  store %struct.Memory* %call_41c083, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rax	 RIP: 41c08a	 Bytes: 3
  %loadMem_41c08a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c08a = call %struct.Memory* @routine_addq__r8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c08a)
  store %struct.Memory* %call_41c08a, %struct.Memory** %MEMORY

  ; Code: movl 0x24(%rax), %r8d	 RIP: 41c08d	 Bytes: 4
  %loadMem_41c08d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c08d = call %struct.Memory* @routine_movl_0x24__rax____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c08d)
  store %struct.Memory* %call_41c08d, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41c091	 Bytes: 2
  %loadMem_41c091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c091 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c091)
  store %struct.Memory* %call_41c091, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 41c093	 Bytes: 5
  %loadMem1_41c093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c093 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c093, i64 220445, i64 5, i64 5)
  store %struct.Memory* %call1_41c093, %struct.Memory** %MEMORY

  %loadMem2_41c093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c093 = load i64, i64* %3
  %call2_41c093 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_41c093, %struct.Memory* %loadMem2_41c093)
  store %struct.Memory* %call2_41c093, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x36c(%rbp)	 RIP: 41c098	 Bytes: 6
  %loadMem_41c098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c098 = call %struct.Memory* @routine_movl__eax__MINUS0x36c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c098)
  store %struct.Memory* %call_41c098, %struct.Memory** %MEMORY

  ; Code: .L_41c09e:	 RIP: 41c09e	 Bytes: 0
  br label %block_.L_41c09e
block_.L_41c09e:

  ; Code: jmpq .L_41c0a3	 RIP: 41c09e	 Bytes: 5
  %loadMem_41c09e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c09e = call %struct.Memory* @routine_jmpq_.L_41c0a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c09e, i64 5, i64 5)
  store %struct.Memory* %call_41c09e, %struct.Memory** %MEMORY

  br label %block_.L_41c0a3

  ; Code: .L_41c0a3:	 RIP: 41c0a3	 Bytes: 0
block_.L_41c0a3:

  ; Code: jmpq .L_41c0a8	 RIP: 41c0a3	 Bytes: 5
  %loadMem_41c0a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0a3 = call %struct.Memory* @routine_jmpq_.L_41c0a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0a3, i64 5, i64 5)
  store %struct.Memory* %call_41c0a3, %struct.Memory** %MEMORY

  br label %block_.L_41c0a8

  ; Code: .L_41c0a8:	 RIP: 41c0a8	 Bytes: 0
block_.L_41c0a8:

  ; Code: jmpq .L_41c0ad	 RIP: 41c0a8	 Bytes: 5
  %loadMem_41c0a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0a8 = call %struct.Memory* @routine_jmpq_.L_41c0ad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0a8, i64 5, i64 5)
  store %struct.Memory* %call_41c0a8, %struct.Memory** %MEMORY

  br label %block_.L_41c0ad

  ; Code: .L_41c0ad:	 RIP: 41c0ad	 Bytes: 0
block_.L_41c0ad:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41c0ad	 Bytes: 3
  %loadMem_41c0ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0ad = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0ad)
  store %struct.Memory* %call_41c0ad, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41c0b0	 Bytes: 3
  %loadMem_41c0b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0b0 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0b0)
  store %struct.Memory* %call_41c0b0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41c0b3	 Bytes: 3
  %loadMem_41c0b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0b3 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0b3)
  store %struct.Memory* %call_41c0b3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41be2a	 RIP: 41c0b6	 Bytes: 5
  %loadMem_41c0b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0b6 = call %struct.Memory* @routine_jmpq_.L_41be2a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0b6, i64 -652, i64 5)
  store %struct.Memory* %call_41c0b6, %struct.Memory** %MEMORY

  br label %block_.L_41be2a

  ; Code: .L_41c0bb:	 RIP: 41c0bb	 Bytes: 0
block_.L_41c0bb:

  ; Code: movl $0x2, %edi	 RIP: 41c0bb	 Bytes: 5
  %loadMem_41c0bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0bb = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0bb)
  store %struct.Memory* %call_41c0bb, %struct.Memory** %MEMORY

  ; Code: movq $0xb01180, %rsi	 RIP: 41c0c0	 Bytes: 10
  %loadMem_41c0c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0c0 = call %struct.Memory* @routine_movq__0xb01180___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0c0)
  store %struct.Memory* %call_41c0c0, %struct.Memory** %MEMORY

  ; Code: movq $0xb45500, %rdx	 RIP: 41c0ca	 Bytes: 10
  %loadMem_41c0ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0ca = call %struct.Memory* @routine_movq__0xb45500___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0ca)
  store %struct.Memory* %call_41c0ca, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 41c0d4	 Bytes: 2
  %loadMem_41c0d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0d4 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0d4)
  store %struct.Memory* %call_41c0d4, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 41c0d6	 Bytes: 2
  %loadMem_41c0d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0d6 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0d6)
  store %struct.Memory* %call_41c0d6, %struct.Memory** %MEMORY

  ; Code: callq .find_half_and_false_eyes	 RIP: 41c0d8	 Bytes: 5
  %loadMem1_41c0d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c0d8 = call %struct.Memory* @routine_callq_.find_half_and_false_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c0d8, i64 139832, i64 5, i64 5)
  store %struct.Memory* %call1_41c0d8, %struct.Memory** %MEMORY

  %loadMem2_41c0d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c0d8 = load i64, i64* %3
  %call2_41c0d8 = call %struct.Memory* @sub_43e310.find_half_and_false_eyes(%struct.State* %0, i64  %loadPC_41c0d8, %struct.Memory* %loadMem2_41c0d8)
  store %struct.Memory* %call2_41c0d8, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edi	 RIP: 41c0dd	 Bytes: 5
  %loadMem_41c0dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0dd = call %struct.Memory* @routine_movl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0dd)
  store %struct.Memory* %call_41c0dd, %struct.Memory** %MEMORY

  ; Code: movq $0xb9a0a0, %rsi	 RIP: 41c0e2	 Bytes: 10
  %loadMem_41c0e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0e2 = call %struct.Memory* @routine_movq__0xb9a0a0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0e2)
  store %struct.Memory* %call_41c0e2, %struct.Memory** %MEMORY

  ; Code: movq $0xb45500, %rdx	 RIP: 41c0ec	 Bytes: 10
  %loadMem_41c0ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0ec = call %struct.Memory* @routine_movq__0xb45500___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0ec)
  store %struct.Memory* %call_41c0ec, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 41c0f6	 Bytes: 2
  %loadMem_41c0f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0f6 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0f6)
  store %struct.Memory* %call_41c0f6, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 41c0f8	 Bytes: 2
  %loadMem_41c0f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c0f8 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c0f8)
  store %struct.Memory* %call_41c0f8, %struct.Memory** %MEMORY

  ; Code: callq .find_half_and_false_eyes	 RIP: 41c0fa	 Bytes: 5
  %loadMem1_41c0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c0fa = call %struct.Memory* @routine_callq_.find_half_and_false_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c0fa, i64 139798, i64 5, i64 5)
  store %struct.Memory* %call1_41c0fa, %struct.Memory** %MEMORY

  %loadMem2_41c0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c0fa = load i64, i64* %3
  %call2_41c0fa = call %struct.Memory* @sub_43e310.find_half_and_false_eyes(%struct.State* %0, i64  %loadPC_41c0fa, %struct.Memory* %loadMem2_41c0fa)
  store %struct.Memory* %call2_41c0fa, %struct.Memory** %MEMORY

  ; Code: callq .modify_eye_spaces	 RIP: 41c0ff	 Bytes: 5
  %loadMem1_41c0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c0ff = call %struct.Memory* @routine_callq_.modify_eye_spaces(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c0ff, i64 567473, i64 5, i64 5)
  store %struct.Memory* %call1_41c0ff, %struct.Memory** %MEMORY

  %loadMem2_41c0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c0ff = load i64, i64* %3
  %call2_41c0ff = call %struct.Memory* @sub_4a69b0.modify_eye_spaces(%struct.State* %0, i64  %loadPC_41c0ff, %struct.Memory* %loadMem2_41c0ff)
  store %struct.Memory* %call2_41c0ff, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41c104	 Bytes: 7
  %loadMem_41c104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c104 = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c104)
  store %struct.Memory* %call_41c104, %struct.Memory** %MEMORY

  ; Code: .L_41c10b:	 RIP: 41c10b	 Bytes: 0
  br label %block_.L_41c10b
block_.L_41c10b:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41c10b	 Bytes: 7
  %loadMem_41c10b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c10b = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c10b)
  store %struct.Memory* %call_41c10b, %struct.Memory** %MEMORY

  ; Code: jge .L_41c37f	 RIP: 41c112	 Bytes: 6
  %loadMem_41c112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c112 = call %struct.Memory* @routine_jge_.L_41c37f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c112, i8* %BRANCH_TAKEN, i64 621, i64 6, i64 6)
  store %struct.Memory* %call_41c112, %struct.Memory** %MEMORY

  %loadBr_41c112 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c112 = icmp eq i8 %loadBr_41c112, 1
  br i1 %cmpBr_41c112, label %block_.L_41c37f, label %block_41c118

block_41c118:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41c118	 Bytes: 4
  %loadMem_41c118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c118 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c118)
  store %struct.Memory* %call_41c118, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41c11c	 Bytes: 8
  %loadMem_41c11c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c11c = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c11c)
  store %struct.Memory* %call_41c11c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41c124	 Bytes: 3
  %loadMem_41c124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c124 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c124)
  store %struct.Memory* %call_41c124, %struct.Memory** %MEMORY

  ; Code: jne .L_41c132	 RIP: 41c127	 Bytes: 6
  %loadMem_41c127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c127 = call %struct.Memory* @routine_jne_.L_41c132(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c127, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41c127, %struct.Memory** %MEMORY

  %loadBr_41c127 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c127 = icmp eq i8 %loadBr_41c127, 1
  br i1 %cmpBr_41c127, label %block_.L_41c132, label %block_41c12d

block_41c12d:
  ; Code: jmpq .L_41c371	 RIP: 41c12d	 Bytes: 5
  %loadMem_41c12d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c12d = call %struct.Memory* @routine_jmpq_.L_41c371(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c12d, i64 580, i64 5)
  store %struct.Memory* %call_41c12d, %struct.Memory** %MEMORY

  br label %block_.L_41c371

  ; Code: .L_41c132:	 RIP: 41c132	 Bytes: 0
block_.L_41c132:

  ; Code: movq $0xb01180, %rax	 RIP: 41c132	 Bytes: 10
  %loadMem_41c132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c132 = call %struct.Memory* @routine_movq__0xb01180___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c132)
  store %struct.Memory* %call_41c132, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c13c	 Bytes: 4
  %loadMem_41c13c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c13c = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c13c)
  store %struct.Memory* %call_41c13c, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c140	 Bytes: 4
  %loadMem_41c140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c140 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c140)
  store %struct.Memory* %call_41c140, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c144	 Bytes: 3
  %loadMem_41c144 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c144 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c144)
  store %struct.Memory* %call_41c144, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5, (%rax)	 RIP: 41c147	 Bytes: 3
  %loadMem_41c147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c147 = call %struct.Memory* @routine_cmpl__0x5____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c147)
  store %struct.Memory* %call_41c147, %struct.Memory** %MEMORY

  ; Code: jne .L_41c24f	 RIP: 41c14a	 Bytes: 6
  %loadMem_41c14a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c14a = call %struct.Memory* @routine_jne_.L_41c24f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c14a, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_41c14a, %struct.Memory** %MEMORY

  %loadBr_41c14a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c14a = icmp eq i8 %loadBr_41c14a, 1
  br i1 %cmpBr_41c14a, label %block_.L_41c24f, label %block_41c150

block_41c150:
  ; Code: movq $0xb01180, %rax	 RIP: 41c150	 Bytes: 10
  %loadMem_41c150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c150 = call %struct.Memory* @routine_movq__0xb01180___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c150)
  store %struct.Memory* %call_41c150, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c15a	 Bytes: 4
  %loadMem_41c15a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c15a = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c15a)
  store %struct.Memory* %call_41c15a, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c15e	 Bytes: 4
  %loadMem_41c15e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c15e = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c15e)
  store %struct.Memory* %call_41c15e, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c162	 Bytes: 3
  %loadMem_41c162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c162 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c162)
  store %struct.Memory* %call_41c162, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %edx	 RIP: 41c165	 Bytes: 3
  %loadMem_41c165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c165 = call %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c165)
  store %struct.Memory* %call_41c165, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41c168	 Bytes: 3
  %loadMem_41c168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c168 = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c168)
  store %struct.Memory* %call_41c168, %struct.Memory** %MEMORY

  ; Code: jne .L_41c24f	 RIP: 41c16b	 Bytes: 6
  %loadMem_41c16b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c16b = call %struct.Memory* @routine_jne_.L_41c24f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c16b, i8* %BRANCH_TAKEN, i64 228, i64 6, i64 6)
  store %struct.Memory* %call_41c16b, %struct.Memory** %MEMORY

  %loadBr_41c16b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c16b = icmp eq i8 %loadBr_41c16b, 1
  br i1 %cmpBr_41c16b, label %block_.L_41c24f, label %block_41c171

block_41c171:
  ; Code: leaq -0x38(%rbp), %rsi	 RIP: 41c171	 Bytes: 4
  %loadMem_41c171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c171 = call %struct.Memory* @routine_leaq_MINUS0x38__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c171)
  store %struct.Memory* %call_41c171, %struct.Memory** %MEMORY

  ; Code: leaq -0x3c(%rbp), %rdx	 RIP: 41c175	 Bytes: 4
  %loadMem_41c175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c175 = call %struct.Memory* @routine_leaq_MINUS0x3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c175)
  store %struct.Memory* %call_41c175, %struct.Memory** %MEMORY

  ; Code: leaq -0x40(%rbp), %rcx	 RIP: 41c179	 Bytes: 4
  %loadMem_41c179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c179 = call %struct.Memory* @routine_leaq_MINUS0x40__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c179)
  store %struct.Memory* %call_41c179, %struct.Memory** %MEMORY

  ; Code: movq $0xb01180, %r8	 RIP: 41c17d	 Bytes: 10
  %loadMem_41c17d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c17d = call %struct.Memory* @routine_movq__0xb01180___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c17d)
  store %struct.Memory* %call_41c17d, %struct.Memory** %MEMORY

  ; Code: movq $0xb45500, %r9	 RIP: 41c187	 Bytes: 10
  %loadMem_41c187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c187 = call %struct.Memory* @routine_movq__0xb45500___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c187)
  store %struct.Memory* %call_41c187, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %eax	 RIP: 41c191	 Bytes: 5
  %loadMem_41c191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c191 = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c191)
  store %struct.Memory* %call_41c191, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41c196	 Bytes: 3
  %loadMem_41c196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c196 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c196)
  store %struct.Memory* %call_41c196, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %r10d	 RIP: 41c199	 Bytes: 4
  %loadMem_41c199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c199 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c199)
  store %struct.Memory* %call_41c199, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rsp)	 RIP: 41c19d	 Bytes: 7
  %loadMem_41c19d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c19d = call %struct.Memory* @routine_movl__0x1____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c19d)
  store %struct.Memory* %call_41c19d, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 41c1a4	 Bytes: 5
  %loadMem_41c1a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1a4 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1a4)
  store %struct.Memory* %call_41c1a4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x370(%rbp)	 RIP: 41c1a9	 Bytes: 6
  %loadMem_41c1a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1a9 = call %struct.Memory* @routine_movl__eax__MINUS0x370__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1a9)
  store %struct.Memory* %call_41c1a9, %struct.Memory** %MEMORY

  ; Code: callq .compute_eyes	 RIP: 41c1af	 Bytes: 5
  %loadMem1_41c1af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c1af = call %struct.Memory* @routine_callq_.compute_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c1af, i64 120561, i64 5, i64 5)
  store %struct.Memory* %call1_41c1af, %struct.Memory** %MEMORY

  %loadMem2_41c1af = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c1af = load i64, i64* %3
  %call2_41c1af = call %struct.Memory* @sub_4398a0.compute_eyes(%struct.State* %0, i64  %loadPC_41c1af, %struct.Memory* %loadMem2_41c1af)
  store %struct.Memory* %call2_41c1af, %struct.Memory** %MEMORY

  ; Code: movl 0xab0f24, %eax	 RIP: 41c1b4	 Bytes: 7
  %loadMem_41c1b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1b4 = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1b4)
  store %struct.Memory* %call_41c1b4, %struct.Memory** %MEMORY

  ; Code: andl $0x2, %eax	 RIP: 41c1bb	 Bytes: 3
  %loadMem_41c1bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1bb = call %struct.Memory* @routine_andl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1bb)
  store %struct.Memory* %call_41c1bb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41c1be	 Bytes: 3
  %loadMem_41c1be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1be = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1be)
  store %struct.Memory* %call_41c1be, %struct.Memory** %MEMORY

  ; Code: jne .L_41c1cc	 RIP: 41c1c1	 Bytes: 6
  %loadMem_41c1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1c1 = call %struct.Memory* @routine_jne_.L_41c1cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1c1, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41c1c1, %struct.Memory** %MEMORY

  %loadBr_41c1c1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c1c1 = icmp eq i8 %loadBr_41c1c1, 1
  br i1 %cmpBr_41c1c1, label %block_.L_41c1cc, label %block_41c1c7

block_41c1c7:
  ; Code: jmpq .L_41c1fe	 RIP: 41c1c7	 Bytes: 5
  %loadMem_41c1c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1c7 = call %struct.Memory* @routine_jmpq_.L_41c1fe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1c7, i64 55, i64 5)
  store %struct.Memory* %call_41c1c7, %struct.Memory** %MEMORY

  br label %block_.L_41c1fe

  ; Code: .L_41c1cc:	 RIP: 41c1cc	 Bytes: 0
block_.L_41c1cc:

  ; Code: leaq -0x38(%rbp), %rdi	 RIP: 41c1cc	 Bytes: 4
  %loadMem_41c1cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1cc = call %struct.Memory* @routine_leaq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1cc)
  store %struct.Memory* %call_41c1cc, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 41c1d0	 Bytes: 3
  %loadMem_41c1d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1d0 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1d0)
  store %struct.Memory* %call_41c1d0, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x374(%rbp)	 RIP: 41c1d3	 Bytes: 6
  %loadMem_41c1d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1d3 = call %struct.Memory* @routine_movl__esi__MINUS0x374__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1d3)
  store %struct.Memory* %call_41c1d3, %struct.Memory** %MEMORY

  ; Code: callq .eyevalue_to_string	 RIP: 41c1d9	 Bytes: 5
  %loadMem1_41c1d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c1d9 = call %struct.Memory* @routine_callq_.eyevalue_to_string(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c1d9, i64 129335, i64 5, i64 5)
  store %struct.Memory* %call1_41c1d9, %struct.Memory** %MEMORY

  %loadMem2_41c1d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c1d9 = load i64, i64* %3
  %call2_41c1d9 = call %struct.Memory* @sub_43bb10.eyevalue_to_string(%struct.State* %0, i64  %loadPC_41c1d9, %struct.Memory* %loadMem2_41c1d9)
  store %struct.Memory* %call2_41c1d9, %struct.Memory** %MEMORY

  ; Code: movq $0x57af1a, %rdi	 RIP: 41c1de	 Bytes: 10
  %loadMem_41c1de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1de = call %struct.Memory* @routine_movq__0x57af1a___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1de)
  store %struct.Memory* %call_41c1de, %struct.Memory** %MEMORY

  ; Code: movl -0x374(%rbp), %esi	 RIP: 41c1e8	 Bytes: 6
  %loadMem_41c1e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1e8 = call %struct.Memory* @routine_movl_MINUS0x374__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1e8)
  store %struct.Memory* %call_41c1e8, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41c1ee	 Bytes: 3
  %loadMem_41c1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1ee = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1ee)
  store %struct.Memory* %call_41c1ee, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41c1f1	 Bytes: 2
  %loadMem_41c1f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1f1 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1f1)
  store %struct.Memory* %call_41c1f1, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 41c1f3	 Bytes: 5
  %loadMem1_41c1f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c1f3 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c1f3, i64 220093, i64 5, i64 5)
  store %struct.Memory* %call1_41c1f3, %struct.Memory** %MEMORY

  %loadMem2_41c1f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c1f3 = load i64, i64* %3
  %call2_41c1f3 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_41c1f3, %struct.Memory* %loadMem2_41c1f3)
  store %struct.Memory* %call2_41c1f3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x378(%rbp)	 RIP: 41c1f8	 Bytes: 6
  %loadMem_41c1f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1f8 = call %struct.Memory* @routine_movl__eax__MINUS0x378__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1f8)
  store %struct.Memory* %call_41c1f8, %struct.Memory** %MEMORY

  ; Code: .L_41c1fe:	 RIP: 41c1fe	 Bytes: 0
  br label %block_.L_41c1fe
block_.L_41c1fe:

  ; Code: movq $0xb01180, %rax	 RIP: 41c1fe	 Bytes: 10
  %loadMem_41c1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c1fe = call %struct.Memory* @routine_movq__0xb01180___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c1fe)
  store %struct.Memory* %call_41c1fe, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c208	 Bytes: 4
  %loadMem_41c208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c208 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c208)
  store %struct.Memory* %call_41c208, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c20c	 Bytes: 4
  %loadMem_41c20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c20c = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c20c)
  store %struct.Memory* %call_41c20c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41c210	 Bytes: 3
  %loadMem_41c210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c210 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c210)
  store %struct.Memory* %call_41c210, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41c213	 Bytes: 3
  %loadMem_41c213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c213 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c213)
  store %struct.Memory* %call_41c213, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %esi	 RIP: 41c216	 Bytes: 3
  %loadMem_41c216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c216 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c216)
  store %struct.Memory* %call_41c216, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x10(%rdx)	 RIP: 41c219	 Bytes: 3
  %loadMem_41c219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c219 = call %struct.Memory* @routine_movl__esi__0x10__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c219)
  store %struct.Memory* %call_41c219, %struct.Memory** %MEMORY

  ; Code: movl -0x3c(%rbp), %esi	 RIP: 41c21c	 Bytes: 3
  %loadMem_41c21c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c21c = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c21c)
  store %struct.Memory* %call_41c21c, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c21f	 Bytes: 4
  %loadMem_41c21f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c21f = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c21f)
  store %struct.Memory* %call_41c21f, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c223	 Bytes: 4
  %loadMem_41c223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c223 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c223)
  store %struct.Memory* %call_41c223, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41c227	 Bytes: 3
  %loadMem_41c227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c227 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c227)
  store %struct.Memory* %call_41c227, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41c22a	 Bytes: 3
  %loadMem_41c22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c22a = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c22a)
  store %struct.Memory* %call_41c22a, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x14(%rdx)	 RIP: 41c22d	 Bytes: 3
  %loadMem_41c22d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c22d = call %struct.Memory* @routine_movl__esi__0x14__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c22d)
  store %struct.Memory* %call_41c22d, %struct.Memory** %MEMORY

  ; Code: movl -0x40(%rbp), %esi	 RIP: 41c230	 Bytes: 3
  %loadMem_41c230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c230 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c230)
  store %struct.Memory* %call_41c230, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c233	 Bytes: 4
  %loadMem_41c233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c233 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c233)
  store %struct.Memory* %call_41c233, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c237	 Bytes: 4
  %loadMem_41c237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c237 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c237)
  store %struct.Memory* %call_41c237, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41c23b	 Bytes: 3
  %loadMem_41c23b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c23b = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c23b)
  store %struct.Memory* %call_41c23b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41c23e	 Bytes: 3
  %loadMem_41c23e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c23e = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c23e)
  store %struct.Memory* %call_41c23e, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x18(%rdx)	 RIP: 41c241	 Bytes: 3
  %loadMem_41c241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c241 = call %struct.Memory* @routine_movl__esi__0x18__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c241)
  store %struct.Memory* %call_41c241, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41c244	 Bytes: 3
  %loadMem_41c244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c244 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c244)
  store %struct.Memory* %call_41c244, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 41c247	 Bytes: 3
  %loadMem_41c247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c247 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c247)
  store %struct.Memory* %call_41c247, %struct.Memory** %MEMORY

  ; Code: callq .propagate_eye	 RIP: 41c24a	 Bytes: 5
  %loadMem1_41c24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c24a = call %struct.Memory* @routine_callq_.propagate_eye(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c24a, i64 119206, i64 5, i64 5)
  store %struct.Memory* %call1_41c24a, %struct.Memory** %MEMORY

  %loadMem2_41c24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c24a = load i64, i64* %3
  %call2_41c24a = call %struct.Memory* @sub_4393f0.propagate_eye(%struct.State* %0, i64  %loadPC_41c24a, %struct.Memory* %loadMem2_41c24a)
  store %struct.Memory* %call2_41c24a, %struct.Memory** %MEMORY

  ; Code: .L_41c24f:	 RIP: 41c24f	 Bytes: 0
  br label %block_.L_41c24f
block_.L_41c24f:

  ; Code: movq $0xb9a0a0, %rax	 RIP: 41c24f	 Bytes: 10
  %loadMem_41c24f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c24f = call %struct.Memory* @routine_movq__0xb9a0a0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c24f)
  store %struct.Memory* %call_41c24f, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c259	 Bytes: 4
  %loadMem_41c259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c259 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c259)
  store %struct.Memory* %call_41c259, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c25d	 Bytes: 4
  %loadMem_41c25d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c25d = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c25d)
  store %struct.Memory* %call_41c25d, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c261	 Bytes: 3
  %loadMem_41c261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c261 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c261)
  store %struct.Memory* %call_41c261, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, (%rax)	 RIP: 41c264	 Bytes: 3
  %loadMem_41c264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c264 = call %struct.Memory* @routine_cmpl__0x4____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c264)
  store %struct.Memory* %call_41c264, %struct.Memory** %MEMORY

  ; Code: jne .L_41c36c	 RIP: 41c267	 Bytes: 6
  %loadMem_41c267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c267 = call %struct.Memory* @routine_jne_.L_41c36c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c267, i8* %BRANCH_TAKEN, i64 261, i64 6, i64 6)
  store %struct.Memory* %call_41c267, %struct.Memory** %MEMORY

  %loadBr_41c267 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c267 = icmp eq i8 %loadBr_41c267, 1
  br i1 %cmpBr_41c267, label %block_.L_41c36c, label %block_41c26d

block_41c26d:
  ; Code: movq $0xb9a0a0, %rax	 RIP: 41c26d	 Bytes: 10
  %loadMem_41c26d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c26d = call %struct.Memory* @routine_movq__0xb9a0a0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c26d)
  store %struct.Memory* %call_41c26d, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c277	 Bytes: 4
  %loadMem_41c277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c277 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c277)
  store %struct.Memory* %call_41c277, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c27b	 Bytes: 4
  %loadMem_41c27b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c27b = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c27b)
  store %struct.Memory* %call_41c27b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c27f	 Bytes: 3
  %loadMem_41c27f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c27f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c27f)
  store %struct.Memory* %call_41c27f, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %edx	 RIP: 41c282	 Bytes: 3
  %loadMem_41c282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c282 = call %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c282)
  store %struct.Memory* %call_41c282, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41c285	 Bytes: 3
  %loadMem_41c285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c285 = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c285)
  store %struct.Memory* %call_41c285, %struct.Memory** %MEMORY

  ; Code: jne .L_41c36c	 RIP: 41c288	 Bytes: 6
  %loadMem_41c288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c288 = call %struct.Memory* @routine_jne_.L_41c36c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c288, i8* %BRANCH_TAKEN, i64 228, i64 6, i64 6)
  store %struct.Memory* %call_41c288, %struct.Memory** %MEMORY

  %loadBr_41c288 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c288 = icmp eq i8 %loadBr_41c288, 1
  br i1 %cmpBr_41c288, label %block_.L_41c36c, label %block_41c28e

block_41c28e:
  ; Code: leaq -0x48(%rbp), %rsi	 RIP: 41c28e	 Bytes: 4
  %loadMem_41c28e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c28e = call %struct.Memory* @routine_leaq_MINUS0x48__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c28e)
  store %struct.Memory* %call_41c28e, %struct.Memory** %MEMORY

  ; Code: leaq -0x4c(%rbp), %rdx	 RIP: 41c292	 Bytes: 4
  %loadMem_41c292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c292 = call %struct.Memory* @routine_leaq_MINUS0x4c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c292)
  store %struct.Memory* %call_41c292, %struct.Memory** %MEMORY

  ; Code: leaq -0x50(%rbp), %rcx	 RIP: 41c296	 Bytes: 4
  %loadMem_41c296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c296 = call %struct.Memory* @routine_leaq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c296)
  store %struct.Memory* %call_41c296, %struct.Memory** %MEMORY

  ; Code: movq $0xb9a0a0, %r8	 RIP: 41c29a	 Bytes: 10
  %loadMem_41c29a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c29a = call %struct.Memory* @routine_movq__0xb9a0a0___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c29a)
  store %struct.Memory* %call_41c29a, %struct.Memory** %MEMORY

  ; Code: movq $0xb45500, %r9	 RIP: 41c2a4	 Bytes: 10
  %loadMem_41c2a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2a4 = call %struct.Memory* @routine_movq__0xb45500___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2a4)
  store %struct.Memory* %call_41c2a4, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %eax	 RIP: 41c2ae	 Bytes: 5
  %loadMem_41c2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2ae = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2ae)
  store %struct.Memory* %call_41c2ae, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41c2b3	 Bytes: 3
  %loadMem_41c2b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2b3 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2b3)
  store %struct.Memory* %call_41c2b3, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %r10d	 RIP: 41c2b6	 Bytes: 4
  %loadMem_41c2b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2b6 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2b6)
  store %struct.Memory* %call_41c2b6, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rsp)	 RIP: 41c2ba	 Bytes: 7
  %loadMem_41c2ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2ba = call %struct.Memory* @routine_movl__0x1____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2ba)
  store %struct.Memory* %call_41c2ba, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8(%rsp)	 RIP: 41c2c1	 Bytes: 5
  %loadMem_41c2c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2c1 = call %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2c1)
  store %struct.Memory* %call_41c2c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x37c(%rbp)	 RIP: 41c2c6	 Bytes: 6
  %loadMem_41c2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2c6 = call %struct.Memory* @routine_movl__eax__MINUS0x37c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2c6)
  store %struct.Memory* %call_41c2c6, %struct.Memory** %MEMORY

  ; Code: callq .compute_eyes	 RIP: 41c2cc	 Bytes: 5
  %loadMem1_41c2cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c2cc = call %struct.Memory* @routine_callq_.compute_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c2cc, i64 120276, i64 5, i64 5)
  store %struct.Memory* %call1_41c2cc, %struct.Memory** %MEMORY

  %loadMem2_41c2cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c2cc = load i64, i64* %3
  %call2_41c2cc = call %struct.Memory* @sub_4398a0.compute_eyes(%struct.State* %0, i64  %loadPC_41c2cc, %struct.Memory* %loadMem2_41c2cc)
  store %struct.Memory* %call2_41c2cc, %struct.Memory** %MEMORY

  ; Code: movl 0xab0f24, %eax	 RIP: 41c2d1	 Bytes: 7
  %loadMem_41c2d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2d1 = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2d1)
  store %struct.Memory* %call_41c2d1, %struct.Memory** %MEMORY

  ; Code: andl $0x2, %eax	 RIP: 41c2d8	 Bytes: 3
  %loadMem_41c2d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2d8 = call %struct.Memory* @routine_andl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2d8)
  store %struct.Memory* %call_41c2d8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41c2db	 Bytes: 3
  %loadMem_41c2db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2db = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2db)
  store %struct.Memory* %call_41c2db, %struct.Memory** %MEMORY

  ; Code: jne .L_41c2e9	 RIP: 41c2de	 Bytes: 6
  %loadMem_41c2de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2de = call %struct.Memory* @routine_jne_.L_41c2e9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2de, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41c2de, %struct.Memory** %MEMORY

  %loadBr_41c2de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c2de = icmp eq i8 %loadBr_41c2de, 1
  br i1 %cmpBr_41c2de, label %block_.L_41c2e9, label %block_41c2e4

block_41c2e4:
  ; Code: jmpq .L_41c31b	 RIP: 41c2e4	 Bytes: 5
  %loadMem_41c2e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2e4 = call %struct.Memory* @routine_jmpq_.L_41c31b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2e4, i64 55, i64 5)
  store %struct.Memory* %call_41c2e4, %struct.Memory** %MEMORY

  br label %block_.L_41c31b

  ; Code: .L_41c2e9:	 RIP: 41c2e9	 Bytes: 0
block_.L_41c2e9:

  ; Code: leaq -0x48(%rbp), %rdi	 RIP: 41c2e9	 Bytes: 4
  %loadMem_41c2e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2e9 = call %struct.Memory* @routine_leaq_MINUS0x48__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2e9)
  store %struct.Memory* %call_41c2e9, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 41c2ed	 Bytes: 3
  %loadMem_41c2ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2ed = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2ed)
  store %struct.Memory* %call_41c2ed, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x380(%rbp)	 RIP: 41c2f0	 Bytes: 6
  %loadMem_41c2f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2f0 = call %struct.Memory* @routine_movl__esi__MINUS0x380__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2f0)
  store %struct.Memory* %call_41c2f0, %struct.Memory** %MEMORY

  ; Code: callq .eyevalue_to_string	 RIP: 41c2f6	 Bytes: 5
  %loadMem1_41c2f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c2f6 = call %struct.Memory* @routine_callq_.eyevalue_to_string(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c2f6, i64 129050, i64 5, i64 5)
  store %struct.Memory* %call1_41c2f6, %struct.Memory** %MEMORY

  %loadMem2_41c2f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c2f6 = load i64, i64* %3
  %call2_41c2f6 = call %struct.Memory* @sub_43bb10.eyevalue_to_string(%struct.State* %0, i64  %loadPC_41c2f6, %struct.Memory* %loadMem2_41c2f6)
  store %struct.Memory* %call2_41c2f6, %struct.Memory** %MEMORY

  ; Code: movq $0x57af35, %rdi	 RIP: 41c2fb	 Bytes: 10
  %loadMem_41c2fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c2fb = call %struct.Memory* @routine_movq__0x57af35___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c2fb)
  store %struct.Memory* %call_41c2fb, %struct.Memory** %MEMORY

  ; Code: movl -0x380(%rbp), %esi	 RIP: 41c305	 Bytes: 6
  %loadMem_41c305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c305 = call %struct.Memory* @routine_movl_MINUS0x380__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c305)
  store %struct.Memory* %call_41c305, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41c30b	 Bytes: 3
  %loadMem_41c30b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c30b = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c30b)
  store %struct.Memory* %call_41c30b, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41c30e	 Bytes: 2
  %loadMem_41c30e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c30e = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c30e)
  store %struct.Memory* %call_41c30e, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 41c310	 Bytes: 5
  %loadMem1_41c310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c310 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c310, i64 219808, i64 5, i64 5)
  store %struct.Memory* %call1_41c310, %struct.Memory** %MEMORY

  %loadMem2_41c310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c310 = load i64, i64* %3
  %call2_41c310 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_41c310, %struct.Memory* %loadMem2_41c310)
  store %struct.Memory* %call2_41c310, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x384(%rbp)	 RIP: 41c315	 Bytes: 6
  %loadMem_41c315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c315 = call %struct.Memory* @routine_movl__eax__MINUS0x384__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c315)
  store %struct.Memory* %call_41c315, %struct.Memory** %MEMORY

  ; Code: .L_41c31b:	 RIP: 41c31b	 Bytes: 0
  br label %block_.L_41c31b
block_.L_41c31b:

  ; Code: movq $0xb9a0a0, %rax	 RIP: 41c31b	 Bytes: 10
  %loadMem_41c31b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c31b = call %struct.Memory* @routine_movq__0xb9a0a0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c31b)
  store %struct.Memory* %call_41c31b, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c325	 Bytes: 4
  %loadMem_41c325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c325 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c325)
  store %struct.Memory* %call_41c325, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c329	 Bytes: 4
  %loadMem_41c329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c329 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c329)
  store %struct.Memory* %call_41c329, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41c32d	 Bytes: 3
  %loadMem_41c32d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c32d = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c32d)
  store %struct.Memory* %call_41c32d, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41c330	 Bytes: 3
  %loadMem_41c330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c330 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c330)
  store %struct.Memory* %call_41c330, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %esi	 RIP: 41c333	 Bytes: 3
  %loadMem_41c333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c333 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c333)
  store %struct.Memory* %call_41c333, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x10(%rdx)	 RIP: 41c336	 Bytes: 3
  %loadMem_41c336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c336 = call %struct.Memory* @routine_movl__esi__0x10__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c336)
  store %struct.Memory* %call_41c336, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %esi	 RIP: 41c339	 Bytes: 3
  %loadMem_41c339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c339 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c339)
  store %struct.Memory* %call_41c339, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c33c	 Bytes: 4
  %loadMem_41c33c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c33c = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c33c)
  store %struct.Memory* %call_41c33c, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c340	 Bytes: 4
  %loadMem_41c340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c340 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c340)
  store %struct.Memory* %call_41c340, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41c344	 Bytes: 3
  %loadMem_41c344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c344 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c344)
  store %struct.Memory* %call_41c344, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41c347	 Bytes: 3
  %loadMem_41c347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c347 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c347)
  store %struct.Memory* %call_41c347, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x14(%rdx)	 RIP: 41c34a	 Bytes: 3
  %loadMem_41c34a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c34a = call %struct.Memory* @routine_movl__esi__0x14__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c34a)
  store %struct.Memory* %call_41c34a, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %esi	 RIP: 41c34d	 Bytes: 3
  %loadMem_41c34d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c34d = call %struct.Memory* @routine_movl_MINUS0x50__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c34d)
  store %struct.Memory* %call_41c34d, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c350	 Bytes: 4
  %loadMem_41c350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c350 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c350)
  store %struct.Memory* %call_41c350, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c354	 Bytes: 4
  %loadMem_41c354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c354 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c354)
  store %struct.Memory* %call_41c354, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41c358	 Bytes: 3
  %loadMem_41c358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c358 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c358)
  store %struct.Memory* %call_41c358, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41c35b	 Bytes: 3
  %loadMem_41c35b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c35b = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c35b)
  store %struct.Memory* %call_41c35b, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x18(%rdx)	 RIP: 41c35e	 Bytes: 3
  %loadMem_41c35e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c35e = call %struct.Memory* @routine_movl__esi__0x18__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c35e)
  store %struct.Memory* %call_41c35e, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41c361	 Bytes: 3
  %loadMem_41c361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c361 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c361)
  store %struct.Memory* %call_41c361, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 41c364	 Bytes: 3
  %loadMem_41c364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c364 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c364)
  store %struct.Memory* %call_41c364, %struct.Memory** %MEMORY

  ; Code: callq .propagate_eye	 RIP: 41c367	 Bytes: 5
  %loadMem1_41c367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c367 = call %struct.Memory* @routine_callq_.propagate_eye(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c367, i64 118921, i64 5, i64 5)
  store %struct.Memory* %call1_41c367, %struct.Memory** %MEMORY

  %loadMem2_41c367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c367 = load i64, i64* %3
  %call2_41c367 = call %struct.Memory* @sub_4393f0.propagate_eye(%struct.State* %0, i64  %loadPC_41c367, %struct.Memory* %loadMem2_41c367)
  store %struct.Memory* %call2_41c367, %struct.Memory** %MEMORY

  ; Code: .L_41c36c:	 RIP: 41c36c	 Bytes: 0
  br label %block_.L_41c36c
block_.L_41c36c:

  ; Code: jmpq .L_41c371	 RIP: 41c36c	 Bytes: 5
  %loadMem_41c36c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c36c = call %struct.Memory* @routine_jmpq_.L_41c371(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c36c, i64 5, i64 5)
  store %struct.Memory* %call_41c36c, %struct.Memory** %MEMORY

  br label %block_.L_41c371

  ; Code: .L_41c371:	 RIP: 41c371	 Bytes: 0
block_.L_41c371:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41c371	 Bytes: 3
  %loadMem_41c371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c371 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c371)
  store %struct.Memory* %call_41c371, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41c374	 Bytes: 3
  %loadMem_41c374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c374 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c374)
  store %struct.Memory* %call_41c374, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41c377	 Bytes: 3
  %loadMem_41c377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c377 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c377)
  store %struct.Memory* %call_41c377, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41c10b	 RIP: 41c37a	 Bytes: 5
  %loadMem_41c37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c37a = call %struct.Memory* @routine_jmpq_.L_41c10b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c37a, i64 -623, i64 5)
  store %struct.Memory* %call_41c37a, %struct.Memory** %MEMORY

  br label %block_.L_41c10b

  ; Code: .L_41c37f:	 RIP: 41c37f	 Bytes: 0
block_.L_41c37f:

  ; Code: callq .analyze_false_eye_territory	 RIP: 41c37f	 Bytes: 5
  %loadMem1_41c37f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c37f = call %struct.Memory* @routine_callq_.analyze_false_eye_territory(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c37f, i64 9841, i64 5, i64 5)
  store %struct.Memory* %call1_41c37f, %struct.Memory** %MEMORY

  %loadMem2_41c37f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c37f = load i64, i64* %3
  %call2_41c37f = call %struct.Memory* @sub_41e9f0.analyze_false_eye_territory(%struct.State* %0, i64  %loadPC_41c37f, %struct.Memory* %loadMem2_41c37f)
  store %struct.Memory* %call2_41c37f, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41c384	 Bytes: 7
  %loadMem_41c384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c384 = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c384)
  store %struct.Memory* %call_41c384, %struct.Memory** %MEMORY

  ; Code: .L_41c38b:	 RIP: 41c38b	 Bytes: 0
  br label %block_.L_41c38b
block_.L_41c38b:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41c38b	 Bytes: 7
  %loadMem_41c38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c38b = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c38b)
  store %struct.Memory* %call_41c38b, %struct.Memory** %MEMORY

  ; Code: jge .L_41c80f	 RIP: 41c392	 Bytes: 6
  %loadMem_41c392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c392 = call %struct.Memory* @routine_jge_.L_41c80f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c392, i8* %BRANCH_TAKEN, i64 1149, i64 6, i64 6)
  store %struct.Memory* %call_41c392, %struct.Memory** %MEMORY

  %loadBr_41c392 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c392 = icmp eq i8 %loadBr_41c392, 1
  br i1 %cmpBr_41c392, label %block_.L_41c80f, label %block_41c398

block_41c398:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41c398	 Bytes: 4
  %loadMem_41c398 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c398 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c398)
  store %struct.Memory* %call_41c398, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41c39c	 Bytes: 8
  %loadMem_41c39c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c39c = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c39c)
  store %struct.Memory* %call_41c39c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41c3a4	 Bytes: 3
  %loadMem_41c3a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3a4 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3a4)
  store %struct.Memory* %call_41c3a4, %struct.Memory** %MEMORY

  ; Code: jne .L_41c3b2	 RIP: 41c3a7	 Bytes: 6
  %loadMem_41c3a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3a7 = call %struct.Memory* @routine_jne_.L_41c3b2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3a7, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41c3a7, %struct.Memory** %MEMORY

  %loadBr_41c3a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c3a7 = icmp eq i8 %loadBr_41c3a7, 1
  br i1 %cmpBr_41c3a7, label %block_.L_41c3b2, label %block_41c3ad

block_41c3ad:
  ; Code: jmpq .L_41c801	 RIP: 41c3ad	 Bytes: 5
  %loadMem_41c3ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3ad = call %struct.Memory* @routine_jmpq_.L_41c801(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3ad, i64 1108, i64 5)
  store %struct.Memory* %call_41c3ad, %struct.Memory** %MEMORY

  br label %block_.L_41c801

  ; Code: .L_41c3b2:	 RIP: 41c3b2	 Bytes: 0
block_.L_41c3b2:

  ; Code: movq $0xb01180, %rax	 RIP: 41c3b2	 Bytes: 10
  %loadMem_41c3b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3b2 = call %struct.Memory* @routine_movq__0xb01180___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3b2)
  store %struct.Memory* %call_41c3b2, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c3bc	 Bytes: 4
  %loadMem_41c3bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3bc = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3bc)
  store %struct.Memory* %call_41c3bc, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c3c0	 Bytes: 4
  %loadMem_41c3c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3c0 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3c0)
  store %struct.Memory* %call_41c3c0, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c3c4	 Bytes: 3
  %loadMem_41c3c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3c4 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3c4)
  store %struct.Memory* %call_41c3c4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5, (%rax)	 RIP: 41c3c7	 Bytes: 3
  %loadMem_41c3c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3c7 = call %struct.Memory* @routine_cmpl__0x5____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3c7)
  store %struct.Memory* %call_41c3c7, %struct.Memory** %MEMORY

  ; Code: jne .L_41c5ca	 RIP: 41c3ca	 Bytes: 6
  %loadMem_41c3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3ca = call %struct.Memory* @routine_jne_.L_41c5ca(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3ca, i8* %BRANCH_TAKEN, i64 512, i64 6, i64 6)
  store %struct.Memory* %call_41c3ca, %struct.Memory** %MEMORY

  %loadBr_41c3ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c3ca = icmp eq i8 %loadBr_41c3ca, 1
  br i1 %cmpBr_41c3ca, label %block_.L_41c5ca, label %block_41c3d0

block_41c3d0:
  ; Code: movq $0xb01180, %rax	 RIP: 41c3d0	 Bytes: 10
  %loadMem_41c3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3d0 = call %struct.Memory* @routine_movq__0xb01180___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3d0)
  store %struct.Memory* %call_41c3d0, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c3da	 Bytes: 4
  %loadMem_41c3da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3da = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3da)
  store %struct.Memory* %call_41c3da, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c3de	 Bytes: 4
  %loadMem_41c3de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3de = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3de)
  store %struct.Memory* %call_41c3de, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c3e2	 Bytes: 3
  %loadMem_41c3e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3e2 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3e2)
  store %struct.Memory* %call_41c3e2, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %edx	 RIP: 41c3e5	 Bytes: 3
  %loadMem_41c3e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3e5 = call %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3e5)
  store %struct.Memory* %call_41c3e5, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41c3e8	 Bytes: 3
  %loadMem_41c3e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3e8 = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3e8)
  store %struct.Memory* %call_41c3e8, %struct.Memory** %MEMORY

  ; Code: jne .L_41c5ca	 RIP: 41c3eb	 Bytes: 6
  %loadMem_41c3eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3eb = call %struct.Memory* @routine_jne_.L_41c5ca(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3eb, i8* %BRANCH_TAKEN, i64 479, i64 6, i64 6)
  store %struct.Memory* %call_41c3eb, %struct.Memory** %MEMORY

  %loadBr_41c3eb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c3eb = icmp eq i8 %loadBr_41c3eb, 1
  br i1 %cmpBr_41c3eb, label %block_.L_41c5ca, label %block_41c3f1

block_41c3f1:
  ; Code: movq $0xb01180, %rax	 RIP: 41c3f1	 Bytes: 10
  %loadMem_41c3f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3f1 = call %struct.Memory* @routine_movq__0xb01180___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3f1)
  store %struct.Memory* %call_41c3f1, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %edx	 RIP: 41c3fb	 Bytes: 5
  %loadMem_41c3fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c3fb = call %struct.Memory* @routine_movl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c3fb)
  store %struct.Memory* %call_41c3fb, %struct.Memory** %MEMORY

  ; Code: leaq -0x1c(%rbp), %rcx	 RIP: 41c400	 Bytes: 4
  %loadMem_41c400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c400 = call %struct.Memory* @routine_leaq_MINUS0x1c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c400)
  store %struct.Memory* %call_41c400, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %r8d	 RIP: 41c404	 Bytes: 6
  %loadMem_41c404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c404 = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c404)
  store %struct.Memory* %call_41c404, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41c40a	 Bytes: 4
  %loadMem_41c40a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c40a = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c40a)
  store %struct.Memory* %call_41c40a, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rsi, %rsi	 RIP: 41c40e	 Bytes: 4
  %loadMem_41c40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c40e = call %struct.Memory* @routine_imulq__0x24___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c40e)
  store %struct.Memory* %call_41c40e, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41c412	 Bytes: 3
  %loadMem_41c412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c412 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c412)
  store %struct.Memory* %call_41c412, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41c415	 Bytes: 3
  %loadMem_41c415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c415 = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c415)
  store %struct.Memory* %call_41c415, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rdi), %edi	 RIP: 41c418	 Bytes: 3
  %loadMem_41c418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c418 = call %struct.Memory* @routine_movl_0xc__rdi____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c418)
  store %struct.Memory* %call_41c418, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 41c41b	 Bytes: 3
  %loadMem_41c41b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c41b = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c41b)
  store %struct.Memory* %call_41c41b, %struct.Memory** %MEMORY

  ; Code: callq .find_eye_dragons	 RIP: 41c41e	 Bytes: 5
  %loadMem1_41c41e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c41e = call %struct.Memory* @routine_callq_.find_eye_dragons(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c41e, i64 119090, i64 5, i64 5)
  store %struct.Memory* %call1_41c41e, %struct.Memory** %MEMORY

  %loadMem2_41c41e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c41e = load i64, i64* %3
  %call2_41c41e = call %struct.Memory* @sub_439550.find_eye_dragons(%struct.State* %0, i64  %loadPC_41c41e, %struct.Memory* %loadMem2_41c41e)
  store %struct.Memory* %call2_41c41e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 41c423	 Bytes: 3
  %loadMem_41c423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c423 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c423)
  store %struct.Memory* %call_41c423, %struct.Memory** %MEMORY

  ; Code: jne .L_41c5ca	 RIP: 41c426	 Bytes: 6
  %loadMem_41c426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c426 = call %struct.Memory* @routine_jne_.L_41c5ca(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c426, i8* %BRANCH_TAKEN, i64 420, i64 6, i64 6)
  store %struct.Memory* %call_41c426, %struct.Memory** %MEMORY

  %loadBr_41c426 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c426 = icmp eq i8 %loadBr_41c426, 1
  br i1 %cmpBr_41c426, label %block_.L_41c5ca, label %block_41c42c

block_41c42c:
  ; Code: movslq -0x1c(%rbp), %rax	 RIP: 41c42c	 Bytes: 4
  %loadMem_41c42c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c42c = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c42c)
  store %struct.Memory* %call_41c42c, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41c430	 Bytes: 8
  %loadMem_41c430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c430 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c430)
  store %struct.Memory* %call_41c430, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %ecx	 RIP: 41c438	 Bytes: 3
  %loadMem_41c438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c438 = call %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c438)
  store %struct.Memory* %call_41c438, %struct.Memory** %MEMORY

  ; Code: jne .L_41c446	 RIP: 41c43b	 Bytes: 6
  %loadMem_41c43b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c43b = call %struct.Memory* @routine_jne_.L_41c446(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c43b, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41c43b, %struct.Memory** %MEMORY

  %loadBr_41c43b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c43b = icmp eq i8 %loadBr_41c43b, 1
  br i1 %cmpBr_41c43b, label %block_.L_41c446, label %block_41c441

block_41c441:
  ; Code: jmpq .L_41c46e	 RIP: 41c441	 Bytes: 5
  %loadMem_41c441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c441 = call %struct.Memory* @routine_jmpq_.L_41c46e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c441, i64 45, i64 5)
  store %struct.Memory* %call_41c441, %struct.Memory** %MEMORY

  br label %block_.L_41c46e

  ; Code: .L_41c446:	 RIP: 41c446	 Bytes: 0
block_.L_41c446:

  ; Code: movq $0x57ad9b, %rdi	 RIP: 41c446	 Bytes: 10
  %loadMem_41c446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c446 = call %struct.Memory* @routine_movq__0x57ad9b___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c446)
  store %struct.Memory* %call_41c446, %struct.Memory** %MEMORY

  ; Code: movl $0xfb, %esi	 RIP: 41c450	 Bytes: 5
  %loadMem_41c450 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c450 = call %struct.Memory* @routine_movl__0xfb___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c450)
  store %struct.Memory* %call_41c450, %struct.Memory** %MEMORY

  ; Code: movq $0x57af50, %rdx	 RIP: 41c455	 Bytes: 10
  %loadMem_41c455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c455 = call %struct.Memory* @routine_movq__0x57af50___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c455)
  store %struct.Memory* %call_41c455, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %eax	 RIP: 41c45f	 Bytes: 5
  %loadMem_41c45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c45f = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c45f)
  store %struct.Memory* %call_41c45f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 41c464	 Bytes: 2
  %loadMem_41c464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c464 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c464)
  store %struct.Memory* %call_41c464, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 41c466	 Bytes: 3
  %loadMem_41c466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c466 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c466)
  store %struct.Memory* %call_41c466, %struct.Memory** %MEMORY

  ; Code: callq .abortgo	 RIP: 41c469	 Bytes: 5
  %loadMem1_41c469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c469 = call %struct.Memory* @routine_callq_.abortgo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c469, i64 220199, i64 5, i64 5)
  store %struct.Memory* %call1_41c469, %struct.Memory** %MEMORY

  %loadMem2_41c469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c469 = load i64, i64* %3
  %call2_41c469 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64  %loadPC_41c469, %struct.Memory* %loadMem2_41c469)
  store %struct.Memory* %call2_41c469, %struct.Memory** %MEMORY

  ; Code: .L_41c46e:	 RIP: 41c46e	 Bytes: 0
  br label %block_.L_41c46e
block_.L_41c46e:

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 41c46e	 Bytes: 8
  %loadMem_41c46e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c46e = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c46e)
  store %struct.Memory* %call_41c46e, %struct.Memory** %MEMORY

  ; Code: jne .L_41c481	 RIP: 41c476	 Bytes: 6
  %loadMem_41c476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c476 = call %struct.Memory* @routine_jne_.L_41c481(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c476, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41c476, %struct.Memory** %MEMORY

  %loadBr_41c476 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c476 = icmp eq i8 %loadBr_41c476, 1
  br i1 %cmpBr_41c476, label %block_.L_41c481, label %block_41c47c

block_41c47c:
  ; Code: jmpq .L_41c49e	 RIP: 41c47c	 Bytes: 5
  %loadMem_41c47c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c47c = call %struct.Memory* @routine_jmpq_.L_41c49e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c47c, i64 34, i64 5)
  store %struct.Memory* %call_41c47c, %struct.Memory** %MEMORY

  br label %block_.L_41c49e

  ; Code: .L_41c481:	 RIP: 41c481	 Bytes: 0
block_.L_41c481:

  ; Code: movq $0x57af5f, %rdi	 RIP: 41c481	 Bytes: 10
  %loadMem_41c481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c481 = call %struct.Memory* @routine_movq__0x57af5f___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c481)
  store %struct.Memory* %call_41c481, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 41c48b	 Bytes: 3
  %loadMem_41c48b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c48b = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c48b)
  store %struct.Memory* %call_41c48b, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 41c48e	 Bytes: 3
  %loadMem_41c48e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c48e = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c48e)
  store %struct.Memory* %call_41c48e, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41c491	 Bytes: 2
  %loadMem_41c491 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c491 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c491)
  store %struct.Memory* %call_41c491, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 41c493	 Bytes: 5
  %loadMem1_41c493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c493 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c493, i64 219421, i64 5, i64 5)
  store %struct.Memory* %call1_41c493, %struct.Memory** %MEMORY

  %loadMem2_41c493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c493 = load i64, i64* %3
  %call2_41c493 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_41c493, %struct.Memory* %loadMem2_41c493)
  store %struct.Memory* %call2_41c493, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x388(%rbp)	 RIP: 41c498	 Bytes: 6
  %loadMem_41c498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c498 = call %struct.Memory* @routine_movl__eax__MINUS0x388__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c498)
  store %struct.Memory* %call_41c498, %struct.Memory** %MEMORY

  ; Code: .L_41c49e:	 RIP: 41c49e	 Bytes: 0
  br label %block_.L_41c49e
block_.L_41c49e:

  ; Code: movq $0xb01180, %rax	 RIP: 41c49e	 Bytes: 10
  %loadMem_41c49e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c49e = call %struct.Memory* @routine_movq__0xb01180___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c49e)
  store %struct.Memory* %call_41c49e, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c4a8	 Bytes: 4
  %loadMem_41c4a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4a8 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4a8)
  store %struct.Memory* %call_41c4a8, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c4ac	 Bytes: 4
  %loadMem_41c4ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4ac = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4ac)
  store %struct.Memory* %call_41c4ac, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c4b0	 Bytes: 3
  %loadMem_41c4b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4b0 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4b0)
  store %struct.Memory* %call_41c4b0, %struct.Memory** %MEMORY

  ; Code: addq $0x10, %rax	 RIP: 41c4b3	 Bytes: 4
  %loadMem_41c4b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4b3 = call %struct.Memory* @routine_addq__0x10___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4b3)
  store %struct.Memory* %call_41c4b3, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41c4b7	 Bytes: 3
  %loadMem_41c4b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4b7 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4b7)
  store %struct.Memory* %call_41c4b7, %struct.Memory** %MEMORY

  ; Code: callq .eye_move_urgency	 RIP: 41c4ba	 Bytes: 5
  %loadMem1_41c4ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c4ba = call %struct.Memory* @routine_callq_.eye_move_urgency(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c4ba, i64 126182, i64 5, i64 5)
  store %struct.Memory* %call1_41c4ba, %struct.Memory** %MEMORY

  %loadMem2_41c4ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c4ba = load i64, i64* %3
  %call2_41c4ba = call %struct.Memory* @sub_43b1a0.eye_move_urgency(%struct.State* %0, i64  %loadPC_41c4ba, %struct.Memory* %loadMem2_41c4ba)
  store %struct.Memory* %call2_41c4ba, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rcx	 RIP: 41c4bf	 Bytes: 10
  %loadMem_41c4bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4bf = call %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4bf)
  store %struct.Memory* %call_41c4bf, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rdi	 RIP: 41c4c9	 Bytes: 8
  %loadMem_41c4c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4c9 = call %struct.Memory* @routine_movq_0xab0fe0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4c9)
  store %struct.Memory* %call_41c4c9, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 41c4d1	 Bytes: 4
  %loadMem_41c4d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4d1 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4d1)
  store %struct.Memory* %call_41c4d1, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41c4d5	 Bytes: 4
  %loadMem_41c4d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4d5 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4d5)
  store %struct.Memory* %call_41c4d5, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 41c4d9	 Bytes: 3
  %loadMem_41c4d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4d9 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4d9)
  store %struct.Memory* %call_41c4d9, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rcx), %rcx	 RIP: 41c4dc	 Bytes: 4
  %loadMem_41c4dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4dc = call %struct.Memory* @routine_movslq_0x4__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4dc)
  store %struct.Memory* %call_41c4dc, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41c4e0	 Bytes: 4
  %loadMem_41c4e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4e0 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4e0)
  store %struct.Memory* %call_41c4e0, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdi	 RIP: 41c4e4	 Bytes: 3
  %loadMem_41c4e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4e4 = call %struct.Memory* @routine_addq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4e4)
  store %struct.Memory* %call_41c4e4, %struct.Memory** %MEMORY

  ; Code: addq $0x4c, %rdi	 RIP: 41c4e7	 Bytes: 4
  %loadMem_41c4e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4e7 = call %struct.Memory* @routine_addq__0x4c___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4e7)
  store %struct.Memory* %call_41c4e7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38c(%rbp)	 RIP: 41c4eb	 Bytes: 6
  %loadMem_41c4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4eb = call %struct.Memory* @routine_movl__eax__MINUS0x38c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4eb)
  store %struct.Memory* %call_41c4eb, %struct.Memory** %MEMORY

  ; Code: callq .eye_move_urgency	 RIP: 41c4f1	 Bytes: 5
  %loadMem1_41c4f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c4f1 = call %struct.Memory* @routine_callq_.eye_move_urgency(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c4f1, i64 126127, i64 5, i64 5)
  store %struct.Memory* %call1_41c4f1, %struct.Memory** %MEMORY

  %loadMem2_41c4f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c4f1 = load i64, i64* %3
  %call2_41c4f1 = call %struct.Memory* @sub_43b1a0.eye_move_urgency(%struct.State* %0, i64  %loadPC_41c4f1, %struct.Memory* %loadMem2_41c4f1)
  store %struct.Memory* %call2_41c4f1, %struct.Memory** %MEMORY

  ; Code: movl -0x38c(%rbp), %esi	 RIP: 41c4f6	 Bytes: 6
  %loadMem_41c4f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4f6 = call %struct.Memory* @routine_movl_MINUS0x38c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4f6)
  store %struct.Memory* %call_41c4f6, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %esi	 RIP: 41c4fc	 Bytes: 2
  %loadMem_41c4fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4fc = call %struct.Memory* @routine_cmpl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4fc)
  store %struct.Memory* %call_41c4fc, %struct.Memory** %MEMORY

  ; Code: jle .L_41c547	 RIP: 41c4fe	 Bytes: 6
  %loadMem_41c4fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c4fe = call %struct.Memory* @routine_jle_.L_41c547(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c4fe, i8* %BRANCH_TAKEN, i64 73, i64 6, i64 6)
  store %struct.Memory* %call_41c4fe, %struct.Memory** %MEMORY

  %loadBr_41c4fe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c4fe = icmp eq i8 %loadBr_41c4fe, 1
  br i1 %cmpBr_41c4fe, label %block_.L_41c547, label %block_41c504

block_41c504:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41c504	 Bytes: 10
  %loadMem_41c504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c504 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c504)
  store %struct.Memory* %call_41c504, %struct.Memory** %MEMORY

  ; Code: movq $0xb01180, %rcx	 RIP: 41c50e	 Bytes: 10
  %loadMem_41c50e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c50e = call %struct.Memory* @routine_movq__0xb01180___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c50e)
  store %struct.Memory* %call_41c50e, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41c518	 Bytes: 4
  %loadMem_41c518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c518 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c518)
  store %struct.Memory* %call_41c518, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rdx, %rdx	 RIP: 41c51c	 Bytes: 4
  %loadMem_41c51c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c51c = call %struct.Memory* @routine_imulq__0x24___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c51c)
  store %struct.Memory* %call_41c51c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 41c520	 Bytes: 3
  %loadMem_41c520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c520 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c520)
  store %struct.Memory* %call_41c520, %struct.Memory** %MEMORY

  ; Code: movl 0x18(%rcx), %esi	 RIP: 41c523	 Bytes: 3
  %loadMem_41c523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c523 = call %struct.Memory* @routine_movl_0x18__rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c523)
  store %struct.Memory* %call_41c523, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41c526	 Bytes: 8
  %loadMem_41c526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c526 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c526)
  store %struct.Memory* %call_41c526, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 41c52e	 Bytes: 4
  %loadMem_41c52e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c52e = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c52e)
  store %struct.Memory* %call_41c52e, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41c532	 Bytes: 4
  %loadMem_41c532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c532 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c532)
  store %struct.Memory* %call_41c532, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 41c536	 Bytes: 3
  %loadMem_41c536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c536 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c536)
  store %struct.Memory* %call_41c536, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 41c539	 Bytes: 4
  %loadMem_41c539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c539 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c539)
  store %struct.Memory* %call_41c539, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 41c53d	 Bytes: 4
  %loadMem_41c53d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c53d = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c53d)
  store %struct.Memory* %call_41c53d, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 41c541	 Bytes: 3
  %loadMem_41c541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c541 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c541)
  store %struct.Memory* %call_41c541, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x50(%rcx)	 RIP: 41c544	 Bytes: 3
  %loadMem_41c544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c544 = call %struct.Memory* @routine_movl__esi__0x50__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c544)
  store %struct.Memory* %call_41c544, %struct.Memory** %MEMORY

  ; Code: .L_41c547:	 RIP: 41c547	 Bytes: 0
  br label %block_.L_41c547
block_.L_41c547:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41c547	 Bytes: 10
  %loadMem_41c547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c547 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c547)
  store %struct.Memory* %call_41c547, %struct.Memory** %MEMORY

  ; Code: movq $0xb01180, %rcx	 RIP: 41c551	 Bytes: 10
  %loadMem_41c551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c551 = call %struct.Memory* @routine_movq__0xb01180___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c551)
  store %struct.Memory* %call_41c551, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rdx	 RIP: 41c55b	 Bytes: 8
  %loadMem_41c55b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c55b = call %struct.Memory* @routine_movq_0xab0fe0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c55b)
  store %struct.Memory* %call_41c55b, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rsi	 RIP: 41c563	 Bytes: 4
  %loadMem_41c563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c563 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c563)
  store %struct.Memory* %call_41c563, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41c567	 Bytes: 4
  %loadMem_41c567 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c567 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c567)
  store %struct.Memory* %call_41c567, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41c56b	 Bytes: 3
  %loadMem_41c56b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c56b = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c56b)
  store %struct.Memory* %call_41c56b, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41c56e	 Bytes: 3
  %loadMem_41c56e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c56e = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c56e)
  store %struct.Memory* %call_41c56e, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rdi), %rsi	 RIP: 41c571	 Bytes: 4
  %loadMem_41c571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c571 = call %struct.Memory* @routine_movslq_0x4__rdi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c571)
  store %struct.Memory* %call_41c571, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rsi, %rsi	 RIP: 41c575	 Bytes: 4
  %loadMem_41c575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c575 = call %struct.Memory* @routine_imulq__0x68___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c575)
  store %struct.Memory* %call_41c575, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 41c579	 Bytes: 3
  %loadMem_41c579 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c579 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c579)
  store %struct.Memory* %call_41c579, %struct.Memory** %MEMORY

  ; Code: addq $0x4c, %rdx	 RIP: 41c57c	 Bytes: 4
  %loadMem_41c57c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c57c = call %struct.Memory* @routine_addq__0x4c___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c57c)
  store %struct.Memory* %call_41c57c, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41c580	 Bytes: 4
  %loadMem_41c580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c580 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c580)
  store %struct.Memory* %call_41c580, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rsi, %rsi	 RIP: 41c584	 Bytes: 4
  %loadMem_41c584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c584 = call %struct.Memory* @routine_imulq__0x24___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c584)
  store %struct.Memory* %call_41c584, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 41c588	 Bytes: 3
  %loadMem_41c588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c588 = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c588)
  store %struct.Memory* %call_41c588, %struct.Memory** %MEMORY

  ; Code: addq $0x10, %rcx	 RIP: 41c58b	 Bytes: 4
  %loadMem_41c58b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c58b = call %struct.Memory* @routine_addq__0x10___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c58b)
  store %struct.Memory* %call_41c58b, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rsi	 RIP: 41c58f	 Bytes: 8
  %loadMem_41c58f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c58f = call %struct.Memory* @routine_movq_0xab0fe0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c58f)
  store %struct.Memory* %call_41c58f, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdi	 RIP: 41c597	 Bytes: 4
  %loadMem_41c597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c597 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c597)
  store %struct.Memory* %call_41c597, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdi, %rdi	 RIP: 41c59b	 Bytes: 4
  %loadMem_41c59b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c59b = call %struct.Memory* @routine_imulq__0x4c___rdi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c59b)
  store %struct.Memory* %call_41c59b, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rax	 RIP: 41c59f	 Bytes: 3
  %loadMem_41c59f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c59f = call %struct.Memory* @routine_addq__rdi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c59f)
  store %struct.Memory* %call_41c59f, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 41c5a2	 Bytes: 4
  %loadMem_41c5a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5a2 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5a2)
  store %struct.Memory* %call_41c5a2, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 41c5a6	 Bytes: 4
  %loadMem_41c5a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5a6 = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5a6)
  store %struct.Memory* %call_41c5a6, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rsi	 RIP: 41c5aa	 Bytes: 3
  %loadMem_41c5aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5aa = call %struct.Memory* @routine_addq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5aa)
  store %struct.Memory* %call_41c5aa, %struct.Memory** %MEMORY

  ; Code: addq $0x4c, %rsi	 RIP: 41c5ad	 Bytes: 4
  %loadMem_41c5ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5ad = call %struct.Memory* @routine_addq__0x4c___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5ad)
  store %struct.Memory* %call_41c5ad, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 41c5b1	 Bytes: 3
  %loadMem_41c5b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5b1 = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5b1)
  store %struct.Memory* %call_41c5b1, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x398(%rbp)	 RIP: 41c5b4	 Bytes: 7
  %loadMem_41c5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5b4 = call %struct.Memory* @routine_movq__rsi__MINUS0x398__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5b4)
  store %struct.Memory* %call_41c5b4, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41c5bb	 Bytes: 3
  %loadMem_41c5bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5bb = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5bb)
  store %struct.Memory* %call_41c5bb, %struct.Memory** %MEMORY

  ; Code: movq -0x398(%rbp), %rdx	 RIP: 41c5be	 Bytes: 7
  %loadMem_41c5be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5be = call %struct.Memory* @routine_movq_MINUS0x398__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5be)
  store %struct.Memory* %call_41c5be, %struct.Memory** %MEMORY

  ; Code: callq .add_eyevalues	 RIP: 41c5c5	 Bytes: 5
  %loadMem1_41c5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c5c5 = call %struct.Memory* @routine_callq_.add_eyevalues(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c5c5, i64 132683, i64 5, i64 5)
  store %struct.Memory* %call1_41c5c5, %struct.Memory** %MEMORY

  %loadMem2_41c5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c5c5 = load i64, i64* %3
  %call2_41c5c5 = call %struct.Memory* @sub_43cc10.add_eyevalues(%struct.State* %0, i64  %loadPC_41c5c5, %struct.Memory* %loadMem2_41c5c5)
  store %struct.Memory* %call2_41c5c5, %struct.Memory** %MEMORY

  ; Code: .L_41c5ca:	 RIP: 41c5ca	 Bytes: 0
  br label %block_.L_41c5ca
block_.L_41c5ca:

  ; Code: movq $0xb9a0a0, %rax	 RIP: 41c5ca	 Bytes: 10
  %loadMem_41c5ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5ca = call %struct.Memory* @routine_movq__0xb9a0a0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5ca)
  store %struct.Memory* %call_41c5ca, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c5d4	 Bytes: 4
  %loadMem_41c5d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5d4 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5d4)
  store %struct.Memory* %call_41c5d4, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c5d8	 Bytes: 4
  %loadMem_41c5d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5d8 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5d8)
  store %struct.Memory* %call_41c5d8, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c5dc	 Bytes: 3
  %loadMem_41c5dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5dc = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5dc)
  store %struct.Memory* %call_41c5dc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, (%rax)	 RIP: 41c5df	 Bytes: 3
  %loadMem_41c5df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5df = call %struct.Memory* @routine_cmpl__0x4____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5df)
  store %struct.Memory* %call_41c5df, %struct.Memory** %MEMORY

  ; Code: jne .L_41c7fc	 RIP: 41c5e2	 Bytes: 6
  %loadMem_41c5e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5e2 = call %struct.Memory* @routine_jne_.L_41c7fc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5e2, i8* %BRANCH_TAKEN, i64 538, i64 6, i64 6)
  store %struct.Memory* %call_41c5e2, %struct.Memory** %MEMORY

  %loadBr_41c5e2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c5e2 = icmp eq i8 %loadBr_41c5e2, 1
  br i1 %cmpBr_41c5e2, label %block_.L_41c7fc, label %block_41c5e8

block_41c5e8:
  ; Code: movq $0xb9a0a0, %rax	 RIP: 41c5e8	 Bytes: 10
  %loadMem_41c5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5e8 = call %struct.Memory* @routine_movq__0xb9a0a0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5e8)
  store %struct.Memory* %call_41c5e8, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c5f2	 Bytes: 4
  %loadMem_41c5f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5f2 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5f2)
  store %struct.Memory* %call_41c5f2, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c5f6	 Bytes: 4
  %loadMem_41c5f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5f6 = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5f6)
  store %struct.Memory* %call_41c5f6, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c5fa	 Bytes: 3
  %loadMem_41c5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5fa = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5fa)
  store %struct.Memory* %call_41c5fa, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %edx	 RIP: 41c5fd	 Bytes: 3
  %loadMem_41c5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c5fd = call %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c5fd)
  store %struct.Memory* %call_41c5fd, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41c600	 Bytes: 3
  %loadMem_41c600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c600 = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c600)
  store %struct.Memory* %call_41c600, %struct.Memory** %MEMORY

  ; Code: jne .L_41c7fc	 RIP: 41c603	 Bytes: 6
  %loadMem_41c603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c603 = call %struct.Memory* @routine_jne_.L_41c7fc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c603, i8* %BRANCH_TAKEN, i64 505, i64 6, i64 6)
  store %struct.Memory* %call_41c603, %struct.Memory** %MEMORY

  %loadBr_41c603 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c603 = icmp eq i8 %loadBr_41c603, 1
  br i1 %cmpBr_41c603, label %block_.L_41c7fc, label %block_41c609

block_41c609:
  ; Code: movq $0xb9a0a0, %rax	 RIP: 41c609	 Bytes: 10
  %loadMem_41c609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c609 = call %struct.Memory* @routine_movq__0xb9a0a0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c609)
  store %struct.Memory* %call_41c609, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %ecx	 RIP: 41c613	 Bytes: 5
  %loadMem_41c613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c613 = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c613)
  store %struct.Memory* %call_41c613, %struct.Memory** %MEMORY

  ; Code: leaq -0x1c(%rbp), %rdx	 RIP: 41c618	 Bytes: 4
  %loadMem_41c618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c618 = call %struct.Memory* @routine_leaq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c618)
  store %struct.Memory* %call_41c618, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41c61c	 Bytes: 4
  %loadMem_41c61c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c61c = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c61c)
  store %struct.Memory* %call_41c61c, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rsi, %rsi	 RIP: 41c620	 Bytes: 4
  %loadMem_41c620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c620 = call %struct.Memory* @routine_imulq__0x24___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c620)
  store %struct.Memory* %call_41c620, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41c624	 Bytes: 3
  %loadMem_41c624 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c624 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c624)
  store %struct.Memory* %call_41c624, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41c627	 Bytes: 3
  %loadMem_41c627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c627 = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c627)
  store %struct.Memory* %call_41c627, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rdi), %edi	 RIP: 41c62a	 Bytes: 3
  %loadMem_41c62a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c62a = call %struct.Memory* @routine_movl_0xc__rdi____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c62a)
  store %struct.Memory* %call_41c62a, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 41c62d	 Bytes: 3
  %loadMem_41c62d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c62d = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c62d)
  store %struct.Memory* %call_41c62d, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x3a0(%rbp)	 RIP: 41c630	 Bytes: 7
  %loadMem_41c630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c630 = call %struct.Memory* @routine_movq__rdx__MINUS0x3a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c630)
  store %struct.Memory* %call_41c630, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 41c637	 Bytes: 2
  %loadMem_41c637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c637 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c637)
  store %struct.Memory* %call_41c637, %struct.Memory** %MEMORY

  ; Code: movq -0x3a0(%rbp), %rax	 RIP: 41c639	 Bytes: 7
  %loadMem_41c639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c639 = call %struct.Memory* @routine_movq_MINUS0x3a0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c639)
  store %struct.Memory* %call_41c639, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x3a4(%rbp)	 RIP: 41c640	 Bytes: 6
  %loadMem_41c640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c640 = call %struct.Memory* @routine_movl__ecx__MINUS0x3a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c640)
  store %struct.Memory* %call_41c640, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rcx	 RIP: 41c646	 Bytes: 3
  %loadMem_41c646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c646 = call %struct.Memory* @routine_movq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c646)
  store %struct.Memory* %call_41c646, %struct.Memory** %MEMORY

  ; Code: movl -0x3a4(%rbp), %r8d	 RIP: 41c649	 Bytes: 7
  %loadMem_41c649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c649 = call %struct.Memory* @routine_movl_MINUS0x3a4__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c649)
  store %struct.Memory* %call_41c649, %struct.Memory** %MEMORY

  ; Code: callq .find_eye_dragons	 RIP: 41c650	 Bytes: 5
  %loadMem1_41c650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c650 = call %struct.Memory* @routine_callq_.find_eye_dragons(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c650, i64 118528, i64 5, i64 5)
  store %struct.Memory* %call1_41c650, %struct.Memory** %MEMORY

  %loadMem2_41c650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c650 = load i64, i64* %3
  %call2_41c650 = call %struct.Memory* @sub_439550.find_eye_dragons(%struct.State* %0, i64  %loadPC_41c650, %struct.Memory* %loadMem2_41c650)
  store %struct.Memory* %call2_41c650, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 41c655	 Bytes: 3
  %loadMem_41c655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c655 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c655)
  store %struct.Memory* %call_41c655, %struct.Memory** %MEMORY

  ; Code: jne .L_41c7fc	 RIP: 41c658	 Bytes: 6
  %loadMem_41c658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c658 = call %struct.Memory* @routine_jne_.L_41c7fc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c658, i8* %BRANCH_TAKEN, i64 420, i64 6, i64 6)
  store %struct.Memory* %call_41c658, %struct.Memory** %MEMORY

  %loadBr_41c658 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c658 = icmp eq i8 %loadBr_41c658, 1
  br i1 %cmpBr_41c658, label %block_.L_41c7fc, label %block_41c65e

block_41c65e:
  ; Code: movslq -0x1c(%rbp), %rax	 RIP: 41c65e	 Bytes: 4
  %loadMem_41c65e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c65e = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c65e)
  store %struct.Memory* %call_41c65e, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41c662	 Bytes: 8
  %loadMem_41c662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c662 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c662)
  store %struct.Memory* %call_41c662, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %ecx	 RIP: 41c66a	 Bytes: 3
  %loadMem_41c66a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c66a = call %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c66a)
  store %struct.Memory* %call_41c66a, %struct.Memory** %MEMORY

  ; Code: jne .L_41c678	 RIP: 41c66d	 Bytes: 6
  %loadMem_41c66d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c66d = call %struct.Memory* @routine_jne_.L_41c678(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c66d, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41c66d, %struct.Memory** %MEMORY

  %loadBr_41c66d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c66d = icmp eq i8 %loadBr_41c66d, 1
  br i1 %cmpBr_41c66d, label %block_.L_41c678, label %block_41c673

block_41c673:
  ; Code: jmpq .L_41c6a0	 RIP: 41c673	 Bytes: 5
  %loadMem_41c673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c673 = call %struct.Memory* @routine_jmpq_.L_41c6a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c673, i64 45, i64 5)
  store %struct.Memory* %call_41c673, %struct.Memory** %MEMORY

  br label %block_.L_41c6a0

  ; Code: .L_41c678:	 RIP: 41c678	 Bytes: 0
block_.L_41c678:

  ; Code: movq $0x57ad9b, %rdi	 RIP: 41c678	 Bytes: 10
  %loadMem_41c678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c678 = call %struct.Memory* @routine_movq__0x57ad9b___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c678)
  store %struct.Memory* %call_41c678, %struct.Memory** %MEMORY

  ; Code: movl $0x10a, %esi	 RIP: 41c682	 Bytes: 5
  %loadMem_41c682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c682 = call %struct.Memory* @routine_movl__0x10a___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c682)
  store %struct.Memory* %call_41c682, %struct.Memory** %MEMORY

  ; Code: movq $0x57af95, %rdx	 RIP: 41c687	 Bytes: 10
  %loadMem_41c687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c687 = call %struct.Memory* @routine_movq__0x57af95___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c687)
  store %struct.Memory* %call_41c687, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %eax	 RIP: 41c691	 Bytes: 5
  %loadMem_41c691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c691 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c691)
  store %struct.Memory* %call_41c691, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 41c696	 Bytes: 2
  %loadMem_41c696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c696 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c696)
  store %struct.Memory* %call_41c696, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 41c698	 Bytes: 3
  %loadMem_41c698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c698 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c698)
  store %struct.Memory* %call_41c698, %struct.Memory** %MEMORY

  ; Code: callq .abortgo	 RIP: 41c69b	 Bytes: 5
  %loadMem1_41c69b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c69b = call %struct.Memory* @routine_callq_.abortgo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c69b, i64 219637, i64 5, i64 5)
  store %struct.Memory* %call1_41c69b, %struct.Memory** %MEMORY

  %loadMem2_41c69b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c69b = load i64, i64* %3
  %call2_41c69b = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64  %loadPC_41c69b, %struct.Memory* %loadMem2_41c69b)
  store %struct.Memory* %call2_41c69b, %struct.Memory** %MEMORY

  ; Code: .L_41c6a0:	 RIP: 41c6a0	 Bytes: 0
  br label %block_.L_41c6a0
block_.L_41c6a0:

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 41c6a0	 Bytes: 8
  %loadMem_41c6a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6a0 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6a0)
  store %struct.Memory* %call_41c6a0, %struct.Memory** %MEMORY

  ; Code: jne .L_41c6b3	 RIP: 41c6a8	 Bytes: 6
  %loadMem_41c6a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6a8 = call %struct.Memory* @routine_jne_.L_41c6b3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6a8, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41c6a8, %struct.Memory** %MEMORY

  %loadBr_41c6a8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c6a8 = icmp eq i8 %loadBr_41c6a8, 1
  br i1 %cmpBr_41c6a8, label %block_.L_41c6b3, label %block_41c6ae

block_41c6ae:
  ; Code: jmpq .L_41c6d0	 RIP: 41c6ae	 Bytes: 5
  %loadMem_41c6ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6ae = call %struct.Memory* @routine_jmpq_.L_41c6d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6ae, i64 34, i64 5)
  store %struct.Memory* %call_41c6ae, %struct.Memory** %MEMORY

  br label %block_.L_41c6d0

  ; Code: .L_41c6b3:	 RIP: 41c6b3	 Bytes: 0
block_.L_41c6b3:

  ; Code: movq $0x57af5f, %rdi	 RIP: 41c6b3	 Bytes: 10
  %loadMem_41c6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6b3 = call %struct.Memory* @routine_movq__0x57af5f___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6b3)
  store %struct.Memory* %call_41c6b3, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 41c6bd	 Bytes: 3
  %loadMem_41c6bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6bd = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6bd)
  store %struct.Memory* %call_41c6bd, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 41c6c0	 Bytes: 3
  %loadMem_41c6c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6c0 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6c0)
  store %struct.Memory* %call_41c6c0, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41c6c3	 Bytes: 2
  %loadMem_41c6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6c3 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6c3)
  store %struct.Memory* %call_41c6c3, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 41c6c5	 Bytes: 5
  %loadMem1_41c6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c6c5 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c6c5, i64 218859, i64 5, i64 5)
  store %struct.Memory* %call1_41c6c5, %struct.Memory** %MEMORY

  %loadMem2_41c6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c6c5 = load i64, i64* %3
  %call2_41c6c5 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_41c6c5, %struct.Memory* %loadMem2_41c6c5)
  store %struct.Memory* %call2_41c6c5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3a8(%rbp)	 RIP: 41c6ca	 Bytes: 6
  %loadMem_41c6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6ca = call %struct.Memory* @routine_movl__eax__MINUS0x3a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6ca)
  store %struct.Memory* %call_41c6ca, %struct.Memory** %MEMORY

  ; Code: .L_41c6d0:	 RIP: 41c6d0	 Bytes: 0
  br label %block_.L_41c6d0
block_.L_41c6d0:

  ; Code: movq $0xb9a0a0, %rax	 RIP: 41c6d0	 Bytes: 10
  %loadMem_41c6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6d0 = call %struct.Memory* @routine_movq__0xb9a0a0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6d0)
  store %struct.Memory* %call_41c6d0, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c6da	 Bytes: 4
  %loadMem_41c6da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6da = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6da)
  store %struct.Memory* %call_41c6da, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rcx, %rcx	 RIP: 41c6de	 Bytes: 4
  %loadMem_41c6de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6de = call %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6de)
  store %struct.Memory* %call_41c6de, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c6e2	 Bytes: 3
  %loadMem_41c6e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6e2 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6e2)
  store %struct.Memory* %call_41c6e2, %struct.Memory** %MEMORY

  ; Code: addq $0x10, %rax	 RIP: 41c6e5	 Bytes: 4
  %loadMem_41c6e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6e5 = call %struct.Memory* @routine_addq__0x10___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6e5)
  store %struct.Memory* %call_41c6e5, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41c6e9	 Bytes: 3
  %loadMem_41c6e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6e9 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6e9)
  store %struct.Memory* %call_41c6e9, %struct.Memory** %MEMORY

  ; Code: callq .eye_move_urgency	 RIP: 41c6ec	 Bytes: 5
  %loadMem1_41c6ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c6ec = call %struct.Memory* @routine_callq_.eye_move_urgency(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c6ec, i64 125620, i64 5, i64 5)
  store %struct.Memory* %call1_41c6ec, %struct.Memory** %MEMORY

  %loadMem2_41c6ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c6ec = load i64, i64* %3
  %call2_41c6ec = call %struct.Memory* @sub_43b1a0.eye_move_urgency(%struct.State* %0, i64  %loadPC_41c6ec, %struct.Memory* %loadMem2_41c6ec)
  store %struct.Memory* %call2_41c6ec, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rcx	 RIP: 41c6f1	 Bytes: 10
  %loadMem_41c6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6f1 = call %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6f1)
  store %struct.Memory* %call_41c6f1, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rdi	 RIP: 41c6fb	 Bytes: 8
  %loadMem_41c6fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c6fb = call %struct.Memory* @routine_movq_0xab0fe0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c6fb)
  store %struct.Memory* %call_41c6fb, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 41c703	 Bytes: 4
  %loadMem_41c703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c703 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c703)
  store %struct.Memory* %call_41c703, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41c707	 Bytes: 4
  %loadMem_41c707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c707 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c707)
  store %struct.Memory* %call_41c707, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 41c70b	 Bytes: 3
  %loadMem_41c70b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c70b = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c70b)
  store %struct.Memory* %call_41c70b, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rcx), %rcx	 RIP: 41c70e	 Bytes: 4
  %loadMem_41c70e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c70e = call %struct.Memory* @routine_movslq_0x4__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c70e)
  store %struct.Memory* %call_41c70e, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41c712	 Bytes: 4
  %loadMem_41c712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c712 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c712)
  store %struct.Memory* %call_41c712, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdi	 RIP: 41c716	 Bytes: 3
  %loadMem_41c716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c716 = call %struct.Memory* @routine_addq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c716)
  store %struct.Memory* %call_41c716, %struct.Memory** %MEMORY

  ; Code: addq $0x4c, %rdi	 RIP: 41c719	 Bytes: 4
  %loadMem_41c719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c719 = call %struct.Memory* @routine_addq__0x4c___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c719)
  store %struct.Memory* %call_41c719, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3ac(%rbp)	 RIP: 41c71d	 Bytes: 6
  %loadMem_41c71d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c71d = call %struct.Memory* @routine_movl__eax__MINUS0x3ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c71d)
  store %struct.Memory* %call_41c71d, %struct.Memory** %MEMORY

  ; Code: callq .eye_move_urgency	 RIP: 41c723	 Bytes: 5
  %loadMem1_41c723 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c723 = call %struct.Memory* @routine_callq_.eye_move_urgency(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c723, i64 125565, i64 5, i64 5)
  store %struct.Memory* %call1_41c723, %struct.Memory** %MEMORY

  %loadMem2_41c723 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c723 = load i64, i64* %3
  %call2_41c723 = call %struct.Memory* @sub_43b1a0.eye_move_urgency(%struct.State* %0, i64  %loadPC_41c723, %struct.Memory* %loadMem2_41c723)
  store %struct.Memory* %call2_41c723, %struct.Memory** %MEMORY

  ; Code: movl -0x3ac(%rbp), %esi	 RIP: 41c728	 Bytes: 6
  %loadMem_41c728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c728 = call %struct.Memory* @routine_movl_MINUS0x3ac__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c728)
  store %struct.Memory* %call_41c728, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %esi	 RIP: 41c72e	 Bytes: 2
  %loadMem_41c72e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c72e = call %struct.Memory* @routine_cmpl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c72e)
  store %struct.Memory* %call_41c72e, %struct.Memory** %MEMORY

  ; Code: jle .L_41c779	 RIP: 41c730	 Bytes: 6
  %loadMem_41c730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c730 = call %struct.Memory* @routine_jle_.L_41c779(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c730, i8* %BRANCH_TAKEN, i64 73, i64 6, i64 6)
  store %struct.Memory* %call_41c730, %struct.Memory** %MEMORY

  %loadBr_41c730 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c730 = icmp eq i8 %loadBr_41c730, 1
  br i1 %cmpBr_41c730, label %block_.L_41c779, label %block_41c736

block_41c736:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41c736	 Bytes: 10
  %loadMem_41c736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c736 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c736)
  store %struct.Memory* %call_41c736, %struct.Memory** %MEMORY

  ; Code: movq $0xb9a0a0, %rcx	 RIP: 41c740	 Bytes: 10
  %loadMem_41c740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c740 = call %struct.Memory* @routine_movq__0xb9a0a0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c740)
  store %struct.Memory* %call_41c740, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41c74a	 Bytes: 4
  %loadMem_41c74a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c74a = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c74a)
  store %struct.Memory* %call_41c74a, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rdx, %rdx	 RIP: 41c74e	 Bytes: 4
  %loadMem_41c74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c74e = call %struct.Memory* @routine_imulq__0x24___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c74e)
  store %struct.Memory* %call_41c74e, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 41c752	 Bytes: 3
  %loadMem_41c752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c752 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c752)
  store %struct.Memory* %call_41c752, %struct.Memory** %MEMORY

  ; Code: movl 0x18(%rcx), %esi	 RIP: 41c755	 Bytes: 3
  %loadMem_41c755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c755 = call %struct.Memory* @routine_movl_0x18__rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c755)
  store %struct.Memory* %call_41c755, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41c758	 Bytes: 8
  %loadMem_41c758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c758 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c758)
  store %struct.Memory* %call_41c758, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 41c760	 Bytes: 4
  %loadMem_41c760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c760 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c760)
  store %struct.Memory* %call_41c760, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41c764	 Bytes: 4
  %loadMem_41c764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c764 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c764)
  store %struct.Memory* %call_41c764, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 41c768	 Bytes: 3
  %loadMem_41c768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c768 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c768)
  store %struct.Memory* %call_41c768, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 41c76b	 Bytes: 4
  %loadMem_41c76b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c76b = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c76b)
  store %struct.Memory* %call_41c76b, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 41c76f	 Bytes: 4
  %loadMem_41c76f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c76f = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c76f)
  store %struct.Memory* %call_41c76f, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 41c773	 Bytes: 3
  %loadMem_41c773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c773 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c773)
  store %struct.Memory* %call_41c773, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x50(%rcx)	 RIP: 41c776	 Bytes: 3
  %loadMem_41c776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c776 = call %struct.Memory* @routine_movl__esi__0x50__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c776)
  store %struct.Memory* %call_41c776, %struct.Memory** %MEMORY

  ; Code: .L_41c779:	 RIP: 41c779	 Bytes: 0
  br label %block_.L_41c779
block_.L_41c779:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41c779	 Bytes: 10
  %loadMem_41c779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c779 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c779)
  store %struct.Memory* %call_41c779, %struct.Memory** %MEMORY

  ; Code: movq $0xb9a0a0, %rcx	 RIP: 41c783	 Bytes: 10
  %loadMem_41c783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c783 = call %struct.Memory* @routine_movq__0xb9a0a0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c783)
  store %struct.Memory* %call_41c783, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rdx	 RIP: 41c78d	 Bytes: 8
  %loadMem_41c78d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c78d = call %struct.Memory* @routine_movq_0xab0fe0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c78d)
  store %struct.Memory* %call_41c78d, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rsi	 RIP: 41c795	 Bytes: 4
  %loadMem_41c795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c795 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c795)
  store %struct.Memory* %call_41c795, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41c799	 Bytes: 4
  %loadMem_41c799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c799 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c799)
  store %struct.Memory* %call_41c799, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41c79d	 Bytes: 3
  %loadMem_41c79d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c79d = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c79d)
  store %struct.Memory* %call_41c79d, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41c7a0	 Bytes: 3
  %loadMem_41c7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7a0 = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7a0)
  store %struct.Memory* %call_41c7a0, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rdi), %rsi	 RIP: 41c7a3	 Bytes: 4
  %loadMem_41c7a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7a3 = call %struct.Memory* @routine_movslq_0x4__rdi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7a3)
  store %struct.Memory* %call_41c7a3, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rsi, %rsi	 RIP: 41c7a7	 Bytes: 4
  %loadMem_41c7a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7a7 = call %struct.Memory* @routine_imulq__0x68___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7a7)
  store %struct.Memory* %call_41c7a7, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 41c7ab	 Bytes: 3
  %loadMem_41c7ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7ab = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7ab)
  store %struct.Memory* %call_41c7ab, %struct.Memory** %MEMORY

  ; Code: addq $0x4c, %rdx	 RIP: 41c7ae	 Bytes: 4
  %loadMem_41c7ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7ae = call %struct.Memory* @routine_addq__0x4c___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7ae)
  store %struct.Memory* %call_41c7ae, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41c7b2	 Bytes: 4
  %loadMem_41c7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7b2 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7b2)
  store %struct.Memory* %call_41c7b2, %struct.Memory** %MEMORY

  ; Code: imulq $0x24, %rsi, %rsi	 RIP: 41c7b6	 Bytes: 4
  %loadMem_41c7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7b6 = call %struct.Memory* @routine_imulq__0x24___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7b6)
  store %struct.Memory* %call_41c7b6, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 41c7ba	 Bytes: 3
  %loadMem_41c7ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7ba = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7ba)
  store %struct.Memory* %call_41c7ba, %struct.Memory** %MEMORY

  ; Code: addq $0x10, %rcx	 RIP: 41c7bd	 Bytes: 4
  %loadMem_41c7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7bd = call %struct.Memory* @routine_addq__0x10___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7bd)
  store %struct.Memory* %call_41c7bd, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rsi	 RIP: 41c7c1	 Bytes: 8
  %loadMem_41c7c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7c1 = call %struct.Memory* @routine_movq_0xab0fe0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7c1)
  store %struct.Memory* %call_41c7c1, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdi	 RIP: 41c7c9	 Bytes: 4
  %loadMem_41c7c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7c9 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7c9)
  store %struct.Memory* %call_41c7c9, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdi, %rdi	 RIP: 41c7cd	 Bytes: 4
  %loadMem_41c7cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7cd = call %struct.Memory* @routine_imulq__0x4c___rdi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7cd)
  store %struct.Memory* %call_41c7cd, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rax	 RIP: 41c7d1	 Bytes: 3
  %loadMem_41c7d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7d1 = call %struct.Memory* @routine_addq__rdi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7d1)
  store %struct.Memory* %call_41c7d1, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 41c7d4	 Bytes: 4
  %loadMem_41c7d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7d4 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7d4)
  store %struct.Memory* %call_41c7d4, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 41c7d8	 Bytes: 4
  %loadMem_41c7d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7d8 = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7d8)
  store %struct.Memory* %call_41c7d8, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rsi	 RIP: 41c7dc	 Bytes: 3
  %loadMem_41c7dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7dc = call %struct.Memory* @routine_addq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7dc)
  store %struct.Memory* %call_41c7dc, %struct.Memory** %MEMORY

  ; Code: addq $0x4c, %rsi	 RIP: 41c7df	 Bytes: 4
  %loadMem_41c7df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7df = call %struct.Memory* @routine_addq__0x4c___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7df)
  store %struct.Memory* %call_41c7df, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 41c7e3	 Bytes: 3
  %loadMem_41c7e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7e3 = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7e3)
  store %struct.Memory* %call_41c7e3, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x3b8(%rbp)	 RIP: 41c7e6	 Bytes: 7
  %loadMem_41c7e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7e6 = call %struct.Memory* @routine_movq__rsi__MINUS0x3b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7e6)
  store %struct.Memory* %call_41c7e6, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41c7ed	 Bytes: 3
  %loadMem_41c7ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7ed = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7ed)
  store %struct.Memory* %call_41c7ed, %struct.Memory** %MEMORY

  ; Code: movq -0x3b8(%rbp), %rdx	 RIP: 41c7f0	 Bytes: 7
  %loadMem_41c7f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7f0 = call %struct.Memory* @routine_movq_MINUS0x3b8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7f0)
  store %struct.Memory* %call_41c7f0, %struct.Memory** %MEMORY

  ; Code: callq .add_eyevalues	 RIP: 41c7f7	 Bytes: 5
  %loadMem1_41c7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c7f7 = call %struct.Memory* @routine_callq_.add_eyevalues(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c7f7, i64 132121, i64 5, i64 5)
  store %struct.Memory* %call1_41c7f7, %struct.Memory** %MEMORY

  %loadMem2_41c7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c7f7 = load i64, i64* %3
  %call2_41c7f7 = call %struct.Memory* @sub_43cc10.add_eyevalues(%struct.State* %0, i64  %loadPC_41c7f7, %struct.Memory* %loadMem2_41c7f7)
  store %struct.Memory* %call2_41c7f7, %struct.Memory** %MEMORY

  ; Code: .L_41c7fc:	 RIP: 41c7fc	 Bytes: 0
  br label %block_.L_41c7fc
block_.L_41c7fc:

  ; Code: jmpq .L_41c801	 RIP: 41c7fc	 Bytes: 5
  %loadMem_41c7fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c7fc = call %struct.Memory* @routine_jmpq_.L_41c801(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c7fc, i64 5, i64 5)
  store %struct.Memory* %call_41c7fc, %struct.Memory** %MEMORY

  br label %block_.L_41c801

  ; Code: .L_41c801:	 RIP: 41c801	 Bytes: 0
block_.L_41c801:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41c801	 Bytes: 3
  %loadMem_41c801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c801 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c801)
  store %struct.Memory* %call_41c801, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41c804	 Bytes: 3
  %loadMem_41c804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c804 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c804)
  store %struct.Memory* %call_41c804, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41c807	 Bytes: 3
  %loadMem_41c807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c807 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c807)
  store %struct.Memory* %call_41c807, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41c38b	 RIP: 41c80a	 Bytes: 5
  %loadMem_41c80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c80a = call %struct.Memory* @routine_jmpq_.L_41c38b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c80a, i64 -1151, i64 5)
  store %struct.Memory* %call_41c80a, %struct.Memory** %MEMORY

  br label %block_.L_41c38b

  ; Code: .L_41c80f:	 RIP: 41c80f	 Bytes: 0
block_.L_41c80f:

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41c80f	 Bytes: 7
  %loadMem_41c80f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c80f = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c80f)
  store %struct.Memory* %call_41c80f, %struct.Memory** %MEMORY

  ; Code: .L_41c816:	 RIP: 41c816	 Bytes: 0
  br label %block_.L_41c816
block_.L_41c816:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41c816	 Bytes: 7
  %loadMem_41c816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c816 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c816)
  store %struct.Memory* %call_41c816, %struct.Memory** %MEMORY

  ; Code: jge .L_41c8b6	 RIP: 41c81d	 Bytes: 6
  %loadMem_41c81d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c81d = call %struct.Memory* @routine_jge_.L_41c8b6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c81d, i8* %BRANCH_TAKEN, i64 153, i64 6, i64 6)
  store %struct.Memory* %call_41c81d, %struct.Memory** %MEMORY

  %loadBr_41c81d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c81d = icmp eq i8 %loadBr_41c81d, 1
  br i1 %cmpBr_41c81d, label %block_.L_41c8b6, label %block_41c823

block_41c823:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41c823	 Bytes: 4
  %loadMem_41c823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c823 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c823)
  store %struct.Memory* %call_41c823, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41c827	 Bytes: 8
  %loadMem_41c827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c827 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c827)
  store %struct.Memory* %call_41c827, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %ecx	 RIP: 41c82f	 Bytes: 3
  %loadMem_41c82f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c82f = call %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c82f)
  store %struct.Memory* %call_41c82f, %struct.Memory** %MEMORY

  ; Code: je .L_41c84d	 RIP: 41c832	 Bytes: 6
  %loadMem_41c832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c832 = call %struct.Memory* @routine_je_.L_41c84d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c832, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_41c832, %struct.Memory** %MEMORY

  %loadBr_41c832 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c832 = icmp eq i8 %loadBr_41c832, 1
  br i1 %cmpBr_41c832, label %block_.L_41c84d, label %block_41c838

block_41c838:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41c838	 Bytes: 4
  %loadMem_41c838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c838 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c838)
  store %struct.Memory* %call_41c838, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41c83c	 Bytes: 8
  %loadMem_41c83c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c83c = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c83c)
  store %struct.Memory* %call_41c83c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %ecx	 RIP: 41c844	 Bytes: 3
  %loadMem_41c844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c844 = call %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c844)
  store %struct.Memory* %call_41c844, %struct.Memory** %MEMORY

  ; Code: jne .L_41c8a3	 RIP: 41c847	 Bytes: 6
  %loadMem_41c847 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c847 = call %struct.Memory* @routine_jne_.L_41c8a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c847, i8* %BRANCH_TAKEN, i64 92, i64 6, i64 6)
  store %struct.Memory* %call_41c847, %struct.Memory** %MEMORY

  %loadBr_41c847 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c847 = icmp eq i8 %loadBr_41c847, 1
  br i1 %cmpBr_41c847, label %block_.L_41c8a3, label %block_.L_41c84d

  ; Code: .L_41c84d:	 RIP: 41c84d	 Bytes: 0
block_.L_41c84d:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41c84d	 Bytes: 10
  %loadMem_41c84d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c84d = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c84d)
  store %struct.Memory* %call_41c84d, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c857	 Bytes: 4
  %loadMem_41c857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c857 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c857)
  store %struct.Memory* %call_41c857, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41c85b	 Bytes: 4
  %loadMem_41c85b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c85b = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c85b)
  store %struct.Memory* %call_41c85b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c85f	 Bytes: 3
  %loadMem_41c85f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c85f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c85f)
  store %struct.Memory* %call_41c85f, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rax), %edx	 RIP: 41c862	 Bytes: 3
  %loadMem_41c862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c862 = call %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c862)
  store %struct.Memory* %call_41c862, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41c865	 Bytes: 3
  %loadMem_41c865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c865 = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c865)
  store %struct.Memory* %call_41c865, %struct.Memory** %MEMORY

  ; Code: jne .L_41c8a3	 RIP: 41c868	 Bytes: 6
  %loadMem_41c868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c868 = call %struct.Memory* @routine_jne_.L_41c8a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c868, i8* %BRANCH_TAKEN, i64 59, i64 6, i64 6)
  store %struct.Memory* %call_41c868, %struct.Memory** %MEMORY

  %loadBr_41c868 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c868 = icmp eq i8 %loadBr_41c868, 1
  br i1 %cmpBr_41c868, label %block_.L_41c8a3, label %block_41c86e

block_41c86e:
  ; Code: xorl %esi, %esi	 RIP: 41c86e	 Bytes: 2
  %loadMem_41c86e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c86e = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c86e)
  store %struct.Memory* %call_41c86e, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41c870	 Bytes: 3
  %loadMem_41c870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c870 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c870)
  store %struct.Memory* %call_41c870, %struct.Memory** %MEMORY

  ; Code: callq .compute_escape	 RIP: 41c873	 Bytes: 5
  %loadMem1_41c873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c873 = call %struct.Memory* @routine_callq_.compute_escape(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c873, i64 9197, i64 5, i64 5)
  store %struct.Memory* %call1_41c873, %struct.Memory** %MEMORY

  %loadMem2_41c873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c873 = load i64, i64* %3
  %call2_41c873 = call %struct.Memory* @sub_41ec60.compute_escape(%struct.State* %0, i64  %loadPC_41c873, %struct.Memory* %loadMem2_41c873)
  store %struct.Memory* %call2_41c873, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rcx	 RIP: 41c878	 Bytes: 10
  %loadMem_41c878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c878 = call %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c878)
  store %struct.Memory* %call_41c878, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rdx	 RIP: 41c882	 Bytes: 8
  %loadMem_41c882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c882 = call %struct.Memory* @routine_movq_0xab0fe0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c882)
  store %struct.Memory* %call_41c882, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %r8	 RIP: 41c88a	 Bytes: 4
  %loadMem_41c88a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c88a = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c88a)
  store %struct.Memory* %call_41c88a, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %r8, %r8	 RIP: 41c88e	 Bytes: 4
  %loadMem_41c88e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c88e = call %struct.Memory* @routine_imulq__0x4c___r8___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c88e)
  store %struct.Memory* %call_41c88e, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rcx	 RIP: 41c892	 Bytes: 3
  %loadMem_41c892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c892 = call %struct.Memory* @routine_addq__r8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c892)
  store %struct.Memory* %call_41c892, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rcx), %rcx	 RIP: 41c895	 Bytes: 4
  %loadMem_41c895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c895 = call %struct.Memory* @routine_movslq_0x4__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c895)
  store %struct.Memory* %call_41c895, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41c899	 Bytes: 4
  %loadMem_41c899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c899 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c899)
  store %struct.Memory* %call_41c899, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41c89d	 Bytes: 3
  %loadMem_41c89d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c89d = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c89d)
  store %struct.Memory* %call_41c89d, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x48(%rdx)	 RIP: 41c8a0	 Bytes: 3
  %loadMem_41c8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8a0 = call %struct.Memory* @routine_movl__eax__0x48__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8a0)
  store %struct.Memory* %call_41c8a0, %struct.Memory** %MEMORY

  ; Code: .L_41c8a3:	 RIP: 41c8a3	 Bytes: 0
  br label %block_.L_41c8a3
block_.L_41c8a3:

  ; Code: jmpq .L_41c8a8	 RIP: 41c8a3	 Bytes: 5
  %loadMem_41c8a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8a3 = call %struct.Memory* @routine_jmpq_.L_41c8a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8a3, i64 5, i64 5)
  store %struct.Memory* %call_41c8a3, %struct.Memory** %MEMORY

  br label %block_.L_41c8a8

  ; Code: .L_41c8a8:	 RIP: 41c8a8	 Bytes: 0
block_.L_41c8a8:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41c8a8	 Bytes: 3
  %loadMem_41c8a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8a8 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8a8)
  store %struct.Memory* %call_41c8a8, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41c8ab	 Bytes: 3
  %loadMem_41c8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8ab = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8ab)
  store %struct.Memory* %call_41c8ab, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41c8ae	 Bytes: 3
  %loadMem_41c8ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8ae = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8ae)
  store %struct.Memory* %call_41c8ae, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41c816	 RIP: 41c8b1	 Bytes: 5
  %loadMem_41c8b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8b1 = call %struct.Memory* @routine_jmpq_.L_41c816(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8b1, i64 -155, i64 5)
  store %struct.Memory* %call_41c8b1, %struct.Memory** %MEMORY

  br label %block_.L_41c816

  ; Code: .L_41c8b6:	 RIP: 41c8b6	 Bytes: 0
block_.L_41c8b6:

  ; Code: callq .resegment_initial_influence	 RIP: 41c8b6	 Bytes: 5
  %loadMem1_41c8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c8b6 = call %struct.Memory* @routine_callq_.resegment_initial_influence(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c8b6, i64 68266, i64 5, i64 5)
  store %struct.Memory* %call1_41c8b6, %struct.Memory** %MEMORY

  %loadMem2_41c8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c8b6 = load i64, i64* %3
  %call2_41c8b6 = call %struct.Memory* @sub_42d360.resegment_initial_influence(%struct.State* %0, i64  %loadPC_41c8b6, %struct.Memory* %loadMem2_41c8b6)
  store %struct.Memory* %call2_41c8b6, %struct.Memory** %MEMORY

  ; Code: callq .compute_refined_dragon_weaknesses	 RIP: 41c8bb	 Bytes: 5
  %loadMem1_41c8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c8bb = call %struct.Memory* @routine_callq_.compute_refined_dragon_weaknesses(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c8bb, i64 9877, i64 5, i64 5)
  store %struct.Memory* %call1_41c8bb, %struct.Memory** %MEMORY

  %loadMem2_41c8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c8bb = load i64, i64* %3
  %call2_41c8bb = call %struct.Memory* @sub_41ef50.compute_refined_dragon_weaknesses(%struct.State* %0, i64  %loadPC_41c8bb, %struct.Memory* %loadMem2_41c8bb)
  store %struct.Memory* %call2_41c8bb, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x20(%rbp)	 RIP: 41c8c0	 Bytes: 7
  %loadMem_41c8c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8c0 = call %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8c0)
  store %struct.Memory* %call_41c8c0, %struct.Memory** %MEMORY

  ; Code: .L_41c8c7:	 RIP: 41c8c7	 Bytes: 0
  br label %block_.L_41c8c7
block_.L_41c8c7:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 41c8c7	 Bytes: 3
  %loadMem_41c8c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8c7 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8c7)
  store %struct.Memory* %call_41c8c7, %struct.Memory** %MEMORY

  ; Code: cmpl 0xb54cec, %eax	 RIP: 41c8ca	 Bytes: 7
  %loadMem_41c8ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8ca = call %struct.Memory* @routine_cmpl_0xb54cec___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8ca)
  store %struct.Memory* %call_41c8ca, %struct.Memory** %MEMORY

  ; Code: jge .L_41c915	 RIP: 41c8d1	 Bytes: 6
  %loadMem_41c8d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8d1 = call %struct.Memory* @routine_jge_.L_41c915(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8d1, i8* %BRANCH_TAKEN, i64 68, i64 6, i64 6)
  store %struct.Memory* %call_41c8d1, %struct.Memory** %MEMORY

  %loadBr_41c8d1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c8d1 = icmp eq i8 %loadBr_41c8d1, 1
  br i1 %cmpBr_41c8d1, label %block_.L_41c915, label %block_41c8d7

block_41c8d7:
  ; Code: movq 0xab0fe0, %rax	 RIP: 41c8d7	 Bytes: 8
  %loadMem_41c8d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8d7 = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8d7)
  store %struct.Memory* %call_41c8d7, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41c8df	 Bytes: 4
  %loadMem_41c8df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8df = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8df)
  store %struct.Memory* %call_41c8df, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41c8e3	 Bytes: 4
  %loadMem_41c8e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8e3 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8e3)
  store %struct.Memory* %call_41c8e3, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c8e7	 Bytes: 3
  %loadMem_41c8e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8e7 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8e7)
  store %struct.Memory* %call_41c8e7, %struct.Memory** %MEMORY

  ; Code: movss 0x40(%rax), %xmm0	 RIP: 41c8ea	 Bytes: 5
  %loadMem_41c8ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8ea = call %struct.Memory* @routine_movss_0x40__rax____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8ea)
  store %struct.Memory* %call_41c8ea, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rax	 RIP: 41c8ef	 Bytes: 8
  %loadMem_41c8ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8ef = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8ef)
  store %struct.Memory* %call_41c8ef, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41c8f7	 Bytes: 4
  %loadMem_41c8f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8f7 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8f7)
  store %struct.Memory* %call_41c8f7, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41c8fb	 Bytes: 4
  %loadMem_41c8fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8fb = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8fb)
  store %struct.Memory* %call_41c8fb, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c8ff	 Bytes: 3
  %loadMem_41c8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c8ff = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c8ff)
  store %struct.Memory* %call_41c8ff, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, 0x44(%rax)	 RIP: 41c902	 Bytes: 5
  %loadMem_41c902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c902 = call %struct.Memory* @routine_movss__xmm0__0x44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c902)
  store %struct.Memory* %call_41c902, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 41c907	 Bytes: 3
  %loadMem_41c907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c907 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c907)
  store %struct.Memory* %call_41c907, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41c90a	 Bytes: 3
  %loadMem_41c90a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c90a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c90a)
  store %struct.Memory* %call_41c90a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 41c90d	 Bytes: 3
  %loadMem_41c90d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c90d = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c90d)
  store %struct.Memory* %call_41c90d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41c8c7	 RIP: 41c910	 Bytes: 5
  %loadMem_41c910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c910 = call %struct.Memory* @routine_jmpq_.L_41c8c7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c910, i64 -73, i64 5)
  store %struct.Memory* %call_41c910, %struct.Memory** %MEMORY

  br label %block_.L_41c8c7

  ; Code: .L_41c915:	 RIP: 41c915	 Bytes: 0
block_.L_41c915:

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41c915	 Bytes: 7
  %loadMem_41c915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c915 = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c915)
  store %struct.Memory* %call_41c915, %struct.Memory** %MEMORY

  ; Code: .L_41c91c:	 RIP: 41c91c	 Bytes: 0
  br label %block_.L_41c91c
block_.L_41c91c:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41c91c	 Bytes: 7
  %loadMem_41c91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c91c = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c91c)
  store %struct.Memory* %call_41c91c, %struct.Memory** %MEMORY

  ; Code: jge .L_41c9ac	 RIP: 41c923	 Bytes: 6
  %loadMem_41c923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c923 = call %struct.Memory* @routine_jge_.L_41c9ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c923, i8* %BRANCH_TAKEN, i64 137, i64 6, i64 6)
  store %struct.Memory* %call_41c923, %struct.Memory** %MEMORY

  %loadBr_41c923 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c923 = icmp eq i8 %loadBr_41c923, 1
  br i1 %cmpBr_41c923, label %block_.L_41c9ac, label %block_41c929

block_41c929:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41c929	 Bytes: 4
  %loadMem_41c929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c929 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c929)
  store %struct.Memory* %call_41c929, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41c92d	 Bytes: 8
  %loadMem_41c92d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c92d = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c92d)
  store %struct.Memory* %call_41c92d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41c935	 Bytes: 3
  %loadMem_41c935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c935 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c935)
  store %struct.Memory* %call_41c935, %struct.Memory** %MEMORY

  ; Code: je .L_41c999	 RIP: 41c938	 Bytes: 6
  %loadMem_41c938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c938 = call %struct.Memory* @routine_je_.L_41c999(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c938, i8* %BRANCH_TAKEN, i64 97, i64 6, i64 6)
  store %struct.Memory* %call_41c938, %struct.Memory** %MEMORY

  %loadBr_41c938 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c938 = icmp eq i8 %loadBr_41c938, 1
  br i1 %cmpBr_41c938, label %block_.L_41c999, label %block_41c93e

block_41c93e:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41c93e	 Bytes: 10
  %loadMem_41c93e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c93e = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c93e)
  store %struct.Memory* %call_41c93e, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41c948	 Bytes: 4
  %loadMem_41c948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c948 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c948)
  store %struct.Memory* %call_41c948, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41c94c	 Bytes: 4
  %loadMem_41c94c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c94c = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c94c)
  store %struct.Memory* %call_41c94c, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41c950	 Bytes: 3
  %loadMem_41c950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c950 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c950)
  store %struct.Memory* %call_41c950, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rax), %edx	 RIP: 41c953	 Bytes: 3
  %loadMem_41c953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c953 = call %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c953)
  store %struct.Memory* %call_41c953, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41c956	 Bytes: 3
  %loadMem_41c956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c956 = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c956)
  store %struct.Memory* %call_41c956, %struct.Memory** %MEMORY

  ; Code: jne .L_41c994	 RIP: 41c959	 Bytes: 6
  %loadMem_41c959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c959 = call %struct.Memory* @routine_jne_.L_41c994(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c959, i8* %BRANCH_TAKEN, i64 59, i64 6, i64 6)
  store %struct.Memory* %call_41c959, %struct.Memory** %MEMORY

  %loadBr_41c959 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c959 = icmp eq i8 %loadBr_41c959, 1
  br i1 %cmpBr_41c959, label %block_.L_41c994, label %block_41c95f

block_41c95f:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41c95f	 Bytes: 4
  %loadMem_41c95f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c95f = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c95f)
  store %struct.Memory* %call_41c95f, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41c963	 Bytes: 8
  %loadMem_41c963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c963 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c963)
  store %struct.Memory* %call_41c963, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 41c96b	 Bytes: 3
  %loadMem_41c96b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c96b = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c96b)
  store %struct.Memory* %call_41c96b, %struct.Memory** %MEMORY

  ; Code: je .L_41c994	 RIP: 41c96e	 Bytes: 6
  %loadMem_41c96e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c96e = call %struct.Memory* @routine_je_.L_41c994(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c96e, i8* %BRANCH_TAKEN, i64 38, i64 6, i64 6)
  store %struct.Memory* %call_41c96e, %struct.Memory** %MEMORY

  %loadBr_41c96e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c96e = icmp eq i8 %loadBr_41c96e, 1
  br i1 %cmpBr_41c96e, label %block_.L_41c994, label %block_41c974

block_41c974:
  ; Code: movl -0x18(%rbp), %edi	 RIP: 41c974	 Bytes: 3
  %loadMem_41c974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c974 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c974)
  store %struct.Memory* %call_41c974, %struct.Memory** %MEMORY

  ; Code: callq .compute_crude_status	 RIP: 41c977	 Bytes: 5
  %loadMem1_41c977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41c977 = call %struct.Memory* @routine_callq_.compute_crude_status(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41c977, i64 9865, i64 5, i64 5)
  store %struct.Memory* %call1_41c977, %struct.Memory** %MEMORY

  %loadMem2_41c977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41c977 = load i64, i64* %3
  %call2_41c977 = call %struct.Memory* @sub_41f000.compute_crude_status(%struct.State* %0, i64  %loadPC_41c977, %struct.Memory* %loadMem2_41c977)
  store %struct.Memory* %call2_41c977, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rcx	 RIP: 41c97c	 Bytes: 10
  %loadMem_41c97c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c97c = call %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c97c)
  store %struct.Memory* %call_41c97c, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41c986	 Bytes: 4
  %loadMem_41c986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c986 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c986)
  store %struct.Memory* %call_41c986, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41c98a	 Bytes: 4
  %loadMem_41c98a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c98a = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c98a)
  store %struct.Memory* %call_41c98a, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 41c98e	 Bytes: 3
  %loadMem_41c98e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c98e = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c98e)
  store %struct.Memory* %call_41c98e, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x14(%rcx)	 RIP: 41c991	 Bytes: 3
  %loadMem_41c991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c991 = call %struct.Memory* @routine_movl__eax__0x14__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c991)
  store %struct.Memory* %call_41c991, %struct.Memory** %MEMORY

  ; Code: .L_41c994:	 RIP: 41c994	 Bytes: 0
  br label %block_.L_41c994
block_.L_41c994:

  ; Code: jmpq .L_41c999	 RIP: 41c994	 Bytes: 5
  %loadMem_41c994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c994 = call %struct.Memory* @routine_jmpq_.L_41c999(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c994, i64 5, i64 5)
  store %struct.Memory* %call_41c994, %struct.Memory** %MEMORY

  br label %block_.L_41c999

  ; Code: .L_41c999:	 RIP: 41c999	 Bytes: 0
block_.L_41c999:

  ; Code: jmpq .L_41c99e	 RIP: 41c999	 Bytes: 5
  %loadMem_41c999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c999 = call %struct.Memory* @routine_jmpq_.L_41c99e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c999, i64 5, i64 5)
  store %struct.Memory* %call_41c999, %struct.Memory** %MEMORY

  br label %block_.L_41c99e

  ; Code: .L_41c99e:	 RIP: 41c99e	 Bytes: 0
block_.L_41c99e:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41c99e	 Bytes: 3
  %loadMem_41c99e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c99e = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c99e)
  store %struct.Memory* %call_41c99e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41c9a1	 Bytes: 3
  %loadMem_41c9a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9a1 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9a1)
  store %struct.Memory* %call_41c9a1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41c9a4	 Bytes: 3
  %loadMem_41c9a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9a4 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9a4)
  store %struct.Memory* %call_41c9a4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41c91c	 RIP: 41c9a7	 Bytes: 5
  %loadMem_41c9a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9a7 = call %struct.Memory* @routine_jmpq_.L_41c91c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9a7, i64 -139, i64 5)
  store %struct.Memory* %call_41c9a7, %struct.Memory** %MEMORY

  br label %block_.L_41c91c

  ; Code: .L_41c9ac:	 RIP: 41c9ac	 Bytes: 0
block_.L_41c9ac:

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41c9ac	 Bytes: 7
  %loadMem_41c9ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9ac = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9ac)
  store %struct.Memory* %call_41c9ac, %struct.Memory** %MEMORY

  ; Code: .L_41c9b3:	 RIP: 41c9b3	 Bytes: 0
  br label %block_.L_41c9b3
block_.L_41c9b3:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41c9b3	 Bytes: 7
  %loadMem_41c9b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9b3 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9b3)
  store %struct.Memory* %call_41c9b3, %struct.Memory** %MEMORY

  ; Code: jge .L_41ca30	 RIP: 41c9ba	 Bytes: 6
  %loadMem_41c9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9ba = call %struct.Memory* @routine_jge_.L_41ca30(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9ba, i8* %BRANCH_TAKEN, i64 118, i64 6, i64 6)
  store %struct.Memory* %call_41c9ba, %struct.Memory** %MEMORY

  %loadBr_41c9ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c9ba = icmp eq i8 %loadBr_41c9ba, 1
  br i1 %cmpBr_41c9ba, label %block_.L_41ca30, label %block_41c9c0

block_41c9c0:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41c9c0	 Bytes: 4
  %loadMem_41c9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9c0 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9c0)
  store %struct.Memory* %call_41c9c0, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41c9c4	 Bytes: 8
  %loadMem_41c9c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9c4 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9c4)
  store %struct.Memory* %call_41c9c4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41c9cc	 Bytes: 3
  %loadMem_41c9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9cc = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9cc)
  store %struct.Memory* %call_41c9cc, %struct.Memory** %MEMORY

  ; Code: je .L_41ca1d	 RIP: 41c9cf	 Bytes: 6
  %loadMem_41c9cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9cf = call %struct.Memory* @routine_je_.L_41ca1d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9cf, i8* %BRANCH_TAKEN, i64 78, i64 6, i64 6)
  store %struct.Memory* %call_41c9cf, %struct.Memory** %MEMORY

  %loadBr_41c9cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41c9cf = icmp eq i8 %loadBr_41c9cf, 1
  br i1 %cmpBr_41c9cf, label %block_.L_41ca1d, label %block_41c9d5

block_41c9d5:
  ; Code: movl $0x4c, %eax	 RIP: 41c9d5	 Bytes: 5
  %loadMem_41c9d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9d5 = call %struct.Memory* @routine_movl__0x4c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9d5)
  store %struct.Memory* %call_41c9d5, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41c9da	 Bytes: 2
  %loadMem_41c9da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9da = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9da)
  store %struct.Memory* %call_41c9da, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rcx	 RIP: 41c9dc	 Bytes: 10
  %loadMem_41c9dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9dc = call %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9dc)
  store %struct.Memory* %call_41c9dc, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41c9e6	 Bytes: 4
  %loadMem_41c9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9e6 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9e6)
  store %struct.Memory* %call_41c9e6, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41c9ea	 Bytes: 4
  %loadMem_41c9ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9ea = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9ea)
  store %struct.Memory* %call_41c9ea, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdi	 RIP: 41c9ee	 Bytes: 3
  %loadMem_41c9ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9ee = call %struct.Memory* @routine_movq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9ee)
  store %struct.Memory* %call_41c9ee, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41c9f1	 Bytes: 3
  %loadMem_41c9f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9f1 = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9f1)
  store %struct.Memory* %call_41c9f1, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x58(%rbp)	 RIP: 41c9f4	 Bytes: 4
  %loadMem_41c9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9f4 = call %struct.Memory* @routine_movq__rdi__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9f4)
  store %struct.Memory* %call_41c9f4, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41c9f8	 Bytes: 4
  %loadMem_41c9f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9f8 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9f8)
  store %struct.Memory* %call_41c9f8, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41c9fc	 Bytes: 4
  %loadMem_41c9fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41c9fc = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41c9fc)
  store %struct.Memory* %call_41c9fc, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdi	 RIP: 41ca00	 Bytes: 3
  %loadMem_41ca00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca00 = call %struct.Memory* @routine_movq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca00)
  store %struct.Memory* %call_41ca00, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41ca03	 Bytes: 3
  %loadMem_41ca03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca03 = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca03)
  store %struct.Memory* %call_41ca03, %struct.Memory** %MEMORY

  ; Code: movq -0x58(%rbp), %rsi	 RIP: 41ca06	 Bytes: 4
  %loadMem_41ca06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca06 = call %struct.Memory* @routine_movq_MINUS0x58__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca06)
  store %struct.Memory* %call_41ca06, %struct.Memory** %MEMORY

  ; Code: movslq 0x8(%rsi), %rsi	 RIP: 41ca0a	 Bytes: 4
  %loadMem_41ca0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca0a = call %struct.Memory* @routine_movslq_0x8__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca0a)
  store %struct.Memory* %call_41ca0a, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41ca0e	 Bytes: 4
  %loadMem_41ca0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca0e = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca0e)
  store %struct.Memory* %call_41ca0e, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 41ca12	 Bytes: 3
  %loadMem_41ca12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca12 = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca12)
  store %struct.Memory* %call_41ca12, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41ca15	 Bytes: 3
  %loadMem_41ca15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca15 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca15)
  store %struct.Memory* %call_41ca15, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41ca18	 Bytes: 5
  %loadMem1_41ca18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ca18 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ca18, i64 -112936, i64 5, i64 5)
  store %struct.Memory* %call1_41ca18, %struct.Memory** %MEMORY

  %loadMem2_41ca18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ca18 = load i64, i64* %3
  %call2_41ca18 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41ca18, %struct.Memory* %loadMem2_41ca18)
  store %struct.Memory* %call2_41ca18, %struct.Memory** %MEMORY

  ; Code: .L_41ca1d:	 RIP: 41ca1d	 Bytes: 0
  br label %block_.L_41ca1d
block_.L_41ca1d:

  ; Code: jmpq .L_41ca22	 RIP: 41ca1d	 Bytes: 5
  %loadMem_41ca1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca1d = call %struct.Memory* @routine_jmpq_.L_41ca22(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca1d, i64 5, i64 5)
  store %struct.Memory* %call_41ca1d, %struct.Memory** %MEMORY

  br label %block_.L_41ca22

  ; Code: .L_41ca22:	 RIP: 41ca22	 Bytes: 0
block_.L_41ca22:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41ca22	 Bytes: 3
  %loadMem_41ca22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca22 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca22)
  store %struct.Memory* %call_41ca22, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41ca25	 Bytes: 3
  %loadMem_41ca25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca25 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca25)
  store %struct.Memory* %call_41ca25, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41ca28	 Bytes: 3
  %loadMem_41ca28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca28 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca28)
  store %struct.Memory* %call_41ca28, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41c9b3	 RIP: 41ca2b	 Bytes: 5
  %loadMem_41ca2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca2b = call %struct.Memory* @routine_jmpq_.L_41c9b3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca2b, i64 -120, i64 5)
  store %struct.Memory* %call_41ca2b, %struct.Memory** %MEMORY

  br label %block_.L_41c9b3

  ; Code: .L_41ca30:	 RIP: 41ca30	 Bytes: 0
block_.L_41ca30:

  ; Code: callq .find_neighbor_dragons	 RIP: 41ca30	 Bytes: 5
  %loadMem1_41ca30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ca30 = call %struct.Memory* @routine_callq_.find_neighbor_dragons(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ca30, i64 10512, i64 5, i64 5)
  store %struct.Memory* %call1_41ca30, %struct.Memory** %MEMORY

  %loadMem2_41ca30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ca30 = load i64, i64* %3
  %call2_41ca30 = call %struct.Memory* @sub_41f340.find_neighbor_dragons(%struct.State* %0, i64  %loadPC_41ca30, %struct.Memory* %loadMem2_41ca30)
  store %struct.Memory* %call2_41ca30, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %edi	 RIP: 41ca35	 Bytes: 5
  %loadMem_41ca35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca35 = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca35)
  store %struct.Memory* %call_41ca35, %struct.Memory** %MEMORY

  ; Code: movq $0x57afa4, %rsi	 RIP: 41ca3a	 Bytes: 10
  %loadMem_41ca3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca3a = call %struct.Memory* @routine_movq__0x57afa4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca3a)
  store %struct.Memory* %call_41ca3a, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41ca44	 Bytes: 2
  %loadMem_41ca44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca44 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca44)
  store %struct.Memory* %call_41ca44, %struct.Memory** %MEMORY

  ; Code: movsd 0xc6512(%rip), %xmm0	 RIP: 41ca46	 Bytes: 8
  %loadMem_41ca46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca46 = call %struct.Memory* @routine_movsd_0xc6512__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca46)
  store %struct.Memory* %call_41ca46, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41ca4e	 Bytes: 5
  %loadMem1_41ca4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ca4e = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ca4e, i64 391554, i64 5, i64 5)
  store %struct.Memory* %call1_41ca4e, %struct.Memory** %MEMORY

  %loadMem2_41ca4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ca4e = load i64, i64* %3
  %call2_41ca4e = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41ca4e, %struct.Memory* %loadMem2_41ca4e)
  store %struct.Memory* %call2_41ca4e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x10(%rbp)	 RIP: 41ca53	 Bytes: 4
  %loadMem_41ca53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca53 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca53)
  store %struct.Memory* %call_41ca53, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x3c0(%rbp)	 RIP: 41ca57	 Bytes: 8
  %loadMem_41ca57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca57 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x3c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca57)
  store %struct.Memory* %call_41ca57, %struct.Memory** %MEMORY

  ; Code: je .L_41ca6a	 RIP: 41ca5f	 Bytes: 6
  %loadMem_41ca5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca5f = call %struct.Memory* @routine_je_.L_41ca6a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca5f, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41ca5f, %struct.Memory** %MEMORY

  %loadBr_41ca5f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ca5f = icmp eq i8 %loadBr_41ca5f, 1
  br i1 %cmpBr_41ca5f, label %block_.L_41ca6a, label %block_41ca65

block_41ca65:
  ; Code: jmpq .L_41e0a4	 RIP: 41ca65	 Bytes: 5
  %loadMem_41ca65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca65 = call %struct.Memory* @routine_jmpq_.L_41e0a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca65, i64 5695, i64 5)
  store %struct.Memory* %call_41ca65, %struct.Memory** %MEMORY

  br label %block_.L_41e0a4

  ; Code: .L_41ca6a:	 RIP: 41ca6a	 Bytes: 0
block_.L_41ca6a:

  ; Code: callq .purge_persistent_owl_cache	 RIP: 41ca6a	 Bytes: 5
  %loadMem1_41ca6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ca6a = call %struct.Memory* @routine_callq_.purge_persistent_owl_cache(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ca6a, i64 208902, i64 5, i64 5)
  store %struct.Memory* %call1_41ca6a, %struct.Memory** %MEMORY

  %loadMem2_41ca6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ca6a = load i64, i64* %3
  %call2_41ca6a = call %struct.Memory* @sub_44fa70.purge_persistent_owl_cache(%struct.State* %0, i64  %loadPC_41ca6a, %struct.Memory* %loadMem2_41ca6a)
  store %struct.Memory* %call2_41ca6a, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41ca6f	 Bytes: 7
  %loadMem_41ca6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca6f = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca6f)
  store %struct.Memory* %call_41ca6f, %struct.Memory** %MEMORY

  ; Code: .L_41ca76:	 RIP: 41ca76	 Bytes: 0
  br label %block_.L_41ca76
block_.L_41ca76:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41ca76	 Bytes: 7
  %loadMem_41ca76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca76 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca76)
  store %struct.Memory* %call_41ca76, %struct.Memory** %MEMORY

  ; Code: jge .L_41d02f	 RIP: 41ca7d	 Bytes: 6
  %loadMem_41ca7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca7d = call %struct.Memory* @routine_jge_.L_41d02f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca7d, i8* %BRANCH_TAKEN, i64 1458, i64 6, i64 6)
  store %struct.Memory* %call_41ca7d, %struct.Memory** %MEMORY

  %loadBr_41ca7d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ca7d = icmp eq i8 %loadBr_41ca7d, 1
  br i1 %cmpBr_41ca7d, label %block_.L_41d02f, label %block_41ca83

block_41ca83:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41ca83	 Bytes: 4
  %loadMem_41ca83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca83 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca83)
  store %struct.Memory* %call_41ca83, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41ca87	 Bytes: 8
  %loadMem_41ca87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca87 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca87)
  store %struct.Memory* %call_41ca87, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41ca8f	 Bytes: 3
  %loadMem_41ca8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca8f = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca8f)
  store %struct.Memory* %call_41ca8f, %struct.Memory** %MEMORY

  ; Code: je .L_41d01c	 RIP: 41ca92	 Bytes: 6
  %loadMem_41ca92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca92 = call %struct.Memory* @routine_je_.L_41d01c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca92, i8* %BRANCH_TAKEN, i64 1418, i64 6, i64 6)
  store %struct.Memory* %call_41ca92, %struct.Memory** %MEMORY

  %loadBr_41ca92 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ca92 = icmp eq i8 %loadBr_41ca92, 1
  br i1 %cmpBr_41ca92, label %block_.L_41d01c, label %block_41ca98

block_41ca98:
  ; Code: leaq -0x68(%rbp), %rdi	 RIP: 41ca98	 Bytes: 4
  %loadMem_41ca98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca98 = call %struct.Memory* @routine_leaq_MINUS0x68__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca98)
  store %struct.Memory* %call_41ca98, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 41ca9c	 Bytes: 2
  %loadMem_41ca9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca9c = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca9c)
  store %struct.Memory* %call_41ca9c, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x5c(%rbp)	 RIP: 41ca9e	 Bytes: 7
  %loadMem_41ca9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ca9e = call %struct.Memory* @routine_movl__0x0__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ca9e)
  store %struct.Memory* %call_41ca9e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x60(%rbp)	 RIP: 41caa5	 Bytes: 7
  %loadMem_41caa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41caa5 = call %struct.Memory* @routine_movl__0x0__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41caa5)
  store %struct.Memory* %call_41caa5, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41caac	 Bytes: 2
  %loadMem_41caac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41caac = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41caac)
  store %struct.Memory* %call_41caac, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41caae	 Bytes: 2
  %loadMem_41caae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41caae = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41caae)
  store %struct.Memory* %call_41caae, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 41cab0	 Bytes: 2
  %loadMem_41cab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cab0 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cab0)
  store %struct.Memory* %call_41cab0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 41cab2	 Bytes: 3
  %loadMem_41cab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cab2 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cab2)
  store %struct.Memory* %call_41cab2, %struct.Memory** %MEMORY

  ; Code: callq .set_eyevalue	 RIP: 41cab5	 Bytes: 5
  %loadMem1_41cab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41cab5 = call %struct.Memory* @routine_callq_.set_eyevalue(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41cab5, i64 116971, i64 5, i64 5)
  store %struct.Memory* %call1_41cab5, %struct.Memory** %MEMORY

  %loadMem2_41cab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41cab5 = load i64, i64* %3
  %call2_41cab5 = call %struct.Memory* @sub_4393a0.set_eyevalue(%struct.State* %0, i64  %loadPC_41cab5, %struct.Memory* %loadMem2_41cab5)
  store %struct.Memory* %call2_41cab5, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdi	 RIP: 41caba	 Bytes: 4
  %loadMem_41caba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41caba = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41caba)
  store %struct.Memory* %call_41caba, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rdi,1), %eax	 RIP: 41cabe	 Bytes: 8
  %loadMem_41cabe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cabe = call %struct.Memory* @routine_movzbl_0xb89e60___rdi_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cabe)
  store %struct.Memory* %call_41cabe, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41cac6	 Bytes: 3
  %loadMem_41cac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cac6 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cac6)
  store %struct.Memory* %call_41cac6, %struct.Memory** %MEMORY

  ; Code: je .L_41caf0	 RIP: 41cac9	 Bytes: 6
  %loadMem_41cac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cac9 = call %struct.Memory* @routine_je_.L_41caf0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cac9, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_41cac9, %struct.Memory** %MEMORY

  %loadBr_41cac9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41cac9 = icmp eq i8 %loadBr_41cac9, 1
  br i1 %cmpBr_41cac9, label %block_.L_41caf0, label %block_41cacf

block_41cacf:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41cacf	 Bytes: 10
  %loadMem_41cacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cacf = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cacf)
  store %struct.Memory* %call_41cacf, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cad9	 Bytes: 4
  %loadMem_41cad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cad9 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cad9)
  store %struct.Memory* %call_41cad9, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41cadd	 Bytes: 4
  %loadMem_41cadd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cadd = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cadd)
  store %struct.Memory* %call_41cadd, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41cae1	 Bytes: 3
  %loadMem_41cae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cae1 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cae1)
  store %struct.Memory* %call_41cae1, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rax), %edx	 RIP: 41cae4	 Bytes: 3
  %loadMem_41cae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cae4 = call %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cae4)
  store %struct.Memory* %call_41cae4, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41cae7	 Bytes: 3
  %loadMem_41cae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cae7 = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cae7)
  store %struct.Memory* %call_41cae7, %struct.Memory** %MEMORY

  ; Code: je .L_41caf5	 RIP: 41caea	 Bytes: 6
  %loadMem_41caea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41caea = call %struct.Memory* @routine_je_.L_41caf5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41caea, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41caea, %struct.Memory** %MEMORY

  %loadBr_41caea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41caea = icmp eq i8 %loadBr_41caea, 1
  br i1 %cmpBr_41caea, label %block_.L_41caf5, label %block_.L_41caf0

  ; Code: .L_41caf0:	 RIP: 41caf0	 Bytes: 0
block_.L_41caf0:

  ; Code: jmpq .L_41d021	 RIP: 41caf0	 Bytes: 5
  %loadMem_41caf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41caf0 = call %struct.Memory* @routine_jmpq_.L_41d021(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41caf0, i64 1329, i64 5)
  store %struct.Memory* %call_41caf0, %struct.Memory** %MEMORY

  br label %block_.L_41d021

  ; Code: .L_41caf5:	 RIP: 41caf5	 Bytes: 0
block_.L_41caf5:

  ; Code: movl $0x1, %edi	 RIP: 41caf5	 Bytes: 5
  %loadMem_41caf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41caf5 = call %struct.Memory* @routine_movl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41caf5)
  store %struct.Memory* %call_41caf5, %struct.Memory** %MEMORY

  ; Code: leaq -0x68(%rbp), %rsi	 RIP: 41cafa	 Bytes: 4
  %loadMem_41cafa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cafa = call %struct.Memory* @routine_leaq_MINUS0x68__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cafa)
  store %struct.Memory* %call_41cafa, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41cafe	 Bytes: 2
  %loadMem_41cafe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cafe = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cafe)
  store %struct.Memory* %call_41cafe, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rax	 RIP: 41cb00	 Bytes: 10
  %loadMem_41cb00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb00 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb00)
  store %struct.Memory* %call_41cb00, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41cb0a	 Bytes: 8
  %loadMem_41cb0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb0a = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb0a)
  store %struct.Memory* %call_41cb0a, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %r8	 RIP: 41cb12	 Bytes: 4
  %loadMem_41cb12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb12 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb12)
  store %struct.Memory* %call_41cb12, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %r8, %r8	 RIP: 41cb16	 Bytes: 4
  %loadMem_41cb16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb16 = call %struct.Memory* @routine_imulq__0x4c___r8___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb16)
  store %struct.Memory* %call_41cb16, %struct.Memory** %MEMORY

  ; Code: movq %rax, %r9	 RIP: 41cb1a	 Bytes: 3
  %loadMem_41cb1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb1a = call %struct.Memory* @routine_movq__rax___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb1a)
  store %struct.Memory* %call_41cb1a, %struct.Memory** %MEMORY

  ; Code: addq %r8, %r9	 RIP: 41cb1d	 Bytes: 3
  %loadMem_41cb1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb1d = call %struct.Memory* @routine_addq__r8___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb1d)
  store %struct.Memory* %call_41cb1d, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%r9), %r8	 RIP: 41cb20	 Bytes: 4
  %loadMem_41cb20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb20 = call %struct.Memory* @routine_movslq_0x4__r9____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb20)
  store %struct.Memory* %call_41cb20, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %r8, %r8	 RIP: 41cb24	 Bytes: 4
  %loadMem_41cb24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb24 = call %struct.Memory* @routine_imulq__0x68___r8___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb24)
  store %struct.Memory* %call_41cb24, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rcx	 RIP: 41cb28	 Bytes: 3
  %loadMem_41cb28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb28 = call %struct.Memory* @routine_addq__r8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb28)
  store %struct.Memory* %call_41cb28, %struct.Memory** %MEMORY

  ; Code: movss 0x38(%rcx), %xmm0	 RIP: 41cb2b	 Bytes: 5
  %loadMem_41cb2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb2b = call %struct.Memory* @routine_movss_0x38__rcx____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb2b)
  store %struct.Memory* %call_41cb2b, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41cb30	 Bytes: 8
  %loadMem_41cb30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb30 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb30)
  store %struct.Memory* %call_41cb30, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %r8	 RIP: 41cb38	 Bytes: 4
  %loadMem_41cb38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb38 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb38)
  store %struct.Memory* %call_41cb38, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %r8, %r8	 RIP: 41cb3c	 Bytes: 4
  %loadMem_41cb3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb3c = call %struct.Memory* @routine_imulq__0x4c___r8___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb3c)
  store %struct.Memory* %call_41cb3c, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rax	 RIP: 41cb40	 Bytes: 3
  %loadMem_41cb40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb40 = call %struct.Memory* @routine_addq__r8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb40)
  store %struct.Memory* %call_41cb40, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 41cb43	 Bytes: 4
  %loadMem_41cb43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb43 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb43)
  store %struct.Memory* %call_41cb43, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 41cb47	 Bytes: 4
  %loadMem_41cb47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb47 = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb47)
  store %struct.Memory* %call_41cb47, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 41cb4b	 Bytes: 3
  %loadMem_41cb4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb4b = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb4b)
  store %struct.Memory* %call_41cb4b, %struct.Memory** %MEMORY

  ; Code: movl 0x48(%rcx), %r10d	 RIP: 41cb4e	 Bytes: 4
  %loadMem_41cb4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb4e = call %struct.Memory* @routine_movl_0x48__rcx____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb4e)
  store %struct.Memory* %call_41cb4e, %struct.Memory** %MEMORY

  ; Code: subl $0xa, %r10d	 RIP: 41cb52	 Bytes: 4
  %loadMem_41cb52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb52 = call %struct.Memory* @routine_subl__0xa___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb52)
  store %struct.Memory* %call_41cb52, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %r10d, %xmm1	 RIP: 41cb56	 Bytes: 5
  %loadMem_41cb56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb56 = call %struct.Memory* @routine_cvtsi2ssl__r10d___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb56)
  store %struct.Memory* %call_41cb56, %struct.Memory** %MEMORY

  ; Code: callq .crude_dragon_weakness	 RIP: 41cb5b	 Bytes: 5
  %loadMem1_41cb5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41cb5b = call %struct.Memory* @routine_callq_.crude_dragon_weakness(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41cb5b, i64 11765, i64 5, i64 5)
  store %struct.Memory* %call1_41cb5b, %struct.Memory** %MEMORY

  %loadMem2_41cb5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41cb5b = load i64, i64* %3
  %call2_41cb5b = call %struct.Memory* @sub_41f950.crude_dragon_weakness(%struct.State* %0, i64  %loadPC_41cb5b, %struct.Memory* %loadMem2_41cb5b)
  store %struct.Memory* %call2_41cb5b, %struct.Memory** %MEMORY

  ; Code: movsd 0xc6400(%rip), %xmm1	 RIP: 41cb60	 Bytes: 8
  %loadMem_41cb60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb60 = call %struct.Memory* @routine_movsd_0xc6400__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb60)
  store %struct.Memory* %call_41cb60, %struct.Memory** %MEMORY

  ; Code: movsd 0xc6400(%rip), %xmm2	 RIP: 41cb68	 Bytes: 8
  %loadMem_41cb68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb68 = call %struct.Memory* @routine_movsd_0xc6400__rip____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb68)
  store %struct.Memory* %call_41cb68, %struct.Memory** %MEMORY

  ; Code: movsd 0xc6400(%rip), %xmm3	 RIP: 41cb70	 Bytes: 8
  %loadMem_41cb70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb70 = call %struct.Memory* @routine_movsd_0xc6400__rip____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb70)
  store %struct.Memory* %call_41cb70, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rax	 RIP: 41cb78	 Bytes: 10
  %loadMem_41cb78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb78 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb78)
  store %struct.Memory* %call_41cb78, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 41cb82	 Bytes: 4
  %loadMem_41cb82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb82 = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb82)
  store %struct.Memory* %call_41cb82, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cb86	 Bytes: 4
  %loadMem_41cb86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb86 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb86)
  store %struct.Memory* %call_41cb86, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41cb8a	 Bytes: 4
  %loadMem_41cb8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb8a = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb8a)
  store %struct.Memory* %call_41cb8a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41cb8e	 Bytes: 3
  %loadMem_41cb8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb8e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb8e)
  store %struct.Memory* %call_41cb8e, %struct.Memory** %MEMORY

  ; Code: cvtss2sd 0x10(%rax), %xmm4	 RIP: 41cb91	 Bytes: 5
  %loadMem_41cb91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb91 = call %struct.Memory* @routine_cvtss2sd_0x10__rax____xmm4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb91)
  store %struct.Memory* %call_41cb91, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm4, %xmm3	 RIP: 41cb96	 Bytes: 4
  %loadMem_41cb96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb96 = call %struct.Memory* @routine_mulsd__xmm4___xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb96)
  store %struct.Memory* %call_41cb96, %struct.Memory** %MEMORY

  ; Code: subsd %xmm3, %xmm2	 RIP: 41cb9a	 Bytes: 4
  %loadMem_41cb9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb9a = call %struct.Memory* @routine_subsd__xmm3___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb9a)
  store %struct.Memory* %call_41cb9a, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm1, %xmm2	 RIP: 41cb9e	 Bytes: 4
  %loadMem_41cb9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cb9e = call %struct.Memory* @routine_ucomisd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cb9e)
  store %struct.Memory* %call_41cb9e, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x3c8(%rbp)	 RIP: 41cba2	 Bytes: 8
  %loadMem_41cba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cba2 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x3c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cba2)
  store %struct.Memory* %call_41cba2, %struct.Memory** %MEMORY

  ; Code: jbe .L_41cbef	 RIP: 41cbaa	 Bytes: 6
  %loadMem_41cbaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbaa = call %struct.Memory* @routine_jbe_.L_41cbef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbaa, i8* %BRANCH_TAKEN, i64 69, i64 6, i64 6)
  store %struct.Memory* %call_41cbaa, %struct.Memory** %MEMORY

  %loadBr_41cbaa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41cbaa = icmp eq i8 %loadBr_41cbaa, 1
  br i1 %cmpBr_41cbaa, label %block_.L_41cbef, label %block_41cbb0

block_41cbb0:
  ; Code: movsd 0xc63b8(%rip), %xmm0	 RIP: 41cbb0	 Bytes: 8
  %loadMem_41cbb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbb0 = call %struct.Memory* @routine_movsd_0xc63b8__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbb0)
  store %struct.Memory* %call_41cbb0, %struct.Memory** %MEMORY

  ; Code: movsd 0xc63b8(%rip), %xmm1	 RIP: 41cbb8	 Bytes: 8
  %loadMem_41cbb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbb8 = call %struct.Memory* @routine_movsd_0xc63b8__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbb8)
  store %struct.Memory* %call_41cbb8, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rax	 RIP: 41cbc0	 Bytes: 10
  %loadMem_41cbc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbc0 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbc0)
  store %struct.Memory* %call_41cbc0, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cbca	 Bytes: 4
  %loadMem_41cbca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbca = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbca)
  store %struct.Memory* %call_41cbca, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41cbce	 Bytes: 4
  %loadMem_41cbce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbce = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbce)
  store %struct.Memory* %call_41cbce, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41cbd2	 Bytes: 3
  %loadMem_41cbd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbd2 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbd2)
  store %struct.Memory* %call_41cbd2, %struct.Memory** %MEMORY

  ; Code: cvtss2sd 0x10(%rax), %xmm2	 RIP: 41cbd5	 Bytes: 5
  %loadMem_41cbd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbd5 = call %struct.Memory* @routine_cvtss2sd_0x10__rax____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbd5)
  store %struct.Memory* %call_41cbd5, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 41cbda	 Bytes: 4
  %loadMem_41cbda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbda = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbda)
  store %struct.Memory* %call_41cbda, %struct.Memory** %MEMORY

  ; Code: subsd %xmm1, %xmm0	 RIP: 41cbde	 Bytes: 4
  %loadMem_41cbde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbde = call %struct.Memory* @routine_subsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbde)
  store %struct.Memory* %call_41cbde, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x3d0(%rbp)	 RIP: 41cbe2	 Bytes: 8
  %loadMem_41cbe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbe2 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x3d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbe2)
  store %struct.Memory* %call_41cbe2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41cc04	 RIP: 41cbea	 Bytes: 5
  %loadMem_41cbea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbea = call %struct.Memory* @routine_jmpq_.L_41cc04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbea, i64 26, i64 5)
  store %struct.Memory* %call_41cbea, %struct.Memory** %MEMORY

  br label %block_.L_41cc04

  ; Code: .L_41cbef:	 RIP: 41cbef	 Bytes: 0
block_.L_41cbef:

  ; Code: movsd 0xc6371(%rip), %xmm0	 RIP: 41cbef	 Bytes: 8
  %loadMem_41cbef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbef = call %struct.Memory* @routine_movsd_0xc6371__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbef)
  store %struct.Memory* %call_41cbef, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x3d0(%rbp)	 RIP: 41cbf7	 Bytes: 8
  %loadMem_41cbf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbf7 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x3d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbf7)
  store %struct.Memory* %call_41cbf7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41cc04	 RIP: 41cbff	 Bytes: 5
  %loadMem_41cbff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cbff = call %struct.Memory* @routine_jmpq_.L_41cc04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cbff, i64 5, i64 5)
  store %struct.Memory* %call_41cbff, %struct.Memory** %MEMORY

  br label %block_.L_41cc04

  ; Code: .L_41cc04:	 RIP: 41cc04	 Bytes: 0
block_.L_41cc04:

  ; Code: movsd -0x3d0(%rbp), %xmm0	 RIP: 41cc04	 Bytes: 8
  %loadMem_41cc04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc04 = call %struct.Memory* @routine_movsd_MINUS0x3d0__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc04)
  store %struct.Memory* %call_41cc04, %struct.Memory** %MEMORY

  ; Code: movsd 0xc636c(%rip), %xmm1	 RIP: 41cc0c	 Bytes: 8
  %loadMem_41cc0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc0c = call %struct.Memory* @routine_movsd_0xc636c__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc0c)
  store %struct.Memory* %call_41cc0c, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 41cc14	 Bytes: 4
  %loadMem_41cc14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc14 = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc14)
  store %struct.Memory* %call_41cc14, %struct.Memory** %MEMORY

  ; Code: movsd -0x3c8(%rbp), %xmm0	 RIP: 41cc18	 Bytes: 8
  %loadMem_41cc18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc18 = call %struct.Memory* @routine_movsd_MINUS0x3c8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc18)
  store %struct.Memory* %call_41cc18, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 41cc20	 Bytes: 4
  %loadMem_41cc20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc20 = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc20)
  store %struct.Memory* %call_41cc20, %struct.Memory** %MEMORY

  ; Code: jbe .L_41cc75	 RIP: 41cc24	 Bytes: 6
  %loadMem_41cc24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc24 = call %struct.Memory* @routine_jbe_.L_41cc75(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc24, i8* %BRANCH_TAKEN, i64 81, i64 6, i64 6)
  store %struct.Memory* %call_41cc24, %struct.Memory** %MEMORY

  %loadBr_41cc24 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41cc24 = icmp eq i8 %loadBr_41cc24, 1
  br i1 %cmpBr_41cc24, label %block_.L_41cc75, label %block_41cc2a

block_41cc2a:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41cc2a	 Bytes: 10
  %loadMem_41cc2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc2a = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc2a)
  store %struct.Memory* %call_41cc2a, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cc34	 Bytes: 4
  %loadMem_41cc34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc34 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc34)
  store %struct.Memory* %call_41cc34, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41cc38	 Bytes: 4
  %loadMem_41cc38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc38 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc38)
  store %struct.Memory* %call_41cc38, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41cc3c	 Bytes: 3
  %loadMem_41cc3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc3c = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc3c)
  store %struct.Memory* %call_41cc3c, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41cc3f	 Bytes: 3
  %loadMem_41cc3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc3f = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc3f)
  store %struct.Memory* %call_41cc3f, %struct.Memory** %MEMORY

  ; Code: movl $0x4, 0x1c(%rdx)	 RIP: 41cc42	 Bytes: 7
  %loadMem_41cc42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc42 = call %struct.Memory* @routine_movl__0x4__0x1c__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc42)
  store %struct.Memory* %call_41cc42, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cc49	 Bytes: 4
  %loadMem_41cc49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc49 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc49)
  store %struct.Memory* %call_41cc49, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41cc4d	 Bytes: 4
  %loadMem_41cc4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc4d = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc4d)
  store %struct.Memory* %call_41cc4d, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41cc51	 Bytes: 3
  %loadMem_41cc51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc51 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc51)
  store %struct.Memory* %call_41cc51, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41cc54	 Bytes: 3
  %loadMem_41cc54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc54 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc54)
  store %struct.Memory* %call_41cc54, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x20(%rdx)	 RIP: 41cc57	 Bytes: 7
  %loadMem_41cc57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc57 = call %struct.Memory* @routine_movl__0x0__0x20__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc57)
  store %struct.Memory* %call_41cc57, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cc5e	 Bytes: 4
  %loadMem_41cc5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc5e = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc5e)
  store %struct.Memory* %call_41cc5e, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41cc62	 Bytes: 4
  %loadMem_41cc62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc62 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc62)
  store %struct.Memory* %call_41cc62, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41cc66	 Bytes: 3
  %loadMem_41cc66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc66 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc66)
  store %struct.Memory* %call_41cc66, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x30(%rax)	 RIP: 41cc69	 Bytes: 7
  %loadMem_41cc69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc69 = call %struct.Memory* @routine_movl__0x0__0x30__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc69)
  store %struct.Memory* %call_41cc69, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d017	 RIP: 41cc70	 Bytes: 5
  %loadMem_41cc70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc70 = call %struct.Memory* @routine_jmpq_.L_41d017(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc70, i64 935, i64 5)
  store %struct.Memory* %call_41cc70, %struct.Memory** %MEMORY

  br label %block_.L_41d017

  ; Code: .L_41cc75:	 RIP: 41cc75	 Bytes: 0
block_.L_41cc75:

  ; Code: movl $0x3, %edi	 RIP: 41cc75	 Bytes: 5
  %loadMem_41cc75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc75 = call %struct.Memory* @routine_movl__0x3___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc75)
  store %struct.Memory* %call_41cc75, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x6c(%rbp)	 RIP: 41cc7a	 Bytes: 7
  %loadMem_41cc7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc7a = call %struct.Memory* @routine_movl__0x0__MINUS0x6c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc7a)
  store %struct.Memory* %call_41cc7a, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x70(%rbp)	 RIP: 41cc81	 Bytes: 7
  %loadMem_41cc81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc81 = call %struct.Memory* @routine_movl__0x0__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc81)
  store %struct.Memory* %call_41cc81, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x74(%rbp)	 RIP: 41cc88	 Bytes: 7
  %loadMem_41cc88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc88 = call %struct.Memory* @routine_movl__0x0__MINUS0x74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc88)
  store %struct.Memory* %call_41cc88, %struct.Memory** %MEMORY

  ; Code: callq .start_timer	 RIP: 41cc8f	 Bytes: 5
  %loadMem1_41cc8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41cc8f = call %struct.Memory* @routine_callq_.start_timer(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41cc8f, i64 390849, i64 5, i64 5)
  store %struct.Memory* %call1_41cc8f, %struct.Memory** %MEMORY

  %loadMem2_41cc8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41cc8f = load i64, i64* %3
  %call2_41cc8f = call %struct.Memory* @sub_47c350.start_timer(%struct.State* %0, i64  %loadPC_41cc8f, %struct.Memory* %loadMem2_41cc8f)
  store %struct.Memory* %call2_41cc8f, %struct.Memory** %MEMORY

  ; Code: leaq -0x5c(%rbp), %rsi	 RIP: 41cc94	 Bytes: 4
  %loadMem_41cc94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc94 = call %struct.Memory* @routine_leaq_MINUS0x5c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc94)
  store %struct.Memory* %call_41cc94, %struct.Memory** %MEMORY

  ; Code: leaq -0x74(%rbp), %rcx	 RIP: 41cc98	 Bytes: 4
  %loadMem_41cc98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc98 = call %struct.Memory* @routine_leaq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc98)
  store %struct.Memory* %call_41cc98, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rax	 RIP: 41cc9c	 Bytes: 10
  %loadMem_41cc9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cc9c = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cc9c)
  store %struct.Memory* %call_41cc9c, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41cca6	 Bytes: 3
  %loadMem_41cca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cca6 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cca6)
  store %struct.Memory* %call_41cca6, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41cca9	 Bytes: 4
  %loadMem_41cca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cca9 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cca9)
  store %struct.Memory* %call_41cca9, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41ccad	 Bytes: 4
  %loadMem_41ccad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccad = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccad)
  store %struct.Memory* %call_41ccad, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 41ccb1	 Bytes: 3
  %loadMem_41ccb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccb1 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccb1)
  store %struct.Memory* %call_41ccb1, %struct.Memory** %MEMORY

  ; Code: addq $0x28, %rax	 RIP: 41ccb4	 Bytes: 4
  %loadMem_41ccb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccb4 = call %struct.Memory* @routine_addq__0x28___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccb4)
  store %struct.Memory* %call_41ccb4, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41ccb8	 Bytes: 3
  %loadMem_41ccb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccb8 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccb8)
  store %struct.Memory* %call_41ccb8, %struct.Memory** %MEMORY

  ; Code: callq .owl_attack	 RIP: 41ccbb	 Bytes: 5
  %loadMem1_41ccbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ccbb = call %struct.Memory* @routine_callq_.owl_attack(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ccbb, i64 171093, i64 5, i64 5)
  store %struct.Memory* %call1_41ccbb, %struct.Memory** %MEMORY

  %loadMem2_41ccbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ccbb = load i64, i64* %3
  %call2_41ccbb = call %struct.Memory* @sub_446910.owl_attack(%struct.State* %0, i64  %loadPC_41ccbb, %struct.Memory* %loadMem2_41ccbb)
  store %struct.Memory* %call2_41ccbb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6c(%rbp)	 RIP: 41ccc0	 Bytes: 3
  %loadMem_41ccc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccc0 = call %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccc0)
  store %struct.Memory* %call_41ccc0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x6c(%rbp)	 RIP: 41ccc3	 Bytes: 4
  %loadMem_41ccc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccc3 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccc3)
  store %struct.Memory* %call_41ccc3, %struct.Memory** %MEMORY

  ; Code: je .L_41cefe	 RIP: 41ccc7	 Bytes: 6
  %loadMem_41ccc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccc7 = call %struct.Memory* @routine_je_.L_41cefe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccc7, i8* %BRANCH_TAKEN, i64 567, i64 6, i64 6)
  store %struct.Memory* %call_41ccc7, %struct.Memory** %MEMORY

  %loadBr_41ccc7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ccc7 = icmp eq i8 %loadBr_41ccc7, 1
  br i1 %cmpBr_41ccc7, label %block_.L_41cefe, label %block_41cccd

block_41cccd:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41cccd	 Bytes: 10
  %loadMem_41cccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cccd = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cccd)
  store %struct.Memory* %call_41cccd, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %ecx	 RIP: 41ccd7	 Bytes: 3
  %loadMem_41ccd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccd7 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccd7)
  store %struct.Memory* %call_41ccd7, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41ccda	 Bytes: 4
  %loadMem_41ccda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccda = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccda)
  store %struct.Memory* %call_41ccda, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41ccde	 Bytes: 4
  %loadMem_41ccde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccde = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccde)
  store %struct.Memory* %call_41ccde, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 41cce2	 Bytes: 3
  %loadMem_41cce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cce2 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cce2)
  store %struct.Memory* %call_41cce2, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 41cce5	 Bytes: 3
  %loadMem_41cce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cce5 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cce5)
  store %struct.Memory* %call_41cce5, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x20(%rsi)	 RIP: 41cce8	 Bytes: 3
  %loadMem_41cce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cce8 = call %struct.Memory* @routine_movl__ecx__0x20__rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cce8)
  store %struct.Memory* %call_41cce8, %struct.Memory** %MEMORY

  ; Code: movl -0x6c(%rbp), %ecx	 RIP: 41cceb	 Bytes: 3
  %loadMem_41cceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cceb = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cceb)
  store %struct.Memory* %call_41cceb, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41ccee	 Bytes: 4
  %loadMem_41ccee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccee = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccee)
  store %struct.Memory* %call_41ccee, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41ccf2	 Bytes: 4
  %loadMem_41ccf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccf2 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccf2)
  store %struct.Memory* %call_41ccf2, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 41ccf6	 Bytes: 3
  %loadMem_41ccf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccf6 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccf6)
  store %struct.Memory* %call_41ccf6, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 41ccf9	 Bytes: 3
  %loadMem_41ccf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccf9 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccf9)
  store %struct.Memory* %call_41ccf9, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x24(%rsi)	 RIP: 41ccfc	 Bytes: 3
  %loadMem_41ccfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccfc = call %struct.Memory* @routine_movl__ecx__0x24__rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccfc)
  store %struct.Memory* %call_41ccfc, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %ecx	 RIP: 41ccff	 Bytes: 3
  %loadMem_41ccff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ccff = call %struct.Memory* @routine_movl_MINUS0x74__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ccff)
  store %struct.Memory* %call_41ccff, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41cd02	 Bytes: 4
  %loadMem_41cd02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd02 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd02)
  store %struct.Memory* %call_41cd02, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41cd06	 Bytes: 4
  %loadMem_41cd06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd06 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd06)
  store %struct.Memory* %call_41cd06, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 41cd0a	 Bytes: 3
  %loadMem_41cd0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd0a = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd0a)
  store %struct.Memory* %call_41cd0a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x44(%rax)	 RIP: 41cd0d	 Bytes: 3
  %loadMem_41cd0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd0d = call %struct.Memory* @routine_movl__ecx__0x44__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd0d)
  store %struct.Memory* %call_41cd0d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x5c(%rbp)	 RIP: 41cd10	 Bytes: 4
  %loadMem_41cd10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd10 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd10)
  store %struct.Memory* %call_41cd10, %struct.Memory** %MEMORY

  ; Code: je .L_41cea9	 RIP: 41cd14	 Bytes: 6
  %loadMem_41cd14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd14 = call %struct.Memory* @routine_je_.L_41cea9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd14, i8* %BRANCH_TAKEN, i64 405, i64 6, i64 6)
  store %struct.Memory* %call_41cd14, %struct.Memory** %MEMORY

  %loadBr_41cd14 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41cd14 = icmp eq i8 %loadBr_41cd14, 1
  br i1 %cmpBr_41cd14, label %block_.L_41cea9, label %block_41cd1a

block_41cd1a:
  ; Code: leaq -0x60(%rbp), %rsi	 RIP: 41cd1a	 Bytes: 4
  %loadMem_41cd1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd1a = call %struct.Memory* @routine_leaq_MINUS0x60__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd1a)
  store %struct.Memory* %call_41cd1a, %struct.Memory** %MEMORY

  ; Code: leaq -0x74(%rbp), %rcx	 RIP: 41cd1e	 Bytes: 4
  %loadMem_41cd1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd1e = call %struct.Memory* @routine_leaq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd1e)
  store %struct.Memory* %call_41cd1e, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rax	 RIP: 41cd22	 Bytes: 10
  %loadMem_41cd22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd22 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd22)
  store %struct.Memory* %call_41cd22, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x74(%rbp)	 RIP: 41cd2c	 Bytes: 7
  %loadMem_41cd2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd2c = call %struct.Memory* @routine_movl__0x0__MINUS0x74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd2c)
  store %struct.Memory* %call_41cd2c, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41cd33	 Bytes: 3
  %loadMem_41cd33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd33 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd33)
  store %struct.Memory* %call_41cd33, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41cd36	 Bytes: 4
  %loadMem_41cd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd36 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd36)
  store %struct.Memory* %call_41cd36, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41cd3a	 Bytes: 4
  %loadMem_41cd3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd3a = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd3a)
  store %struct.Memory* %call_41cd3a, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 41cd3e	 Bytes: 3
  %loadMem_41cd3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd3e = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd3e)
  store %struct.Memory* %call_41cd3e, %struct.Memory** %MEMORY

  ; Code: addq $0x38, %rax	 RIP: 41cd41	 Bytes: 4
  %loadMem_41cd41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd41 = call %struct.Memory* @routine_addq__0x38___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd41)
  store %struct.Memory* %call_41cd41, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41cd45	 Bytes: 3
  %loadMem_41cd45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd45 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd45)
  store %struct.Memory* %call_41cd45, %struct.Memory** %MEMORY

  ; Code: callq .owl_defend	 RIP: 41cd48	 Bytes: 5
  %loadMem1_41cd48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41cd48 = call %struct.Memory* @routine_callq_.owl_defend(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41cd48, i64 187768, i64 5, i64 5)
  store %struct.Memory* %call1_41cd48, %struct.Memory** %MEMORY

  %loadMem2_41cd48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41cd48 = load i64, i64* %3
  %call2_41cd48 = call %struct.Memory* @sub_44aac0.owl_defend(%struct.State* %0, i64  %loadPC_41cd48, %struct.Memory* %loadMem2_41cd48)
  store %struct.Memory* %call2_41cd48, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x70(%rbp)	 RIP: 41cd4d	 Bytes: 3
  %loadMem_41cd4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd4d = call %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd4d)
  store %struct.Memory* %call_41cd4d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x70(%rbp)	 RIP: 41cd50	 Bytes: 4
  %loadMem_41cd50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd50 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd50)
  store %struct.Memory* %call_41cd50, %struct.Memory** %MEMORY

  ; Code: je .L_41cea4	 RIP: 41cd54	 Bytes: 6
  %loadMem_41cd54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd54 = call %struct.Memory* @routine_je_.L_41cea4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd54, i8* %BRANCH_TAKEN, i64 336, i64 6, i64 6)
  store %struct.Memory* %call_41cd54, %struct.Memory** %MEMORY

  %loadBr_41cd54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41cd54 = icmp eq i8 %loadBr_41cd54, 1
  br i1 %cmpBr_41cd54, label %block_.L_41cea4, label %block_41cd5a

block_41cd5a:
  ; Code: cmpl $0x0, -0x60(%rbp)	 RIP: 41cd5a	 Bytes: 4
  %loadMem_41cd5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd5a = call %struct.Memory* @routine_cmpl__0x0__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd5a)
  store %struct.Memory* %call_41cd5a, %struct.Memory** %MEMORY

  ; Code: je .L_41cdce	 RIP: 41cd5e	 Bytes: 6
  %loadMem_41cd5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd5e = call %struct.Memory* @routine_je_.L_41cdce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd5e, i8* %BRANCH_TAKEN, i64 112, i64 6, i64 6)
  store %struct.Memory* %call_41cd5e, %struct.Memory** %MEMORY

  %loadBr_41cd5e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41cd5e = icmp eq i8 %loadBr_41cd5e, 1
  br i1 %cmpBr_41cd5e, label %block_.L_41cdce, label %block_41cd64

block_41cd64:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41cd64	 Bytes: 10
  %loadMem_41cd64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd64 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd64)
  store %struct.Memory* %call_41cd64, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 41cd6e	 Bytes: 5
  %loadMem_41cd6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd6e = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd6e)
  store %struct.Memory* %call_41cd6e, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edx	 RIP: 41cd73	 Bytes: 5
  %loadMem_41cd73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd73 = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd73)
  store %struct.Memory* %call_41cd73, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, -0x6c(%rbp)	 RIP: 41cd78	 Bytes: 4
  %loadMem_41cd78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd78 = call %struct.Memory* @routine_cmpl__0x3__MINUS0x6c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd78)
  store %struct.Memory* %call_41cd78, %struct.Memory** %MEMORY

  ; Code: cmovel %edx, %ecx	 RIP: 41cd7c	 Bytes: 3
  %loadMem_41cd7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd7c = call %struct.Memory* @routine_cmovel__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd7c)
  store %struct.Memory* %call_41cd7c, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41cd7f	 Bytes: 4
  %loadMem_41cd7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd7f = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd7f)
  store %struct.Memory* %call_41cd7f, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41cd83	 Bytes: 4
  %loadMem_41cd83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd83 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd83)
  store %struct.Memory* %call_41cd83, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41cd87	 Bytes: 3
  %loadMem_41cd87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd87 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd87)
  store %struct.Memory* %call_41cd87, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41cd8a	 Bytes: 3
  %loadMem_41cd8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd8a = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd8a)
  store %struct.Memory* %call_41cd8a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x1c(%rdi)	 RIP: 41cd8d	 Bytes: 3
  %loadMem_41cd8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd8d = call %struct.Memory* @routine_movl__ecx__0x1c__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd8d)
  store %struct.Memory* %call_41cd8d, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 41cd90	 Bytes: 3
  %loadMem_41cd90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd90 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd90)
  store %struct.Memory* %call_41cd90, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41cd93	 Bytes: 4
  %loadMem_41cd93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd93 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd93)
  store %struct.Memory* %call_41cd93, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41cd97	 Bytes: 4
  %loadMem_41cd97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd97 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd97)
  store %struct.Memory* %call_41cd97, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41cd9b	 Bytes: 3
  %loadMem_41cd9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd9b = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd9b)
  store %struct.Memory* %call_41cd9b, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41cd9e	 Bytes: 3
  %loadMem_41cd9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cd9e = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cd9e)
  store %struct.Memory* %call_41cd9e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x30(%rdi)	 RIP: 41cda1	 Bytes: 3
  %loadMem_41cda1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cda1 = call %struct.Memory* @routine_movl__ecx__0x30__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cda1)
  store %struct.Memory* %call_41cda1, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ecx	 RIP: 41cda4	 Bytes: 3
  %loadMem_41cda4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cda4 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cda4)
  store %struct.Memory* %call_41cda4, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41cda7	 Bytes: 4
  %loadMem_41cda7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cda7 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cda7)
  store %struct.Memory* %call_41cda7, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41cdab	 Bytes: 4
  %loadMem_41cdab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdab = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdab)
  store %struct.Memory* %call_41cdab, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41cdaf	 Bytes: 3
  %loadMem_41cdaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdaf = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdaf)
  store %struct.Memory* %call_41cdaf, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41cdb2	 Bytes: 3
  %loadMem_41cdb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdb2 = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdb2)
  store %struct.Memory* %call_41cdb2, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x34(%rdi)	 RIP: 41cdb5	 Bytes: 3
  %loadMem_41cdb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdb5 = call %struct.Memory* @routine_movl__ecx__0x34__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdb5)
  store %struct.Memory* %call_41cdb5, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %ecx	 RIP: 41cdb8	 Bytes: 3
  %loadMem_41cdb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdb8 = call %struct.Memory* @routine_movl_MINUS0x74__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdb8)
  store %struct.Memory* %call_41cdb8, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41cdbb	 Bytes: 4
  %loadMem_41cdbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdbb = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdbb)
  store %struct.Memory* %call_41cdbb, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41cdbf	 Bytes: 4
  %loadMem_41cdbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdbf = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdbf)
  store %struct.Memory* %call_41cdbf, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rax	 RIP: 41cdc3	 Bytes: 3
  %loadMem_41cdc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdc3 = call %struct.Memory* @routine_addq__rsi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdc3)
  store %struct.Memory* %call_41cdc3, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x48(%rax)	 RIP: 41cdc6	 Bytes: 3
  %loadMem_41cdc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdc6 = call %struct.Memory* @routine_movl__ecx__0x48__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdc6)
  store %struct.Memory* %call_41cdc6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41ce9f	 RIP: 41cdc9	 Bytes: 5
  %loadMem_41cdc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdc9 = call %struct.Memory* @routine_jmpq_.L_41ce9f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdc9, i64 214, i64 5)
  store %struct.Memory* %call_41cdc9, %struct.Memory** %MEMORY

  br label %block_.L_41ce9f

  ; Code: .L_41cdce:	 RIP: 41cdce	 Bytes: 0
block_.L_41cdce:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41cdce	 Bytes: 10
  %loadMem_41cdce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdce = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdce)
  store %struct.Memory* %call_41cdce, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 41cdd8	 Bytes: 5
  %loadMem_41cdd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdd8 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdd8)
  store %struct.Memory* %call_41cdd8, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edx	 RIP: 41cddd	 Bytes: 5
  %loadMem_41cddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cddd = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cddd)
  store %struct.Memory* %call_41cddd, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, -0x6c(%rbp)	 RIP: 41cde2	 Bytes: 4
  %loadMem_41cde2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cde2 = call %struct.Memory* @routine_cmpl__0x3__MINUS0x6c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cde2)
  store %struct.Memory* %call_41cde2, %struct.Memory** %MEMORY

  ; Code: cmovel %edx, %ecx	 RIP: 41cde6	 Bytes: 3
  %loadMem_41cde6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cde6 = call %struct.Memory* @routine_cmovel__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cde6)
  store %struct.Memory* %call_41cde6, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41cde9	 Bytes: 4
  %loadMem_41cde9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cde9 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cde9)
  store %struct.Memory* %call_41cde9, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41cded	 Bytes: 4
  %loadMem_41cded = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cded = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cded)
  store %struct.Memory* %call_41cded, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rax	 RIP: 41cdf1	 Bytes: 3
  %loadMem_41cdf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdf1 = call %struct.Memory* @routine_addq__rsi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdf1)
  store %struct.Memory* %call_41cdf1, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x1c(%rax)	 RIP: 41cdf4	 Bytes: 3
  %loadMem_41cdf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdf4 = call %struct.Memory* @routine_movl__ecx__0x1c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdf4)
  store %struct.Memory* %call_41cdf4, %struct.Memory** %MEMORY

  ; Code: movl 0xab0f24, %ecx	 RIP: 41cdf7	 Bytes: 7
  %loadMem_41cdf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdf7 = call %struct.Memory* @routine_movl_0xab0f24___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdf7)
  store %struct.Memory* %call_41cdf7, %struct.Memory** %MEMORY

  ; Code: andl $0x1000, %ecx	 RIP: 41cdfe	 Bytes: 6
  %loadMem_41cdfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cdfe = call %struct.Memory* @routine_andl__0x1000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cdfe)
  store %struct.Memory* %call_41cdfe, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 41ce04	 Bytes: 3
  %loadMem_41ce04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce04 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce04)
  store %struct.Memory* %call_41ce04, %struct.Memory** %MEMORY

  ; Code: jne .L_41ce12	 RIP: 41ce07	 Bytes: 6
  %loadMem_41ce07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce07 = call %struct.Memory* @routine_jne_.L_41ce12(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce07, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41ce07, %struct.Memory** %MEMORY

  %loadBr_41ce07 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ce07 = icmp eq i8 %loadBr_41ce07, 1
  br i1 %cmpBr_41ce07, label %block_.L_41ce12, label %block_41ce0d

block_41ce0d:
  ; Code: jmpq .L_41ce2c	 RIP: 41ce0d	 Bytes: 5
  %loadMem_41ce0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce0d = call %struct.Memory* @routine_jmpq_.L_41ce2c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce0d, i64 31, i64 5)
  store %struct.Memory* %call_41ce0d, %struct.Memory** %MEMORY

  br label %block_.L_41ce2c

  ; Code: .L_41ce12:	 RIP: 41ce12	 Bytes: 0
block_.L_41ce12:

  ; Code: movq $0x57afba, %rdi	 RIP: 41ce12	 Bytes: 10
  %loadMem_41ce12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce12 = call %struct.Memory* @routine_movq__0x57afba___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce12)
  store %struct.Memory* %call_41ce12, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 41ce1c	 Bytes: 3
  %loadMem_41ce1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce1c = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce1c)
  store %struct.Memory* %call_41ce1c, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41ce1f	 Bytes: 2
  %loadMem_41ce1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce1f = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce1f)
  store %struct.Memory* %call_41ce1f, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 41ce21	 Bytes: 5
  %loadMem1_41ce21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ce21 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ce21, i64 216975, i64 5, i64 5)
  store %struct.Memory* %call1_41ce21, %struct.Memory** %MEMORY

  %loadMem2_41ce21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ce21 = load i64, i64* %3
  %call2_41ce21 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_41ce21, %struct.Memory* %loadMem2_41ce21)
  store %struct.Memory* %call2_41ce21, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3d4(%rbp)	 RIP: 41ce26	 Bytes: 6
  %loadMem_41ce26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce26 = call %struct.Memory* @routine_movl__eax__MINUS0x3d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce26)
  store %struct.Memory* %call_41ce26, %struct.Memory** %MEMORY

  ; Code: .L_41ce2c:	 RIP: 41ce2c	 Bytes: 0
  br label %block_.L_41ce2c
block_.L_41ce2c:

  ; Code: xorl %eax, %eax	 RIP: 41ce2c	 Bytes: 2
  %loadMem_41ce2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce2c = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce2c)
  store %struct.Memory* %call_41ce2c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41ce2e	 Bytes: 2
  %loadMem_41ce2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce2e = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce2e)
  store %struct.Memory* %call_41ce2e, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rcx	 RIP: 41ce30	 Bytes: 10
  %loadMem_41ce30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce30 = call %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce30)
  store %struct.Memory* %call_41ce30, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41ce3a	 Bytes: 4
  %loadMem_41ce3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce3a = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce3a)
  store %struct.Memory* %call_41ce3a, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41ce3e	 Bytes: 4
  %loadMem_41ce3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce3e = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce3e)
  store %struct.Memory* %call_41ce3e, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 41ce42	 Bytes: 3
  %loadMem_41ce42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce42 = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce42)
  store %struct.Memory* %call_41ce42, %struct.Memory** %MEMORY

  ; Code: movl 0x20(%rcx), %edi	 RIP: 41ce45	 Bytes: 3
  %loadMem_41ce45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce45 = call %struct.Memory* @routine_movl_0x20__rcx____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce45)
  store %struct.Memory* %call_41ce45, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 41ce48	 Bytes: 3
  %loadMem_41ce48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce48 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce48)
  store %struct.Memory* %call_41ce48, %struct.Memory** %MEMORY

  ; Code: callq .owl_does_defend	 RIP: 41ce4b	 Bytes: 5
  %loadMem1_41ce4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ce4b = call %struct.Memory* @routine_callq_.owl_does_defend(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ce4b, i64 193909, i64 5, i64 5)
  store %struct.Memory* %call1_41ce4b, %struct.Memory** %MEMORY

  %loadMem2_41ce4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ce4b = load i64, i64* %3
  %call2_41ce4b = call %struct.Memory* @sub_44c3c0.owl_does_defend(%struct.State* %0, i64  %loadPC_41ce4b, %struct.Memory* %loadMem2_41ce4b)
  store %struct.Memory* %call2_41ce4b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x70(%rbp)	 RIP: 41ce50	 Bytes: 3
  %loadMem_41ce50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce50 = call %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce50)
  store %struct.Memory* %call_41ce50, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x70(%rbp)	 RIP: 41ce53	 Bytes: 4
  %loadMem_41ce53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce53 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce53)
  store %struct.Memory* %call_41ce53, %struct.Memory** %MEMORY

  ; Code: je .L_41ce9a	 RIP: 41ce57	 Bytes: 6
  %loadMem_41ce57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce57 = call %struct.Memory* @routine_je_.L_41ce9a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce57, i8* %BRANCH_TAKEN, i64 67, i64 6, i64 6)
  store %struct.Memory* %call_41ce57, %struct.Memory** %MEMORY

  %loadBr_41ce57 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ce57 = icmp eq i8 %loadBr_41ce57, 1
  br i1 %cmpBr_41ce57, label %block_.L_41ce9a, label %block_41ce5d

block_41ce5d:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41ce5d	 Bytes: 10
  %loadMem_41ce5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce5d = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce5d)
  store %struct.Memory* %call_41ce5d, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41ce67	 Bytes: 4
  %loadMem_41ce67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce67 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce67)
  store %struct.Memory* %call_41ce67, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41ce6b	 Bytes: 4
  %loadMem_41ce6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce6b = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce6b)
  store %struct.Memory* %call_41ce6b, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41ce6f	 Bytes: 3
  %loadMem_41ce6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce6f = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce6f)
  store %struct.Memory* %call_41ce6f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41ce72	 Bytes: 3
  %loadMem_41ce72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce72 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce72)
  store %struct.Memory* %call_41ce72, %struct.Memory** %MEMORY

  ; Code: movl 0x20(%rdx), %esi	 RIP: 41ce75	 Bytes: 3
  %loadMem_41ce75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce75 = call %struct.Memory* @routine_movl_0x20__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce75)
  store %struct.Memory* %call_41ce75, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41ce78	 Bytes: 4
  %loadMem_41ce78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce78 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce78)
  store %struct.Memory* %call_41ce78, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41ce7c	 Bytes: 4
  %loadMem_41ce7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce7c = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce7c)
  store %struct.Memory* %call_41ce7c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41ce80	 Bytes: 3
  %loadMem_41ce80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce80 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce80)
  store %struct.Memory* %call_41ce80, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41ce83	 Bytes: 3
  %loadMem_41ce83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce83 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce83)
  store %struct.Memory* %call_41ce83, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x30(%rdx)	 RIP: 41ce86	 Bytes: 3
  %loadMem_41ce86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce86 = call %struct.Memory* @routine_movl__esi__0x30__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce86)
  store %struct.Memory* %call_41ce86, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %esi	 RIP: 41ce89	 Bytes: 3
  %loadMem_41ce89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce89 = call %struct.Memory* @routine_movl_MINUS0x70__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce89)
  store %struct.Memory* %call_41ce89, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41ce8c	 Bytes: 4
  %loadMem_41ce8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce8c = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce8c)
  store %struct.Memory* %call_41ce8c, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41ce90	 Bytes: 4
  %loadMem_41ce90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce90 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce90)
  store %struct.Memory* %call_41ce90, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41ce94	 Bytes: 3
  %loadMem_41ce94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce94 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce94)
  store %struct.Memory* %call_41ce94, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x34(%rax)	 RIP: 41ce97	 Bytes: 3
  %loadMem_41ce97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce97 = call %struct.Memory* @routine_movl__esi__0x34__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce97)
  store %struct.Memory* %call_41ce97, %struct.Memory** %MEMORY

  ; Code: .L_41ce9a:	 RIP: 41ce9a	 Bytes: 0
  br label %block_.L_41ce9a
block_.L_41ce9a:

  ; Code: jmpq .L_41ce9f	 RIP: 41ce9a	 Bytes: 5
  %loadMem_41ce9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce9a = call %struct.Memory* @routine_jmpq_.L_41ce9f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce9a, i64 5, i64 5)
  store %struct.Memory* %call_41ce9a, %struct.Memory** %MEMORY

  br label %block_.L_41ce9f

  ; Code: .L_41ce9f:	 RIP: 41ce9f	 Bytes: 0
block_.L_41ce9f:

  ; Code: jmpq .L_41cea4	 RIP: 41ce9f	 Bytes: 5
  %loadMem_41ce9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ce9f = call %struct.Memory* @routine_jmpq_.L_41cea4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ce9f, i64 5, i64 5)
  store %struct.Memory* %call_41ce9f, %struct.Memory** %MEMORY

  br label %block_.L_41cea4

  ; Code: .L_41cea4:	 RIP: 41cea4	 Bytes: 0
block_.L_41cea4:

  ; Code: jmpq .L_41cea9	 RIP: 41cea4	 Bytes: 5
  %loadMem_41cea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cea4 = call %struct.Memory* @routine_jmpq_.L_41cea9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cea4, i64 5, i64 5)
  store %struct.Memory* %call_41cea4, %struct.Memory** %MEMORY

  br label %block_.L_41cea9

  ; Code: .L_41cea9:	 RIP: 41cea9	 Bytes: 0
block_.L_41cea9:

  ; Code: cmpl $0x0, -0x70(%rbp)	 RIP: 41cea9	 Bytes: 4
  %loadMem_41cea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cea9 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cea9)
  store %struct.Memory* %call_41cea9, %struct.Memory** %MEMORY

  ; Code: jne .L_41cef9	 RIP: 41cead	 Bytes: 6
  %loadMem_41cead = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cead = call %struct.Memory* @routine_jne_.L_41cef9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cead, i8* %BRANCH_TAKEN, i64 76, i64 6, i64 6)
  store %struct.Memory* %call_41cead, %struct.Memory** %MEMORY

  %loadBr_41cead = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41cead = icmp eq i8 %loadBr_41cead, 1
  br i1 %cmpBr_41cead, label %block_.L_41cef9, label %block_41ceb3

block_41ceb3:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41ceb3	 Bytes: 10
  %loadMem_41ceb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ceb3 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ceb3)
  store %struct.Memory* %call_41ceb3, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cebd	 Bytes: 4
  %loadMem_41cebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cebd = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cebd)
  store %struct.Memory* %call_41cebd, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41cec1	 Bytes: 4
  %loadMem_41cec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cec1 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cec1)
  store %struct.Memory* %call_41cec1, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41cec5	 Bytes: 3
  %loadMem_41cec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cec5 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cec5)
  store %struct.Memory* %call_41cec5, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41cec8	 Bytes: 3
  %loadMem_41cec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cec8 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cec8)
  store %struct.Memory* %call_41cec8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x1c(%rdx)	 RIP: 41cecb	 Bytes: 7
  %loadMem_41cecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cecb = call %struct.Memory* @routine_movl__0x0__0x1c__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cecb)
  store %struct.Memory* %call_41cecb, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41ced2	 Bytes: 4
  %loadMem_41ced2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ced2 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ced2)
  store %struct.Memory* %call_41ced2, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41ced6	 Bytes: 4
  %loadMem_41ced6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ced6 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ced6)
  store %struct.Memory* %call_41ced6, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41ceda	 Bytes: 3
  %loadMem_41ceda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ceda = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ceda)
  store %struct.Memory* %call_41ceda, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41cedd	 Bytes: 3
  %loadMem_41cedd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cedd = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cedd)
  store %struct.Memory* %call_41cedd, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x30(%rdx)	 RIP: 41cee0	 Bytes: 7
  %loadMem_41cee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cee0 = call %struct.Memory* @routine_movl__0x0__0x30__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cee0)
  store %struct.Memory* %call_41cee0, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cee7	 Bytes: 4
  %loadMem_41cee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cee7 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cee7)
  store %struct.Memory* %call_41cee7, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41ceeb	 Bytes: 4
  %loadMem_41ceeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ceeb = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ceeb)
  store %struct.Memory* %call_41ceeb, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41ceef	 Bytes: 3
  %loadMem_41ceef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ceef = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ceef)
  store %struct.Memory* %call_41ceef, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x34(%rax)	 RIP: 41cef2	 Bytes: 7
  %loadMem_41cef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cef2 = call %struct.Memory* @routine_movl__0x0__0x34__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cef2)
  store %struct.Memory* %call_41cef2, %struct.Memory** %MEMORY

  ; Code: .L_41cef9:	 RIP: 41cef9	 Bytes: 0
  br label %block_.L_41cef9
block_.L_41cef9:

  ; Code: jmpq .L_41d012	 RIP: 41cef9	 Bytes: 5
  %loadMem_41cef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cef9 = call %struct.Memory* @routine_jmpq_.L_41d012(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cef9, i64 281, i64 5)
  store %struct.Memory* %call_41cef9, %struct.Memory** %MEMORY

  br label %block_.L_41d012

  ; Code: .L_41cefe:	 RIP: 41cefe	 Bytes: 0
block_.L_41cefe:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41cefe	 Bytes: 10
  %loadMem_41cefe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cefe = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cefe)
  store %struct.Memory* %call_41cefe, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cf08	 Bytes: 4
  %loadMem_41cf08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf08 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf08)
  store %struct.Memory* %call_41cf08, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41cf0c	 Bytes: 4
  %loadMem_41cf0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf0c = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf0c)
  store %struct.Memory* %call_41cf0c, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41cf10	 Bytes: 3
  %loadMem_41cf10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf10 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf10)
  store %struct.Memory* %call_41cf10, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x28(%rax)	 RIP: 41cf13	 Bytes: 4
  %loadMem_41cf13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf13 = call %struct.Memory* @routine_cmpl__0x0__0x28__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf13)
  store %struct.Memory* %call_41cf13, %struct.Memory** %MEMORY

  ; Code: jne .L_41cfa5	 RIP: 41cf17	 Bytes: 6
  %loadMem_41cf17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf17 = call %struct.Memory* @routine_jne_.L_41cfa5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf17, i8* %BRANCH_TAKEN, i64 142, i64 6, i64 6)
  store %struct.Memory* %call_41cf17, %struct.Memory** %MEMORY

  %loadBr_41cf17 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41cf17 = icmp eq i8 %loadBr_41cf17, 1
  br i1 %cmpBr_41cf17, label %block_.L_41cfa5, label %block_41cf1d

block_41cf1d:
  ; Code: leaq -0x60(%rbp), %rsi	 RIP: 41cf1d	 Bytes: 4
  %loadMem_41cf1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf1d = call %struct.Memory* @routine_leaq_MINUS0x60__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf1d)
  store %struct.Memory* %call_41cf1d, %struct.Memory** %MEMORY

  ; Code: leaq -0x74(%rbp), %rcx	 RIP: 41cf21	 Bytes: 4
  %loadMem_41cf21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf21 = call %struct.Memory* @routine_leaq_MINUS0x74__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf21)
  store %struct.Memory* %call_41cf21, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rax	 RIP: 41cf25	 Bytes: 10
  %loadMem_41cf25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf25 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf25)
  store %struct.Memory* %call_41cf25, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x74(%rbp)	 RIP: 41cf2f	 Bytes: 7
  %loadMem_41cf2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf2f = call %struct.Memory* @routine_movl__0x0__MINUS0x74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf2f)
  store %struct.Memory* %call_41cf2f, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41cf36	 Bytes: 3
  %loadMem_41cf36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf36 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf36)
  store %struct.Memory* %call_41cf36, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41cf39	 Bytes: 4
  %loadMem_41cf39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf39 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf39)
  store %struct.Memory* %call_41cf39, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41cf3d	 Bytes: 4
  %loadMem_41cf3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf3d = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf3d)
  store %struct.Memory* %call_41cf3d, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 41cf41	 Bytes: 3
  %loadMem_41cf41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf41 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf41)
  store %struct.Memory* %call_41cf41, %struct.Memory** %MEMORY

  ; Code: addq $0x38, %rax	 RIP: 41cf44	 Bytes: 4
  %loadMem_41cf44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf44 = call %struct.Memory* @routine_addq__0x38___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf44)
  store %struct.Memory* %call_41cf44, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41cf48	 Bytes: 3
  %loadMem_41cf48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf48 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf48)
  store %struct.Memory* %call_41cf48, %struct.Memory** %MEMORY

  ; Code: callq .owl_defend	 RIP: 41cf4b	 Bytes: 5
  %loadMem1_41cf4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41cf4b = call %struct.Memory* @routine_callq_.owl_defend(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41cf4b, i64 187253, i64 5, i64 5)
  store %struct.Memory* %call1_41cf4b, %struct.Memory** %MEMORY

  %loadMem2_41cf4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41cf4b = load i64, i64* %3
  %call2_41cf4b = call %struct.Memory* @sub_44aac0.owl_defend(%struct.State* %0, i64  %loadPC_41cf4b, %struct.Memory* %loadMem2_41cf4b)
  store %struct.Memory* %call2_41cf4b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x70(%rbp)	 RIP: 41cf50	 Bytes: 3
  %loadMem_41cf50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf50 = call %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf50)
  store %struct.Memory* %call_41cf50, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x70(%rbp)	 RIP: 41cf53	 Bytes: 4
  %loadMem_41cf53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf53 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf53)
  store %struct.Memory* %call_41cf53, %struct.Memory** %MEMORY

  ; Code: je .L_41cfa0	 RIP: 41cf57	 Bytes: 6
  %loadMem_41cf57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf57 = call %struct.Memory* @routine_je_.L_41cfa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf57, i8* %BRANCH_TAKEN, i64 73, i64 6, i64 6)
  store %struct.Memory* %call_41cf57, %struct.Memory** %MEMORY

  %loadBr_41cf57 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41cf57 = icmp eq i8 %loadBr_41cf57, 1
  br i1 %cmpBr_41cf57, label %block_.L_41cfa0, label %block_41cf5d

block_41cf5d:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41cf5d	 Bytes: 10
  %loadMem_41cf5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf5d = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf5d)
  store %struct.Memory* %call_41cf5d, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %ecx	 RIP: 41cf67	 Bytes: 3
  %loadMem_41cf67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf67 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf67)
  store %struct.Memory* %call_41cf67, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41cf6a	 Bytes: 4
  %loadMem_41cf6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf6a = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf6a)
  store %struct.Memory* %call_41cf6a, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41cf6e	 Bytes: 4
  %loadMem_41cf6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf6e = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf6e)
  store %struct.Memory* %call_41cf6e, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 41cf72	 Bytes: 3
  %loadMem_41cf72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf72 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf72)
  store %struct.Memory* %call_41cf72, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 41cf75	 Bytes: 3
  %loadMem_41cf75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf75 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf75)
  store %struct.Memory* %call_41cf75, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x30(%rsi)	 RIP: 41cf78	 Bytes: 3
  %loadMem_41cf78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf78 = call %struct.Memory* @routine_movl__ecx__0x30__rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf78)
  store %struct.Memory* %call_41cf78, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %ecx	 RIP: 41cf7b	 Bytes: 3
  %loadMem_41cf7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf7b = call %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf7b)
  store %struct.Memory* %call_41cf7b, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41cf7e	 Bytes: 4
  %loadMem_41cf7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf7e = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf7e)
  store %struct.Memory* %call_41cf7e, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41cf82	 Bytes: 4
  %loadMem_41cf82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf82 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf82)
  store %struct.Memory* %call_41cf82, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 41cf86	 Bytes: 3
  %loadMem_41cf86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf86 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf86)
  store %struct.Memory* %call_41cf86, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 41cf89	 Bytes: 3
  %loadMem_41cf89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf89 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf89)
  store %struct.Memory* %call_41cf89, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x34(%rsi)	 RIP: 41cf8c	 Bytes: 3
  %loadMem_41cf8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf8c = call %struct.Memory* @routine_movl__ecx__0x34__rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf8c)
  store %struct.Memory* %call_41cf8c, %struct.Memory** %MEMORY

  ; Code: movl -0x74(%rbp), %ecx	 RIP: 41cf8f	 Bytes: 3
  %loadMem_41cf8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf8f = call %struct.Memory* @routine_movl_MINUS0x74__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf8f)
  store %struct.Memory* %call_41cf8f, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41cf92	 Bytes: 4
  %loadMem_41cf92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf92 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf92)
  store %struct.Memory* %call_41cf92, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41cf96	 Bytes: 4
  %loadMem_41cf96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf96 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf96)
  store %struct.Memory* %call_41cf96, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 41cf9a	 Bytes: 3
  %loadMem_41cf9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf9a = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf9a)
  store %struct.Memory* %call_41cf9a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x48(%rax)	 RIP: 41cf9d	 Bytes: 3
  %loadMem_41cf9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cf9d = call %struct.Memory* @routine_movl__ecx__0x48__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cf9d)
  store %struct.Memory* %call_41cf9d, %struct.Memory** %MEMORY

  ; Code: .L_41cfa0:	 RIP: 41cfa0	 Bytes: 0
  br label %block_.L_41cfa0
block_.L_41cfa0:

  ; Code: jmpq .L_41cfa5	 RIP: 41cfa0	 Bytes: 5
  %loadMem_41cfa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfa0 = call %struct.Memory* @routine_jmpq_.L_41cfa5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfa0, i64 5, i64 5)
  store %struct.Memory* %call_41cfa0, %struct.Memory** %MEMORY

  br label %block_.L_41cfa5

  ; Code: .L_41cfa5:	 RIP: 41cfa5	 Bytes: 0
block_.L_41cfa5:

  ; Code: movl $0x3, %edi	 RIP: 41cfa5	 Bytes: 5
  %loadMem_41cfa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfa5 = call %struct.Memory* @routine_movl__0x3___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfa5)
  store %struct.Memory* %call_41cfa5, %struct.Memory** %MEMORY

  ; Code: movq $0x57aff0, %rsi	 RIP: 41cfaa	 Bytes: 10
  %loadMem_41cfaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfaa = call %struct.Memory* @routine_movq__0x57aff0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfaa)
  store %struct.Memory* %call_41cfaa, %struct.Memory** %MEMORY

  ; Code: movsd 0xc5fa4(%rip), %xmm0	 RIP: 41cfb4	 Bytes: 8
  %loadMem_41cfb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfb4 = call %struct.Memory* @routine_movsd_0xc5fa4__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfb4)
  store %struct.Memory* %call_41cfb4, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rax	 RIP: 41cfbc	 Bytes: 10
  %loadMem_41cfbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfbc = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfbc)
  store %struct.Memory* %call_41cfbc, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cfc6	 Bytes: 4
  %loadMem_41cfc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfc6 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfc6)
  store %struct.Memory* %call_41cfc6, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41cfca	 Bytes: 4
  %loadMem_41cfca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfca = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfca)
  store %struct.Memory* %call_41cfca, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41cfce	 Bytes: 3
  %loadMem_41cfce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfce = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfce)
  store %struct.Memory* %call_41cfce, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41cfd1	 Bytes: 3
  %loadMem_41cfd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfd1 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfd1)
  store %struct.Memory* %call_41cfd1, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x1c(%rdx)	 RIP: 41cfd4	 Bytes: 7
  %loadMem_41cfd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfd4 = call %struct.Memory* @routine_movl__0x1__0x1c__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfd4)
  store %struct.Memory* %call_41cfd4, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cfdb	 Bytes: 4
  %loadMem_41cfdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfdb = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfdb)
  store %struct.Memory* %call_41cfdb, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41cfdf	 Bytes: 4
  %loadMem_41cfdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfdf = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfdf)
  store %struct.Memory* %call_41cfdf, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41cfe3	 Bytes: 3
  %loadMem_41cfe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfe3 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfe3)
  store %struct.Memory* %call_41cfe3, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41cfe6	 Bytes: 3
  %loadMem_41cfe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfe6 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfe6)
  store %struct.Memory* %call_41cfe6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x20(%rdx)	 RIP: 41cfe9	 Bytes: 7
  %loadMem_41cfe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cfe9 = call %struct.Memory* @routine_movl__0x0__0x20__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cfe9)
  store %struct.Memory* %call_41cfe9, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41cff0	 Bytes: 4
  %loadMem_41cff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cff0 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cff0)
  store %struct.Memory* %call_41cff0, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41cff4	 Bytes: 4
  %loadMem_41cff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cff4 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cff4)
  store %struct.Memory* %call_41cff4, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41cff8	 Bytes: 3
  %loadMem_41cff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cff8 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cff8)
  store %struct.Memory* %call_41cff8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x24(%rax)	 RIP: 41cffb	 Bytes: 7
  %loadMem_41cffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41cffb = call %struct.Memory* @routine_movl__0x0__0x24__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41cffb)
  store %struct.Memory* %call_41cffb, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 41d002	 Bytes: 3
  %loadMem_41d002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d002 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d002)
  store %struct.Memory* %call_41d002, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41d005	 Bytes: 5
  %loadMem1_41d005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d005 = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d005, i64 390091, i64 5, i64 5)
  store %struct.Memory* %call1_41d005, %struct.Memory** %MEMORY

  %loadMem2_41d005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d005 = load i64, i64* %3
  %call2_41d005 = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41d005, %struct.Memory* %loadMem2_41d005)
  store %struct.Memory* %call2_41d005, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x3e0(%rbp)	 RIP: 41d00a	 Bytes: 8
  %loadMem_41d00a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d00a = call %struct.Memory* @routine_movsd__xmm0__MINUS0x3e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d00a)
  store %struct.Memory* %call_41d00a, %struct.Memory** %MEMORY

  ; Code: .L_41d012:	 RIP: 41d012	 Bytes: 0
  br label %block_.L_41d012
block_.L_41d012:

  ; Code: jmpq .L_41d017	 RIP: 41d012	 Bytes: 5
  %loadMem_41d012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d012 = call %struct.Memory* @routine_jmpq_.L_41d017(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d012, i64 5, i64 5)
  store %struct.Memory* %call_41d012, %struct.Memory** %MEMORY

  br label %block_.L_41d017

  ; Code: .L_41d017:	 RIP: 41d017	 Bytes: 0
block_.L_41d017:

  ; Code: jmpq .L_41d01c	 RIP: 41d017	 Bytes: 5
  %loadMem_41d017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d017 = call %struct.Memory* @routine_jmpq_.L_41d01c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d017, i64 5, i64 5)
  store %struct.Memory* %call_41d017, %struct.Memory** %MEMORY

  br label %block_.L_41d01c

  ; Code: .L_41d01c:	 RIP: 41d01c	 Bytes: 0
block_.L_41d01c:

  ; Code: jmpq .L_41d021	 RIP: 41d01c	 Bytes: 5
  %loadMem_41d01c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d01c = call %struct.Memory* @routine_jmpq_.L_41d021(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d01c, i64 5, i64 5)
  store %struct.Memory* %call_41d01c, %struct.Memory** %MEMORY

  br label %block_.L_41d021

  ; Code: .L_41d021:	 RIP: 41d021	 Bytes: 0
block_.L_41d021:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41d021	 Bytes: 3
  %loadMem_41d021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d021 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d021)
  store %struct.Memory* %call_41d021, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41d024	 Bytes: 3
  %loadMem_41d024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d024 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d024)
  store %struct.Memory* %call_41d024, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41d027	 Bytes: 3
  %loadMem_41d027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d027 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d027)
  store %struct.Memory* %call_41d027, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41ca76	 RIP: 41d02a	 Bytes: 5
  %loadMem_41d02a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d02a = call %struct.Memory* @routine_jmpq_.L_41ca76(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d02a, i64 -1460, i64 5)
  store %struct.Memory* %call_41d02a, %struct.Memory** %MEMORY

  br label %block_.L_41ca76

  ; Code: .L_41d02f:	 RIP: 41d02f	 Bytes: 0
block_.L_41d02f:

  ; Code: movl $0x2, %edi	 RIP: 41d02f	 Bytes: 5
  %loadMem_41d02f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d02f = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d02f)
  store %struct.Memory* %call_41d02f, %struct.Memory** %MEMORY

  ; Code: movq $0x57b00f, %rsi	 RIP: 41d034	 Bytes: 10
  %loadMem_41d034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d034 = call %struct.Memory* @routine_movq__0x57b00f___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d034)
  store %struct.Memory* %call_41d034, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41d03e	 Bytes: 2
  %loadMem_41d03e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d03e = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d03e)
  store %struct.Memory* %call_41d03e, %struct.Memory** %MEMORY

  ; Code: movsd 0xc5f18(%rip), %xmm0	 RIP: 41d040	 Bytes: 8
  %loadMem_41d040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d040 = call %struct.Memory* @routine_movsd_0xc5f18__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d040)
  store %struct.Memory* %call_41d040, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41d048	 Bytes: 5
  %loadMem1_41d048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d048 = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d048, i64 390024, i64 5, i64 5)
  store %struct.Memory* %call1_41d048, %struct.Memory** %MEMORY

  %loadMem2_41d048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d048 = load i64, i64* %3
  %call2_41d048 = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41d048, %struct.Memory* %loadMem2_41d048)
  store %struct.Memory* %call2_41d048, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41d04d	 Bytes: 7
  %loadMem_41d04d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d04d = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d04d)
  store %struct.Memory* %call_41d04d, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x3e8(%rbp)	 RIP: 41d054	 Bytes: 8
  %loadMem_41d054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d054 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x3e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d054)
  store %struct.Memory* %call_41d054, %struct.Memory** %MEMORY

  ; Code: .L_41d05c:	 RIP: 41d05c	 Bytes: 0
  br label %block_.L_41d05c
block_.L_41d05c:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41d05c	 Bytes: 7
  %loadMem_41d05c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d05c = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d05c)
  store %struct.Memory* %call_41d05c, %struct.Memory** %MEMORY

  ; Code: jge .L_41d192	 RIP: 41d063	 Bytes: 6
  %loadMem_41d063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d063 = call %struct.Memory* @routine_jge_.L_41d192(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d063, i8* %BRANCH_TAKEN, i64 303, i64 6, i64 6)
  store %struct.Memory* %call_41d063, %struct.Memory** %MEMORY

  %loadBr_41d063 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d063 = icmp eq i8 %loadBr_41d063, 1
  br i1 %cmpBr_41d063, label %block_.L_41d192, label %block_41d069

block_41d069:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41d069	 Bytes: 4
  %loadMem_41d069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d069 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d069)
  store %struct.Memory* %call_41d069, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41d06d	 Bytes: 8
  %loadMem_41d06d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d06d = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d06d)
  store %struct.Memory* %call_41d06d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41d075	 Bytes: 3
  %loadMem_41d075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d075 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d075)
  store %struct.Memory* %call_41d075, %struct.Memory** %MEMORY

  ; Code: je .L_41d17f	 RIP: 41d078	 Bytes: 6
  %loadMem_41d078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d078 = call %struct.Memory* @routine_je_.L_41d17f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d078, i8* %BRANCH_TAKEN, i64 263, i64 6, i64 6)
  store %struct.Memory* %call_41d078, %struct.Memory** %MEMORY

  %loadBr_41d078 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d078 = icmp eq i8 %loadBr_41d078, 1
  br i1 %cmpBr_41d078, label %block_.L_41d17f, label %block_41d07e

block_41d07e:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41d07e	 Bytes: 4
  %loadMem_41d07e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d07e = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d07e)
  store %struct.Memory* %call_41d07e, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41d082	 Bytes: 8
  %loadMem_41d082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d082 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d082)
  store %struct.Memory* %call_41d082, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %ecx	 RIP: 41d08a	 Bytes: 3
  %loadMem_41d08a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d08a = call %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d08a)
  store %struct.Memory* %call_41d08a, %struct.Memory** %MEMORY

  ; Code: je .L_41d0a8	 RIP: 41d08d	 Bytes: 6
  %loadMem_41d08d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d08d = call %struct.Memory* @routine_je_.L_41d0a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d08d, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_41d08d, %struct.Memory** %MEMORY

  %loadBr_41d08d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d08d = icmp eq i8 %loadBr_41d08d, 1
  br i1 %cmpBr_41d08d, label %block_.L_41d0a8, label %block_41d093

block_41d093:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41d093	 Bytes: 4
  %loadMem_41d093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d093 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d093)
  store %struct.Memory* %call_41d093, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41d097	 Bytes: 8
  %loadMem_41d097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d097 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d097)
  store %struct.Memory* %call_41d097, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %ecx	 RIP: 41d09f	 Bytes: 3
  %loadMem_41d09f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d09f = call %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d09f)
  store %struct.Memory* %call_41d09f, %struct.Memory** %MEMORY

  ; Code: jne .L_41d17a	 RIP: 41d0a2	 Bytes: 6
  %loadMem_41d0a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0a2 = call %struct.Memory* @routine_jne_.L_41d17a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0a2, i8* %BRANCH_TAKEN, i64 216, i64 6, i64 6)
  store %struct.Memory* %call_41d0a2, %struct.Memory** %MEMORY

  %loadBr_41d0a2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d0a2 = icmp eq i8 %loadBr_41d0a2, 1
  br i1 %cmpBr_41d0a2, label %block_.L_41d17a, label %block_.L_41d0a8

  ; Code: .L_41d0a8:	 RIP: 41d0a8	 Bytes: 0
block_.L_41d0a8:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41d0a8	 Bytes: 10
  %loadMem_41d0a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0a8 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0a8)
  store %struct.Memory* %call_41d0a8, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d0b2	 Bytes: 4
  %loadMem_41d0b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0b2 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0b2)
  store %struct.Memory* %call_41d0b2, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d0b6	 Bytes: 4
  %loadMem_41d0b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0b6 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0b6)
  store %struct.Memory* %call_41d0b6, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d0ba	 Bytes: 3
  %loadMem_41d0ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0ba = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0ba)
  store %struct.Memory* %call_41d0ba, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, 0x1c(%rax)	 RIP: 41d0bd	 Bytes: 4
  %loadMem_41d0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0bd = call %struct.Memory* @routine_cmpl__0x4__0x1c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0bd)
  store %struct.Memory* %call_41d0bd, %struct.Memory** %MEMORY

  ; Code: je .L_41d0f5	 RIP: 41d0c1	 Bytes: 6
  %loadMem_41d0c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0c1 = call %struct.Memory* @routine_je_.L_41d0f5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0c1, i8* %BRANCH_TAKEN, i64 52, i64 6, i64 6)
  store %struct.Memory* %call_41d0c1, %struct.Memory** %MEMORY

  %loadBr_41d0c1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d0c1 = icmp eq i8 %loadBr_41d0c1, 1
  br i1 %cmpBr_41d0c1, label %block_.L_41d0f5, label %block_41d0c7

block_41d0c7:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41d0c7	 Bytes: 10
  %loadMem_41d0c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0c7 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0c7)
  store %struct.Memory* %call_41d0c7, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d0d1	 Bytes: 4
  %loadMem_41d0d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0d1 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0d1)
  store %struct.Memory* %call_41d0d1, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d0d5	 Bytes: 4
  %loadMem_41d0d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0d5 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0d5)
  store %struct.Memory* %call_41d0d5, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41d0d9	 Bytes: 3
  %loadMem_41d0d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0d9 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0d9)
  store %struct.Memory* %call_41d0d9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41d0dc	 Bytes: 3
  %loadMem_41d0dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0dc = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0dc)
  store %struct.Memory* %call_41d0dc, %struct.Memory** %MEMORY

  ; Code: movl 0x1c(%rdx), %esi	 RIP: 41d0df	 Bytes: 3
  %loadMem_41d0df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0df = call %struct.Memory* @routine_movl_0x1c__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0df)
  store %struct.Memory* %call_41d0df, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d0e2	 Bytes: 4
  %loadMem_41d0e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0e2 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0e2)
  store %struct.Memory* %call_41d0e2, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d0e6	 Bytes: 4
  %loadMem_41d0e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0e6 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0e6)
  store %struct.Memory* %call_41d0e6, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d0ea	 Bytes: 3
  %loadMem_41d0ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0ea = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0ea)
  store %struct.Memory* %call_41d0ea, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x40(%rax)	 RIP: 41d0ed	 Bytes: 3
  %loadMem_41d0ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0ed = call %struct.Memory* @routine_movl__esi__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0ed)
  store %struct.Memory* %call_41d0ed, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d175	 RIP: 41d0f0	 Bytes: 5
  %loadMem_41d0f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0f0 = call %struct.Memory* @routine_jmpq_.L_41d175(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0f0, i64 133, i64 5)
  store %struct.Memory* %call_41d0f0, %struct.Memory** %MEMORY

  br label %block_.L_41d175

  ; Code: .L_41d0f5:	 RIP: 41d0f5	 Bytes: 0
block_.L_41d0f5:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41d0f5	 Bytes: 10
  %loadMem_41d0f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0f5 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0f5)
  store %struct.Memory* %call_41d0f5, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d0ff	 Bytes: 4
  %loadMem_41d0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d0ff = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d0ff)
  store %struct.Memory* %call_41d0ff, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d103	 Bytes: 4
  %loadMem_41d103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d103 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d103)
  store %struct.Memory* %call_41d103, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d107	 Bytes: 3
  %loadMem_41d107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d107 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d107)
  store %struct.Memory* %call_41d107, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x14(%rax)	 RIP: 41d10a	 Bytes: 4
  %loadMem_41d10a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d10a = call %struct.Memory* @routine_cmpl__0x0__0x14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d10a)
  store %struct.Memory* %call_41d10a, %struct.Memory** %MEMORY

  ; Code: je .L_41d133	 RIP: 41d10e	 Bytes: 6
  %loadMem_41d10e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d10e = call %struct.Memory* @routine_je_.L_41d133(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d10e, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_41d10e, %struct.Memory** %MEMORY

  %loadBr_41d10e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d10e = icmp eq i8 %loadBr_41d10e, 1
  br i1 %cmpBr_41d10e, label %block_.L_41d133, label %block_41d114

block_41d114:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41d114	 Bytes: 10
  %loadMem_41d114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d114 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d114)
  store %struct.Memory* %call_41d114, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d11e	 Bytes: 4
  %loadMem_41d11e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d11e = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d11e)
  store %struct.Memory* %call_41d11e, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d122	 Bytes: 4
  %loadMem_41d122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d122 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d122)
  store %struct.Memory* %call_41d122, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d126	 Bytes: 3
  %loadMem_41d126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d126 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d126)
  store %struct.Memory* %call_41d126, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0x14(%rax)	 RIP: 41d129	 Bytes: 4
  %loadMem_41d129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d129 = call %struct.Memory* @routine_cmpl__0x2__0x14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d129)
  store %struct.Memory* %call_41d129, %struct.Memory** %MEMORY

  ; Code: jne .L_41d154	 RIP: 41d12d	 Bytes: 6
  %loadMem_41d12d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d12d = call %struct.Memory* @routine_jne_.L_41d154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d12d, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_41d12d, %struct.Memory** %MEMORY

  %loadBr_41d12d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d12d = icmp eq i8 %loadBr_41d12d, 1
  br i1 %cmpBr_41d12d, label %block_.L_41d154, label %block_.L_41d133

  ; Code: .L_41d133:	 RIP: 41d133	 Bytes: 0
block_.L_41d133:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41d133	 Bytes: 10
  %loadMem_41d133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d133 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d133)
  store %struct.Memory* %call_41d133, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d13d	 Bytes: 4
  %loadMem_41d13d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d13d = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d13d)
  store %struct.Memory* %call_41d13d, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d141	 Bytes: 4
  %loadMem_41d141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d141 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d141)
  store %struct.Memory* %call_41d141, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d145	 Bytes: 3
  %loadMem_41d145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d145 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d145)
  store %struct.Memory* %call_41d145, %struct.Memory** %MEMORY

  ; Code: movl $0x3, 0x40(%rax)	 RIP: 41d148	 Bytes: 7
  %loadMem_41d148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d148 = call %struct.Memory* @routine_movl__0x3__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d148)
  store %struct.Memory* %call_41d148, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d170	 RIP: 41d14f	 Bytes: 5
  %loadMem_41d14f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d14f = call %struct.Memory* @routine_jmpq_.L_41d170(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d14f, i64 33, i64 5)
  store %struct.Memory* %call_41d14f, %struct.Memory** %MEMORY

  br label %block_.L_41d170

  ; Code: .L_41d154:	 RIP: 41d154	 Bytes: 0
block_.L_41d154:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41d154	 Bytes: 10
  %loadMem_41d154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d154 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d154)
  store %struct.Memory* %call_41d154, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d15e	 Bytes: 4
  %loadMem_41d15e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d15e = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d15e)
  store %struct.Memory* %call_41d15e, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d162	 Bytes: 4
  %loadMem_41d162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d162 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d162)
  store %struct.Memory* %call_41d162, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d166	 Bytes: 3
  %loadMem_41d166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d166 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d166)
  store %struct.Memory* %call_41d166, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x40(%rax)	 RIP: 41d169	 Bytes: 7
  %loadMem_41d169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d169 = call %struct.Memory* @routine_movl__0x1__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d169)
  store %struct.Memory* %call_41d169, %struct.Memory** %MEMORY

  ; Code: .L_41d170:	 RIP: 41d170	 Bytes: 0
  br label %block_.L_41d170
block_.L_41d170:

  ; Code: jmpq .L_41d175	 RIP: 41d170	 Bytes: 5
  %loadMem_41d170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d170 = call %struct.Memory* @routine_jmpq_.L_41d175(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d170, i64 5, i64 5)
  store %struct.Memory* %call_41d170, %struct.Memory** %MEMORY

  br label %block_.L_41d175

  ; Code: .L_41d175:	 RIP: 41d175	 Bytes: 0
block_.L_41d175:

  ; Code: jmpq .L_41d17a	 RIP: 41d175	 Bytes: 5
  %loadMem_41d175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d175 = call %struct.Memory* @routine_jmpq_.L_41d17a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d175, i64 5, i64 5)
  store %struct.Memory* %call_41d175, %struct.Memory** %MEMORY

  br label %block_.L_41d17a

  ; Code: .L_41d17a:	 RIP: 41d17a	 Bytes: 0
block_.L_41d17a:

  ; Code: jmpq .L_41d17f	 RIP: 41d17a	 Bytes: 5
  %loadMem_41d17a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d17a = call %struct.Memory* @routine_jmpq_.L_41d17f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d17a, i64 5, i64 5)
  store %struct.Memory* %call_41d17a, %struct.Memory** %MEMORY

  br label %block_.L_41d17f

  ; Code: .L_41d17f:	 RIP: 41d17f	 Bytes: 0
block_.L_41d17f:

  ; Code: jmpq .L_41d184	 RIP: 41d17f	 Bytes: 5
  %loadMem_41d17f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d17f = call %struct.Memory* @routine_jmpq_.L_41d184(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d17f, i64 5, i64 5)
  store %struct.Memory* %call_41d17f, %struct.Memory** %MEMORY

  br label %block_.L_41d184

  ; Code: .L_41d184:	 RIP: 41d184	 Bytes: 0
block_.L_41d184:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41d184	 Bytes: 3
  %loadMem_41d184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d184 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d184)
  store %struct.Memory* %call_41d184, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41d187	 Bytes: 3
  %loadMem_41d187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d187 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d187)
  store %struct.Memory* %call_41d187, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41d18a	 Bytes: 3
  %loadMem_41d18a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d18a = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d18a)
  store %struct.Memory* %call_41d18a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d05c	 RIP: 41d18d	 Bytes: 5
  %loadMem_41d18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d18d = call %struct.Memory* @routine_jmpq_.L_41d05c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d18d, i64 -305, i64 5)
  store %struct.Memory* %call_41d18d, %struct.Memory** %MEMORY

  br label %block_.L_41d05c

  ; Code: .L_41d192:	 RIP: 41d192	 Bytes: 0
block_.L_41d192:

  ; Code: movl $0x2, %edi	 RIP: 41d192	 Bytes: 5
  %loadMem_41d192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d192 = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d192)
  store %struct.Memory* %call_41d192, %struct.Memory** %MEMORY

  ; Code: movq $0x57b01d, %rsi	 RIP: 41d197	 Bytes: 10
  %loadMem_41d197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d197 = call %struct.Memory* @routine_movq__0x57b01d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d197)
  store %struct.Memory* %call_41d197, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41d1a1	 Bytes: 2
  %loadMem_41d1a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1a1 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1a1)
  store %struct.Memory* %call_41d1a1, %struct.Memory** %MEMORY

  ; Code: movsd 0xc5db5(%rip), %xmm0	 RIP: 41d1a3	 Bytes: 8
  %loadMem_41d1a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1a3 = call %struct.Memory* @routine_movsd_0xc5db5__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1a3)
  store %struct.Memory* %call_41d1a3, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41d1ab	 Bytes: 5
  %loadMem1_41d1ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d1ab = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d1ab, i64 389669, i64 5, i64 5)
  store %struct.Memory* %call1_41d1ab, %struct.Memory** %MEMORY

  %loadMem2_41d1ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d1ab = load i64, i64* %3
  %call2_41d1ab = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41d1ab, %struct.Memory* %loadMem2_41d1ab)
  store %struct.Memory* %call2_41d1ab, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41d1b0	 Bytes: 7
  %loadMem_41d1b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1b0 = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1b0)
  store %struct.Memory* %call_41d1b0, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x3f0(%rbp)	 RIP: 41d1b7	 Bytes: 8
  %loadMem_41d1b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1b7 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x3f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1b7)
  store %struct.Memory* %call_41d1b7, %struct.Memory** %MEMORY

  ; Code: .L_41d1bf:	 RIP: 41d1bf	 Bytes: 0
  br label %block_.L_41d1bf
block_.L_41d1bf:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41d1bf	 Bytes: 7
  %loadMem_41d1bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1bf = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1bf)
  store %struct.Memory* %call_41d1bf, %struct.Memory** %MEMORY

  ; Code: jge .L_41d23c	 RIP: 41d1c6	 Bytes: 6
  %loadMem_41d1c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1c6 = call %struct.Memory* @routine_jge_.L_41d23c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1c6, i8* %BRANCH_TAKEN, i64 118, i64 6, i64 6)
  store %struct.Memory* %call_41d1c6, %struct.Memory** %MEMORY

  %loadBr_41d1c6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d1c6 = icmp eq i8 %loadBr_41d1c6, 1
  br i1 %cmpBr_41d1c6, label %block_.L_41d23c, label %block_41d1cc

block_41d1cc:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41d1cc	 Bytes: 4
  %loadMem_41d1cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1cc = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1cc)
  store %struct.Memory* %call_41d1cc, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41d1d0	 Bytes: 8
  %loadMem_41d1d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1d0 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1d0)
  store %struct.Memory* %call_41d1d0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41d1d8	 Bytes: 3
  %loadMem_41d1d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1d8 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1d8)
  store %struct.Memory* %call_41d1d8, %struct.Memory** %MEMORY

  ; Code: je .L_41d229	 RIP: 41d1db	 Bytes: 6
  %loadMem_41d1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1db = call %struct.Memory* @routine_je_.L_41d229(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1db, i8* %BRANCH_TAKEN, i64 78, i64 6, i64 6)
  store %struct.Memory* %call_41d1db, %struct.Memory** %MEMORY

  %loadBr_41d1db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d1db = icmp eq i8 %loadBr_41d1db, 1
  br i1 %cmpBr_41d1db, label %block_.L_41d229, label %block_41d1e1

block_41d1e1:
  ; Code: movl $0x4c, %eax	 RIP: 41d1e1	 Bytes: 5
  %loadMem_41d1e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1e1 = call %struct.Memory* @routine_movl__0x4c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1e1)
  store %struct.Memory* %call_41d1e1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41d1e6	 Bytes: 2
  %loadMem_41d1e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1e6 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1e6)
  store %struct.Memory* %call_41d1e6, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rcx	 RIP: 41d1e8	 Bytes: 10
  %loadMem_41d1e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1e8 = call %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1e8)
  store %struct.Memory* %call_41d1e8, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41d1f2	 Bytes: 4
  %loadMem_41d1f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1f2 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1f2)
  store %struct.Memory* %call_41d1f2, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41d1f6	 Bytes: 4
  %loadMem_41d1f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1f6 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1f6)
  store %struct.Memory* %call_41d1f6, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdi	 RIP: 41d1fa	 Bytes: 3
  %loadMem_41d1fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1fa = call %struct.Memory* @routine_movq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1fa)
  store %struct.Memory* %call_41d1fa, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41d1fd	 Bytes: 3
  %loadMem_41d1fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d1fd = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d1fd)
  store %struct.Memory* %call_41d1fd, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x80(%rbp)	 RIP: 41d200	 Bytes: 4
  %loadMem_41d200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d200 = call %struct.Memory* @routine_movq__rdi__MINUS0x80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d200)
  store %struct.Memory* %call_41d200, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41d204	 Bytes: 4
  %loadMem_41d204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d204 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d204)
  store %struct.Memory* %call_41d204, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41d208	 Bytes: 4
  %loadMem_41d208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d208 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d208)
  store %struct.Memory* %call_41d208, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdi	 RIP: 41d20c	 Bytes: 3
  %loadMem_41d20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d20c = call %struct.Memory* @routine_movq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d20c)
  store %struct.Memory* %call_41d20c, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41d20f	 Bytes: 3
  %loadMem_41d20f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d20f = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d20f)
  store %struct.Memory* %call_41d20f, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %rsi	 RIP: 41d212	 Bytes: 4
  %loadMem_41d212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d212 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d212)
  store %struct.Memory* %call_41d212, %struct.Memory** %MEMORY

  ; Code: movslq 0x8(%rsi), %rsi	 RIP: 41d216	 Bytes: 4
  %loadMem_41d216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d216 = call %struct.Memory* @routine_movslq_0x8__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d216)
  store %struct.Memory* %call_41d216, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41d21a	 Bytes: 4
  %loadMem_41d21a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d21a = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d21a)
  store %struct.Memory* %call_41d21a, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 41d21e	 Bytes: 3
  %loadMem_41d21e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d21e = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d21e)
  store %struct.Memory* %call_41d21e, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41d221	 Bytes: 3
  %loadMem_41d221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d221 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d221)
  store %struct.Memory* %call_41d221, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41d224	 Bytes: 5
  %loadMem1_41d224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d224 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d224, i64 -114996, i64 5, i64 5)
  store %struct.Memory* %call1_41d224, %struct.Memory** %MEMORY

  %loadMem2_41d224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d224 = load i64, i64* %3
  %call2_41d224 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41d224, %struct.Memory* %loadMem2_41d224)
  store %struct.Memory* %call2_41d224, %struct.Memory** %MEMORY

  ; Code: .L_41d229:	 RIP: 41d229	 Bytes: 0
  br label %block_.L_41d229
block_.L_41d229:

  ; Code: jmpq .L_41d22e	 RIP: 41d229	 Bytes: 5
  %loadMem_41d229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d229 = call %struct.Memory* @routine_jmpq_.L_41d22e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d229, i64 5, i64 5)
  store %struct.Memory* %call_41d229, %struct.Memory** %MEMORY

  br label %block_.L_41d22e

  ; Code: .L_41d22e:	 RIP: 41d22e	 Bytes: 0
block_.L_41d22e:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41d22e	 Bytes: 3
  %loadMem_41d22e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d22e = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d22e)
  store %struct.Memory* %call_41d22e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41d231	 Bytes: 3
  %loadMem_41d231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d231 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d231)
  store %struct.Memory* %call_41d231, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41d234	 Bytes: 3
  %loadMem_41d234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d234 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d234)
  store %struct.Memory* %call_41d234, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d1bf	 RIP: 41d237	 Bytes: 5
  %loadMem_41d237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d237 = call %struct.Memory* @routine_jmpq_.L_41d1bf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d237, i64 -120, i64 5)
  store %struct.Memory* %call_41d237, %struct.Memory** %MEMORY

  br label %block_.L_41d1bf

  ; Code: .L_41d23c:	 RIP: 41d23c	 Bytes: 0
block_.L_41d23c:

  ; Code: callq .get_last_move	 RIP: 41d23c	 Bytes: 5
  %loadMem1_41d23c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d23c = call %struct.Memory* @routine_callq_.get_last_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d23c, i64 -59404, i64 5, i64 5)
  store %struct.Memory* %call1_41d23c, %struct.Memory** %MEMORY

  %loadMem2_41d23c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d23c = load i64, i64* %3
  %call2_41d23c = call %struct.Memory* @sub_40ea30.get_last_move(%struct.State* %0, i64  %loadPC_41d23c, %struct.Memory* %loadMem2_41d23c)
  store %struct.Memory* %call2_41d23c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 41d241	 Bytes: 3
  %loadMem_41d241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d241 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d241)
  store %struct.Memory* %call_41d241, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x24(%rbp)	 RIP: 41d244	 Bytes: 4
  %loadMem_41d244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d244 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d244)
  store %struct.Memory* %call_41d244, %struct.Memory** %MEMORY

  ; Code: je .L_41d2b9	 RIP: 41d248	 Bytes: 6
  %loadMem_41d248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d248 = call %struct.Memory* @routine_je_.L_41d2b9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d248, i8* %BRANCH_TAKEN, i64 113, i64 6, i64 6)
  store %struct.Memory* %call_41d248, %struct.Memory** %MEMORY

  %loadBr_41d248 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d248 = icmp eq i8 %loadBr_41d248, 1
  br i1 %cmpBr_41d248, label %block_.L_41d2b9, label %block_41d24e

block_41d24e:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41d24e	 Bytes: 10
  %loadMem_41d24e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d24e = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d24e)
  store %struct.Memory* %call_41d24e, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rcx	 RIP: 41d258	 Bytes: 4
  %loadMem_41d258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d258 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d258)
  store %struct.Memory* %call_41d258, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d25c	 Bytes: 4
  %loadMem_41d25c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d25c = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d25c)
  store %struct.Memory* %call_41d25c, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d260	 Bytes: 3
  %loadMem_41d260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d260 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d260)
  store %struct.Memory* %call_41d260, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x40(%rax)	 RIP: 41d263	 Bytes: 4
  %loadMem_41d263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d263 = call %struct.Memory* @routine_cmpl__0x0__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d263)
  store %struct.Memory* %call_41d263, %struct.Memory** %MEMORY

  ; Code: jne .L_41d2b9	 RIP: 41d267	 Bytes: 6
  %loadMem_41d267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d267 = call %struct.Memory* @routine_jne_.L_41d2b9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d267, i8* %BRANCH_TAKEN, i64 82, i64 6, i64 6)
  store %struct.Memory* %call_41d267, %struct.Memory** %MEMORY

  %loadBr_41d267 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d267 = icmp eq i8 %loadBr_41d267, 1
  br i1 %cmpBr_41d267, label %block_.L_41d2b9, label %block_41d26d

block_41d26d:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41d26d	 Bytes: 10
  %loadMem_41d26d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d26d = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d26d)
  store %struct.Memory* %call_41d26d, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rcx	 RIP: 41d277	 Bytes: 4
  %loadMem_41d277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d277 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d277)
  store %struct.Memory* %call_41d277, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d27b	 Bytes: 4
  %loadMem_41d27b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d27b = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d27b)
  store %struct.Memory* %call_41d27b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d27f	 Bytes: 3
  %loadMem_41d27f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d27f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d27f)
  store %struct.Memory* %call_41d27f, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rax), %edx	 RIP: 41d282	 Bytes: 3
  %loadMem_41d282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d282 = call %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d282)
  store %struct.Memory* %call_41d282, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0xab0ed0	 RIP: 41d285	 Bytes: 7
  %loadMem_41d285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d285 = call %struct.Memory* @routine_movl__edx__0xab0ed0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d285)
  store %struct.Memory* %call_41d285, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x14(%rbp)	 RIP: 41d28c	 Bytes: 4
  %loadMem_41d28c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d28c = call %struct.Memory* @routine_cmpl__0x0__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d28c)
  store %struct.Memory* %call_41d28c, %struct.Memory** %MEMORY

  ; Code: je .L_41d2b4	 RIP: 41d290	 Bytes: 6
  %loadMem_41d290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d290 = call %struct.Memory* @routine_je_.L_41d2b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d290, i8* %BRANCH_TAKEN, i64 36, i64 6, i64 6)
  store %struct.Memory* %call_41d290, %struct.Memory** %MEMORY

  %loadBr_41d290 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d290 = icmp eq i8 %loadBr_41d290, 1
  br i1 %cmpBr_41d290, label %block_.L_41d2b4, label %block_41d296

block_41d296:
  ; Code: movq $0x57b02e, %rdi	 RIP: 41d296	 Bytes: 10
  %loadMem_41d296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d296 = call %struct.Memory* @routine_movq__0x57b02e___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d296)
  store %struct.Memory* %call_41d296, %struct.Memory** %MEMORY

  ; Code: movl 0xab0ed0, %esi	 RIP: 41d2a0	 Bytes: 7
  %loadMem_41d2a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2a0 = call %struct.Memory* @routine_movl_0xab0ed0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2a0)
  store %struct.Memory* %call_41d2a0, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41d2a7	 Bytes: 2
  %loadMem_41d2a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2a7 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2a7)
  store %struct.Memory* %call_41d2a7, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 41d2a9	 Bytes: 5
  %loadMem1_41d2a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d2a9 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d2a9, i64 215815, i64 5, i64 5)
  store %struct.Memory* %call1_41d2a9, %struct.Memory** %MEMORY

  %loadMem2_41d2a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d2a9 = load i64, i64* %3
  %call2_41d2a9 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_41d2a9, %struct.Memory* %loadMem2_41d2a9)
  store %struct.Memory* %call2_41d2a9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3f4(%rbp)	 RIP: 41d2ae	 Bytes: 6
  %loadMem_41d2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2ae = call %struct.Memory* @routine_movl__eax__MINUS0x3f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2ae)
  store %struct.Memory* %call_41d2ae, %struct.Memory** %MEMORY

  ; Code: .L_41d2b4:	 RIP: 41d2b4	 Bytes: 0
  br label %block_.L_41d2b4
block_.L_41d2b4:

  ; Code: jmpq .L_41d2c4	 RIP: 41d2b4	 Bytes: 5
  %loadMem_41d2b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2b4 = call %struct.Memory* @routine_jmpq_.L_41d2c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2b4, i64 16, i64 5)
  store %struct.Memory* %call_41d2b4, %struct.Memory** %MEMORY

  br label %block_.L_41d2c4

  ; Code: .L_41d2b9:	 RIP: 41d2b9	 Bytes: 0
block_.L_41d2b9:

  ; Code: movl $0x0, 0xab0ed0	 RIP: 41d2b9	 Bytes: 11
  %loadMem_41d2b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2b9 = call %struct.Memory* @routine_movl__0x0__0xab0ed0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2b9)
  store %struct.Memory* %call_41d2b9, %struct.Memory** %MEMORY

  ; Code: .L_41d2c4:	 RIP: 41d2c4	 Bytes: 0
  br label %block_.L_41d2c4
block_.L_41d2c4:

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41d2c4	 Bytes: 7
  %loadMem_41d2c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2c4 = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2c4)
  store %struct.Memory* %call_41d2c4, %struct.Memory** %MEMORY

  ; Code: .L_41d2cb:	 RIP: 41d2cb	 Bytes: 0
  br label %block_.L_41d2cb
block_.L_41d2cb:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41d2cb	 Bytes: 7
  %loadMem_41d2cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2cb = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2cb)
  store %struct.Memory* %call_41d2cb, %struct.Memory** %MEMORY

  ; Code: jge .L_41d6ee	 RIP: 41d2d2	 Bytes: 6
  %loadMem_41d2d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2d2 = call %struct.Memory* @routine_jge_.L_41d6ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2d2, i8* %BRANCH_TAKEN, i64 1052, i64 6, i64 6)
  store %struct.Memory* %call_41d2d2, %struct.Memory** %MEMORY

  %loadBr_41d2d2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d2d2 = icmp eq i8 %loadBr_41d2d2, 1
  br i1 %cmpBr_41d2d2, label %block_.L_41d6ee, label %block_41d2d8

block_41d2d8:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41d2d8	 Bytes: 4
  %loadMem_41d2d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2d8 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2d8)
  store %struct.Memory* %call_41d2d8, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41d2dc	 Bytes: 8
  %loadMem_41d2dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2dc = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2dc)
  store %struct.Memory* %call_41d2dc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41d2e4	 Bytes: 3
  %loadMem_41d2e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2e4 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2e4)
  store %struct.Memory* %call_41d2e4, %struct.Memory** %MEMORY

  ; Code: je .L_41d6db	 RIP: 41d2e7	 Bytes: 6
  %loadMem_41d2e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2e7 = call %struct.Memory* @routine_je_.L_41d6db(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2e7, i8* %BRANCH_TAKEN, i64 1012, i64 6, i64 6)
  store %struct.Memory* %call_41d2e7, %struct.Memory** %MEMORY

  %loadBr_41d2e7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d2e7 = icmp eq i8 %loadBr_41d2e7, 1
  br i1 %cmpBr_41d2e7, label %block_.L_41d6db, label %block_41d2ed

block_41d2ed:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41d2ed	 Bytes: 4
  %loadMem_41d2ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2ed = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2ed)
  store %struct.Memory* %call_41d2ed, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41d2f1	 Bytes: 8
  %loadMem_41d2f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2f1 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2f1)
  store %struct.Memory* %call_41d2f1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 41d2f9	 Bytes: 3
  %loadMem_41d2f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2f9 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2f9)
  store %struct.Memory* %call_41d2f9, %struct.Memory** %MEMORY

  ; Code: je .L_41d6db	 RIP: 41d2fc	 Bytes: 6
  %loadMem_41d2fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d2fc = call %struct.Memory* @routine_je_.L_41d6db(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d2fc, i8* %BRANCH_TAKEN, i64 991, i64 6, i64 6)
  store %struct.Memory* %call_41d2fc, %struct.Memory** %MEMORY

  %loadBr_41d2fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d2fc = icmp eq i8 %loadBr_41d2fc, 1
  br i1 %cmpBr_41d2fc, label %block_.L_41d6db, label %block_41d302

block_41d302:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41d302	 Bytes: 10
  %loadMem_41d302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d302 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d302)
  store %struct.Memory* %call_41d302, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d30c	 Bytes: 4
  %loadMem_41d30c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d30c = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d30c)
  store %struct.Memory* %call_41d30c, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d310	 Bytes: 4
  %loadMem_41d310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d310 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d310)
  store %struct.Memory* %call_41d310, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d314	 Bytes: 3
  %loadMem_41d314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d314 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d314)
  store %struct.Memory* %call_41d314, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rax), %edx	 RIP: 41d317	 Bytes: 3
  %loadMem_41d317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d317 = call %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d317)
  store %struct.Memory* %call_41d317, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41d31a	 Bytes: 3
  %loadMem_41d31a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d31a = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d31a)
  store %struct.Memory* %call_41d31a, %struct.Memory** %MEMORY

  ; Code: jne .L_41d6db	 RIP: 41d31d	 Bytes: 6
  %loadMem_41d31d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d31d = call %struct.Memory* @routine_jne_.L_41d6db(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d31d, i8* %BRANCH_TAKEN, i64 958, i64 6, i64 6)
  store %struct.Memory* %call_41d31d, %struct.Memory** %MEMORY

  %loadBr_41d31d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d31d = icmp eq i8 %loadBr_41d31d, 1
  br i1 %cmpBr_41d31d, label %block_.L_41d6db, label %block_41d323

block_41d323:
  ; Code: leaq -0x88(%rbp), %rdi	 RIP: 41d323	 Bytes: 7
  %loadMem_41d323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d323 = call %struct.Memory* @routine_leaq_MINUS0x88__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d323)
  store %struct.Memory* %call_41d323, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 41d32a	 Bytes: 2
  %loadMem_41d32a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d32a = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d32a)
  store %struct.Memory* %call_41d32a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41d32c	 Bytes: 2
  %loadMem_41d32c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d32c = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d32c)
  store %struct.Memory* %call_41d32c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41d32e	 Bytes: 2
  %loadMem_41d32e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d32e = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d32e)
  store %struct.Memory* %call_41d32e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 41d330	 Bytes: 2
  %loadMem_41d330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d330 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d330)
  store %struct.Memory* %call_41d330, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 41d332	 Bytes: 3
  %loadMem_41d332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d332 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d332)
  store %struct.Memory* %call_41d332, %struct.Memory** %MEMORY

  ; Code: callq .set_eyevalue	 RIP: 41d335	 Bytes: 5
  %loadMem1_41d335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d335 = call %struct.Memory* @routine_callq_.set_eyevalue(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d335, i64 114795, i64 5, i64 5)
  store %struct.Memory* %call1_41d335, %struct.Memory** %MEMORY

  %loadMem2_41d335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d335 = load i64, i64* %3
  %call2_41d335 = call %struct.Memory* @sub_4393a0.set_eyevalue(%struct.State* %0, i64  %loadPC_41d335, %struct.Memory* %loadMem2_41d335)
  store %struct.Memory* %call2_41d335, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edi	 RIP: 41d33a	 Bytes: 5
  %loadMem_41d33a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d33a = call %struct.Memory* @routine_movl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d33a)
  store %struct.Memory* %call_41d33a, %struct.Memory** %MEMORY

  ; Code: leaq -0x88(%rbp), %rsi	 RIP: 41d33f	 Bytes: 7
  %loadMem_41d33f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d33f = call %struct.Memory* @routine_leaq_MINUS0x88__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d33f)
  store %struct.Memory* %call_41d33f, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41d346	 Bytes: 2
  %loadMem_41d346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d346 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d346)
  store %struct.Memory* %call_41d346, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %r9	 RIP: 41d348	 Bytes: 10
  %loadMem_41d348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d348 = call %struct.Memory* @routine_movq__0xb4bd20___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d348)
  store %struct.Memory* %call_41d348, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %r10	 RIP: 41d352	 Bytes: 8
  %loadMem_41d352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d352 = call %struct.Memory* @routine_movq_0xab0fe0___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d352)
  store %struct.Memory* %call_41d352, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %r11	 RIP: 41d35a	 Bytes: 4
  %loadMem_41d35a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d35a = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d35a)
  store %struct.Memory* %call_41d35a, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %r11, %r11	 RIP: 41d35e	 Bytes: 4
  %loadMem_41d35e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d35e = call %struct.Memory* @routine_imulq__0x4c___r11___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d35e)
  store %struct.Memory* %call_41d35e, %struct.Memory** %MEMORY

  ; Code: movq %r9, %rbx	 RIP: 41d362	 Bytes: 3
  %loadMem_41d362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d362 = call %struct.Memory* @routine_movq__r9___rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d362)
  store %struct.Memory* %call_41d362, %struct.Memory** %MEMORY

  ; Code: addq %r11, %rbx	 RIP: 41d365	 Bytes: 3
  %loadMem_41d365 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d365 = call %struct.Memory* @routine_addq__r11___rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d365)
  store %struct.Memory* %call_41d365, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rbx), %r11	 RIP: 41d368	 Bytes: 4
  %loadMem_41d368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d368 = call %struct.Memory* @routine_movslq_0x4__rbx____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d368)
  store %struct.Memory* %call_41d368, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %r11, %r11	 RIP: 41d36c	 Bytes: 4
  %loadMem_41d36c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d36c = call %struct.Memory* @routine_imulq__0x68___r11___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d36c)
  store %struct.Memory* %call_41d36c, %struct.Memory** %MEMORY

  ; Code: addq %r11, %r10	 RIP: 41d370	 Bytes: 3
  %loadMem_41d370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d370 = call %struct.Memory* @routine_addq__r11___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d370)
  store %struct.Memory* %call_41d370, %struct.Memory** %MEMORY

  ; Code: movss 0x38(%r10), %xmm0	 RIP: 41d373	 Bytes: 6
  %loadMem_41d373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d373 = call %struct.Memory* @routine_movss_0x38__r10____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d373)
  store %struct.Memory* %call_41d373, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %r10	 RIP: 41d379	 Bytes: 8
  %loadMem_41d379 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d379 = call %struct.Memory* @routine_movq_0xab0fe0___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d379)
  store %struct.Memory* %call_41d379, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %r11	 RIP: 41d381	 Bytes: 4
  %loadMem_41d381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d381 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d381)
  store %struct.Memory* %call_41d381, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %r11, %r11	 RIP: 41d385	 Bytes: 4
  %loadMem_41d385 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d385 = call %struct.Memory* @routine_imulq__0x4c___r11___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d385)
  store %struct.Memory* %call_41d385, %struct.Memory** %MEMORY

  ; Code: addq %r11, %r9	 RIP: 41d389	 Bytes: 3
  %loadMem_41d389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d389 = call %struct.Memory* @routine_addq__r11___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d389)
  store %struct.Memory* %call_41d389, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%r9), %r9	 RIP: 41d38c	 Bytes: 4
  %loadMem_41d38c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d38c = call %struct.Memory* @routine_movslq_0x4__r9____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d38c)
  store %struct.Memory* %call_41d38c, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %r9, %r9	 RIP: 41d390	 Bytes: 4
  %loadMem_41d390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d390 = call %struct.Memory* @routine_imulq__0x68___r9___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d390)
  store %struct.Memory* %call_41d390, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r10	 RIP: 41d394	 Bytes: 3
  %loadMem_41d394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d394 = call %struct.Memory* @routine_addq__r9___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d394)
  store %struct.Memory* %call_41d394, %struct.Memory** %MEMORY

  ; Code: movl 0x48(%r10), %eax	 RIP: 41d397	 Bytes: 4
  %loadMem_41d397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d397 = call %struct.Memory* @routine_movl_0x48__r10____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d397)
  store %struct.Memory* %call_41d397, %struct.Memory** %MEMORY

  ; Code: subl $0xa, %eax	 RIP: 41d39b	 Bytes: 3
  %loadMem_41d39b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d39b = call %struct.Memory* @routine_subl__0xa___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d39b)
  store %struct.Memory* %call_41d39b, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 41d39e	 Bytes: 4
  %loadMem_41d39e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d39e = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d39e)
  store %struct.Memory* %call_41d39e, %struct.Memory** %MEMORY

  ; Code: callq .crude_dragon_weakness	 RIP: 41d3a2	 Bytes: 5
  %loadMem1_41d3a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d3a2 = call %struct.Memory* @routine_callq_.crude_dragon_weakness(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d3a2, i64 9646, i64 5, i64 5)
  store %struct.Memory* %call1_41d3a2, %struct.Memory** %MEMORY

  %loadMem2_41d3a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d3a2 = load i64, i64* %3
  %call2_41d3a2 = call %struct.Memory* @sub_41f950.crude_dragon_weakness(%struct.State* %0, i64  %loadPC_41d3a2, %struct.Memory* %loadMem2_41d3a2)
  store %struct.Memory* %call2_41d3a2, %struct.Memory** %MEMORY

  ; Code: movsd 0xc5bb9(%rip), %xmm1	 RIP: 41d3a7	 Bytes: 8
  %loadMem_41d3a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3a7 = call %struct.Memory* @routine_movsd_0xc5bb9__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3a7)
  store %struct.Memory* %call_41d3a7, %struct.Memory** %MEMORY

  ; Code: movsd 0xc5bb9(%rip), %xmm2	 RIP: 41d3af	 Bytes: 8
  %loadMem_41d3af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3af = call %struct.Memory* @routine_movsd_0xc5bb9__rip____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3af)
  store %struct.Memory* %call_41d3af, %struct.Memory** %MEMORY

  ; Code: movsd 0xc5bb9(%rip), %xmm3	 RIP: 41d3b7	 Bytes: 8
  %loadMem_41d3b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3b7 = call %struct.Memory* @routine_movsd_0xc5bb9__rip____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3b7)
  store %struct.Memory* %call_41d3b7, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rsi	 RIP: 41d3bf	 Bytes: 10
  %loadMem_41d3bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3bf = call %struct.Memory* @routine_movq__0xb4bd20___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3bf)
  store %struct.Memory* %call_41d3bf, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 41d3c9	 Bytes: 4
  %loadMem_41d3c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3c9 = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3c9)
  store %struct.Memory* %call_41d3c9, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %r9	 RIP: 41d3cd	 Bytes: 4
  %loadMem_41d3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3cd = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3cd)
  store %struct.Memory* %call_41d3cd, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %r9, %r9	 RIP: 41d3d1	 Bytes: 4
  %loadMem_41d3d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3d1 = call %struct.Memory* @routine_imulq__0x4c___r9___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3d1)
  store %struct.Memory* %call_41d3d1, %struct.Memory** %MEMORY

  ; Code: addq %r9, %rsi	 RIP: 41d3d5	 Bytes: 3
  %loadMem_41d3d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3d5 = call %struct.Memory* @routine_addq__r9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3d5)
  store %struct.Memory* %call_41d3d5, %struct.Memory** %MEMORY

  ; Code: cvtss2sd 0x10(%rsi), %xmm4	 RIP: 41d3d8	 Bytes: 5
  %loadMem_41d3d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3d8 = call %struct.Memory* @routine_cvtss2sd_0x10__rsi____xmm4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3d8)
  store %struct.Memory* %call_41d3d8, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm4, %xmm3	 RIP: 41d3dd	 Bytes: 4
  %loadMem_41d3dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3dd = call %struct.Memory* @routine_mulsd__xmm4___xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3dd)
  store %struct.Memory* %call_41d3dd, %struct.Memory** %MEMORY

  ; Code: subsd %xmm3, %xmm2	 RIP: 41d3e1	 Bytes: 4
  %loadMem_41d3e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3e1 = call %struct.Memory* @routine_subsd__xmm3___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3e1)
  store %struct.Memory* %call_41d3e1, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm1, %xmm2	 RIP: 41d3e5	 Bytes: 4
  %loadMem_41d3e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3e5 = call %struct.Memory* @routine_ucomisd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3e5)
  store %struct.Memory* %call_41d3e5, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x400(%rbp)	 RIP: 41d3e9	 Bytes: 8
  %loadMem_41d3e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3e9 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x400__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3e9)
  store %struct.Memory* %call_41d3e9, %struct.Memory** %MEMORY

  ; Code: jbe .L_41d436	 RIP: 41d3f1	 Bytes: 6
  %loadMem_41d3f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3f1 = call %struct.Memory* @routine_jbe_.L_41d436(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3f1, i8* %BRANCH_TAKEN, i64 69, i64 6, i64 6)
  store %struct.Memory* %call_41d3f1, %struct.Memory** %MEMORY

  %loadBr_41d3f1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d3f1 = icmp eq i8 %loadBr_41d3f1, 1
  br i1 %cmpBr_41d3f1, label %block_.L_41d436, label %block_41d3f7

block_41d3f7:
  ; Code: movsd 0xc5b71(%rip), %xmm0	 RIP: 41d3f7	 Bytes: 8
  %loadMem_41d3f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3f7 = call %struct.Memory* @routine_movsd_0xc5b71__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3f7)
  store %struct.Memory* %call_41d3f7, %struct.Memory** %MEMORY

  ; Code: movsd 0xc5b71(%rip), %xmm1	 RIP: 41d3ff	 Bytes: 8
  %loadMem_41d3ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d3ff = call %struct.Memory* @routine_movsd_0xc5b71__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d3ff)
  store %struct.Memory* %call_41d3ff, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rax	 RIP: 41d407	 Bytes: 10
  %loadMem_41d407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d407 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d407)
  store %struct.Memory* %call_41d407, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d411	 Bytes: 4
  %loadMem_41d411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d411 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d411)
  store %struct.Memory* %call_41d411, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d415	 Bytes: 4
  %loadMem_41d415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d415 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d415)
  store %struct.Memory* %call_41d415, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d419	 Bytes: 3
  %loadMem_41d419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d419 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d419)
  store %struct.Memory* %call_41d419, %struct.Memory** %MEMORY

  ; Code: cvtss2sd 0x10(%rax), %xmm2	 RIP: 41d41c	 Bytes: 5
  %loadMem_41d41c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d41c = call %struct.Memory* @routine_cvtss2sd_0x10__rax____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d41c)
  store %struct.Memory* %call_41d41c, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 41d421	 Bytes: 4
  %loadMem_41d421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d421 = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d421)
  store %struct.Memory* %call_41d421, %struct.Memory** %MEMORY

  ; Code: subsd %xmm1, %xmm0	 RIP: 41d425	 Bytes: 4
  %loadMem_41d425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d425 = call %struct.Memory* @routine_subsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d425)
  store %struct.Memory* %call_41d425, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x408(%rbp)	 RIP: 41d429	 Bytes: 8
  %loadMem_41d429 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d429 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x408__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d429)
  store %struct.Memory* %call_41d429, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d44b	 RIP: 41d431	 Bytes: 5
  %loadMem_41d431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d431 = call %struct.Memory* @routine_jmpq_.L_41d44b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d431, i64 26, i64 5)
  store %struct.Memory* %call_41d431, %struct.Memory** %MEMORY

  br label %block_.L_41d44b

  ; Code: .L_41d436:	 RIP: 41d436	 Bytes: 0
block_.L_41d436:

  ; Code: movsd 0xc5b2a(%rip), %xmm0	 RIP: 41d436	 Bytes: 8
  %loadMem_41d436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d436 = call %struct.Memory* @routine_movsd_0xc5b2a__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d436)
  store %struct.Memory* %call_41d436, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x408(%rbp)	 RIP: 41d43e	 Bytes: 8
  %loadMem_41d43e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d43e = call %struct.Memory* @routine_movsd__xmm0__MINUS0x408__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d43e)
  store %struct.Memory* %call_41d43e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d44b	 RIP: 41d446	 Bytes: 5
  %loadMem_41d446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d446 = call %struct.Memory* @routine_jmpq_.L_41d44b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d446, i64 5, i64 5)
  store %struct.Memory* %call_41d446, %struct.Memory** %MEMORY

  br label %block_.L_41d44b

  ; Code: .L_41d44b:	 RIP: 41d44b	 Bytes: 0
block_.L_41d44b:

  ; Code: movsd -0x408(%rbp), %xmm0	 RIP: 41d44b	 Bytes: 8
  %loadMem_41d44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d44b = call %struct.Memory* @routine_movsd_MINUS0x408__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d44b)
  store %struct.Memory* %call_41d44b, %struct.Memory** %MEMORY

  ; Code: movsd 0xc5b25(%rip), %xmm1	 RIP: 41d453	 Bytes: 8
  %loadMem_41d453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d453 = call %struct.Memory* @routine_movsd_0xc5b25__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d453)
  store %struct.Memory* %call_41d453, %struct.Memory** %MEMORY

  ; Code: addsd %xmm0, %xmm1	 RIP: 41d45b	 Bytes: 4
  %loadMem_41d45b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d45b = call %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d45b)
  store %struct.Memory* %call_41d45b, %struct.Memory** %MEMORY

  ; Code: movsd -0x400(%rbp), %xmm0	 RIP: 41d45f	 Bytes: 8
  %loadMem_41d45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d45f = call %struct.Memory* @routine_movsd_MINUS0x400__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d45f)
  store %struct.Memory* %call_41d45f, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 41d467	 Bytes: 4
  %loadMem_41d467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d467 = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d467)
  store %struct.Memory* %call_41d467, %struct.Memory** %MEMORY

  ; Code: jbe .L_41d4bc	 RIP: 41d46b	 Bytes: 6
  %loadMem_41d46b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d46b = call %struct.Memory* @routine_jbe_.L_41d4bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d46b, i8* %BRANCH_TAKEN, i64 81, i64 6, i64 6)
  store %struct.Memory* %call_41d46b, %struct.Memory** %MEMORY

  %loadBr_41d46b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d46b = icmp eq i8 %loadBr_41d46b, 1
  br i1 %cmpBr_41d46b, label %block_.L_41d4bc, label %block_41d471

block_41d471:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41d471	 Bytes: 10
  %loadMem_41d471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d471 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d471)
  store %struct.Memory* %call_41d471, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d47b	 Bytes: 4
  %loadMem_41d47b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d47b = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d47b)
  store %struct.Memory* %call_41d47b, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d47f	 Bytes: 4
  %loadMem_41d47f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d47f = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d47f)
  store %struct.Memory* %call_41d47f, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41d483	 Bytes: 3
  %loadMem_41d483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d483 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d483)
  store %struct.Memory* %call_41d483, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41d486	 Bytes: 3
  %loadMem_41d486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d486 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d486)
  store %struct.Memory* %call_41d486, %struct.Memory** %MEMORY

  ; Code: movl $0x4, 0x18(%rdx)	 RIP: 41d489	 Bytes: 7
  %loadMem_41d489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d489 = call %struct.Memory* @routine_movl__0x4__0x18__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d489)
  store %struct.Memory* %call_41d489, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d490	 Bytes: 4
  %loadMem_41d490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d490 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d490)
  store %struct.Memory* %call_41d490, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d494	 Bytes: 4
  %loadMem_41d494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d494 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d494)
  store %struct.Memory* %call_41d494, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41d498	 Bytes: 3
  %loadMem_41d498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d498 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d498)
  store %struct.Memory* %call_41d498, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41d49b	 Bytes: 3
  %loadMem_41d49b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d49b = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d49b)
  store %struct.Memory* %call_41d49b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x2c(%rdx)	 RIP: 41d49e	 Bytes: 7
  %loadMem_41d49e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d49e = call %struct.Memory* @routine_movl__0x0__0x2c__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d49e)
  store %struct.Memory* %call_41d49e, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d4a5	 Bytes: 4
  %loadMem_41d4a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4a5 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4a5)
  store %struct.Memory* %call_41d4a5, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d4a9	 Bytes: 4
  %loadMem_41d4a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4a9 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4a9)
  store %struct.Memory* %call_41d4a9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d4ad	 Bytes: 3
  %loadMem_41d4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4ad = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4ad)
  store %struct.Memory* %call_41d4ad, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x3c(%rax)	 RIP: 41d4b0	 Bytes: 7
  %loadMem_41d4b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4b0 = call %struct.Memory* @routine_movl__0x0__0x3c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4b0)
  store %struct.Memory* %call_41d4b0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d6d6	 RIP: 41d4b7	 Bytes: 5
  %loadMem_41d4b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4b7 = call %struct.Memory* @routine_jmpq_.L_41d6d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4b7, i64 543, i64 5)
  store %struct.Memory* %call_41d4b7, %struct.Memory** %MEMORY

  br label %block_.L_41d6d6

  ; Code: .L_41d4bc:	 RIP: 41d4bc	 Bytes: 0
block_.L_41d4bc:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41d4bc	 Bytes: 10
  %loadMem_41d4bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4bc = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4bc)
  store %struct.Memory* %call_41d4bc, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d4c6	 Bytes: 4
  %loadMem_41d4c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4c6 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4c6)
  store %struct.Memory* %call_41d4c6, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d4ca	 Bytes: 4
  %loadMem_41d4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4ca = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4ca)
  store %struct.Memory* %call_41d4ca, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41d4ce	 Bytes: 3
  %loadMem_41d4ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4ce = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4ce)
  store %struct.Memory* %call_41d4ce, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41d4d1	 Bytes: 3
  %loadMem_41d4d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4d1 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4d1)
  store %struct.Memory* %call_41d4d1, %struct.Memory** %MEMORY

  ; Code: movl 0x24(%rdx), %esi	 RIP: 41d4d4	 Bytes: 3
  %loadMem_41d4d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4d4 = call %struct.Memory* @routine_movl_0x24__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4d4)
  store %struct.Memory* %call_41d4d4, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x8c(%rbp)	 RIP: 41d4d7	 Bytes: 6
  %loadMem_41d4d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4d7 = call %struct.Memory* @routine_movl__esi__MINUS0x8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4d7)
  store %struct.Memory* %call_41d4d7, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d4dd	 Bytes: 4
  %loadMem_41d4dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4dd = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4dd)
  store %struct.Memory* %call_41d4dd, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d4e1	 Bytes: 4
  %loadMem_41d4e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4e1 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4e1)
  store %struct.Memory* %call_41d4e1, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d4e5	 Bytes: 3
  %loadMem_41d4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4e5 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4e5)
  store %struct.Memory* %call_41d4e5, %struct.Memory** %MEMORY

  ; Code: movl 0x34(%rax), %esi	 RIP: 41d4e8	 Bytes: 3
  %loadMem_41d4e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4e8 = call %struct.Memory* @routine_movl_0x34__rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4e8)
  store %struct.Memory* %call_41d4e8, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x90(%rbp)	 RIP: 41d4eb	 Bytes: 6
  %loadMem_41d4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4eb = call %struct.Memory* @routine_movl__esi__MINUS0x90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4eb)
  store %struct.Memory* %call_41d4eb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x8, 0x7ae448	 RIP: 41d4f1	 Bytes: 8
  %loadMem_41d4f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4f1 = call %struct.Memory* @routine_cmpl__0x8__0x7ae448(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4f1)
  store %struct.Memory* %call_41d4f1, %struct.Memory** %MEMORY

  ; Code: jl .L_41d6af	 RIP: 41d4f9	 Bytes: 6
  %loadMem_41d4f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4f9 = call %struct.Memory* @routine_jl_.L_41d6af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4f9, i8* %BRANCH_TAKEN, i64 438, i64 6, i64 6)
  store %struct.Memory* %call_41d4f9, %struct.Memory** %MEMORY

  %loadBr_41d4f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d4f9 = icmp eq i8 %loadBr_41d4f9, 1
  br i1 %cmpBr_41d4f9, label %block_.L_41d6af, label %block_41d4ff

block_41d4ff:
  ; Code: cmpl $0x0, 0xab0fb4	 RIP: 41d4ff	 Bytes: 8
  %loadMem_41d4ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d4ff = call %struct.Memory* @routine_cmpl__0x0__0xab0fb4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d4ff)
  store %struct.Memory* %call_41d4ff, %struct.Memory** %MEMORY

  ; Code: jne .L_41d6af	 RIP: 41d507	 Bytes: 6
  %loadMem_41d507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d507 = call %struct.Memory* @routine_jne_.L_41d6af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d507, i8* %BRANCH_TAKEN, i64 424, i64 6, i64 6)
  store %struct.Memory* %call_41d507, %struct.Memory** %MEMORY

  %loadBr_41d507 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d507 = icmp eq i8 %loadBr_41d507, 1
  br i1 %cmpBr_41d507, label %block_.L_41d6af, label %block_41d50d

block_41d50d:
  ; Code: cmpl $0x0, 0xab0fc4	 RIP: 41d50d	 Bytes: 8
  %loadMem_41d50d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d50d = call %struct.Memory* @routine_cmpl__0x0__0xab0fc4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d50d)
  store %struct.Memory* %call_41d50d, %struct.Memory** %MEMORY

  ; Code: jne .L_41d541	 RIP: 41d515	 Bytes: 6
  %loadMem_41d515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d515 = call %struct.Memory* @routine_jne_.L_41d541(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d515, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_41d515, %struct.Memory** %MEMORY

  %loadBr_41d515 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d515 = icmp eq i8 %loadBr_41d515, 1
  br i1 %cmpBr_41d515, label %block_.L_41d541, label %block_41d51b

block_41d51b:
  ; Code: cmpl $0x0, 0xab0ed0	 RIP: 41d51b	 Bytes: 8
  %loadMem_41d51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d51b = call %struct.Memory* @routine_cmpl__0x0__0xab0ed0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d51b)
  store %struct.Memory* %call_41d51b, %struct.Memory** %MEMORY

  ; Code: je .L_41d6af	 RIP: 41d523	 Bytes: 6
  %loadMem_41d523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d523 = call %struct.Memory* @routine_je_.L_41d6af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d523, i8* %BRANCH_TAKEN, i64 396, i64 6, i64 6)
  store %struct.Memory* %call_41d523, %struct.Memory** %MEMORY

  %loadBr_41d523 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d523 = icmp eq i8 %loadBr_41d523, 1
  br i1 %cmpBr_41d523, label %block_.L_41d6af, label %block_41d529

block_41d529:
  ; Code: movl -0x18(%rbp), %edi	 RIP: 41d529	 Bytes: 3
  %loadMem_41d529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d529 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d529)
  store %struct.Memory* %call_41d529, %struct.Memory** %MEMORY

  ; Code: movl 0xab0ed0, %esi	 RIP: 41d52c	 Bytes: 7
  %loadMem_41d52c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d52c = call %struct.Memory* @routine_movl_0xab0ed0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d52c)
  store %struct.Memory* %call_41d52c, %struct.Memory** %MEMORY

  ; Code: callq .is_same_dragon	 RIP: 41d533	 Bytes: 5
  %loadMem1_41d533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d533 = call %struct.Memory* @routine_callq_.is_same_dragon(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d533, i64 9981, i64 5, i64 5)
  store %struct.Memory* %call1_41d533, %struct.Memory** %MEMORY

  %loadMem2_41d533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d533 = load i64, i64* %3
  %call2_41d533 = call %struct.Memory* @sub_41fc30.is_same_dragon(%struct.State* %0, i64  %loadPC_41d533, %struct.Memory* %loadMem2_41d533)
  store %struct.Memory* %call2_41d533, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41d538	 Bytes: 3
  %loadMem_41d538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d538 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d538)
  store %struct.Memory* %call_41d538, %struct.Memory** %MEMORY

  ; Code: je .L_41d6af	 RIP: 41d53b	 Bytes: 6
  %loadMem_41d53b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d53b = call %struct.Memory* @routine_je_.L_41d6af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d53b, i8* %BRANCH_TAKEN, i64 372, i64 6, i64 6)
  store %struct.Memory* %call_41d53b, %struct.Memory** %MEMORY

  %loadBr_41d53b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d53b = icmp eq i8 %loadBr_41d53b, 1
  br i1 %cmpBr_41d53b, label %block_.L_41d6af, label %block_.L_41d541

  ; Code: .L_41d541:	 RIP: 41d541	 Bytes: 0
block_.L_41d541:

  ; Code: cmpl $0x0, -0x8c(%rbp)	 RIP: 41d541	 Bytes: 7
  %loadMem_41d541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d541 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d541)
  store %struct.Memory* %call_41d541, %struct.Memory** %MEMORY

  ; Code: je .L_41d609	 RIP: 41d548	 Bytes: 6
  %loadMem_41d548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d548 = call %struct.Memory* @routine_je_.L_41d609(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d548, i8* %BRANCH_TAKEN, i64 193, i64 6, i64 6)
  store %struct.Memory* %call_41d548, %struct.Memory** %MEMORY

  %loadBr_41d548 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d548 = icmp eq i8 %loadBr_41d548, 1
  br i1 %cmpBr_41d548, label %block_.L_41d609, label %block_41d54e

block_41d54e:
  ; Code: cmpl $0x0, -0x90(%rbp)	 RIP: 41d54e	 Bytes: 7
  %loadMem_41d54e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d54e = call %struct.Memory* @routine_cmpl__0x0__MINUS0x90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d54e)
  store %struct.Memory* %call_41d54e, %struct.Memory** %MEMORY

  ; Code: jne .L_41d609	 RIP: 41d555	 Bytes: 6
  %loadMem_41d555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d555 = call %struct.Memory* @routine_jne_.L_41d609(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d555, i8* %BRANCH_TAKEN, i64 180, i64 6, i64 6)
  store %struct.Memory* %call_41d555, %struct.Memory** %MEMORY

  %loadBr_41d555 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d555 = icmp eq i8 %loadBr_41d555, 1
  br i1 %cmpBr_41d555, label %block_.L_41d609, label %block_41d55b

block_41d55b:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41d55b	 Bytes: 10
  %loadMem_41d55b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d55b = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d55b)
  store %struct.Memory* %call_41d55b, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d565	 Bytes: 4
  %loadMem_41d565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d565 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d565)
  store %struct.Memory* %call_41d565, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d569	 Bytes: 4
  %loadMem_41d569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d569 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d569)
  store %struct.Memory* %call_41d569, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d56d	 Bytes: 3
  %loadMem_41d56d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d56d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d56d)
  store %struct.Memory* %call_41d56d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x20(%rax)	 RIP: 41d570	 Bytes: 4
  %loadMem_41d570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d570 = call %struct.Memory* @routine_cmpl__0x0__0x20__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d570)
  store %struct.Memory* %call_41d570, %struct.Memory** %MEMORY

  ; Code: je .L_41d609	 RIP: 41d574	 Bytes: 6
  %loadMem_41d574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d574 = call %struct.Memory* @routine_je_.L_41d609(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d574, i8* %BRANCH_TAKEN, i64 149, i64 6, i64 6)
  store %struct.Memory* %call_41d574, %struct.Memory** %MEMORY

  %loadBr_41d574 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d574 = icmp eq i8 %loadBr_41d574, 1
  br i1 %cmpBr_41d574, label %block_.L_41d609, label %block_41d57a

block_41d57a:
  ; Code: leaq -0x94(%rbp), %rsi	 RIP: 41d57a	 Bytes: 7
  %loadMem_41d57a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d57a = call %struct.Memory* @routine_leaq_MINUS0x94__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d57a)
  store %struct.Memory* %call_41d57a, %struct.Memory** %MEMORY

  ; Code: leaq -0x98(%rbp), %rdx	 RIP: 41d581	 Bytes: 7
  %loadMem_41d581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d581 = call %struct.Memory* @routine_leaq_MINUS0x98__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d581)
  store %struct.Memory* %call_41d581, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41d588	 Bytes: 3
  %loadMem_41d588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d588 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d588)
  store %struct.Memory* %call_41d588, %struct.Memory** %MEMORY

  ; Code: callq .owl_threaten_defense	 RIP: 41d58b	 Bytes: 5
  %loadMem1_41d58b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d58b = call %struct.Memory* @routine_callq_.owl_threaten_defense(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d58b, i64 186405, i64 5, i64 5)
  store %struct.Memory* %call1_41d58b, %struct.Memory** %MEMORY

  %loadMem2_41d58b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d58b = load i64, i64* %3
  %call2_41d58b = call %struct.Memory* @sub_44adb0.owl_threaten_defense(%struct.State* %0, i64  %loadPC_41d58b, %struct.Memory* %loadMem2_41d58b)
  store %struct.Memory* %call2_41d58b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41d590	 Bytes: 3
  %loadMem_41d590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d590 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d590)
  store %struct.Memory* %call_41d590, %struct.Memory** %MEMORY

  ; Code: je .L_41d5e8	 RIP: 41d593	 Bytes: 6
  %loadMem_41d593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d593 = call %struct.Memory* @routine_je_.L_41d5e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d593, i8* %BRANCH_TAKEN, i64 85, i64 6, i64 6)
  store %struct.Memory* %call_41d593, %struct.Memory** %MEMORY

  %loadBr_41d593 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d593 = icmp eq i8 %loadBr_41d593, 1
  br i1 %cmpBr_41d593, label %block_.L_41d5e8, label %block_41d599

block_41d599:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41d599	 Bytes: 10
  %loadMem_41d599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d599 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d599)
  store %struct.Memory* %call_41d599, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d5a3	 Bytes: 4
  %loadMem_41d5a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5a3 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5a3)
  store %struct.Memory* %call_41d5a3, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d5a7	 Bytes: 4
  %loadMem_41d5a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5a7 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5a7)
  store %struct.Memory* %call_41d5a7, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41d5ab	 Bytes: 3
  %loadMem_41d5ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5ab = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5ab)
  store %struct.Memory* %call_41d5ab, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41d5ae	 Bytes: 3
  %loadMem_41d5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5ae = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5ae)
  store %struct.Memory* %call_41d5ae, %struct.Memory** %MEMORY

  ; Code: movl $0xc, 0x18(%rdx)	 RIP: 41d5b1	 Bytes: 7
  %loadMem_41d5b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5b1 = call %struct.Memory* @routine_movl__0xc__0x18__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5b1)
  store %struct.Memory* %call_41d5b1, %struct.Memory** %MEMORY

  ; Code: movl -0x94(%rbp), %esi	 RIP: 41d5b8	 Bytes: 6
  %loadMem_41d5b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5b8 = call %struct.Memory* @routine_movl_MINUS0x94__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5b8)
  store %struct.Memory* %call_41d5b8, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d5be	 Bytes: 4
  %loadMem_41d5be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5be = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5be)
  store %struct.Memory* %call_41d5be, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d5c2	 Bytes: 4
  %loadMem_41d5c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5c2 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5c2)
  store %struct.Memory* %call_41d5c2, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41d5c6	 Bytes: 3
  %loadMem_41d5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5c6 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5c6)
  store %struct.Memory* %call_41d5c6, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41d5c9	 Bytes: 3
  %loadMem_41d5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5c9 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5c9)
  store %struct.Memory* %call_41d5c9, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x30(%rdx)	 RIP: 41d5cc	 Bytes: 3
  %loadMem_41d5cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5cc = call %struct.Memory* @routine_movl__esi__0x30__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5cc)
  store %struct.Memory* %call_41d5cc, %struct.Memory** %MEMORY

  ; Code: movl -0x98(%rbp), %esi	 RIP: 41d5cf	 Bytes: 6
  %loadMem_41d5cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5cf = call %struct.Memory* @routine_movl_MINUS0x98__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5cf)
  store %struct.Memory* %call_41d5cf, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d5d5	 Bytes: 4
  %loadMem_41d5d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5d5 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5d5)
  store %struct.Memory* %call_41d5d5, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d5d9	 Bytes: 4
  %loadMem_41d5d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5d9 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5d9)
  store %struct.Memory* %call_41d5d9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d5dd	 Bytes: 3
  %loadMem_41d5dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5dd = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5dd)
  store %struct.Memory* %call_41d5dd, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x3c(%rax)	 RIP: 41d5e0	 Bytes: 3
  %loadMem_41d5e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5e0 = call %struct.Memory* @routine_movl__esi__0x3c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5e0)
  store %struct.Memory* %call_41d5e0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d604	 RIP: 41d5e3	 Bytes: 5
  %loadMem_41d5e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5e3 = call %struct.Memory* @routine_jmpq_.L_41d604(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5e3, i64 33, i64 5)
  store %struct.Memory* %call_41d5e3, %struct.Memory** %MEMORY

  br label %block_.L_41d604

  ; Code: .L_41d5e8:	 RIP: 41d5e8	 Bytes: 0
block_.L_41d5e8:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41d5e8	 Bytes: 10
  %loadMem_41d5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5e8 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5e8)
  store %struct.Memory* %call_41d5e8, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d5f2	 Bytes: 4
  %loadMem_41d5f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5f2 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5f2)
  store %struct.Memory* %call_41d5f2, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d5f6	 Bytes: 4
  %loadMem_41d5f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5f6 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5f6)
  store %struct.Memory* %call_41d5f6, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d5fa	 Bytes: 3
  %loadMem_41d5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5fa = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5fa)
  store %struct.Memory* %call_41d5fa, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x18(%rax)	 RIP: 41d5fd	 Bytes: 7
  %loadMem_41d5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d5fd = call %struct.Memory* @routine_movl__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d5fd)
  store %struct.Memory* %call_41d5fd, %struct.Memory** %MEMORY

  ; Code: .L_41d604:	 RIP: 41d604	 Bytes: 0
  br label %block_.L_41d604
block_.L_41d604:

  ; Code: jmpq .L_41d6aa	 RIP: 41d604	 Bytes: 5
  %loadMem_41d604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d604 = call %struct.Memory* @routine_jmpq_.L_41d6aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d604, i64 166, i64 5)
  store %struct.Memory* %call_41d604, %struct.Memory** %MEMORY

  br label %block_.L_41d6aa

  ; Code: .L_41d609:	 RIP: 41d609	 Bytes: 0
block_.L_41d609:

  ; Code: cmpl $0x0, -0x8c(%rbp)	 RIP: 41d609	 Bytes: 7
  %loadMem_41d609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d609 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d609)
  store %struct.Memory* %call_41d609, %struct.Memory** %MEMORY

  ; Code: jne .L_41d6a5	 RIP: 41d610	 Bytes: 6
  %loadMem_41d610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d610 = call %struct.Memory* @routine_jne_.L_41d6a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d610, i8* %BRANCH_TAKEN, i64 149, i64 6, i64 6)
  store %struct.Memory* %call_41d610, %struct.Memory** %MEMORY

  %loadBr_41d610 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d610 = icmp eq i8 %loadBr_41d610, 1
  br i1 %cmpBr_41d610, label %block_.L_41d6a5, label %block_41d616

block_41d616:
  ; Code: leaq -0x9c(%rbp), %rsi	 RIP: 41d616	 Bytes: 7
  %loadMem_41d616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d616 = call %struct.Memory* @routine_leaq_MINUS0x9c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d616)
  store %struct.Memory* %call_41d616, %struct.Memory** %MEMORY

  ; Code: leaq -0xa0(%rbp), %rdx	 RIP: 41d61d	 Bytes: 7
  %loadMem_41d61d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d61d = call %struct.Memory* @routine_leaq_MINUS0xa0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d61d)
  store %struct.Memory* %call_41d61d, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41d624	 Bytes: 3
  %loadMem_41d624 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d624 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d624)
  store %struct.Memory* %call_41d624, %struct.Memory** %MEMORY

  ; Code: callq .owl_threaten_attack	 RIP: 41d627	 Bytes: 5
  %loadMem1_41d627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d627 = call %struct.Memory* @routine_callq_.owl_threaten_attack(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d627, i64 183753, i64 5, i64 5)
  store %struct.Memory* %call1_41d627, %struct.Memory** %MEMORY

  %loadMem2_41d627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d627 = load i64, i64* %3
  %call2_41d627 = call %struct.Memory* @sub_44a3f0.owl_threaten_attack(%struct.State* %0, i64  %loadPC_41d627, %struct.Memory* %loadMem2_41d627)
  store %struct.Memory* %call2_41d627, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41d62c	 Bytes: 3
  %loadMem_41d62c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d62c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d62c)
  store %struct.Memory* %call_41d62c, %struct.Memory** %MEMORY

  ; Code: je .L_41d684	 RIP: 41d62f	 Bytes: 6
  %loadMem_41d62f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d62f = call %struct.Memory* @routine_je_.L_41d684(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d62f, i8* %BRANCH_TAKEN, i64 85, i64 6, i64 6)
  store %struct.Memory* %call_41d62f, %struct.Memory** %MEMORY

  %loadBr_41d62f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d62f = icmp eq i8 %loadBr_41d62f, 1
  br i1 %cmpBr_41d62f, label %block_.L_41d684, label %block_41d635

block_41d635:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41d635	 Bytes: 10
  %loadMem_41d635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d635 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d635)
  store %struct.Memory* %call_41d635, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d63f	 Bytes: 4
  %loadMem_41d63f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d63f = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d63f)
  store %struct.Memory* %call_41d63f, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d643	 Bytes: 4
  %loadMem_41d643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d643 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d643)
  store %struct.Memory* %call_41d643, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41d647	 Bytes: 3
  %loadMem_41d647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d647 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d647)
  store %struct.Memory* %call_41d647, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41d64a	 Bytes: 3
  %loadMem_41d64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d64a = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d64a)
  store %struct.Memory* %call_41d64a, %struct.Memory** %MEMORY

  ; Code: movl $0xb, 0x18(%rdx)	 RIP: 41d64d	 Bytes: 7
  %loadMem_41d64d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d64d = call %struct.Memory* @routine_movl__0xb__0x18__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d64d)
  store %struct.Memory* %call_41d64d, %struct.Memory** %MEMORY

  ; Code: movl -0x9c(%rbp), %esi	 RIP: 41d654	 Bytes: 6
  %loadMem_41d654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d654 = call %struct.Memory* @routine_movl_MINUS0x9c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d654)
  store %struct.Memory* %call_41d654, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d65a	 Bytes: 4
  %loadMem_41d65a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d65a = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d65a)
  store %struct.Memory* %call_41d65a, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d65e	 Bytes: 4
  %loadMem_41d65e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d65e = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d65e)
  store %struct.Memory* %call_41d65e, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41d662	 Bytes: 3
  %loadMem_41d662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d662 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d662)
  store %struct.Memory* %call_41d662, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41d665	 Bytes: 3
  %loadMem_41d665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d665 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d665)
  store %struct.Memory* %call_41d665, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x20(%rdx)	 RIP: 41d668	 Bytes: 3
  %loadMem_41d668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d668 = call %struct.Memory* @routine_movl__esi__0x20__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d668)
  store %struct.Memory* %call_41d668, %struct.Memory** %MEMORY

  ; Code: movl -0xa0(%rbp), %esi	 RIP: 41d66b	 Bytes: 6
  %loadMem_41d66b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d66b = call %struct.Memory* @routine_movl_MINUS0xa0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d66b)
  store %struct.Memory* %call_41d66b, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d671	 Bytes: 4
  %loadMem_41d671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d671 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d671)
  store %struct.Memory* %call_41d671, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d675	 Bytes: 4
  %loadMem_41d675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d675 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d675)
  store %struct.Memory* %call_41d675, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d679	 Bytes: 3
  %loadMem_41d679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d679 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d679)
  store %struct.Memory* %call_41d679, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x2c(%rax)	 RIP: 41d67c	 Bytes: 3
  %loadMem_41d67c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d67c = call %struct.Memory* @routine_movl__esi__0x2c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d67c)
  store %struct.Memory* %call_41d67c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d6a0	 RIP: 41d67f	 Bytes: 5
  %loadMem_41d67f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d67f = call %struct.Memory* @routine_jmpq_.L_41d6a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d67f, i64 33, i64 5)
  store %struct.Memory* %call_41d67f, %struct.Memory** %MEMORY

  br label %block_.L_41d6a0

  ; Code: .L_41d684:	 RIP: 41d684	 Bytes: 0
block_.L_41d684:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41d684	 Bytes: 10
  %loadMem_41d684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d684 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d684)
  store %struct.Memory* %call_41d684, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41d68e	 Bytes: 4
  %loadMem_41d68e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d68e = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d68e)
  store %struct.Memory* %call_41d68e, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41d692	 Bytes: 4
  %loadMem_41d692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d692 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d692)
  store %struct.Memory* %call_41d692, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d696	 Bytes: 3
  %loadMem_41d696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d696 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d696)
  store %struct.Memory* %call_41d696, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x18(%rax)	 RIP: 41d699	 Bytes: 7
  %loadMem_41d699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d699 = call %struct.Memory* @routine_movl__0x1__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d699)
  store %struct.Memory* %call_41d699, %struct.Memory** %MEMORY

  ; Code: .L_41d6a0:	 RIP: 41d6a0	 Bytes: 0
  br label %block_.L_41d6a0
block_.L_41d6a0:

  ; Code: jmpq .L_41d6a5	 RIP: 41d6a0	 Bytes: 5
  %loadMem_41d6a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6a0 = call %struct.Memory* @routine_jmpq_.L_41d6a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6a0, i64 5, i64 5)
  store %struct.Memory* %call_41d6a0, %struct.Memory** %MEMORY

  br label %block_.L_41d6a5

  ; Code: .L_41d6a5:	 RIP: 41d6a5	 Bytes: 0
block_.L_41d6a5:

  ; Code: jmpq .L_41d6aa	 RIP: 41d6a5	 Bytes: 5
  %loadMem_41d6a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6a5 = call %struct.Memory* @routine_jmpq_.L_41d6aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6a5, i64 5, i64 5)
  store %struct.Memory* %call_41d6a5, %struct.Memory** %MEMORY

  br label %block_.L_41d6aa

  ; Code: .L_41d6aa:	 RIP: 41d6aa	 Bytes: 0
block_.L_41d6aa:

  ; Code: jmpq .L_41d6af	 RIP: 41d6aa	 Bytes: 5
  %loadMem_41d6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6aa = call %struct.Memory* @routine_jmpq_.L_41d6af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6aa, i64 5, i64 5)
  store %struct.Memory* %call_41d6aa, %struct.Memory** %MEMORY

  br label %block_.L_41d6af

  ; Code: .L_41d6af:	 RIP: 41d6af	 Bytes: 0
block_.L_41d6af:

  ; Code: movl $0x3, %edi	 RIP: 41d6af	 Bytes: 5
  %loadMem_41d6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6af = call %struct.Memory* @routine_movl__0x3___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6af)
  store %struct.Memory* %call_41d6af, %struct.Memory** %MEMORY

  ; Code: movq $0x57b04d, %rsi	 RIP: 41d6b4	 Bytes: 10
  %loadMem_41d6b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6b4 = call %struct.Memory* @routine_movq__0x57b04d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6b4)
  store %struct.Memory* %call_41d6b4, %struct.Memory** %MEMORY

  ; Code: movsd 0xc589a(%rip), %xmm0	 RIP: 41d6be	 Bytes: 8
  %loadMem_41d6be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6be = call %struct.Memory* @routine_movsd_0xc589a__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6be)
  store %struct.Memory* %call_41d6be, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 41d6c6	 Bytes: 3
  %loadMem_41d6c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6c6 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6c6)
  store %struct.Memory* %call_41d6c6, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41d6c9	 Bytes: 5
  %loadMem1_41d6c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d6c9 = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d6c9, i64 388359, i64 5, i64 5)
  store %struct.Memory* %call1_41d6c9, %struct.Memory** %MEMORY

  %loadMem2_41d6c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d6c9 = load i64, i64* %3
  %call2_41d6c9 = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41d6c9, %struct.Memory* %loadMem2_41d6c9)
  store %struct.Memory* %call2_41d6c9, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x410(%rbp)	 RIP: 41d6ce	 Bytes: 8
  %loadMem_41d6ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6ce = call %struct.Memory* @routine_movsd__xmm0__MINUS0x410__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6ce)
  store %struct.Memory* %call_41d6ce, %struct.Memory** %MEMORY

  ; Code: .L_41d6d6:	 RIP: 41d6d6	 Bytes: 0
  br label %block_.L_41d6d6
block_.L_41d6d6:

  ; Code: jmpq .L_41d6db	 RIP: 41d6d6	 Bytes: 5
  %loadMem_41d6d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6d6 = call %struct.Memory* @routine_jmpq_.L_41d6db(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6d6, i64 5, i64 5)
  store %struct.Memory* %call_41d6d6, %struct.Memory** %MEMORY

  br label %block_.L_41d6db

  ; Code: .L_41d6db:	 RIP: 41d6db	 Bytes: 0
block_.L_41d6db:

  ; Code: jmpq .L_41d6e0	 RIP: 41d6db	 Bytes: 5
  %loadMem_41d6db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6db = call %struct.Memory* @routine_jmpq_.L_41d6e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6db, i64 5, i64 5)
  store %struct.Memory* %call_41d6db, %struct.Memory** %MEMORY

  br label %block_.L_41d6e0

  ; Code: .L_41d6e0:	 RIP: 41d6e0	 Bytes: 0
block_.L_41d6e0:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41d6e0	 Bytes: 3
  %loadMem_41d6e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6e0 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6e0)
  store %struct.Memory* %call_41d6e0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41d6e3	 Bytes: 3
  %loadMem_41d6e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6e3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6e3)
  store %struct.Memory* %call_41d6e3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41d6e6	 Bytes: 3
  %loadMem_41d6e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6e6 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6e6)
  store %struct.Memory* %call_41d6e6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d2cb	 RIP: 41d6e9	 Bytes: 5
  %loadMem_41d6e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6e9 = call %struct.Memory* @routine_jmpq_.L_41d2cb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6e9, i64 -1054, i64 5)
  store %struct.Memory* %call_41d6e9, %struct.Memory** %MEMORY

  br label %block_.L_41d2cb

  ; Code: .L_41d6ee:	 RIP: 41d6ee	 Bytes: 0
block_.L_41d6ee:

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41d6ee	 Bytes: 7
  %loadMem_41d6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6ee = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6ee)
  store %struct.Memory* %call_41d6ee, %struct.Memory** %MEMORY

  ; Code: .L_41d6f5:	 RIP: 41d6f5	 Bytes: 0
  br label %block_.L_41d6f5
block_.L_41d6f5:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41d6f5	 Bytes: 7
  %loadMem_41d6f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6f5 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6f5)
  store %struct.Memory* %call_41d6f5, %struct.Memory** %MEMORY

  ; Code: jge .L_41d778	 RIP: 41d6fc	 Bytes: 6
  %loadMem_41d6fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d6fc = call %struct.Memory* @routine_jge_.L_41d778(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d6fc, i8* %BRANCH_TAKEN, i64 124, i64 6, i64 6)
  store %struct.Memory* %call_41d6fc, %struct.Memory** %MEMORY

  %loadBr_41d6fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d6fc = icmp eq i8 %loadBr_41d6fc, 1
  br i1 %cmpBr_41d6fc, label %block_.L_41d778, label %block_41d702

block_41d702:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41d702	 Bytes: 4
  %loadMem_41d702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d702 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d702)
  store %struct.Memory* %call_41d702, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41d706	 Bytes: 8
  %loadMem_41d706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d706 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d706)
  store %struct.Memory* %call_41d706, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41d70e	 Bytes: 3
  %loadMem_41d70e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d70e = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d70e)
  store %struct.Memory* %call_41d70e, %struct.Memory** %MEMORY

  ; Code: je .L_41d765	 RIP: 41d711	 Bytes: 6
  %loadMem_41d711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d711 = call %struct.Memory* @routine_je_.L_41d765(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d711, i8* %BRANCH_TAKEN, i64 84, i64 6, i64 6)
  store %struct.Memory* %call_41d711, %struct.Memory** %MEMORY

  %loadBr_41d711 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d711 = icmp eq i8 %loadBr_41d711, 1
  br i1 %cmpBr_41d711, label %block_.L_41d765, label %block_41d717

block_41d717:
  ; Code: movl $0x4c, %eax	 RIP: 41d717	 Bytes: 5
  %loadMem_41d717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d717 = call %struct.Memory* @routine_movl__0x4c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d717)
  store %struct.Memory* %call_41d717, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41d71c	 Bytes: 2
  %loadMem_41d71c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d71c = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d71c)
  store %struct.Memory* %call_41d71c, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rcx	 RIP: 41d71e	 Bytes: 10
  %loadMem_41d71e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d71e = call %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d71e)
  store %struct.Memory* %call_41d71e, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41d728	 Bytes: 4
  %loadMem_41d728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d728 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d728)
  store %struct.Memory* %call_41d728, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41d72c	 Bytes: 4
  %loadMem_41d72c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d72c = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d72c)
  store %struct.Memory* %call_41d72c, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdi	 RIP: 41d730	 Bytes: 3
  %loadMem_41d730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d730 = call %struct.Memory* @routine_movq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d730)
  store %struct.Memory* %call_41d730, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41d733	 Bytes: 3
  %loadMem_41d733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d733 = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d733)
  store %struct.Memory* %call_41d733, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0xa8(%rbp)	 RIP: 41d736	 Bytes: 7
  %loadMem_41d736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d736 = call %struct.Memory* @routine_movq__rdi__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d736)
  store %struct.Memory* %call_41d736, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 41d73d	 Bytes: 4
  %loadMem_41d73d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d73d = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d73d)
  store %struct.Memory* %call_41d73d, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41d741	 Bytes: 4
  %loadMem_41d741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d741 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d741)
  store %struct.Memory* %call_41d741, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdi	 RIP: 41d745	 Bytes: 3
  %loadMem_41d745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d745 = call %struct.Memory* @routine_movq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d745)
  store %struct.Memory* %call_41d745, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 41d748	 Bytes: 3
  %loadMem_41d748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d748 = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d748)
  store %struct.Memory* %call_41d748, %struct.Memory** %MEMORY

  ; Code: movq -0xa8(%rbp), %rsi	 RIP: 41d74b	 Bytes: 7
  %loadMem_41d74b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d74b = call %struct.Memory* @routine_movq_MINUS0xa8__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d74b)
  store %struct.Memory* %call_41d74b, %struct.Memory** %MEMORY

  ; Code: movslq 0x8(%rsi), %rsi	 RIP: 41d752	 Bytes: 4
  %loadMem_41d752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d752 = call %struct.Memory* @routine_movslq_0x8__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d752)
  store %struct.Memory* %call_41d752, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 41d756	 Bytes: 4
  %loadMem_41d756 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d756 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d756)
  store %struct.Memory* %call_41d756, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 41d75a	 Bytes: 3
  %loadMem_41d75a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d75a = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d75a)
  store %struct.Memory* %call_41d75a, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41d75d	 Bytes: 3
  %loadMem_41d75d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d75d = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d75d)
  store %struct.Memory* %call_41d75d, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41d760	 Bytes: 5
  %loadMem1_41d760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d760 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d760, i64 -116336, i64 5, i64 5)
  store %struct.Memory* %call1_41d760, %struct.Memory** %MEMORY

  %loadMem2_41d760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d760 = load i64, i64* %3
  %call2_41d760 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41d760, %struct.Memory* %loadMem2_41d760)
  store %struct.Memory* %call2_41d760, %struct.Memory** %MEMORY

  ; Code: .L_41d765:	 RIP: 41d765	 Bytes: 0
  br label %block_.L_41d765
block_.L_41d765:

  ; Code: jmpq .L_41d76a	 RIP: 41d765	 Bytes: 5
  %loadMem_41d765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d765 = call %struct.Memory* @routine_jmpq_.L_41d76a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d765, i64 5, i64 5)
  store %struct.Memory* %call_41d765, %struct.Memory** %MEMORY

  br label %block_.L_41d76a

  ; Code: .L_41d76a:	 RIP: 41d76a	 Bytes: 0
block_.L_41d76a:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41d76a	 Bytes: 3
  %loadMem_41d76a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d76a = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d76a)
  store %struct.Memory* %call_41d76a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41d76d	 Bytes: 3
  %loadMem_41d76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d76d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d76d)
  store %struct.Memory* %call_41d76d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41d770	 Bytes: 3
  %loadMem_41d770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d770 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d770)
  store %struct.Memory* %call_41d770, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d6f5	 RIP: 41d773	 Bytes: 5
  %loadMem_41d773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d773 = call %struct.Memory* @routine_jmpq_.L_41d6f5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d773, i64 -126, i64 5)
  store %struct.Memory* %call_41d773, %struct.Memory** %MEMORY

  br label %block_.L_41d6f5

  ; Code: .L_41d778:	 RIP: 41d778	 Bytes: 0
block_.L_41d778:

  ; Code: movl $0x2, %edi	 RIP: 41d778	 Bytes: 5
  %loadMem_41d778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d778 = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d778)
  store %struct.Memory* %call_41d778, %struct.Memory** %MEMORY

  ; Code: movq $0x57b06c, %rsi	 RIP: 41d77d	 Bytes: 10
  %loadMem_41d77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d77d = call %struct.Memory* @routine_movq__0x57b06c___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d77d)
  store %struct.Memory* %call_41d77d, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41d787	 Bytes: 2
  %loadMem_41d787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d787 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d787)
  store %struct.Memory* %call_41d787, %struct.Memory** %MEMORY

  ; Code: movsd 0xc57cf(%rip), %xmm0	 RIP: 41d789	 Bytes: 8
  %loadMem_41d789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d789 = call %struct.Memory* @routine_movsd_0xc57cf__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d789)
  store %struct.Memory* %call_41d789, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41d791	 Bytes: 5
  %loadMem1_41d791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d791 = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d791, i64 388159, i64 5, i64 5)
  store %struct.Memory* %call1_41d791, %struct.Memory** %MEMORY

  %loadMem2_41d791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d791 = load i64, i64* %3
  %call2_41d791 = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41d791, %struct.Memory* %loadMem2_41d791)
  store %struct.Memory* %call2_41d791, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x20(%rbp)	 RIP: 41d796	 Bytes: 7
  %loadMem_41d796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d796 = call %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d796)
  store %struct.Memory* %call_41d796, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x418(%rbp)	 RIP: 41d79d	 Bytes: 8
  %loadMem_41d79d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d79d = call %struct.Memory* @routine_movsd__xmm0__MINUS0x418__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d79d)
  store %struct.Memory* %call_41d79d, %struct.Memory** %MEMORY

  ; Code: .L_41d7a5:	 RIP: 41d7a5	 Bytes: 0
  br label %block_.L_41d7a5
block_.L_41d7a5:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 41d7a5	 Bytes: 3
  %loadMem_41d7a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7a5 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7a5)
  store %struct.Memory* %call_41d7a5, %struct.Memory** %MEMORY

  ; Code: cmpl 0xb54cec, %eax	 RIP: 41d7a8	 Bytes: 7
  %loadMem_41d7a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7a8 = call %struct.Memory* @routine_cmpl_0xb54cec___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7a8)
  store %struct.Memory* %call_41d7a8, %struct.Memory** %MEMORY

  ; Code: jge .L_41d8bf	 RIP: 41d7af	 Bytes: 6
  %loadMem_41d7af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7af = call %struct.Memory* @routine_jge_.L_41d8bf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7af, i8* %BRANCH_TAKEN, i64 272, i64 6, i64 6)
  store %struct.Memory* %call_41d7af, %struct.Memory** %MEMORY

  %loadBr_41d7af = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d7af = icmp eq i8 %loadBr_41d7af, 1
  br i1 %cmpBr_41d7af, label %block_.L_41d8bf, label %block_41d7b5

block_41d7b5:
  ; Code: xorl %eax, %eax	 RIP: 41d7b5	 Bytes: 2
  %loadMem_41d7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7b5 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7b5)
  store %struct.Memory* %call_41d7b5, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41d7b7	 Bytes: 8
  %loadMem_41d7b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7b7 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7b7)
  store %struct.Memory* %call_41d7b7, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rdx	 RIP: 41d7bf	 Bytes: 4
  %loadMem_41d7bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7bf = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7bf)
  store %struct.Memory* %call_41d7bf, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rdx, %rdx	 RIP: 41d7c3	 Bytes: 4
  %loadMem_41d7c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7c3 = call %struct.Memory* @routine_imulq__0x68___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7c3)
  store %struct.Memory* %call_41d7c3, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 41d7c7	 Bytes: 3
  %loadMem_41d7c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7c7 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7c7)
  store %struct.Memory* %call_41d7c7, %struct.Memory** %MEMORY

  ; Code: movl (%rcx), %edi	 RIP: 41d7ca	 Bytes: 2
  %loadMem_41d7ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7ca = call %struct.Memory* @routine_movl___rcx____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7ca)
  store %struct.Memory* %call_41d7ca, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41d7cc	 Bytes: 8
  %loadMem_41d7cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7cc = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7cc)
  store %struct.Memory* %call_41d7cc, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rdx	 RIP: 41d7d4	 Bytes: 4
  %loadMem_41d7d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7d4 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7d4)
  store %struct.Memory* %call_41d7d4, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rdx, %rdx	 RIP: 41d7d8	 Bytes: 4
  %loadMem_41d7d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7d8 = call %struct.Memory* @routine_imulq__0x68___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7d8)
  store %struct.Memory* %call_41d7d8, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 41d7dc	 Bytes: 3
  %loadMem_41d7dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7dc = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7dc)
  store %struct.Memory* %call_41d7dc, %struct.Memory** %MEMORY

  ; Code: addq $0x64, %rcx	 RIP: 41d7df	 Bytes: 4
  %loadMem_41d7df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7df = call %struct.Memory* @routine_addq__0x64___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7df)
  store %struct.Memory* %call_41d7df, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41d7e3	 Bytes: 2
  %loadMem_41d7e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7e3 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7e3)
  store %struct.Memory* %call_41d7e3, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41d7e5	 Bytes: 2
  %loadMem_41d7e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7e5 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7e5)
  store %struct.Memory* %call_41d7e5, %struct.Memory** %MEMORY

  ; Code: callq .compute_surroundings	 RIP: 41d7e7	 Bytes: 5
  %loadMem1_41d7e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d7e7 = call %struct.Memory* @routine_callq_.compute_surroundings(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d7e7, i64 360425, i64 5, i64 5)
  store %struct.Memory* %call1_41d7e7, %struct.Memory** %MEMORY

  %loadMem2_41d7e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d7e7 = load i64, i64* %3
  %call2_41d7e7 = call %struct.Memory* @sub_4757d0.compute_surroundings(%struct.State* %0, i64  %loadPC_41d7e7, %struct.Memory* %loadMem2_41d7e7)
  store %struct.Memory* %call2_41d7e7, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41d7ec	 Bytes: 8
  %loadMem_41d7ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7ec = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7ec)
  store %struct.Memory* %call_41d7ec, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %r8	 RIP: 41d7f4	 Bytes: 4
  %loadMem_41d7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7f4 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7f4)
  store %struct.Memory* %call_41d7f4, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %r8, %r8	 RIP: 41d7f8	 Bytes: 4
  %loadMem_41d7f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7f8 = call %struct.Memory* @routine_imulq__0x68___r8___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7f8)
  store %struct.Memory* %call_41d7f8, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rcx	 RIP: 41d7fc	 Bytes: 3
  %loadMem_41d7fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7fc = call %struct.Memory* @routine_addq__r8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7fc)
  store %struct.Memory* %call_41d7fc, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x60(%rcx)	 RIP: 41d7ff	 Bytes: 3
  %loadMem_41d7ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d7ff = call %struct.Memory* @routine_movl__eax__0x60__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d7ff)
  store %struct.Memory* %call_41d7ff, %struct.Memory** %MEMORY

  ; Code: movl 0xab0f24, %eax	 RIP: 41d802	 Bytes: 7
  %loadMem_41d802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d802 = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d802)
  store %struct.Memory* %call_41d802, %struct.Memory** %MEMORY

  ; Code: andl $0x20, %eax	 RIP: 41d809	 Bytes: 3
  %loadMem_41d809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d809 = call %struct.Memory* @routine_andl__0x20___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d809)
  store %struct.Memory* %call_41d809, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41d80c	 Bytes: 3
  %loadMem_41d80c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d80c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d80c)
  store %struct.Memory* %call_41d80c, %struct.Memory** %MEMORY

  ; Code: je .L_41d8ac	 RIP: 41d80f	 Bytes: 6
  %loadMem_41d80f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d80f = call %struct.Memory* @routine_je_.L_41d8ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d80f, i8* %BRANCH_TAKEN, i64 157, i64 6, i64 6)
  store %struct.Memory* %call_41d80f, %struct.Memory** %MEMORY

  %loadBr_41d80f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d80f = icmp eq i8 %loadBr_41d80f, 1
  br i1 %cmpBr_41d80f, label %block_.L_41d8ac, label %block_41d815

block_41d815:
  ; Code: movq 0xab0fe0, %rax	 RIP: 41d815	 Bytes: 8
  %loadMem_41d815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d815 = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d815)
  store %struct.Memory* %call_41d815, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41d81d	 Bytes: 4
  %loadMem_41d81d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d81d = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d81d)
  store %struct.Memory* %call_41d81d, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41d821	 Bytes: 4
  %loadMem_41d821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d821 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d821)
  store %struct.Memory* %call_41d821, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d825	 Bytes: 3
  %loadMem_41d825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d825 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d825)
  store %struct.Memory* %call_41d825, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x60(%rax)	 RIP: 41d828	 Bytes: 4
  %loadMem_41d828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d828 = call %struct.Memory* @routine_cmpl__0x1__0x60__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d828)
  store %struct.Memory* %call_41d828, %struct.Memory** %MEMORY

  ; Code: jne .L_41d85e	 RIP: 41d82c	 Bytes: 6
  %loadMem_41d82c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d82c = call %struct.Memory* @routine_jne_.L_41d85e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d82c, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_41d82c, %struct.Memory** %MEMORY

  %loadBr_41d82c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d82c = icmp eq i8 %loadBr_41d82c, 1
  br i1 %cmpBr_41d82c, label %block_.L_41d85e, label %block_41d832

block_41d832:
  ; Code: movq $0x57b082, %rdi	 RIP: 41d832	 Bytes: 10
  %loadMem_41d832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d832 = call %struct.Memory* @routine_movq__0x57b082___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d832)
  store %struct.Memory* %call_41d832, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rax	 RIP: 41d83c	 Bytes: 8
  %loadMem_41d83c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d83c = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d83c)
  store %struct.Memory* %call_41d83c, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41d844	 Bytes: 4
  %loadMem_41d844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d844 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d844)
  store %struct.Memory* %call_41d844, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41d848	 Bytes: 4
  %loadMem_41d848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d848 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d848)
  store %struct.Memory* %call_41d848, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d84c	 Bytes: 3
  %loadMem_41d84c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d84c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d84c)
  store %struct.Memory* %call_41d84c, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %esi	 RIP: 41d84f	 Bytes: 2
  %loadMem_41d84f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d84f = call %struct.Memory* @routine_movl___rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d84f)
  store %struct.Memory* %call_41d84f, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41d851	 Bytes: 2
  %loadMem_41d851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d851 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d851)
  store %struct.Memory* %call_41d851, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 41d853	 Bytes: 5
  %loadMem1_41d853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d853 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d853, i64 214365, i64 5, i64 5)
  store %struct.Memory* %call1_41d853, %struct.Memory** %MEMORY

  %loadMem2_41d853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d853 = load i64, i64* %3
  %call2_41d853 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_41d853, %struct.Memory* %loadMem2_41d853)
  store %struct.Memory* %call2_41d853, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x41c(%rbp)	 RIP: 41d858	 Bytes: 6
  %loadMem_41d858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d858 = call %struct.Memory* @routine_movl__eax__MINUS0x41c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d858)
  store %struct.Memory* %call_41d858, %struct.Memory** %MEMORY

  ; Code: .L_41d85e:	 RIP: 41d85e	 Bytes: 0
  br label %block_.L_41d85e
block_.L_41d85e:

  ; Code: movq 0xab0fe0, %rax	 RIP: 41d85e	 Bytes: 8
  %loadMem_41d85e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d85e = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d85e)
  store %struct.Memory* %call_41d85e, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41d866	 Bytes: 4
  %loadMem_41d866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d866 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d866)
  store %struct.Memory* %call_41d866, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41d86a	 Bytes: 4
  %loadMem_41d86a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d86a = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d86a)
  store %struct.Memory* %call_41d86a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d86e	 Bytes: 3
  %loadMem_41d86e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d86e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d86e)
  store %struct.Memory* %call_41d86e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0x60(%rax)	 RIP: 41d871	 Bytes: 4
  %loadMem_41d871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d871 = call %struct.Memory* @routine_cmpl__0x2__0x60__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d871)
  store %struct.Memory* %call_41d871, %struct.Memory** %MEMORY

  ; Code: jne .L_41d8a7	 RIP: 41d875	 Bytes: 6
  %loadMem_41d875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d875 = call %struct.Memory* @routine_jne_.L_41d8a7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d875, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_41d875, %struct.Memory** %MEMORY

  %loadBr_41d875 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d875 = icmp eq i8 %loadBr_41d875, 1
  br i1 %cmpBr_41d875, label %block_.L_41d8a7, label %block_41d87b

block_41d87b:
  ; Code: movq $0x57b07b, %rdi	 RIP: 41d87b	 Bytes: 10
  %loadMem_41d87b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d87b = call %struct.Memory* @routine_movq__0x57b07b___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d87b)
  store %struct.Memory* %call_41d87b, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rax	 RIP: 41d885	 Bytes: 8
  %loadMem_41d885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d885 = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d885)
  store %struct.Memory* %call_41d885, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41d88d	 Bytes: 4
  %loadMem_41d88d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d88d = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d88d)
  store %struct.Memory* %call_41d88d, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41d891	 Bytes: 4
  %loadMem_41d891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d891 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d891)
  store %struct.Memory* %call_41d891, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d895	 Bytes: 3
  %loadMem_41d895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d895 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d895)
  store %struct.Memory* %call_41d895, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %esi	 RIP: 41d898	 Bytes: 2
  %loadMem_41d898 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d898 = call %struct.Memory* @routine_movl___rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d898)
  store %struct.Memory* %call_41d898, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41d89a	 Bytes: 2
  %loadMem_41d89a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d89a = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d89a)
  store %struct.Memory* %call_41d89a, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 41d89c	 Bytes: 5
  %loadMem1_41d89c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d89c = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d89c, i64 214292, i64 5, i64 5)
  store %struct.Memory* %call1_41d89c, %struct.Memory** %MEMORY

  %loadMem2_41d89c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d89c = load i64, i64* %3
  %call2_41d89c = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_41d89c, %struct.Memory* %loadMem2_41d89c)
  store %struct.Memory* %call2_41d89c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x420(%rbp)	 RIP: 41d8a1	 Bytes: 6
  %loadMem_41d8a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8a1 = call %struct.Memory* @routine_movl__eax__MINUS0x420__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8a1)
  store %struct.Memory* %call_41d8a1, %struct.Memory** %MEMORY

  ; Code: .L_41d8a7:	 RIP: 41d8a7	 Bytes: 0
  br label %block_.L_41d8a7
block_.L_41d8a7:

  ; Code: jmpq .L_41d8ac	 RIP: 41d8a7	 Bytes: 5
  %loadMem_41d8a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8a7 = call %struct.Memory* @routine_jmpq_.L_41d8ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8a7, i64 5, i64 5)
  store %struct.Memory* %call_41d8a7, %struct.Memory** %MEMORY

  br label %block_.L_41d8ac

  ; Code: .L_41d8ac:	 RIP: 41d8ac	 Bytes: 0
block_.L_41d8ac:

  ; Code: jmpq .L_41d8b1	 RIP: 41d8ac	 Bytes: 5
  %loadMem_41d8ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8ac = call %struct.Memory* @routine_jmpq_.L_41d8b1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8ac, i64 5, i64 5)
  store %struct.Memory* %call_41d8ac, %struct.Memory** %MEMORY

  br label %block_.L_41d8b1

  ; Code: .L_41d8b1:	 RIP: 41d8b1	 Bytes: 0
block_.L_41d8b1:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 41d8b1	 Bytes: 3
  %loadMem_41d8b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8b1 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8b1)
  store %struct.Memory* %call_41d8b1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41d8b4	 Bytes: 3
  %loadMem_41d8b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8b4 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8b4)
  store %struct.Memory* %call_41d8b4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 41d8b7	 Bytes: 3
  %loadMem_41d8b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8b7 = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8b7)
  store %struct.Memory* %call_41d8b7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d7a5	 RIP: 41d8ba	 Bytes: 5
  %loadMem_41d8ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8ba = call %struct.Memory* @routine_jmpq_.L_41d7a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8ba, i64 -277, i64 5)
  store %struct.Memory* %call_41d8ba, %struct.Memory** %MEMORY

  br label %block_.L_41d7a5

  ; Code: .L_41d8bf:	 RIP: 41d8bf	 Bytes: 0
block_.L_41d8bf:

  ; Code: movl $0x0, -0x20(%rbp)	 RIP: 41d8bf	 Bytes: 7
  %loadMem_41d8bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8bf = call %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8bf)
  store %struct.Memory* %call_41d8bf, %struct.Memory** %MEMORY

  ; Code: .L_41d8c6:	 RIP: 41d8c6	 Bytes: 0
  br label %block_.L_41d8c6
block_.L_41d8c6:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 41d8c6	 Bytes: 3
  %loadMem_41d8c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8c6 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8c6)
  store %struct.Memory* %call_41d8c6, %struct.Memory** %MEMORY

  ; Code: cmpl 0xb54cec, %eax	 RIP: 41d8c9	 Bytes: 7
  %loadMem_41d8c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8c9 = call %struct.Memory* @routine_cmpl_0xb54cec___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8c9)
  store %struct.Memory* %call_41d8c9, %struct.Memory** %MEMORY

  ; Code: jge .L_41db5d	 RIP: 41d8d0	 Bytes: 6
  %loadMem_41d8d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8d0 = call %struct.Memory* @routine_jge_.L_41db5d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8d0, i8* %BRANCH_TAKEN, i64 653, i64 6, i64 6)
  store %struct.Memory* %call_41d8d0, %struct.Memory** %MEMORY

  %loadBr_41d8d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d8d0 = icmp eq i8 %loadBr_41d8d0, 1
  br i1 %cmpBr_41d8d0, label %block_.L_41db5d, label %block_41d8d6

block_41d8d6:
  ; Code: movq 0xab0fe0, %rax	 RIP: 41d8d6	 Bytes: 8
  %loadMem_41d8d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8d6 = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8d6)
  store %struct.Memory* %call_41d8d6, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41d8de	 Bytes: 4
  %loadMem_41d8de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8de = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8de)
  store %struct.Memory* %call_41d8de, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41d8e2	 Bytes: 4
  %loadMem_41d8e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8e2 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8e2)
  store %struct.Memory* %call_41d8e2, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d8e6	 Bytes: 3
  %loadMem_41d8e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8e6 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8e6)
  store %struct.Memory* %call_41d8e6, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 41d8e9	 Bytes: 2
  %loadMem_41d8e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8e9 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8e9)
  store %struct.Memory* %call_41d8e9, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xb0(%rbp)	 RIP: 41d8eb	 Bytes: 6
  %loadMem_41d8eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8eb = call %struct.Memory* @routine_movl__edx__MINUS0xb0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8eb)
  store %struct.Memory* %call_41d8eb, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rax	 RIP: 41d8f1	 Bytes: 8
  %loadMem_41d8f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8f1 = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8f1)
  store %struct.Memory* %call_41d8f1, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41d8f9	 Bytes: 4
  %loadMem_41d8f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8f9 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8f9)
  store %struct.Memory* %call_41d8f9, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41d8fd	 Bytes: 4
  %loadMem_41d8fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d8fd = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d8fd)
  store %struct.Memory* %call_41d8fd, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d901	 Bytes: 3
  %loadMem_41d901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d901 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d901)
  store %struct.Memory* %call_41d901, %struct.Memory** %MEMORY

  ; Code: addq $0x4c, %rax	 RIP: 41d904	 Bytes: 4
  %loadMem_41d904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d904 = call %struct.Memory* @routine_addq__0x4c___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d904)
  store %struct.Memory* %call_41d904, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0xb8(%rbp)	 RIP: 41d908	 Bytes: 7
  %loadMem_41d908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d908 = call %struct.Memory* @routine_movq__rax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d908)
  store %struct.Memory* %call_41d908, %struct.Memory** %MEMORY

  ; Code: movq -0xb8(%rbp), %rdi	 RIP: 41d90f	 Bytes: 7
  %loadMem_41d90f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d90f = call %struct.Memory* @routine_movq_MINUS0xb8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d90f)
  store %struct.Memory* %call_41d90f, %struct.Memory** %MEMORY

  ; Code: callq .max_eyes	 RIP: 41d916	 Bytes: 5
  %loadMem1_41d916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d916 = call %struct.Memory* @routine_callq_.max_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d916, i64 120570, i64 5, i64 5)
  store %struct.Memory* %call1_41d916, %struct.Memory** %MEMORY

  %loadMem2_41d916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d916 = load i64, i64* %3
  %call2_41d916 = call %struct.Memory* @sub_43b010.max_eyes(%struct.State* %0, i64  %loadPC_41d916, %struct.Memory* %loadMem2_41d916)
  store %struct.Memory* %call2_41d916, %struct.Memory** %MEMORY

  ; Code: movq -0xb8(%rbp), %rdi	 RIP: 41d91b	 Bytes: 7
  %loadMem_41d91b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d91b = call %struct.Memory* @routine_movq_MINUS0xb8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d91b)
  store %struct.Memory* %call_41d91b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x424(%rbp)	 RIP: 41d922	 Bytes: 6
  %loadMem_41d922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d922 = call %struct.Memory* @routine_movl__eax__MINUS0x424__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d922)
  store %struct.Memory* %call_41d922, %struct.Memory** %MEMORY

  ; Code: callq .min_eyes	 RIP: 41d928	 Bytes: 5
  %loadMem1_41d928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d928 = call %struct.Memory* @routine_callq_.min_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d928, i64 123336, i64 5, i64 5)
  store %struct.Memory* %call1_41d928, %struct.Memory** %MEMORY

  %loadMem2_41d928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d928 = load i64, i64* %3
  %call2_41d928 = call %struct.Memory* @sub_43baf0.min_eyes(%struct.State* %0, i64  %loadPC_41d928, %struct.Memory* %loadMem2_41d928)
  store %struct.Memory* %call2_41d928, %struct.Memory** %MEMORY

  ; Code: movl -0x424(%rbp), %edx	 RIP: 41d92d	 Bytes: 6
  %loadMem_41d92d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d92d = call %struct.Memory* @routine_movl_MINUS0x424__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d92d)
  store %struct.Memory* %call_41d92d, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edx	 RIP: 41d933	 Bytes: 2
  %loadMem_41d933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d933 = call %struct.Memory* @routine_addl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d933)
  store %struct.Memory* %call_41d933, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xac(%rbp)	 RIP: 41d935	 Bytes: 6
  %loadMem_41d935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d935 = call %struct.Memory* @routine_movl__edx__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d935)
  store %struct.Memory* %call_41d935, %struct.Memory** %MEMORY

  ; Code: movl -0xb0(%rbp), %edi	 RIP: 41d93b	 Bytes: 6
  %loadMem_41d93b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d93b = call %struct.Memory* @routine_movl_MINUS0xb0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d93b)
  store %struct.Memory* %call_41d93b, %struct.Memory** %MEMORY

  ; Code: callq .dragon_looks_inessential	 RIP: 41d941	 Bytes: 5
  %loadMem1_41d941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41d941 = call %struct.Memory* @routine_callq_.dragon_looks_inessential(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41d941, i64 9327, i64 5, i64 5)
  store %struct.Memory* %call1_41d941, %struct.Memory** %MEMORY

  %loadMem2_41d941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41d941 = load i64, i64* %3
  %call2_41d941 = call %struct.Memory* @sub_41fdb0.dragon_looks_inessential(%struct.State* %0, i64  %loadPC_41d941, %struct.Memory* %loadMem2_41d941)
  store %struct.Memory* %call2_41d941, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41d946	 Bytes: 3
  %loadMem_41d946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d946 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d946)
  store %struct.Memory* %call_41d946, %struct.Memory** %MEMORY

  ; Code: je .L_41d96e	 RIP: 41d949	 Bytes: 6
  %loadMem_41d949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d949 = call %struct.Memory* @routine_je_.L_41d96e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d949, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_41d949, %struct.Memory** %MEMORY

  %loadBr_41d949 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d949 = icmp eq i8 %loadBr_41d949, 1
  br i1 %cmpBr_41d949, label %block_.L_41d96e, label %block_41d94f

block_41d94f:
  ; Code: movq 0xab0fe0, %rax	 RIP: 41d94f	 Bytes: 8
  %loadMem_41d94f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d94f = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d94f)
  store %struct.Memory* %call_41d94f, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41d957	 Bytes: 4
  %loadMem_41d957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d957 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d957)
  store %struct.Memory* %call_41d957, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41d95b	 Bytes: 4
  %loadMem_41d95b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d95b = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d95b)
  store %struct.Memory* %call_41d95b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d95f	 Bytes: 3
  %loadMem_41d95f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d95f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d95f)
  store %struct.Memory* %call_41d95f, %struct.Memory** %MEMORY

  ; Code: movl $0x5, 0x3c(%rax)	 RIP: 41d962	 Bytes: 7
  %loadMem_41d962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d962 = call %struct.Memory* @routine_movl__0x5__0x3c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d962)
  store %struct.Memory* %call_41d962, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41db4a	 RIP: 41d969	 Bytes: 5
  %loadMem_41d969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d969 = call %struct.Memory* @routine_jmpq_.L_41db4a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d969, i64 481, i64 5)
  store %struct.Memory* %call_41d969, %struct.Memory** %MEMORY

  br label %block_.L_41db4a

  ; Code: .L_41d96e:	 RIP: 41d96e	 Bytes: 0
block_.L_41d96e:

  ; Code: movq $0xb0eff0, %rax	 RIP: 41d96e	 Bytes: 10
  %loadMem_41d96e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d96e = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d96e)
  store %struct.Memory* %call_41d96e, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rcx	 RIP: 41d978	 Bytes: 10
  %loadMem_41d978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d978 = call %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d978)
  store %struct.Memory* %call_41d978, %struct.Memory** %MEMORY

  ; Code: movslq -0xb0(%rbp), %rdx	 RIP: 41d982	 Bytes: 7
  %loadMem_41d982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d982 = call %struct.Memory* @routine_movslq_MINUS0xb0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d982)
  store %struct.Memory* %call_41d982, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41d989	 Bytes: 4
  %loadMem_41d989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d989 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d989)
  store %struct.Memory* %call_41d989, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 41d98d	 Bytes: 3
  %loadMem_41d98d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d98d = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d98d)
  store %struct.Memory* %call_41d98d, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rcx), %esi	 RIP: 41d990	 Bytes: 3
  %loadMem_41d990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d990 = call %struct.Memory* @routine_movl_0xc__rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d990)
  store %struct.Memory* %call_41d990, %struct.Memory** %MEMORY

  ; Code: movslq -0xb0(%rbp), %rcx	 RIP: 41d993	 Bytes: 7
  %loadMem_41d993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d993 = call %struct.Memory* @routine_movslq_MINUS0xb0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d993)
  store %struct.Memory* %call_41d993, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41d99a	 Bytes: 7
  %loadMem_41d99a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d99a = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d99a)
  store %struct.Memory* %call_41d99a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d9a1	 Bytes: 3
  %loadMem_41d9a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9a1 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9a1)
  store %struct.Memory* %call_41d9a1, %struct.Memory** %MEMORY

  ; Code: cmpl 0x4(%rax), %esi	 RIP: 41d9a4	 Bytes: 3
  %loadMem_41d9a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9a4 = call %struct.Memory* @routine_cmpl_0x4__rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9a4)
  store %struct.Memory* %call_41d9a4, %struct.Memory** %MEMORY

  ; Code: jne .L_41da19	 RIP: 41d9a7	 Bytes: 6
  %loadMem_41d9a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9a7 = call %struct.Memory* @routine_jne_.L_41da19(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9a7, i8* %BRANCH_TAKEN, i64 114, i64 6, i64 6)
  store %struct.Memory* %call_41d9a7, %struct.Memory** %MEMORY

  %loadBr_41d9a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d9a7 = icmp eq i8 %loadBr_41d9a7, 1
  br i1 %cmpBr_41d9a7, label %block_.L_41da19, label %block_41d9ad

block_41d9ad:
  ; Code: movq $0xb0eff0, %rax	 RIP: 41d9ad	 Bytes: 10
  %loadMem_41d9ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9ad = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9ad)
  store %struct.Memory* %call_41d9ad, %struct.Memory** %MEMORY

  ; Code: movslq -0xb0(%rbp), %rcx	 RIP: 41d9b7	 Bytes: 7
  %loadMem_41d9b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9b7 = call %struct.Memory* @routine_movslq_MINUS0xb0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9b7)
  store %struct.Memory* %call_41d9b7, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41d9be	 Bytes: 7
  %loadMem_41d9be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9be = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9be)
  store %struct.Memory* %call_41d9be, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d9c5	 Bytes: 3
  %loadMem_41d9c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9c5 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9c5)
  store %struct.Memory* %call_41d9c5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x64(%rax)	 RIP: 41d9c8	 Bytes: 4
  %loadMem_41d9c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9c8 = call %struct.Memory* @routine_cmpl__0x0__0x64__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9c8)
  store %struct.Memory* %call_41d9c8, %struct.Memory** %MEMORY

  ; Code: je .L_41da19	 RIP: 41d9cc	 Bytes: 6
  %loadMem_41d9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9cc = call %struct.Memory* @routine_je_.L_41da19(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9cc, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_41d9cc, %struct.Memory** %MEMORY

  %loadBr_41d9cc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d9cc = icmp eq i8 %loadBr_41d9cc, 1
  br i1 %cmpBr_41d9cc, label %block_.L_41da19, label %block_41d9d2

block_41d9d2:
  ; Code: movq $0xb0eff0, %rax	 RIP: 41d9d2	 Bytes: 10
  %loadMem_41d9d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9d2 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9d2)
  store %struct.Memory* %call_41d9d2, %struct.Memory** %MEMORY

  ; Code: movslq -0xb0(%rbp), %rcx	 RIP: 41d9dc	 Bytes: 7
  %loadMem_41d9dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9dc = call %struct.Memory* @routine_movslq_MINUS0xb0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9dc)
  store %struct.Memory* %call_41d9dc, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41d9e3	 Bytes: 7
  %loadMem_41d9e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9e3 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9e3)
  store %struct.Memory* %call_41d9e3, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41d9ea	 Bytes: 3
  %loadMem_41d9ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9ea = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9ea)
  store %struct.Memory* %call_41d9ea, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb4(%rax)	 RIP: 41d9ed	 Bytes: 7
  %loadMem_41d9ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9ed = call %struct.Memory* @routine_cmpl__0x0__0xb4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9ed)
  store %struct.Memory* %call_41d9ed, %struct.Memory** %MEMORY

  ; Code: jne .L_41da19	 RIP: 41d9f4	 Bytes: 6
  %loadMem_41d9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9f4 = call %struct.Memory* @routine_jne_.L_41da19(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9f4, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_41d9f4, %struct.Memory** %MEMORY

  %loadBr_41d9f4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41d9f4 = icmp eq i8 %loadBr_41d9f4, 1
  br i1 %cmpBr_41d9f4, label %block_.L_41da19, label %block_41d9fa

block_41d9fa:
  ; Code: movq 0xab0fe0, %rax	 RIP: 41d9fa	 Bytes: 8
  %loadMem_41d9fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41d9fa = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41d9fa)
  store %struct.Memory* %call_41d9fa, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41da02	 Bytes: 4
  %loadMem_41da02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da02 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da02)
  store %struct.Memory* %call_41da02, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41da06	 Bytes: 4
  %loadMem_41da06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da06 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da06)
  store %struct.Memory* %call_41da06, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41da0a	 Bytes: 3
  %loadMem_41da0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da0a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da0a)
  store %struct.Memory* %call_41da0a, %struct.Memory** %MEMORY

  ; Code: movl $0x6, 0x3c(%rax)	 RIP: 41da0d	 Bytes: 7
  %loadMem_41da0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da0d = call %struct.Memory* @routine_movl__0x6__0x3c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da0d)
  store %struct.Memory* %call_41da0d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41db45	 RIP: 41da14	 Bytes: 5
  %loadMem_41da14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da14 = call %struct.Memory* @routine_jmpq_.L_41db45(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da14, i64 305, i64 5)
  store %struct.Memory* %call_41da14, %struct.Memory** %MEMORY

  br label %block_.L_41db45

  ; Code: .L_41da19:	 RIP: 41da19	 Bytes: 0
block_.L_41da19:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41da19	 Bytes: 10
  %loadMem_41da19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da19 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da19)
  store %struct.Memory* %call_41da19, %struct.Memory** %MEMORY

  ; Code: movslq -0xb0(%rbp), %rcx	 RIP: 41da23	 Bytes: 7
  %loadMem_41da23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da23 = call %struct.Memory* @routine_movslq_MINUS0xb0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da23)
  store %struct.Memory* %call_41da23, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41da2a	 Bytes: 4
  %loadMem_41da2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da2a = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da2a)
  store %struct.Memory* %call_41da2a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41da2e	 Bytes: 3
  %loadMem_41da2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da2e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da2e)
  store %struct.Memory* %call_41da2e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x1c(%rax)	 RIP: 41da31	 Bytes: 4
  %loadMem_41da31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da31 = call %struct.Memory* @routine_cmpl__0x0__0x1c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da31)
  store %struct.Memory* %call_41da31, %struct.Memory** %MEMORY

  ; Code: jne .L_41da5a	 RIP: 41da35	 Bytes: 6
  %loadMem_41da35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da35 = call %struct.Memory* @routine_jne_.L_41da5a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da35, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_41da35, %struct.Memory** %MEMORY

  %loadBr_41da35 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41da35 = icmp eq i8 %loadBr_41da35, 1
  br i1 %cmpBr_41da35, label %block_.L_41da5a, label %block_41da3b

block_41da3b:
  ; Code: movq 0xab0fe0, %rax	 RIP: 41da3b	 Bytes: 8
  %loadMem_41da3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da3b = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da3b)
  store %struct.Memory* %call_41da3b, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41da43	 Bytes: 4
  %loadMem_41da43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da43 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da43)
  store %struct.Memory* %call_41da43, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41da47	 Bytes: 4
  %loadMem_41da47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da47 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da47)
  store %struct.Memory* %call_41da47, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41da4b	 Bytes: 3
  %loadMem_41da4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da4b = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da4b)
  store %struct.Memory* %call_41da4b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x3c(%rax)	 RIP: 41da4e	 Bytes: 7
  %loadMem_41da4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da4e = call %struct.Memory* @routine_movl__0x0__0x3c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da4e)
  store %struct.Memory* %call_41da4e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41db40	 RIP: 41da55	 Bytes: 5
  %loadMem_41da55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da55 = call %struct.Memory* @routine_jmpq_.L_41db40(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da55, i64 235, i64 5)
  store %struct.Memory* %call_41da55, %struct.Memory** %MEMORY

  br label %block_.L_41db40

  ; Code: .L_41da5a:	 RIP: 41da5a	 Bytes: 0
block_.L_41da5a:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41da5a	 Bytes: 10
  %loadMem_41da5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da5a = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da5a)
  store %struct.Memory* %call_41da5a, %struct.Memory** %MEMORY

  ; Code: movslq -0xb0(%rbp), %rcx	 RIP: 41da64	 Bytes: 7
  %loadMem_41da64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da64 = call %struct.Memory* @routine_movslq_MINUS0xb0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da64)
  store %struct.Memory* %call_41da64, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41da6b	 Bytes: 4
  %loadMem_41da6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da6b = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da6b)
  store %struct.Memory* %call_41da6b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41da6f	 Bytes: 3
  %loadMem_41da6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da6f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da6f)
  store %struct.Memory* %call_41da6f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0x1c(%rax)	 RIP: 41da72	 Bytes: 4
  %loadMem_41da72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da72 = call %struct.Memory* @routine_cmpl__0x2__0x1c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da72)
  store %struct.Memory* %call_41da72, %struct.Memory** %MEMORY

  ; Code: jne .L_41da9b	 RIP: 41da76	 Bytes: 6
  %loadMem_41da76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da76 = call %struct.Memory* @routine_jne_.L_41da9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da76, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_41da76, %struct.Memory** %MEMORY

  %loadBr_41da76 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41da76 = icmp eq i8 %loadBr_41da76, 1
  br i1 %cmpBr_41da76, label %block_.L_41da9b, label %block_41da7c

block_41da7c:
  ; Code: movq 0xab0fe0, %rax	 RIP: 41da7c	 Bytes: 8
  %loadMem_41da7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da7c = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da7c)
  store %struct.Memory* %call_41da7c, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41da84	 Bytes: 4
  %loadMem_41da84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da84 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da84)
  store %struct.Memory* %call_41da84, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41da88	 Bytes: 4
  %loadMem_41da88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da88 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da88)
  store %struct.Memory* %call_41da88, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41da8c	 Bytes: 3
  %loadMem_41da8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da8c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da8c)
  store %struct.Memory* %call_41da8c, %struct.Memory** %MEMORY

  ; Code: movl $0x2, 0x3c(%rax)	 RIP: 41da8f	 Bytes: 7
  %loadMem_41da8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da8f = call %struct.Memory* @routine_movl__0x2__0x3c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da8f)
  store %struct.Memory* %call_41da8f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41db3b	 RIP: 41da96	 Bytes: 5
  %loadMem_41da96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da96 = call %struct.Memory* @routine_jmpq_.L_41db3b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da96, i64 165, i64 5)
  store %struct.Memory* %call_41da96, %struct.Memory** %MEMORY

  br label %block_.L_41db3b

  ; Code: .L_41da9b:	 RIP: 41da9b	 Bytes: 0
block_.L_41da9b:

  ; Code: movl -0xb0(%rbp), %edi	 RIP: 41da9b	 Bytes: 6
  %loadMem_41da9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41da9b = call %struct.Memory* @routine_movl_MINUS0xb0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41da9b)
  store %struct.Memory* %call_41da9b, %struct.Memory** %MEMORY

  ; Code: callq .dragon_invincible	 RIP: 41daa1	 Bytes: 5
  %loadMem1_41daa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41daa1 = call %struct.Memory* @routine_callq_.dragon_invincible(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41daa1, i64 9103, i64 5, i64 5)
  store %struct.Memory* %call1_41daa1, %struct.Memory** %MEMORY

  %loadMem2_41daa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41daa1 = load i64, i64* %3
  %call2_41daa1 = call %struct.Memory* @sub_41fe30.dragon_invincible(%struct.State* %0, i64  %loadPC_41daa1, %struct.Memory* %loadMem2_41daa1)
  store %struct.Memory* %call2_41daa1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41daa6	 Bytes: 3
  %loadMem_41daa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41daa6 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41daa6)
  store %struct.Memory* %call_41daa6, %struct.Memory** %MEMORY

  ; Code: je .L_41dace	 RIP: 41daa9	 Bytes: 6
  %loadMem_41daa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41daa9 = call %struct.Memory* @routine_je_.L_41dace(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41daa9, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_41daa9, %struct.Memory** %MEMORY

  %loadBr_41daa9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41daa9 = icmp eq i8 %loadBr_41daa9, 1
  br i1 %cmpBr_41daa9, label %block_.L_41dace, label %block_41daaf

block_41daaf:
  ; Code: movq 0xab0fe0, %rax	 RIP: 41daaf	 Bytes: 8
  %loadMem_41daaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41daaf = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41daaf)
  store %struct.Memory* %call_41daaf, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41dab7	 Bytes: 4
  %loadMem_41dab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dab7 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dab7)
  store %struct.Memory* %call_41dab7, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41dabb	 Bytes: 4
  %loadMem_41dabb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dabb = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dabb)
  store %struct.Memory* %call_41dabb, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41dabf	 Bytes: 3
  %loadMem_41dabf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dabf = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dabf)
  store %struct.Memory* %call_41dabf, %struct.Memory** %MEMORY

  ; Code: movl $0x9, 0x3c(%rax)	 RIP: 41dac2	 Bytes: 7
  %loadMem_41dac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dac2 = call %struct.Memory* @routine_movl__0x9__0x3c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dac2)
  store %struct.Memory* %call_41dac2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41db36	 RIP: 41dac9	 Bytes: 5
  %loadMem_41dac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dac9 = call %struct.Memory* @routine_jmpq_.L_41db36(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dac9, i64 109, i64 5)
  store %struct.Memory* %call_41dac9, %struct.Memory** %MEMORY

  br label %block_.L_41db36

  ; Code: .L_41dace:	 RIP: 41dace	 Bytes: 0
block_.L_41dace:

  ; Code: cmpl $0x6, -0xac(%rbp)	 RIP: 41dace	 Bytes: 7
  %loadMem_41dace = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dace = call %struct.Memory* @routine_cmpl__0x6__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dace)
  store %struct.Memory* %call_41dace, %struct.Memory** %MEMORY

  ; Code: jge .L_41daf8	 RIP: 41dad5	 Bytes: 6
  %loadMem_41dad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dad5 = call %struct.Memory* @routine_jge_.L_41daf8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dad5, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_41dad5, %struct.Memory** %MEMORY

  %loadBr_41dad5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dad5 = icmp eq i8 %loadBr_41dad5, 1
  br i1 %cmpBr_41dad5, label %block_.L_41daf8, label %block_41dadb

block_41dadb:
  ; Code: movq 0xab0fe0, %rax	 RIP: 41dadb	 Bytes: 8
  %loadMem_41dadb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dadb = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dadb)
  store %struct.Memory* %call_41dadb, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41dae3	 Bytes: 4
  %loadMem_41dae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dae3 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dae3)
  store %struct.Memory* %call_41dae3, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41dae7	 Bytes: 4
  %loadMem_41dae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dae7 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dae7)
  store %struct.Memory* %call_41dae7, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41daeb	 Bytes: 3
  %loadMem_41daeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41daeb = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41daeb)
  store %struct.Memory* %call_41daeb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x14, 0x34(%rax)	 RIP: 41daee	 Bytes: 4
  %loadMem_41daee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41daee = call %struct.Memory* @routine_cmpl__0x14__0x34__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41daee)
  store %struct.Memory* %call_41daee, %struct.Memory** %MEMORY

  ; Code: jle .L_41db17	 RIP: 41daf2	 Bytes: 6
  %loadMem_41daf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41daf2 = call %struct.Memory* @routine_jle_.L_41db17(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41daf2, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_41daf2, %struct.Memory** %MEMORY

  %loadBr_41daf2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41daf2 = icmp eq i8 %loadBr_41daf2, 1
  br i1 %cmpBr_41daf2, label %block_.L_41db17, label %block_.L_41daf8

  ; Code: .L_41daf8:	 RIP: 41daf8	 Bytes: 0
block_.L_41daf8:

  ; Code: movq 0xab0fe0, %rax	 RIP: 41daf8	 Bytes: 8
  %loadMem_41daf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41daf8 = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41daf8)
  store %struct.Memory* %call_41daf8, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41db00	 Bytes: 4
  %loadMem_41db00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db00 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db00)
  store %struct.Memory* %call_41db00, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41db04	 Bytes: 4
  %loadMem_41db04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db04 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db04)
  store %struct.Memory* %call_41db04, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41db08	 Bytes: 3
  %loadMem_41db08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db08 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db08)
  store %struct.Memory* %call_41db08, %struct.Memory** %MEMORY

  ; Code: movl $0x8, 0x3c(%rax)	 RIP: 41db0b	 Bytes: 7
  %loadMem_41db0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db0b = call %struct.Memory* @routine_movl__0x8__0x3c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db0b)
  store %struct.Memory* %call_41db0b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41db31	 RIP: 41db12	 Bytes: 5
  %loadMem_41db12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db12 = call %struct.Memory* @routine_jmpq_.L_41db31(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db12, i64 31, i64 5)
  store %struct.Memory* %call_41db12, %struct.Memory** %MEMORY

  br label %block_.L_41db31

  ; Code: .L_41db17:	 RIP: 41db17	 Bytes: 0
block_.L_41db17:

  ; Code: movq 0xab0fe0, %rax	 RIP: 41db17	 Bytes: 8
  %loadMem_41db17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db17 = call %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db17)
  store %struct.Memory* %call_41db17, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 41db1f	 Bytes: 4
  %loadMem_41db1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db1f = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db1f)
  store %struct.Memory* %call_41db1f, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rcx, %rcx	 RIP: 41db23	 Bytes: 4
  %loadMem_41db23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db23 = call %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db23)
  store %struct.Memory* %call_41db23, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41db27	 Bytes: 3
  %loadMem_41db27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db27 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db27)
  store %struct.Memory* %call_41db27, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x3c(%rax)	 RIP: 41db2a	 Bytes: 7
  %loadMem_41db2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db2a = call %struct.Memory* @routine_movl__0x1__0x3c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db2a)
  store %struct.Memory* %call_41db2a, %struct.Memory** %MEMORY

  ; Code: .L_41db31:	 RIP: 41db31	 Bytes: 0
  br label %block_.L_41db31
block_.L_41db31:

  ; Code: jmpq .L_41db36	 RIP: 41db31	 Bytes: 5
  %loadMem_41db31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db31 = call %struct.Memory* @routine_jmpq_.L_41db36(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db31, i64 5, i64 5)
  store %struct.Memory* %call_41db31, %struct.Memory** %MEMORY

  br label %block_.L_41db36

  ; Code: .L_41db36:	 RIP: 41db36	 Bytes: 0
block_.L_41db36:

  ; Code: jmpq .L_41db3b	 RIP: 41db36	 Bytes: 5
  %loadMem_41db36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db36 = call %struct.Memory* @routine_jmpq_.L_41db3b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db36, i64 5, i64 5)
  store %struct.Memory* %call_41db36, %struct.Memory** %MEMORY

  br label %block_.L_41db3b

  ; Code: .L_41db3b:	 RIP: 41db3b	 Bytes: 0
block_.L_41db3b:

  ; Code: jmpq .L_41db40	 RIP: 41db3b	 Bytes: 5
  %loadMem_41db3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db3b = call %struct.Memory* @routine_jmpq_.L_41db40(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db3b, i64 5, i64 5)
  store %struct.Memory* %call_41db3b, %struct.Memory** %MEMORY

  br label %block_.L_41db40

  ; Code: .L_41db40:	 RIP: 41db40	 Bytes: 0
block_.L_41db40:

  ; Code: jmpq .L_41db45	 RIP: 41db40	 Bytes: 5
  %loadMem_41db40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db40 = call %struct.Memory* @routine_jmpq_.L_41db45(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db40, i64 5, i64 5)
  store %struct.Memory* %call_41db40, %struct.Memory** %MEMORY

  br label %block_.L_41db45

  ; Code: .L_41db45:	 RIP: 41db45	 Bytes: 0
block_.L_41db45:

  ; Code: jmpq .L_41db4a	 RIP: 41db45	 Bytes: 5
  %loadMem_41db45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db45 = call %struct.Memory* @routine_jmpq_.L_41db4a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db45, i64 5, i64 5)
  store %struct.Memory* %call_41db45, %struct.Memory** %MEMORY

  br label %block_.L_41db4a

  ; Code: .L_41db4a:	 RIP: 41db4a	 Bytes: 0
block_.L_41db4a:

  ; Code: jmpq .L_41db4f	 RIP: 41db4a	 Bytes: 5
  %loadMem_41db4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db4a = call %struct.Memory* @routine_jmpq_.L_41db4f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db4a, i64 5, i64 5)
  store %struct.Memory* %call_41db4a, %struct.Memory** %MEMORY

  br label %block_.L_41db4f

  ; Code: .L_41db4f:	 RIP: 41db4f	 Bytes: 0
block_.L_41db4f:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 41db4f	 Bytes: 3
  %loadMem_41db4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db4f = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db4f)
  store %struct.Memory* %call_41db4f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41db52	 Bytes: 3
  %loadMem_41db52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db52 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db52)
  store %struct.Memory* %call_41db52, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 41db55	 Bytes: 3
  %loadMem_41db55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db55 = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db55)
  store %struct.Memory* %call_41db55, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41d8c6	 RIP: 41db58	 Bytes: 5
  %loadMem_41db58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db58 = call %struct.Memory* @routine_jmpq_.L_41d8c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db58, i64 -658, i64 5)
  store %struct.Memory* %call_41db58, %struct.Memory** %MEMORY

  br label %block_.L_41d8c6

  ; Code: .L_41db5d:	 RIP: 41db5d	 Bytes: 0
block_.L_41db5d:

  ; Code: movl $0x2, %edi	 RIP: 41db5d	 Bytes: 5
  %loadMem_41db5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db5d = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db5d)
  store %struct.Memory* %call_41db5d, %struct.Memory** %MEMORY

  ; Code: movq $0x57b0a2, %rsi	 RIP: 41db62	 Bytes: 10
  %loadMem_41db62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db62 = call %struct.Memory* @routine_movq__0x57b0a2___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db62)
  store %struct.Memory* %call_41db62, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41db6c	 Bytes: 2
  %loadMem_41db6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db6c = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db6c)
  store %struct.Memory* %call_41db6c, %struct.Memory** %MEMORY

  ; Code: movsd 0xc53ea(%rip), %xmm0	 RIP: 41db6e	 Bytes: 8
  %loadMem_41db6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db6e = call %struct.Memory* @routine_movsd_0xc53ea__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db6e)
  store %struct.Memory* %call_41db6e, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41db76	 Bytes: 5
  %loadMem1_41db76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41db76 = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41db76, i64 387162, i64 5, i64 5)
  store %struct.Memory* %call1_41db76, %struct.Memory** %MEMORY

  %loadMem2_41db76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41db76 = load i64, i64* %3
  %call2_41db76 = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41db76, %struct.Memory* %loadMem2_41db76)
  store %struct.Memory* %call2_41db76, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x7ae44c	 RIP: 41db7b	 Bytes: 8
  %loadMem_41db7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db7b = call %struct.Memory* @routine_cmpl__0x0__0x7ae44c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db7b)
  store %struct.Memory* %call_41db7b, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x430(%rbp)	 RIP: 41db83	 Bytes: 8
  %loadMem_41db83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db83 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x430__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db83)
  store %struct.Memory* %call_41db83, %struct.Memory** %MEMORY

  ; Code: je .L_41dbac	 RIP: 41db8b	 Bytes: 6
  %loadMem_41db8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db8b = call %struct.Memory* @routine_je_.L_41dbac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db8b, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_41db8b, %struct.Memory** %MEMORY

  %loadBr_41db8b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41db8b = icmp eq i8 %loadBr_41db8b, 1
  br i1 %cmpBr_41db8b, label %block_.L_41dbac, label %block_41db91

block_41db91:
  ; Code: cmpl $0x8, 0x7ae448	 RIP: 41db91	 Bytes: 8
  %loadMem_41db91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db91 = call %struct.Memory* @routine_cmpl__0x8__0x7ae448(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db91)
  store %struct.Memory* %call_41db91, %struct.Memory** %MEMORY

  ; Code: jl .L_41dbac	 RIP: 41db99	 Bytes: 6
  %loadMem_41db99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db99 = call %struct.Memory* @routine_jl_.L_41dbac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db99, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_41db99, %struct.Memory** %MEMORY

  %loadBr_41db99 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41db99 = icmp eq i8 %loadBr_41db99, 1
  br i1 %cmpBr_41db99, label %block_.L_41dbac, label %block_41db9f

block_41db9f:
  ; Code: movl -0xc(%rbp), %edi	 RIP: 41db9f	 Bytes: 3
  %loadMem_41db9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41db9f = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41db9f)
  store %struct.Memory* %call_41db9f, %struct.Memory** %MEMORY

  ; Code: callq .new_semeai	 RIP: 41dba2	 Bytes: 5
  %loadMem1_41dba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dba2 = call %struct.Memory* @routine_callq_.new_semeai(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dba2, i64 338414, i64 5, i64 5)
  store %struct.Memory* %call1_41dba2, %struct.Memory** %MEMORY

  %loadMem2_41dba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dba2 = load i64, i64* %3
  %call2_41dba2 = call %struct.Memory* @sub_470590.new_semeai(%struct.State* %0, i64  %loadPC_41dba2, %struct.Memory* %loadMem2_41dba2)
  store %struct.Memory* %call2_41dba2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41dbb4	 RIP: 41dba7	 Bytes: 5
  %loadMem_41dba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dba7 = call %struct.Memory* @routine_jmpq_.L_41dbb4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dba7, i64 13, i64 5)
  store %struct.Memory* %call_41dba7, %struct.Memory** %MEMORY

  br label %block_.L_41dbb4

  ; Code: .L_41dbac:	 RIP: 41dbac	 Bytes: 0
block_.L_41dbac:

  ; Code: movl -0xc(%rbp), %edi	 RIP: 41dbac	 Bytes: 3
  %loadMem_41dbac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbac = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbac)
  store %struct.Memory* %call_41dbac, %struct.Memory** %MEMORY

  ; Code: callq .semeai	 RIP: 41dbaf	 Bytes: 5
  %loadMem1_41dbaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dbaf = call %struct.Memory* @routine_callq_.semeai(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dbaf, i64 331521, i64 5, i64 5)
  store %struct.Memory* %call1_41dbaf, %struct.Memory** %MEMORY

  %loadMem2_41dbaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dbaf = load i64, i64* %3
  %call2_41dbaf = call %struct.Memory* @sub_46eab0.semeai(%struct.State* %0, i64  %loadPC_41dbaf, %struct.Memory* %loadMem2_41dbaf)
  store %struct.Memory* %call2_41dbaf, %struct.Memory** %MEMORY

  ; Code: .L_41dbb4:	 RIP: 41dbb4	 Bytes: 0
  br label %block_.L_41dbb4
block_.L_41dbb4:

  ; Code: movl $0x2, %edi	 RIP: 41dbb4	 Bytes: 5
  %loadMem_41dbb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbb4 = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbb4)
  store %struct.Memory* %call_41dbb4, %struct.Memory** %MEMORY

  ; Code: movq $0x57b0b9, %rsi	 RIP: 41dbb9	 Bytes: 10
  %loadMem_41dbb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbb9 = call %struct.Memory* @routine_movq__0x57b0b9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbb9)
  store %struct.Memory* %call_41dbb9, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41dbc3	 Bytes: 2
  %loadMem_41dbc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbc3 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbc3)
  store %struct.Memory* %call_41dbc3, %struct.Memory** %MEMORY

  ; Code: movsd 0xc5393(%rip), %xmm0	 RIP: 41dbc5	 Bytes: 8
  %loadMem_41dbc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbc5 = call %struct.Memory* @routine_movsd_0xc5393__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbc5)
  store %struct.Memory* %call_41dbc5, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41dbcd	 Bytes: 5
  %loadMem1_41dbcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dbcd = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dbcd, i64 387075, i64 5, i64 5)
  store %struct.Memory* %call1_41dbcd, %struct.Memory** %MEMORY

  %loadMem2_41dbcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dbcd = load i64, i64* %3
  %call2_41dbcd = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41dbcd, %struct.Memory* %loadMem2_41dbcd)
  store %struct.Memory* %call2_41dbcd, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41dbd2	 Bytes: 7
  %loadMem_41dbd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbd2 = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbd2)
  store %struct.Memory* %call_41dbd2, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x438(%rbp)	 RIP: 41dbd9	 Bytes: 8
  %loadMem_41dbd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbd9 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x438__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbd9)
  store %struct.Memory* %call_41dbd9, %struct.Memory** %MEMORY

  ; Code: .L_41dbe1:	 RIP: 41dbe1	 Bytes: 0
  br label %block_.L_41dbe1
block_.L_41dbe1:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41dbe1	 Bytes: 7
  %loadMem_41dbe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbe1 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbe1)
  store %struct.Memory* %call_41dbe1, %struct.Memory** %MEMORY

  ; Code: jge .L_41dc4d	 RIP: 41dbe8	 Bytes: 6
  %loadMem_41dbe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbe8 = call %struct.Memory* @routine_jge_.L_41dc4d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbe8, i8* %BRANCH_TAKEN, i64 101, i64 6, i64 6)
  store %struct.Memory* %call_41dbe8, %struct.Memory** %MEMORY

  %loadBr_41dbe8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dbe8 = icmp eq i8 %loadBr_41dbe8, 1
  br i1 %cmpBr_41dbe8, label %block_.L_41dc4d, label %block_41dbee

block_41dbee:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41dbee	 Bytes: 4
  %loadMem_41dbee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbee = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbee)
  store %struct.Memory* %call_41dbee, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41dbf2	 Bytes: 8
  %loadMem_41dbf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbf2 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbf2)
  store %struct.Memory* %call_41dbf2, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41dbfa	 Bytes: 3
  %loadMem_41dbfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbfa = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbfa)
  store %struct.Memory* %call_41dbfa, %struct.Memory** %MEMORY

  ; Code: je .L_41dc3a	 RIP: 41dbfd	 Bytes: 6
  %loadMem_41dbfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbfd = call %struct.Memory* @routine_je_.L_41dc3a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbfd, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_41dbfd, %struct.Memory** %MEMORY

  %loadBr_41dbfd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dbfd = icmp eq i8 %loadBr_41dbfd, 1
  br i1 %cmpBr_41dbfd, label %block_.L_41dc3a, label %block_41dc03

block_41dc03:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41dc03	 Bytes: 10
  %loadMem_41dc03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc03 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc03)
  store %struct.Memory* %call_41dc03, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41dc0d	 Bytes: 4
  %loadMem_41dc0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc0d = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc0d)
  store %struct.Memory* %call_41dc0d, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41dc11	 Bytes: 4
  %loadMem_41dc11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc11 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc11)
  store %struct.Memory* %call_41dc11, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41dc15	 Bytes: 3
  %loadMem_41dc15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc15 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc15)
  store %struct.Memory* %call_41dc15, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41dc18	 Bytes: 3
  %loadMem_41dc18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc18 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc18)
  store %struct.Memory* %call_41dc18, %struct.Memory** %MEMORY

  ; Code: movslq 0x8(%rdx), %rcx	 RIP: 41dc1b	 Bytes: 4
  %loadMem_41dc1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc1b = call %struct.Memory* @routine_movslq_0x8__rdx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc1b)
  store %struct.Memory* %call_41dc1b, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41dc1f	 Bytes: 4
  %loadMem_41dc1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc1f = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc1f)
  store %struct.Memory* %call_41dc1f, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 41dc23	 Bytes: 3
  %loadMem_41dc23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc23 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc23)
  store %struct.Memory* %call_41dc23, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 41dc26	 Bytes: 3
  %loadMem_41dc26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc26 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc26)
  store %struct.Memory* %call_41dc26, %struct.Memory** %MEMORY

  ; Code: movl 0x40(%rdx), %esi	 RIP: 41dc29	 Bytes: 3
  %loadMem_41dc29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc29 = call %struct.Memory* @routine_movl_0x40__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc29)
  store %struct.Memory* %call_41dc29, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41dc2c	 Bytes: 4
  %loadMem_41dc2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc2c = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc2c)
  store %struct.Memory* %call_41dc2c, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41dc30	 Bytes: 4
  %loadMem_41dc30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc30 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc30)
  store %struct.Memory* %call_41dc30, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41dc34	 Bytes: 3
  %loadMem_41dc34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc34 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc34)
  store %struct.Memory* %call_41dc34, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x40(%rax)	 RIP: 41dc37	 Bytes: 3
  %loadMem_41dc37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc37 = call %struct.Memory* @routine_movl__esi__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc37)
  store %struct.Memory* %call_41dc37, %struct.Memory** %MEMORY

  ; Code: .L_41dc3a:	 RIP: 41dc3a	 Bytes: 0
  br label %block_.L_41dc3a
block_.L_41dc3a:

  ; Code: jmpq .L_41dc3f	 RIP: 41dc3a	 Bytes: 5
  %loadMem_41dc3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc3a = call %struct.Memory* @routine_jmpq_.L_41dc3f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc3a, i64 5, i64 5)
  store %struct.Memory* %call_41dc3a, %struct.Memory** %MEMORY

  br label %block_.L_41dc3f

  ; Code: .L_41dc3f:	 RIP: 41dc3f	 Bytes: 0
block_.L_41dc3f:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41dc3f	 Bytes: 3
  %loadMem_41dc3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc3f = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc3f)
  store %struct.Memory* %call_41dc3f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41dc42	 Bytes: 3
  %loadMem_41dc42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc42 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc42)
  store %struct.Memory* %call_41dc42, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41dc45	 Bytes: 3
  %loadMem_41dc45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc45 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc45)
  store %struct.Memory* %call_41dc45, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41dbe1	 RIP: 41dc48	 Bytes: 5
  %loadMem_41dc48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc48 = call %struct.Memory* @routine_jmpq_.L_41dbe1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc48, i64 -103, i64 5)
  store %struct.Memory* %call_41dc48, %struct.Memory** %MEMORY

  br label %block_.L_41dbe1

  ; Code: .L_41dc4d:	 RIP: 41dc4d	 Bytes: 0
block_.L_41dc4d:

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41dc4d	 Bytes: 7
  %loadMem_41dc4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc4d = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc4d)
  store %struct.Memory* %call_41dc4d, %struct.Memory** %MEMORY

  ; Code: .L_41dc54:	 RIP: 41dc54	 Bytes: 0
  br label %block_.L_41dc54
block_.L_41dc54:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41dc54	 Bytes: 7
  %loadMem_41dc54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc54 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc54)
  store %struct.Memory* %call_41dc54, %struct.Memory** %MEMORY

  ; Code: jge .L_41de14	 RIP: 41dc5b	 Bytes: 6
  %loadMem_41dc5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc5b = call %struct.Memory* @routine_jge_.L_41de14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc5b, i8* %BRANCH_TAKEN, i64 441, i64 6, i64 6)
  store %struct.Memory* %call_41dc5b, %struct.Memory** %MEMORY

  %loadBr_41dc5b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dc5b = icmp eq i8 %loadBr_41dc5b, 1
  br i1 %cmpBr_41dc5b, label %block_.L_41de14, label %block_41dc61

block_41dc61:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41dc61	 Bytes: 4
  %loadMem_41dc61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc61 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc61)
  store %struct.Memory* %call_41dc61, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41dc65	 Bytes: 8
  %loadMem_41dc65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc65 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc65)
  store %struct.Memory* %call_41dc65, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41dc6d	 Bytes: 3
  %loadMem_41dc6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc6d = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc6d)
  store %struct.Memory* %call_41dc6d, %struct.Memory** %MEMORY

  ; Code: je .L_41de01	 RIP: 41dc70	 Bytes: 6
  %loadMem_41dc70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc70 = call %struct.Memory* @routine_je_.L_41de01(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc70, i8* %BRANCH_TAKEN, i64 401, i64 6, i64 6)
  store %struct.Memory* %call_41dc70, %struct.Memory** %MEMORY

  %loadBr_41dc70 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dc70 = icmp eq i8 %loadBr_41dc70, 1
  br i1 %cmpBr_41dc70, label %block_.L_41de01, label %block_41dc76

block_41dc76:
  ; Code: movl -0x18(%rbp), %edi	 RIP: 41dc76	 Bytes: 3
  %loadMem_41dc76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc76 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc76)
  store %struct.Memory* %call_41dc76, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 41dc79	 Bytes: 3
  %loadMem_41dc79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc79 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc79)
  store %struct.Memory* %call_41dc79, %struct.Memory** %MEMORY

  ; Code: callq .is_worm_origin	 RIP: 41dc7c	 Bytes: 5
  %loadMem1_41dc7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dc7c = call %struct.Memory* @routine_callq_.is_worm_origin(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dc7c, i64 435316, i64 5, i64 5)
  store %struct.Memory* %call1_41dc7c, %struct.Memory** %MEMORY

  %loadMem2_41dc7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dc7c = load i64, i64* %3
  %call2_41dc7c = call %struct.Memory* @sub_4880f0.is_worm_origin(%struct.State* %0, i64  %loadPC_41dc7c, %struct.Memory* %loadMem2_41dc7c)
  store %struct.Memory* %call2_41dc7c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41dc81	 Bytes: 3
  %loadMem_41dc81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc81 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc81)
  store %struct.Memory* %call_41dc81, %struct.Memory** %MEMORY

  ; Code: je .L_41ddfc	 RIP: 41dc84	 Bytes: 6
  %loadMem_41dc84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc84 = call %struct.Memory* @routine_je_.L_41ddfc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc84, i8* %BRANCH_TAKEN, i64 376, i64 6, i64 6)
  store %struct.Memory* %call_41dc84, %struct.Memory** %MEMORY

  %loadBr_41dc84 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dc84 = icmp eq i8 %loadBr_41dc84, 1
  br i1 %cmpBr_41dc84, label %block_.L_41ddfc, label %block_41dc8a

block_41dc8a:
  ; Code: movq $0xb0eff0, %rax	 RIP: 41dc8a	 Bytes: 10
  %loadMem_41dc8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc8a = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc8a)
  store %struct.Memory* %call_41dc8a, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41dc94	 Bytes: 4
  %loadMem_41dc94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc94 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc94)
  store %struct.Memory* %call_41dc94, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41dc98	 Bytes: 7
  %loadMem_41dc98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc98 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc98)
  store %struct.Memory* %call_41dc98, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41dc9f	 Bytes: 3
  %loadMem_41dc9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc9f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc9f)
  store %struct.Memory* %call_41dc9f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x64(%rax)	 RIP: 41dca2	 Bytes: 4
  %loadMem_41dca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dca2 = call %struct.Memory* @routine_cmpl__0x0__0x64__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dca2)
  store %struct.Memory* %call_41dca2, %struct.Memory** %MEMORY

  ; Code: je .L_41ddfc	 RIP: 41dca6	 Bytes: 6
  %loadMem_41dca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dca6 = call %struct.Memory* @routine_je_.L_41ddfc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dca6, i8* %BRANCH_TAKEN, i64 342, i64 6, i64 6)
  store %struct.Memory* %call_41dca6, %struct.Memory** %MEMORY

  %loadBr_41dca6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dca6 = icmp eq i8 %loadBr_41dca6, 1
  br i1 %cmpBr_41dca6, label %block_.L_41ddfc, label %block_41dcac

block_41dcac:
  ; Code: movq $0xb0eff0, %rax	 RIP: 41dcac	 Bytes: 10
  %loadMem_41dcac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcac = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcac)
  store %struct.Memory* %call_41dcac, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41dcb6	 Bytes: 4
  %loadMem_41dcb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcb6 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcb6)
  store %struct.Memory* %call_41dcb6, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41dcba	 Bytes: 7
  %loadMem_41dcba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcba = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcba)
  store %struct.Memory* %call_41dcba, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41dcc1	 Bytes: 3
  %loadMem_41dcc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcc1 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcc1)
  store %struct.Memory* %call_41dcc1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xb4(%rax)	 RIP: 41dcc4	 Bytes: 7
  %loadMem_41dcc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcc4 = call %struct.Memory* @routine_cmpl__0x0__0xb4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcc4)
  store %struct.Memory* %call_41dcc4, %struct.Memory** %MEMORY

  ; Code: je .L_41ddfc	 RIP: 41dccb	 Bytes: 6
  %loadMem_41dccb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dccb = call %struct.Memory* @routine_je_.L_41ddfc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dccb, i8* %BRANCH_TAKEN, i64 305, i64 6, i64 6)
  store %struct.Memory* %call_41dccb, %struct.Memory** %MEMORY

  %loadBr_41dccb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dccb = icmp eq i8 %loadBr_41dccb, 1
  br i1 %cmpBr_41dccb, label %block_.L_41ddfc, label %block_41dcd1

block_41dcd1:
  ; Code: movq $0xb0eff0, %rax	 RIP: 41dcd1	 Bytes: 10
  %loadMem_41dcd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcd1 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcd1)
  store %struct.Memory* %call_41dcd1, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41dcdb	 Bytes: 4
  %loadMem_41dcdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcdb = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcdb)
  store %struct.Memory* %call_41dcdb, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41dcdf	 Bytes: 7
  %loadMem_41dcdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcdf = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcdf)
  store %struct.Memory* %call_41dcdf, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41dce6	 Bytes: 3
  %loadMem_41dce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dce6 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dce6)
  store %struct.Memory* %call_41dce6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x30(%rax)	 RIP: 41dce9	 Bytes: 4
  %loadMem_41dce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dce9 = call %struct.Memory* @routine_cmpl__0x0__0x30__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dce9)
  store %struct.Memory* %call_41dce9, %struct.Memory** %MEMORY

  ; Code: jne .L_41ddfc	 RIP: 41dced	 Bytes: 6
  %loadMem_41dced = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dced = call %struct.Memory* @routine_jne_.L_41ddfc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dced, i8* %BRANCH_TAKEN, i64 271, i64 6, i64 6)
  store %struct.Memory* %call_41dced, %struct.Memory** %MEMORY

  %loadBr_41dced = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dced = icmp eq i8 %loadBr_41dced, 1
  br i1 %cmpBr_41dced, label %block_.L_41ddfc, label %block_41dcf3

block_41dcf3:
  ; Code: xorl %edx, %edx	 RIP: 41dcf3	 Bytes: 2
  %loadMem_41dcf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcf3 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcf3)
  store %struct.Memory* %call_41dcf3, %struct.Memory** %MEMORY

  ; Code: leaq -0x340(%rbp), %rsi	 RIP: 41dcf5	 Bytes: 7
  %loadMem_41dcf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcf5 = call %struct.Memory* @routine_leaq_MINUS0x340__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcf5)
  store %struct.Memory* %call_41dcf5, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x34c(%rbp)	 RIP: 41dcfc	 Bytes: 10
  %loadMem_41dcfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcfc = call %struct.Memory* @routine_movl__0x0__MINUS0x34c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcfc)
  store %struct.Memory* %call_41dcfc, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41dd06	 Bytes: 3
  %loadMem_41dd06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd06 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd06)
  store %struct.Memory* %call_41dd06, %struct.Memory** %MEMORY

  ; Code: callq .extended_chainlinks	 RIP: 41dd09	 Bytes: 5
  %loadMem1_41dd09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dd09 = call %struct.Memory* @routine_callq_.extended_chainlinks(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dd09, i64 -40521, i64 5, i64 5)
  store %struct.Memory* %call1_41dd09, %struct.Memory** %MEMORY

  %loadMem2_41dd09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dd09 = load i64, i64* %3
  %call2_41dd09 = call %struct.Memory* @sub_413ec0.extended_chainlinks(%struct.State* %0, i64  %loadPC_41dd09, %struct.Memory* %loadMem2_41dd09)
  store %struct.Memory* %call2_41dd09, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x344(%rbp)	 RIP: 41dd0e	 Bytes: 6
  %loadMem_41dd0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd0e = call %struct.Memory* @routine_movl__eax__MINUS0x344__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd0e)
  store %struct.Memory* %call_41dd0e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x348(%rbp)	 RIP: 41dd14	 Bytes: 10
  %loadMem_41dd14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd14 = call %struct.Memory* @routine_movl__0x0__MINUS0x348__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd14)
  store %struct.Memory* %call_41dd14, %struct.Memory** %MEMORY

  ; Code: .L_41dd1e:	 RIP: 41dd1e	 Bytes: 0
  br label %block_.L_41dd1e
block_.L_41dd1e:

  ; Code: movl -0x348(%rbp), %eax	 RIP: 41dd1e	 Bytes: 6
  %loadMem_41dd1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd1e = call %struct.Memory* @routine_movl_MINUS0x348__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd1e)
  store %struct.Memory* %call_41dd1e, %struct.Memory** %MEMORY

  ; Code: cmpl -0x344(%rbp), %eax	 RIP: 41dd24	 Bytes: 6
  %loadMem_41dd24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd24 = call %struct.Memory* @routine_cmpl_MINUS0x344__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd24)
  store %struct.Memory* %call_41dd24, %struct.Memory** %MEMORY

  ; Code: jge .L_41dd82	 RIP: 41dd2a	 Bytes: 6
  %loadMem_41dd2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd2a = call %struct.Memory* @routine_jge_.L_41dd82(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd2a, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_41dd2a, %struct.Memory** %MEMORY

  %loadBr_41dd2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dd2a = icmp eq i8 %loadBr_41dd2a, 1
  br i1 %cmpBr_41dd2a, label %block_.L_41dd82, label %block_41dd30

block_41dd30:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41dd30	 Bytes: 10
  %loadMem_41dd30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd30 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd30)
  store %struct.Memory* %call_41dd30, %struct.Memory** %MEMORY

  ; Code: movslq -0x348(%rbp), %rcx	 RIP: 41dd3a	 Bytes: 7
  %loadMem_41dd3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd3a = call %struct.Memory* @routine_movslq_MINUS0x348__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd3a)
  store %struct.Memory* %call_41dd3a, %struct.Memory** %MEMORY

  ; Code: movslq -0x340(%rbp,%rcx,4), %rcx	 RIP: 41dd41	 Bytes: 8
  %loadMem_41dd41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd41 = call %struct.Memory* @routine_movslq_MINUS0x340__rbp__rcx_4____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd41)
  store %struct.Memory* %call_41dd41, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41dd49	 Bytes: 4
  %loadMem_41dd49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd49 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd49)
  store %struct.Memory* %call_41dd49, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41dd4d	 Bytes: 3
  %loadMem_41dd4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd4d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd4d)
  store %struct.Memory* %call_41dd4d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x40(%rax)	 RIP: 41dd50	 Bytes: 4
  %loadMem_41dd50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd50 = call %struct.Memory* @routine_cmpl__0x0__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd50)
  store %struct.Memory* %call_41dd50, %struct.Memory** %MEMORY

  ; Code: je .L_41dd69	 RIP: 41dd54	 Bytes: 6
  %loadMem_41dd54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd54 = call %struct.Memory* @routine_je_.L_41dd69(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd54, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_41dd54, %struct.Memory** %MEMORY

  %loadBr_41dd54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dd54 = icmp eq i8 %loadBr_41dd54, 1
  br i1 %cmpBr_41dd54, label %block_.L_41dd69, label %block_41dd5a

block_41dd5a:
  ; Code: movl $0x1, -0x34c(%rbp)	 RIP: 41dd5a	 Bytes: 10
  %loadMem_41dd5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd5a = call %struct.Memory* @routine_movl__0x1__MINUS0x34c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd5a)
  store %struct.Memory* %call_41dd5a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41dd82	 RIP: 41dd64	 Bytes: 5
  %loadMem_41dd64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd64 = call %struct.Memory* @routine_jmpq_.L_41dd82(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd64, i64 30, i64 5)
  store %struct.Memory* %call_41dd64, %struct.Memory** %MEMORY

  br label %block_.L_41dd82

  ; Code: .L_41dd69:	 RIP: 41dd69	 Bytes: 0
block_.L_41dd69:

  ; Code: jmpq .L_41dd6e	 RIP: 41dd69	 Bytes: 5
  %loadMem_41dd69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd69 = call %struct.Memory* @routine_jmpq_.L_41dd6e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd69, i64 5, i64 5)
  store %struct.Memory* %call_41dd69, %struct.Memory** %MEMORY

  br label %block_.L_41dd6e

  ; Code: .L_41dd6e:	 RIP: 41dd6e	 Bytes: 0
block_.L_41dd6e:

  ; Code: movl -0x348(%rbp), %eax	 RIP: 41dd6e	 Bytes: 6
  %loadMem_41dd6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd6e = call %struct.Memory* @routine_movl_MINUS0x348__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd6e)
  store %struct.Memory* %call_41dd6e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41dd74	 Bytes: 3
  %loadMem_41dd74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd74 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd74)
  store %struct.Memory* %call_41dd74, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x348(%rbp)	 RIP: 41dd77	 Bytes: 6
  %loadMem_41dd77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd77 = call %struct.Memory* @routine_movl__eax__MINUS0x348__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd77)
  store %struct.Memory* %call_41dd77, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41dd1e	 RIP: 41dd7d	 Bytes: 5
  %loadMem_41dd7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd7d = call %struct.Memory* @routine_jmpq_.L_41dd1e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd7d, i64 -95, i64 5)
  store %struct.Memory* %call_41dd7d, %struct.Memory** %MEMORY

  br label %block_.L_41dd1e

  ; Code: .L_41dd82:	 RIP: 41dd82	 Bytes: 0
block_.L_41dd82:

  ; Code: cmpl $0x0, -0x34c(%rbp)	 RIP: 41dd82	 Bytes: 7
  %loadMem_41dd82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd82 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x34c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd82)
  store %struct.Memory* %call_41dd82, %struct.Memory** %MEMORY

  ; Code: jne .L_41ddf7	 RIP: 41dd89	 Bytes: 6
  %loadMem_41dd89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd89 = call %struct.Memory* @routine_jne_.L_41ddf7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd89, i8* %BRANCH_TAKEN, i64 110, i64 6, i64 6)
  store %struct.Memory* %call_41dd89, %struct.Memory** %MEMORY

  %loadBr_41dd89 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dd89 = icmp eq i8 %loadBr_41dd89, 1
  br i1 %cmpBr_41dd89, label %block_.L_41ddf7, label %block_41dd8f

block_41dd8f:
  ; Code: cmpl $0x0, -0x344(%rbp)	 RIP: 41dd8f	 Bytes: 7
  %loadMem_41dd8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd8f = call %struct.Memory* @routine_cmpl__0x0__MINUS0x344__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd8f)
  store %struct.Memory* %call_41dd8f, %struct.Memory** %MEMORY

  ; Code: jle .L_41ddf7	 RIP: 41dd96	 Bytes: 6
  %loadMem_41dd96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd96 = call %struct.Memory* @routine_jle_.L_41ddf7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd96, i8* %BRANCH_TAKEN, i64 97, i64 6, i64 6)
  store %struct.Memory* %call_41dd96, %struct.Memory** %MEMORY

  %loadBr_41dd96 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dd96 = icmp eq i8 %loadBr_41dd96, 1
  br i1 %cmpBr_41dd96, label %block_.L_41ddf7, label %block_41dd9c

block_41dd9c:
  ; Code: movl 0xab0f24, %eax	 RIP: 41dd9c	 Bytes: 7
  %loadMem_41dd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd9c = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd9c)
  store %struct.Memory* %call_41dd9c, %struct.Memory** %MEMORY

  ; Code: andl $0x400, %eax	 RIP: 41dda3	 Bytes: 5
  %loadMem_41dda3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dda3 = call %struct.Memory* @routine_andl__0x400___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dda3)
  store %struct.Memory* %call_41dda3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41dda8	 Bytes: 3
  %loadMem_41dda8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dda8 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dda8)
  store %struct.Memory* %call_41dda8, %struct.Memory** %MEMORY

  ; Code: jne .L_41ddb6	 RIP: 41ddab	 Bytes: 6
  %loadMem_41ddab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddab = call %struct.Memory* @routine_jne_.L_41ddb6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddab, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41ddab, %struct.Memory** %MEMORY

  %loadBr_41ddab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ddab = icmp eq i8 %loadBr_41ddab, 1
  br i1 %cmpBr_41ddab, label %block_.L_41ddb6, label %block_41ddb1

block_41ddb1:
  ; Code: jmpq .L_41ddd0	 RIP: 41ddb1	 Bytes: 5
  %loadMem_41ddb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddb1 = call %struct.Memory* @routine_jmpq_.L_41ddd0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddb1, i64 31, i64 5)
  store %struct.Memory* %call_41ddb1, %struct.Memory** %MEMORY

  br label %block_.L_41ddd0

  ; Code: .L_41ddb6:	 RIP: 41ddb6	 Bytes: 0
block_.L_41ddb6:

  ; Code: movq $0x57b0c9, %rdi	 RIP: 41ddb6	 Bytes: 10
  %loadMem_41ddb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddb6 = call %struct.Memory* @routine_movq__0x57b0c9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddb6)
  store %struct.Memory* %call_41ddb6, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 41ddc0	 Bytes: 3
  %loadMem_41ddc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddc0 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddc0)
  store %struct.Memory* %call_41ddc0, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41ddc3	 Bytes: 2
  %loadMem_41ddc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddc3 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddc3)
  store %struct.Memory* %call_41ddc3, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 41ddc5	 Bytes: 5
  %loadMem1_41ddc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ddc5 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ddc5, i64 212971, i64 5, i64 5)
  store %struct.Memory* %call1_41ddc5, %struct.Memory** %MEMORY

  %loadMem2_41ddc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ddc5 = load i64, i64* %3
  %call2_41ddc5 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_41ddc5, %struct.Memory* %loadMem2_41ddc5)
  store %struct.Memory* %call2_41ddc5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x43c(%rbp)	 RIP: 41ddca	 Bytes: 6
  %loadMem_41ddca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddca = call %struct.Memory* @routine_movl__eax__MINUS0x43c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddca)
  store %struct.Memory* %call_41ddca, %struct.Memory** %MEMORY

  ; Code: .L_41ddd0:	 RIP: 41ddd0	 Bytes: 0
  br label %block_.L_41ddd0
block_.L_41ddd0:

  ; Code: movq $0xb0eff0, %rax	 RIP: 41ddd0	 Bytes: 10
  %loadMem_41ddd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddd0 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddd0)
  store %struct.Memory* %call_41ddd0, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41ddda	 Bytes: 4
  %loadMem_41ddda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddda = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddda)
  store %struct.Memory* %call_41ddda, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41ddde	 Bytes: 7
  %loadMem_41ddde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddde = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddde)
  store %struct.Memory* %call_41ddde, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41dde5	 Bytes: 3
  %loadMem_41dde5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dde5 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dde5)
  store %struct.Memory* %call_41dde5, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x30(%rax)	 RIP: 41dde8	 Bytes: 7
  %loadMem_41dde8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dde8 = call %struct.Memory* @routine_movl__0x1__0x30__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dde8)
  store %struct.Memory* %call_41dde8, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 41ddef	 Bytes: 3
  %loadMem_41ddef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddef = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddef)
  store %struct.Memory* %call_41ddef, %struct.Memory** %MEMORY

  ; Code: callq .propagate_worm	 RIP: 41ddf2	 Bytes: 5
  %loadMem1_41ddf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ddf2 = call %struct.Memory* @routine_callq_.propagate_worm(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ddf2, i64 435854, i64 5, i64 5)
  store %struct.Memory* %call1_41ddf2, %struct.Memory** %MEMORY

  %loadMem2_41ddf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ddf2 = load i64, i64* %3
  %call2_41ddf2 = call %struct.Memory* @sub_488480.propagate_worm(%struct.State* %0, i64  %loadPC_41ddf2, %struct.Memory* %loadMem2_41ddf2)
  store %struct.Memory* %call2_41ddf2, %struct.Memory** %MEMORY

  ; Code: .L_41ddf7:	 RIP: 41ddf7	 Bytes: 0
  br label %block_.L_41ddf7
block_.L_41ddf7:

  ; Code: jmpq .L_41ddfc	 RIP: 41ddf7	 Bytes: 5
  %loadMem_41ddf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddf7 = call %struct.Memory* @routine_jmpq_.L_41ddfc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddf7, i64 5, i64 5)
  store %struct.Memory* %call_41ddf7, %struct.Memory** %MEMORY

  br label %block_.L_41ddfc

  ; Code: .L_41ddfc:	 RIP: 41ddfc	 Bytes: 0
block_.L_41ddfc:

  ; Code: jmpq .L_41de01	 RIP: 41ddfc	 Bytes: 5
  %loadMem_41ddfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddfc = call %struct.Memory* @routine_jmpq_.L_41de01(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddfc, i64 5, i64 5)
  store %struct.Memory* %call_41ddfc, %struct.Memory** %MEMORY

  br label %block_.L_41de01

  ; Code: .L_41de01:	 RIP: 41de01	 Bytes: 0
block_.L_41de01:

  ; Code: jmpq .L_41de06	 RIP: 41de01	 Bytes: 5
  %loadMem_41de01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de01 = call %struct.Memory* @routine_jmpq_.L_41de06(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de01, i64 5, i64 5)
  store %struct.Memory* %call_41de01, %struct.Memory** %MEMORY

  br label %block_.L_41de06

  ; Code: .L_41de06:	 RIP: 41de06	 Bytes: 0
block_.L_41de06:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41de06	 Bytes: 3
  %loadMem_41de06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de06 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de06)
  store %struct.Memory* %call_41de06, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41de09	 Bytes: 3
  %loadMem_41de09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de09 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de09)
  store %struct.Memory* %call_41de09, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41de0c	 Bytes: 3
  %loadMem_41de0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de0c = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de0c)
  store %struct.Memory* %call_41de0c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41dc54	 RIP: 41de0f	 Bytes: 5
  %loadMem_41de0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de0f = call %struct.Memory* @routine_jmpq_.L_41dc54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de0f, i64 -443, i64 5)
  store %struct.Memory* %call_41de0f, %struct.Memory** %MEMORY

  br label %block_.L_41dc54

  ; Code: .L_41de14:	 RIP: 41de14	 Bytes: 0
block_.L_41de14:

  ; Code: movl $0x2, %edi	 RIP: 41de14	 Bytes: 5
  %loadMem_41de14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de14 = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de14)
  store %struct.Memory* %call_41de14, %struct.Memory** %MEMORY

  ; Code: movq $0x57b0ee, %rsi	 RIP: 41de19	 Bytes: 10
  %loadMem_41de19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de19 = call %struct.Memory* @routine_movq__0x57b0ee___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de19)
  store %struct.Memory* %call_41de19, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41de23	 Bytes: 2
  %loadMem_41de23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de23 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de23)
  store %struct.Memory* %call_41de23, %struct.Memory** %MEMORY

  ; Code: movsd 0xc5133(%rip), %xmm0	 RIP: 41de25	 Bytes: 8
  %loadMem_41de25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de25 = call %struct.Memory* @routine_movsd_0xc5133__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de25)
  store %struct.Memory* %call_41de25, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41de2d	 Bytes: 5
  %loadMem1_41de2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41de2d = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41de2d, i64 386467, i64 5, i64 5)
  store %struct.Memory* %call1_41de2d, %struct.Memory** %MEMORY

  %loadMem2_41de2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41de2d = load i64, i64* %3
  %call2_41de2d = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41de2d, %struct.Memory* %loadMem2_41de2d)
  store %struct.Memory* %call2_41de2d, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x18(%rbp)	 RIP: 41de32	 Bytes: 7
  %loadMem_41de32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de32 = call %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de32)
  store %struct.Memory* %call_41de32, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x448(%rbp)	 RIP: 41de39	 Bytes: 8
  %loadMem_41de39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de39 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x448__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de39)
  store %struct.Memory* %call_41de39, %struct.Memory** %MEMORY

  ; Code: .L_41de41:	 RIP: 41de41	 Bytes: 0
  br label %block_.L_41de41
block_.L_41de41:

  ; Code: cmpl $0x190, -0x18(%rbp)	 RIP: 41de41	 Bytes: 7
  %loadMem_41de41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de41 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de41)
  store %struct.Memory* %call_41de41, %struct.Memory** %MEMORY

  ; Code: jge .L_41dfb1	 RIP: 41de48	 Bytes: 6
  %loadMem_41de48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de48 = call %struct.Memory* @routine_jge_.L_41dfb1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de48, i8* %BRANCH_TAKEN, i64 361, i64 6, i64 6)
  store %struct.Memory* %call_41de48, %struct.Memory** %MEMORY

  %loadBr_41de48 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41de48 = icmp eq i8 %loadBr_41de48, 1
  br i1 %cmpBr_41de48, label %block_.L_41dfb1, label %block_41de4e

block_41de4e:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41de4e	 Bytes: 4
  %loadMem_41de4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de4e = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de4e)
  store %struct.Memory* %call_41de4e, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41de52	 Bytes: 8
  %loadMem_41de52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de52 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de52)
  store %struct.Memory* %call_41de52, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 41de5a	 Bytes: 3
  %loadMem_41de5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de5a = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de5a)
  store %struct.Memory* %call_41de5a, %struct.Memory** %MEMORY

  ; Code: je .L_41df9e	 RIP: 41de5d	 Bytes: 6
  %loadMem_41de5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de5d = call %struct.Memory* @routine_je_.L_41df9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de5d, i8* %BRANCH_TAKEN, i64 321, i64 6, i64 6)
  store %struct.Memory* %call_41de5d, %struct.Memory** %MEMORY

  %loadBr_41de5d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41de5d = icmp eq i8 %loadBr_41de5d, 1
  br i1 %cmpBr_41de5d, label %block_.L_41df9e, label %block_41de63

block_41de63:
  ; Code: movslq -0x18(%rbp), %rax	 RIP: 41de63	 Bytes: 4
  %loadMem_41de63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de63 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de63)
  store %struct.Memory* %call_41de63, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 41de67	 Bytes: 8
  %loadMem_41de67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de67 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de67)
  store %struct.Memory* %call_41de67, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 41de6f	 Bytes: 3
  %loadMem_41de6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de6f = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de6f)
  store %struct.Memory* %call_41de6f, %struct.Memory** %MEMORY

  ; Code: je .L_41df9e	 RIP: 41de72	 Bytes: 6
  %loadMem_41de72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de72 = call %struct.Memory* @routine_je_.L_41df9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de72, i8* %BRANCH_TAKEN, i64 300, i64 6, i64 6)
  store %struct.Memory* %call_41de72, %struct.Memory** %MEMORY

  %loadBr_41de72 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41de72 = icmp eq i8 %loadBr_41de72, 1
  br i1 %cmpBr_41de72, label %block_.L_41df9e, label %block_41de78

block_41de78:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41de78	 Bytes: 10
  %loadMem_41de78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de78 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de78)
  store %struct.Memory* %call_41de78, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rcx	 RIP: 41de82	 Bytes: 4
  %loadMem_41de82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de82 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de82)
  store %struct.Memory* %call_41de82, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41de86	 Bytes: 4
  %loadMem_41de86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de86 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de86)
  store %struct.Memory* %call_41de86, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41de8a	 Bytes: 3
  %loadMem_41de8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de8a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de8a)
  store %struct.Memory* %call_41de8a, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rax), %edx	 RIP: 41de8d	 Bytes: 3
  %loadMem_41de8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de8d = call %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de8d)
  store %struct.Memory* %call_41de8d, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %edx	 RIP: 41de90	 Bytes: 3
  %loadMem_41de90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de90 = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de90)
  store %struct.Memory* %call_41de90, %struct.Memory** %MEMORY

  ; Code: jne .L_41df9e	 RIP: 41de93	 Bytes: 6
  %loadMem_41de93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de93 = call %struct.Memory* @routine_jne_.L_41df9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de93, i8* %BRANCH_TAKEN, i64 267, i64 6, i64 6)
  store %struct.Memory* %call_41de93, %struct.Memory** %MEMORY

  %loadBr_41de93 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41de93 = icmp eq i8 %loadBr_41de93, 1
  br i1 %cmpBr_41de93, label %block_.L_41df9e, label %block_41de99

block_41de99:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41de99	 Bytes: 10
  %loadMem_41de99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de99 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de99)
  store %struct.Memory* %call_41de99, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41dea3	 Bytes: 8
  %loadMem_41dea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dea3 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dea3)
  store %struct.Memory* %call_41dea3, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41deab	 Bytes: 4
  %loadMem_41deab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41deab = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41deab)
  store %struct.Memory* %call_41deab, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41deaf	 Bytes: 4
  %loadMem_41deaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41deaf = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41deaf)
  store %struct.Memory* %call_41deaf, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 41deb3	 Bytes: 3
  %loadMem_41deb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41deb3 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41deb3)
  store %struct.Memory* %call_41deb3, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 41deb6	 Bytes: 4
  %loadMem_41deb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41deb6 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41deb6)
  store %struct.Memory* %call_41deb6, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 41deba	 Bytes: 4
  %loadMem_41deba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41deba = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41deba)
  store %struct.Memory* %call_41deba, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 41debe	 Bytes: 3
  %loadMem_41debe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41debe = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41debe)
  store %struct.Memory* %call_41debe, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0x3c(%rcx)	 RIP: 41dec1	 Bytes: 4
  %loadMem_41dec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dec1 = call %struct.Memory* @routine_cmpl__0x2__0x3c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dec1)
  store %struct.Memory* %call_41dec1, %struct.Memory** %MEMORY

  ; Code: jne .L_41df9e	 RIP: 41dec5	 Bytes: 6
  %loadMem_41dec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dec5 = call %struct.Memory* @routine_jne_.L_41df9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dec5, i8* %BRANCH_TAKEN, i64 217, i64 6, i64 6)
  store %struct.Memory* %call_41dec5, %struct.Memory** %MEMORY

  %loadBr_41dec5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dec5 = icmp eq i8 %loadBr_41dec5, 1
  br i1 %cmpBr_41dec5, label %block_.L_41df9e, label %block_41decb

block_41decb:
  ; Code: movl -0x18(%rbp), %edi	 RIP: 41decb	 Bytes: 3
  %loadMem_41decb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41decb = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41decb)
  store %struct.Memory* %call_41decb, %struct.Memory** %MEMORY

  ; Code: callq .first_worm_in_dragon	 RIP: 41dece	 Bytes: 5
  %loadMem1_41dece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dece = call %struct.Memory* @routine_callq_.first_worm_in_dragon(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dece, i64 8834, i64 5, i64 5)
  store %struct.Memory* %call1_41dece, %struct.Memory** %MEMORY

  %loadMem2_41dece = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dece = load i64, i64* %3
  %call2_41dece = call %struct.Memory* @sub_420150.first_worm_in_dragon(%struct.State* %0, i64  %loadPC_41dece, %struct.Memory* %loadMem2_41dece)
  store %struct.Memory* %call2_41dece, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x350(%rbp)	 RIP: 41ded3	 Bytes: 6
  %loadMem_41ded3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ded3 = call %struct.Memory* @routine_movl__eax__MINUS0x350__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ded3)
  store %struct.Memory* %call_41ded3, %struct.Memory** %MEMORY

  ; Code: .L_41ded9:	 RIP: 41ded9	 Bytes: 0
  br label %block_.L_41ded9
block_.L_41ded9:

  ; Code: cmpl $0x0, -0x350(%rbp)	 RIP: 41ded9	 Bytes: 7
  %loadMem_41ded9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ded9 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x350__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ded9)
  store %struct.Memory* %call_41ded9, %struct.Memory** %MEMORY

  ; Code: je .L_41df2b	 RIP: 41dee0	 Bytes: 6
  %loadMem_41dee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dee0 = call %struct.Memory* @routine_je_.L_41df2b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dee0, i8* %BRANCH_TAKEN, i64 75, i64 6, i64 6)
  store %struct.Memory* %call_41dee0, %struct.Memory** %MEMORY

  %loadBr_41dee0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dee0 = icmp eq i8 %loadBr_41dee0, 1
  br i1 %cmpBr_41dee0, label %block_.L_41df2b, label %block_41dee6

block_41dee6:
  ; Code: movq $0xb0eff0, %rax	 RIP: 41dee6	 Bytes: 10
  %loadMem_41dee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dee6 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dee6)
  store %struct.Memory* %call_41dee6, %struct.Memory** %MEMORY

  ; Code: movslq -0x350(%rbp), %rcx	 RIP: 41def0	 Bytes: 7
  %loadMem_41def0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41def0 = call %struct.Memory* @routine_movslq_MINUS0x350__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41def0)
  store %struct.Memory* %call_41def0, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 41def7	 Bytes: 7
  %loadMem_41def7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41def7 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41def7)
  store %struct.Memory* %call_41def7, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41defe	 Bytes: 3
  %loadMem_41defe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41defe = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41defe)
  store %struct.Memory* %call_41defe, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x30(%rax)	 RIP: 41df01	 Bytes: 4
  %loadMem_41df01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df01 = call %struct.Memory* @routine_cmpl__0x0__0x30__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df01)
  store %struct.Memory* %call_41df01, %struct.Memory** %MEMORY

  ; Code: jne .L_41df10	 RIP: 41df05	 Bytes: 6
  %loadMem_41df05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df05 = call %struct.Memory* @routine_jne_.L_41df10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df05, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41df05, %struct.Memory** %MEMORY

  %loadBr_41df05 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41df05 = icmp eq i8 %loadBr_41df05, 1
  br i1 %cmpBr_41df05, label %block_.L_41df10, label %block_41df0b

block_41df0b:
  ; Code: jmpq .L_41df2b	 RIP: 41df0b	 Bytes: 5
  %loadMem_41df0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df0b = call %struct.Memory* @routine_jmpq_.L_41df2b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df0b, i64 32, i64 5)
  store %struct.Memory* %call_41df0b, %struct.Memory** %MEMORY

  br label %block_.L_41df2b

  ; Code: .L_41df10:	 RIP: 41df10	 Bytes: 0
block_.L_41df10:

  ; Code: jmpq .L_41df15	 RIP: 41df10	 Bytes: 5
  %loadMem_41df10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df10 = call %struct.Memory* @routine_jmpq_.L_41df15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df10, i64 5, i64 5)
  store %struct.Memory* %call_41df10, %struct.Memory** %MEMORY

  br label %block_.L_41df15

  ; Code: .L_41df15:	 RIP: 41df15	 Bytes: 0
block_.L_41df15:

  ; Code: movl -0x350(%rbp), %edi	 RIP: 41df15	 Bytes: 6
  %loadMem_41df15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df15 = call %struct.Memory* @routine_movl_MINUS0x350__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df15)
  store %struct.Memory* %call_41df15, %struct.Memory** %MEMORY

  ; Code: callq .next_worm_in_dragon	 RIP: 41df1b	 Bytes: 5
  %loadMem1_41df1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41df1b = call %struct.Memory* @routine_callq_.next_worm_in_dragon(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41df1b, i64 8805, i64 5, i64 5)
  store %struct.Memory* %call1_41df1b, %struct.Memory** %MEMORY

  %loadMem2_41df1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41df1b = load i64, i64* %3
  %call2_41df1b = call %struct.Memory* @sub_420180.next_worm_in_dragon(%struct.State* %0, i64  %loadPC_41df1b, %struct.Memory* %loadMem2_41df1b)
  store %struct.Memory* %call2_41df1b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x350(%rbp)	 RIP: 41df20	 Bytes: 6
  %loadMem_41df20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df20 = call %struct.Memory* @routine_movl__eax__MINUS0x350__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df20)
  store %struct.Memory* %call_41df20, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41ded9	 RIP: 41df26	 Bytes: 5
  %loadMem_41df26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df26 = call %struct.Memory* @routine_jmpq_.L_41ded9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df26, i64 -77, i64 5)
  store %struct.Memory* %call_41df26, %struct.Memory** %MEMORY

  br label %block_.L_41ded9

  ; Code: .L_41df2b:	 RIP: 41df2b	 Bytes: 0
block_.L_41df2b:

  ; Code: cmpl $0x0, -0x350(%rbp)	 RIP: 41df2b	 Bytes: 7
  %loadMem_41df2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df2b = call %struct.Memory* @routine_cmpl__0x0__MINUS0x350__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df2b)
  store %struct.Memory* %call_41df2b, %struct.Memory** %MEMORY

  ; Code: jne .L_41df99	 RIP: 41df32	 Bytes: 6
  %loadMem_41df32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df32 = call %struct.Memory* @routine_jne_.L_41df99(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df32, i8* %BRANCH_TAKEN, i64 103, i64 6, i64 6)
  store %struct.Memory* %call_41df32, %struct.Memory** %MEMORY

  %loadBr_41df32 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41df32 = icmp eq i8 %loadBr_41df32, 1
  br i1 %cmpBr_41df32, label %block_.L_41df99, label %block_41df38

block_41df38:
  ; Code: movl 0xab0f24, %eax	 RIP: 41df38	 Bytes: 7
  %loadMem_41df38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df38 = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df38)
  store %struct.Memory* %call_41df38, %struct.Memory** %MEMORY

  ; Code: andl $0x20, %eax	 RIP: 41df3f	 Bytes: 3
  %loadMem_41df3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df3f = call %struct.Memory* @routine_andl__0x20___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df3f)
  store %struct.Memory* %call_41df3f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41df42	 Bytes: 3
  %loadMem_41df42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df42 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df42)
  store %struct.Memory* %call_41df42, %struct.Memory** %MEMORY

  ; Code: jne .L_41df50	 RIP: 41df45	 Bytes: 6
  %loadMem_41df45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df45 = call %struct.Memory* @routine_jne_.L_41df50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df45, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41df45, %struct.Memory** %MEMORY

  %loadBr_41df45 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41df45 = icmp eq i8 %loadBr_41df45, 1
  br i1 %cmpBr_41df45, label %block_.L_41df50, label %block_41df4b

block_41df4b:
  ; Code: jmpq .L_41df6a	 RIP: 41df4b	 Bytes: 5
  %loadMem_41df4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df4b = call %struct.Memory* @routine_jmpq_.L_41df6a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df4b, i64 31, i64 5)
  store %struct.Memory* %call_41df4b, %struct.Memory** %MEMORY

  br label %block_.L_41df6a

  ; Code: .L_41df50:	 RIP: 41df50	 Bytes: 0
block_.L_41df50:

  ; Code: movq $0x57b10b, %rdi	 RIP: 41df50	 Bytes: 10
  %loadMem_41df50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df50 = call %struct.Memory* @routine_movq__0x57b10b___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df50)
  store %struct.Memory* %call_41df50, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 41df5a	 Bytes: 3
  %loadMem_41df5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df5a = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df5a)
  store %struct.Memory* %call_41df5a, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41df5d	 Bytes: 2
  %loadMem_41df5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df5d = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df5d)
  store %struct.Memory* %call_41df5d, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 41df5f	 Bytes: 5
  %loadMem1_41df5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41df5f = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41df5f, i64 212561, i64 5, i64 5)
  store %struct.Memory* %call1_41df5f, %struct.Memory** %MEMORY

  %loadMem2_41df5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41df5f = load i64, i64* %3
  %call2_41df5f = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_41df5f, %struct.Memory* %loadMem2_41df5f)
  store %struct.Memory* %call2_41df5f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x44c(%rbp)	 RIP: 41df64	 Bytes: 6
  %loadMem_41df64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df64 = call %struct.Memory* @routine_movl__eax__MINUS0x44c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df64)
  store %struct.Memory* %call_41df64, %struct.Memory** %MEMORY

  ; Code: .L_41df6a:	 RIP: 41df6a	 Bytes: 0
  br label %block_.L_41df6a
block_.L_41df6a:

  ; Code: movq $0xb4bd20, %rax	 RIP: 41df6a	 Bytes: 10
  %loadMem_41df6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df6a = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df6a)
  store %struct.Memory* %call_41df6a, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41df74	 Bytes: 8
  %loadMem_41df74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df74 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df74)
  store %struct.Memory* %call_41df74, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 41df7c	 Bytes: 4
  %loadMem_41df7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df7c = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df7c)
  store %struct.Memory* %call_41df7c, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 41df80	 Bytes: 4
  %loadMem_41df80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df80 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df80)
  store %struct.Memory* %call_41df80, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 41df84	 Bytes: 3
  %loadMem_41df84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df84 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df84)
  store %struct.Memory* %call_41df84, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 41df87	 Bytes: 4
  %loadMem_41df87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df87 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df87)
  store %struct.Memory* %call_41df87, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 41df8b	 Bytes: 4
  %loadMem_41df8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df8b = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df8b)
  store %struct.Memory* %call_41df8b, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 41df8f	 Bytes: 3
  %loadMem_41df8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df8f = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df8f)
  store %struct.Memory* %call_41df8f, %struct.Memory** %MEMORY

  ; Code: movl $0x5, 0x3c(%rcx)	 RIP: 41df92	 Bytes: 7
  %loadMem_41df92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df92 = call %struct.Memory* @routine_movl__0x5__0x3c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df92)
  store %struct.Memory* %call_41df92, %struct.Memory** %MEMORY

  ; Code: .L_41df99:	 RIP: 41df99	 Bytes: 0
  br label %block_.L_41df99
block_.L_41df99:

  ; Code: jmpq .L_41df9e	 RIP: 41df99	 Bytes: 5
  %loadMem_41df99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df99 = call %struct.Memory* @routine_jmpq_.L_41df9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df99, i64 5, i64 5)
  store %struct.Memory* %call_41df99, %struct.Memory** %MEMORY

  br label %block_.L_41df9e

  ; Code: .L_41df9e:	 RIP: 41df9e	 Bytes: 0
block_.L_41df9e:

  ; Code: jmpq .L_41dfa3	 RIP: 41df9e	 Bytes: 5
  %loadMem_41df9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df9e = call %struct.Memory* @routine_jmpq_.L_41dfa3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df9e, i64 5, i64 5)
  store %struct.Memory* %call_41df9e, %struct.Memory** %MEMORY

  br label %block_.L_41dfa3

  ; Code: .L_41dfa3:	 RIP: 41dfa3	 Bytes: 0
block_.L_41dfa3:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 41dfa3	 Bytes: 3
  %loadMem_41dfa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfa3 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfa3)
  store %struct.Memory* %call_41dfa3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41dfa6	 Bytes: 3
  %loadMem_41dfa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfa6 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfa6)
  store %struct.Memory* %call_41dfa6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 41dfa9	 Bytes: 3
  %loadMem_41dfa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfa9 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfa9)
  store %struct.Memory* %call_41dfa9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41de41	 RIP: 41dfac	 Bytes: 5
  %loadMem_41dfac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfac = call %struct.Memory* @routine_jmpq_.L_41de41(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfac, i64 -363, i64 5)
  store %struct.Memory* %call_41dfac, %struct.Memory** %MEMORY

  br label %block_.L_41de41

  ; Code: .L_41dfb1:	 RIP: 41dfb1	 Bytes: 0
block_.L_41dfb1:

  ; Code: movl $0x2, %edi	 RIP: 41dfb1	 Bytes: 5
  %loadMem_41dfb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfb1 = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfb1)
  store %struct.Memory* %call_41dfb1, %struct.Memory** %MEMORY

  ; Code: movq $0x57b132, %rsi	 RIP: 41dfb6	 Bytes: 10
  %loadMem_41dfb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfb6 = call %struct.Memory* @routine_movq__0x57b132___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfb6)
  store %struct.Memory* %call_41dfb6, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 41dfc0	 Bytes: 2
  %loadMem_41dfc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfc0 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfc0)
  store %struct.Memory* %call_41dfc0, %struct.Memory** %MEMORY

  ; Code: movsd 0xc4f96(%rip), %xmm0	 RIP: 41dfc2	 Bytes: 8
  %loadMem_41dfc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfc2 = call %struct.Memory* @routine_movsd_0xc4f96__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfc2)
  store %struct.Memory* %call_41dfc2, %struct.Memory** %MEMORY

  ; Code: callq .time_report	 RIP: 41dfca	 Bytes: 5
  %loadMem1_41dfca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dfca = call %struct.Memory* @routine_callq_.time_report(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dfca, i64 386054, i64 5, i64 5)
  store %struct.Memory* %call1_41dfca, %struct.Memory** %MEMORY

  %loadMem2_41dfca = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dfca = load i64, i64* %3
  %call2_41dfca = call %struct.Memory* @sub_47c3d0.time_report(%struct.State* %0, i64  %loadPC_41dfca, %struct.Memory* %loadMem2_41dfca)
  store %struct.Memory* %call2_41dfca, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0xaaf054	 RIP: 41dfcf	 Bytes: 11
  %loadMem_41dfcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfcf = call %struct.Memory* @routine_movl__0x0__0xaaf054(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfcf)
  store %struct.Memory* %call_41dfcf, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0xaaf058	 RIP: 41dfda	 Bytes: 11
  %loadMem_41dfda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfda = call %struct.Memory* @routine_movl__0x0__0xaaf058(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfda)
  store %struct.Memory* %call_41dfda, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x20(%rbp)	 RIP: 41dfe5	 Bytes: 7
  %loadMem_41dfe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfe5 = call %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfe5)
  store %struct.Memory* %call_41dfe5, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x458(%rbp)	 RIP: 41dfec	 Bytes: 8
  %loadMem_41dfec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfec = call %struct.Memory* @routine_movsd__xmm0__MINUS0x458__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfec)
  store %struct.Memory* %call_41dfec, %struct.Memory** %MEMORY

  ; Code: .L_41dff4:	 RIP: 41dff4	 Bytes: 0
  br label %block_.L_41dff4
block_.L_41dff4:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 41dff4	 Bytes: 3
  %loadMem_41dff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dff4 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dff4)
  store %struct.Memory* %call_41dff4, %struct.Memory** %MEMORY

  ; Code: cmpl 0xb54cec, %eax	 RIP: 41dff7	 Bytes: 7
  %loadMem_41dff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dff7 = call %struct.Memory* @routine_cmpl_0xb54cec___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dff7)
  store %struct.Memory* %call_41dff7, %struct.Memory** %MEMORY

  ; Code: jge .L_41e0a4	 RIP: 41dffe	 Bytes: 6
  %loadMem_41dffe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dffe = call %struct.Memory* @routine_jge_.L_41e0a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dffe, i8* %BRANCH_TAKEN, i64 166, i64 6, i64 6)
  store %struct.Memory* %call_41dffe, %struct.Memory** %MEMORY

  %loadBr_41dffe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dffe = icmp eq i8 %loadBr_41dffe, 1
  br i1 %cmpBr_41dffe, label %block_.L_41e0a4, label %block_41e004

block_41e004:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41e004	 Bytes: 10
  %loadMem_41e004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e004 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e004)
  store %struct.Memory* %call_41e004, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41e00e	 Bytes: 8
  %loadMem_41e00e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e00e = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e00e)
  store %struct.Memory* %call_41e00e, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rdx	 RIP: 41e016	 Bytes: 4
  %loadMem_41e016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e016 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e016)
  store %struct.Memory* %call_41e016, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rdx, %rdx	 RIP: 41e01a	 Bytes: 4
  %loadMem_41e01a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e01a = call %struct.Memory* @routine_imulq__0x68___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e01a)
  store %struct.Memory* %call_41e01a, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 41e01e	 Bytes: 3
  %loadMem_41e01e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e01e = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e01e)
  store %struct.Memory* %call_41e01e, %struct.Memory** %MEMORY

  ; Code: movslq (%rcx), %rcx	 RIP: 41e021	 Bytes: 3
  %loadMem_41e021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e021 = call %struct.Memory* @routine_movslq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e021)
  store %struct.Memory* %call_41e021, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41e024	 Bytes: 4
  %loadMem_41e024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e024 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e024)
  store %struct.Memory* %call_41e024, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41e028	 Bytes: 3
  %loadMem_41e028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e028 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e028)
  store %struct.Memory* %call_41e028, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x14(%rax)	 RIP: 41e02b	 Bytes: 4
  %loadMem_41e02b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e02b = call %struct.Memory* @routine_cmpl__0x0__0x14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e02b)
  store %struct.Memory* %call_41e02b, %struct.Memory** %MEMORY

  ; Code: je .L_41e091	 RIP: 41e02f	 Bytes: 6
  %loadMem_41e02f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e02f = call %struct.Memory* @routine_je_.L_41e091(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e02f, i8* %BRANCH_TAKEN, i64 98, i64 6, i64 6)
  store %struct.Memory* %call_41e02f, %struct.Memory** %MEMORY

  %loadBr_41e02f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e02f = icmp eq i8 %loadBr_41e02f, 1
  br i1 %cmpBr_41e02f, label %block_.L_41e091, label %block_41e035

block_41e035:
  ; Code: movq $0xb4bd20, %rax	 RIP: 41e035	 Bytes: 10
  %loadMem_41e035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e035 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e035)
  store %struct.Memory* %call_41e035, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 41e03f	 Bytes: 8
  %loadMem_41e03f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e03f = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e03f)
  store %struct.Memory* %call_41e03f, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rdx	 RIP: 41e047	 Bytes: 4
  %loadMem_41e047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e047 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e047)
  store %struct.Memory* %call_41e047, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rdx, %rdx	 RIP: 41e04b	 Bytes: 4
  %loadMem_41e04b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e04b = call %struct.Memory* @routine_imulq__0x68___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e04b)
  store %struct.Memory* %call_41e04b, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 41e04f	 Bytes: 3
  %loadMem_41e04f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e04f = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e04f)
  store %struct.Memory* %call_41e04f, %struct.Memory** %MEMORY

  ; Code: movslq (%rcx), %rcx	 RIP: 41e052	 Bytes: 3
  %loadMem_41e052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e052 = call %struct.Memory* @routine_movslq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e052)
  store %struct.Memory* %call_41e052, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 41e055	 Bytes: 4
  %loadMem_41e055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e055 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e055)
  store %struct.Memory* %call_41e055, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41e059	 Bytes: 3
  %loadMem_41e059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e059 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e059)
  store %struct.Memory* %call_41e059, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, (%rax)	 RIP: 41e05c	 Bytes: 3
  %loadMem_41e05c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e05c = call %struct.Memory* @routine_cmpl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e05c)
  store %struct.Memory* %call_41e05c, %struct.Memory** %MEMORY

  ; Code: jne .L_41e07b	 RIP: 41e05f	 Bytes: 6
  %loadMem_41e05f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e05f = call %struct.Memory* @routine_jne_.L_41e07b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e05f, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_41e05f, %struct.Memory** %MEMORY

  %loadBr_41e05f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e05f = icmp eq i8 %loadBr_41e05f, 1
  br i1 %cmpBr_41e05f, label %block_.L_41e07b, label %block_41e065

block_41e065:
  ; Code: movl 0xaaf054, %eax	 RIP: 41e065	 Bytes: 7
  %loadMem_41e065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e065 = call %struct.Memory* @routine_movl_0xaaf054___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e065)
  store %struct.Memory* %call_41e065, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41e06c	 Bytes: 3
  %loadMem_41e06c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e06c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e06c)
  store %struct.Memory* %call_41e06c, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0xaaf054	 RIP: 41e06f	 Bytes: 7
  %loadMem_41e06f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e06f = call %struct.Memory* @routine_movl__eax__0xaaf054(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e06f)
  store %struct.Memory* %call_41e06f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41e08c	 RIP: 41e076	 Bytes: 5
  %loadMem_41e076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e076 = call %struct.Memory* @routine_jmpq_.L_41e08c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e076, i64 22, i64 5)
  store %struct.Memory* %call_41e076, %struct.Memory** %MEMORY

  br label %block_.L_41e08c

  ; Code: .L_41e07b:	 RIP: 41e07b	 Bytes: 0
block_.L_41e07b:

  ; Code: movl 0xaaf058, %eax	 RIP: 41e07b	 Bytes: 7
  %loadMem_41e07b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e07b = call %struct.Memory* @routine_movl_0xaaf058___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e07b)
  store %struct.Memory* %call_41e07b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41e082	 Bytes: 3
  %loadMem_41e082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e082 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e082)
  store %struct.Memory* %call_41e082, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0xaaf058	 RIP: 41e085	 Bytes: 7
  %loadMem_41e085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e085 = call %struct.Memory* @routine_movl__eax__0xaaf058(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e085)
  store %struct.Memory* %call_41e085, %struct.Memory** %MEMORY

  ; Code: .L_41e08c:	 RIP: 41e08c	 Bytes: 0
  br label %block_.L_41e08c
block_.L_41e08c:

  ; Code: jmpq .L_41e091	 RIP: 41e08c	 Bytes: 5
  %loadMem_41e08c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e08c = call %struct.Memory* @routine_jmpq_.L_41e091(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e08c, i64 5, i64 5)
  store %struct.Memory* %call_41e08c, %struct.Memory** %MEMORY

  br label %block_.L_41e091

  ; Code: .L_41e091:	 RIP: 41e091	 Bytes: 0
block_.L_41e091:

  ; Code: jmpq .L_41e096	 RIP: 41e091	 Bytes: 5
  %loadMem_41e091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e091 = call %struct.Memory* @routine_jmpq_.L_41e096(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e091, i64 5, i64 5)
  store %struct.Memory* %call_41e091, %struct.Memory** %MEMORY

  br label %block_.L_41e096

  ; Code: .L_41e096:	 RIP: 41e096	 Bytes: 0
block_.L_41e096:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 41e096	 Bytes: 3
  %loadMem_41e096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e096 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e096)
  store %struct.Memory* %call_41e096, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41e099	 Bytes: 3
  %loadMem_41e099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e099 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e099)
  store %struct.Memory* %call_41e099, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 41e09c	 Bytes: 3
  %loadMem_41e09c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e09c = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e09c)
  store %struct.Memory* %call_41e09c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41dff4	 RIP: 41e09f	 Bytes: 5
  %loadMem_41e09f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e09f = call %struct.Memory* @routine_jmpq_.L_41dff4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e09f, i64 -171, i64 5)
  store %struct.Memory* %call_41e09f, %struct.Memory** %MEMORY

  br label %block_.L_41dff4

  ; Code: .L_41e0a4:	 RIP: 41e0a4	 Bytes: 0
block_.L_41e0a4:

  ; Code: addq $0x468, %rsp	 RIP: 41e0a4	 Bytes: 7
  %loadMem_41e0a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0a4 = call %struct.Memory* @routine_addq__0x468___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0a4)
  store %struct.Memory* %call_41e0a4, %struct.Memory** %MEMORY

  ; Code: popq %rbx	 RIP: 41e0ab	 Bytes: 1
  %loadMem_41e0ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0ab = call %struct.Memory* @routine_popq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0ab)
  store %struct.Memory* %call_41e0ab, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 41e0ac	 Bytes: 1
  %loadMem_41e0ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0ac = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0ac)
  store %struct.Memory* %call_41e0ac, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 41e0ad	 Bytes: 1
  %loadMem_41e0ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0ad = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0ad)
  store %struct.Memory* %call_41e0ad, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_41e0ad
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_pushq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x468___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 1128)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.start_timer(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__0xaaf050(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xaaf050_type* @G_0xaaf050 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_callq_.initialize_dragon_data(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0xb01180___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0xb01180_type* @G__0xb01180 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0xb9a0a0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0xb9a0a0_type* @G__0xb9a0a0 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__edx___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.make_domains(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x57ae9c___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57ae9c_type* @G__0x57ae9c to i64))
  ret %struct.Memory* %11
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to double*
  store double 0.000000e+00, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd_0xc72fb__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc72fb__rip__type* @G_0xc72fb__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_callq_.time_report(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = inttoptr i64 %2 to double*
  store double %6, double* %7
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x358__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 856
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.find_connections(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x57aeb3___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57aeb3_type* @G__0x57aeb3 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movsd_0xc72d0__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc72d0__rip__type* @G_0xc72d0__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__0x7ae454(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x7ae454_type* @G_0x7ae454 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0x360__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 864
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_41be1e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 21)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 400)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_41bdf8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = zext i8 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_41bde5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0xb01180___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0xb01180_type* @G__0xb01180 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = sext i64 %4 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %3 to i128
  %11 = or i128 %7, %10
  %12 = zext i64 %4 to i128
  %13 = or i128 %9, %12
  %14 = mul  i128 %13, %11
  %15 = trunc i128 %14 to i64
  store i64 %15, i64* %2, align 8
  %16 = sext i64 %15 to i128
  %17 = icmp ne i128 %16, %14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i128 %14 to i32
  %21 = and i32 %20, 255
  %22 = tail call i32 @llvm.ctpop.i32(i32 %21) #22
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %18, i8* %32, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 36)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x5____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 5)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jne_.L_41bd5a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}









define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 24
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.is_ko_point(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41bd43(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x1__0x4__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_41bd55(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0xb01180___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0xb01180_type* @G__0xb01180 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_.dragon_eye(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_41bd5a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0xb9a0a0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0xb9a0a0_type* @G__0xb9a0a0 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_cmpl__0x4____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jne_.L_41bde0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_je_.L_41bdc9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jle_.L_41bddb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_41bde0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41bde5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41bdea(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41bcb2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq__0x57aece___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57aece_type* @G__0x57aece to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movsd_0xc714f__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc714f__rip__type* @G_0xc714f__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movsd__xmm0__MINUS0x368__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 872
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.initialize_supplementary_dragon_data(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_41c0bb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41c0a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0xb0eff0_type* @G__0xb0eff0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 380)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_41bea7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41bea7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x0__0x20__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41beac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41c0ad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movq__rax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rcx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x20__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__esi__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_cmpl__0x0__0xb4__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 180
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41beed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x1__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41bf01(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41bf0c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x28__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.add_lunch(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0xb4bd20_type* @G__0xb4bd20 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 76)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_0x8__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__esi__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0xab0fe0_type* @G_0xab0fe0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 104)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x54__rcx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__esi__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41bff7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl_0x24__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_cmpl_0x24__rax____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 36
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = xor i1 %15, true
  %17 = and i1 %8, %16
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %3, i64 %4
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jg_.L_41bff7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_jne_.L_41c0a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl_0x10__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_cmpl_0x10__rax____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 16
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_41c0a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0xb0eff0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0xb0eff0_type* @G__0xb0eff0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x17c___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 380)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0xc__rcx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movl__esi__0x54__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 84
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0f28_type* @G_0xab0f28 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_41c050(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41c09e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x57aeeb___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57aeeb_type* @G__0x57aeeb to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq__rax___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rcx___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0xc__r8____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x28__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x17c___r8___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 380)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x24__rax____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.gprintf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x36c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 876
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41c0a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41c0a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jmpq_.L_41be2a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movq__0xb45500___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0xb45500_type* @G__0xb45500 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.find_half_and_false_eyes(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 1)
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_callq_.modify_eye_spaces(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_41c37f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_41c132(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41c371(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_41c24f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}















define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x38__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x3c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x40__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__0xb01180___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 ptrtoint( %G__0xb01180_type* @G__0xb01180 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0xb45500___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0xb45500_type* @G__0xb45500 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 1)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_MINUS0xc__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x1____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x370__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 880
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.compute_eyes(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xab0f24_type* @G_0xab0f24 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = and i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_andl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_41c1cc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41c1fe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_leaq_MINUS0x38__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__esi__MINUS0x374__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 884
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.eyevalue_to_string(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57af1a___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57af1a_type* @G__0x57af1a to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x374__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 884
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax__MINUS0x378__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 888
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__esi__0x10__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 16
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x3c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__esi__0x14__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 20
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x40__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__esi__0x18__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 24
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq__rax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_callq_.propagate_eye(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jne_.L_41c36c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_leaq_MINUS0x48__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x4c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x50__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__0xb9a0a0___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 ptrtoint( %G__0xb9a0a0_type* @G__0xb9a0a0 to i64))
  ret %struct.Memory* %11
}














define %struct.Memory* @routine_movl__eax__MINUS0x37c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 892
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_jne_.L_41c2e9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41c31b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_leaq_MINUS0x48__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__esi__MINUS0x380__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 896
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq__0x57af35___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57af35_type* @G__0x57af35 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x380__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 896
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax__MINUS0x384__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 900
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_movl_MINUS0x48__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x4c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl_MINUS0x50__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


























define %struct.Memory* @routine_jmpq_.L_41c10b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_callq_.analyze_false_eye_territory(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_41c80f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_41c3b2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41c801(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_41c5ca(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x1c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x1___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x24___rsi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 36)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rsi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0xc__rdi____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_callq_.find_eye_dragons(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41c446(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41c46e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x57ad9b___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57ad9b_type* @G__0x57ad9b to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0xfb___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 251)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x57af50___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x57af50_type* @G__0x57af50 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4294967295)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__eax___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.abortgo(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_41c481(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41c49e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x57af5f___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57af5f_type* @G__0x57af5f to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x388__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 904
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}









define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x10___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 16)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_callq_.eye_move_urgency(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0xb4bd20_type* @G__0xb4bd20 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0xab0fe0___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0xab0fe0_type* @G_0xab0fe0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movslq_0x4__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_imulq__0x68___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 104)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rcx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__0x4c___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x38c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 908
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x38c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 908
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_41c547(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0xb01180___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0xb01180_type* @G__0xb01180 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x24___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 36)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x18__rcx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movl__esi__0x50__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 80
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq_0xab0fe0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0xab0fe0_type* @G_0xab0fe0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 76)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_0x4__rdi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x68___rsi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 104)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rsi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__0x4c___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 76)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_addq__rsi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__0x10___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 16)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0xab0fe0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0xab0fe0_type* @G_0xab0fe0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x4c___rdi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdi___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addq__rax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__0x4c___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rdx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsi__MINUS0x398__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 920
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rcx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq_MINUS0x398__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 920
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.add_eyevalues(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jne_.L_41c7fc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 1)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x1c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movq__rdx__MINUS0x3a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 928
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x3a0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 928
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x3a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 932
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl_MINUS0x3a4__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 932
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41c678(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41c6a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x10a___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 266)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x57af95___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x57af95_type* @G__0x57af95 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41c6b3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41c6d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_movl__eax__MINUS0x3a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 936
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


































define %struct.Memory* @routine_movl__eax__MINUS0x3ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 940
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x3ac__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 940
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jle_.L_41c779(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0xb9a0a0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0xb9a0a0_type* @G__0xb9a0a0 to i64))
  ret %struct.Memory* %11
}










































































define %struct.Memory* @routine_movq__rsi__MINUS0x3b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 952
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_MINUS0x3b8__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 952
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_jmpq_.L_41c38b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_41c8b6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41c84d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_41c8a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_xorl__esi___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_callq_.compute_escape(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x18__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x4c___r8___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax__0x48__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41c8a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41c816(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_callq_.resegment_initial_influence(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.compute_refined_dragon_weaknesses(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_0xb54cec___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0xb54cec_type* @G_0xb54cec to i64))
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_41c915(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0xab0fe0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xab0fe0_type* @G_0xab0fe0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = bitcast i8* %2 to float*
  store float %6, float* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 4
  %9 = bitcast i8* %8 to float*
  store float 0.000000e+00, float* %9, align 1
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to float*
  store float 0.000000e+00, float* %11, align 1
  %12 = getelementptr inbounds i8, i8* %2, i64 12
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss_0x40__rax____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}









define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = inttoptr i64 %2 to float*
  store float %7, float* %8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss__xmm0__0x44__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RAX
  %12 = add i64 %11, 68
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41c8c7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_41c9ac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41c999(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_41c994(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41c994(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_callq_.compute_crude_status(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__eax__0x14__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41c999(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41c99e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41c91c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_41ca30(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41ca1d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x4c___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 76)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq__rcx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_movq__rdi__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x58__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_0x8__rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_callq_.memcpy_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41ca22(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41c9b3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_callq_.find_neighbor_dragons(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x57afa4___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57afa4_type* @G__0x57afa4 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movsd_0xc6512__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc6512__rip__type* @G_0xc6512__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0x3c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 960
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_je_.L_41ca6a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41e0a4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_callq_.purge_persistent_owl_cache(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_41d02f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41d01c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x68__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x0__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_callq_.set_eyevalue(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzbl_0xb89e60___rdi_1____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_je_.L_41caf0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_je_.L_41caf5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41d021(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_leaq_MINUS0x68__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq__rax___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__r8___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_0x4__r9____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x68___r8___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 104)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movss_0x38__rcx____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movl_0x48__rcx____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0xa___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i32, i32* %R10D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 10)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = trunc i64 %3 to i32
  %11 = sitofp i32 %10 to float
  %12 = bitcast i8* %2 to float*
  store float %11, float* %12, align 1
  %13 = extractelement <2 x i32> %6, i32 1
  %14 = getelementptr inbounds i8, i8* %2, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 1
  %16 = extractelement <2 x i32> %9, i32 0
  %17 = bitcast i8* %7 to i32*
  store i32 %16, i32* %17, align 1
  %18 = extractelement <2 x i32> %9, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2ssl__r10d___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.crude_dragon_weakness(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0xc6400__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc6400__rip__type* @G_0xc6400__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0xc6400__rip____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc6400__rip__type* @G_0xc6400__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0xc6400__rip____xmm3(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc6400__rip__type* @G_0xc6400__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = fpext float %7 to double
  %9 = bitcast i8* %2 to double*
  store double %8, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}







define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI3MVnI7vec32_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = fpext float %6 to double
  %8 = bitcast i8* %2 to double*
  store double %7, double* %8, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtss2sd_0x10__rax____xmm4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM4 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI3MVnI7vec32_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd__xmm4___xmm3(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = bitcast %union.vec128_t* %XMM4 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fsub double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subsd__xmm3___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM3 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to double*
  %6 = load double, double* %5, align 1
  %7 = bitcast i8* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = fcmp uno double %6, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %4
  %11 = fadd double %6, %8
  %12 = bitcast double %11 to i64
  %13 = and i64 %12, 9221120237041090560
  %14 = icmp eq i64 %13, 9218868437227405312
  %15 = and i64 %12, 2251799813685247
  %16 = icmp ne i64 %15, 0
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %28

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %20, %struct.Memory* %0) #21
  br label %39

; <label>:22:                                     ; preds = %4
  %23 = fcmp ogt double %6, %8
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %6, %8
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %6, %8
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %10
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %10 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %10 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %10 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %39

; <label>:39:                                     ; preds = %35, %18
  %40 = phi %struct.Memory* [ %21, %18 ], [ %0, %35 ]
  ret %struct.Memory* %40
}

define %struct.Memory* @routine_ucomisd__xmm1___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM2 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0x3c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 968
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %9 = load i8, i8* %8, align 1
  %10 = or i8 %9, %7
  %11 = icmp ne i8 %10, 0
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %2, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %14 = select i1 %11, i64 %3, i64 %4
  store i64 %14, i64* %13, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jbe_.L_41cbef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0xc63b8__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc63b8__rip__type* @G_0xc63b8__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0xc63b8__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc63b8__rip__type* @G_0xc63b8__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}










define %struct.Memory* @routine_cvtss2sd_0x10__rax____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI3MVnI7vec32_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_subsd__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0x3d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 976
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_jmpq_.L_41cc04(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movsd_0xc6371__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc6371__rip__type* @G_0xc6371__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movsd_MINUS0x3d0__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 976
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_0xc636c__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc636c__rip__type* @G_0xc636c__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fadd double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movsd_MINUS0x3c8__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 968
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_jbe_.L_41cc75(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl__0x4__0x1c__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}










define %struct.Memory* @routine_movl__0x0__0x20__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movl__0x0__0x30__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41d017(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x3___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 3)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x0__MINUS0x6c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 108
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x70__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x74__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 116
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_leaq_MINUS0x5c__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x74__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_addq__0x28___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 40)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_callq_.owl_attack(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x6c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 108
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41cefe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x5c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_addq__rdx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__0x20__rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 32
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x6c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__ecx__0x24__rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 36
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x74__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__ecx__0x44__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 68
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41cea9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x60__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_addq__0x38___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 56)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_callq_.owl_defend(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x70__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41cea4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41cdce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 1)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x3__MINUS0x6c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 108
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5CMOVZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 0
  %8 = load i64, i64* %2, align 8
  %9 = select i1 %7, i64 %3, i64 %8
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmovel__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5CMOVZI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__ecx__0x1c__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 28
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__ecx__0x30__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 48
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__ecx__0x34__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 52
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_addq__rsi___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__0x48__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41ce9f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl__ecx__0x1c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 28
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_0xab0f24___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0xab0f24_type* @G_0xab0f24 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_andl__0x1000___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 4096)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_41ce12(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41ce2c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x57afba___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57afba_type* @G__0x57afba to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x3d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 980
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_movl_0x20__rcx____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.owl_does_defend(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_41ce9a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_movl__esi__0x30__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 48
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x70__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__esi__0x34__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 52
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jmpq_.L_41cea4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41cea9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41cef9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl__0x0__0x1c__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}










define %struct.Memory* @routine_movl__0x0__0x30__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movl__0x0__0x34__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41d012(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_cmpl__0x0__0x28__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41cfa5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























define %struct.Memory* @routine_je_.L_41cfa0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movl__ecx__0x30__rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 48
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_movl__ecx__0x34__rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 52
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_jmpq_.L_41cfa5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq__0x57aff0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57aff0_type* @G__0x57aff0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd_0xc5fa4__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5fa4__rip__type* @G_0xc5fa4__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_movl__0x1__0x1c__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


















define %struct.Memory* @routine_movl__0x0__0x24__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movsd__xmm0__MINUS0x3e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 992
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_41d01c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jmpq_.L_41ca76(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq__0x57b00f___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57b00f_type* @G__0x57b00f to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movsd_0xc5f18__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5f18__rip__type* @G_0xc5f18__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movsd__xmm0__MINUS0x3e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1000
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_41d192(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41d17f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41d0a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_41d17a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x4__0x1c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41d0f5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl_0x1c__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__esi__0x40__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 64
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41d175(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_cmpl__0x0__0x14__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41d133(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x2__0x14__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41d154(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__0x3__0x40__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41d170(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl__0x1__0x40__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jmpq_.L_41d17a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41d17f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41d184(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41d05c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq__0x57b01d___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57b01d_type* @G__0x57b01d to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movsd_0xc5db5__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5db5__rip__type* @G_0xc5db5__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movsd__xmm0__MINUS0x3f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1008
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_41d23c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41d229(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movq__rdi__MINUS0x80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0x80__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_jmpq_.L_41d22e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41d1bf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_callq_.get_last_move(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41d2b9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_cmpl__0x0__0x40__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41d2b9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl__edx__0xab0ed0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0ed0_type* @G_0xab0ed0 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41d2b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57b02e___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57b02e_type* @G__0x57b02e to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0xab0ed0___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0xab0ed0_type* @G_0xab0ed0 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x3f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1012
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41d2c4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__0xab0ed0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0ed0_type* @G_0xab0ed0 to i64), i64 0)
  ret %struct.Memory* %8
}






define %struct.Memory* @routine_jge_.L_41d6ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41d6db(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_jne_.L_41d6db(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x88__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_leaq_MINUS0x88__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__0xb4bd20___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0xb4bd20_type* @G__0xb4bd20 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0xab0fe0___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 ptrtoint( %G_0xab0fe0_type* @G_0xab0fe0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x4c___r11___r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__r9___rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__r11___rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBX
  %13 = load i64, i64* %R11
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_0x4__rbx____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x68___r11___r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %9, i64 104)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r11___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R11
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movss_0x38__r10____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %R10
  %13 = add i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_addq__r11___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R11
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_0x4__r9____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_imulq__0x68___r9___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 104)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r9___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x48__r10____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = add i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0xa___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 10)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movsd_0xc5bb9__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5bb9__rip__type* @G_0xc5bb9__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0xc5bb9__rip____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5bb9__rip__type* @G_0xc5bb9__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0xc5bb9__rip____xmm3(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5bb9__rip__type* @G_0xc5bb9__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__0xb4bd20___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0xb4bd20_type* @G__0xb4bd20 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movslq_MINUS0x18__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x4c___r9___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r9___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cvtss2sd_0x10__rsi____xmm4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM4 to i8*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI3MVnI7vec32_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movsd__xmm0__MINUS0x400__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1024
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_jbe_.L_41d436(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0xc5b71__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5b71__rip__type* @G_0xc5b71__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0xc5b71__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5b71__rip__type* @G_0xc5b71__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}
















define %struct.Memory* @routine_movsd__xmm0__MINUS0x408__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1032
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_jmpq_.L_41d44b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movsd_0xc5b2a__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5b2a__rip__type* @G_0xc5b2a__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movsd_MINUS0x408__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1032
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_0xc5b25__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5b25__rip__type* @G_0xc5b25__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movsd_MINUS0x400__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1024
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jbe_.L_41d4bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl__0x4__0x18__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}










define %struct.Memory* @routine_movl__0x0__0x2c__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movl__0x0__0x3c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41d6d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_movl__esi__MINUS0x8c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_0x34__rax____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__esi__MINUS0x90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x8__0x7ae448(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x7ae448_type* @G_0x7ae448 to i64), i64 8)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %2, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = select i1 %12, i64 %3, i64 %4
  store i64 %15, i64* %14, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jl_.L_41d6af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0xab0fb4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0fb4_type* @G_0xab0fb4 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_41d6af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0xab0fc4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0fc4_type* @G_0xab0fc4 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_41d541(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0xab0ed0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0ed0_type* @G_0xab0ed0 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_41d6af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_.is_same_dragon(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x0__MINUS0x8c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41d609(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 144
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41d609(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_leaq_MINUS0x94__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x98__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.owl_threaten_defense(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_41d5e8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl__0xc__0x18__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 12)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x94__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl_MINUS0x98__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__esi__0x3c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 60
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41d604(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl__0x0__0x18__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41d6aa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41d6a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x9c__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0xa0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.owl_threaten_attack(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_41d684(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl__0xb__0x18__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 11)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x9c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__esi__0x20__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 32
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xa0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__esi__0x2c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 44
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41d6a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl__0x1__0x18__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41d6a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_41d6af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq__0x57b04d___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57b04d_type* @G__0x57b04d to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd_0xc589a__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc589a__rip__type* @G_0xc589a__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movsd__xmm0__MINUS0x410__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1040
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_jmpq_.L_41d6db(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41d6e0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41d2cb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_41d778(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41d765(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movq__rdi__MINUS0xa8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movq_MINUS0xa8__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_jmpq_.L_41d76a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41d6f5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq__0x57b06c___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57b06c_type* @G__0x57b06c to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movsd_0xc57cf__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc57cf__rip__type* @G_0xc57cf__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movsd__xmm0__MINUS0x418__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1048
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jge_.L_41d8bf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x68___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 104)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl___rcx____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}










define %struct.Memory* @routine_addq__0x64___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 100)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_.compute_surroundings(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x20__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__0x60__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_andl__0x20___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 32)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_41d8ac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x1__0x60__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41d85e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57b082___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57b082_type* @G__0x57b082 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_movl___rax____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_movl__eax__MINUS0x41c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1052
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_cmpl__0x2__0x60__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41d8a7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57b07b___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57b07b_type* @G__0x57b07b to i64))
  ret %struct.Memory* %11
}
















define %struct.Memory* @routine_movl__eax__MINUS0x420__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1056
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41d8ac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41d8b1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41d7a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jge_.L_41db5d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl___rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__edx__MINUS0xb0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_addq__0x4c___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax__MINUS0xb8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0xb8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.max_eyes(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x424__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1060
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.min_eyes(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x424__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1060
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0xac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xb0__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.dragon_looks_inessential(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_41d96e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__0x5__0x3c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 5)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41db4a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movslq_MINUS0xb0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movslq_MINUS0xb0__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_cmpl_0x4__rax____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 4
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_41da19(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x0__0x64__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 100
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41da19(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_movl__0x6__0x3c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 6)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41db45(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_cmpl__0x0__0x1c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41da5a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jmpq_.L_41db40(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_cmpl__0x2__0x1c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41da9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__0x2__0x3c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41db3b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_callq_.dragon_invincible(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_41dace(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__0x9__0x3c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 9)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41db36(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x6__MINUS0xac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 172
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 6)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_41daf8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x14__0x34__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 20)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_41db17(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__0x8__0x3c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41db31(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl__0x1__0x3c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_jmpq_.L_41db4f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41d8c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq__0x57b0a2___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57b0a2_type* @G__0x57b0a2 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movsd_0xc53ea__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc53ea__rip__type* @G_0xc53ea__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x0__0x7ae44c(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x7ae44c_type* @G_0x7ae44c to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0x430__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1072
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_je_.L_41dbac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jl_.L_41dbac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.new_semeai(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41dbb4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_callq_.semeai(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x57b0b9___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57b0b9_type* @G__0x57b0b9 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movsd_0xc5393__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5393__rip__type* @G_0xc5393__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movsd__xmm0__MINUS0x438__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1080
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_41dc4d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41dc3a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movslq_0x8__rdx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_0x40__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jmpq_.L_41dc3f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41dbe1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_41de14(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41de01(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_.is_worm_origin(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_41ddfc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_cmpl__0x0__0x30__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41ddfc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_leaq_MINUS0x340__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 832
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x0__MINUS0x34c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 844
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_callq_.extended_chainlinks(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x344__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 836
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__MINUS0x348__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 840
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x348__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 840
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x344__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 836
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_41dd82(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x348__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 840
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x340__rbp__rcx_4____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -832
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %16)
  ret %struct.Memory* %19
}








define %struct.Memory* @routine_je_.L_41dd69(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x34c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 844
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41dd82(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41dd6e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x348__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 840
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41dd1e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x34c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 844
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41ddf7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x344__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 836
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_41ddf7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_andl__0x400___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1024)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_41ddb6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41ddd0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x57b0c9___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57b0c9_type* @G__0x57b0c9 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x43c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1084
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movl__0x1__0x30__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_callq_.propagate_worm(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41ddfc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41de01(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41de06(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41dc54(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq__0x57b0ee___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57b0ee_type* @G__0x57b0ee to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movsd_0xc5133__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc5133__rip__type* @G_0xc5133__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movsd__xmm0__MINUS0x448__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1096
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_41dfb1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41df9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_jne_.L_41df9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_cmpl__0x2__0x3c__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_callq_.first_worm_in_dragon(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x350__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 848
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x350__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 848
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41df2b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x350__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 848
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_41df10(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41df2b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41df15(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x350__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 848
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.next_worm_in_dragon(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_41ded9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41df99(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_41df50(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41df6a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x57b10b___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57b10b_type* @G__0x57b10b to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x44c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1100
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


















define %struct.Memory* @routine_movl__0x5__0x3c__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 5)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41df9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41dfa3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41de41(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq__0x57b132___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57b132_type* @G__0x57b132 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movsd_0xc4f96__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xc4f96__rip__type* @G_0xc4f96__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__0x0__0xaaf054(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xaaf054_type* @G_0xaaf054 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0xaaf058(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xaaf058_type* @G_0xaaf058 to i64), i64 0)
  ret %struct.Memory* %8
}




define %struct.Memory* @routine_movsd__xmm0__MINUS0x458__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1112
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jge_.L_41e0a4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movslq___rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_41e091(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_cmpl__0x1____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jne_.L_41e07b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0xaaf054___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xaaf054_type* @G_0xaaf054 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__eax__0xaaf054(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xaaf054_type* @G_0xaaf054 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41e08c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_0xaaf058___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xaaf058_type* @G_0xaaf058 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__eax__0xaaf058(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xaaf058_type* @G_0xaaf058 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41e091(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41e096(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_41dff4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_addq__0x468___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 1128)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBX)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

