; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x7ae438_type = type <{ [4 x i8] }>
%G_0x7afc74_type = type <{ [4 x i8] }>
%G_0x7afc90_type = type <{ [4 x i8] }>
%G_0x7afcb4_type = type <{ [4 x i8] }>
%G_0x7afcd4_type = type <{ [4 x i8] }>
%G_0x7afcf4_type = type <{ [4 x i8] }>
%G_0x7afd14_type = type <{ [4 x i8] }>
%G_0x7afd34_type = type <{ [4 x i8] }>
%G_0x7afd58_type = type <{ [4 x i8] }>
%G_0x7afd5c_type = type <{ [4 x i8] }>
%G_0x7afd74_type = type <{ [4 x i8] }>
%G_0x7afd94_type = type <{ [4 x i8] }>
%G_0x7afdb4_type = type <{ [4 x i8] }>
%G_0xab0ef8_type = type <{ [8 x i8] }>
%G_0xb54ce0_type = type <{ [4 x i8] }>
%G_0xb54ce4_type = type <{ [4 x i8] }>
%G__0x57f9a0_type = type <{ [8 x i8] }>
%G__0x57fb0d_type = type <{ [8 x i8] }>
%G__0x57fdbf_type = type <{ [8 x i8] }>
%G__0x57fdd0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x7ae438 = global %G_0x7ae438_type zeroinitializer
@G_0x7afc74 = global %G_0x7afc74_type zeroinitializer
@G_0x7afc90 = global %G_0x7afc90_type zeroinitializer
@G_0x7afcb4 = global %G_0x7afcb4_type zeroinitializer
@G_0x7afcd4 = global %G_0x7afcd4_type zeroinitializer
@G_0x7afcf4 = global %G_0x7afcf4_type zeroinitializer
@G_0x7afd14 = global %G_0x7afd14_type zeroinitializer
@G_0x7afd34 = global %G_0x7afd34_type zeroinitializer
@G_0x7afd58 = global %G_0x7afd58_type zeroinitializer
@G_0x7afd5c = global %G_0x7afd5c_type zeroinitializer
@G_0x7afd74 = global %G_0x7afd74_type zeroinitializer
@G_0x7afd94 = global %G_0x7afd94_type zeroinitializer
@G_0x7afdb4 = global %G_0x7afdb4_type zeroinitializer
@G_0xab0ef8 = global %G_0xab0ef8_type zeroinitializer
@G_0xb54ce0 = global %G_0xb54ce0_type zeroinitializer
@G_0xb54ce4 = global %G_0xb54ce4_type zeroinitializer
@G__0x57f9a0 = global %G__0x57f9a0_type zeroinitializer
@G__0x57fb0d = global %G__0x57fb0d_type zeroinitializer
@G__0x57fdbf = global %G__0x57fdbf_type zeroinitializer
@G__0x57fdd0 = global %G__0x57fdd0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_40f780.countlib(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_416010.incremental_order_moves(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4115b0.approxlib(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_452090.abortgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4046f0.sgftreeAddComment(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @order_moves(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_462c90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_462c90, %struct.Memory** %MEMORY
  %loadMem_462c91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i37 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i38 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i37
  %27 = load i64, i64* %PC.i36
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i36
  store i64 %26, i64* %RBP.i38, align 8
  store %struct.Memory* %loadMem_462c91, %struct.Memory** %MEMORY
  %loadMem_462c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 31
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %R15.i63 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %R15.i63
  %36 = load i64, i64* %PC.i62
  %37 = add i64 %36, 2
  store i64 %37, i64* %PC.i62
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -8
  %41 = inttoptr i64 %40 to i64*
  store i64 %35, i64* %41
  store i64 %40, i64* %38, align 8
  store %struct.Memory* %loadMem_462c94, %struct.Memory** %MEMORY
  %loadMem_462c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 33
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 29
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %R14.i102 = bitcast %union.anon* %47 to i64*
  %48 = load i64, i64* %R14.i102
  %49 = load i64, i64* %PC.i101
  %50 = add i64 %49, 2
  store i64 %50, i64* %PC.i101
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, -8
  %54 = inttoptr i64 %53 to i64*
  store i64 %48, i64* %54
  store i64 %53, i64* %51, align 8
  store %struct.Memory* %loadMem_462c96, %struct.Memory** %MEMORY
  %loadMem_462c98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 33
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %57 to i64*
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %59 = getelementptr inbounds %struct.GPR, %struct.GPR* %58, i32 0, i32 25
  %60 = getelementptr inbounds %struct.Reg, %struct.Reg* %59, i32 0, i32 0
  %R12.i128 = bitcast %union.anon* %60 to i64*
  %61 = load i64, i64* %R12.i128
  %62 = load i64, i64* %PC.i127
  %63 = add i64 %62, 2
  store i64 %63, i64* %PC.i127
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, -8
  %67 = inttoptr i64 %66 to i64*
  store i64 %61, i64* %67
  store i64 %66, i64* %64, align 8
  store %struct.Memory* %loadMem_462c98, %struct.Memory** %MEMORY
  %loadMem_462c9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %69 = getelementptr inbounds %struct.GPR, %struct.GPR* %68, i32 0, i32 33
  %70 = getelementptr inbounds %struct.Reg, %struct.Reg* %69, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %70 to i64*
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 3
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %RBX.i190 = bitcast %union.anon* %73 to i64*
  %74 = load i64, i64* %RBX.i190
  %75 = load i64, i64* %PC.i189
  %76 = add i64 %75, 1
  store i64 %76, i64* %PC.i189
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, -8
  %80 = inttoptr i64 %79 to i64*
  store i64 %74, i64* %80
  store i64 %79, i64* %77, align 8
  store %struct.Memory* %loadMem_462c9a, %struct.Memory** %MEMORY
  %loadMem_462c9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.GPR, %struct.GPR* %81, i32 0, i32 33
  %83 = getelementptr inbounds %struct.Reg, %struct.Reg* %82, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %83 to i64*
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %85 = getelementptr inbounds %struct.GPR, %struct.GPR* %84, i32 0, i32 13
  %86 = getelementptr inbounds %struct.Reg, %struct.Reg* %85, i32 0, i32 0
  %RSP.i1244 = bitcast %union.anon* %86 to i64*
  %87 = load i64, i64* %RSP.i1244
  %88 = load i64, i64* %PC.i1243
  %89 = add i64 %88, 7
  store i64 %89, i64* %PC.i1243
  %90 = sub i64 %87, 736
  store i64 %90, i64* %RSP.i1244, align 8
  %91 = icmp ult i64 %87, 736
  %92 = zext i1 %91 to i8
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %92, i8* %93, align 1
  %94 = trunc i64 %90 to i32
  %95 = and i32 %94, 255
  %96 = call i32 @llvm.ctpop.i32(i32 %95)
  %97 = trunc i32 %96 to i8
  %98 = and i8 %97, 1
  %99 = xor i8 %98, 1
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %99, i8* %100, align 1
  %101 = xor i64 736, %87
  %102 = xor i64 %101, %90
  %103 = lshr i64 %102, 4
  %104 = trunc i64 %103 to i8
  %105 = and i8 %104, 1
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %105, i8* %106, align 1
  %107 = icmp eq i64 %90, 0
  %108 = zext i1 %107 to i8
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %108, i8* %109, align 1
  %110 = lshr i64 %90, 63
  %111 = trunc i64 %110 to i8
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %111, i8* %112, align 1
  %113 = lshr i64 %87, 63
  %114 = xor i64 %110, %113
  %115 = add i64 %114, %113
  %116 = icmp eq i64 %115, 2
  %117 = zext i1 %116 to i8
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %117, i8* %118, align 1
  store %struct.Memory* %loadMem_462c9b, %struct.Memory** %MEMORY
  %loadMem_462ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %120 = getelementptr inbounds %struct.GPR, %struct.GPR* %119, i32 0, i32 33
  %121 = getelementptr inbounds %struct.Reg, %struct.Reg* %120, i32 0, i32 0
  %PC.i1241 = bitcast %union.anon* %121 to i64*
  %122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %123 = getelementptr inbounds %struct.GPR, %struct.GPR* %122, i32 0, i32 11
  %124 = getelementptr inbounds %struct.Reg, %struct.Reg* %123, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %124 to i32*
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %126 = getelementptr inbounds %struct.GPR, %struct.GPR* %125, i32 0, i32 15
  %127 = getelementptr inbounds %struct.Reg, %struct.Reg* %126, i32 0, i32 0
  %RBP.i1242 = bitcast %union.anon* %127 to i64*
  %128 = load i64, i64* %RBP.i1242
  %129 = sub i64 %128, 36
  %130 = load i32, i32* %EDI.i
  %131 = zext i32 %130 to i64
  %132 = load i64, i64* %PC.i1241
  %133 = add i64 %132, 3
  store i64 %133, i64* %PC.i1241
  %134 = inttoptr i64 %129 to i32*
  store i32 %130, i32* %134
  store %struct.Memory* %loadMem_462ca2, %struct.Memory** %MEMORY
  %loadMem_462ca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %PC.i1238 = bitcast %union.anon* %137 to i64*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 9
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %RSI.i1239 = bitcast %union.anon* %140 to i64*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 15
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %RBP.i1240 = bitcast %union.anon* %143 to i64*
  %144 = load i64, i64* %RBP.i1240
  %145 = sub i64 %144, 48
  %146 = load i64, i64* %RSI.i1239
  %147 = load i64, i64* %PC.i1238
  %148 = add i64 %147, 4
  store i64 %148, i64* %PC.i1238
  %149 = inttoptr i64 %145 to i64*
  store i64 %146, i64* %149
  store %struct.Memory* %loadMem_462ca5, %struct.Memory** %MEMORY
  %loadMem_462ca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 33
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %152 to i64*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 7
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDX.i1236 = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 15
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %RBP.i1237 = bitcast %union.anon* %158 to i64*
  %159 = load i64, i64* %RBP.i1237
  %160 = sub i64 %159, 52
  %161 = load i32, i32* %EDX.i1236
  %162 = zext i32 %161 to i64
  %163 = load i64, i64* %PC.i1235
  %164 = add i64 %163, 3
  store i64 %164, i64* %PC.i1235
  %165 = inttoptr i64 %160 to i32*
  store i32 %161, i32* %165
  store %struct.Memory* %loadMem_462ca9, %struct.Memory** %MEMORY
  %loadMem_462cac = load %struct.Memory*, %struct.Memory** %MEMORY
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %167 = getelementptr inbounds %struct.GPR, %struct.GPR* %166, i32 0, i32 33
  %168 = getelementptr inbounds %struct.Reg, %struct.Reg* %167, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %168 to i64*
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 5
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %RCX.i1233 = bitcast %union.anon* %171 to i64*
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %173 = getelementptr inbounds %struct.GPR, %struct.GPR* %172, i32 0, i32 15
  %174 = getelementptr inbounds %struct.Reg, %struct.Reg* %173, i32 0, i32 0
  %RBP.i1234 = bitcast %union.anon* %174 to i64*
  %175 = load i64, i64* %RBP.i1234
  %176 = sub i64 %175, 64
  %177 = load i64, i64* %RCX.i1233
  %178 = load i64, i64* %PC.i1232
  %179 = add i64 %178, 4
  store i64 %179, i64* %PC.i1232
  %180 = inttoptr i64 %176 to i64*
  store i64 %177, i64* %180
  store %struct.Memory* %loadMem_462cac, %struct.Memory** %MEMORY
  %loadMem_462cb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %182 = getelementptr inbounds %struct.GPR, %struct.GPR* %181, i32 0, i32 33
  %183 = getelementptr inbounds %struct.Reg, %struct.Reg* %182, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %183 to i64*
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %185 = getelementptr inbounds %struct.GPR, %struct.GPR* %184, i32 0, i32 17
  %186 = getelementptr inbounds %struct.Reg, %struct.Reg* %185, i32 0, i32 0
  %R8D.i1230 = bitcast %union.anon* %186 to i32*
  %187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %188 = getelementptr inbounds %struct.GPR, %struct.GPR* %187, i32 0, i32 15
  %189 = getelementptr inbounds %struct.Reg, %struct.Reg* %188, i32 0, i32 0
  %RBP.i1231 = bitcast %union.anon* %189 to i64*
  %190 = load i64, i64* %RBP.i1231
  %191 = sub i64 %190, 68
  %192 = load i32, i32* %R8D.i1230
  %193 = zext i32 %192 to i64
  %194 = load i64, i64* %PC.i1229
  %195 = add i64 %194, 4
  store i64 %195, i64* %PC.i1229
  %196 = inttoptr i64 %191 to i32*
  store i32 %192, i32* %196
  store %struct.Memory* %loadMem_462cb0, %struct.Memory** %MEMORY
  %loadMem_462cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %198 = getelementptr inbounds %struct.GPR, %struct.GPR* %197, i32 0, i32 33
  %199 = getelementptr inbounds %struct.Reg, %struct.Reg* %198, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %199 to i64*
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %201 = getelementptr inbounds %struct.GPR, %struct.GPR* %200, i32 0, i32 5
  %202 = getelementptr inbounds %struct.Reg, %struct.Reg* %201, i32 0, i32 0
  %RCX.i1227 = bitcast %union.anon* %202 to i64*
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %204 = getelementptr inbounds %struct.GPR, %struct.GPR* %203, i32 0, i32 15
  %205 = getelementptr inbounds %struct.Reg, %struct.Reg* %204, i32 0, i32 0
  %RBP.i1228 = bitcast %union.anon* %205 to i64*
  %206 = load i64, i64* %RBP.i1228
  %207 = sub i64 %206, 36
  %208 = load i64, i64* %PC.i1226
  %209 = add i64 %208, 4
  store i64 %209, i64* %PC.i1226
  %210 = inttoptr i64 %207 to i32*
  %211 = load i32, i32* %210
  %212 = sext i32 %211 to i64
  store i64 %212, i64* %RCX.i1227, align 8
  store %struct.Memory* %loadMem_462cb4, %struct.Memory** %MEMORY
  %loadMem_462cb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 33
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 5
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %RCX.i1224 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 7
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %RDX.i1225 = bitcast %union.anon* %221 to i64*
  %222 = load i64, i64* %RCX.i1224
  %223 = add i64 %222, 12099168
  %224 = load i64, i64* %PC.i1223
  %225 = add i64 %224, 8
  store i64 %225, i64* %PC.i1223
  %226 = inttoptr i64 %223 to i8*
  %227 = load i8, i8* %226
  %228 = zext i8 %227 to i64
  store i64 %228, i64* %RDX.i1225, align 8
  store %struct.Memory* %loadMem_462cb8, %struct.Memory** %MEMORY
  %loadMem_462cc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %230 = getelementptr inbounds %struct.GPR, %struct.GPR* %229, i32 0, i32 33
  %231 = getelementptr inbounds %struct.Reg, %struct.Reg* %230, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %231 to i64*
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %233 = getelementptr inbounds %struct.GPR, %struct.GPR* %232, i32 0, i32 7
  %234 = getelementptr inbounds %struct.Reg, %struct.Reg* %233, i32 0, i32 0
  %EDX.i1221 = bitcast %union.anon* %234 to i32*
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %236 = getelementptr inbounds %struct.GPR, %struct.GPR* %235, i32 0, i32 15
  %237 = getelementptr inbounds %struct.Reg, %struct.Reg* %236, i32 0, i32 0
  %RBP.i1222 = bitcast %union.anon* %237 to i64*
  %238 = load i64, i64* %RBP.i1222
  %239 = sub i64 %238, 72
  %240 = load i32, i32* %EDX.i1221
  %241 = zext i32 %240 to i64
  %242 = load i64, i64* %PC.i1220
  %243 = add i64 %242, 3
  store i64 %243, i64* %PC.i1220
  %244 = inttoptr i64 %239 to i32*
  store i32 %240, i32* %244
  store %struct.Memory* %loadMem_462cc0, %struct.Memory** %MEMORY
  %loadMem_462cc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %246 = getelementptr inbounds %struct.GPR, %struct.GPR* %245, i32 0, i32 33
  %247 = getelementptr inbounds %struct.Reg, %struct.Reg* %246, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %247 to i64*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %249 = getelementptr inbounds %struct.GPR, %struct.GPR* %248, i32 0, i32 11
  %250 = getelementptr inbounds %struct.Reg, %struct.Reg* %249, i32 0, i32 0
  %RDI.i1218 = bitcast %union.anon* %250 to i64*
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %252 = getelementptr inbounds %struct.GPR, %struct.GPR* %251, i32 0, i32 15
  %253 = getelementptr inbounds %struct.Reg, %struct.Reg* %252, i32 0, i32 0
  %RBP.i1219 = bitcast %union.anon* %253 to i64*
  %254 = load i64, i64* %RBP.i1219
  %255 = sub i64 %254, 36
  %256 = load i64, i64* %PC.i1217
  %257 = add i64 %256, 3
  store i64 %257, i64* %PC.i1217
  %258 = inttoptr i64 %255 to i32*
  %259 = load i32, i32* %258
  %260 = zext i32 %259 to i64
  store i64 %260, i64* %RDI.i1218, align 8
  store %struct.Memory* %loadMem_462cc3, %struct.Memory** %MEMORY
  %loadMem1_462cc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %262 = getelementptr inbounds %struct.GPR, %struct.GPR* %261, i32 0, i32 33
  %263 = getelementptr inbounds %struct.Reg, %struct.Reg* %262, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %263 to i64*
  %264 = load i64, i64* %PC.i1216
  %265 = add i64 %264, -341318
  %266 = load i64, i64* %PC.i1216
  %267 = add i64 %266, 5
  %268 = load i64, i64* %PC.i1216
  %269 = add i64 %268, 5
  store i64 %269, i64* %PC.i1216
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %271 = load i64, i64* %270, align 8
  %272 = add i64 %271, -8
  %273 = inttoptr i64 %272 to i64*
  store i64 %267, i64* %273
  store i64 %272, i64* %270, align 8
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %265, i64* %274, align 8
  store %struct.Memory* %loadMem1_462cc6, %struct.Memory** %MEMORY
  %loadMem2_462cc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_462cc6 = load i64, i64* %3
  %call2_462cc6 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64 %loadPC_462cc6, %struct.Memory* %loadMem2_462cc6)
  store %struct.Memory* %call2_462cc6, %struct.Memory** %MEMORY
  %loadMem_462ccb = load %struct.Memory*, %struct.Memory** %MEMORY
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 33
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %277 to i64*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 1
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %EAX.i1214 = bitcast %union.anon* %280 to i32*
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %282 = getelementptr inbounds %struct.GPR, %struct.GPR* %281, i32 0, i32 15
  %283 = getelementptr inbounds %struct.Reg, %struct.Reg* %282, i32 0, i32 0
  %RBP.i1215 = bitcast %union.anon* %283 to i64*
  %284 = load i64, i64* %RBP.i1215
  %285 = sub i64 %284, 76
  %286 = load i32, i32* %EAX.i1214
  %287 = zext i32 %286 to i64
  %288 = load i64, i64* %PC.i1213
  %289 = add i64 %288, 3
  store i64 %289, i64* %PC.i1213
  %290 = inttoptr i64 %285 to i32*
  store i32 %286, i32* %290
  store %struct.Memory* %loadMem_462ccb, %struct.Memory** %MEMORY
  %loadMem_462cce = load %struct.Memory*, %struct.Memory** %MEMORY
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %292 = getelementptr inbounds %struct.GPR, %struct.GPR* %291, i32 0, i32 33
  %293 = getelementptr inbounds %struct.Reg, %struct.Reg* %292, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %293 to i64*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %295 = getelementptr inbounds %struct.GPR, %struct.GPR* %294, i32 0, i32 5
  %296 = getelementptr inbounds %struct.Reg, %struct.Reg* %295, i32 0, i32 0
  %RCX.i1211 = bitcast %union.anon* %296 to i64*
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %298 = getelementptr inbounds %struct.GPR, %struct.GPR* %297, i32 0, i32 15
  %299 = getelementptr inbounds %struct.Reg, %struct.Reg* %298, i32 0, i32 0
  %RBP.i1212 = bitcast %union.anon* %299 to i64*
  %300 = load i64, i64* %RBP.i1212
  %301 = sub i64 %300, 48
  %302 = load i64, i64* %PC.i1210
  %303 = add i64 %302, 4
  store i64 %303, i64* %PC.i1210
  %304 = inttoptr i64 %301 to i64*
  %305 = load i64, i64* %304
  store i64 %305, i64* %RCX.i1211, align 8
  store %struct.Memory* %loadMem_462cce, %struct.Memory** %MEMORY
  %loadMem_462cd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %307 = getelementptr inbounds %struct.GPR, %struct.GPR* %306, i32 0, i32 33
  %308 = getelementptr inbounds %struct.Reg, %struct.Reg* %307, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %308 to i64*
  %309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %310 = getelementptr inbounds %struct.GPR, %struct.GPR* %309, i32 0, i32 1
  %311 = getelementptr inbounds %struct.Reg, %struct.Reg* %310, i32 0, i32 0
  %RAX.i1208 = bitcast %union.anon* %311 to i64*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %313 = getelementptr inbounds %struct.GPR, %struct.GPR* %312, i32 0, i32 5
  %314 = getelementptr inbounds %struct.Reg, %struct.Reg* %313, i32 0, i32 0
  %RCX.i1209 = bitcast %union.anon* %314 to i64*
  %315 = load i64, i64* %RCX.i1209
  %316 = add i64 %315, 400
  %317 = load i64, i64* %PC.i1207
  %318 = add i64 %317, 6
  store i64 %318, i64* %PC.i1207
  %319 = inttoptr i64 %316 to i32*
  %320 = load i32, i32* %319
  %321 = zext i32 %320 to i64
  store i64 %321, i64* %RAX.i1208, align 8
  store %struct.Memory* %loadMem_462cd2, %struct.Memory** %MEMORY
  %loadMem_462cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %323 = getelementptr inbounds %struct.GPR, %struct.GPR* %322, i32 0, i32 33
  %324 = getelementptr inbounds %struct.Reg, %struct.Reg* %323, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %324 to i64*
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %326 = getelementptr inbounds %struct.GPR, %struct.GPR* %325, i32 0, i32 1
  %327 = getelementptr inbounds %struct.Reg, %struct.Reg* %326, i32 0, i32 0
  %RAX.i1205 = bitcast %union.anon* %327 to i64*
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %329 = getelementptr inbounds %struct.GPR, %struct.GPR* %328, i32 0, i32 15
  %330 = getelementptr inbounds %struct.Reg, %struct.Reg* %329, i32 0, i32 0
  %RBP.i1206 = bitcast %union.anon* %330 to i64*
  %331 = load i64, i64* %RAX.i1205
  %332 = load i64, i64* %RBP.i1206
  %333 = sub i64 %332, 68
  %334 = load i64, i64* %PC.i1204
  %335 = add i64 %334, 3
  store i64 %335, i64* %PC.i1204
  %336 = trunc i64 %331 to i32
  %337 = inttoptr i64 %333 to i32*
  %338 = load i32, i32* %337
  %339 = sub i32 %336, %338
  %340 = zext i32 %339 to i64
  store i64 %340, i64* %RAX.i1205, align 8
  %341 = icmp ult i32 %336, %338
  %342 = zext i1 %341 to i8
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %342, i8* %343, align 1
  %344 = and i32 %339, 255
  %345 = call i32 @llvm.ctpop.i32(i32 %344)
  %346 = trunc i32 %345 to i8
  %347 = and i8 %346, 1
  %348 = xor i8 %347, 1
  %349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %348, i8* %349, align 1
  %350 = xor i32 %338, %336
  %351 = xor i32 %350, %339
  %352 = lshr i32 %351, 4
  %353 = trunc i32 %352 to i8
  %354 = and i8 %353, 1
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %354, i8* %355, align 1
  %356 = icmp eq i32 %339, 0
  %357 = zext i1 %356 to i8
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %357, i8* %358, align 1
  %359 = lshr i32 %339, 31
  %360 = trunc i32 %359 to i8
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %360, i8* %361, align 1
  %362 = lshr i32 %336, 31
  %363 = lshr i32 %338, 31
  %364 = xor i32 %363, %362
  %365 = xor i32 %359, %362
  %366 = add i32 %365, %364
  %367 = icmp eq i32 %366, 2
  %368 = zext i1 %367 to i8
  %369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %368, i8* %369, align 1
  store %struct.Memory* %loadMem_462cd8, %struct.Memory** %MEMORY
  %loadMem_462cdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %371 = getelementptr inbounds %struct.GPR, %struct.GPR* %370, i32 0, i32 33
  %372 = getelementptr inbounds %struct.Reg, %struct.Reg* %371, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %372 to i64*
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %374 = getelementptr inbounds %struct.GPR, %struct.GPR* %373, i32 0, i32 1
  %375 = getelementptr inbounds %struct.Reg, %struct.Reg* %374, i32 0, i32 0
  %EAX.i1203 = bitcast %union.anon* %375 to i32*
  %376 = load i32, i32* %EAX.i1203
  %377 = zext i32 %376 to i64
  %378 = load i64, i64* %PC.i1202
  %379 = add i64 %378, 3
  store i64 %379, i64* %PC.i1202
  %380 = sub i32 %376, 2
  %381 = icmp ult i32 %376, 2
  %382 = zext i1 %381 to i8
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %382, i8* %383, align 1
  %384 = and i32 %380, 255
  %385 = call i32 @llvm.ctpop.i32(i32 %384)
  %386 = trunc i32 %385 to i8
  %387 = and i8 %386, 1
  %388 = xor i8 %387, 1
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %388, i8* %389, align 1
  %390 = xor i64 2, %377
  %391 = trunc i64 %390 to i32
  %392 = xor i32 %391, %380
  %393 = lshr i32 %392, 4
  %394 = trunc i32 %393 to i8
  %395 = and i8 %394, 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %395, i8* %396, align 1
  %397 = icmp eq i32 %380, 0
  %398 = zext i1 %397 to i8
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %398, i8* %399, align 1
  %400 = lshr i32 %380, 31
  %401 = trunc i32 %400 to i8
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %401, i8* %402, align 1
  %403 = lshr i32 %376, 31
  %404 = xor i32 %400, %403
  %405 = add i32 %404, %403
  %406 = icmp eq i32 %405, 2
  %407 = zext i1 %406 to i8
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %407, i8* %408, align 1
  store %struct.Memory* %loadMem_462cdb, %struct.Memory** %MEMORY
  %loadMem_462cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %410 = getelementptr inbounds %struct.GPR, %struct.GPR* %409, i32 0, i32 33
  %411 = getelementptr inbounds %struct.Reg, %struct.Reg* %410, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %411 to i64*
  %412 = load i64, i64* %PC.i1201
  %413 = add i64 %412, 11
  %414 = load i64, i64* %PC.i1201
  %415 = add i64 %414, 6
  %416 = load i64, i64* %PC.i1201
  %417 = add i64 %416, 6
  store i64 %417, i64* %PC.i1201
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %419 = load i8, i8* %418, align 1
  %420 = icmp ne i8 %419, 0
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %422 = load i8, i8* %421, align 1
  %423 = icmp ne i8 %422, 0
  %424 = xor i1 %420, %423
  %425 = xor i1 %424, true
  %426 = zext i1 %425 to i8
  store i8 %426, i8* %BRANCH_TAKEN, align 1
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %428 = select i1 %424, i64 %415, i64 %413
  store i64 %428, i64* %427, align 8
  store %struct.Memory* %loadMem_462cde, %struct.Memory** %MEMORY
  %loadBr_462cde = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462cde = icmp eq i8 %loadBr_462cde, 1
  br i1 %cmpBr_462cde, label %block_.L_462ce9, label %block_462ce4

block_462ce4:                                     ; preds = %entry
  %loadMem_462ce4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %430 = getelementptr inbounds %struct.GPR, %struct.GPR* %429, i32 0, i32 33
  %431 = getelementptr inbounds %struct.Reg, %struct.Reg* %430, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %431 to i64*
  %432 = load i64, i64* %PC.i1200
  %433 = add i64 %432, 2339
  %434 = load i64, i64* %PC.i1200
  %435 = add i64 %434, 5
  store i64 %435, i64* %PC.i1200
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %433, i64* %436, align 8
  store %struct.Memory* %loadMem_462ce4, %struct.Memory** %MEMORY
  br label %block_.L_463607

block_.L_462ce9:                                  ; preds = %entry
  %loadMem_462ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %438 = getelementptr inbounds %struct.GPR, %struct.GPR* %437, i32 0, i32 33
  %439 = getelementptr inbounds %struct.Reg, %struct.Reg* %438, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %439 to i64*
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %441 = getelementptr inbounds %struct.GPR, %struct.GPR* %440, i32 0, i32 1
  %442 = getelementptr inbounds %struct.Reg, %struct.Reg* %441, i32 0, i32 0
  %RAX.i1198 = bitcast %union.anon* %442 to i64*
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %444 = getelementptr inbounds %struct.GPR, %struct.GPR* %443, i32 0, i32 15
  %445 = getelementptr inbounds %struct.Reg, %struct.Reg* %444, i32 0, i32 0
  %RBP.i1199 = bitcast %union.anon* %445 to i64*
  %446 = load i64, i64* %RBP.i1199
  %447 = sub i64 %446, 68
  %448 = load i64, i64* %PC.i1197
  %449 = add i64 %448, 3
  store i64 %449, i64* %PC.i1197
  %450 = inttoptr i64 %447 to i32*
  %451 = load i32, i32* %450
  %452 = zext i32 %451 to i64
  store i64 %452, i64* %RAX.i1198, align 8
  store %struct.Memory* %loadMem_462ce9, %struct.Memory** %MEMORY
  %loadMem_462cec = load %struct.Memory*, %struct.Memory** %MEMORY
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %454 = getelementptr inbounds %struct.GPR, %struct.GPR* %453, i32 0, i32 33
  %455 = getelementptr inbounds %struct.Reg, %struct.Reg* %454, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %455 to i64*
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %457 = getelementptr inbounds %struct.GPR, %struct.GPR* %456, i32 0, i32 1
  %458 = getelementptr inbounds %struct.Reg, %struct.Reg* %457, i32 0, i32 0
  %EAX.i1195 = bitcast %union.anon* %458 to i32*
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %460 = getelementptr inbounds %struct.GPR, %struct.GPR* %459, i32 0, i32 15
  %461 = getelementptr inbounds %struct.Reg, %struct.Reg* %460, i32 0, i32 0
  %RBP.i1196 = bitcast %union.anon* %461 to i64*
  %462 = load i64, i64* %RBP.i1196
  %463 = sub i64 %462, 80
  %464 = load i32, i32* %EAX.i1195
  %465 = zext i32 %464 to i64
  %466 = load i64, i64* %PC.i1194
  %467 = add i64 %466, 3
  store i64 %467, i64* %PC.i1194
  %468 = inttoptr i64 %463 to i32*
  store i32 %464, i32* %468
  store %struct.Memory* %loadMem_462cec, %struct.Memory** %MEMORY
  br label %block_.L_462cef

block_.L_462cef:                                  ; preds = %block_.L_463372, %block_.L_462ce9
  %loadMem_462cef = load %struct.Memory*, %struct.Memory** %MEMORY
  %469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %470 = getelementptr inbounds %struct.GPR, %struct.GPR* %469, i32 0, i32 33
  %471 = getelementptr inbounds %struct.Reg, %struct.Reg* %470, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %471 to i64*
  %472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %473 = getelementptr inbounds %struct.GPR, %struct.GPR* %472, i32 0, i32 1
  %474 = getelementptr inbounds %struct.Reg, %struct.Reg* %473, i32 0, i32 0
  %RAX.i1192 = bitcast %union.anon* %474 to i64*
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %476 = getelementptr inbounds %struct.GPR, %struct.GPR* %475, i32 0, i32 15
  %477 = getelementptr inbounds %struct.Reg, %struct.Reg* %476, i32 0, i32 0
  %RBP.i1193 = bitcast %union.anon* %477 to i64*
  %478 = load i64, i64* %RBP.i1193
  %479 = sub i64 %478, 80
  %480 = load i64, i64* %PC.i1191
  %481 = add i64 %480, 3
  store i64 %481, i64* %PC.i1191
  %482 = inttoptr i64 %479 to i32*
  %483 = load i32, i32* %482
  %484 = zext i32 %483 to i64
  store i64 %484, i64* %RAX.i1192, align 8
  store %struct.Memory* %loadMem_462cef, %struct.Memory** %MEMORY
  %loadMem_462cf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %486 = getelementptr inbounds %struct.GPR, %struct.GPR* %485, i32 0, i32 33
  %487 = getelementptr inbounds %struct.Reg, %struct.Reg* %486, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %487 to i64*
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %489 = getelementptr inbounds %struct.GPR, %struct.GPR* %488, i32 0, i32 5
  %490 = getelementptr inbounds %struct.Reg, %struct.Reg* %489, i32 0, i32 0
  %RCX.i1189 = bitcast %union.anon* %490 to i64*
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %492 = getelementptr inbounds %struct.GPR, %struct.GPR* %491, i32 0, i32 15
  %493 = getelementptr inbounds %struct.Reg, %struct.Reg* %492, i32 0, i32 0
  %RBP.i1190 = bitcast %union.anon* %493 to i64*
  %494 = load i64, i64* %RBP.i1190
  %495 = sub i64 %494, 48
  %496 = load i64, i64* %PC.i1188
  %497 = add i64 %496, 4
  store i64 %497, i64* %PC.i1188
  %498 = inttoptr i64 %495 to i64*
  %499 = load i64, i64* %498
  store i64 %499, i64* %RCX.i1189, align 8
  store %struct.Memory* %loadMem_462cf2, %struct.Memory** %MEMORY
  %loadMem_462cf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %501 = getelementptr inbounds %struct.GPR, %struct.GPR* %500, i32 0, i32 33
  %502 = getelementptr inbounds %struct.Reg, %struct.Reg* %501, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %502 to i64*
  %503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %504 = getelementptr inbounds %struct.GPR, %struct.GPR* %503, i32 0, i32 1
  %505 = getelementptr inbounds %struct.Reg, %struct.Reg* %504, i32 0, i32 0
  %EAX.i1186 = bitcast %union.anon* %505 to i32*
  %506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %507 = getelementptr inbounds %struct.GPR, %struct.GPR* %506, i32 0, i32 5
  %508 = getelementptr inbounds %struct.Reg, %struct.Reg* %507, i32 0, i32 0
  %RCX.i1187 = bitcast %union.anon* %508 to i64*
  %509 = load i32, i32* %EAX.i1186
  %510 = zext i32 %509 to i64
  %511 = load i64, i64* %RCX.i1187
  %512 = add i64 %511, 400
  %513 = load i64, i64* %PC.i1185
  %514 = add i64 %513, 6
  store i64 %514, i64* %PC.i1185
  %515 = inttoptr i64 %512 to i32*
  %516 = load i32, i32* %515
  %517 = sub i32 %509, %516
  %518 = icmp ult i32 %509, %516
  %519 = zext i1 %518 to i8
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %519, i8* %520, align 1
  %521 = and i32 %517, 255
  %522 = call i32 @llvm.ctpop.i32(i32 %521)
  %523 = trunc i32 %522 to i8
  %524 = and i8 %523, 1
  %525 = xor i8 %524, 1
  %526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %525, i8* %526, align 1
  %527 = xor i32 %516, %509
  %528 = xor i32 %527, %517
  %529 = lshr i32 %528, 4
  %530 = trunc i32 %529 to i8
  %531 = and i8 %530, 1
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %531, i8* %532, align 1
  %533 = icmp eq i32 %517, 0
  %534 = zext i1 %533 to i8
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %534, i8* %535, align 1
  %536 = lshr i32 %517, 31
  %537 = trunc i32 %536 to i8
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %537, i8* %538, align 1
  %539 = lshr i32 %509, 31
  %540 = lshr i32 %516, 31
  %541 = xor i32 %540, %539
  %542 = xor i32 %536, %539
  %543 = add i32 %542, %541
  %544 = icmp eq i32 %543, 2
  %545 = zext i1 %544 to i8
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %545, i8* %546, align 1
  store %struct.Memory* %loadMem_462cf6, %struct.Memory** %MEMORY
  %loadMem_462cfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %548 = getelementptr inbounds %struct.GPR, %struct.GPR* %547, i32 0, i32 33
  %549 = getelementptr inbounds %struct.Reg, %struct.Reg* %548, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %549 to i64*
  %550 = load i64, i64* %PC.i1184
  %551 = add i64 %550, 1668
  %552 = load i64, i64* %PC.i1184
  %553 = add i64 %552, 6
  %554 = load i64, i64* %PC.i1184
  %555 = add i64 %554, 6
  store i64 %555, i64* %PC.i1184
  %556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %557 = load i8, i8* %556, align 1
  %558 = icmp ne i8 %557, 0
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %560 = load i8, i8* %559, align 1
  %561 = icmp ne i8 %560, 0
  %562 = xor i1 %558, %561
  %563 = xor i1 %562, true
  %564 = zext i1 %563 to i8
  store i8 %564, i8* %BRANCH_TAKEN, align 1
  %565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %566 = select i1 %562, i64 %553, i64 %551
  store i64 %566, i64* %565, align 8
  store %struct.Memory* %loadMem_462cfc, %struct.Memory** %MEMORY
  %loadBr_462cfc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462cfc = icmp eq i8 %loadBr_462cfc, 1
  br i1 %cmpBr_462cfc, label %block_.L_463380, label %block_462d02

block_462d02:                                     ; preds = %block_.L_462cef
  %loadMem_462d02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %568 = getelementptr inbounds %struct.GPR, %struct.GPR* %567, i32 0, i32 33
  %569 = getelementptr inbounds %struct.Reg, %struct.Reg* %568, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %569 to i64*
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %571 = getelementptr inbounds %struct.GPR, %struct.GPR* %570, i32 0, i32 5
  %572 = getelementptr inbounds %struct.Reg, %struct.Reg* %571, i32 0, i32 0
  %RCX.i1182 = bitcast %union.anon* %572 to i64*
  %573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %574 = getelementptr inbounds %struct.GPR, %struct.GPR* %573, i32 0, i32 15
  %575 = getelementptr inbounds %struct.Reg, %struct.Reg* %574, i32 0, i32 0
  %RBP.i1183 = bitcast %union.anon* %575 to i64*
  %576 = load i64, i64* %RBP.i1183
  %577 = sub i64 %576, 104
  %578 = load i64, i64* %PC.i1181
  %579 = add i64 %578, 4
  store i64 %579, i64* %PC.i1181
  store i64 %577, i64* %RCX.i1182, align 8
  store %struct.Memory* %loadMem_462d02, %struct.Memory** %MEMORY
  %loadMem_462d06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %581 = getelementptr inbounds %struct.GPR, %struct.GPR* %580, i32 0, i32 33
  %582 = getelementptr inbounds %struct.Reg, %struct.Reg* %581, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %582 to i64*
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %584 = getelementptr inbounds %struct.GPR, %struct.GPR* %583, i32 0, i32 15
  %585 = getelementptr inbounds %struct.Reg, %struct.Reg* %584, i32 0, i32 0
  %RBP.i1180 = bitcast %union.anon* %585 to i64*
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %587 = getelementptr inbounds %struct.GPR, %struct.GPR* %586, i32 0, i32 17
  %588 = getelementptr inbounds %struct.Reg, %struct.Reg* %587, i32 0, i32 0
  %R8.i = bitcast %union.anon* %588 to i64*
  %589 = load i64, i64* %RBP.i1180
  %590 = sub i64 %589, 108
  %591 = load i64, i64* %PC.i1179
  %592 = add i64 %591, 4
  store i64 %592, i64* %PC.i1179
  store i64 %590, i64* %R8.i, align 8
  store %struct.Memory* %loadMem_462d06, %struct.Memory** %MEMORY
  %loadMem_462d0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %594 = getelementptr inbounds %struct.GPR, %struct.GPR* %593, i32 0, i32 33
  %595 = getelementptr inbounds %struct.Reg, %struct.Reg* %594, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %595 to i64*
  %596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %597 = getelementptr inbounds %struct.GPR, %struct.GPR* %596, i32 0, i32 15
  %598 = getelementptr inbounds %struct.Reg, %struct.Reg* %597, i32 0, i32 0
  %RBP.i1177 = bitcast %union.anon* %598 to i64*
  %599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %600 = getelementptr inbounds %struct.GPR, %struct.GPR* %599, i32 0, i32 19
  %601 = getelementptr inbounds %struct.Reg, %struct.Reg* %600, i32 0, i32 0
  %R9.i1178 = bitcast %union.anon* %601 to i64*
  %602 = load i64, i64* %RBP.i1177
  %603 = sub i64 %602, 112
  %604 = load i64, i64* %PC.i1176
  %605 = add i64 %604, 4
  store i64 %605, i64* %PC.i1176
  store i64 %603, i64* %R9.i1178, align 8
  store %struct.Memory* %loadMem_462d0a, %struct.Memory** %MEMORY
  %loadMem_462d0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %607 = getelementptr inbounds %struct.GPR, %struct.GPR* %606, i32 0, i32 33
  %608 = getelementptr inbounds %struct.Reg, %struct.Reg* %607, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %608 to i64*
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %610 = getelementptr inbounds %struct.GPR, %struct.GPR* %609, i32 0, i32 1
  %611 = getelementptr inbounds %struct.Reg, %struct.Reg* %610, i32 0, i32 0
  %RAX.i1174 = bitcast %union.anon* %611 to i64*
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %613 = getelementptr inbounds %struct.GPR, %struct.GPR* %612, i32 0, i32 15
  %614 = getelementptr inbounds %struct.Reg, %struct.Reg* %613, i32 0, i32 0
  %RBP.i1175 = bitcast %union.anon* %614 to i64*
  %615 = load i64, i64* %RBP.i1175
  %616 = sub i64 %615, 116
  %617 = load i64, i64* %PC.i1173
  %618 = add i64 %617, 4
  store i64 %618, i64* %PC.i1173
  store i64 %616, i64* %RAX.i1174, align 8
  store %struct.Memory* %loadMem_462d0e, %struct.Memory** %MEMORY
  %loadMem_462d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %620 = getelementptr inbounds %struct.GPR, %struct.GPR* %619, i32 0, i32 33
  %621 = getelementptr inbounds %struct.Reg, %struct.Reg* %620, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %621 to i64*
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %623 = getelementptr inbounds %struct.GPR, %struct.GPR* %622, i32 0, i32 7
  %624 = getelementptr inbounds %struct.Reg, %struct.Reg* %623, i32 0, i32 0
  %RDX.i1171 = bitcast %union.anon* %624 to i64*
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %626 = getelementptr inbounds %struct.GPR, %struct.GPR* %625, i32 0, i32 15
  %627 = getelementptr inbounds %struct.Reg, %struct.Reg* %626, i32 0, i32 0
  %RBP.i1172 = bitcast %union.anon* %627 to i64*
  %628 = load i64, i64* %RBP.i1172
  %629 = sub i64 %628, 120
  %630 = load i64, i64* %PC.i1170
  %631 = add i64 %630, 4
  store i64 %631, i64* %PC.i1170
  store i64 %629, i64* %RDX.i1171, align 8
  store %struct.Memory* %loadMem_462d12, %struct.Memory** %MEMORY
  %loadMem_462d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %633 = getelementptr inbounds %struct.GPR, %struct.GPR* %632, i32 0, i32 33
  %634 = getelementptr inbounds %struct.Reg, %struct.Reg* %633, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %634 to i64*
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %636 = getelementptr inbounds %struct.GPR, %struct.GPR* %635, i32 0, i32 9
  %637 = getelementptr inbounds %struct.Reg, %struct.Reg* %636, i32 0, i32 0
  %RSI.i1168 = bitcast %union.anon* %637 to i64*
  %638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %639 = getelementptr inbounds %struct.GPR, %struct.GPR* %638, i32 0, i32 15
  %640 = getelementptr inbounds %struct.Reg, %struct.Reg* %639, i32 0, i32 0
  %RBP.i1169 = bitcast %union.anon* %640 to i64*
  %641 = load i64, i64* %RBP.i1169
  %642 = sub i64 %641, 124
  %643 = load i64, i64* %PC.i1167
  %644 = add i64 %643, 4
  store i64 %644, i64* %PC.i1167
  store i64 %642, i64* %RSI.i1168, align 8
  store %struct.Memory* %loadMem_462d16, %struct.Memory** %MEMORY
  %loadMem_462d1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %646 = getelementptr inbounds %struct.GPR, %struct.GPR* %645, i32 0, i32 33
  %647 = getelementptr inbounds %struct.Reg, %struct.Reg* %646, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %647 to i64*
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %649 = getelementptr inbounds %struct.GPR, %struct.GPR* %648, i32 0, i32 11
  %650 = getelementptr inbounds %struct.Reg, %struct.Reg* %649, i32 0, i32 0
  %RDI.i1165 = bitcast %union.anon* %650 to i64*
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %652 = getelementptr inbounds %struct.GPR, %struct.GPR* %651, i32 0, i32 15
  %653 = getelementptr inbounds %struct.Reg, %struct.Reg* %652, i32 0, i32 0
  %RBP.i1166 = bitcast %union.anon* %653 to i64*
  %654 = load i64, i64* %RBP.i1166
  %655 = sub i64 %654, 128
  %656 = load i64, i64* %PC.i1164
  %657 = add i64 %656, 4
  store i64 %657, i64* %PC.i1164
  store i64 %655, i64* %RDI.i1165, align 8
  store %struct.Memory* %loadMem_462d1a, %struct.Memory** %MEMORY
  %loadMem_462d1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %659 = getelementptr inbounds %struct.GPR, %struct.GPR* %658, i32 0, i32 33
  %660 = getelementptr inbounds %struct.Reg, %struct.Reg* %659, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %660 to i64*
  %661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %662 = getelementptr inbounds %struct.GPR, %struct.GPR* %661, i32 0, i32 15
  %663 = getelementptr inbounds %struct.Reg, %struct.Reg* %662, i32 0, i32 0
  %RBP.i1162 = bitcast %union.anon* %663 to i64*
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %665 = getelementptr inbounds %struct.GPR, %struct.GPR* %664, i32 0, i32 21
  %666 = getelementptr inbounds %struct.Reg, %struct.Reg* %665, i32 0, i32 0
  %R10.i1163 = bitcast %union.anon* %666 to i64*
  %667 = load i64, i64* %RBP.i1162
  %668 = sub i64 %667, 132
  %669 = load i64, i64* %PC.i1161
  %670 = add i64 %669, 7
  store i64 %670, i64* %PC.i1161
  store i64 %668, i64* %R10.i1163, align 8
  store %struct.Memory* %loadMem_462d1e, %struct.Memory** %MEMORY
  %loadMem_462d25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %672 = getelementptr inbounds %struct.GPR, %struct.GPR* %671, i32 0, i32 33
  %673 = getelementptr inbounds %struct.Reg, %struct.Reg* %672, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %673 to i64*
  %674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %675 = getelementptr inbounds %struct.GPR, %struct.GPR* %674, i32 0, i32 15
  %676 = getelementptr inbounds %struct.Reg, %struct.Reg* %675, i32 0, i32 0
  %RBP.i1159 = bitcast %union.anon* %676 to i64*
  %677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %678 = getelementptr inbounds %struct.GPR, %struct.GPR* %677, i32 0, i32 23
  %679 = getelementptr inbounds %struct.Reg, %struct.Reg* %678, i32 0, i32 0
  %R11.i1160 = bitcast %union.anon* %679 to i64*
  %680 = load i64, i64* %RBP.i1159
  %681 = sub i64 %680, 48
  %682 = load i64, i64* %PC.i1158
  %683 = add i64 %682, 4
  store i64 %683, i64* %PC.i1158
  %684 = inttoptr i64 %681 to i64*
  %685 = load i64, i64* %684
  store i64 %685, i64* %R11.i1160, align 8
  store %struct.Memory* %loadMem_462d25, %struct.Memory** %MEMORY
  %loadMem_462d29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %687 = getelementptr inbounds %struct.GPR, %struct.GPR* %686, i32 0, i32 33
  %688 = getelementptr inbounds %struct.Reg, %struct.Reg* %687, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %688 to i64*
  %689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %690 = getelementptr inbounds %struct.GPR, %struct.GPR* %689, i32 0, i32 3
  %691 = getelementptr inbounds %struct.Reg, %struct.Reg* %690, i32 0, i32 0
  %RBX.i1156 = bitcast %union.anon* %691 to i64*
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %693 = getelementptr inbounds %struct.GPR, %struct.GPR* %692, i32 0, i32 15
  %694 = getelementptr inbounds %struct.Reg, %struct.Reg* %693, i32 0, i32 0
  %RBP.i1157 = bitcast %union.anon* %694 to i64*
  %695 = load i64, i64* %RBP.i1157
  %696 = sub i64 %695, 80
  %697 = load i64, i64* %PC.i1155
  %698 = add i64 %697, 4
  store i64 %698, i64* %PC.i1155
  %699 = inttoptr i64 %696 to i32*
  %700 = load i32, i32* %699
  %701 = sext i32 %700 to i64
  store i64 %701, i64* %RBX.i1156, align 8
  store %struct.Memory* %loadMem_462d29, %struct.Memory** %MEMORY
  %loadMem_462d2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %703 = getelementptr inbounds %struct.GPR, %struct.GPR* %702, i32 0, i32 33
  %704 = getelementptr inbounds %struct.Reg, %struct.Reg* %703, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %704 to i64*
  %705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %706 = getelementptr inbounds %struct.GPR, %struct.GPR* %705, i32 0, i32 29
  %707 = getelementptr inbounds %struct.Reg, %struct.Reg* %706, i32 0, i32 0
  %R14D.i1152 = bitcast %union.anon* %707 to i32*
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %709 = getelementptr inbounds %struct.GPR, %struct.GPR* %708, i32 0, i32 3
  %710 = getelementptr inbounds %struct.Reg, %struct.Reg* %709, i32 0, i32 0
  %RBX.i1153 = bitcast %union.anon* %710 to i64*
  %711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %712 = getelementptr inbounds %struct.GPR, %struct.GPR* %711, i32 0, i32 23
  %713 = getelementptr inbounds %struct.Reg, %struct.Reg* %712, i32 0, i32 0
  %R11.i1154 = bitcast %union.anon* %713 to i64*
  %714 = bitcast i32* %R14D.i1152 to i64*
  %715 = load i64, i64* %R11.i1154
  %716 = load i64, i64* %RBX.i1153
  %717 = mul i64 %716, 4
  %718 = add i64 %717, %715
  %719 = load i64, i64* %PC.i1151
  %720 = add i64 %719, 4
  store i64 %720, i64* %PC.i1151
  %721 = inttoptr i64 %718 to i32*
  %722 = load i32, i32* %721
  %723 = zext i32 %722 to i64
  store i64 %723, i64* %714, align 8
  store %struct.Memory* %loadMem_462d2d, %struct.Memory** %MEMORY
  %loadMem_462d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %725 = getelementptr inbounds %struct.GPR, %struct.GPR* %724, i32 0, i32 33
  %726 = getelementptr inbounds %struct.Reg, %struct.Reg* %725, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %726 to i64*
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %728 = getelementptr inbounds %struct.GPR, %struct.GPR* %727, i32 0, i32 29
  %729 = getelementptr inbounds %struct.Reg, %struct.Reg* %728, i32 0, i32 0
  %R14D.i1149 = bitcast %union.anon* %729 to i32*
  %730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %731 = getelementptr inbounds %struct.GPR, %struct.GPR* %730, i32 0, i32 15
  %732 = getelementptr inbounds %struct.Reg, %struct.Reg* %731, i32 0, i32 0
  %RBP.i1150 = bitcast %union.anon* %732 to i64*
  %733 = load i64, i64* %RBP.i1150
  %734 = sub i64 %733, 100
  %735 = load i32, i32* %R14D.i1149
  %736 = zext i32 %735 to i64
  %737 = load i64, i64* %PC.i1148
  %738 = add i64 %737, 4
  store i64 %738, i64* %PC.i1148
  %739 = inttoptr i64 %734 to i32*
  store i32 %735, i32* %739
  store %struct.Memory* %loadMem_462d31, %struct.Memory** %MEMORY
  %loadMem_462d35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %741 = getelementptr inbounds %struct.GPR, %struct.GPR* %740, i32 0, i32 33
  %742 = getelementptr inbounds %struct.Reg, %struct.Reg* %741, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %742 to i64*
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %744 = getelementptr inbounds %struct.GPR, %struct.GPR* %743, i32 0, i32 15
  %745 = getelementptr inbounds %struct.Reg, %struct.Reg* %744, i32 0, i32 0
  %RBP.i1147 = bitcast %union.anon* %745 to i64*
  %746 = load i64, i64* %RBP.i1147
  %747 = sub i64 %746, 104
  %748 = load i64, i64* %PC.i1146
  %749 = add i64 %748, 7
  store i64 %749, i64* %PC.i1146
  %750 = inttoptr i64 %747 to i32*
  store i32 0, i32* %750
  store %struct.Memory* %loadMem_462d35, %struct.Memory** %MEMORY
  %loadMem_462d3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %752 = getelementptr inbounds %struct.GPR, %struct.GPR* %751, i32 0, i32 33
  %753 = getelementptr inbounds %struct.Reg, %struct.Reg* %752, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %753 to i64*
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %755 = getelementptr inbounds %struct.GPR, %struct.GPR* %754, i32 0, i32 15
  %756 = getelementptr inbounds %struct.Reg, %struct.Reg* %755, i32 0, i32 0
  %RBP.i1145 = bitcast %union.anon* %756 to i64*
  %757 = load i64, i64* %RBP.i1145
  %758 = sub i64 %757, 108
  %759 = load i64, i64* %PC.i1144
  %760 = add i64 %759, 7
  store i64 %760, i64* %PC.i1144
  %761 = inttoptr i64 %758 to i32*
  store i32 0, i32* %761
  store %struct.Memory* %loadMem_462d3c, %struct.Memory** %MEMORY
  %loadMem_462d43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %763 = getelementptr inbounds %struct.GPR, %struct.GPR* %762, i32 0, i32 33
  %764 = getelementptr inbounds %struct.Reg, %struct.Reg* %763, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %764 to i64*
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %766 = getelementptr inbounds %struct.GPR, %struct.GPR* %765, i32 0, i32 15
  %767 = getelementptr inbounds %struct.Reg, %struct.Reg* %766, i32 0, i32 0
  %RBP.i1143 = bitcast %union.anon* %767 to i64*
  %768 = load i64, i64* %RBP.i1143
  %769 = sub i64 %768, 112
  %770 = load i64, i64* %PC.i1142
  %771 = add i64 %770, 7
  store i64 %771, i64* %PC.i1142
  %772 = inttoptr i64 %769 to i32*
  store i32 0, i32* %772
  store %struct.Memory* %loadMem_462d43, %struct.Memory** %MEMORY
  %loadMem_462d4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %774 = getelementptr inbounds %struct.GPR, %struct.GPR* %773, i32 0, i32 33
  %775 = getelementptr inbounds %struct.Reg, %struct.Reg* %774, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %775 to i64*
  %776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %777 = getelementptr inbounds %struct.GPR, %struct.GPR* %776, i32 0, i32 15
  %778 = getelementptr inbounds %struct.Reg, %struct.Reg* %777, i32 0, i32 0
  %RBP.i1141 = bitcast %union.anon* %778 to i64*
  %779 = load i64, i64* %RBP.i1141
  %780 = sub i64 %779, 116
  %781 = load i64, i64* %PC.i1140
  %782 = add i64 %781, 7
  store i64 %782, i64* %PC.i1140
  %783 = inttoptr i64 %780 to i32*
  store i32 0, i32* %783
  store %struct.Memory* %loadMem_462d4a, %struct.Memory** %MEMORY
  %loadMem_462d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %785 = getelementptr inbounds %struct.GPR, %struct.GPR* %784, i32 0, i32 33
  %786 = getelementptr inbounds %struct.Reg, %struct.Reg* %785, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %786 to i64*
  %787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %788 = getelementptr inbounds %struct.GPR, %struct.GPR* %787, i32 0, i32 15
  %789 = getelementptr inbounds %struct.Reg, %struct.Reg* %788, i32 0, i32 0
  %RBP.i1139 = bitcast %union.anon* %789 to i64*
  %790 = load i64, i64* %RBP.i1139
  %791 = sub i64 %790, 120
  %792 = load i64, i64* %PC.i1138
  %793 = add i64 %792, 7
  store i64 %793, i64* %PC.i1138
  %794 = inttoptr i64 %791 to i32*
  store i32 0, i32* %794
  store %struct.Memory* %loadMem_462d51, %struct.Memory** %MEMORY
  %loadMem_462d58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %796 = getelementptr inbounds %struct.GPR, %struct.GPR* %795, i32 0, i32 33
  %797 = getelementptr inbounds %struct.Reg, %struct.Reg* %796, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %797 to i64*
  %798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %799 = getelementptr inbounds %struct.GPR, %struct.GPR* %798, i32 0, i32 15
  %800 = getelementptr inbounds %struct.Reg, %struct.Reg* %799, i32 0, i32 0
  %RBP.i1137 = bitcast %union.anon* %800 to i64*
  %801 = load i64, i64* %RBP.i1137
  %802 = sub i64 %801, 124
  %803 = load i64, i64* %PC.i1136
  %804 = add i64 %803, 7
  store i64 %804, i64* %PC.i1136
  %805 = inttoptr i64 %802 to i32*
  store i32 0, i32* %805
  store %struct.Memory* %loadMem_462d58, %struct.Memory** %MEMORY
  %loadMem_462d5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %807 = getelementptr inbounds %struct.GPR, %struct.GPR* %806, i32 0, i32 33
  %808 = getelementptr inbounds %struct.Reg, %struct.Reg* %807, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %808 to i64*
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %810 = getelementptr inbounds %struct.GPR, %struct.GPR* %809, i32 0, i32 15
  %811 = getelementptr inbounds %struct.Reg, %struct.Reg* %810, i32 0, i32 0
  %RBP.i1135 = bitcast %union.anon* %811 to i64*
  %812 = load i64, i64* %RBP.i1135
  %813 = sub i64 %812, 128
  %814 = load i64, i64* %PC.i1134
  %815 = add i64 %814, 7
  store i64 %815, i64* %PC.i1134
  %816 = inttoptr i64 %813 to i32*
  store i32 0, i32* %816
  store %struct.Memory* %loadMem_462d5f, %struct.Memory** %MEMORY
  %loadMem_462d66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %818 = getelementptr inbounds %struct.GPR, %struct.GPR* %817, i32 0, i32 33
  %819 = getelementptr inbounds %struct.Reg, %struct.Reg* %818, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %819 to i64*
  %820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %821 = getelementptr inbounds %struct.GPR, %struct.GPR* %820, i32 0, i32 15
  %822 = getelementptr inbounds %struct.Reg, %struct.Reg* %821, i32 0, i32 0
  %RBP.i1133 = bitcast %union.anon* %822 to i64*
  %823 = load i64, i64* %RBP.i1133
  %824 = sub i64 %823, 132
  %825 = load i64, i64* %PC.i1132
  %826 = add i64 %825, 10
  store i64 %826, i64* %PC.i1132
  %827 = inttoptr i64 %824 to i32*
  store i32 0, i32* %827
  store %struct.Memory* %loadMem_462d66, %struct.Memory** %MEMORY
  %loadMem_462d70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %829 = getelementptr inbounds %struct.GPR, %struct.GPR* %828, i32 0, i32 33
  %830 = getelementptr inbounds %struct.Reg, %struct.Reg* %829, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %830 to i64*
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %832 = getelementptr inbounds %struct.GPR, %struct.GPR* %831, i32 0, i32 29
  %833 = getelementptr inbounds %struct.Reg, %struct.Reg* %832, i32 0, i32 0
  %R14D.i1130 = bitcast %union.anon* %833 to i32*
  %834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %835 = getelementptr inbounds %struct.GPR, %struct.GPR* %834, i32 0, i32 15
  %836 = getelementptr inbounds %struct.Reg, %struct.Reg* %835, i32 0, i32 0
  %RBP.i1131 = bitcast %union.anon* %836 to i64*
  %837 = bitcast i32* %R14D.i1130 to i64*
  %838 = load i64, i64* %RBP.i1131
  %839 = sub i64 %838, 100
  %840 = load i64, i64* %PC.i1129
  %841 = add i64 %840, 4
  store i64 %841, i64* %PC.i1129
  %842 = inttoptr i64 %839 to i32*
  %843 = load i32, i32* %842
  %844 = zext i32 %843 to i64
  store i64 %844, i64* %837, align 8
  store %struct.Memory* %loadMem_462d70, %struct.Memory** %MEMORY
  %loadMem_462d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %846 = getelementptr inbounds %struct.GPR, %struct.GPR* %845, i32 0, i32 33
  %847 = getelementptr inbounds %struct.Reg, %struct.Reg* %846, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %847 to i64*
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %849 = getelementptr inbounds %struct.GPR, %struct.GPR* %848, i32 0, i32 31
  %850 = getelementptr inbounds %struct.Reg, %struct.Reg* %849, i32 0, i32 0
  %R15D.i1127 = bitcast %union.anon* %850 to i32*
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %852 = getelementptr inbounds %struct.GPR, %struct.GPR* %851, i32 0, i32 15
  %853 = getelementptr inbounds %struct.Reg, %struct.Reg* %852, i32 0, i32 0
  %RBP.i1128 = bitcast %union.anon* %853 to i64*
  %854 = bitcast i32* %R15D.i1127 to i64*
  %855 = load i64, i64* %RBP.i1128
  %856 = sub i64 %855, 52
  %857 = load i64, i64* %PC.i1126
  %858 = add i64 %857, 4
  store i64 %858, i64* %PC.i1126
  %859 = inttoptr i64 %856 to i32*
  %860 = load i32, i32* %859
  %861 = zext i32 %860 to i64
  store i64 %861, i64* %854, align 8
  store %struct.Memory* %loadMem_462d74, %struct.Memory** %MEMORY
  %loadMem_462d78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %863 = getelementptr inbounds %struct.GPR, %struct.GPR* %862, i32 0, i32 33
  %864 = getelementptr inbounds %struct.Reg, %struct.Reg* %863, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %864 to i64*
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 25
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %R12D.i1124 = bitcast %union.anon* %867 to i32*
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %869 = getelementptr inbounds %struct.GPR, %struct.GPR* %868, i32 0, i32 15
  %870 = getelementptr inbounds %struct.Reg, %struct.Reg* %869, i32 0, i32 0
  %RBP.i1125 = bitcast %union.anon* %870 to i64*
  %871 = bitcast i32* %R12D.i1124 to i64*
  %872 = load i64, i64* %RBP.i1125
  %873 = sub i64 %872, 36
  %874 = load i64, i64* %PC.i1123
  %875 = add i64 %874, 4
  store i64 %875, i64* %PC.i1123
  %876 = inttoptr i64 %873 to i32*
  %877 = load i32, i32* %876
  %878 = zext i32 %877 to i64
  store i64 %878, i64* %871, align 8
  store %struct.Memory* %loadMem_462d78, %struct.Memory** %MEMORY
  %loadMem_462d7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %880 = getelementptr inbounds %struct.GPR, %struct.GPR* %879, i32 0, i32 33
  %881 = getelementptr inbounds %struct.Reg, %struct.Reg* %880, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %881 to i64*
  %882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %883 = getelementptr inbounds %struct.GPR, %struct.GPR* %882, i32 0, i32 11
  %884 = getelementptr inbounds %struct.Reg, %struct.Reg* %883, i32 0, i32 0
  %RDI.i1121 = bitcast %union.anon* %884 to i64*
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %886 = getelementptr inbounds %struct.GPR, %struct.GPR* %885, i32 0, i32 15
  %887 = getelementptr inbounds %struct.Reg, %struct.Reg* %886, i32 0, i32 0
  %RBP.i1122 = bitcast %union.anon* %887 to i64*
  %888 = load i64, i64* %RBP.i1122
  %889 = sub i64 %888, 680
  %890 = load i64, i64* %RDI.i1121
  %891 = load i64, i64* %PC.i1120
  %892 = add i64 %891, 7
  store i64 %892, i64* %PC.i1120
  %893 = inttoptr i64 %889 to i64*
  store i64 %890, i64* %893
  store %struct.Memory* %loadMem_462d7c, %struct.Memory** %MEMORY
  %loadMem_462d83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %895 = getelementptr inbounds %struct.GPR, %struct.GPR* %894, i32 0, i32 33
  %896 = getelementptr inbounds %struct.Reg, %struct.Reg* %895, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %896 to i64*
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %898 = getelementptr inbounds %struct.GPR, %struct.GPR* %897, i32 0, i32 29
  %899 = getelementptr inbounds %struct.Reg, %struct.Reg* %898, i32 0, i32 0
  %R14D.i1118 = bitcast %union.anon* %899 to i32*
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %901 = getelementptr inbounds %struct.GPR, %struct.GPR* %900, i32 0, i32 11
  %902 = getelementptr inbounds %struct.Reg, %struct.Reg* %901, i32 0, i32 0
  %RDI.i1119 = bitcast %union.anon* %902 to i64*
  %903 = load i32, i32* %R14D.i1118
  %904 = zext i32 %903 to i64
  %905 = load i64, i64* %PC.i1117
  %906 = add i64 %905, 3
  store i64 %906, i64* %PC.i1117
  %907 = and i64 %904, 4294967295
  store i64 %907, i64* %RDI.i1119, align 8
  store %struct.Memory* %loadMem_462d83, %struct.Memory** %MEMORY
  %loadMem_462d86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 33
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %910 to i64*
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %912 = getelementptr inbounds %struct.GPR, %struct.GPR* %911, i32 0, i32 9
  %913 = getelementptr inbounds %struct.Reg, %struct.Reg* %912, i32 0, i32 0
  %RSI.i1115 = bitcast %union.anon* %913 to i64*
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %915 = getelementptr inbounds %struct.GPR, %struct.GPR* %914, i32 0, i32 15
  %916 = getelementptr inbounds %struct.Reg, %struct.Reg* %915, i32 0, i32 0
  %RBP.i1116 = bitcast %union.anon* %916 to i64*
  %917 = load i64, i64* %RBP.i1116
  %918 = sub i64 %917, 688
  %919 = load i64, i64* %RSI.i1115
  %920 = load i64, i64* %PC.i1114
  %921 = add i64 %920, 7
  store i64 %921, i64* %PC.i1114
  %922 = inttoptr i64 %918 to i64*
  store i64 %919, i64* %922
  store %struct.Memory* %loadMem_462d86, %struct.Memory** %MEMORY
  %loadMem_462d8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %924 = getelementptr inbounds %struct.GPR, %struct.GPR* %923, i32 0, i32 33
  %925 = getelementptr inbounds %struct.Reg, %struct.Reg* %924, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %925 to i64*
  %926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %927 = getelementptr inbounds %struct.GPR, %struct.GPR* %926, i32 0, i32 31
  %928 = getelementptr inbounds %struct.Reg, %struct.Reg* %927, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %928 to i32*
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %930 = getelementptr inbounds %struct.GPR, %struct.GPR* %929, i32 0, i32 9
  %931 = getelementptr inbounds %struct.Reg, %struct.Reg* %930, i32 0, i32 0
  %RSI.i1113 = bitcast %union.anon* %931 to i64*
  %932 = load i32, i32* %R15D.i
  %933 = zext i32 %932 to i64
  %934 = load i64, i64* %PC.i1112
  %935 = add i64 %934, 3
  store i64 %935, i64* %PC.i1112
  %936 = and i64 %933, 4294967295
  store i64 %936, i64* %RSI.i1113, align 8
  store %struct.Memory* %loadMem_462d8d, %struct.Memory** %MEMORY
  %loadMem_462d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %938 = getelementptr inbounds %struct.GPR, %struct.GPR* %937, i32 0, i32 33
  %939 = getelementptr inbounds %struct.Reg, %struct.Reg* %938, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %939 to i64*
  %940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %941 = getelementptr inbounds %struct.GPR, %struct.GPR* %940, i32 0, i32 7
  %942 = getelementptr inbounds %struct.Reg, %struct.Reg* %941, i32 0, i32 0
  %RDX.i1110 = bitcast %union.anon* %942 to i64*
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %944 = getelementptr inbounds %struct.GPR, %struct.GPR* %943, i32 0, i32 15
  %945 = getelementptr inbounds %struct.Reg, %struct.Reg* %944, i32 0, i32 0
  %RBP.i1111 = bitcast %union.anon* %945 to i64*
  %946 = load i64, i64* %RBP.i1111
  %947 = sub i64 %946, 696
  %948 = load i64, i64* %RDX.i1110
  %949 = load i64, i64* %PC.i1109
  %950 = add i64 %949, 7
  store i64 %950, i64* %PC.i1109
  %951 = inttoptr i64 %947 to i64*
  store i64 %948, i64* %951
  store %struct.Memory* %loadMem_462d90, %struct.Memory** %MEMORY
  %loadMem_462d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %953 = getelementptr inbounds %struct.GPR, %struct.GPR* %952, i32 0, i32 33
  %954 = getelementptr inbounds %struct.Reg, %struct.Reg* %953, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %954 to i64*
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %956 = getelementptr inbounds %struct.GPR, %struct.GPR* %955, i32 0, i32 25
  %957 = getelementptr inbounds %struct.Reg, %struct.Reg* %956, i32 0, i32 0
  %R12D.i = bitcast %union.anon* %957 to i32*
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %959 = getelementptr inbounds %struct.GPR, %struct.GPR* %958, i32 0, i32 7
  %960 = getelementptr inbounds %struct.Reg, %struct.Reg* %959, i32 0, i32 0
  %RDX.i1108 = bitcast %union.anon* %960 to i64*
  %961 = load i32, i32* %R12D.i
  %962 = zext i32 %961 to i64
  %963 = load i64, i64* %PC.i1107
  %964 = add i64 %963, 3
  store i64 %964, i64* %PC.i1107
  %965 = and i64 %962, 4294967295
  store i64 %965, i64* %RDX.i1108, align 8
  store %struct.Memory* %loadMem_462d97, %struct.Memory** %MEMORY
  %loadMem_462d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 33
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %968 to i64*
  %969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %970 = getelementptr inbounds %struct.GPR, %struct.GPR* %969, i32 0, i32 1
  %971 = getelementptr inbounds %struct.Reg, %struct.Reg* %970, i32 0, i32 0
  %RAX.i1105 = bitcast %union.anon* %971 to i64*
  %972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %973 = getelementptr inbounds %struct.GPR, %struct.GPR* %972, i32 0, i32 13
  %974 = getelementptr inbounds %struct.Reg, %struct.Reg* %973, i32 0, i32 0
  %RSP.i1106 = bitcast %union.anon* %974 to i64*
  %975 = load i64, i64* %RSP.i1106
  %976 = load i64, i64* %RAX.i1105
  %977 = load i64, i64* %PC.i1104
  %978 = add i64 %977, 4
  store i64 %978, i64* %PC.i1104
  %979 = inttoptr i64 %975 to i64*
  store i64 %976, i64* %979
  store %struct.Memory* %loadMem_462d9a, %struct.Memory** %MEMORY
  %loadMem_462d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %981 = getelementptr inbounds %struct.GPR, %struct.GPR* %980, i32 0, i32 33
  %982 = getelementptr inbounds %struct.Reg, %struct.Reg* %981, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %982 to i64*
  %983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %984 = getelementptr inbounds %struct.GPR, %struct.GPR* %983, i32 0, i32 1
  %985 = getelementptr inbounds %struct.Reg, %struct.Reg* %984, i32 0, i32 0
  %RAX.i1102 = bitcast %union.anon* %985 to i64*
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %987 = getelementptr inbounds %struct.GPR, %struct.GPR* %986, i32 0, i32 15
  %988 = getelementptr inbounds %struct.Reg, %struct.Reg* %987, i32 0, i32 0
  %RBP.i1103 = bitcast %union.anon* %988 to i64*
  %989 = load i64, i64* %RBP.i1103
  %990 = sub i64 %989, 696
  %991 = load i64, i64* %PC.i1101
  %992 = add i64 %991, 7
  store i64 %992, i64* %PC.i1101
  %993 = inttoptr i64 %990 to i64*
  %994 = load i64, i64* %993
  store i64 %994, i64* %RAX.i1102, align 8
  store %struct.Memory* %loadMem_462d9e, %struct.Memory** %MEMORY
  %loadMem_462da5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %996 = getelementptr inbounds %struct.GPR, %struct.GPR* %995, i32 0, i32 33
  %997 = getelementptr inbounds %struct.Reg, %struct.Reg* %996, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %997 to i64*
  %998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %999 = getelementptr inbounds %struct.GPR, %struct.GPR* %998, i32 0, i32 1
  %1000 = getelementptr inbounds %struct.Reg, %struct.Reg* %999, i32 0, i32 0
  %RAX.i1099 = bitcast %union.anon* %1000 to i64*
  %1001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1002 = getelementptr inbounds %struct.GPR, %struct.GPR* %1001, i32 0, i32 13
  %1003 = getelementptr inbounds %struct.Reg, %struct.Reg* %1002, i32 0, i32 0
  %RSP.i1100 = bitcast %union.anon* %1003 to i64*
  %1004 = load i64, i64* %RSP.i1100
  %1005 = add i64 %1004, 8
  %1006 = load i64, i64* %RAX.i1099
  %1007 = load i64, i64* %PC.i1098
  %1008 = add i64 %1007, 5
  store i64 %1008, i64* %PC.i1098
  %1009 = inttoptr i64 %1005 to i64*
  store i64 %1006, i64* %1009
  store %struct.Memory* %loadMem_462da5, %struct.Memory** %MEMORY
  %loadMem_462daa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1011 = getelementptr inbounds %struct.GPR, %struct.GPR* %1010, i32 0, i32 33
  %1012 = getelementptr inbounds %struct.Reg, %struct.Reg* %1011, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %1012 to i64*
  %1013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1014 = getelementptr inbounds %struct.GPR, %struct.GPR* %1013, i32 0, i32 15
  %1015 = getelementptr inbounds %struct.Reg, %struct.Reg* %1014, i32 0, i32 0
  %RBP.i1096 = bitcast %union.anon* %1015 to i64*
  %1016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1017 = getelementptr inbounds %struct.GPR, %struct.GPR* %1016, i32 0, i32 23
  %1018 = getelementptr inbounds %struct.Reg, %struct.Reg* %1017, i32 0, i32 0
  %R11.i1097 = bitcast %union.anon* %1018 to i64*
  %1019 = load i64, i64* %RBP.i1096
  %1020 = sub i64 %1019, 688
  %1021 = load i64, i64* %PC.i1095
  %1022 = add i64 %1021, 7
  store i64 %1022, i64* %PC.i1095
  %1023 = inttoptr i64 %1020 to i64*
  %1024 = load i64, i64* %1023
  store i64 %1024, i64* %R11.i1097, align 8
  store %struct.Memory* %loadMem_462daa, %struct.Memory** %MEMORY
  %loadMem_462db1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1026 = getelementptr inbounds %struct.GPR, %struct.GPR* %1025, i32 0, i32 33
  %1027 = getelementptr inbounds %struct.Reg, %struct.Reg* %1026, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %1027 to i64*
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1029 = getelementptr inbounds %struct.GPR, %struct.GPR* %1028, i32 0, i32 13
  %1030 = getelementptr inbounds %struct.Reg, %struct.Reg* %1029, i32 0, i32 0
  %RSP.i1094 = bitcast %union.anon* %1030 to i64*
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1032 = getelementptr inbounds %struct.GPR, %struct.GPR* %1031, i32 0, i32 23
  %1033 = getelementptr inbounds %struct.Reg, %struct.Reg* %1032, i32 0, i32 0
  %R11.i = bitcast %union.anon* %1033 to i64*
  %1034 = load i64, i64* %RSP.i1094
  %1035 = add i64 %1034, 16
  %1036 = load i64, i64* %R11.i
  %1037 = load i64, i64* %PC.i1093
  %1038 = add i64 %1037, 5
  store i64 %1038, i64* %PC.i1093
  %1039 = inttoptr i64 %1035 to i64*
  store i64 %1036, i64* %1039
  store %struct.Memory* %loadMem_462db1, %struct.Memory** %MEMORY
  %loadMem_462db6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1041 = getelementptr inbounds %struct.GPR, %struct.GPR* %1040, i32 0, i32 33
  %1042 = getelementptr inbounds %struct.Reg, %struct.Reg* %1041, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %1042 to i64*
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1044 = getelementptr inbounds %struct.GPR, %struct.GPR* %1043, i32 0, i32 3
  %1045 = getelementptr inbounds %struct.Reg, %struct.Reg* %1044, i32 0, i32 0
  %RBX.i1091 = bitcast %union.anon* %1045 to i64*
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1047 = getelementptr inbounds %struct.GPR, %struct.GPR* %1046, i32 0, i32 15
  %1048 = getelementptr inbounds %struct.Reg, %struct.Reg* %1047, i32 0, i32 0
  %RBP.i1092 = bitcast %union.anon* %1048 to i64*
  %1049 = load i64, i64* %RBP.i1092
  %1050 = sub i64 %1049, 680
  %1051 = load i64, i64* %PC.i1090
  %1052 = add i64 %1051, 7
  store i64 %1052, i64* %PC.i1090
  %1053 = inttoptr i64 %1050 to i64*
  %1054 = load i64, i64* %1053
  store i64 %1054, i64* %RBX.i1091, align 8
  store %struct.Memory* %loadMem_462db6, %struct.Memory** %MEMORY
  %loadMem_462dbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1056 = getelementptr inbounds %struct.GPR, %struct.GPR* %1055, i32 0, i32 33
  %1057 = getelementptr inbounds %struct.Reg, %struct.Reg* %1056, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %1057 to i64*
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1059 = getelementptr inbounds %struct.GPR, %struct.GPR* %1058, i32 0, i32 3
  %1060 = getelementptr inbounds %struct.Reg, %struct.Reg* %1059, i32 0, i32 0
  %RBX.i1088 = bitcast %union.anon* %1060 to i64*
  %1061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1062 = getelementptr inbounds %struct.GPR, %struct.GPR* %1061, i32 0, i32 13
  %1063 = getelementptr inbounds %struct.Reg, %struct.Reg* %1062, i32 0, i32 0
  %RSP.i1089 = bitcast %union.anon* %1063 to i64*
  %1064 = load i64, i64* %RSP.i1089
  %1065 = add i64 %1064, 24
  %1066 = load i64, i64* %RBX.i1088
  %1067 = load i64, i64* %PC.i1087
  %1068 = add i64 %1067, 5
  store i64 %1068, i64* %PC.i1087
  %1069 = inttoptr i64 %1065 to i64*
  store i64 %1066, i64* %1069
  store %struct.Memory* %loadMem_462dbd, %struct.Memory** %MEMORY
  %loadMem_462dc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1071 = getelementptr inbounds %struct.GPR, %struct.GPR* %1070, i32 0, i32 33
  %1072 = getelementptr inbounds %struct.Reg, %struct.Reg* %1071, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %1072 to i64*
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1074 = getelementptr inbounds %struct.GPR, %struct.GPR* %1073, i32 0, i32 13
  %1075 = getelementptr inbounds %struct.Reg, %struct.Reg* %1074, i32 0, i32 0
  %RSP.i1085 = bitcast %union.anon* %1075 to i64*
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1077 = getelementptr inbounds %struct.GPR, %struct.GPR* %1076, i32 0, i32 21
  %1078 = getelementptr inbounds %struct.Reg, %struct.Reg* %1077, i32 0, i32 0
  %R10.i1086 = bitcast %union.anon* %1078 to i64*
  %1079 = load i64, i64* %RSP.i1085
  %1080 = add i64 %1079, 32
  %1081 = load i64, i64* %R10.i1086
  %1082 = load i64, i64* %PC.i1084
  %1083 = add i64 %1082, 5
  store i64 %1083, i64* %PC.i1084
  %1084 = inttoptr i64 %1080 to i64*
  store i64 %1081, i64* %1084
  store %struct.Memory* %loadMem_462dc2, %struct.Memory** %MEMORY
  %loadMem1_462dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1086 = getelementptr inbounds %struct.GPR, %struct.GPR* %1085, i32 0, i32 33
  %1087 = getelementptr inbounds %struct.Reg, %struct.Reg* %1086, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %1087 to i64*
  %1088 = load i64, i64* %PC.i1083
  %1089 = add i64 %1088, -314807
  %1090 = load i64, i64* %PC.i1083
  %1091 = add i64 %1090, 5
  %1092 = load i64, i64* %PC.i1083
  %1093 = add i64 %1092, 5
  store i64 %1093, i64* %PC.i1083
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1095 = load i64, i64* %1094, align 8
  %1096 = add i64 %1095, -8
  %1097 = inttoptr i64 %1096 to i64*
  store i64 %1091, i64* %1097
  store i64 %1096, i64* %1094, align 8
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1089, i64* %1098, align 8
  store %struct.Memory* %loadMem1_462dc7, %struct.Memory** %MEMORY
  %loadMem2_462dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_462dc7 = load i64, i64* %3
  %call2_462dc7 = call %struct.Memory* @sub_416010.incremental_order_moves(%struct.State* %0, i64 %loadPC_462dc7, %struct.Memory* %loadMem2_462dc7)
  store %struct.Memory* %call2_462dc7, %struct.Memory** %MEMORY
  %loadMem_462dcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1100 = getelementptr inbounds %struct.GPR, %struct.GPR* %1099, i32 0, i32 33
  %1101 = getelementptr inbounds %struct.Reg, %struct.Reg* %1100, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %1101 to i64*
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1103 = getelementptr inbounds %struct.GPR, %struct.GPR* %1102, i32 0, i32 7
  %1104 = getelementptr inbounds %struct.Reg, %struct.Reg* %1103, i32 0, i32 0
  %RDX.i1081 = bitcast %union.anon* %1104 to i64*
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1106 = getelementptr inbounds %struct.GPR, %struct.GPR* %1105, i32 0, i32 15
  %1107 = getelementptr inbounds %struct.Reg, %struct.Reg* %1106, i32 0, i32 0
  %RBP.i1082 = bitcast %union.anon* %1107 to i64*
  %1108 = load i64, i64* %RBP.i1082
  %1109 = sub i64 %1108, 52
  %1110 = load i64, i64* %PC.i1080
  %1111 = add i64 %1110, 3
  store i64 %1111, i64* %PC.i1080
  %1112 = inttoptr i64 %1109 to i32*
  %1113 = load i32, i32* %1112
  %1114 = zext i32 %1113 to i64
  store i64 %1114, i64* %RDX.i1081, align 8
  store %struct.Memory* %loadMem_462dcc, %struct.Memory** %MEMORY
  %loadMem_462dcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1116 = getelementptr inbounds %struct.GPR, %struct.GPR* %1115, i32 0, i32 33
  %1117 = getelementptr inbounds %struct.Reg, %struct.Reg* %1116, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %1117 to i64*
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1119 = getelementptr inbounds %struct.GPR, %struct.GPR* %1118, i32 0, i32 7
  %1120 = getelementptr inbounds %struct.Reg, %struct.Reg* %1119, i32 0, i32 0
  %EDX.i1078 = bitcast %union.anon* %1120 to i32*
  %1121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1122 = getelementptr inbounds %struct.GPR, %struct.GPR* %1121, i32 0, i32 15
  %1123 = getelementptr inbounds %struct.Reg, %struct.Reg* %1122, i32 0, i32 0
  %RBP.i1079 = bitcast %union.anon* %1123 to i64*
  %1124 = load i32, i32* %EDX.i1078
  %1125 = zext i32 %1124 to i64
  %1126 = load i64, i64* %RBP.i1079
  %1127 = sub i64 %1126, 72
  %1128 = load i64, i64* %PC.i1077
  %1129 = add i64 %1128, 3
  store i64 %1129, i64* %PC.i1077
  %1130 = inttoptr i64 %1127 to i32*
  %1131 = load i32, i32* %1130
  %1132 = sub i32 %1124, %1131
  %1133 = icmp ult i32 %1124, %1131
  %1134 = zext i1 %1133 to i8
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1134, i8* %1135, align 1
  %1136 = and i32 %1132, 255
  %1137 = call i32 @llvm.ctpop.i32(i32 %1136)
  %1138 = trunc i32 %1137 to i8
  %1139 = and i8 %1138, 1
  %1140 = xor i8 %1139, 1
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1140, i8* %1141, align 1
  %1142 = xor i32 %1131, %1124
  %1143 = xor i32 %1142, %1132
  %1144 = lshr i32 %1143, 4
  %1145 = trunc i32 %1144 to i8
  %1146 = and i8 %1145, 1
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1146, i8* %1147, align 1
  %1148 = icmp eq i32 %1132, 0
  %1149 = zext i1 %1148 to i8
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1149, i8* %1150, align 1
  %1151 = lshr i32 %1132, 31
  %1152 = trunc i32 %1151 to i8
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1152, i8* %1153, align 1
  %1154 = lshr i32 %1124, 31
  %1155 = lshr i32 %1131, 31
  %1156 = xor i32 %1155, %1154
  %1157 = xor i32 %1151, %1154
  %1158 = add i32 %1157, %1156
  %1159 = icmp eq i32 %1158, 2
  %1160 = zext i1 %1159 to i8
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1160, i8* %1161, align 1
  store %struct.Memory* %loadMem_462dcf, %struct.Memory** %MEMORY
  %loadMem_462dd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1163 = getelementptr inbounds %struct.GPR, %struct.GPR* %1162, i32 0, i32 33
  %1164 = getelementptr inbounds %struct.Reg, %struct.Reg* %1163, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %1164 to i64*
  %1165 = load i64, i64* %PC.i1076
  %1166 = add i64 %1165, 670
  %1167 = load i64, i64* %PC.i1076
  %1168 = add i64 %1167, 6
  %1169 = load i64, i64* %PC.i1076
  %1170 = add i64 %1169, 6
  store i64 %1170, i64* %PC.i1076
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1172 = load i8, i8* %1171, align 1
  %1173 = icmp eq i8 %1172, 0
  %1174 = zext i1 %1173 to i8
  store i8 %1174, i8* %BRANCH_TAKEN, align 1
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1176 = select i1 %1173, i64 %1166, i64 %1168
  store i64 %1176, i64* %1175, align 8
  store %struct.Memory* %loadMem_462dd2, %struct.Memory** %MEMORY
  %loadBr_462dd2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462dd2 = icmp eq i8 %loadBr_462dd2, 1
  br i1 %cmpBr_462dd2, label %block_.L_463070, label %block_462dd8

block_462dd8:                                     ; preds = %block_462d02
  %loadMem_462dd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1178 = getelementptr inbounds %struct.GPR, %struct.GPR* %1177, i32 0, i32 33
  %1179 = getelementptr inbounds %struct.Reg, %struct.Reg* %1178, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %1179 to i64*
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1181 = getelementptr inbounds %struct.GPR, %struct.GPR* %1180, i32 0, i32 7
  %1182 = getelementptr inbounds %struct.Reg, %struct.Reg* %1181, i32 0, i32 0
  %RDX.i1075 = bitcast %union.anon* %1182 to i64*
  %1183 = load i64, i64* %PC.i1074
  %1184 = add i64 %1183, 5
  store i64 %1184, i64* %PC.i1074
  store i64 10, i64* %RDX.i1075, align 8
  store %struct.Memory* %loadMem_462dd8, %struct.Memory** %MEMORY
  %loadMem_462ddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1186 = getelementptr inbounds %struct.GPR, %struct.GPR* %1185, i32 0, i32 33
  %1187 = getelementptr inbounds %struct.Reg, %struct.Reg* %1186, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %1187 to i64*
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1189 = getelementptr inbounds %struct.GPR, %struct.GPR* %1188, i32 0, i32 1
  %1190 = getelementptr inbounds %struct.Reg, %struct.Reg* %1189, i32 0, i32 0
  %EAX.i1072 = bitcast %union.anon* %1190 to i32*
  %1191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1192 = getelementptr inbounds %struct.GPR, %struct.GPR* %1191, i32 0, i32 1
  %1193 = getelementptr inbounds %struct.Reg, %struct.Reg* %1192, i32 0, i32 0
  %RAX.i1073 = bitcast %union.anon* %1193 to i64*
  %1194 = load i64, i64* %RAX.i1073
  %1195 = load i32, i32* %EAX.i1072
  %1196 = zext i32 %1195 to i64
  %1197 = load i64, i64* %PC.i1071
  %1198 = add i64 %1197, 2
  store i64 %1198, i64* %PC.i1071
  %1199 = xor i64 %1196, %1194
  %1200 = trunc i64 %1199 to i32
  %1201 = and i64 %1199, 4294967295
  store i64 %1201, i64* %RAX.i1073, align 8
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1202, align 1
  %1203 = and i32 %1200, 255
  %1204 = call i32 @llvm.ctpop.i32(i32 %1203)
  %1205 = trunc i32 %1204 to i8
  %1206 = and i8 %1205, 1
  %1207 = xor i8 %1206, 1
  %1208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1207, i8* %1208, align 1
  %1209 = icmp eq i32 %1200, 0
  %1210 = zext i1 %1209 to i8
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1210, i8* %1211, align 1
  %1212 = lshr i32 %1200, 31
  %1213 = trunc i32 %1212 to i8
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1213, i8* %1214, align 1
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1215, align 1
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1216, align 1
  store %struct.Memory* %loadMem_462ddd, %struct.Memory** %MEMORY
  %loadMem_462ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1218 = getelementptr inbounds %struct.GPR, %struct.GPR* %1217, i32 0, i32 33
  %1219 = getelementptr inbounds %struct.Reg, %struct.Reg* %1218, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %1219 to i64*
  %1220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1221 = getelementptr inbounds %struct.GPR, %struct.GPR* %1220, i32 0, i32 1
  %1222 = getelementptr inbounds %struct.Reg, %struct.Reg* %1221, i32 0, i32 0
  %EAX.i1069 = bitcast %union.anon* %1222 to i32*
  %1223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1224 = getelementptr inbounds %struct.GPR, %struct.GPR* %1223, i32 0, i32 5
  %1225 = getelementptr inbounds %struct.Reg, %struct.Reg* %1224, i32 0, i32 0
  %RCX.i1070 = bitcast %union.anon* %1225 to i64*
  %1226 = load i32, i32* %EAX.i1069
  %1227 = zext i32 %1226 to i64
  %1228 = load i64, i64* %PC.i1068
  %1229 = add i64 %1228, 2
  store i64 %1229, i64* %PC.i1068
  %1230 = and i64 %1227, 4294967295
  store i64 %1230, i64* %RCX.i1070, align 8
  store %struct.Memory* %loadMem_462ddf, %struct.Memory** %MEMORY
  %loadMem_462de1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1232 = getelementptr inbounds %struct.GPR, %struct.GPR* %1231, i32 0, i32 33
  %1233 = getelementptr inbounds %struct.Reg, %struct.Reg* %1232, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %1233 to i64*
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1235 = getelementptr inbounds %struct.GPR, %struct.GPR* %1234, i32 0, i32 11
  %1236 = getelementptr inbounds %struct.Reg, %struct.Reg* %1235, i32 0, i32 0
  %RDI.i1066 = bitcast %union.anon* %1236 to i64*
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1238 = getelementptr inbounds %struct.GPR, %struct.GPR* %1237, i32 0, i32 15
  %1239 = getelementptr inbounds %struct.Reg, %struct.Reg* %1238, i32 0, i32 0
  %RBP.i1067 = bitcast %union.anon* %1239 to i64*
  %1240 = load i64, i64* %RBP.i1067
  %1241 = sub i64 %1240, 100
  %1242 = load i64, i64* %PC.i1065
  %1243 = add i64 %1242, 3
  store i64 %1243, i64* %PC.i1065
  %1244 = inttoptr i64 %1241 to i32*
  %1245 = load i32, i32* %1244
  %1246 = zext i32 %1245 to i64
  store i64 %1246, i64* %RDI.i1066, align 8
  store %struct.Memory* %loadMem_462de1, %struct.Memory** %MEMORY
  %loadMem_462de4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1248 = getelementptr inbounds %struct.GPR, %struct.GPR* %1247, i32 0, i32 33
  %1249 = getelementptr inbounds %struct.Reg, %struct.Reg* %1248, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %1249 to i64*
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1251 = getelementptr inbounds %struct.GPR, %struct.GPR* %1250, i32 0, i32 9
  %1252 = getelementptr inbounds %struct.Reg, %struct.Reg* %1251, i32 0, i32 0
  %RSI.i1063 = bitcast %union.anon* %1252 to i64*
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1254 = getelementptr inbounds %struct.GPR, %struct.GPR* %1253, i32 0, i32 15
  %1255 = getelementptr inbounds %struct.Reg, %struct.Reg* %1254, i32 0, i32 0
  %RBP.i1064 = bitcast %union.anon* %1255 to i64*
  %1256 = load i64, i64* %RBP.i1064
  %1257 = sub i64 %1256, 52
  %1258 = load i64, i64* %PC.i1062
  %1259 = add i64 %1258, 3
  store i64 %1259, i64* %PC.i1062
  %1260 = inttoptr i64 %1257 to i32*
  %1261 = load i32, i32* %1260
  %1262 = zext i32 %1261 to i64
  store i64 %1262, i64* %RSI.i1063, align 8
  store %struct.Memory* %loadMem_462de4, %struct.Memory** %MEMORY
  %loadMem1_462de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1264 = getelementptr inbounds %struct.GPR, %struct.GPR* %1263, i32 0, i32 33
  %1265 = getelementptr inbounds %struct.Reg, %struct.Reg* %1264, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %1265 to i64*
  %1266 = load i64, i64* %PC.i1061
  %1267 = add i64 %1266, -333879
  %1268 = load i64, i64* %PC.i1061
  %1269 = add i64 %1268, 5
  %1270 = load i64, i64* %PC.i1061
  %1271 = add i64 %1270, 5
  store i64 %1271, i64* %PC.i1061
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1273 = load i64, i64* %1272, align 8
  %1274 = add i64 %1273, -8
  %1275 = inttoptr i64 %1274 to i64*
  store i64 %1269, i64* %1275
  store i64 %1274, i64* %1272, align 8
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1267, i64* %1276, align 8
  store %struct.Memory* %loadMem1_462de7, %struct.Memory** %MEMORY
  %loadMem2_462de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_462de7 = load i64, i64* %3
  %call2_462de7 = call %struct.Memory* @sub_4115b0.approxlib(%struct.State* %0, i64 %loadPC_462de7, %struct.Memory* %loadMem2_462de7)
  store %struct.Memory* %call2_462de7, %struct.Memory** %MEMORY
  %loadMem_462dec = load %struct.Memory*, %struct.Memory** %MEMORY
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 33
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %1279 to i64*
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1281 = getelementptr inbounds %struct.GPR, %struct.GPR* %1280, i32 0, i32 1
  %1282 = getelementptr inbounds %struct.Reg, %struct.Reg* %1281, i32 0, i32 0
  %EAX.i1059 = bitcast %union.anon* %1282 to i32*
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1284 = getelementptr inbounds %struct.GPR, %struct.GPR* %1283, i32 0, i32 15
  %1285 = getelementptr inbounds %struct.Reg, %struct.Reg* %1284, i32 0, i32 0
  %RBP.i1060 = bitcast %union.anon* %1285 to i64*
  %1286 = load i64, i64* %RBP.i1060
  %1287 = sub i64 %1286, 136
  %1288 = load i32, i32* %EAX.i1059
  %1289 = zext i32 %1288 to i64
  %1290 = load i64, i64* %PC.i1058
  %1291 = add i64 %1290, 6
  store i64 %1291, i64* %PC.i1058
  %1292 = inttoptr i64 %1287 to i32*
  store i32 %1288, i32* %1292
  store %struct.Memory* %loadMem_462dec, %struct.Memory** %MEMORY
  %loadMem_462df2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1294 = getelementptr inbounds %struct.GPR, %struct.GPR* %1293, i32 0, i32 33
  %1295 = getelementptr inbounds %struct.Reg, %struct.Reg* %1294, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %1295 to i64*
  %1296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1297 = getelementptr inbounds %struct.GPR, %struct.GPR* %1296, i32 0, i32 15
  %1298 = getelementptr inbounds %struct.Reg, %struct.Reg* %1297, i32 0, i32 0
  %RBP.i1057 = bitcast %union.anon* %1298 to i64*
  %1299 = load i64, i64* %RBP.i1057
  %1300 = sub i64 %1299, 108
  %1301 = load i64, i64* %PC.i1056
  %1302 = add i64 %1301, 4
  store i64 %1302, i64* %PC.i1056
  %1303 = inttoptr i64 %1300 to i32*
  %1304 = load i32, i32* %1303
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1305, align 1
  %1306 = and i32 %1304, 255
  %1307 = call i32 @llvm.ctpop.i32(i32 %1306)
  %1308 = trunc i32 %1307 to i8
  %1309 = and i8 %1308, 1
  %1310 = xor i8 %1309, 1
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1310, i8* %1311, align 1
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1312, align 1
  %1313 = icmp eq i32 %1304, 0
  %1314 = zext i1 %1313 to i8
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1314, i8* %1315, align 1
  %1316 = lshr i32 %1304, 31
  %1317 = trunc i32 %1316 to i8
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1317, i8* %1318, align 1
  %1319 = lshr i32 %1304, 31
  %1320 = xor i32 %1316, %1319
  %1321 = add i32 %1320, %1319
  %1322 = icmp eq i32 %1321, 2
  %1323 = zext i1 %1322 to i8
  %1324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1323, i8* %1324, align 1
  store %struct.Memory* %loadMem_462df2, %struct.Memory** %MEMORY
  %loadMem_462df6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1326 = getelementptr inbounds %struct.GPR, %struct.GPR* %1325, i32 0, i32 33
  %1327 = getelementptr inbounds %struct.Reg, %struct.Reg* %1326, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %1327 to i64*
  %1328 = load i64, i64* %PC.i1055
  %1329 = add i64 %1328, 138
  %1330 = load i64, i64* %PC.i1055
  %1331 = add i64 %1330, 6
  %1332 = load i64, i64* %PC.i1055
  %1333 = add i64 %1332, 6
  store i64 %1333, i64* %PC.i1055
  %1334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1335 = load i8, i8* %1334, align 1
  %1336 = icmp ne i8 %1335, 0
  %1337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1338 = load i8, i8* %1337, align 1
  %1339 = icmp ne i8 %1338, 0
  %1340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1341 = load i8, i8* %1340, align 1
  %1342 = icmp ne i8 %1341, 0
  %1343 = xor i1 %1339, %1342
  %1344 = or i1 %1336, %1343
  %1345 = zext i1 %1344 to i8
  store i8 %1345, i8* %BRANCH_TAKEN, align 1
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1347 = select i1 %1344, i64 %1329, i64 %1331
  store i64 %1347, i64* %1346, align 8
  store %struct.Memory* %loadMem_462df6, %struct.Memory** %MEMORY
  %loadBr_462df6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462df6 = icmp eq i8 %loadBr_462df6, 1
  br i1 %cmpBr_462df6, label %block_.L_462e80, label %block_462dfc

block_462dfc:                                     ; preds = %block_462dd8
  %loadMem_462dfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1349 = getelementptr inbounds %struct.GPR, %struct.GPR* %1348, i32 0, i32 33
  %1350 = getelementptr inbounds %struct.Reg, %struct.Reg* %1349, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %1350 to i64*
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1352 = getelementptr inbounds %struct.GPR, %struct.GPR* %1351, i32 0, i32 15
  %1353 = getelementptr inbounds %struct.Reg, %struct.Reg* %1352, i32 0, i32 0
  %RBP.i1054 = bitcast %union.anon* %1353 to i64*
  %1354 = load i64, i64* %RBP.i1054
  %1355 = sub i64 %1354, 136
  %1356 = load i64, i64* %PC.i1053
  %1357 = add i64 %1356, 7
  store i64 %1357, i64* %PC.i1053
  %1358 = inttoptr i64 %1355 to i32*
  %1359 = load i32, i32* %1358
  %1360 = sub i32 %1359, 5
  %1361 = icmp ult i32 %1359, 5
  %1362 = zext i1 %1361 to i8
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1362, i8* %1363, align 1
  %1364 = and i32 %1360, 255
  %1365 = call i32 @llvm.ctpop.i32(i32 %1364)
  %1366 = trunc i32 %1365 to i8
  %1367 = and i8 %1366, 1
  %1368 = xor i8 %1367, 1
  %1369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1368, i8* %1369, align 1
  %1370 = xor i32 %1359, 5
  %1371 = xor i32 %1370, %1360
  %1372 = lshr i32 %1371, 4
  %1373 = trunc i32 %1372 to i8
  %1374 = and i8 %1373, 1
  %1375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1374, i8* %1375, align 1
  %1376 = icmp eq i32 %1360, 0
  %1377 = zext i1 %1376 to i8
  %1378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1377, i8* %1378, align 1
  %1379 = lshr i32 %1360, 31
  %1380 = trunc i32 %1379 to i8
  %1381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1380, i8* %1381, align 1
  %1382 = lshr i32 %1359, 31
  %1383 = xor i32 %1379, %1382
  %1384 = add i32 %1383, %1382
  %1385 = icmp eq i32 %1384, 2
  %1386 = zext i1 %1385 to i8
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1386, i8* %1387, align 1
  store %struct.Memory* %loadMem_462dfc, %struct.Memory** %MEMORY
  %loadMem_462e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1389 = getelementptr inbounds %struct.GPR, %struct.GPR* %1388, i32 0, i32 33
  %1390 = getelementptr inbounds %struct.Reg, %struct.Reg* %1389, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %1390 to i64*
  %1391 = load i64, i64* %PC.i1052
  %1392 = add i64 %1391, 39
  %1393 = load i64, i64* %PC.i1052
  %1394 = add i64 %1393, 6
  %1395 = load i64, i64* %PC.i1052
  %1396 = add i64 %1395, 6
  store i64 %1396, i64* %PC.i1052
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1398 = load i8, i8* %1397, align 1
  %1399 = icmp eq i8 %1398, 0
  %1400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1401 = load i8, i8* %1400, align 1
  %1402 = icmp ne i8 %1401, 0
  %1403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1404 = load i8, i8* %1403, align 1
  %1405 = icmp ne i8 %1404, 0
  %1406 = xor i1 %1402, %1405
  %1407 = xor i1 %1406, true
  %1408 = and i1 %1399, %1407
  %1409 = zext i1 %1408 to i8
  store i8 %1409, i8* %BRANCH_TAKEN, align 1
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1411 = select i1 %1408, i64 %1392, i64 %1394
  store i64 %1411, i64* %1410, align 8
  store %struct.Memory* %loadMem_462e03, %struct.Memory** %MEMORY
  %loadBr_462e03 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462e03 = icmp eq i8 %loadBr_462e03, 1
  br i1 %cmpBr_462e03, label %block_.L_462e2a, label %block_462e09

block_462e09:                                     ; preds = %block_462dfc
  %loadMem_462e09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1413 = getelementptr inbounds %struct.GPR, %struct.GPR* %1412, i32 0, i32 33
  %1414 = getelementptr inbounds %struct.Reg, %struct.Reg* %1413, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %1414 to i64*
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1416 = getelementptr inbounds %struct.GPR, %struct.GPR* %1415, i32 0, i32 15
  %1417 = getelementptr inbounds %struct.Reg, %struct.Reg* %1416, i32 0, i32 0
  %RBP.i1051 = bitcast %union.anon* %1417 to i64*
  %1418 = load i64, i64* %RBP.i1051
  %1419 = sub i64 %1418, 136
  %1420 = load i64, i64* %PC.i1050
  %1421 = add i64 %1420, 7
  store i64 %1421, i64* %PC.i1050
  %1422 = inttoptr i64 %1419 to i32*
  %1423 = load i32, i32* %1422
  %1424 = sub i32 %1423, 4
  %1425 = icmp ult i32 %1423, 4
  %1426 = zext i1 %1425 to i8
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1426, i8* %1427, align 1
  %1428 = and i32 %1424, 255
  %1429 = call i32 @llvm.ctpop.i32(i32 %1428)
  %1430 = trunc i32 %1429 to i8
  %1431 = and i8 %1430, 1
  %1432 = xor i8 %1431, 1
  %1433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1432, i8* %1433, align 1
  %1434 = xor i32 %1423, 4
  %1435 = xor i32 %1434, %1424
  %1436 = lshr i32 %1435, 4
  %1437 = trunc i32 %1436 to i8
  %1438 = and i8 %1437, 1
  %1439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1438, i8* %1439, align 1
  %1440 = icmp eq i32 %1424, 0
  %1441 = zext i1 %1440 to i8
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1441, i8* %1442, align 1
  %1443 = lshr i32 %1424, 31
  %1444 = trunc i32 %1443 to i8
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1444, i8* %1445, align 1
  %1446 = lshr i32 %1423, 31
  %1447 = xor i32 %1443, %1446
  %1448 = add i32 %1447, %1446
  %1449 = icmp eq i32 %1448, 2
  %1450 = zext i1 %1449 to i8
  %1451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1450, i8* %1451, align 1
  store %struct.Memory* %loadMem_462e09, %struct.Memory** %MEMORY
  %loadMem_462e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1453 = getelementptr inbounds %struct.GPR, %struct.GPR* %1452, i32 0, i32 33
  %1454 = getelementptr inbounds %struct.Reg, %struct.Reg* %1453, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %1454 to i64*
  %1455 = load i64, i64* %PC.i1049
  %1456 = add i64 %1455, 71
  %1457 = load i64, i64* %PC.i1049
  %1458 = add i64 %1457, 6
  %1459 = load i64, i64* %PC.i1049
  %1460 = add i64 %1459, 6
  store i64 %1460, i64* %PC.i1049
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1462 = load i8, i8* %1461, align 1
  %1463 = icmp eq i8 %1462, 0
  %1464 = zext i1 %1463 to i8
  store i8 %1464, i8* %BRANCH_TAKEN, align 1
  %1465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1466 = select i1 %1463, i64 %1456, i64 %1458
  store i64 %1466, i64* %1465, align 8
  store %struct.Memory* %loadMem_462e10, %struct.Memory** %MEMORY
  %loadBr_462e10 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462e10 = icmp eq i8 %loadBr_462e10, 1
  br i1 %cmpBr_462e10, label %block_.L_462e57, label %block_462e16

block_462e16:                                     ; preds = %block_462e09
  %loadMem_462e16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1468 = getelementptr inbounds %struct.GPR, %struct.GPR* %1467, i32 0, i32 33
  %1469 = getelementptr inbounds %struct.Reg, %struct.Reg* %1468, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %1469 to i64*
  %1470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1471 = getelementptr inbounds %struct.GPR, %struct.GPR* %1470, i32 0, i32 1
  %1472 = getelementptr inbounds %struct.Reg, %struct.Reg* %1471, i32 0, i32 0
  %RAX.i1048 = bitcast %union.anon* %1472 to i64*
  %1473 = load i64, i64* %PC.i1047
  %1474 = add i64 %1473, 7
  store i64 %1474, i64* %PC.i1047
  %1475 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %1476 = zext i32 %1475 to i64
  store i64 %1476, i64* %RAX.i1048, align 8
  store %struct.Memory* %loadMem_462e16, %struct.Memory** %MEMORY
  %loadMem_462e1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1478 = getelementptr inbounds %struct.GPR, %struct.GPR* %1477, i32 0, i32 33
  %1479 = getelementptr inbounds %struct.Reg, %struct.Reg* %1478, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %1479 to i64*
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1481 = getelementptr inbounds %struct.GPR, %struct.GPR* %1480, i32 0, i32 1
  %1482 = getelementptr inbounds %struct.Reg, %struct.Reg* %1481, i32 0, i32 0
  %EAX.i1046 = bitcast %union.anon* %1482 to i32*
  %1483 = load i32, i32* %EAX.i1046
  %1484 = zext i32 %1483 to i64
  %1485 = load i64, i64* %PC.i1045
  %1486 = add i64 %1485, 7
  store i64 %1486, i64* %PC.i1045
  %1487 = load i32, i32* bitcast (%G_0xb54ce0_type* @G_0xb54ce0 to i32*)
  %1488 = sub i32 %1483, %1487
  %1489 = icmp ult i32 %1483, %1487
  %1490 = zext i1 %1489 to i8
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1490, i8* %1491, align 1
  %1492 = and i32 %1488, 255
  %1493 = call i32 @llvm.ctpop.i32(i32 %1492)
  %1494 = trunc i32 %1493 to i8
  %1495 = and i8 %1494, 1
  %1496 = xor i8 %1495, 1
  %1497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1496, i8* %1497, align 1
  %1498 = xor i32 %1487, %1483
  %1499 = xor i32 %1498, %1488
  %1500 = lshr i32 %1499, 4
  %1501 = trunc i32 %1500 to i8
  %1502 = and i8 %1501, 1
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1502, i8* %1503, align 1
  %1504 = icmp eq i32 %1488, 0
  %1505 = zext i1 %1504 to i8
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1505, i8* %1506, align 1
  %1507 = lshr i32 %1488, 31
  %1508 = trunc i32 %1507 to i8
  %1509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1508, i8* %1509, align 1
  %1510 = lshr i32 %1483, 31
  %1511 = lshr i32 %1487, 31
  %1512 = xor i32 %1511, %1510
  %1513 = xor i32 %1507, %1510
  %1514 = add i32 %1513, %1512
  %1515 = icmp eq i32 %1514, 2
  %1516 = zext i1 %1515 to i8
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1516, i8* %1517, align 1
  store %struct.Memory* %loadMem_462e1d, %struct.Memory** %MEMORY
  %loadMem_462e24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1519 = getelementptr inbounds %struct.GPR, %struct.GPR* %1518, i32 0, i32 33
  %1520 = getelementptr inbounds %struct.Reg, %struct.Reg* %1519, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %1520 to i64*
  %1521 = load i64, i64* %PC.i1044
  %1522 = add i64 %1521, 51
  %1523 = load i64, i64* %PC.i1044
  %1524 = add i64 %1523, 6
  %1525 = load i64, i64* %PC.i1044
  %1526 = add i64 %1525, 6
  store i64 %1526, i64* %PC.i1044
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1528 = load i8, i8* %1527, align 1
  %1529 = icmp ne i8 %1528, 0
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1531 = load i8, i8* %1530, align 1
  %1532 = icmp ne i8 %1531, 0
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1534 = load i8, i8* %1533, align 1
  %1535 = icmp ne i8 %1534, 0
  %1536 = xor i1 %1532, %1535
  %1537 = or i1 %1529, %1536
  %1538 = zext i1 %1537 to i8
  store i8 %1538, i8* %BRANCH_TAKEN, align 1
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1540 = select i1 %1537, i64 %1522, i64 %1524
  store i64 %1540, i64* %1539, align 8
  store %struct.Memory* %loadMem_462e24, %struct.Memory** %MEMORY
  %loadBr_462e24 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462e24 = icmp eq i8 %loadBr_462e24, 1
  br i1 %cmpBr_462e24, label %block_.L_462e57, label %block_.L_462e2a

block_.L_462e2a:                                  ; preds = %block_462e16, %block_462dfc
  %loadMem_462e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1542 = getelementptr inbounds %struct.GPR, %struct.GPR* %1541, i32 0, i32 33
  %1543 = getelementptr inbounds %struct.Reg, %struct.Reg* %1542, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %1543 to i64*
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1545 = getelementptr inbounds %struct.GPR, %struct.GPR* %1544, i32 0, i32 1
  %1546 = getelementptr inbounds %struct.Reg, %struct.Reg* %1545, i32 0, i32 0
  %RAX.i1043 = bitcast %union.anon* %1546 to i64*
  %1547 = load i64, i64* %PC.i1042
  %1548 = add i64 %1547, 7
  store i64 %1548, i64* %PC.i1042
  %1549 = load i32, i32* bitcast (%G_0x7afc74_type* @G_0x7afc74 to i32*)
  %1550 = zext i32 %1549 to i64
  store i64 %1550, i64* %RAX.i1043, align 8
  store %struct.Memory* %loadMem_462e2a, %struct.Memory** %MEMORY
  %loadMem_462e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1552 = getelementptr inbounds %struct.GPR, %struct.GPR* %1551, i32 0, i32 33
  %1553 = getelementptr inbounds %struct.Reg, %struct.Reg* %1552, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %1553 to i64*
  %1554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1555 = getelementptr inbounds %struct.GPR, %struct.GPR* %1554, i32 0, i32 5
  %1556 = getelementptr inbounds %struct.Reg, %struct.Reg* %1555, i32 0, i32 0
  %RCX.i1040 = bitcast %union.anon* %1556 to i64*
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1558 = getelementptr inbounds %struct.GPR, %struct.GPR* %1557, i32 0, i32 15
  %1559 = getelementptr inbounds %struct.Reg, %struct.Reg* %1558, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %1559 to i64*
  %1560 = load i64, i64* %RBP.i1041
  %1561 = sub i64 %1560, 136
  %1562 = load i64, i64* %PC.i1039
  %1563 = add i64 %1562, 6
  store i64 %1563, i64* %PC.i1039
  %1564 = inttoptr i64 %1561 to i32*
  %1565 = load i32, i32* %1564
  %1566 = zext i32 %1565 to i64
  store i64 %1566, i64* %RCX.i1040, align 8
  store %struct.Memory* %loadMem_462e31, %struct.Memory** %MEMORY
  %loadMem_462e37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1568 = getelementptr inbounds %struct.GPR, %struct.GPR* %1567, i32 0, i32 33
  %1569 = getelementptr inbounds %struct.Reg, %struct.Reg* %1568, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %1569 to i64*
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1571 = getelementptr inbounds %struct.GPR, %struct.GPR* %1570, i32 0, i32 5
  %1572 = getelementptr inbounds %struct.Reg, %struct.Reg* %1571, i32 0, i32 0
  %RCX.i1038 = bitcast %union.anon* %1572 to i64*
  %1573 = load i64, i64* %RCX.i1038
  %1574 = load i64, i64* %PC.i1037
  %1575 = add i64 %1574, 3
  store i64 %1575, i64* %PC.i1037
  %1576 = trunc i64 %1573 to i32
  %1577 = sub i32 %1576, 4
  %1578 = zext i32 %1577 to i64
  store i64 %1578, i64* %RCX.i1038, align 8
  %1579 = icmp ult i32 %1576, 4
  %1580 = zext i1 %1579 to i8
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1580, i8* %1581, align 1
  %1582 = and i32 %1577, 255
  %1583 = call i32 @llvm.ctpop.i32(i32 %1582)
  %1584 = trunc i32 %1583 to i8
  %1585 = and i8 %1584, 1
  %1586 = xor i8 %1585, 1
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1586, i8* %1587, align 1
  %1588 = xor i64 4, %1573
  %1589 = trunc i64 %1588 to i32
  %1590 = xor i32 %1589, %1577
  %1591 = lshr i32 %1590, 4
  %1592 = trunc i32 %1591 to i8
  %1593 = and i8 %1592, 1
  %1594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1593, i8* %1594, align 1
  %1595 = icmp eq i32 %1577, 0
  %1596 = zext i1 %1595 to i8
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1596, i8* %1597, align 1
  %1598 = lshr i32 %1577, 31
  %1599 = trunc i32 %1598 to i8
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1599, i8* %1600, align 1
  %1601 = lshr i32 %1576, 31
  %1602 = xor i32 %1598, %1601
  %1603 = add i32 %1602, %1601
  %1604 = icmp eq i32 %1603, 2
  %1605 = zext i1 %1604 to i8
  %1606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1605, i8* %1606, align 1
  store %struct.Memory* %loadMem_462e37, %struct.Memory** %MEMORY
  %loadMem_462e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1608 = getelementptr inbounds %struct.GPR, %struct.GPR* %1607, i32 0, i32 33
  %1609 = getelementptr inbounds %struct.Reg, %struct.Reg* %1608, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %1609 to i64*
  %1610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1611 = getelementptr inbounds %struct.GPR, %struct.GPR* %1610, i32 0, i32 5
  %1612 = getelementptr inbounds %struct.Reg, %struct.Reg* %1611, i32 0, i32 0
  %ECX.i1035 = bitcast %union.anon* %1612 to i32*
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1614 = getelementptr inbounds %struct.GPR, %struct.GPR* %1613, i32 0, i32 1
  %1615 = getelementptr inbounds %struct.Reg, %struct.Reg* %1614, i32 0, i32 0
  %RAX.i1036 = bitcast %union.anon* %1615 to i64*
  %1616 = load i64, i64* %RAX.i1036
  %1617 = load i32, i32* %ECX.i1035
  %1618 = zext i32 %1617 to i64
  %1619 = load i64, i64* %PC.i1034
  %1620 = add i64 %1619, 2
  store i64 %1620, i64* %PC.i1034
  %1621 = trunc i64 %1616 to i32
  %1622 = add i32 %1617, %1621
  %1623 = zext i32 %1622 to i64
  store i64 %1623, i64* %RAX.i1036, align 8
  %1624 = icmp ult i32 %1622, %1621
  %1625 = icmp ult i32 %1622, %1617
  %1626 = or i1 %1624, %1625
  %1627 = zext i1 %1626 to i8
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1627, i8* %1628, align 1
  %1629 = and i32 %1622, 255
  %1630 = call i32 @llvm.ctpop.i32(i32 %1629)
  %1631 = trunc i32 %1630 to i8
  %1632 = and i8 %1631, 1
  %1633 = xor i8 %1632, 1
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1633, i8* %1634, align 1
  %1635 = xor i64 %1618, %1616
  %1636 = trunc i64 %1635 to i32
  %1637 = xor i32 %1636, %1622
  %1638 = lshr i32 %1637, 4
  %1639 = trunc i32 %1638 to i8
  %1640 = and i8 %1639, 1
  %1641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1640, i8* %1641, align 1
  %1642 = icmp eq i32 %1622, 0
  %1643 = zext i1 %1642 to i8
  %1644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1643, i8* %1644, align 1
  %1645 = lshr i32 %1622, 31
  %1646 = trunc i32 %1645 to i8
  %1647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1646, i8* %1647, align 1
  %1648 = lshr i32 %1621, 31
  %1649 = lshr i32 %1617, 31
  %1650 = xor i32 %1645, %1648
  %1651 = xor i32 %1645, %1649
  %1652 = add i32 %1650, %1651
  %1653 = icmp eq i32 %1652, 2
  %1654 = zext i1 %1653 to i8
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1654, i8* %1655, align 1
  store %struct.Memory* %loadMem_462e3a, %struct.Memory** %MEMORY
  %loadMem_462e3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1657 = getelementptr inbounds %struct.GPR, %struct.GPR* %1656, i32 0, i32 33
  %1658 = getelementptr inbounds %struct.Reg, %struct.Reg* %1657, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %1658 to i64*
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1660 = getelementptr inbounds %struct.GPR, %struct.GPR* %1659, i32 0, i32 7
  %1661 = getelementptr inbounds %struct.Reg, %struct.Reg* %1660, i32 0, i32 0
  %RDX.i1032 = bitcast %union.anon* %1661 to i64*
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1663 = getelementptr inbounds %struct.GPR, %struct.GPR* %1662, i32 0, i32 15
  %1664 = getelementptr inbounds %struct.Reg, %struct.Reg* %1663, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %1664 to i64*
  %1665 = load i64, i64* %RBP.i1033
  %1666 = sub i64 %1665, 48
  %1667 = load i64, i64* %PC.i1031
  %1668 = add i64 %1667, 4
  store i64 %1668, i64* %PC.i1031
  %1669 = inttoptr i64 %1666 to i64*
  %1670 = load i64, i64* %1669
  store i64 %1670, i64* %RDX.i1032, align 8
  store %struct.Memory* %loadMem_462e3c, %struct.Memory** %MEMORY
  %loadMem_462e40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1672 = getelementptr inbounds %struct.GPR, %struct.GPR* %1671, i32 0, i32 33
  %1673 = getelementptr inbounds %struct.Reg, %struct.Reg* %1672, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %1673 to i64*
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1675 = getelementptr inbounds %struct.GPR, %struct.GPR* %1674, i32 0, i32 9
  %1676 = getelementptr inbounds %struct.Reg, %struct.Reg* %1675, i32 0, i32 0
  %RSI.i1029 = bitcast %union.anon* %1676 to i64*
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1678 = getelementptr inbounds %struct.GPR, %struct.GPR* %1677, i32 0, i32 15
  %1679 = getelementptr inbounds %struct.Reg, %struct.Reg* %1678, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %1679 to i64*
  %1680 = load i64, i64* %RBP.i1030
  %1681 = sub i64 %1680, 80
  %1682 = load i64, i64* %PC.i1028
  %1683 = add i64 %1682, 4
  store i64 %1683, i64* %PC.i1028
  %1684 = inttoptr i64 %1681 to i32*
  %1685 = load i32, i32* %1684
  %1686 = sext i32 %1685 to i64
  store i64 %1686, i64* %RSI.i1029, align 8
  store %struct.Memory* %loadMem_462e40, %struct.Memory** %MEMORY
  %loadMem_462e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1688 = getelementptr inbounds %struct.GPR, %struct.GPR* %1687, i32 0, i32 33
  %1689 = getelementptr inbounds %struct.Reg, %struct.Reg* %1688, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %1689 to i64*
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1691 = getelementptr inbounds %struct.GPR, %struct.GPR* %1690, i32 0, i32 1
  %1692 = getelementptr inbounds %struct.Reg, %struct.Reg* %1691, i32 0, i32 0
  %RAX.i1025 = bitcast %union.anon* %1692 to i64*
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1694 = getelementptr inbounds %struct.GPR, %struct.GPR* %1693, i32 0, i32 7
  %1695 = getelementptr inbounds %struct.Reg, %struct.Reg* %1694, i32 0, i32 0
  %RDX.i1026 = bitcast %union.anon* %1695 to i64*
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1697 = getelementptr inbounds %struct.GPR, %struct.GPR* %1696, i32 0, i32 9
  %1698 = getelementptr inbounds %struct.Reg, %struct.Reg* %1697, i32 0, i32 0
  %RSI.i1027 = bitcast %union.anon* %1698 to i64*
  %1699 = load i64, i64* %RAX.i1025
  %1700 = load i64, i64* %RDX.i1026
  %1701 = load i64, i64* %RSI.i1027
  %1702 = mul i64 %1701, 4
  %1703 = add i64 %1700, 200
  %1704 = add i64 %1703, %1702
  %1705 = load i64, i64* %PC.i1024
  %1706 = add i64 %1705, 7
  store i64 %1706, i64* %PC.i1024
  %1707 = trunc i64 %1699 to i32
  %1708 = inttoptr i64 %1704 to i32*
  %1709 = load i32, i32* %1708
  %1710 = add i32 %1709, %1707
  %1711 = zext i32 %1710 to i64
  store i64 %1711, i64* %RAX.i1025, align 8
  %1712 = icmp ult i32 %1710, %1707
  %1713 = icmp ult i32 %1710, %1709
  %1714 = or i1 %1712, %1713
  %1715 = zext i1 %1714 to i8
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1715, i8* %1716, align 1
  %1717 = and i32 %1710, 255
  %1718 = call i32 @llvm.ctpop.i32(i32 %1717)
  %1719 = trunc i32 %1718 to i8
  %1720 = and i8 %1719, 1
  %1721 = xor i8 %1720, 1
  %1722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1721, i8* %1722, align 1
  %1723 = xor i32 %1709, %1707
  %1724 = xor i32 %1723, %1710
  %1725 = lshr i32 %1724, 4
  %1726 = trunc i32 %1725 to i8
  %1727 = and i8 %1726, 1
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1727, i8* %1728, align 1
  %1729 = icmp eq i32 %1710, 0
  %1730 = zext i1 %1729 to i8
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1730, i8* %1731, align 1
  %1732 = lshr i32 %1710, 31
  %1733 = trunc i32 %1732 to i8
  %1734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1733, i8* %1734, align 1
  %1735 = lshr i32 %1707, 31
  %1736 = lshr i32 %1709, 31
  %1737 = xor i32 %1732, %1735
  %1738 = xor i32 %1732, %1736
  %1739 = add i32 %1737, %1738
  %1740 = icmp eq i32 %1739, 2
  %1741 = zext i1 %1740 to i8
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1741, i8* %1742, align 1
  store %struct.Memory* %loadMem_462e44, %struct.Memory** %MEMORY
  %loadMem_462e4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1744 = getelementptr inbounds %struct.GPR, %struct.GPR* %1743, i32 0, i32 33
  %1745 = getelementptr inbounds %struct.Reg, %struct.Reg* %1744, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %1745 to i64*
  %1746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1747 = getelementptr inbounds %struct.GPR, %struct.GPR* %1746, i32 0, i32 1
  %1748 = getelementptr inbounds %struct.Reg, %struct.Reg* %1747, i32 0, i32 0
  %EAX.i1021 = bitcast %union.anon* %1748 to i32*
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1750 = getelementptr inbounds %struct.GPR, %struct.GPR* %1749, i32 0, i32 7
  %1751 = getelementptr inbounds %struct.Reg, %struct.Reg* %1750, i32 0, i32 0
  %RDX.i1022 = bitcast %union.anon* %1751 to i64*
  %1752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1753 = getelementptr inbounds %struct.GPR, %struct.GPR* %1752, i32 0, i32 9
  %1754 = getelementptr inbounds %struct.Reg, %struct.Reg* %1753, i32 0, i32 0
  %RSI.i1023 = bitcast %union.anon* %1754 to i64*
  %1755 = load i64, i64* %RDX.i1022
  %1756 = load i64, i64* %RSI.i1023
  %1757 = mul i64 %1756, 4
  %1758 = add i64 %1755, 200
  %1759 = add i64 %1758, %1757
  %1760 = load i32, i32* %EAX.i1021
  %1761 = zext i32 %1760 to i64
  %1762 = load i64, i64* %PC.i1020
  %1763 = add i64 %1762, 7
  store i64 %1763, i64* %PC.i1020
  %1764 = inttoptr i64 %1759 to i32*
  store i32 %1760, i32* %1764
  store %struct.Memory* %loadMem_462e4b, %struct.Memory** %MEMORY
  %loadMem_462e52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1766 = getelementptr inbounds %struct.GPR, %struct.GPR* %1765, i32 0, i32 33
  %1767 = getelementptr inbounds %struct.Reg, %struct.Reg* %1766, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %1767 to i64*
  %1768 = load i64, i64* %PC.i1019
  %1769 = add i64 %1768, 41
  %1770 = load i64, i64* %PC.i1019
  %1771 = add i64 %1770, 5
  store i64 %1771, i64* %PC.i1019
  %1772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1769, i64* %1772, align 8
  store %struct.Memory* %loadMem_462e52, %struct.Memory** %MEMORY
  br label %block_.L_462e7b

block_.L_462e57:                                  ; preds = %block_462e16, %block_462e09
  %loadMem_462e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1774 = getelementptr inbounds %struct.GPR, %struct.GPR* %1773, i32 0, i32 33
  %1775 = getelementptr inbounds %struct.Reg, %struct.Reg* %1774, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %1775 to i64*
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1777 = getelementptr inbounds %struct.GPR, %struct.GPR* %1776, i32 0, i32 1
  %1778 = getelementptr inbounds %struct.Reg, %struct.Reg* %1777, i32 0, i32 0
  %RAX.i1017 = bitcast %union.anon* %1778 to i64*
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1780 = getelementptr inbounds %struct.GPR, %struct.GPR* %1779, i32 0, i32 15
  %1781 = getelementptr inbounds %struct.Reg, %struct.Reg* %1780, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %1781 to i64*
  %1782 = load i64, i64* %RBP.i1018
  %1783 = sub i64 %1782, 136
  %1784 = load i64, i64* %PC.i1016
  %1785 = add i64 %1784, 7
  store i64 %1785, i64* %PC.i1016
  %1786 = inttoptr i64 %1783 to i32*
  %1787 = load i32, i32* %1786
  %1788 = sext i32 %1787 to i64
  store i64 %1788, i64* %RAX.i1017, align 8
  store %struct.Memory* %loadMem_462e57, %struct.Memory** %MEMORY
  %loadMem_462e5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1790 = getelementptr inbounds %struct.GPR, %struct.GPR* %1789, i32 0, i32 33
  %1791 = getelementptr inbounds %struct.Reg, %struct.Reg* %1790, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %1791 to i64*
  %1792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1793 = getelementptr inbounds %struct.GPR, %struct.GPR* %1792, i32 0, i32 1
  %1794 = getelementptr inbounds %struct.Reg, %struct.Reg* %1793, i32 0, i32 0
  %RAX.i1014 = bitcast %union.anon* %1794 to i64*
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1796 = getelementptr inbounds %struct.GPR, %struct.GPR* %1795, i32 0, i32 5
  %1797 = getelementptr inbounds %struct.Reg, %struct.Reg* %1796, i32 0, i32 0
  %RCX.i1015 = bitcast %union.anon* %1797 to i64*
  %1798 = load i64, i64* %RAX.i1014
  %1799 = mul i64 %1798, 4
  %1800 = add i64 %1799, 8060000
  %1801 = load i64, i64* %PC.i1013
  %1802 = add i64 %1801, 7
  store i64 %1802, i64* %PC.i1013
  %1803 = inttoptr i64 %1800 to i32*
  %1804 = load i32, i32* %1803
  %1805 = zext i32 %1804 to i64
  store i64 %1805, i64* %RCX.i1015, align 8
  store %struct.Memory* %loadMem_462e5e, %struct.Memory** %MEMORY
  %loadMem_462e65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1807 = getelementptr inbounds %struct.GPR, %struct.GPR* %1806, i32 0, i32 33
  %1808 = getelementptr inbounds %struct.Reg, %struct.Reg* %1807, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %1808 to i64*
  %1809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1810 = getelementptr inbounds %struct.GPR, %struct.GPR* %1809, i32 0, i32 1
  %1811 = getelementptr inbounds %struct.Reg, %struct.Reg* %1810, i32 0, i32 0
  %RAX.i1011 = bitcast %union.anon* %1811 to i64*
  %1812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1813 = getelementptr inbounds %struct.GPR, %struct.GPR* %1812, i32 0, i32 15
  %1814 = getelementptr inbounds %struct.Reg, %struct.Reg* %1813, i32 0, i32 0
  %RBP.i1012 = bitcast %union.anon* %1814 to i64*
  %1815 = load i64, i64* %RBP.i1012
  %1816 = sub i64 %1815, 48
  %1817 = load i64, i64* %PC.i1010
  %1818 = add i64 %1817, 4
  store i64 %1818, i64* %PC.i1010
  %1819 = inttoptr i64 %1816 to i64*
  %1820 = load i64, i64* %1819
  store i64 %1820, i64* %RAX.i1011, align 8
  store %struct.Memory* %loadMem_462e65, %struct.Memory** %MEMORY
  %loadMem_462e69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1822 = getelementptr inbounds %struct.GPR, %struct.GPR* %1821, i32 0, i32 33
  %1823 = getelementptr inbounds %struct.Reg, %struct.Reg* %1822, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %1823 to i64*
  %1824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1825 = getelementptr inbounds %struct.GPR, %struct.GPR* %1824, i32 0, i32 7
  %1826 = getelementptr inbounds %struct.Reg, %struct.Reg* %1825, i32 0, i32 0
  %RDX.i1008 = bitcast %union.anon* %1826 to i64*
  %1827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1828 = getelementptr inbounds %struct.GPR, %struct.GPR* %1827, i32 0, i32 15
  %1829 = getelementptr inbounds %struct.Reg, %struct.Reg* %1828, i32 0, i32 0
  %RBP.i1009 = bitcast %union.anon* %1829 to i64*
  %1830 = load i64, i64* %RBP.i1009
  %1831 = sub i64 %1830, 80
  %1832 = load i64, i64* %PC.i1007
  %1833 = add i64 %1832, 4
  store i64 %1833, i64* %PC.i1007
  %1834 = inttoptr i64 %1831 to i32*
  %1835 = load i32, i32* %1834
  %1836 = sext i32 %1835 to i64
  store i64 %1836, i64* %RDX.i1008, align 8
  store %struct.Memory* %loadMem_462e69, %struct.Memory** %MEMORY
  %loadMem_462e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1838 = getelementptr inbounds %struct.GPR, %struct.GPR* %1837, i32 0, i32 33
  %1839 = getelementptr inbounds %struct.Reg, %struct.Reg* %1838, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %1839 to i64*
  %1840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1841 = getelementptr inbounds %struct.GPR, %struct.GPR* %1840, i32 0, i32 1
  %1842 = getelementptr inbounds %struct.Reg, %struct.Reg* %1841, i32 0, i32 0
  %RAX.i1004 = bitcast %union.anon* %1842 to i64*
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1844 = getelementptr inbounds %struct.GPR, %struct.GPR* %1843, i32 0, i32 5
  %1845 = getelementptr inbounds %struct.Reg, %struct.Reg* %1844, i32 0, i32 0
  %RCX.i1005 = bitcast %union.anon* %1845 to i64*
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1847 = getelementptr inbounds %struct.GPR, %struct.GPR* %1846, i32 0, i32 7
  %1848 = getelementptr inbounds %struct.Reg, %struct.Reg* %1847, i32 0, i32 0
  %RDX.i1006 = bitcast %union.anon* %1848 to i64*
  %1849 = load i64, i64* %RCX.i1005
  %1850 = load i64, i64* %RAX.i1004
  %1851 = load i64, i64* %RDX.i1006
  %1852 = mul i64 %1851, 4
  %1853 = add i64 %1850, 200
  %1854 = add i64 %1853, %1852
  %1855 = load i64, i64* %PC.i1003
  %1856 = add i64 %1855, 7
  store i64 %1856, i64* %PC.i1003
  %1857 = trunc i64 %1849 to i32
  %1858 = inttoptr i64 %1854 to i32*
  %1859 = load i32, i32* %1858
  %1860 = add i32 %1859, %1857
  %1861 = zext i32 %1860 to i64
  store i64 %1861, i64* %RCX.i1005, align 8
  %1862 = icmp ult i32 %1860, %1857
  %1863 = icmp ult i32 %1860, %1859
  %1864 = or i1 %1862, %1863
  %1865 = zext i1 %1864 to i8
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1865, i8* %1866, align 1
  %1867 = and i32 %1860, 255
  %1868 = call i32 @llvm.ctpop.i32(i32 %1867)
  %1869 = trunc i32 %1868 to i8
  %1870 = and i8 %1869, 1
  %1871 = xor i8 %1870, 1
  %1872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1871, i8* %1872, align 1
  %1873 = xor i32 %1859, %1857
  %1874 = xor i32 %1873, %1860
  %1875 = lshr i32 %1874, 4
  %1876 = trunc i32 %1875 to i8
  %1877 = and i8 %1876, 1
  %1878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1877, i8* %1878, align 1
  %1879 = icmp eq i32 %1860, 0
  %1880 = zext i1 %1879 to i8
  %1881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1880, i8* %1881, align 1
  %1882 = lshr i32 %1860, 31
  %1883 = trunc i32 %1882 to i8
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1883, i8* %1884, align 1
  %1885 = lshr i32 %1857, 31
  %1886 = lshr i32 %1859, 31
  %1887 = xor i32 %1882, %1885
  %1888 = xor i32 %1882, %1886
  %1889 = add i32 %1887, %1888
  %1890 = icmp eq i32 %1889, 2
  %1891 = zext i1 %1890 to i8
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1891, i8* %1892, align 1
  store %struct.Memory* %loadMem_462e6d, %struct.Memory** %MEMORY
  %loadMem_462e74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1894 = getelementptr inbounds %struct.GPR, %struct.GPR* %1893, i32 0, i32 33
  %1895 = getelementptr inbounds %struct.Reg, %struct.Reg* %1894, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %1895 to i64*
  %1896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1897 = getelementptr inbounds %struct.GPR, %struct.GPR* %1896, i32 0, i32 5
  %1898 = getelementptr inbounds %struct.Reg, %struct.Reg* %1897, i32 0, i32 0
  %ECX.i1000 = bitcast %union.anon* %1898 to i32*
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1900 = getelementptr inbounds %struct.GPR, %struct.GPR* %1899, i32 0, i32 1
  %1901 = getelementptr inbounds %struct.Reg, %struct.Reg* %1900, i32 0, i32 0
  %RAX.i1001 = bitcast %union.anon* %1901 to i64*
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1903 = getelementptr inbounds %struct.GPR, %struct.GPR* %1902, i32 0, i32 7
  %1904 = getelementptr inbounds %struct.Reg, %struct.Reg* %1903, i32 0, i32 0
  %RDX.i1002 = bitcast %union.anon* %1904 to i64*
  %1905 = load i64, i64* %RAX.i1001
  %1906 = load i64, i64* %RDX.i1002
  %1907 = mul i64 %1906, 4
  %1908 = add i64 %1905, 200
  %1909 = add i64 %1908, %1907
  %1910 = load i32, i32* %ECX.i1000
  %1911 = zext i32 %1910 to i64
  %1912 = load i64, i64* %PC.i999
  %1913 = add i64 %1912, 7
  store i64 %1913, i64* %PC.i999
  %1914 = inttoptr i64 %1909 to i32*
  store i32 %1910, i32* %1914
  store %struct.Memory* %loadMem_462e74, %struct.Memory** %MEMORY
  br label %block_.L_462e7b

block_.L_462e7b:                                  ; preds = %block_.L_462e57, %block_.L_462e2a
  %loadMem_462e7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1916 = getelementptr inbounds %struct.GPR, %struct.GPR* %1915, i32 0, i32 33
  %1917 = getelementptr inbounds %struct.Reg, %struct.Reg* %1916, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %1917 to i64*
  %1918 = load i64, i64* %PC.i998
  %1919 = add i64 %1918, 93
  %1920 = load i64, i64* %PC.i998
  %1921 = add i64 %1920, 5
  store i64 %1921, i64* %PC.i998
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1919, i64* %1922, align 8
  store %struct.Memory* %loadMem_462e7b, %struct.Memory** %MEMORY
  br label %block_.L_462ed8

block_.L_462e80:                                  ; preds = %block_462dd8
  %loadMem_462e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1924 = getelementptr inbounds %struct.GPR, %struct.GPR* %1923, i32 0, i32 33
  %1925 = getelementptr inbounds %struct.Reg, %struct.Reg* %1924, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %1925 to i64*
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1927 = getelementptr inbounds %struct.GPR, %struct.GPR* %1926, i32 0, i32 15
  %1928 = getelementptr inbounds %struct.Reg, %struct.Reg* %1927, i32 0, i32 0
  %RBP.i997 = bitcast %union.anon* %1928 to i64*
  %1929 = load i64, i64* %RBP.i997
  %1930 = sub i64 %1929, 136
  %1931 = load i64, i64* %PC.i996
  %1932 = add i64 %1931, 7
  store i64 %1932, i64* %PC.i996
  %1933 = inttoptr i64 %1930 to i32*
  %1934 = load i32, i32* %1933
  %1935 = sub i32 %1934, 4
  %1936 = icmp ult i32 %1934, 4
  %1937 = zext i1 %1936 to i8
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1937, i8* %1938, align 1
  %1939 = and i32 %1935, 255
  %1940 = call i32 @llvm.ctpop.i32(i32 %1939)
  %1941 = trunc i32 %1940 to i8
  %1942 = and i8 %1941, 1
  %1943 = xor i8 %1942, 1
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1943, i8* %1944, align 1
  %1945 = xor i32 %1934, 4
  %1946 = xor i32 %1945, %1935
  %1947 = lshr i32 %1946, 4
  %1948 = trunc i32 %1947 to i8
  %1949 = and i8 %1948, 1
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1949, i8* %1950, align 1
  %1951 = icmp eq i32 %1935, 0
  %1952 = zext i1 %1951 to i8
  %1953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1952, i8* %1953, align 1
  %1954 = lshr i32 %1935, 31
  %1955 = trunc i32 %1954 to i8
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1955, i8* %1956, align 1
  %1957 = lshr i32 %1934, 31
  %1958 = xor i32 %1954, %1957
  %1959 = add i32 %1958, %1957
  %1960 = icmp eq i32 %1959, 2
  %1961 = zext i1 %1960 to i8
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1961, i8* %1962, align 1
  store %struct.Memory* %loadMem_462e80, %struct.Memory** %MEMORY
  %loadMem_462e87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1964 = getelementptr inbounds %struct.GPR, %struct.GPR* %1963, i32 0, i32 33
  %1965 = getelementptr inbounds %struct.Reg, %struct.Reg* %1964, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %1965 to i64*
  %1966 = load i64, i64* %PC.i995
  %1967 = add i64 %1966, 40
  %1968 = load i64, i64* %PC.i995
  %1969 = add i64 %1968, 6
  %1970 = load i64, i64* %PC.i995
  %1971 = add i64 %1970, 6
  store i64 %1971, i64* %PC.i995
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1973 = load i8, i8* %1972, align 1
  %1974 = icmp ne i8 %1973, 0
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1976 = load i8, i8* %1975, align 1
  %1977 = icmp ne i8 %1976, 0
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1979 = load i8, i8* %1978, align 1
  %1980 = icmp ne i8 %1979, 0
  %1981 = xor i1 %1977, %1980
  %1982 = or i1 %1974, %1981
  %1983 = zext i1 %1982 to i8
  store i8 %1983, i8* %BRANCH_TAKEN, align 1
  %1984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1985 = select i1 %1982, i64 %1967, i64 %1969
  store i64 %1985, i64* %1984, align 8
  store %struct.Memory* %loadMem_462e87, %struct.Memory** %MEMORY
  %loadBr_462e87 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462e87 = icmp eq i8 %loadBr_462e87, 1
  br i1 %cmpBr_462e87, label %block_.L_462eaf, label %block_462e8d

block_462e8d:                                     ; preds = %block_.L_462e80
  %loadMem_462e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1987 = getelementptr inbounds %struct.GPR, %struct.GPR* %1986, i32 0, i32 33
  %1988 = getelementptr inbounds %struct.Reg, %struct.Reg* %1987, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %1988 to i64*
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1990 = getelementptr inbounds %struct.GPR, %struct.GPR* %1989, i32 0, i32 1
  %1991 = getelementptr inbounds %struct.Reg, %struct.Reg* %1990, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %1991 to i64*
  %1992 = load i64, i64* %PC.i993
  %1993 = add i64 %1992, 7
  store i64 %1993, i64* %PC.i993
  %1994 = load i32, i32* bitcast (%G_0x7afc90_type* @G_0x7afc90 to i32*)
  %1995 = zext i32 %1994 to i64
  store i64 %1995, i64* %RAX.i994, align 8
  store %struct.Memory* %loadMem_462e8d, %struct.Memory** %MEMORY
  %loadMem_462e94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1997 = getelementptr inbounds %struct.GPR, %struct.GPR* %1996, i32 0, i32 33
  %1998 = getelementptr inbounds %struct.Reg, %struct.Reg* %1997, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %1998 to i64*
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2000 = getelementptr inbounds %struct.GPR, %struct.GPR* %1999, i32 0, i32 5
  %2001 = getelementptr inbounds %struct.Reg, %struct.Reg* %2000, i32 0, i32 0
  %RCX.i991 = bitcast %union.anon* %2001 to i64*
  %2002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2003 = getelementptr inbounds %struct.GPR, %struct.GPR* %2002, i32 0, i32 15
  %2004 = getelementptr inbounds %struct.Reg, %struct.Reg* %2003, i32 0, i32 0
  %RBP.i992 = bitcast %union.anon* %2004 to i64*
  %2005 = load i64, i64* %RBP.i992
  %2006 = sub i64 %2005, 48
  %2007 = load i64, i64* %PC.i990
  %2008 = add i64 %2007, 4
  store i64 %2008, i64* %PC.i990
  %2009 = inttoptr i64 %2006 to i64*
  %2010 = load i64, i64* %2009
  store i64 %2010, i64* %RCX.i991, align 8
  store %struct.Memory* %loadMem_462e94, %struct.Memory** %MEMORY
  %loadMem_462e98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2012 = getelementptr inbounds %struct.GPR, %struct.GPR* %2011, i32 0, i32 33
  %2013 = getelementptr inbounds %struct.Reg, %struct.Reg* %2012, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %2013 to i64*
  %2014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2015 = getelementptr inbounds %struct.GPR, %struct.GPR* %2014, i32 0, i32 7
  %2016 = getelementptr inbounds %struct.Reg, %struct.Reg* %2015, i32 0, i32 0
  %RDX.i988 = bitcast %union.anon* %2016 to i64*
  %2017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2018 = getelementptr inbounds %struct.GPR, %struct.GPR* %2017, i32 0, i32 15
  %2019 = getelementptr inbounds %struct.Reg, %struct.Reg* %2018, i32 0, i32 0
  %RBP.i989 = bitcast %union.anon* %2019 to i64*
  %2020 = load i64, i64* %RBP.i989
  %2021 = sub i64 %2020, 80
  %2022 = load i64, i64* %PC.i987
  %2023 = add i64 %2022, 4
  store i64 %2023, i64* %PC.i987
  %2024 = inttoptr i64 %2021 to i32*
  %2025 = load i32, i32* %2024
  %2026 = sext i32 %2025 to i64
  store i64 %2026, i64* %RDX.i988, align 8
  store %struct.Memory* %loadMem_462e98, %struct.Memory** %MEMORY
  %loadMem_462e9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2028 = getelementptr inbounds %struct.GPR, %struct.GPR* %2027, i32 0, i32 33
  %2029 = getelementptr inbounds %struct.Reg, %struct.Reg* %2028, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %2029 to i64*
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2031 = getelementptr inbounds %struct.GPR, %struct.GPR* %2030, i32 0, i32 1
  %2032 = getelementptr inbounds %struct.Reg, %struct.Reg* %2031, i32 0, i32 0
  %RAX.i984 = bitcast %union.anon* %2032 to i64*
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2034 = getelementptr inbounds %struct.GPR, %struct.GPR* %2033, i32 0, i32 5
  %2035 = getelementptr inbounds %struct.Reg, %struct.Reg* %2034, i32 0, i32 0
  %RCX.i985 = bitcast %union.anon* %2035 to i64*
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2037 = getelementptr inbounds %struct.GPR, %struct.GPR* %2036, i32 0, i32 7
  %2038 = getelementptr inbounds %struct.Reg, %struct.Reg* %2037, i32 0, i32 0
  %RDX.i986 = bitcast %union.anon* %2038 to i64*
  %2039 = load i64, i64* %RAX.i984
  %2040 = load i64, i64* %RCX.i985
  %2041 = load i64, i64* %RDX.i986
  %2042 = mul i64 %2041, 4
  %2043 = add i64 %2040, 200
  %2044 = add i64 %2043, %2042
  %2045 = load i64, i64* %PC.i983
  %2046 = add i64 %2045, 7
  store i64 %2046, i64* %PC.i983
  %2047 = trunc i64 %2039 to i32
  %2048 = inttoptr i64 %2044 to i32*
  %2049 = load i32, i32* %2048
  %2050 = add i32 %2049, %2047
  %2051 = zext i32 %2050 to i64
  store i64 %2051, i64* %RAX.i984, align 8
  %2052 = icmp ult i32 %2050, %2047
  %2053 = icmp ult i32 %2050, %2049
  %2054 = or i1 %2052, %2053
  %2055 = zext i1 %2054 to i8
  %2056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2055, i8* %2056, align 1
  %2057 = and i32 %2050, 255
  %2058 = call i32 @llvm.ctpop.i32(i32 %2057)
  %2059 = trunc i32 %2058 to i8
  %2060 = and i8 %2059, 1
  %2061 = xor i8 %2060, 1
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2061, i8* %2062, align 1
  %2063 = xor i32 %2049, %2047
  %2064 = xor i32 %2063, %2050
  %2065 = lshr i32 %2064, 4
  %2066 = trunc i32 %2065 to i8
  %2067 = and i8 %2066, 1
  %2068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2067, i8* %2068, align 1
  %2069 = icmp eq i32 %2050, 0
  %2070 = zext i1 %2069 to i8
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2070, i8* %2071, align 1
  %2072 = lshr i32 %2050, 31
  %2073 = trunc i32 %2072 to i8
  %2074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2073, i8* %2074, align 1
  %2075 = lshr i32 %2047, 31
  %2076 = lshr i32 %2049, 31
  %2077 = xor i32 %2072, %2075
  %2078 = xor i32 %2072, %2076
  %2079 = add i32 %2077, %2078
  %2080 = icmp eq i32 %2079, 2
  %2081 = zext i1 %2080 to i8
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2081, i8* %2082, align 1
  store %struct.Memory* %loadMem_462e9c, %struct.Memory** %MEMORY
  %loadMem_462ea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2084 = getelementptr inbounds %struct.GPR, %struct.GPR* %2083, i32 0, i32 33
  %2085 = getelementptr inbounds %struct.Reg, %struct.Reg* %2084, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %2085 to i64*
  %2086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2087 = getelementptr inbounds %struct.GPR, %struct.GPR* %2086, i32 0, i32 1
  %2088 = getelementptr inbounds %struct.Reg, %struct.Reg* %2087, i32 0, i32 0
  %EAX.i980 = bitcast %union.anon* %2088 to i32*
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2090 = getelementptr inbounds %struct.GPR, %struct.GPR* %2089, i32 0, i32 5
  %2091 = getelementptr inbounds %struct.Reg, %struct.Reg* %2090, i32 0, i32 0
  %RCX.i981 = bitcast %union.anon* %2091 to i64*
  %2092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2093 = getelementptr inbounds %struct.GPR, %struct.GPR* %2092, i32 0, i32 7
  %2094 = getelementptr inbounds %struct.Reg, %struct.Reg* %2093, i32 0, i32 0
  %RDX.i982 = bitcast %union.anon* %2094 to i64*
  %2095 = load i64, i64* %RCX.i981
  %2096 = load i64, i64* %RDX.i982
  %2097 = mul i64 %2096, 4
  %2098 = add i64 %2095, 200
  %2099 = add i64 %2098, %2097
  %2100 = load i32, i32* %EAX.i980
  %2101 = zext i32 %2100 to i64
  %2102 = load i64, i64* %PC.i979
  %2103 = add i64 %2102, 7
  store i64 %2103, i64* %PC.i979
  %2104 = inttoptr i64 %2099 to i32*
  store i32 %2100, i32* %2104
  store %struct.Memory* %loadMem_462ea3, %struct.Memory** %MEMORY
  %loadMem_462eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2106 = getelementptr inbounds %struct.GPR, %struct.GPR* %2105, i32 0, i32 33
  %2107 = getelementptr inbounds %struct.Reg, %struct.Reg* %2106, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %2107 to i64*
  %2108 = load i64, i64* %PC.i978
  %2109 = add i64 %2108, 41
  %2110 = load i64, i64* %PC.i978
  %2111 = add i64 %2110, 5
  store i64 %2111, i64* %PC.i978
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2109, i64* %2112, align 8
  store %struct.Memory* %loadMem_462eaa, %struct.Memory** %MEMORY
  br label %block_.L_462ed3

block_.L_462eaf:                                  ; preds = %block_.L_462e80
  %loadMem_462eaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2114 = getelementptr inbounds %struct.GPR, %struct.GPR* %2113, i32 0, i32 33
  %2115 = getelementptr inbounds %struct.Reg, %struct.Reg* %2114, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %2115 to i64*
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2117 = getelementptr inbounds %struct.GPR, %struct.GPR* %2116, i32 0, i32 1
  %2118 = getelementptr inbounds %struct.Reg, %struct.Reg* %2117, i32 0, i32 0
  %RAX.i976 = bitcast %union.anon* %2118 to i64*
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2120 = getelementptr inbounds %struct.GPR, %struct.GPR* %2119, i32 0, i32 15
  %2121 = getelementptr inbounds %struct.Reg, %struct.Reg* %2120, i32 0, i32 0
  %RBP.i977 = bitcast %union.anon* %2121 to i64*
  %2122 = load i64, i64* %RBP.i977
  %2123 = sub i64 %2122, 136
  %2124 = load i64, i64* %PC.i975
  %2125 = add i64 %2124, 7
  store i64 %2125, i64* %PC.i975
  %2126 = inttoptr i64 %2123 to i32*
  %2127 = load i32, i32* %2126
  %2128 = sext i32 %2127 to i64
  store i64 %2128, i64* %RAX.i976, align 8
  store %struct.Memory* %loadMem_462eaf, %struct.Memory** %MEMORY
  %loadMem_462eb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2130 = getelementptr inbounds %struct.GPR, %struct.GPR* %2129, i32 0, i32 33
  %2131 = getelementptr inbounds %struct.Reg, %struct.Reg* %2130, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %2131 to i64*
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2133 = getelementptr inbounds %struct.GPR, %struct.GPR* %2132, i32 0, i32 1
  %2134 = getelementptr inbounds %struct.Reg, %struct.Reg* %2133, i32 0, i32 0
  %RAX.i973 = bitcast %union.anon* %2134 to i64*
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 5
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %RCX.i974 = bitcast %union.anon* %2137 to i64*
  %2138 = load i64, i64* %RAX.i973
  %2139 = mul i64 %2138, 4
  %2140 = add i64 %2139, 8060032
  %2141 = load i64, i64* %PC.i972
  %2142 = add i64 %2141, 7
  store i64 %2142, i64* %PC.i972
  %2143 = inttoptr i64 %2140 to i32*
  %2144 = load i32, i32* %2143
  %2145 = zext i32 %2144 to i64
  store i64 %2145, i64* %RCX.i974, align 8
  store %struct.Memory* %loadMem_462eb6, %struct.Memory** %MEMORY
  %loadMem_462ebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2147 = getelementptr inbounds %struct.GPR, %struct.GPR* %2146, i32 0, i32 33
  %2148 = getelementptr inbounds %struct.Reg, %struct.Reg* %2147, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %2148 to i64*
  %2149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2150 = getelementptr inbounds %struct.GPR, %struct.GPR* %2149, i32 0, i32 1
  %2151 = getelementptr inbounds %struct.Reg, %struct.Reg* %2150, i32 0, i32 0
  %RAX.i970 = bitcast %union.anon* %2151 to i64*
  %2152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2153 = getelementptr inbounds %struct.GPR, %struct.GPR* %2152, i32 0, i32 15
  %2154 = getelementptr inbounds %struct.Reg, %struct.Reg* %2153, i32 0, i32 0
  %RBP.i971 = bitcast %union.anon* %2154 to i64*
  %2155 = load i64, i64* %RBP.i971
  %2156 = sub i64 %2155, 48
  %2157 = load i64, i64* %PC.i969
  %2158 = add i64 %2157, 4
  store i64 %2158, i64* %PC.i969
  %2159 = inttoptr i64 %2156 to i64*
  %2160 = load i64, i64* %2159
  store i64 %2160, i64* %RAX.i970, align 8
  store %struct.Memory* %loadMem_462ebd, %struct.Memory** %MEMORY
  %loadMem_462ec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2162 = getelementptr inbounds %struct.GPR, %struct.GPR* %2161, i32 0, i32 33
  %2163 = getelementptr inbounds %struct.Reg, %struct.Reg* %2162, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %2163 to i64*
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2165 = getelementptr inbounds %struct.GPR, %struct.GPR* %2164, i32 0, i32 7
  %2166 = getelementptr inbounds %struct.Reg, %struct.Reg* %2165, i32 0, i32 0
  %RDX.i967 = bitcast %union.anon* %2166 to i64*
  %2167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2168 = getelementptr inbounds %struct.GPR, %struct.GPR* %2167, i32 0, i32 15
  %2169 = getelementptr inbounds %struct.Reg, %struct.Reg* %2168, i32 0, i32 0
  %RBP.i968 = bitcast %union.anon* %2169 to i64*
  %2170 = load i64, i64* %RBP.i968
  %2171 = sub i64 %2170, 80
  %2172 = load i64, i64* %PC.i966
  %2173 = add i64 %2172, 4
  store i64 %2173, i64* %PC.i966
  %2174 = inttoptr i64 %2171 to i32*
  %2175 = load i32, i32* %2174
  %2176 = sext i32 %2175 to i64
  store i64 %2176, i64* %RDX.i967, align 8
  store %struct.Memory* %loadMem_462ec1, %struct.Memory** %MEMORY
  %loadMem_462ec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2178 = getelementptr inbounds %struct.GPR, %struct.GPR* %2177, i32 0, i32 33
  %2179 = getelementptr inbounds %struct.Reg, %struct.Reg* %2178, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %2179 to i64*
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2181 = getelementptr inbounds %struct.GPR, %struct.GPR* %2180, i32 0, i32 1
  %2182 = getelementptr inbounds %struct.Reg, %struct.Reg* %2181, i32 0, i32 0
  %RAX.i963 = bitcast %union.anon* %2182 to i64*
  %2183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2184 = getelementptr inbounds %struct.GPR, %struct.GPR* %2183, i32 0, i32 5
  %2185 = getelementptr inbounds %struct.Reg, %struct.Reg* %2184, i32 0, i32 0
  %RCX.i964 = bitcast %union.anon* %2185 to i64*
  %2186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2187 = getelementptr inbounds %struct.GPR, %struct.GPR* %2186, i32 0, i32 7
  %2188 = getelementptr inbounds %struct.Reg, %struct.Reg* %2187, i32 0, i32 0
  %RDX.i965 = bitcast %union.anon* %2188 to i64*
  %2189 = load i64, i64* %RCX.i964
  %2190 = load i64, i64* %RAX.i963
  %2191 = load i64, i64* %RDX.i965
  %2192 = mul i64 %2191, 4
  %2193 = add i64 %2190, 200
  %2194 = add i64 %2193, %2192
  %2195 = load i64, i64* %PC.i962
  %2196 = add i64 %2195, 7
  store i64 %2196, i64* %PC.i962
  %2197 = trunc i64 %2189 to i32
  %2198 = inttoptr i64 %2194 to i32*
  %2199 = load i32, i32* %2198
  %2200 = add i32 %2199, %2197
  %2201 = zext i32 %2200 to i64
  store i64 %2201, i64* %RCX.i964, align 8
  %2202 = icmp ult i32 %2200, %2197
  %2203 = icmp ult i32 %2200, %2199
  %2204 = or i1 %2202, %2203
  %2205 = zext i1 %2204 to i8
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2205, i8* %2206, align 1
  %2207 = and i32 %2200, 255
  %2208 = call i32 @llvm.ctpop.i32(i32 %2207)
  %2209 = trunc i32 %2208 to i8
  %2210 = and i8 %2209, 1
  %2211 = xor i8 %2210, 1
  %2212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2211, i8* %2212, align 1
  %2213 = xor i32 %2199, %2197
  %2214 = xor i32 %2213, %2200
  %2215 = lshr i32 %2214, 4
  %2216 = trunc i32 %2215 to i8
  %2217 = and i8 %2216, 1
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2217, i8* %2218, align 1
  %2219 = icmp eq i32 %2200, 0
  %2220 = zext i1 %2219 to i8
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2220, i8* %2221, align 1
  %2222 = lshr i32 %2200, 31
  %2223 = trunc i32 %2222 to i8
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2223, i8* %2224, align 1
  %2225 = lshr i32 %2197, 31
  %2226 = lshr i32 %2199, 31
  %2227 = xor i32 %2222, %2225
  %2228 = xor i32 %2222, %2226
  %2229 = add i32 %2227, %2228
  %2230 = icmp eq i32 %2229, 2
  %2231 = zext i1 %2230 to i8
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2231, i8* %2232, align 1
  store %struct.Memory* %loadMem_462ec5, %struct.Memory** %MEMORY
  %loadMem_462ecc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2234 = getelementptr inbounds %struct.GPR, %struct.GPR* %2233, i32 0, i32 33
  %2235 = getelementptr inbounds %struct.Reg, %struct.Reg* %2234, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %2235 to i64*
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2237 = getelementptr inbounds %struct.GPR, %struct.GPR* %2236, i32 0, i32 5
  %2238 = getelementptr inbounds %struct.Reg, %struct.Reg* %2237, i32 0, i32 0
  %ECX.i959 = bitcast %union.anon* %2238 to i32*
  %2239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2240 = getelementptr inbounds %struct.GPR, %struct.GPR* %2239, i32 0, i32 1
  %2241 = getelementptr inbounds %struct.Reg, %struct.Reg* %2240, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %2241 to i64*
  %2242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2243 = getelementptr inbounds %struct.GPR, %struct.GPR* %2242, i32 0, i32 7
  %2244 = getelementptr inbounds %struct.Reg, %struct.Reg* %2243, i32 0, i32 0
  %RDX.i961 = bitcast %union.anon* %2244 to i64*
  %2245 = load i64, i64* %RAX.i960
  %2246 = load i64, i64* %RDX.i961
  %2247 = mul i64 %2246, 4
  %2248 = add i64 %2245, 200
  %2249 = add i64 %2248, %2247
  %2250 = load i32, i32* %ECX.i959
  %2251 = zext i32 %2250 to i64
  %2252 = load i64, i64* %PC.i958
  %2253 = add i64 %2252, 7
  store i64 %2253, i64* %PC.i958
  %2254 = inttoptr i64 %2249 to i32*
  store i32 %2250, i32* %2254
  store %struct.Memory* %loadMem_462ecc, %struct.Memory** %MEMORY
  br label %block_.L_462ed3

block_.L_462ed3:                                  ; preds = %block_.L_462eaf, %block_462e8d
  %loadMem_462ed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2256 = getelementptr inbounds %struct.GPR, %struct.GPR* %2255, i32 0, i32 33
  %2257 = getelementptr inbounds %struct.Reg, %struct.Reg* %2256, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %2257 to i64*
  %2258 = load i64, i64* %PC.i957
  %2259 = add i64 %2258, 5
  %2260 = load i64, i64* %PC.i957
  %2261 = add i64 %2260, 5
  store i64 %2261, i64* %PC.i957
  %2262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2259, i64* %2262, align 8
  store %struct.Memory* %loadMem_462ed3, %struct.Memory** %MEMORY
  br label %block_.L_462ed8

block_.L_462ed8:                                  ; preds = %block_.L_462ed3, %block_.L_462e7b
  %loadMem_462ed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2264 = getelementptr inbounds %struct.GPR, %struct.GPR* %2263, i32 0, i32 33
  %2265 = getelementptr inbounds %struct.Reg, %struct.Reg* %2264, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %2265 to i64*
  %2266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2267 = getelementptr inbounds %struct.GPR, %struct.GPR* %2266, i32 0, i32 15
  %2268 = getelementptr inbounds %struct.Reg, %struct.Reg* %2267, i32 0, i32 0
  %RBP.i956 = bitcast %union.anon* %2268 to i64*
  %2269 = load i64, i64* %RBP.i956
  %2270 = sub i64 %2269, 132
  %2271 = load i64, i64* %PC.i955
  %2272 = add i64 %2271, 7
  store i64 %2272, i64* %PC.i955
  %2273 = inttoptr i64 %2270 to i32*
  %2274 = load i32, i32* %2273
  %2275 = sub i32 %2274, 4
  %2276 = icmp ult i32 %2274, 4
  %2277 = zext i1 %2276 to i8
  %2278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2277, i8* %2278, align 1
  %2279 = and i32 %2275, 255
  %2280 = call i32 @llvm.ctpop.i32(i32 %2279)
  %2281 = trunc i32 %2280 to i8
  %2282 = and i8 %2281, 1
  %2283 = xor i8 %2282, 1
  %2284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2283, i8* %2284, align 1
  %2285 = xor i32 %2274, 4
  %2286 = xor i32 %2285, %2275
  %2287 = lshr i32 %2286, 4
  %2288 = trunc i32 %2287 to i8
  %2289 = and i8 %2288, 1
  %2290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2289, i8* %2290, align 1
  %2291 = icmp eq i32 %2275, 0
  %2292 = zext i1 %2291 to i8
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2292, i8* %2293, align 1
  %2294 = lshr i32 %2275, 31
  %2295 = trunc i32 %2294 to i8
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2295, i8* %2296, align 1
  %2297 = lshr i32 %2274, 31
  %2298 = xor i32 %2294, %2297
  %2299 = add i32 %2298, %2297
  %2300 = icmp eq i32 %2299, 2
  %2301 = zext i1 %2300 to i8
  %2302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2301, i8* %2302, align 1
  store %struct.Memory* %loadMem_462ed8, %struct.Memory** %MEMORY
  %loadMem_462edf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2304 = getelementptr inbounds %struct.GPR, %struct.GPR* %2303, i32 0, i32 33
  %2305 = getelementptr inbounds %struct.Reg, %struct.Reg* %2304, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %2305 to i64*
  %2306 = load i64, i64* %PC.i954
  %2307 = add i64 %2306, 11
  %2308 = load i64, i64* %PC.i954
  %2309 = add i64 %2308, 6
  %2310 = load i64, i64* %PC.i954
  %2311 = add i64 %2310, 6
  store i64 %2311, i64* %PC.i954
  %2312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2313 = load i8, i8* %2312, align 1
  %2314 = icmp eq i8 %2313, 0
  %2315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2316 = load i8, i8* %2315, align 1
  %2317 = icmp ne i8 %2316, 0
  %2318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2319 = load i8, i8* %2318, align 1
  %2320 = icmp ne i8 %2319, 0
  %2321 = xor i1 %2317, %2320
  %2322 = xor i1 %2321, true
  %2323 = and i1 %2314, %2322
  %2324 = zext i1 %2323 to i8
  store i8 %2324, i8* %BRANCH_TAKEN, align 1
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2326 = select i1 %2323, i64 %2307, i64 %2309
  store i64 %2326, i64* %2325, align 8
  store %struct.Memory* %loadMem_462edf, %struct.Memory** %MEMORY
  %loadBr_462edf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462edf = icmp eq i8 %loadBr_462edf, 1
  br i1 %cmpBr_462edf, label %block_.L_462eea, label %block_462ee5

block_462ee5:                                     ; preds = %block_.L_462ed8
  %loadMem_462ee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2328 = getelementptr inbounds %struct.GPR, %struct.GPR* %2327, i32 0, i32 33
  %2329 = getelementptr inbounds %struct.Reg, %struct.Reg* %2328, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %2329 to i64*
  %2330 = load i64, i64* %PC.i953
  %2331 = add i64 %2330, 45
  %2332 = load i64, i64* %PC.i953
  %2333 = add i64 %2332, 5
  store i64 %2333, i64* %PC.i953
  %2334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2331, i64* %2334, align 8
  store %struct.Memory* %loadMem_462ee5, %struct.Memory** %MEMORY
  br label %block_.L_462f12

block_.L_462eea:                                  ; preds = %block_.L_462ed8
  %loadMem_462eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2336 = getelementptr inbounds %struct.GPR, %struct.GPR* %2335, i32 0, i32 33
  %2337 = getelementptr inbounds %struct.Reg, %struct.Reg* %2336, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %2337 to i64*
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2339 = getelementptr inbounds %struct.GPR, %struct.GPR* %2338, i32 0, i32 11
  %2340 = getelementptr inbounds %struct.Reg, %struct.Reg* %2339, i32 0, i32 0
  %RDI.i952 = bitcast %union.anon* %2340 to i64*
  %2341 = load i64, i64* %PC.i951
  %2342 = add i64 %2341, 10
  store i64 %2342, i64* %PC.i951
  store i64 ptrtoint (%G__0x57fb0d_type* @G__0x57fb0d to i64), i64* %RDI.i952, align 8
  store %struct.Memory* %loadMem_462eea, %struct.Memory** %MEMORY
  %loadMem_462ef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2344 = getelementptr inbounds %struct.GPR, %struct.GPR* %2343, i32 0, i32 33
  %2345 = getelementptr inbounds %struct.Reg, %struct.Reg* %2344, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %2345 to i64*
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2347 = getelementptr inbounds %struct.GPR, %struct.GPR* %2346, i32 0, i32 9
  %2348 = getelementptr inbounds %struct.Reg, %struct.Reg* %2347, i32 0, i32 0
  %RSI.i950 = bitcast %union.anon* %2348 to i64*
  %2349 = load i64, i64* %PC.i949
  %2350 = add i64 %2349, 5
  store i64 %2350, i64* %PC.i949
  store i64 4227, i64* %RSI.i950, align 8
  store %struct.Memory* %loadMem_462ef4, %struct.Memory** %MEMORY
  %loadMem_462ef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2352 = getelementptr inbounds %struct.GPR, %struct.GPR* %2351, i32 0, i32 33
  %2353 = getelementptr inbounds %struct.Reg, %struct.Reg* %2352, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %2353 to i64*
  %2354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2355 = getelementptr inbounds %struct.GPR, %struct.GPR* %2354, i32 0, i32 7
  %2356 = getelementptr inbounds %struct.Reg, %struct.Reg* %2355, i32 0, i32 0
  %RDX.i948 = bitcast %union.anon* %2356 to i64*
  %2357 = load i64, i64* %PC.i947
  %2358 = add i64 %2357, 10
  store i64 %2358, i64* %PC.i947
  store i64 ptrtoint (%G__0x57fdbf_type* @G__0x57fdbf to i64), i64* %RDX.i948, align 8
  store %struct.Memory* %loadMem_462ef9, %struct.Memory** %MEMORY
  %loadMem_462f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2360 = getelementptr inbounds %struct.GPR, %struct.GPR* %2359, i32 0, i32 33
  %2361 = getelementptr inbounds %struct.Reg, %struct.Reg* %2360, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %2361 to i64*
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2363 = getelementptr inbounds %struct.GPR, %struct.GPR* %2362, i32 0, i32 1
  %2364 = getelementptr inbounds %struct.Reg, %struct.Reg* %2363, i32 0, i32 0
  %RAX.i946 = bitcast %union.anon* %2364 to i64*
  %2365 = load i64, i64* %PC.i945
  %2366 = add i64 %2365, 5
  store i64 %2366, i64* %PC.i945
  store i64 4294967295, i64* %RAX.i946, align 8
  store %struct.Memory* %loadMem_462f03, %struct.Memory** %MEMORY
  %loadMem_462f08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2368 = getelementptr inbounds %struct.GPR, %struct.GPR* %2367, i32 0, i32 33
  %2369 = getelementptr inbounds %struct.Reg, %struct.Reg* %2368, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %2369 to i64*
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2371 = getelementptr inbounds %struct.GPR, %struct.GPR* %2370, i32 0, i32 1
  %2372 = getelementptr inbounds %struct.Reg, %struct.Reg* %2371, i32 0, i32 0
  %EAX.i943 = bitcast %union.anon* %2372 to i32*
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2374 = getelementptr inbounds %struct.GPR, %struct.GPR* %2373, i32 0, i32 5
  %2375 = getelementptr inbounds %struct.Reg, %struct.Reg* %2374, i32 0, i32 0
  %RCX.i944 = bitcast %union.anon* %2375 to i64*
  %2376 = load i32, i32* %EAX.i943
  %2377 = zext i32 %2376 to i64
  %2378 = load i64, i64* %PC.i942
  %2379 = add i64 %2378, 2
  store i64 %2379, i64* %PC.i942
  %2380 = and i64 %2377, 4294967295
  store i64 %2380, i64* %RCX.i944, align 8
  store %struct.Memory* %loadMem_462f08, %struct.Memory** %MEMORY
  %loadMem_462f0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2382 = getelementptr inbounds %struct.GPR, %struct.GPR* %2381, i32 0, i32 33
  %2383 = getelementptr inbounds %struct.Reg, %struct.Reg* %2382, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %2383 to i64*
  %2384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2385 = getelementptr inbounds %struct.GPR, %struct.GPR* %2384, i32 0, i32 1
  %2386 = getelementptr inbounds %struct.Reg, %struct.Reg* %2385, i32 0, i32 0
  %EAX.i940 = bitcast %union.anon* %2386 to i32*
  %2387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2388 = getelementptr inbounds %struct.GPR, %struct.GPR* %2387, i32 0, i32 17
  %2389 = getelementptr inbounds %struct.Reg, %struct.Reg* %2388, i32 0, i32 0
  %R8D.i941 = bitcast %union.anon* %2389 to i32*
  %2390 = bitcast i32* %R8D.i941 to i64*
  %2391 = load i32, i32* %EAX.i940
  %2392 = zext i32 %2391 to i64
  %2393 = load i64, i64* %PC.i939
  %2394 = add i64 %2393, 3
  store i64 %2394, i64* %PC.i939
  %2395 = and i64 %2392, 4294967295
  store i64 %2395, i64* %2390, align 8
  store %struct.Memory* %loadMem_462f0a, %struct.Memory** %MEMORY
  %loadMem1_462f0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2397 = getelementptr inbounds %struct.GPR, %struct.GPR* %2396, i32 0, i32 33
  %2398 = getelementptr inbounds %struct.Reg, %struct.Reg* %2397, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %2398 to i64*
  %2399 = load i64, i64* %PC.i938
  %2400 = add i64 %2399, -69245
  %2401 = load i64, i64* %PC.i938
  %2402 = add i64 %2401, 5
  %2403 = load i64, i64* %PC.i938
  %2404 = add i64 %2403, 5
  store i64 %2404, i64* %PC.i938
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2406 = load i64, i64* %2405, align 8
  %2407 = add i64 %2406, -8
  %2408 = inttoptr i64 %2407 to i64*
  store i64 %2402, i64* %2408
  store i64 %2407, i64* %2405, align 8
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2400, i64* %2409, align 8
  store %struct.Memory* %loadMem1_462f0d, %struct.Memory** %MEMORY
  %loadMem2_462f0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_462f0d = load i64, i64* %3
  %call2_462f0d = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_462f0d, %struct.Memory* %loadMem2_462f0d)
  store %struct.Memory* %call2_462f0d, %struct.Memory** %MEMORY
  br label %block_.L_462f12

block_.L_462f12:                                  ; preds = %block_.L_462eea, %block_462ee5
  %loadMem_462f12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2411 = getelementptr inbounds %struct.GPR, %struct.GPR* %2410, i32 0, i32 33
  %2412 = getelementptr inbounds %struct.Reg, %struct.Reg* %2411, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %2412 to i64*
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2414 = getelementptr inbounds %struct.GPR, %struct.GPR* %2413, i32 0, i32 1
  %2415 = getelementptr inbounds %struct.Reg, %struct.Reg* %2414, i32 0, i32 0
  %RAX.i936 = bitcast %union.anon* %2415 to i64*
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2417 = getelementptr inbounds %struct.GPR, %struct.GPR* %2416, i32 0, i32 15
  %2418 = getelementptr inbounds %struct.Reg, %struct.Reg* %2417, i32 0, i32 0
  %RBP.i937 = bitcast %union.anon* %2418 to i64*
  %2419 = load i64, i64* %RBP.i937
  %2420 = sub i64 %2419, 132
  %2421 = load i64, i64* %PC.i935
  %2422 = add i64 %2421, 7
  store i64 %2422, i64* %PC.i935
  %2423 = inttoptr i64 %2420 to i32*
  %2424 = load i32, i32* %2423
  %2425 = sext i32 %2424 to i64
  store i64 %2425, i64* %RAX.i936, align 8
  store %struct.Memory* %loadMem_462f12, %struct.Memory** %MEMORY
  %loadMem_462f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2427 = getelementptr inbounds %struct.GPR, %struct.GPR* %2426, i32 0, i32 33
  %2428 = getelementptr inbounds %struct.Reg, %struct.Reg* %2427, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %2428 to i64*
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2430 = getelementptr inbounds %struct.GPR, %struct.GPR* %2429, i32 0, i32 1
  %2431 = getelementptr inbounds %struct.Reg, %struct.Reg* %2430, i32 0, i32 0
  %RAX.i933 = bitcast %union.anon* %2431 to i64*
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2433 = getelementptr inbounds %struct.GPR, %struct.GPR* %2432, i32 0, i32 5
  %2434 = getelementptr inbounds %struct.Reg, %struct.Reg* %2433, i32 0, i32 0
  %RCX.i934 = bitcast %union.anon* %2434 to i64*
  %2435 = load i64, i64* %RAX.i933
  %2436 = mul i64 %2435, 4
  %2437 = add i64 %2436, 8060064
  %2438 = load i64, i64* %PC.i932
  %2439 = add i64 %2438, 7
  store i64 %2439, i64* %PC.i932
  %2440 = inttoptr i64 %2437 to i32*
  %2441 = load i32, i32* %2440
  %2442 = zext i32 %2441 to i64
  store i64 %2442, i64* %RCX.i934, align 8
  store %struct.Memory* %loadMem_462f19, %struct.Memory** %MEMORY
  %loadMem_462f20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2444 = getelementptr inbounds %struct.GPR, %struct.GPR* %2443, i32 0, i32 33
  %2445 = getelementptr inbounds %struct.Reg, %struct.Reg* %2444, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %2445 to i64*
  %2446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2447 = getelementptr inbounds %struct.GPR, %struct.GPR* %2446, i32 0, i32 1
  %2448 = getelementptr inbounds %struct.Reg, %struct.Reg* %2447, i32 0, i32 0
  %RAX.i930 = bitcast %union.anon* %2448 to i64*
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2450 = getelementptr inbounds %struct.GPR, %struct.GPR* %2449, i32 0, i32 15
  %2451 = getelementptr inbounds %struct.Reg, %struct.Reg* %2450, i32 0, i32 0
  %RBP.i931 = bitcast %union.anon* %2451 to i64*
  %2452 = load i64, i64* %RBP.i931
  %2453 = sub i64 %2452, 48
  %2454 = load i64, i64* %PC.i929
  %2455 = add i64 %2454, 4
  store i64 %2455, i64* %PC.i929
  %2456 = inttoptr i64 %2453 to i64*
  %2457 = load i64, i64* %2456
  store i64 %2457, i64* %RAX.i930, align 8
  store %struct.Memory* %loadMem_462f20, %struct.Memory** %MEMORY
  %loadMem_462f24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2459 = getelementptr inbounds %struct.GPR, %struct.GPR* %2458, i32 0, i32 33
  %2460 = getelementptr inbounds %struct.Reg, %struct.Reg* %2459, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %2460 to i64*
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2462 = getelementptr inbounds %struct.GPR, %struct.GPR* %2461, i32 0, i32 7
  %2463 = getelementptr inbounds %struct.Reg, %struct.Reg* %2462, i32 0, i32 0
  %RDX.i927 = bitcast %union.anon* %2463 to i64*
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2465 = getelementptr inbounds %struct.GPR, %struct.GPR* %2464, i32 0, i32 15
  %2466 = getelementptr inbounds %struct.Reg, %struct.Reg* %2465, i32 0, i32 0
  %RBP.i928 = bitcast %union.anon* %2466 to i64*
  %2467 = load i64, i64* %RBP.i928
  %2468 = sub i64 %2467, 80
  %2469 = load i64, i64* %PC.i926
  %2470 = add i64 %2469, 4
  store i64 %2470, i64* %PC.i926
  %2471 = inttoptr i64 %2468 to i32*
  %2472 = load i32, i32* %2471
  %2473 = sext i32 %2472 to i64
  store i64 %2473, i64* %RDX.i927, align 8
  store %struct.Memory* %loadMem_462f24, %struct.Memory** %MEMORY
  %loadMem_462f28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2475 = getelementptr inbounds %struct.GPR, %struct.GPR* %2474, i32 0, i32 33
  %2476 = getelementptr inbounds %struct.Reg, %struct.Reg* %2475, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %2476 to i64*
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 1
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %RAX.i923 = bitcast %union.anon* %2479 to i64*
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2481 = getelementptr inbounds %struct.GPR, %struct.GPR* %2480, i32 0, i32 5
  %2482 = getelementptr inbounds %struct.Reg, %struct.Reg* %2481, i32 0, i32 0
  %RCX.i924 = bitcast %union.anon* %2482 to i64*
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2484 = getelementptr inbounds %struct.GPR, %struct.GPR* %2483, i32 0, i32 7
  %2485 = getelementptr inbounds %struct.Reg, %struct.Reg* %2484, i32 0, i32 0
  %RDX.i925 = bitcast %union.anon* %2485 to i64*
  %2486 = load i64, i64* %RCX.i924
  %2487 = load i64, i64* %RAX.i923
  %2488 = load i64, i64* %RDX.i925
  %2489 = mul i64 %2488, 4
  %2490 = add i64 %2487, 200
  %2491 = add i64 %2490, %2489
  %2492 = load i64, i64* %PC.i922
  %2493 = add i64 %2492, 7
  store i64 %2493, i64* %PC.i922
  %2494 = trunc i64 %2486 to i32
  %2495 = inttoptr i64 %2491 to i32*
  %2496 = load i32, i32* %2495
  %2497 = add i32 %2496, %2494
  %2498 = zext i32 %2497 to i64
  store i64 %2498, i64* %RCX.i924, align 8
  %2499 = icmp ult i32 %2497, %2494
  %2500 = icmp ult i32 %2497, %2496
  %2501 = or i1 %2499, %2500
  %2502 = zext i1 %2501 to i8
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2502, i8* %2503, align 1
  %2504 = and i32 %2497, 255
  %2505 = call i32 @llvm.ctpop.i32(i32 %2504)
  %2506 = trunc i32 %2505 to i8
  %2507 = and i8 %2506, 1
  %2508 = xor i8 %2507, 1
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2508, i8* %2509, align 1
  %2510 = xor i32 %2496, %2494
  %2511 = xor i32 %2510, %2497
  %2512 = lshr i32 %2511, 4
  %2513 = trunc i32 %2512 to i8
  %2514 = and i8 %2513, 1
  %2515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2514, i8* %2515, align 1
  %2516 = icmp eq i32 %2497, 0
  %2517 = zext i1 %2516 to i8
  %2518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2517, i8* %2518, align 1
  %2519 = lshr i32 %2497, 31
  %2520 = trunc i32 %2519 to i8
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2520, i8* %2521, align 1
  %2522 = lshr i32 %2494, 31
  %2523 = lshr i32 %2496, 31
  %2524 = xor i32 %2519, %2522
  %2525 = xor i32 %2519, %2523
  %2526 = add i32 %2524, %2525
  %2527 = icmp eq i32 %2526, 2
  %2528 = zext i1 %2527 to i8
  %2529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2528, i8* %2529, align 1
  store %struct.Memory* %loadMem_462f28, %struct.Memory** %MEMORY
  %loadMem_462f2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2531 = getelementptr inbounds %struct.GPR, %struct.GPR* %2530, i32 0, i32 33
  %2532 = getelementptr inbounds %struct.Reg, %struct.Reg* %2531, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %2532 to i64*
  %2533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2534 = getelementptr inbounds %struct.GPR, %struct.GPR* %2533, i32 0, i32 5
  %2535 = getelementptr inbounds %struct.Reg, %struct.Reg* %2534, i32 0, i32 0
  %ECX.i919 = bitcast %union.anon* %2535 to i32*
  %2536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2537 = getelementptr inbounds %struct.GPR, %struct.GPR* %2536, i32 0, i32 1
  %2538 = getelementptr inbounds %struct.Reg, %struct.Reg* %2537, i32 0, i32 0
  %RAX.i920 = bitcast %union.anon* %2538 to i64*
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2540 = getelementptr inbounds %struct.GPR, %struct.GPR* %2539, i32 0, i32 7
  %2541 = getelementptr inbounds %struct.Reg, %struct.Reg* %2540, i32 0, i32 0
  %RDX.i921 = bitcast %union.anon* %2541 to i64*
  %2542 = load i64, i64* %RAX.i920
  %2543 = load i64, i64* %RDX.i921
  %2544 = mul i64 %2543, 4
  %2545 = add i64 %2542, 200
  %2546 = add i64 %2545, %2544
  %2547 = load i32, i32* %ECX.i919
  %2548 = zext i32 %2547 to i64
  %2549 = load i64, i64* %PC.i918
  %2550 = add i64 %2549, 7
  store i64 %2550, i64* %PC.i918
  %2551 = inttoptr i64 %2546 to i32*
  store i32 %2547, i32* %2551
  store %struct.Memory* %loadMem_462f2f, %struct.Memory** %MEMORY
  %loadMem_462f36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2553 = getelementptr inbounds %struct.GPR, %struct.GPR* %2552, i32 0, i32 33
  %2554 = getelementptr inbounds %struct.Reg, %struct.Reg* %2553, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %2554 to i64*
  %2555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2556 = getelementptr inbounds %struct.GPR, %struct.GPR* %2555, i32 0, i32 15
  %2557 = getelementptr inbounds %struct.Reg, %struct.Reg* %2556, i32 0, i32 0
  %RBP.i917 = bitcast %union.anon* %2557 to i64*
  %2558 = load i64, i64* %RBP.i917
  %2559 = sub i64 %2558, 104
  %2560 = load i64, i64* %PC.i916
  %2561 = add i64 %2560, 4
  store i64 %2561, i64* %PC.i916
  %2562 = inttoptr i64 %2559 to i32*
  %2563 = load i32, i32* %2562
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2564, align 1
  %2565 = and i32 %2563, 255
  %2566 = call i32 @llvm.ctpop.i32(i32 %2565)
  %2567 = trunc i32 %2566 to i8
  %2568 = and i8 %2567, 1
  %2569 = xor i8 %2568, 1
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2569, i8* %2570, align 1
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2571, align 1
  %2572 = icmp eq i32 %2563, 0
  %2573 = zext i1 %2572 to i8
  %2574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2573, i8* %2574, align 1
  %2575 = lshr i32 %2563, 31
  %2576 = trunc i32 %2575 to i8
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2576, i8* %2577, align 1
  %2578 = lshr i32 %2563, 31
  %2579 = xor i32 %2575, %2578
  %2580 = add i32 %2579, %2578
  %2581 = icmp eq i32 %2580, 2
  %2582 = zext i1 %2581 to i8
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2582, i8* %2583, align 1
  store %struct.Memory* %loadMem_462f36, %struct.Memory** %MEMORY
  %loadMem_462f3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2585 = getelementptr inbounds %struct.GPR, %struct.GPR* %2584, i32 0, i32 33
  %2586 = getelementptr inbounds %struct.Reg, %struct.Reg* %2585, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %2586 to i64*
  %2587 = load i64, i64* %PC.i915
  %2588 = add i64 %2587, 16
  %2589 = load i64, i64* %PC.i915
  %2590 = add i64 %2589, 6
  %2591 = load i64, i64* %PC.i915
  %2592 = add i64 %2591, 6
  store i64 %2592, i64* %PC.i915
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2594 = load i8, i8* %2593, align 1
  store i8 %2594, i8* %BRANCH_TAKEN, align 1
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2596 = icmp ne i8 %2594, 0
  %2597 = select i1 %2596, i64 %2588, i64 %2590
  store i64 %2597, i64* %2595, align 8
  store %struct.Memory* %loadMem_462f3a, %struct.Memory** %MEMORY
  %loadBr_462f3a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462f3a = icmp eq i8 %loadBr_462f3a, 1
  br i1 %cmpBr_462f3a, label %block_.L_462f4a, label %block_462f40

block_462f40:                                     ; preds = %block_.L_462f12
  %loadMem_462f40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2599 = getelementptr inbounds %struct.GPR, %struct.GPR* %2598, i32 0, i32 33
  %2600 = getelementptr inbounds %struct.Reg, %struct.Reg* %2599, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %2600 to i64*
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2602 = getelementptr inbounds %struct.GPR, %struct.GPR* %2601, i32 0, i32 15
  %2603 = getelementptr inbounds %struct.Reg, %struct.Reg* %2602, i32 0, i32 0
  %RBP.i914 = bitcast %union.anon* %2603 to i64*
  %2604 = load i64, i64* %RBP.i914
  %2605 = sub i64 %2604, 120
  %2606 = load i64, i64* %PC.i913
  %2607 = add i64 %2606, 4
  store i64 %2607, i64* %PC.i913
  %2608 = inttoptr i64 %2605 to i32*
  %2609 = load i32, i32* %2608
  %2610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2610, align 1
  %2611 = and i32 %2609, 255
  %2612 = call i32 @llvm.ctpop.i32(i32 %2611)
  %2613 = trunc i32 %2612 to i8
  %2614 = and i8 %2613, 1
  %2615 = xor i8 %2614, 1
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2615, i8* %2616, align 1
  %2617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2617, align 1
  %2618 = icmp eq i32 %2609, 0
  %2619 = zext i1 %2618 to i8
  %2620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2619, i8* %2620, align 1
  %2621 = lshr i32 %2609, 31
  %2622 = trunc i32 %2621 to i8
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2622, i8* %2623, align 1
  %2624 = lshr i32 %2609, 31
  %2625 = xor i32 %2621, %2624
  %2626 = add i32 %2625, %2624
  %2627 = icmp eq i32 %2626, 2
  %2628 = zext i1 %2627 to i8
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2628, i8* %2629, align 1
  store %struct.Memory* %loadMem_462f40, %struct.Memory** %MEMORY
  %loadMem_462f44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2631 = getelementptr inbounds %struct.GPR, %struct.GPR* %2630, i32 0, i32 33
  %2632 = getelementptr inbounds %struct.Reg, %struct.Reg* %2631, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %2632 to i64*
  %2633 = load i64, i64* %PC.i912
  %2634 = add i64 %2633, 35
  %2635 = load i64, i64* %PC.i912
  %2636 = add i64 %2635, 6
  %2637 = load i64, i64* %PC.i912
  %2638 = add i64 %2637, 6
  store i64 %2638, i64* %PC.i912
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2640 = load i8, i8* %2639, align 1
  %2641 = icmp ne i8 %2640, 0
  %2642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2643 = load i8, i8* %2642, align 1
  %2644 = icmp ne i8 %2643, 0
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2646 = load i8, i8* %2645, align 1
  %2647 = icmp ne i8 %2646, 0
  %2648 = xor i1 %2644, %2647
  %2649 = or i1 %2641, %2648
  %2650 = zext i1 %2649 to i8
  store i8 %2650, i8* %BRANCH_TAKEN, align 1
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2652 = select i1 %2649, i64 %2634, i64 %2636
  store i64 %2652, i64* %2651, align 8
  store %struct.Memory* %loadMem_462f44, %struct.Memory** %MEMORY
  %loadBr_462f44 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462f44 = icmp eq i8 %loadBr_462f44, 1
  br i1 %cmpBr_462f44, label %block_.L_462f67, label %block_.L_462f4a

block_.L_462f4a:                                  ; preds = %block_462f40, %block_.L_462f12
  %loadMem_462f4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2654 = getelementptr inbounds %struct.GPR, %struct.GPR* %2653, i32 0, i32 33
  %2655 = getelementptr inbounds %struct.Reg, %struct.Reg* %2654, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %2655 to i64*
  %2656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2657 = getelementptr inbounds %struct.GPR, %struct.GPR* %2656, i32 0, i32 1
  %2658 = getelementptr inbounds %struct.Reg, %struct.Reg* %2657, i32 0, i32 0
  %RAX.i911 = bitcast %union.anon* %2658 to i64*
  %2659 = load i64, i64* %PC.i910
  %2660 = add i64 %2659, 7
  store i64 %2660, i64* %PC.i910
  %2661 = load i32, i32* bitcast (%G_0x7afcb4_type* @G_0x7afcb4 to i32*)
  %2662 = zext i32 %2661 to i64
  store i64 %2662, i64* %RAX.i911, align 8
  store %struct.Memory* %loadMem_462f4a, %struct.Memory** %MEMORY
  %loadMem_462f51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2664 = getelementptr inbounds %struct.GPR, %struct.GPR* %2663, i32 0, i32 33
  %2665 = getelementptr inbounds %struct.Reg, %struct.Reg* %2664, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %2665 to i64*
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2667 = getelementptr inbounds %struct.GPR, %struct.GPR* %2666, i32 0, i32 5
  %2668 = getelementptr inbounds %struct.Reg, %struct.Reg* %2667, i32 0, i32 0
  %RCX.i908 = bitcast %union.anon* %2668 to i64*
  %2669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2670 = getelementptr inbounds %struct.GPR, %struct.GPR* %2669, i32 0, i32 15
  %2671 = getelementptr inbounds %struct.Reg, %struct.Reg* %2670, i32 0, i32 0
  %RBP.i909 = bitcast %union.anon* %2671 to i64*
  %2672 = load i64, i64* %RBP.i909
  %2673 = sub i64 %2672, 48
  %2674 = load i64, i64* %PC.i907
  %2675 = add i64 %2674, 4
  store i64 %2675, i64* %PC.i907
  %2676 = inttoptr i64 %2673 to i64*
  %2677 = load i64, i64* %2676
  store i64 %2677, i64* %RCX.i908, align 8
  store %struct.Memory* %loadMem_462f51, %struct.Memory** %MEMORY
  %loadMem_462f55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2679 = getelementptr inbounds %struct.GPR, %struct.GPR* %2678, i32 0, i32 33
  %2680 = getelementptr inbounds %struct.Reg, %struct.Reg* %2679, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %2680 to i64*
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2682 = getelementptr inbounds %struct.GPR, %struct.GPR* %2681, i32 0, i32 7
  %2683 = getelementptr inbounds %struct.Reg, %struct.Reg* %2682, i32 0, i32 0
  %RDX.i905 = bitcast %union.anon* %2683 to i64*
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2685 = getelementptr inbounds %struct.GPR, %struct.GPR* %2684, i32 0, i32 15
  %2686 = getelementptr inbounds %struct.Reg, %struct.Reg* %2685, i32 0, i32 0
  %RBP.i906 = bitcast %union.anon* %2686 to i64*
  %2687 = load i64, i64* %RBP.i906
  %2688 = sub i64 %2687, 80
  %2689 = load i64, i64* %PC.i904
  %2690 = add i64 %2689, 4
  store i64 %2690, i64* %PC.i904
  %2691 = inttoptr i64 %2688 to i32*
  %2692 = load i32, i32* %2691
  %2693 = sext i32 %2692 to i64
  store i64 %2693, i64* %RDX.i905, align 8
  store %struct.Memory* %loadMem_462f55, %struct.Memory** %MEMORY
  %loadMem_462f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2695 = getelementptr inbounds %struct.GPR, %struct.GPR* %2694, i32 0, i32 33
  %2696 = getelementptr inbounds %struct.Reg, %struct.Reg* %2695, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %2696 to i64*
  %2697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2698 = getelementptr inbounds %struct.GPR, %struct.GPR* %2697, i32 0, i32 1
  %2699 = getelementptr inbounds %struct.Reg, %struct.Reg* %2698, i32 0, i32 0
  %RAX.i901 = bitcast %union.anon* %2699 to i64*
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2701 = getelementptr inbounds %struct.GPR, %struct.GPR* %2700, i32 0, i32 5
  %2702 = getelementptr inbounds %struct.Reg, %struct.Reg* %2701, i32 0, i32 0
  %RCX.i902 = bitcast %union.anon* %2702 to i64*
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2704 = getelementptr inbounds %struct.GPR, %struct.GPR* %2703, i32 0, i32 7
  %2705 = getelementptr inbounds %struct.Reg, %struct.Reg* %2704, i32 0, i32 0
  %RDX.i903 = bitcast %union.anon* %2705 to i64*
  %2706 = load i64, i64* %RAX.i901
  %2707 = load i64, i64* %RCX.i902
  %2708 = load i64, i64* %RDX.i903
  %2709 = mul i64 %2708, 4
  %2710 = add i64 %2707, 200
  %2711 = add i64 %2710, %2709
  %2712 = load i64, i64* %PC.i900
  %2713 = add i64 %2712, 7
  store i64 %2713, i64* %PC.i900
  %2714 = trunc i64 %2706 to i32
  %2715 = inttoptr i64 %2711 to i32*
  %2716 = load i32, i32* %2715
  %2717 = add i32 %2716, %2714
  %2718 = zext i32 %2717 to i64
  store i64 %2718, i64* %RAX.i901, align 8
  %2719 = icmp ult i32 %2717, %2714
  %2720 = icmp ult i32 %2717, %2716
  %2721 = or i1 %2719, %2720
  %2722 = zext i1 %2721 to i8
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2722, i8* %2723, align 1
  %2724 = and i32 %2717, 255
  %2725 = call i32 @llvm.ctpop.i32(i32 %2724)
  %2726 = trunc i32 %2725 to i8
  %2727 = and i8 %2726, 1
  %2728 = xor i8 %2727, 1
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2728, i8* %2729, align 1
  %2730 = xor i32 %2716, %2714
  %2731 = xor i32 %2730, %2717
  %2732 = lshr i32 %2731, 4
  %2733 = trunc i32 %2732 to i8
  %2734 = and i8 %2733, 1
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2734, i8* %2735, align 1
  %2736 = icmp eq i32 %2717, 0
  %2737 = zext i1 %2736 to i8
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2737, i8* %2738, align 1
  %2739 = lshr i32 %2717, 31
  %2740 = trunc i32 %2739 to i8
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2740, i8* %2741, align 1
  %2742 = lshr i32 %2714, 31
  %2743 = lshr i32 %2716, 31
  %2744 = xor i32 %2739, %2742
  %2745 = xor i32 %2739, %2743
  %2746 = add i32 %2744, %2745
  %2747 = icmp eq i32 %2746, 2
  %2748 = zext i1 %2747 to i8
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2748, i8* %2749, align 1
  store %struct.Memory* %loadMem_462f59, %struct.Memory** %MEMORY
  %loadMem_462f60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2751 = getelementptr inbounds %struct.GPR, %struct.GPR* %2750, i32 0, i32 33
  %2752 = getelementptr inbounds %struct.Reg, %struct.Reg* %2751, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %2752 to i64*
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2754 = getelementptr inbounds %struct.GPR, %struct.GPR* %2753, i32 0, i32 1
  %2755 = getelementptr inbounds %struct.Reg, %struct.Reg* %2754, i32 0, i32 0
  %EAX.i897 = bitcast %union.anon* %2755 to i32*
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2757 = getelementptr inbounds %struct.GPR, %struct.GPR* %2756, i32 0, i32 5
  %2758 = getelementptr inbounds %struct.Reg, %struct.Reg* %2757, i32 0, i32 0
  %RCX.i898 = bitcast %union.anon* %2758 to i64*
  %2759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2760 = getelementptr inbounds %struct.GPR, %struct.GPR* %2759, i32 0, i32 7
  %2761 = getelementptr inbounds %struct.Reg, %struct.Reg* %2760, i32 0, i32 0
  %RDX.i899 = bitcast %union.anon* %2761 to i64*
  %2762 = load i64, i64* %RCX.i898
  %2763 = load i64, i64* %RDX.i899
  %2764 = mul i64 %2763, 4
  %2765 = add i64 %2762, 200
  %2766 = add i64 %2765, %2764
  %2767 = load i32, i32* %EAX.i897
  %2768 = zext i32 %2767 to i64
  %2769 = load i64, i64* %PC.i896
  %2770 = add i64 %2769, 7
  store i64 %2770, i64* %PC.i896
  %2771 = inttoptr i64 %2766 to i32*
  store i32 %2767, i32* %2771
  store %struct.Memory* %loadMem_462f60, %struct.Memory** %MEMORY
  br label %block_.L_462f67

block_.L_462f67:                                  ; preds = %block_.L_462f4a, %block_462f40
  %loadMem_462f67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2773 = getelementptr inbounds %struct.GPR, %struct.GPR* %2772, i32 0, i32 33
  %2774 = getelementptr inbounds %struct.Reg, %struct.Reg* %2773, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %2774 to i64*
  %2775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2776 = getelementptr inbounds %struct.GPR, %struct.GPR* %2775, i32 0, i32 15
  %2777 = getelementptr inbounds %struct.Reg, %struct.Reg* %2776, i32 0, i32 0
  %RBP.i895 = bitcast %union.anon* %2777 to i64*
  %2778 = load i64, i64* %RBP.i895
  %2779 = sub i64 %2778, 120
  %2780 = load i64, i64* %PC.i894
  %2781 = add i64 %2780, 4
  store i64 %2781, i64* %PC.i894
  %2782 = inttoptr i64 %2779 to i32*
  %2783 = load i32, i32* %2782
  %2784 = sub i32 %2783, 5
  %2785 = icmp ult i32 %2783, 5
  %2786 = zext i1 %2785 to i8
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2786, i8* %2787, align 1
  %2788 = and i32 %2784, 255
  %2789 = call i32 @llvm.ctpop.i32(i32 %2788)
  %2790 = trunc i32 %2789 to i8
  %2791 = and i8 %2790, 1
  %2792 = xor i8 %2791, 1
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2792, i8* %2793, align 1
  %2794 = xor i32 %2783, 5
  %2795 = xor i32 %2794, %2784
  %2796 = lshr i32 %2795, 4
  %2797 = trunc i32 %2796 to i8
  %2798 = and i8 %2797, 1
  %2799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2798, i8* %2799, align 1
  %2800 = icmp eq i32 %2784, 0
  %2801 = zext i1 %2800 to i8
  %2802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2801, i8* %2802, align 1
  %2803 = lshr i32 %2784, 31
  %2804 = trunc i32 %2803 to i8
  %2805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2804, i8* %2805, align 1
  %2806 = lshr i32 %2783, 31
  %2807 = xor i32 %2803, %2806
  %2808 = add i32 %2807, %2806
  %2809 = icmp eq i32 %2808, 2
  %2810 = zext i1 %2809 to i8
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2810, i8* %2811, align 1
  store %struct.Memory* %loadMem_462f67, %struct.Memory** %MEMORY
  %loadMem_462f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2813 = getelementptr inbounds %struct.GPR, %struct.GPR* %2812, i32 0, i32 33
  %2814 = getelementptr inbounds %struct.Reg, %struct.Reg* %2813, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %2814 to i64*
  %2815 = load i64, i64* %PC.i893
  %2816 = add i64 %2815, 44
  %2817 = load i64, i64* %PC.i893
  %2818 = add i64 %2817, 6
  %2819 = load i64, i64* %PC.i893
  %2820 = add i64 %2819, 6
  store i64 %2820, i64* %PC.i893
  %2821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2822 = load i8, i8* %2821, align 1
  %2823 = icmp eq i8 %2822, 0
  %2824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2825 = load i8, i8* %2824, align 1
  %2826 = icmp ne i8 %2825, 0
  %2827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2828 = load i8, i8* %2827, align 1
  %2829 = icmp ne i8 %2828, 0
  %2830 = xor i1 %2826, %2829
  %2831 = xor i1 %2830, true
  %2832 = and i1 %2823, %2831
  %2833 = zext i1 %2832 to i8
  store i8 %2833, i8* %BRANCH_TAKEN, align 1
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2835 = select i1 %2832, i64 %2816, i64 %2818
  store i64 %2835, i64* %2834, align 8
  store %struct.Memory* %loadMem_462f6b, %struct.Memory** %MEMORY
  %loadBr_462f6b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462f6b = icmp eq i8 %loadBr_462f6b, 1
  br i1 %cmpBr_462f6b, label %block_.L_462f97, label %block_462f71

block_462f71:                                     ; preds = %block_.L_462f67
  %loadMem_462f71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2837 = getelementptr inbounds %struct.GPR, %struct.GPR* %2836, i32 0, i32 33
  %2838 = getelementptr inbounds %struct.Reg, %struct.Reg* %2837, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %2838 to i64*
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2840 = getelementptr inbounds %struct.GPR, %struct.GPR* %2839, i32 0, i32 1
  %2841 = getelementptr inbounds %struct.Reg, %struct.Reg* %2840, i32 0, i32 0
  %RAX.i891 = bitcast %union.anon* %2841 to i64*
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2843 = getelementptr inbounds %struct.GPR, %struct.GPR* %2842, i32 0, i32 15
  %2844 = getelementptr inbounds %struct.Reg, %struct.Reg* %2843, i32 0, i32 0
  %RBP.i892 = bitcast %union.anon* %2844 to i64*
  %2845 = load i64, i64* %RBP.i892
  %2846 = sub i64 %2845, 120
  %2847 = load i64, i64* %PC.i890
  %2848 = add i64 %2847, 4
  store i64 %2848, i64* %PC.i890
  %2849 = inttoptr i64 %2846 to i32*
  %2850 = load i32, i32* %2849
  %2851 = sext i32 %2850 to i64
  store i64 %2851, i64* %RAX.i891, align 8
  store %struct.Memory* %loadMem_462f71, %struct.Memory** %MEMORY
  %loadMem_462f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2853 = getelementptr inbounds %struct.GPR, %struct.GPR* %2852, i32 0, i32 33
  %2854 = getelementptr inbounds %struct.Reg, %struct.Reg* %2853, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %2854 to i64*
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2856 = getelementptr inbounds %struct.GPR, %struct.GPR* %2855, i32 0, i32 1
  %2857 = getelementptr inbounds %struct.Reg, %struct.Reg* %2856, i32 0, i32 0
  %RAX.i888 = bitcast %union.anon* %2857 to i64*
  %2858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2859 = getelementptr inbounds %struct.GPR, %struct.GPR* %2858, i32 0, i32 5
  %2860 = getelementptr inbounds %struct.Reg, %struct.Reg* %2859, i32 0, i32 0
  %RCX.i889 = bitcast %union.anon* %2860 to i64*
  %2861 = load i64, i64* %RAX.i888
  %2862 = mul i64 %2861, 4
  %2863 = add i64 %2862, 8060096
  %2864 = load i64, i64* %PC.i887
  %2865 = add i64 %2864, 7
  store i64 %2865, i64* %PC.i887
  %2866 = inttoptr i64 %2863 to i32*
  %2867 = load i32, i32* %2866
  %2868 = zext i32 %2867 to i64
  store i64 %2868, i64* %RCX.i889, align 8
  store %struct.Memory* %loadMem_462f75, %struct.Memory** %MEMORY
  %loadMem_462f7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2870 = getelementptr inbounds %struct.GPR, %struct.GPR* %2869, i32 0, i32 33
  %2871 = getelementptr inbounds %struct.Reg, %struct.Reg* %2870, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %2871 to i64*
  %2872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2873 = getelementptr inbounds %struct.GPR, %struct.GPR* %2872, i32 0, i32 1
  %2874 = getelementptr inbounds %struct.Reg, %struct.Reg* %2873, i32 0, i32 0
  %RAX.i885 = bitcast %union.anon* %2874 to i64*
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2876 = getelementptr inbounds %struct.GPR, %struct.GPR* %2875, i32 0, i32 15
  %2877 = getelementptr inbounds %struct.Reg, %struct.Reg* %2876, i32 0, i32 0
  %RBP.i886 = bitcast %union.anon* %2877 to i64*
  %2878 = load i64, i64* %RBP.i886
  %2879 = sub i64 %2878, 48
  %2880 = load i64, i64* %PC.i884
  %2881 = add i64 %2880, 4
  store i64 %2881, i64* %PC.i884
  %2882 = inttoptr i64 %2879 to i64*
  %2883 = load i64, i64* %2882
  store i64 %2883, i64* %RAX.i885, align 8
  store %struct.Memory* %loadMem_462f7c, %struct.Memory** %MEMORY
  %loadMem_462f80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2885 = getelementptr inbounds %struct.GPR, %struct.GPR* %2884, i32 0, i32 33
  %2886 = getelementptr inbounds %struct.Reg, %struct.Reg* %2885, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %2886 to i64*
  %2887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2888 = getelementptr inbounds %struct.GPR, %struct.GPR* %2887, i32 0, i32 7
  %2889 = getelementptr inbounds %struct.Reg, %struct.Reg* %2888, i32 0, i32 0
  %RDX.i882 = bitcast %union.anon* %2889 to i64*
  %2890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2891 = getelementptr inbounds %struct.GPR, %struct.GPR* %2890, i32 0, i32 15
  %2892 = getelementptr inbounds %struct.Reg, %struct.Reg* %2891, i32 0, i32 0
  %RBP.i883 = bitcast %union.anon* %2892 to i64*
  %2893 = load i64, i64* %RBP.i883
  %2894 = sub i64 %2893, 80
  %2895 = load i64, i64* %PC.i881
  %2896 = add i64 %2895, 4
  store i64 %2896, i64* %PC.i881
  %2897 = inttoptr i64 %2894 to i32*
  %2898 = load i32, i32* %2897
  %2899 = sext i32 %2898 to i64
  store i64 %2899, i64* %RDX.i882, align 8
  store %struct.Memory* %loadMem_462f80, %struct.Memory** %MEMORY
  %loadMem_462f84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2901 = getelementptr inbounds %struct.GPR, %struct.GPR* %2900, i32 0, i32 33
  %2902 = getelementptr inbounds %struct.Reg, %struct.Reg* %2901, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %2902 to i64*
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2904 = getelementptr inbounds %struct.GPR, %struct.GPR* %2903, i32 0, i32 1
  %2905 = getelementptr inbounds %struct.Reg, %struct.Reg* %2904, i32 0, i32 0
  %RAX.i878 = bitcast %union.anon* %2905 to i64*
  %2906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2907 = getelementptr inbounds %struct.GPR, %struct.GPR* %2906, i32 0, i32 5
  %2908 = getelementptr inbounds %struct.Reg, %struct.Reg* %2907, i32 0, i32 0
  %RCX.i879 = bitcast %union.anon* %2908 to i64*
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2910 = getelementptr inbounds %struct.GPR, %struct.GPR* %2909, i32 0, i32 7
  %2911 = getelementptr inbounds %struct.Reg, %struct.Reg* %2910, i32 0, i32 0
  %RDX.i880 = bitcast %union.anon* %2911 to i64*
  %2912 = load i64, i64* %RCX.i879
  %2913 = load i64, i64* %RAX.i878
  %2914 = load i64, i64* %RDX.i880
  %2915 = mul i64 %2914, 4
  %2916 = add i64 %2913, 200
  %2917 = add i64 %2916, %2915
  %2918 = load i64, i64* %PC.i877
  %2919 = add i64 %2918, 7
  store i64 %2919, i64* %PC.i877
  %2920 = trunc i64 %2912 to i32
  %2921 = inttoptr i64 %2917 to i32*
  %2922 = load i32, i32* %2921
  %2923 = add i32 %2922, %2920
  %2924 = zext i32 %2923 to i64
  store i64 %2924, i64* %RCX.i879, align 8
  %2925 = icmp ult i32 %2923, %2920
  %2926 = icmp ult i32 %2923, %2922
  %2927 = or i1 %2925, %2926
  %2928 = zext i1 %2927 to i8
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2928, i8* %2929, align 1
  %2930 = and i32 %2923, 255
  %2931 = call i32 @llvm.ctpop.i32(i32 %2930)
  %2932 = trunc i32 %2931 to i8
  %2933 = and i8 %2932, 1
  %2934 = xor i8 %2933, 1
  %2935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2934, i8* %2935, align 1
  %2936 = xor i32 %2922, %2920
  %2937 = xor i32 %2936, %2923
  %2938 = lshr i32 %2937, 4
  %2939 = trunc i32 %2938 to i8
  %2940 = and i8 %2939, 1
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2940, i8* %2941, align 1
  %2942 = icmp eq i32 %2923, 0
  %2943 = zext i1 %2942 to i8
  %2944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2943, i8* %2944, align 1
  %2945 = lshr i32 %2923, 31
  %2946 = trunc i32 %2945 to i8
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2946, i8* %2947, align 1
  %2948 = lshr i32 %2920, 31
  %2949 = lshr i32 %2922, 31
  %2950 = xor i32 %2945, %2948
  %2951 = xor i32 %2945, %2949
  %2952 = add i32 %2950, %2951
  %2953 = icmp eq i32 %2952, 2
  %2954 = zext i1 %2953 to i8
  %2955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2954, i8* %2955, align 1
  store %struct.Memory* %loadMem_462f84, %struct.Memory** %MEMORY
  %loadMem_462f8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2957 = getelementptr inbounds %struct.GPR, %struct.GPR* %2956, i32 0, i32 33
  %2958 = getelementptr inbounds %struct.Reg, %struct.Reg* %2957, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %2958 to i64*
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2960 = getelementptr inbounds %struct.GPR, %struct.GPR* %2959, i32 0, i32 5
  %2961 = getelementptr inbounds %struct.Reg, %struct.Reg* %2960, i32 0, i32 0
  %ECX.i874 = bitcast %union.anon* %2961 to i32*
  %2962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2963 = getelementptr inbounds %struct.GPR, %struct.GPR* %2962, i32 0, i32 1
  %2964 = getelementptr inbounds %struct.Reg, %struct.Reg* %2963, i32 0, i32 0
  %RAX.i875 = bitcast %union.anon* %2964 to i64*
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 7
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %RDX.i876 = bitcast %union.anon* %2967 to i64*
  %2968 = load i64, i64* %RAX.i875
  %2969 = load i64, i64* %RDX.i876
  %2970 = mul i64 %2969, 4
  %2971 = add i64 %2968, 200
  %2972 = add i64 %2971, %2970
  %2973 = load i32, i32* %ECX.i874
  %2974 = zext i32 %2973 to i64
  %2975 = load i64, i64* %PC.i873
  %2976 = add i64 %2975, 7
  store i64 %2976, i64* %PC.i873
  %2977 = inttoptr i64 %2972 to i32*
  store i32 %2973, i32* %2977
  store %struct.Memory* %loadMem_462f8b, %struct.Memory** %MEMORY
  %loadMem_462f92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2979 = getelementptr inbounds %struct.GPR, %struct.GPR* %2978, i32 0, i32 33
  %2980 = getelementptr inbounds %struct.Reg, %struct.Reg* %2979, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %2980 to i64*
  %2981 = load i64, i64* %PC.i872
  %2982 = add i64 %2981, 37
  %2983 = load i64, i64* %PC.i872
  %2984 = add i64 %2983, 5
  store i64 %2984, i64* %PC.i872
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2982, i64* %2985, align 8
  store %struct.Memory* %loadMem_462f92, %struct.Memory** %MEMORY
  br label %block_.L_462fb7

block_.L_462f97:                                  ; preds = %block_.L_462f67
  %loadMem_462f97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2987 = getelementptr inbounds %struct.GPR, %struct.GPR* %2986, i32 0, i32 33
  %2988 = getelementptr inbounds %struct.Reg, %struct.Reg* %2987, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %2988 to i64*
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2990 = getelementptr inbounds %struct.GPR, %struct.GPR* %2989, i32 0, i32 1
  %2991 = getelementptr inbounds %struct.Reg, %struct.Reg* %2990, i32 0, i32 0
  %RAX.i871 = bitcast %union.anon* %2991 to i64*
  %2992 = load i64, i64* %PC.i870
  %2993 = add i64 %2992, 7
  store i64 %2993, i64* %PC.i870
  %2994 = load i32, i32* bitcast (%G_0x7afcd4_type* @G_0x7afcd4 to i32*)
  %2995 = zext i32 %2994 to i64
  store i64 %2995, i64* %RAX.i871, align 8
  store %struct.Memory* %loadMem_462f97, %struct.Memory** %MEMORY
  %loadMem_462f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2997 = getelementptr inbounds %struct.GPR, %struct.GPR* %2996, i32 0, i32 33
  %2998 = getelementptr inbounds %struct.Reg, %struct.Reg* %2997, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %2998 to i64*
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3000 = getelementptr inbounds %struct.GPR, %struct.GPR* %2999, i32 0, i32 1
  %3001 = getelementptr inbounds %struct.Reg, %struct.Reg* %3000, i32 0, i32 0
  %RAX.i868 = bitcast %union.anon* %3001 to i64*
  %3002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3003 = getelementptr inbounds %struct.GPR, %struct.GPR* %3002, i32 0, i32 15
  %3004 = getelementptr inbounds %struct.Reg, %struct.Reg* %3003, i32 0, i32 0
  %RBP.i869 = bitcast %union.anon* %3004 to i64*
  %3005 = load i64, i64* %RAX.i868
  %3006 = load i64, i64* %RBP.i869
  %3007 = sub i64 %3006, 120
  %3008 = load i64, i64* %PC.i867
  %3009 = add i64 %3008, 3
  store i64 %3009, i64* %PC.i867
  %3010 = trunc i64 %3005 to i32
  %3011 = inttoptr i64 %3007 to i32*
  %3012 = load i32, i32* %3011
  %3013 = add i32 %3012, %3010
  %3014 = zext i32 %3013 to i64
  store i64 %3014, i64* %RAX.i868, align 8
  %3015 = icmp ult i32 %3013, %3010
  %3016 = icmp ult i32 %3013, %3012
  %3017 = or i1 %3015, %3016
  %3018 = zext i1 %3017 to i8
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3018, i8* %3019, align 1
  %3020 = and i32 %3013, 255
  %3021 = call i32 @llvm.ctpop.i32(i32 %3020)
  %3022 = trunc i32 %3021 to i8
  %3023 = and i8 %3022, 1
  %3024 = xor i8 %3023, 1
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3024, i8* %3025, align 1
  %3026 = xor i32 %3012, %3010
  %3027 = xor i32 %3026, %3013
  %3028 = lshr i32 %3027, 4
  %3029 = trunc i32 %3028 to i8
  %3030 = and i8 %3029, 1
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3030, i8* %3031, align 1
  %3032 = icmp eq i32 %3013, 0
  %3033 = zext i1 %3032 to i8
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3033, i8* %3034, align 1
  %3035 = lshr i32 %3013, 31
  %3036 = trunc i32 %3035 to i8
  %3037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3036, i8* %3037, align 1
  %3038 = lshr i32 %3010, 31
  %3039 = lshr i32 %3012, 31
  %3040 = xor i32 %3035, %3038
  %3041 = xor i32 %3035, %3039
  %3042 = add i32 %3040, %3041
  %3043 = icmp eq i32 %3042, 2
  %3044 = zext i1 %3043 to i8
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3044, i8* %3045, align 1
  store %struct.Memory* %loadMem_462f9e, %struct.Memory** %MEMORY
  %loadMem_462fa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3047 = getelementptr inbounds %struct.GPR, %struct.GPR* %3046, i32 0, i32 33
  %3048 = getelementptr inbounds %struct.Reg, %struct.Reg* %3047, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %3048 to i64*
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3050 = getelementptr inbounds %struct.GPR, %struct.GPR* %3049, i32 0, i32 5
  %3051 = getelementptr inbounds %struct.Reg, %struct.Reg* %3050, i32 0, i32 0
  %RCX.i865 = bitcast %union.anon* %3051 to i64*
  %3052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3053 = getelementptr inbounds %struct.GPR, %struct.GPR* %3052, i32 0, i32 15
  %3054 = getelementptr inbounds %struct.Reg, %struct.Reg* %3053, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %3054 to i64*
  %3055 = load i64, i64* %RBP.i866
  %3056 = sub i64 %3055, 48
  %3057 = load i64, i64* %PC.i864
  %3058 = add i64 %3057, 4
  store i64 %3058, i64* %PC.i864
  %3059 = inttoptr i64 %3056 to i64*
  %3060 = load i64, i64* %3059
  store i64 %3060, i64* %RCX.i865, align 8
  store %struct.Memory* %loadMem_462fa1, %struct.Memory** %MEMORY
  %loadMem_462fa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3062 = getelementptr inbounds %struct.GPR, %struct.GPR* %3061, i32 0, i32 33
  %3063 = getelementptr inbounds %struct.Reg, %struct.Reg* %3062, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %3063 to i64*
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3065 = getelementptr inbounds %struct.GPR, %struct.GPR* %3064, i32 0, i32 7
  %3066 = getelementptr inbounds %struct.Reg, %struct.Reg* %3065, i32 0, i32 0
  %RDX.i862 = bitcast %union.anon* %3066 to i64*
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3068 = getelementptr inbounds %struct.GPR, %struct.GPR* %3067, i32 0, i32 15
  %3069 = getelementptr inbounds %struct.Reg, %struct.Reg* %3068, i32 0, i32 0
  %RBP.i863 = bitcast %union.anon* %3069 to i64*
  %3070 = load i64, i64* %RBP.i863
  %3071 = sub i64 %3070, 80
  %3072 = load i64, i64* %PC.i861
  %3073 = add i64 %3072, 4
  store i64 %3073, i64* %PC.i861
  %3074 = inttoptr i64 %3071 to i32*
  %3075 = load i32, i32* %3074
  %3076 = sext i32 %3075 to i64
  store i64 %3076, i64* %RDX.i862, align 8
  store %struct.Memory* %loadMem_462fa5, %struct.Memory** %MEMORY
  %loadMem_462fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3078 = getelementptr inbounds %struct.GPR, %struct.GPR* %3077, i32 0, i32 33
  %3079 = getelementptr inbounds %struct.Reg, %struct.Reg* %3078, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %3079 to i64*
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3081 = getelementptr inbounds %struct.GPR, %struct.GPR* %3080, i32 0, i32 1
  %3082 = getelementptr inbounds %struct.Reg, %struct.Reg* %3081, i32 0, i32 0
  %RAX.i858 = bitcast %union.anon* %3082 to i64*
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3084 = getelementptr inbounds %struct.GPR, %struct.GPR* %3083, i32 0, i32 5
  %3085 = getelementptr inbounds %struct.Reg, %struct.Reg* %3084, i32 0, i32 0
  %RCX.i859 = bitcast %union.anon* %3085 to i64*
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3087 = getelementptr inbounds %struct.GPR, %struct.GPR* %3086, i32 0, i32 7
  %3088 = getelementptr inbounds %struct.Reg, %struct.Reg* %3087, i32 0, i32 0
  %RDX.i860 = bitcast %union.anon* %3088 to i64*
  %3089 = load i64, i64* %RAX.i858
  %3090 = load i64, i64* %RCX.i859
  %3091 = load i64, i64* %RDX.i860
  %3092 = mul i64 %3091, 4
  %3093 = add i64 %3090, 200
  %3094 = add i64 %3093, %3092
  %3095 = load i64, i64* %PC.i857
  %3096 = add i64 %3095, 7
  store i64 %3096, i64* %PC.i857
  %3097 = trunc i64 %3089 to i32
  %3098 = inttoptr i64 %3094 to i32*
  %3099 = load i32, i32* %3098
  %3100 = add i32 %3099, %3097
  %3101 = zext i32 %3100 to i64
  store i64 %3101, i64* %RAX.i858, align 8
  %3102 = icmp ult i32 %3100, %3097
  %3103 = icmp ult i32 %3100, %3099
  %3104 = or i1 %3102, %3103
  %3105 = zext i1 %3104 to i8
  %3106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3105, i8* %3106, align 1
  %3107 = and i32 %3100, 255
  %3108 = call i32 @llvm.ctpop.i32(i32 %3107)
  %3109 = trunc i32 %3108 to i8
  %3110 = and i8 %3109, 1
  %3111 = xor i8 %3110, 1
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3111, i8* %3112, align 1
  %3113 = xor i32 %3099, %3097
  %3114 = xor i32 %3113, %3100
  %3115 = lshr i32 %3114, 4
  %3116 = trunc i32 %3115 to i8
  %3117 = and i8 %3116, 1
  %3118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3117, i8* %3118, align 1
  %3119 = icmp eq i32 %3100, 0
  %3120 = zext i1 %3119 to i8
  %3121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3120, i8* %3121, align 1
  %3122 = lshr i32 %3100, 31
  %3123 = trunc i32 %3122 to i8
  %3124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3123, i8* %3124, align 1
  %3125 = lshr i32 %3097, 31
  %3126 = lshr i32 %3099, 31
  %3127 = xor i32 %3122, %3125
  %3128 = xor i32 %3122, %3126
  %3129 = add i32 %3127, %3128
  %3130 = icmp eq i32 %3129, 2
  %3131 = zext i1 %3130 to i8
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3131, i8* %3132, align 1
  store %struct.Memory* %loadMem_462fa9, %struct.Memory** %MEMORY
  %loadMem_462fb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3134 = getelementptr inbounds %struct.GPR, %struct.GPR* %3133, i32 0, i32 33
  %3135 = getelementptr inbounds %struct.Reg, %struct.Reg* %3134, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %3135 to i64*
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3137 = getelementptr inbounds %struct.GPR, %struct.GPR* %3136, i32 0, i32 1
  %3138 = getelementptr inbounds %struct.Reg, %struct.Reg* %3137, i32 0, i32 0
  %EAX.i854 = bitcast %union.anon* %3138 to i32*
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 5
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %RCX.i855 = bitcast %union.anon* %3141 to i64*
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3143 = getelementptr inbounds %struct.GPR, %struct.GPR* %3142, i32 0, i32 7
  %3144 = getelementptr inbounds %struct.Reg, %struct.Reg* %3143, i32 0, i32 0
  %RDX.i856 = bitcast %union.anon* %3144 to i64*
  %3145 = load i64, i64* %RCX.i855
  %3146 = load i64, i64* %RDX.i856
  %3147 = mul i64 %3146, 4
  %3148 = add i64 %3145, 200
  %3149 = add i64 %3148, %3147
  %3150 = load i32, i32* %EAX.i854
  %3151 = zext i32 %3150 to i64
  %3152 = load i64, i64* %PC.i853
  %3153 = add i64 %3152, 7
  store i64 %3153, i64* %PC.i853
  %3154 = inttoptr i64 %3149 to i32*
  store i32 %3150, i32* %3154
  store %struct.Memory* %loadMem_462fb0, %struct.Memory** %MEMORY
  br label %block_.L_462fb7

block_.L_462fb7:                                  ; preds = %block_.L_462f97, %block_462f71
  %loadMem_462fb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3156 = getelementptr inbounds %struct.GPR, %struct.GPR* %3155, i32 0, i32 33
  %3157 = getelementptr inbounds %struct.Reg, %struct.Reg* %3156, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %3157 to i64*
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3159 = getelementptr inbounds %struct.GPR, %struct.GPR* %3158, i32 0, i32 1
  %3160 = getelementptr inbounds %struct.Reg, %struct.Reg* %3159, i32 0, i32 0
  %RAX.i851 = bitcast %union.anon* %3160 to i64*
  %3161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3162 = getelementptr inbounds %struct.GPR, %struct.GPR* %3161, i32 0, i32 15
  %3163 = getelementptr inbounds %struct.Reg, %struct.Reg* %3162, i32 0, i32 0
  %RBP.i852 = bitcast %union.anon* %3163 to i64*
  %3164 = load i64, i64* %RBP.i852
  %3165 = sub i64 %3164, 136
  %3166 = load i64, i64* %PC.i850
  %3167 = add i64 %3166, 6
  store i64 %3167, i64* %PC.i850
  %3168 = inttoptr i64 %3165 to i32*
  %3169 = load i32, i32* %3168
  %3170 = zext i32 %3169 to i64
  store i64 %3170, i64* %RAX.i851, align 8
  store %struct.Memory* %loadMem_462fb7, %struct.Memory** %MEMORY
  %loadMem_462fbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3172 = getelementptr inbounds %struct.GPR, %struct.GPR* %3171, i32 0, i32 33
  %3173 = getelementptr inbounds %struct.Reg, %struct.Reg* %3172, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %3173 to i64*
  %3174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3175 = getelementptr inbounds %struct.GPR, %struct.GPR* %3174, i32 0, i32 1
  %3176 = getelementptr inbounds %struct.Reg, %struct.Reg* %3175, i32 0, i32 0
  %RAX.i848 = bitcast %union.anon* %3176 to i64*
  %3177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3178 = getelementptr inbounds %struct.GPR, %struct.GPR* %3177, i32 0, i32 15
  %3179 = getelementptr inbounds %struct.Reg, %struct.Reg* %3178, i32 0, i32 0
  %RBP.i849 = bitcast %union.anon* %3179 to i64*
  %3180 = load i64, i64* %RAX.i848
  %3181 = load i64, i64* %RBP.i849
  %3182 = sub i64 %3181, 120
  %3183 = load i64, i64* %PC.i847
  %3184 = add i64 %3183, 3
  store i64 %3184, i64* %PC.i847
  %3185 = trunc i64 %3180 to i32
  %3186 = inttoptr i64 %3182 to i32*
  %3187 = load i32, i32* %3186
  %3188 = add i32 %3187, %3185
  %3189 = zext i32 %3188 to i64
  store i64 %3189, i64* %RAX.i848, align 8
  %3190 = icmp ult i32 %3188, %3185
  %3191 = icmp ult i32 %3188, %3187
  %3192 = or i1 %3190, %3191
  %3193 = zext i1 %3192 to i8
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3193, i8* %3194, align 1
  %3195 = and i32 %3188, 255
  %3196 = call i32 @llvm.ctpop.i32(i32 %3195)
  %3197 = trunc i32 %3196 to i8
  %3198 = and i8 %3197, 1
  %3199 = xor i8 %3198, 1
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3199, i8* %3200, align 1
  %3201 = xor i32 %3187, %3185
  %3202 = xor i32 %3201, %3188
  %3203 = lshr i32 %3202, 4
  %3204 = trunc i32 %3203 to i8
  %3205 = and i8 %3204, 1
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3205, i8* %3206, align 1
  %3207 = icmp eq i32 %3188, 0
  %3208 = zext i1 %3207 to i8
  %3209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3208, i8* %3209, align 1
  %3210 = lshr i32 %3188, 31
  %3211 = trunc i32 %3210 to i8
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3211, i8* %3212, align 1
  %3213 = lshr i32 %3185, 31
  %3214 = lshr i32 %3187, 31
  %3215 = xor i32 %3210, %3213
  %3216 = xor i32 %3210, %3214
  %3217 = add i32 %3215, %3216
  %3218 = icmp eq i32 %3217, 2
  %3219 = zext i1 %3218 to i8
  %3220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3219, i8* %3220, align 1
  store %struct.Memory* %loadMem_462fbd, %struct.Memory** %MEMORY
  %loadMem_462fc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3222 = getelementptr inbounds %struct.GPR, %struct.GPR* %3221, i32 0, i32 33
  %3223 = getelementptr inbounds %struct.Reg, %struct.Reg* %3222, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %3223 to i64*
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3225 = getelementptr inbounds %struct.GPR, %struct.GPR* %3224, i32 0, i32 1
  %3226 = getelementptr inbounds %struct.Reg, %struct.Reg* %3225, i32 0, i32 0
  %EAX.i846 = bitcast %union.anon* %3226 to i32*
  %3227 = load i32, i32* %EAX.i846
  %3228 = zext i32 %3227 to i64
  %3229 = load i64, i64* %PC.i845
  %3230 = add i64 %3229, 3
  store i64 %3230, i64* %PC.i845
  %3231 = sub i32 %3227, 1
  %3232 = icmp ult i32 %3227, 1
  %3233 = zext i1 %3232 to i8
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3233, i8* %3234, align 1
  %3235 = and i32 %3231, 255
  %3236 = call i32 @llvm.ctpop.i32(i32 %3235)
  %3237 = trunc i32 %3236 to i8
  %3238 = and i8 %3237, 1
  %3239 = xor i8 %3238, 1
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3239, i8* %3240, align 1
  %3241 = xor i64 1, %3228
  %3242 = trunc i64 %3241 to i32
  %3243 = xor i32 %3242, %3231
  %3244 = lshr i32 %3243, 4
  %3245 = trunc i32 %3244 to i8
  %3246 = and i8 %3245, 1
  %3247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3246, i8* %3247, align 1
  %3248 = icmp eq i32 %3231, 0
  %3249 = zext i1 %3248 to i8
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3249, i8* %3250, align 1
  %3251 = lshr i32 %3231, 31
  %3252 = trunc i32 %3251 to i8
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3252, i8* %3253, align 1
  %3254 = lshr i32 %3227, 31
  %3255 = xor i32 %3251, %3254
  %3256 = add i32 %3255, %3254
  %3257 = icmp eq i32 %3256, 2
  %3258 = zext i1 %3257 to i8
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3258, i8* %3259, align 1
  store %struct.Memory* %loadMem_462fc0, %struct.Memory** %MEMORY
  %loadMem_462fc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3261 = getelementptr inbounds %struct.GPR, %struct.GPR* %3260, i32 0, i32 33
  %3262 = getelementptr inbounds %struct.Reg, %struct.Reg* %3261, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %3262 to i64*
  %3263 = load i64, i64* %PC.i844
  %3264 = add i64 %3263, 91
  %3265 = load i64, i64* %PC.i844
  %3266 = add i64 %3265, 6
  %3267 = load i64, i64* %PC.i844
  %3268 = add i64 %3267, 6
  store i64 %3268, i64* %PC.i844
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3270 = load i8, i8* %3269, align 1
  %3271 = icmp ne i8 %3270, 0
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3273 = load i8, i8* %3272, align 1
  %3274 = icmp ne i8 %3273, 0
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3276 = load i8, i8* %3275, align 1
  %3277 = icmp ne i8 %3276, 0
  %3278 = xor i1 %3274, %3277
  %3279 = or i1 %3271, %3278
  %3280 = zext i1 %3279 to i8
  store i8 %3280, i8* %BRANCH_TAKEN, align 1
  %3281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3282 = select i1 %3279, i64 %3264, i64 %3266
  store i64 %3282, i64* %3281, align 8
  store %struct.Memory* %loadMem_462fc3, %struct.Memory** %MEMORY
  %loadBr_462fc3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462fc3 = icmp eq i8 %loadBr_462fc3, 1
  br i1 %cmpBr_462fc3, label %block_.L_46301e, label %block_462fc9

block_462fc9:                                     ; preds = %block_.L_462fb7
  %loadMem_462fc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3284 = getelementptr inbounds %struct.GPR, %struct.GPR* %3283, i32 0, i32 33
  %3285 = getelementptr inbounds %struct.Reg, %struct.Reg* %3284, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %3285 to i64*
  %3286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3287 = getelementptr inbounds %struct.GPR, %struct.GPR* %3286, i32 0, i32 15
  %3288 = getelementptr inbounds %struct.Reg, %struct.Reg* %3287, i32 0, i32 0
  %RBP.i843 = bitcast %union.anon* %3288 to i64*
  %3289 = load i64, i64* %RBP.i843
  %3290 = sub i64 %3289, 124
  %3291 = load i64, i64* %PC.i842
  %3292 = add i64 %3291, 4
  store i64 %3292, i64* %PC.i842
  %3293 = inttoptr i64 %3290 to i32*
  %3294 = load i32, i32* %3293
  %3295 = sub i32 %3294, 5
  %3296 = icmp ult i32 %3294, 5
  %3297 = zext i1 %3296 to i8
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3297, i8* %3298, align 1
  %3299 = and i32 %3295, 255
  %3300 = call i32 @llvm.ctpop.i32(i32 %3299)
  %3301 = trunc i32 %3300 to i8
  %3302 = and i8 %3301, 1
  %3303 = xor i8 %3302, 1
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3303, i8* %3304, align 1
  %3305 = xor i32 %3294, 5
  %3306 = xor i32 %3305, %3295
  %3307 = lshr i32 %3306, 4
  %3308 = trunc i32 %3307 to i8
  %3309 = and i8 %3308, 1
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3309, i8* %3310, align 1
  %3311 = icmp eq i32 %3295, 0
  %3312 = zext i1 %3311 to i8
  %3313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3312, i8* %3313, align 1
  %3314 = lshr i32 %3295, 31
  %3315 = trunc i32 %3314 to i8
  %3316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3315, i8* %3316, align 1
  %3317 = lshr i32 %3294, 31
  %3318 = xor i32 %3314, %3317
  %3319 = add i32 %3318, %3317
  %3320 = icmp eq i32 %3319, 2
  %3321 = zext i1 %3320 to i8
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3321, i8* %3322, align 1
  store %struct.Memory* %loadMem_462fc9, %struct.Memory** %MEMORY
  %loadMem_462fcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3324 = getelementptr inbounds %struct.GPR, %struct.GPR* %3323, i32 0, i32 33
  %3325 = getelementptr inbounds %struct.Reg, %struct.Reg* %3324, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %3325 to i64*
  %3326 = load i64, i64* %PC.i841
  %3327 = add i64 %3326, 44
  %3328 = load i64, i64* %PC.i841
  %3329 = add i64 %3328, 6
  %3330 = load i64, i64* %PC.i841
  %3331 = add i64 %3330, 6
  store i64 %3331, i64* %PC.i841
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3333 = load i8, i8* %3332, align 1
  %3334 = icmp eq i8 %3333, 0
  %3335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3336 = load i8, i8* %3335, align 1
  %3337 = icmp ne i8 %3336, 0
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3339 = load i8, i8* %3338, align 1
  %3340 = icmp ne i8 %3339, 0
  %3341 = xor i1 %3337, %3340
  %3342 = xor i1 %3341, true
  %3343 = and i1 %3334, %3342
  %3344 = zext i1 %3343 to i8
  store i8 %3344, i8* %BRANCH_TAKEN, align 1
  %3345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3346 = select i1 %3343, i64 %3327, i64 %3329
  store i64 %3346, i64* %3345, align 8
  store %struct.Memory* %loadMem_462fcd, %struct.Memory** %MEMORY
  %loadBr_462fcd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_462fcd = icmp eq i8 %loadBr_462fcd, 1
  br i1 %cmpBr_462fcd, label %block_.L_462ff9, label %block_462fd3

block_462fd3:                                     ; preds = %block_462fc9
  %loadMem_462fd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3348 = getelementptr inbounds %struct.GPR, %struct.GPR* %3347, i32 0, i32 33
  %3349 = getelementptr inbounds %struct.Reg, %struct.Reg* %3348, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %3349 to i64*
  %3350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3351 = getelementptr inbounds %struct.GPR, %struct.GPR* %3350, i32 0, i32 1
  %3352 = getelementptr inbounds %struct.Reg, %struct.Reg* %3351, i32 0, i32 0
  %RAX.i839 = bitcast %union.anon* %3352 to i64*
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3354 = getelementptr inbounds %struct.GPR, %struct.GPR* %3353, i32 0, i32 15
  %3355 = getelementptr inbounds %struct.Reg, %struct.Reg* %3354, i32 0, i32 0
  %RBP.i840 = bitcast %union.anon* %3355 to i64*
  %3356 = load i64, i64* %RBP.i840
  %3357 = sub i64 %3356, 124
  %3358 = load i64, i64* %PC.i838
  %3359 = add i64 %3358, 4
  store i64 %3359, i64* %PC.i838
  %3360 = inttoptr i64 %3357 to i32*
  %3361 = load i32, i32* %3360
  %3362 = sext i32 %3361 to i64
  store i64 %3362, i64* %RAX.i839, align 8
  store %struct.Memory* %loadMem_462fd3, %struct.Memory** %MEMORY
  %loadMem_462fd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3364 = getelementptr inbounds %struct.GPR, %struct.GPR* %3363, i32 0, i32 33
  %3365 = getelementptr inbounds %struct.Reg, %struct.Reg* %3364, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %3365 to i64*
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3367 = getelementptr inbounds %struct.GPR, %struct.GPR* %3366, i32 0, i32 1
  %3368 = getelementptr inbounds %struct.Reg, %struct.Reg* %3367, i32 0, i32 0
  %RAX.i836 = bitcast %union.anon* %3368 to i64*
  %3369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3370 = getelementptr inbounds %struct.GPR, %struct.GPR* %3369, i32 0, i32 5
  %3371 = getelementptr inbounds %struct.Reg, %struct.Reg* %3370, i32 0, i32 0
  %RCX.i837 = bitcast %union.anon* %3371 to i64*
  %3372 = load i64, i64* %RAX.i836
  %3373 = mul i64 %3372, 4
  %3374 = add i64 %3373, 8060128
  %3375 = load i64, i64* %PC.i835
  %3376 = add i64 %3375, 7
  store i64 %3376, i64* %PC.i835
  %3377 = inttoptr i64 %3374 to i32*
  %3378 = load i32, i32* %3377
  %3379 = zext i32 %3378 to i64
  store i64 %3379, i64* %RCX.i837, align 8
  store %struct.Memory* %loadMem_462fd7, %struct.Memory** %MEMORY
  %loadMem_462fde = load %struct.Memory*, %struct.Memory** %MEMORY
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3381 = getelementptr inbounds %struct.GPR, %struct.GPR* %3380, i32 0, i32 33
  %3382 = getelementptr inbounds %struct.Reg, %struct.Reg* %3381, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %3382 to i64*
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3384 = getelementptr inbounds %struct.GPR, %struct.GPR* %3383, i32 0, i32 1
  %3385 = getelementptr inbounds %struct.Reg, %struct.Reg* %3384, i32 0, i32 0
  %RAX.i833 = bitcast %union.anon* %3385 to i64*
  %3386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3387 = getelementptr inbounds %struct.GPR, %struct.GPR* %3386, i32 0, i32 15
  %3388 = getelementptr inbounds %struct.Reg, %struct.Reg* %3387, i32 0, i32 0
  %RBP.i834 = bitcast %union.anon* %3388 to i64*
  %3389 = load i64, i64* %RBP.i834
  %3390 = sub i64 %3389, 48
  %3391 = load i64, i64* %PC.i832
  %3392 = add i64 %3391, 4
  store i64 %3392, i64* %PC.i832
  %3393 = inttoptr i64 %3390 to i64*
  %3394 = load i64, i64* %3393
  store i64 %3394, i64* %RAX.i833, align 8
  store %struct.Memory* %loadMem_462fde, %struct.Memory** %MEMORY
  %loadMem_462fe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3396 = getelementptr inbounds %struct.GPR, %struct.GPR* %3395, i32 0, i32 33
  %3397 = getelementptr inbounds %struct.Reg, %struct.Reg* %3396, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %3397 to i64*
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3399 = getelementptr inbounds %struct.GPR, %struct.GPR* %3398, i32 0, i32 7
  %3400 = getelementptr inbounds %struct.Reg, %struct.Reg* %3399, i32 0, i32 0
  %RDX.i830 = bitcast %union.anon* %3400 to i64*
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3402 = getelementptr inbounds %struct.GPR, %struct.GPR* %3401, i32 0, i32 15
  %3403 = getelementptr inbounds %struct.Reg, %struct.Reg* %3402, i32 0, i32 0
  %RBP.i831 = bitcast %union.anon* %3403 to i64*
  %3404 = load i64, i64* %RBP.i831
  %3405 = sub i64 %3404, 80
  %3406 = load i64, i64* %PC.i829
  %3407 = add i64 %3406, 4
  store i64 %3407, i64* %PC.i829
  %3408 = inttoptr i64 %3405 to i32*
  %3409 = load i32, i32* %3408
  %3410 = sext i32 %3409 to i64
  store i64 %3410, i64* %RDX.i830, align 8
  store %struct.Memory* %loadMem_462fe2, %struct.Memory** %MEMORY
  %loadMem_462fe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3412 = getelementptr inbounds %struct.GPR, %struct.GPR* %3411, i32 0, i32 33
  %3413 = getelementptr inbounds %struct.Reg, %struct.Reg* %3412, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %3413 to i64*
  %3414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3415 = getelementptr inbounds %struct.GPR, %struct.GPR* %3414, i32 0, i32 1
  %3416 = getelementptr inbounds %struct.Reg, %struct.Reg* %3415, i32 0, i32 0
  %RAX.i826 = bitcast %union.anon* %3416 to i64*
  %3417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3418 = getelementptr inbounds %struct.GPR, %struct.GPR* %3417, i32 0, i32 5
  %3419 = getelementptr inbounds %struct.Reg, %struct.Reg* %3418, i32 0, i32 0
  %RCX.i827 = bitcast %union.anon* %3419 to i64*
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3421 = getelementptr inbounds %struct.GPR, %struct.GPR* %3420, i32 0, i32 7
  %3422 = getelementptr inbounds %struct.Reg, %struct.Reg* %3421, i32 0, i32 0
  %RDX.i828 = bitcast %union.anon* %3422 to i64*
  %3423 = load i64, i64* %RCX.i827
  %3424 = load i64, i64* %RAX.i826
  %3425 = load i64, i64* %RDX.i828
  %3426 = mul i64 %3425, 4
  %3427 = add i64 %3424, 200
  %3428 = add i64 %3427, %3426
  %3429 = load i64, i64* %PC.i825
  %3430 = add i64 %3429, 7
  store i64 %3430, i64* %PC.i825
  %3431 = trunc i64 %3423 to i32
  %3432 = inttoptr i64 %3428 to i32*
  %3433 = load i32, i32* %3432
  %3434 = add i32 %3433, %3431
  %3435 = zext i32 %3434 to i64
  store i64 %3435, i64* %RCX.i827, align 8
  %3436 = icmp ult i32 %3434, %3431
  %3437 = icmp ult i32 %3434, %3433
  %3438 = or i1 %3436, %3437
  %3439 = zext i1 %3438 to i8
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3439, i8* %3440, align 1
  %3441 = and i32 %3434, 255
  %3442 = call i32 @llvm.ctpop.i32(i32 %3441)
  %3443 = trunc i32 %3442 to i8
  %3444 = and i8 %3443, 1
  %3445 = xor i8 %3444, 1
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3445, i8* %3446, align 1
  %3447 = xor i32 %3433, %3431
  %3448 = xor i32 %3447, %3434
  %3449 = lshr i32 %3448, 4
  %3450 = trunc i32 %3449 to i8
  %3451 = and i8 %3450, 1
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3451, i8* %3452, align 1
  %3453 = icmp eq i32 %3434, 0
  %3454 = zext i1 %3453 to i8
  %3455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3454, i8* %3455, align 1
  %3456 = lshr i32 %3434, 31
  %3457 = trunc i32 %3456 to i8
  %3458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3457, i8* %3458, align 1
  %3459 = lshr i32 %3431, 31
  %3460 = lshr i32 %3433, 31
  %3461 = xor i32 %3456, %3459
  %3462 = xor i32 %3456, %3460
  %3463 = add i32 %3461, %3462
  %3464 = icmp eq i32 %3463, 2
  %3465 = zext i1 %3464 to i8
  %3466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3465, i8* %3466, align 1
  store %struct.Memory* %loadMem_462fe6, %struct.Memory** %MEMORY
  %loadMem_462fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3468 = getelementptr inbounds %struct.GPR, %struct.GPR* %3467, i32 0, i32 33
  %3469 = getelementptr inbounds %struct.Reg, %struct.Reg* %3468, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %3469 to i64*
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3471 = getelementptr inbounds %struct.GPR, %struct.GPR* %3470, i32 0, i32 5
  %3472 = getelementptr inbounds %struct.Reg, %struct.Reg* %3471, i32 0, i32 0
  %ECX.i822 = bitcast %union.anon* %3472 to i32*
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3474 = getelementptr inbounds %struct.GPR, %struct.GPR* %3473, i32 0, i32 1
  %3475 = getelementptr inbounds %struct.Reg, %struct.Reg* %3474, i32 0, i32 0
  %RAX.i823 = bitcast %union.anon* %3475 to i64*
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3477 = getelementptr inbounds %struct.GPR, %struct.GPR* %3476, i32 0, i32 7
  %3478 = getelementptr inbounds %struct.Reg, %struct.Reg* %3477, i32 0, i32 0
  %RDX.i824 = bitcast %union.anon* %3478 to i64*
  %3479 = load i64, i64* %RAX.i823
  %3480 = load i64, i64* %RDX.i824
  %3481 = mul i64 %3480, 4
  %3482 = add i64 %3479, 200
  %3483 = add i64 %3482, %3481
  %3484 = load i32, i32* %ECX.i822
  %3485 = zext i32 %3484 to i64
  %3486 = load i64, i64* %PC.i821
  %3487 = add i64 %3486, 7
  store i64 %3487, i64* %PC.i821
  %3488 = inttoptr i64 %3483 to i32*
  store i32 %3484, i32* %3488
  store %struct.Memory* %loadMem_462fed, %struct.Memory** %MEMORY
  %loadMem_462ff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3490 = getelementptr inbounds %struct.GPR, %struct.GPR* %3489, i32 0, i32 33
  %3491 = getelementptr inbounds %struct.Reg, %struct.Reg* %3490, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %3491 to i64*
  %3492 = load i64, i64* %PC.i820
  %3493 = add i64 %3492, 37
  %3494 = load i64, i64* %PC.i820
  %3495 = add i64 %3494, 5
  store i64 %3495, i64* %PC.i820
  %3496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3493, i64* %3496, align 8
  store %struct.Memory* %loadMem_462ff4, %struct.Memory** %MEMORY
  br label %block_.L_463019

block_.L_462ff9:                                  ; preds = %block_462fc9
  %loadMem_462ff9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3498 = getelementptr inbounds %struct.GPR, %struct.GPR* %3497, i32 0, i32 33
  %3499 = getelementptr inbounds %struct.Reg, %struct.Reg* %3498, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %3499 to i64*
  %3500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3501 = getelementptr inbounds %struct.GPR, %struct.GPR* %3500, i32 0, i32 1
  %3502 = getelementptr inbounds %struct.Reg, %struct.Reg* %3501, i32 0, i32 0
  %RAX.i819 = bitcast %union.anon* %3502 to i64*
  %3503 = load i64, i64* %PC.i818
  %3504 = add i64 %3503, 7
  store i64 %3504, i64* %PC.i818
  %3505 = load i32, i32* bitcast (%G_0x7afcf4_type* @G_0x7afcf4 to i32*)
  %3506 = zext i32 %3505 to i64
  store i64 %3506, i64* %RAX.i819, align 8
  store %struct.Memory* %loadMem_462ff9, %struct.Memory** %MEMORY
  %loadMem_463000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3508 = getelementptr inbounds %struct.GPR, %struct.GPR* %3507, i32 0, i32 33
  %3509 = getelementptr inbounds %struct.Reg, %struct.Reg* %3508, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %3509 to i64*
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3511 = getelementptr inbounds %struct.GPR, %struct.GPR* %3510, i32 0, i32 1
  %3512 = getelementptr inbounds %struct.Reg, %struct.Reg* %3511, i32 0, i32 0
  %RAX.i816 = bitcast %union.anon* %3512 to i64*
  %3513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3514 = getelementptr inbounds %struct.GPR, %struct.GPR* %3513, i32 0, i32 15
  %3515 = getelementptr inbounds %struct.Reg, %struct.Reg* %3514, i32 0, i32 0
  %RBP.i817 = bitcast %union.anon* %3515 to i64*
  %3516 = load i64, i64* %RAX.i816
  %3517 = load i64, i64* %RBP.i817
  %3518 = sub i64 %3517, 124
  %3519 = load i64, i64* %PC.i815
  %3520 = add i64 %3519, 3
  store i64 %3520, i64* %PC.i815
  %3521 = trunc i64 %3516 to i32
  %3522 = inttoptr i64 %3518 to i32*
  %3523 = load i32, i32* %3522
  %3524 = add i32 %3523, %3521
  %3525 = zext i32 %3524 to i64
  store i64 %3525, i64* %RAX.i816, align 8
  %3526 = icmp ult i32 %3524, %3521
  %3527 = icmp ult i32 %3524, %3523
  %3528 = or i1 %3526, %3527
  %3529 = zext i1 %3528 to i8
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3529, i8* %3530, align 1
  %3531 = and i32 %3524, 255
  %3532 = call i32 @llvm.ctpop.i32(i32 %3531)
  %3533 = trunc i32 %3532 to i8
  %3534 = and i8 %3533, 1
  %3535 = xor i8 %3534, 1
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3535, i8* %3536, align 1
  %3537 = xor i32 %3523, %3521
  %3538 = xor i32 %3537, %3524
  %3539 = lshr i32 %3538, 4
  %3540 = trunc i32 %3539 to i8
  %3541 = and i8 %3540, 1
  %3542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3541, i8* %3542, align 1
  %3543 = icmp eq i32 %3524, 0
  %3544 = zext i1 %3543 to i8
  %3545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3544, i8* %3545, align 1
  %3546 = lshr i32 %3524, 31
  %3547 = trunc i32 %3546 to i8
  %3548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3547, i8* %3548, align 1
  %3549 = lshr i32 %3521, 31
  %3550 = lshr i32 %3523, 31
  %3551 = xor i32 %3546, %3549
  %3552 = xor i32 %3546, %3550
  %3553 = add i32 %3551, %3552
  %3554 = icmp eq i32 %3553, 2
  %3555 = zext i1 %3554 to i8
  %3556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3555, i8* %3556, align 1
  store %struct.Memory* %loadMem_463000, %struct.Memory** %MEMORY
  %loadMem_463003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3558 = getelementptr inbounds %struct.GPR, %struct.GPR* %3557, i32 0, i32 33
  %3559 = getelementptr inbounds %struct.Reg, %struct.Reg* %3558, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %3559 to i64*
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3561 = getelementptr inbounds %struct.GPR, %struct.GPR* %3560, i32 0, i32 5
  %3562 = getelementptr inbounds %struct.Reg, %struct.Reg* %3561, i32 0, i32 0
  %RCX.i813 = bitcast %union.anon* %3562 to i64*
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3564 = getelementptr inbounds %struct.GPR, %struct.GPR* %3563, i32 0, i32 15
  %3565 = getelementptr inbounds %struct.Reg, %struct.Reg* %3564, i32 0, i32 0
  %RBP.i814 = bitcast %union.anon* %3565 to i64*
  %3566 = load i64, i64* %RBP.i814
  %3567 = sub i64 %3566, 48
  %3568 = load i64, i64* %PC.i812
  %3569 = add i64 %3568, 4
  store i64 %3569, i64* %PC.i812
  %3570 = inttoptr i64 %3567 to i64*
  %3571 = load i64, i64* %3570
  store i64 %3571, i64* %RCX.i813, align 8
  store %struct.Memory* %loadMem_463003, %struct.Memory** %MEMORY
  %loadMem_463007 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3573 = getelementptr inbounds %struct.GPR, %struct.GPR* %3572, i32 0, i32 33
  %3574 = getelementptr inbounds %struct.Reg, %struct.Reg* %3573, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %3574 to i64*
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3576 = getelementptr inbounds %struct.GPR, %struct.GPR* %3575, i32 0, i32 7
  %3577 = getelementptr inbounds %struct.Reg, %struct.Reg* %3576, i32 0, i32 0
  %RDX.i810 = bitcast %union.anon* %3577 to i64*
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3579 = getelementptr inbounds %struct.GPR, %struct.GPR* %3578, i32 0, i32 15
  %3580 = getelementptr inbounds %struct.Reg, %struct.Reg* %3579, i32 0, i32 0
  %RBP.i811 = bitcast %union.anon* %3580 to i64*
  %3581 = load i64, i64* %RBP.i811
  %3582 = sub i64 %3581, 80
  %3583 = load i64, i64* %PC.i809
  %3584 = add i64 %3583, 4
  store i64 %3584, i64* %PC.i809
  %3585 = inttoptr i64 %3582 to i32*
  %3586 = load i32, i32* %3585
  %3587 = sext i32 %3586 to i64
  store i64 %3587, i64* %RDX.i810, align 8
  store %struct.Memory* %loadMem_463007, %struct.Memory** %MEMORY
  %loadMem_46300b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3589 = getelementptr inbounds %struct.GPR, %struct.GPR* %3588, i32 0, i32 33
  %3590 = getelementptr inbounds %struct.Reg, %struct.Reg* %3589, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %3590 to i64*
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3592 = getelementptr inbounds %struct.GPR, %struct.GPR* %3591, i32 0, i32 1
  %3593 = getelementptr inbounds %struct.Reg, %struct.Reg* %3592, i32 0, i32 0
  %RAX.i806 = bitcast %union.anon* %3593 to i64*
  %3594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3595 = getelementptr inbounds %struct.GPR, %struct.GPR* %3594, i32 0, i32 5
  %3596 = getelementptr inbounds %struct.Reg, %struct.Reg* %3595, i32 0, i32 0
  %RCX.i807 = bitcast %union.anon* %3596 to i64*
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3598 = getelementptr inbounds %struct.GPR, %struct.GPR* %3597, i32 0, i32 7
  %3599 = getelementptr inbounds %struct.Reg, %struct.Reg* %3598, i32 0, i32 0
  %RDX.i808 = bitcast %union.anon* %3599 to i64*
  %3600 = load i64, i64* %RAX.i806
  %3601 = load i64, i64* %RCX.i807
  %3602 = load i64, i64* %RDX.i808
  %3603 = mul i64 %3602, 4
  %3604 = add i64 %3601, 200
  %3605 = add i64 %3604, %3603
  %3606 = load i64, i64* %PC.i805
  %3607 = add i64 %3606, 7
  store i64 %3607, i64* %PC.i805
  %3608 = trunc i64 %3600 to i32
  %3609 = inttoptr i64 %3605 to i32*
  %3610 = load i32, i32* %3609
  %3611 = add i32 %3610, %3608
  %3612 = zext i32 %3611 to i64
  store i64 %3612, i64* %RAX.i806, align 8
  %3613 = icmp ult i32 %3611, %3608
  %3614 = icmp ult i32 %3611, %3610
  %3615 = or i1 %3613, %3614
  %3616 = zext i1 %3615 to i8
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3616, i8* %3617, align 1
  %3618 = and i32 %3611, 255
  %3619 = call i32 @llvm.ctpop.i32(i32 %3618)
  %3620 = trunc i32 %3619 to i8
  %3621 = and i8 %3620, 1
  %3622 = xor i8 %3621, 1
  %3623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3622, i8* %3623, align 1
  %3624 = xor i32 %3610, %3608
  %3625 = xor i32 %3624, %3611
  %3626 = lshr i32 %3625, 4
  %3627 = trunc i32 %3626 to i8
  %3628 = and i8 %3627, 1
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3628, i8* %3629, align 1
  %3630 = icmp eq i32 %3611, 0
  %3631 = zext i1 %3630 to i8
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3631, i8* %3632, align 1
  %3633 = lshr i32 %3611, 31
  %3634 = trunc i32 %3633 to i8
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3634, i8* %3635, align 1
  %3636 = lshr i32 %3608, 31
  %3637 = lshr i32 %3610, 31
  %3638 = xor i32 %3633, %3636
  %3639 = xor i32 %3633, %3637
  %3640 = add i32 %3638, %3639
  %3641 = icmp eq i32 %3640, 2
  %3642 = zext i1 %3641 to i8
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3642, i8* %3643, align 1
  store %struct.Memory* %loadMem_46300b, %struct.Memory** %MEMORY
  %loadMem_463012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3645 = getelementptr inbounds %struct.GPR, %struct.GPR* %3644, i32 0, i32 33
  %3646 = getelementptr inbounds %struct.Reg, %struct.Reg* %3645, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %3646 to i64*
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3648 = getelementptr inbounds %struct.GPR, %struct.GPR* %3647, i32 0, i32 1
  %3649 = getelementptr inbounds %struct.Reg, %struct.Reg* %3648, i32 0, i32 0
  %EAX.i802 = bitcast %union.anon* %3649 to i32*
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3651 = getelementptr inbounds %struct.GPR, %struct.GPR* %3650, i32 0, i32 5
  %3652 = getelementptr inbounds %struct.Reg, %struct.Reg* %3651, i32 0, i32 0
  %RCX.i803 = bitcast %union.anon* %3652 to i64*
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3654 = getelementptr inbounds %struct.GPR, %struct.GPR* %3653, i32 0, i32 7
  %3655 = getelementptr inbounds %struct.Reg, %struct.Reg* %3654, i32 0, i32 0
  %RDX.i804 = bitcast %union.anon* %3655 to i64*
  %3656 = load i64, i64* %RCX.i803
  %3657 = load i64, i64* %RDX.i804
  %3658 = mul i64 %3657, 4
  %3659 = add i64 %3656, 200
  %3660 = add i64 %3659, %3658
  %3661 = load i32, i32* %EAX.i802
  %3662 = zext i32 %3661 to i64
  %3663 = load i64, i64* %PC.i801
  %3664 = add i64 %3663, 7
  store i64 %3664, i64* %PC.i801
  %3665 = inttoptr i64 %3660 to i32*
  store i32 %3661, i32* %3665
  store %struct.Memory* %loadMem_463012, %struct.Memory** %MEMORY
  br label %block_.L_463019

block_.L_463019:                                  ; preds = %block_.L_462ff9, %block_462fd3
  %loadMem_463019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3667 = getelementptr inbounds %struct.GPR, %struct.GPR* %3666, i32 0, i32 33
  %3668 = getelementptr inbounds %struct.Reg, %struct.Reg* %3667, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %3668 to i64*
  %3669 = load i64, i64* %PC.i800
  %3670 = add i64 %3669, 5
  %3671 = load i64, i64* %PC.i800
  %3672 = add i64 %3671, 5
  store i64 %3672, i64* %PC.i800
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3670, i64* %3673, align 8
  store %struct.Memory* %loadMem_463019, %struct.Memory** %MEMORY
  br label %block_.L_46301e

block_.L_46301e:                                  ; preds = %block_.L_463019, %block_.L_462fb7
  %loadMem_46301e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3675 = getelementptr inbounds %struct.GPR, %struct.GPR* %3674, i32 0, i32 33
  %3676 = getelementptr inbounds %struct.Reg, %struct.Reg* %3675, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %3676 to i64*
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3678 = getelementptr inbounds %struct.GPR, %struct.GPR* %3677, i32 0, i32 15
  %3679 = getelementptr inbounds %struct.Reg, %struct.Reg* %3678, i32 0, i32 0
  %RBP.i799 = bitcast %union.anon* %3679 to i64*
  %3680 = load i64, i64* %RBP.i799
  %3681 = sub i64 %3680, 128
  %3682 = load i64, i64* %PC.i798
  %3683 = add i64 %3682, 4
  store i64 %3683, i64* %PC.i798
  %3684 = inttoptr i64 %3681 to i32*
  %3685 = load i32, i32* %3684
  %3686 = sub i32 %3685, 5
  %3687 = icmp ult i32 %3685, 5
  %3688 = zext i1 %3687 to i8
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3688, i8* %3689, align 1
  %3690 = and i32 %3686, 255
  %3691 = call i32 @llvm.ctpop.i32(i32 %3690)
  %3692 = trunc i32 %3691 to i8
  %3693 = and i8 %3692, 1
  %3694 = xor i8 %3693, 1
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3694, i8* %3695, align 1
  %3696 = xor i32 %3685, 5
  %3697 = xor i32 %3696, %3686
  %3698 = lshr i32 %3697, 4
  %3699 = trunc i32 %3698 to i8
  %3700 = and i8 %3699, 1
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3700, i8* %3701, align 1
  %3702 = icmp eq i32 %3686, 0
  %3703 = zext i1 %3702 to i8
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3703, i8* %3704, align 1
  %3705 = lshr i32 %3686, 31
  %3706 = trunc i32 %3705 to i8
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3706, i8* %3707, align 1
  %3708 = lshr i32 %3685, 31
  %3709 = xor i32 %3705, %3708
  %3710 = add i32 %3709, %3708
  %3711 = icmp eq i32 %3710, 2
  %3712 = zext i1 %3711 to i8
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3712, i8* %3713, align 1
  store %struct.Memory* %loadMem_46301e, %struct.Memory** %MEMORY
  %loadMem_463022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3715 = getelementptr inbounds %struct.GPR, %struct.GPR* %3714, i32 0, i32 33
  %3716 = getelementptr inbounds %struct.Reg, %struct.Reg* %3715, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %3716 to i64*
  %3717 = load i64, i64* %PC.i797
  %3718 = add i64 %3717, 44
  %3719 = load i64, i64* %PC.i797
  %3720 = add i64 %3719, 6
  %3721 = load i64, i64* %PC.i797
  %3722 = add i64 %3721, 6
  store i64 %3722, i64* %PC.i797
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3724 = load i8, i8* %3723, align 1
  %3725 = icmp eq i8 %3724, 0
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3727 = load i8, i8* %3726, align 1
  %3728 = icmp ne i8 %3727, 0
  %3729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3730 = load i8, i8* %3729, align 1
  %3731 = icmp ne i8 %3730, 0
  %3732 = xor i1 %3728, %3731
  %3733 = xor i1 %3732, true
  %3734 = and i1 %3725, %3733
  %3735 = zext i1 %3734 to i8
  store i8 %3735, i8* %BRANCH_TAKEN, align 1
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3737 = select i1 %3734, i64 %3718, i64 %3720
  store i64 %3737, i64* %3736, align 8
  store %struct.Memory* %loadMem_463022, %struct.Memory** %MEMORY
  %loadBr_463022 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_463022 = icmp eq i8 %loadBr_463022, 1
  br i1 %cmpBr_463022, label %block_.L_46304e, label %block_463028

block_463028:                                     ; preds = %block_.L_46301e
  %loadMem_463028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3739 = getelementptr inbounds %struct.GPR, %struct.GPR* %3738, i32 0, i32 33
  %3740 = getelementptr inbounds %struct.Reg, %struct.Reg* %3739, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %3740 to i64*
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3742 = getelementptr inbounds %struct.GPR, %struct.GPR* %3741, i32 0, i32 1
  %3743 = getelementptr inbounds %struct.Reg, %struct.Reg* %3742, i32 0, i32 0
  %RAX.i795 = bitcast %union.anon* %3743 to i64*
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3745 = getelementptr inbounds %struct.GPR, %struct.GPR* %3744, i32 0, i32 15
  %3746 = getelementptr inbounds %struct.Reg, %struct.Reg* %3745, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %3746 to i64*
  %3747 = load i64, i64* %RBP.i796
  %3748 = sub i64 %3747, 128
  %3749 = load i64, i64* %PC.i794
  %3750 = add i64 %3749, 4
  store i64 %3750, i64* %PC.i794
  %3751 = inttoptr i64 %3748 to i32*
  %3752 = load i32, i32* %3751
  %3753 = sext i32 %3752 to i64
  store i64 %3753, i64* %RAX.i795, align 8
  store %struct.Memory* %loadMem_463028, %struct.Memory** %MEMORY
  %loadMem_46302c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3755 = getelementptr inbounds %struct.GPR, %struct.GPR* %3754, i32 0, i32 33
  %3756 = getelementptr inbounds %struct.Reg, %struct.Reg* %3755, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %3756 to i64*
  %3757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3758 = getelementptr inbounds %struct.GPR, %struct.GPR* %3757, i32 0, i32 1
  %3759 = getelementptr inbounds %struct.Reg, %struct.Reg* %3758, i32 0, i32 0
  %RAX.i792 = bitcast %union.anon* %3759 to i64*
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3761 = getelementptr inbounds %struct.GPR, %struct.GPR* %3760, i32 0, i32 5
  %3762 = getelementptr inbounds %struct.Reg, %struct.Reg* %3761, i32 0, i32 0
  %RCX.i793 = bitcast %union.anon* %3762 to i64*
  %3763 = load i64, i64* %RAX.i792
  %3764 = mul i64 %3763, 4
  %3765 = add i64 %3764, 8060160
  %3766 = load i64, i64* %PC.i791
  %3767 = add i64 %3766, 7
  store i64 %3767, i64* %PC.i791
  %3768 = inttoptr i64 %3765 to i32*
  %3769 = load i32, i32* %3768
  %3770 = zext i32 %3769 to i64
  store i64 %3770, i64* %RCX.i793, align 8
  store %struct.Memory* %loadMem_46302c, %struct.Memory** %MEMORY
  %loadMem_463033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3772 = getelementptr inbounds %struct.GPR, %struct.GPR* %3771, i32 0, i32 33
  %3773 = getelementptr inbounds %struct.Reg, %struct.Reg* %3772, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %3773 to i64*
  %3774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3775 = getelementptr inbounds %struct.GPR, %struct.GPR* %3774, i32 0, i32 1
  %3776 = getelementptr inbounds %struct.Reg, %struct.Reg* %3775, i32 0, i32 0
  %RAX.i789 = bitcast %union.anon* %3776 to i64*
  %3777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3778 = getelementptr inbounds %struct.GPR, %struct.GPR* %3777, i32 0, i32 15
  %3779 = getelementptr inbounds %struct.Reg, %struct.Reg* %3778, i32 0, i32 0
  %RBP.i790 = bitcast %union.anon* %3779 to i64*
  %3780 = load i64, i64* %RBP.i790
  %3781 = sub i64 %3780, 48
  %3782 = load i64, i64* %PC.i788
  %3783 = add i64 %3782, 4
  store i64 %3783, i64* %PC.i788
  %3784 = inttoptr i64 %3781 to i64*
  %3785 = load i64, i64* %3784
  store i64 %3785, i64* %RAX.i789, align 8
  store %struct.Memory* %loadMem_463033, %struct.Memory** %MEMORY
  %loadMem_463037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3787 = getelementptr inbounds %struct.GPR, %struct.GPR* %3786, i32 0, i32 33
  %3788 = getelementptr inbounds %struct.Reg, %struct.Reg* %3787, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %3788 to i64*
  %3789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3790 = getelementptr inbounds %struct.GPR, %struct.GPR* %3789, i32 0, i32 7
  %3791 = getelementptr inbounds %struct.Reg, %struct.Reg* %3790, i32 0, i32 0
  %RDX.i786 = bitcast %union.anon* %3791 to i64*
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3793 = getelementptr inbounds %struct.GPR, %struct.GPR* %3792, i32 0, i32 15
  %3794 = getelementptr inbounds %struct.Reg, %struct.Reg* %3793, i32 0, i32 0
  %RBP.i787 = bitcast %union.anon* %3794 to i64*
  %3795 = load i64, i64* %RBP.i787
  %3796 = sub i64 %3795, 80
  %3797 = load i64, i64* %PC.i785
  %3798 = add i64 %3797, 4
  store i64 %3798, i64* %PC.i785
  %3799 = inttoptr i64 %3796 to i32*
  %3800 = load i32, i32* %3799
  %3801 = sext i32 %3800 to i64
  store i64 %3801, i64* %RDX.i786, align 8
  store %struct.Memory* %loadMem_463037, %struct.Memory** %MEMORY
  %loadMem_46303b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3803 = getelementptr inbounds %struct.GPR, %struct.GPR* %3802, i32 0, i32 33
  %3804 = getelementptr inbounds %struct.Reg, %struct.Reg* %3803, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %3804 to i64*
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3806 = getelementptr inbounds %struct.GPR, %struct.GPR* %3805, i32 0, i32 1
  %3807 = getelementptr inbounds %struct.Reg, %struct.Reg* %3806, i32 0, i32 0
  %RAX.i782 = bitcast %union.anon* %3807 to i64*
  %3808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3809 = getelementptr inbounds %struct.GPR, %struct.GPR* %3808, i32 0, i32 5
  %3810 = getelementptr inbounds %struct.Reg, %struct.Reg* %3809, i32 0, i32 0
  %RCX.i783 = bitcast %union.anon* %3810 to i64*
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3812 = getelementptr inbounds %struct.GPR, %struct.GPR* %3811, i32 0, i32 7
  %3813 = getelementptr inbounds %struct.Reg, %struct.Reg* %3812, i32 0, i32 0
  %RDX.i784 = bitcast %union.anon* %3813 to i64*
  %3814 = load i64, i64* %RCX.i783
  %3815 = load i64, i64* %RAX.i782
  %3816 = load i64, i64* %RDX.i784
  %3817 = mul i64 %3816, 4
  %3818 = add i64 %3815, 200
  %3819 = add i64 %3818, %3817
  %3820 = load i64, i64* %PC.i781
  %3821 = add i64 %3820, 7
  store i64 %3821, i64* %PC.i781
  %3822 = trunc i64 %3814 to i32
  %3823 = inttoptr i64 %3819 to i32*
  %3824 = load i32, i32* %3823
  %3825 = add i32 %3824, %3822
  %3826 = zext i32 %3825 to i64
  store i64 %3826, i64* %RCX.i783, align 8
  %3827 = icmp ult i32 %3825, %3822
  %3828 = icmp ult i32 %3825, %3824
  %3829 = or i1 %3827, %3828
  %3830 = zext i1 %3829 to i8
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3830, i8* %3831, align 1
  %3832 = and i32 %3825, 255
  %3833 = call i32 @llvm.ctpop.i32(i32 %3832)
  %3834 = trunc i32 %3833 to i8
  %3835 = and i8 %3834, 1
  %3836 = xor i8 %3835, 1
  %3837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3836, i8* %3837, align 1
  %3838 = xor i32 %3824, %3822
  %3839 = xor i32 %3838, %3825
  %3840 = lshr i32 %3839, 4
  %3841 = trunc i32 %3840 to i8
  %3842 = and i8 %3841, 1
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3842, i8* %3843, align 1
  %3844 = icmp eq i32 %3825, 0
  %3845 = zext i1 %3844 to i8
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3845, i8* %3846, align 1
  %3847 = lshr i32 %3825, 31
  %3848 = trunc i32 %3847 to i8
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3848, i8* %3849, align 1
  %3850 = lshr i32 %3822, 31
  %3851 = lshr i32 %3824, 31
  %3852 = xor i32 %3847, %3850
  %3853 = xor i32 %3847, %3851
  %3854 = add i32 %3852, %3853
  %3855 = icmp eq i32 %3854, 2
  %3856 = zext i1 %3855 to i8
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3856, i8* %3857, align 1
  store %struct.Memory* %loadMem_46303b, %struct.Memory** %MEMORY
  %loadMem_463042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3859 = getelementptr inbounds %struct.GPR, %struct.GPR* %3858, i32 0, i32 33
  %3860 = getelementptr inbounds %struct.Reg, %struct.Reg* %3859, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %3860 to i64*
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3862 = getelementptr inbounds %struct.GPR, %struct.GPR* %3861, i32 0, i32 5
  %3863 = getelementptr inbounds %struct.Reg, %struct.Reg* %3862, i32 0, i32 0
  %ECX.i778 = bitcast %union.anon* %3863 to i32*
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3865 = getelementptr inbounds %struct.GPR, %struct.GPR* %3864, i32 0, i32 1
  %3866 = getelementptr inbounds %struct.Reg, %struct.Reg* %3865, i32 0, i32 0
  %RAX.i779 = bitcast %union.anon* %3866 to i64*
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3868 = getelementptr inbounds %struct.GPR, %struct.GPR* %3867, i32 0, i32 7
  %3869 = getelementptr inbounds %struct.Reg, %struct.Reg* %3868, i32 0, i32 0
  %RDX.i780 = bitcast %union.anon* %3869 to i64*
  %3870 = load i64, i64* %RAX.i779
  %3871 = load i64, i64* %RDX.i780
  %3872 = mul i64 %3871, 4
  %3873 = add i64 %3870, 200
  %3874 = add i64 %3873, %3872
  %3875 = load i32, i32* %ECX.i778
  %3876 = zext i32 %3875 to i64
  %3877 = load i64, i64* %PC.i777
  %3878 = add i64 %3877, 7
  store i64 %3878, i64* %PC.i777
  %3879 = inttoptr i64 %3874 to i32*
  store i32 %3875, i32* %3879
  store %struct.Memory* %loadMem_463042, %struct.Memory** %MEMORY
  %loadMem_463049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3881 = getelementptr inbounds %struct.GPR, %struct.GPR* %3880, i32 0, i32 33
  %3882 = getelementptr inbounds %struct.Reg, %struct.Reg* %3881, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %3882 to i64*
  %3883 = load i64, i64* %PC.i776
  %3884 = add i64 %3883, 34
  %3885 = load i64, i64* %PC.i776
  %3886 = add i64 %3885, 5
  store i64 %3886, i64* %PC.i776
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3884, i64* %3887, align 8
  store %struct.Memory* %loadMem_463049, %struct.Memory** %MEMORY
  br label %block_.L_46306b

block_.L_46304e:                                  ; preds = %block_.L_46301e
  %loadMem_46304e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3889 = getelementptr inbounds %struct.GPR, %struct.GPR* %3888, i32 0, i32 33
  %3890 = getelementptr inbounds %struct.Reg, %struct.Reg* %3889, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %3890 to i64*
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3892 = getelementptr inbounds %struct.GPR, %struct.GPR* %3891, i32 0, i32 1
  %3893 = getelementptr inbounds %struct.Reg, %struct.Reg* %3892, i32 0, i32 0
  %RAX.i775 = bitcast %union.anon* %3893 to i64*
  %3894 = load i64, i64* %PC.i774
  %3895 = add i64 %3894, 7
  store i64 %3895, i64* %PC.i774
  %3896 = load i32, i32* bitcast (%G_0x7afd14_type* @G_0x7afd14 to i32*)
  %3897 = zext i32 %3896 to i64
  store i64 %3897, i64* %RAX.i775, align 8
  store %struct.Memory* %loadMem_46304e, %struct.Memory** %MEMORY
  %loadMem_463055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3899 = getelementptr inbounds %struct.GPR, %struct.GPR* %3898, i32 0, i32 33
  %3900 = getelementptr inbounds %struct.Reg, %struct.Reg* %3899, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %3900 to i64*
  %3901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3902 = getelementptr inbounds %struct.GPR, %struct.GPR* %3901, i32 0, i32 5
  %3903 = getelementptr inbounds %struct.Reg, %struct.Reg* %3902, i32 0, i32 0
  %RCX.i772 = bitcast %union.anon* %3903 to i64*
  %3904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3905 = getelementptr inbounds %struct.GPR, %struct.GPR* %3904, i32 0, i32 15
  %3906 = getelementptr inbounds %struct.Reg, %struct.Reg* %3905, i32 0, i32 0
  %RBP.i773 = bitcast %union.anon* %3906 to i64*
  %3907 = load i64, i64* %RBP.i773
  %3908 = sub i64 %3907, 48
  %3909 = load i64, i64* %PC.i771
  %3910 = add i64 %3909, 4
  store i64 %3910, i64* %PC.i771
  %3911 = inttoptr i64 %3908 to i64*
  %3912 = load i64, i64* %3911
  store i64 %3912, i64* %RCX.i772, align 8
  store %struct.Memory* %loadMem_463055, %struct.Memory** %MEMORY
  %loadMem_463059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3914 = getelementptr inbounds %struct.GPR, %struct.GPR* %3913, i32 0, i32 33
  %3915 = getelementptr inbounds %struct.Reg, %struct.Reg* %3914, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %3915 to i64*
  %3916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3917 = getelementptr inbounds %struct.GPR, %struct.GPR* %3916, i32 0, i32 7
  %3918 = getelementptr inbounds %struct.Reg, %struct.Reg* %3917, i32 0, i32 0
  %RDX.i769 = bitcast %union.anon* %3918 to i64*
  %3919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3920 = getelementptr inbounds %struct.GPR, %struct.GPR* %3919, i32 0, i32 15
  %3921 = getelementptr inbounds %struct.Reg, %struct.Reg* %3920, i32 0, i32 0
  %RBP.i770 = bitcast %union.anon* %3921 to i64*
  %3922 = load i64, i64* %RBP.i770
  %3923 = sub i64 %3922, 80
  %3924 = load i64, i64* %PC.i768
  %3925 = add i64 %3924, 4
  store i64 %3925, i64* %PC.i768
  %3926 = inttoptr i64 %3923 to i32*
  %3927 = load i32, i32* %3926
  %3928 = sext i32 %3927 to i64
  store i64 %3928, i64* %RDX.i769, align 8
  store %struct.Memory* %loadMem_463059, %struct.Memory** %MEMORY
  %loadMem_46305d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3930 = getelementptr inbounds %struct.GPR, %struct.GPR* %3929, i32 0, i32 33
  %3931 = getelementptr inbounds %struct.Reg, %struct.Reg* %3930, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %3931 to i64*
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3933 = getelementptr inbounds %struct.GPR, %struct.GPR* %3932, i32 0, i32 1
  %3934 = getelementptr inbounds %struct.Reg, %struct.Reg* %3933, i32 0, i32 0
  %RAX.i765 = bitcast %union.anon* %3934 to i64*
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3936 = getelementptr inbounds %struct.GPR, %struct.GPR* %3935, i32 0, i32 5
  %3937 = getelementptr inbounds %struct.Reg, %struct.Reg* %3936, i32 0, i32 0
  %RCX.i766 = bitcast %union.anon* %3937 to i64*
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3939 = getelementptr inbounds %struct.GPR, %struct.GPR* %3938, i32 0, i32 7
  %3940 = getelementptr inbounds %struct.Reg, %struct.Reg* %3939, i32 0, i32 0
  %RDX.i767 = bitcast %union.anon* %3940 to i64*
  %3941 = load i64, i64* %RAX.i765
  %3942 = load i64, i64* %RCX.i766
  %3943 = load i64, i64* %RDX.i767
  %3944 = mul i64 %3943, 4
  %3945 = add i64 %3942, 200
  %3946 = add i64 %3945, %3944
  %3947 = load i64, i64* %PC.i764
  %3948 = add i64 %3947, 7
  store i64 %3948, i64* %PC.i764
  %3949 = trunc i64 %3941 to i32
  %3950 = inttoptr i64 %3946 to i32*
  %3951 = load i32, i32* %3950
  %3952 = add i32 %3951, %3949
  %3953 = zext i32 %3952 to i64
  store i64 %3953, i64* %RAX.i765, align 8
  %3954 = icmp ult i32 %3952, %3949
  %3955 = icmp ult i32 %3952, %3951
  %3956 = or i1 %3954, %3955
  %3957 = zext i1 %3956 to i8
  %3958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3957, i8* %3958, align 1
  %3959 = and i32 %3952, 255
  %3960 = call i32 @llvm.ctpop.i32(i32 %3959)
  %3961 = trunc i32 %3960 to i8
  %3962 = and i8 %3961, 1
  %3963 = xor i8 %3962, 1
  %3964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3963, i8* %3964, align 1
  %3965 = xor i32 %3951, %3949
  %3966 = xor i32 %3965, %3952
  %3967 = lshr i32 %3966, 4
  %3968 = trunc i32 %3967 to i8
  %3969 = and i8 %3968, 1
  %3970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3969, i8* %3970, align 1
  %3971 = icmp eq i32 %3952, 0
  %3972 = zext i1 %3971 to i8
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3972, i8* %3973, align 1
  %3974 = lshr i32 %3952, 31
  %3975 = trunc i32 %3974 to i8
  %3976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3975, i8* %3976, align 1
  %3977 = lshr i32 %3949, 31
  %3978 = lshr i32 %3951, 31
  %3979 = xor i32 %3974, %3977
  %3980 = xor i32 %3974, %3978
  %3981 = add i32 %3979, %3980
  %3982 = icmp eq i32 %3981, 2
  %3983 = zext i1 %3982 to i8
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3983, i8* %3984, align 1
  store %struct.Memory* %loadMem_46305d, %struct.Memory** %MEMORY
  %loadMem_463064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 33
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %3987 to i64*
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3989 = getelementptr inbounds %struct.GPR, %struct.GPR* %3988, i32 0, i32 1
  %3990 = getelementptr inbounds %struct.Reg, %struct.Reg* %3989, i32 0, i32 0
  %EAX.i761 = bitcast %union.anon* %3990 to i32*
  %3991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3992 = getelementptr inbounds %struct.GPR, %struct.GPR* %3991, i32 0, i32 5
  %3993 = getelementptr inbounds %struct.Reg, %struct.Reg* %3992, i32 0, i32 0
  %RCX.i762 = bitcast %union.anon* %3993 to i64*
  %3994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3995 = getelementptr inbounds %struct.GPR, %struct.GPR* %3994, i32 0, i32 7
  %3996 = getelementptr inbounds %struct.Reg, %struct.Reg* %3995, i32 0, i32 0
  %RDX.i763 = bitcast %union.anon* %3996 to i64*
  %3997 = load i64, i64* %RCX.i762
  %3998 = load i64, i64* %RDX.i763
  %3999 = mul i64 %3998, 4
  %4000 = add i64 %3997, 200
  %4001 = add i64 %4000, %3999
  %4002 = load i32, i32* %EAX.i761
  %4003 = zext i32 %4002 to i64
  %4004 = load i64, i64* %PC.i760
  %4005 = add i64 %4004, 7
  store i64 %4005, i64* %PC.i760
  %4006 = inttoptr i64 %4001 to i32*
  store i32 %4002, i32* %4006
  store %struct.Memory* %loadMem_463064, %struct.Memory** %MEMORY
  br label %block_.L_46306b

block_.L_46306b:                                  ; preds = %block_.L_46304e, %block_463028
  %loadMem_46306b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4008 = getelementptr inbounds %struct.GPR, %struct.GPR* %4007, i32 0, i32 33
  %4009 = getelementptr inbounds %struct.Reg, %struct.Reg* %4008, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %4009 to i64*
  %4010 = load i64, i64* %PC.i759
  %4011 = add i64 %4010, 770
  %4012 = load i64, i64* %PC.i759
  %4013 = add i64 %4012, 5
  store i64 %4013, i64* %PC.i759
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4011, i64* %4014, align 8
  store %struct.Memory* %loadMem_46306b, %struct.Memory** %MEMORY
  br label %block_.L_46336d

block_.L_463070:                                  ; preds = %block_462d02
  %loadMem_463070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4016 = getelementptr inbounds %struct.GPR, %struct.GPR* %4015, i32 0, i32 33
  %4017 = getelementptr inbounds %struct.Reg, %struct.Reg* %4016, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %4017 to i64*
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4019 = getelementptr inbounds %struct.GPR, %struct.GPR* %4018, i32 0, i32 7
  %4020 = getelementptr inbounds %struct.Reg, %struct.Reg* %4019, i32 0, i32 0
  %RDX.i758 = bitcast %union.anon* %4020 to i64*
  %4021 = load i64, i64* %PC.i757
  %4022 = add i64 %4021, 5
  store i64 %4022, i64* %PC.i757
  store i64 4, i64* %RDX.i758, align 8
  store %struct.Memory* %loadMem_463070, %struct.Memory** %MEMORY
  %loadMem_463075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4024 = getelementptr inbounds %struct.GPR, %struct.GPR* %4023, i32 0, i32 33
  %4025 = getelementptr inbounds %struct.Reg, %struct.Reg* %4024, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %4025 to i64*
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4027 = getelementptr inbounds %struct.GPR, %struct.GPR* %4026, i32 0, i32 1
  %4028 = getelementptr inbounds %struct.Reg, %struct.Reg* %4027, i32 0, i32 0
  %EAX.i755 = bitcast %union.anon* %4028 to i32*
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4030 = getelementptr inbounds %struct.GPR, %struct.GPR* %4029, i32 0, i32 1
  %4031 = getelementptr inbounds %struct.Reg, %struct.Reg* %4030, i32 0, i32 0
  %RAX.i756 = bitcast %union.anon* %4031 to i64*
  %4032 = load i64, i64* %RAX.i756
  %4033 = load i32, i32* %EAX.i755
  %4034 = zext i32 %4033 to i64
  %4035 = load i64, i64* %PC.i754
  %4036 = add i64 %4035, 2
  store i64 %4036, i64* %PC.i754
  %4037 = xor i64 %4034, %4032
  %4038 = trunc i64 %4037 to i32
  %4039 = and i64 %4037, 4294967295
  store i64 %4039, i64* %RAX.i756, align 8
  %4040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4040, align 1
  %4041 = and i32 %4038, 255
  %4042 = call i32 @llvm.ctpop.i32(i32 %4041)
  %4043 = trunc i32 %4042 to i8
  %4044 = and i8 %4043, 1
  %4045 = xor i8 %4044, 1
  %4046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4045, i8* %4046, align 1
  %4047 = icmp eq i32 %4038, 0
  %4048 = zext i1 %4047 to i8
  %4049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4048, i8* %4049, align 1
  %4050 = lshr i32 %4038, 31
  %4051 = trunc i32 %4050 to i8
  %4052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4051, i8* %4052, align 1
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4053, align 1
  %4054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4054, align 1
  store %struct.Memory* %loadMem_463075, %struct.Memory** %MEMORY
  %loadMem_463077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4056 = getelementptr inbounds %struct.GPR, %struct.GPR* %4055, i32 0, i32 33
  %4057 = getelementptr inbounds %struct.Reg, %struct.Reg* %4056, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %4057 to i64*
  %4058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4059 = getelementptr inbounds %struct.GPR, %struct.GPR* %4058, i32 0, i32 1
  %4060 = getelementptr inbounds %struct.Reg, %struct.Reg* %4059, i32 0, i32 0
  %EAX.i752 = bitcast %union.anon* %4060 to i32*
  %4061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4062 = getelementptr inbounds %struct.GPR, %struct.GPR* %4061, i32 0, i32 5
  %4063 = getelementptr inbounds %struct.Reg, %struct.Reg* %4062, i32 0, i32 0
  %RCX.i753 = bitcast %union.anon* %4063 to i64*
  %4064 = load i32, i32* %EAX.i752
  %4065 = zext i32 %4064 to i64
  %4066 = load i64, i64* %PC.i751
  %4067 = add i64 %4066, 2
  store i64 %4067, i64* %PC.i751
  %4068 = and i64 %4065, 4294967295
  store i64 %4068, i64* %RCX.i753, align 8
  store %struct.Memory* %loadMem_463077, %struct.Memory** %MEMORY
  %loadMem_463079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4070 = getelementptr inbounds %struct.GPR, %struct.GPR* %4069, i32 0, i32 33
  %4071 = getelementptr inbounds %struct.Reg, %struct.Reg* %4070, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %4071 to i64*
  %4072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4073 = getelementptr inbounds %struct.GPR, %struct.GPR* %4072, i32 0, i32 11
  %4074 = getelementptr inbounds %struct.Reg, %struct.Reg* %4073, i32 0, i32 0
  %RDI.i749 = bitcast %union.anon* %4074 to i64*
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4076 = getelementptr inbounds %struct.GPR, %struct.GPR* %4075, i32 0, i32 15
  %4077 = getelementptr inbounds %struct.Reg, %struct.Reg* %4076, i32 0, i32 0
  %RBP.i750 = bitcast %union.anon* %4077 to i64*
  %4078 = load i64, i64* %RBP.i750
  %4079 = sub i64 %4078, 100
  %4080 = load i64, i64* %PC.i748
  %4081 = add i64 %4080, 3
  store i64 %4081, i64* %PC.i748
  %4082 = inttoptr i64 %4079 to i32*
  %4083 = load i32, i32* %4082
  %4084 = zext i32 %4083 to i64
  store i64 %4084, i64* %RDI.i749, align 8
  store %struct.Memory* %loadMem_463079, %struct.Memory** %MEMORY
  %loadMem_46307c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4086 = getelementptr inbounds %struct.GPR, %struct.GPR* %4085, i32 0, i32 33
  %4087 = getelementptr inbounds %struct.Reg, %struct.Reg* %4086, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %4087 to i64*
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4089 = getelementptr inbounds %struct.GPR, %struct.GPR* %4088, i32 0, i32 9
  %4090 = getelementptr inbounds %struct.Reg, %struct.Reg* %4089, i32 0, i32 0
  %RSI.i746 = bitcast %union.anon* %4090 to i64*
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4092 = getelementptr inbounds %struct.GPR, %struct.GPR* %4091, i32 0, i32 15
  %4093 = getelementptr inbounds %struct.Reg, %struct.Reg* %4092, i32 0, i32 0
  %RBP.i747 = bitcast %union.anon* %4093 to i64*
  %4094 = load i64, i64* %RBP.i747
  %4095 = sub i64 %4094, 52
  %4096 = load i64, i64* %PC.i745
  %4097 = add i64 %4096, 3
  store i64 %4097, i64* %PC.i745
  %4098 = inttoptr i64 %4095 to i32*
  %4099 = load i32, i32* %4098
  %4100 = zext i32 %4099 to i64
  store i64 %4100, i64* %RSI.i746, align 8
  store %struct.Memory* %loadMem_46307c, %struct.Memory** %MEMORY
  %loadMem1_46307f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4102 = getelementptr inbounds %struct.GPR, %struct.GPR* %4101, i32 0, i32 33
  %4103 = getelementptr inbounds %struct.Reg, %struct.Reg* %4102, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %4103 to i64*
  %4104 = load i64, i64* %PC.i744
  %4105 = add i64 %4104, -334543
  %4106 = load i64, i64* %PC.i744
  %4107 = add i64 %4106, 5
  %4108 = load i64, i64* %PC.i744
  %4109 = add i64 %4108, 5
  store i64 %4109, i64* %PC.i744
  %4110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4111 = load i64, i64* %4110, align 8
  %4112 = add i64 %4111, -8
  %4113 = inttoptr i64 %4112 to i64*
  store i64 %4107, i64* %4113
  store i64 %4112, i64* %4110, align 8
  %4114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4105, i64* %4114, align 8
  store %struct.Memory* %loadMem1_46307f, %struct.Memory** %MEMORY
  %loadMem2_46307f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_46307f = load i64, i64* %3
  %call2_46307f = call %struct.Memory* @sub_4115b0.approxlib(%struct.State* %0, i64 %loadPC_46307f, %struct.Memory* %loadMem2_46307f)
  store %struct.Memory* %call2_46307f, %struct.Memory** %MEMORY
  %loadMem_463084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4116 = getelementptr inbounds %struct.GPR, %struct.GPR* %4115, i32 0, i32 33
  %4117 = getelementptr inbounds %struct.Reg, %struct.Reg* %4116, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %4117 to i64*
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4119 = getelementptr inbounds %struct.GPR, %struct.GPR* %4118, i32 0, i32 1
  %4120 = getelementptr inbounds %struct.Reg, %struct.Reg* %4119, i32 0, i32 0
  %EAX.i742 = bitcast %union.anon* %4120 to i32*
  %4121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4122 = getelementptr inbounds %struct.GPR, %struct.GPR* %4121, i32 0, i32 15
  %4123 = getelementptr inbounds %struct.Reg, %struct.Reg* %4122, i32 0, i32 0
  %RBP.i743 = bitcast %union.anon* %4123 to i64*
  %4124 = load i64, i64* %RBP.i743
  %4125 = sub i64 %4124, 140
  %4126 = load i32, i32* %EAX.i742
  %4127 = zext i32 %4126 to i64
  %4128 = load i64, i64* %PC.i741
  %4129 = add i64 %4128, 6
  store i64 %4129, i64* %PC.i741
  %4130 = inttoptr i64 %4125 to i32*
  store i32 %4126, i32* %4130
  store %struct.Memory* %loadMem_463084, %struct.Memory** %MEMORY
  %loadMem_46308a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4132 = getelementptr inbounds %struct.GPR, %struct.GPR* %4131, i32 0, i32 33
  %4133 = getelementptr inbounds %struct.Reg, %struct.Reg* %4132, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %4133 to i64*
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4135 = getelementptr inbounds %struct.GPR, %struct.GPR* %4134, i32 0, i32 15
  %4136 = getelementptr inbounds %struct.Reg, %struct.Reg* %4135, i32 0, i32 0
  %RBP.i740 = bitcast %union.anon* %4136 to i64*
  %4137 = load i64, i64* %RBP.i740
  %4138 = sub i64 %4137, 140
  %4139 = load i64, i64* %PC.i739
  %4140 = add i64 %4139, 7
  store i64 %4140, i64* %PC.i739
  %4141 = inttoptr i64 %4138 to i32*
  %4142 = load i32, i32* %4141
  %4143 = sub i32 %4142, 4
  %4144 = icmp ult i32 %4142, 4
  %4145 = zext i1 %4144 to i8
  %4146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4145, i8* %4146, align 1
  %4147 = and i32 %4143, 255
  %4148 = call i32 @llvm.ctpop.i32(i32 %4147)
  %4149 = trunc i32 %4148 to i8
  %4150 = and i8 %4149, 1
  %4151 = xor i8 %4150, 1
  %4152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4151, i8* %4152, align 1
  %4153 = xor i32 %4142, 4
  %4154 = xor i32 %4153, %4143
  %4155 = lshr i32 %4154, 4
  %4156 = trunc i32 %4155 to i8
  %4157 = and i8 %4156, 1
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4157, i8* %4158, align 1
  %4159 = icmp eq i32 %4143, 0
  %4160 = zext i1 %4159 to i8
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4160, i8* %4161, align 1
  %4162 = lshr i32 %4143, 31
  %4163 = trunc i32 %4162 to i8
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4163, i8* %4164, align 1
  %4165 = lshr i32 %4142, 31
  %4166 = xor i32 %4162, %4165
  %4167 = add i32 %4166, %4165
  %4168 = icmp eq i32 %4167, 2
  %4169 = zext i1 %4168 to i8
  %4170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4169, i8* %4170, align 1
  store %struct.Memory* %loadMem_46308a, %struct.Memory** %MEMORY
  %loadMem_463091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4172 = getelementptr inbounds %struct.GPR, %struct.GPR* %4171, i32 0, i32 33
  %4173 = getelementptr inbounds %struct.Reg, %struct.Reg* %4172, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %4173 to i64*
  %4174 = load i64, i64* %PC.i738
  %4175 = add i64 %4174, 16
  %4176 = load i64, i64* %PC.i738
  %4177 = add i64 %4176, 6
  %4178 = load i64, i64* %PC.i738
  %4179 = add i64 %4178, 6
  store i64 %4179, i64* %PC.i738
  %4180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4181 = load i8, i8* %4180, align 1
  %4182 = icmp ne i8 %4181, 0
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4184 = load i8, i8* %4183, align 1
  %4185 = icmp ne i8 %4184, 0
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4187 = load i8, i8* %4186, align 1
  %4188 = icmp ne i8 %4187, 0
  %4189 = xor i1 %4185, %4188
  %4190 = or i1 %4182, %4189
  %4191 = zext i1 %4190 to i8
  store i8 %4191, i8* %BRANCH_TAKEN, align 1
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4193 = select i1 %4190, i64 %4175, i64 %4177
  store i64 %4193, i64* %4192, align 8
  store %struct.Memory* %loadMem_463091, %struct.Memory** %MEMORY
  %loadBr_463091 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_463091 = icmp eq i8 %loadBr_463091, 1
  br i1 %cmpBr_463091, label %block_.L_4630a1, label %block_463097

block_463097:                                     ; preds = %block_.L_463070
  %loadMem_463097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4195 = getelementptr inbounds %struct.GPR, %struct.GPR* %4194, i32 0, i32 33
  %4196 = getelementptr inbounds %struct.Reg, %struct.Reg* %4195, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %4196 to i64*
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4198 = getelementptr inbounds %struct.GPR, %struct.GPR* %4197, i32 0, i32 15
  %4199 = getelementptr inbounds %struct.Reg, %struct.Reg* %4198, i32 0, i32 0
  %RBP.i737 = bitcast %union.anon* %4199 to i64*
  %4200 = load i64, i64* %RBP.i737
  %4201 = sub i64 %4200, 140
  %4202 = load i64, i64* %PC.i736
  %4203 = add i64 %4202, 10
  store i64 %4203, i64* %PC.i736
  %4204 = inttoptr i64 %4201 to i32*
  store i32 4, i32* %4204
  store %struct.Memory* %loadMem_463097, %struct.Memory** %MEMORY
  br label %block_.L_4630a1

block_.L_4630a1:                                  ; preds = %block_463097, %block_.L_463070
  %loadMem_4630a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4206 = getelementptr inbounds %struct.GPR, %struct.GPR* %4205, i32 0, i32 33
  %4207 = getelementptr inbounds %struct.Reg, %struct.Reg* %4206, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %4207 to i64*
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4209 = getelementptr inbounds %struct.GPR, %struct.GPR* %4208, i32 0, i32 1
  %4210 = getelementptr inbounds %struct.Reg, %struct.Reg* %4209, i32 0, i32 0
  %RAX.i734 = bitcast %union.anon* %4210 to i64*
  %4211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4212 = getelementptr inbounds %struct.GPR, %struct.GPR* %4211, i32 0, i32 15
  %4213 = getelementptr inbounds %struct.Reg, %struct.Reg* %4212, i32 0, i32 0
  %RBP.i735 = bitcast %union.anon* %4213 to i64*
  %4214 = load i64, i64* %RBP.i735
  %4215 = sub i64 %4214, 140
  %4216 = load i64, i64* %PC.i733
  %4217 = add i64 %4216, 7
  store i64 %4217, i64* %PC.i733
  %4218 = inttoptr i64 %4215 to i32*
  %4219 = load i32, i32* %4218
  %4220 = sext i32 %4219 to i64
  store i64 %4220, i64* %RAX.i734, align 8
  store %struct.Memory* %loadMem_4630a1, %struct.Memory** %MEMORY
  %loadMem_4630a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4222 = getelementptr inbounds %struct.GPR, %struct.GPR* %4221, i32 0, i32 33
  %4223 = getelementptr inbounds %struct.Reg, %struct.Reg* %4222, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %4223 to i64*
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4225 = getelementptr inbounds %struct.GPR, %struct.GPR* %4224, i32 0, i32 1
  %4226 = getelementptr inbounds %struct.Reg, %struct.Reg* %4225, i32 0, i32 0
  %RAX.i731 = bitcast %union.anon* %4226 to i64*
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4228 = getelementptr inbounds %struct.GPR, %struct.GPR* %4227, i32 0, i32 5
  %4229 = getelementptr inbounds %struct.Reg, %struct.Reg* %4228, i32 0, i32 0
  %RCX.i732 = bitcast %union.anon* %4229 to i64*
  %4230 = load i64, i64* %RAX.i731
  %4231 = mul i64 %4230, 4
  %4232 = add i64 %4231, 8060192
  %4233 = load i64, i64* %PC.i730
  %4234 = add i64 %4233, 7
  store i64 %4234, i64* %PC.i730
  %4235 = inttoptr i64 %4232 to i32*
  %4236 = load i32, i32* %4235
  %4237 = zext i32 %4236 to i64
  store i64 %4237, i64* %RCX.i732, align 8
  store %struct.Memory* %loadMem_4630a8, %struct.Memory** %MEMORY
  %loadMem_4630af = load %struct.Memory*, %struct.Memory** %MEMORY
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4239 = getelementptr inbounds %struct.GPR, %struct.GPR* %4238, i32 0, i32 33
  %4240 = getelementptr inbounds %struct.Reg, %struct.Reg* %4239, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %4240 to i64*
  %4241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4242 = getelementptr inbounds %struct.GPR, %struct.GPR* %4241, i32 0, i32 1
  %4243 = getelementptr inbounds %struct.Reg, %struct.Reg* %4242, i32 0, i32 0
  %RAX.i728 = bitcast %union.anon* %4243 to i64*
  %4244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4245 = getelementptr inbounds %struct.GPR, %struct.GPR* %4244, i32 0, i32 15
  %4246 = getelementptr inbounds %struct.Reg, %struct.Reg* %4245, i32 0, i32 0
  %RBP.i729 = bitcast %union.anon* %4246 to i64*
  %4247 = load i64, i64* %RBP.i729
  %4248 = sub i64 %4247, 48
  %4249 = load i64, i64* %PC.i727
  %4250 = add i64 %4249, 4
  store i64 %4250, i64* %PC.i727
  %4251 = inttoptr i64 %4248 to i64*
  %4252 = load i64, i64* %4251
  store i64 %4252, i64* %RAX.i728, align 8
  store %struct.Memory* %loadMem_4630af, %struct.Memory** %MEMORY
  %loadMem_4630b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4254 = getelementptr inbounds %struct.GPR, %struct.GPR* %4253, i32 0, i32 33
  %4255 = getelementptr inbounds %struct.Reg, %struct.Reg* %4254, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %4255 to i64*
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4257 = getelementptr inbounds %struct.GPR, %struct.GPR* %4256, i32 0, i32 7
  %4258 = getelementptr inbounds %struct.Reg, %struct.Reg* %4257, i32 0, i32 0
  %RDX.i725 = bitcast %union.anon* %4258 to i64*
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4260 = getelementptr inbounds %struct.GPR, %struct.GPR* %4259, i32 0, i32 15
  %4261 = getelementptr inbounds %struct.Reg, %struct.Reg* %4260, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %4261 to i64*
  %4262 = load i64, i64* %RBP.i726
  %4263 = sub i64 %4262, 80
  %4264 = load i64, i64* %PC.i724
  %4265 = add i64 %4264, 4
  store i64 %4265, i64* %PC.i724
  %4266 = inttoptr i64 %4263 to i32*
  %4267 = load i32, i32* %4266
  %4268 = sext i32 %4267 to i64
  store i64 %4268, i64* %RDX.i725, align 8
  store %struct.Memory* %loadMem_4630b3, %struct.Memory** %MEMORY
  %loadMem_4630b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4270 = getelementptr inbounds %struct.GPR, %struct.GPR* %4269, i32 0, i32 33
  %4271 = getelementptr inbounds %struct.Reg, %struct.Reg* %4270, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %4271 to i64*
  %4272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4273 = getelementptr inbounds %struct.GPR, %struct.GPR* %4272, i32 0, i32 1
  %4274 = getelementptr inbounds %struct.Reg, %struct.Reg* %4273, i32 0, i32 0
  %RAX.i721 = bitcast %union.anon* %4274 to i64*
  %4275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4276 = getelementptr inbounds %struct.GPR, %struct.GPR* %4275, i32 0, i32 5
  %4277 = getelementptr inbounds %struct.Reg, %struct.Reg* %4276, i32 0, i32 0
  %RCX.i722 = bitcast %union.anon* %4277 to i64*
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4279 = getelementptr inbounds %struct.GPR, %struct.GPR* %4278, i32 0, i32 7
  %4280 = getelementptr inbounds %struct.Reg, %struct.Reg* %4279, i32 0, i32 0
  %RDX.i723 = bitcast %union.anon* %4280 to i64*
  %4281 = load i64, i64* %RCX.i722
  %4282 = load i64, i64* %RAX.i721
  %4283 = load i64, i64* %RDX.i723
  %4284 = mul i64 %4283, 4
  %4285 = add i64 %4282, 200
  %4286 = add i64 %4285, %4284
  %4287 = load i64, i64* %PC.i720
  %4288 = add i64 %4287, 7
  store i64 %4288, i64* %PC.i720
  %4289 = trunc i64 %4281 to i32
  %4290 = inttoptr i64 %4286 to i32*
  %4291 = load i32, i32* %4290
  %4292 = add i32 %4291, %4289
  %4293 = zext i32 %4292 to i64
  store i64 %4293, i64* %RCX.i722, align 8
  %4294 = icmp ult i32 %4292, %4289
  %4295 = icmp ult i32 %4292, %4291
  %4296 = or i1 %4294, %4295
  %4297 = zext i1 %4296 to i8
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4297, i8* %4298, align 1
  %4299 = and i32 %4292, 255
  %4300 = call i32 @llvm.ctpop.i32(i32 %4299)
  %4301 = trunc i32 %4300 to i8
  %4302 = and i8 %4301, 1
  %4303 = xor i8 %4302, 1
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4303, i8* %4304, align 1
  %4305 = xor i32 %4291, %4289
  %4306 = xor i32 %4305, %4292
  %4307 = lshr i32 %4306, 4
  %4308 = trunc i32 %4307 to i8
  %4309 = and i8 %4308, 1
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4309, i8* %4310, align 1
  %4311 = icmp eq i32 %4292, 0
  %4312 = zext i1 %4311 to i8
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4312, i8* %4313, align 1
  %4314 = lshr i32 %4292, 31
  %4315 = trunc i32 %4314 to i8
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4315, i8* %4316, align 1
  %4317 = lshr i32 %4289, 31
  %4318 = lshr i32 %4291, 31
  %4319 = xor i32 %4314, %4317
  %4320 = xor i32 %4314, %4318
  %4321 = add i32 %4319, %4320
  %4322 = icmp eq i32 %4321, 2
  %4323 = zext i1 %4322 to i8
  %4324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4323, i8* %4324, align 1
  store %struct.Memory* %loadMem_4630b7, %struct.Memory** %MEMORY
  %loadMem_4630be = load %struct.Memory*, %struct.Memory** %MEMORY
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4326 = getelementptr inbounds %struct.GPR, %struct.GPR* %4325, i32 0, i32 33
  %4327 = getelementptr inbounds %struct.Reg, %struct.Reg* %4326, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %4327 to i64*
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4329 = getelementptr inbounds %struct.GPR, %struct.GPR* %4328, i32 0, i32 5
  %4330 = getelementptr inbounds %struct.Reg, %struct.Reg* %4329, i32 0, i32 0
  %ECX.i717 = bitcast %union.anon* %4330 to i32*
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 1
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %RAX.i718 = bitcast %union.anon* %4333 to i64*
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4335 = getelementptr inbounds %struct.GPR, %struct.GPR* %4334, i32 0, i32 7
  %4336 = getelementptr inbounds %struct.Reg, %struct.Reg* %4335, i32 0, i32 0
  %RDX.i719 = bitcast %union.anon* %4336 to i64*
  %4337 = load i64, i64* %RAX.i718
  %4338 = load i64, i64* %RDX.i719
  %4339 = mul i64 %4338, 4
  %4340 = add i64 %4337, 200
  %4341 = add i64 %4340, %4339
  %4342 = load i32, i32* %ECX.i717
  %4343 = zext i32 %4342 to i64
  %4344 = load i64, i64* %PC.i716
  %4345 = add i64 %4344, 7
  store i64 %4345, i64* %PC.i716
  %4346 = inttoptr i64 %4341 to i32*
  store i32 %4342, i32* %4346
  store %struct.Memory* %loadMem_4630be, %struct.Memory** %MEMORY
  %loadMem_4630c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4348 = getelementptr inbounds %struct.GPR, %struct.GPR* %4347, i32 0, i32 33
  %4349 = getelementptr inbounds %struct.Reg, %struct.Reg* %4348, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %4349 to i64*
  %4350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4351 = getelementptr inbounds %struct.GPR, %struct.GPR* %4350, i32 0, i32 15
  %4352 = getelementptr inbounds %struct.Reg, %struct.Reg* %4351, i32 0, i32 0
  %RBP.i715 = bitcast %union.anon* %4352 to i64*
  %4353 = load i64, i64* %RBP.i715
  %4354 = sub i64 %4353, 140
  %4355 = load i64, i64* %PC.i714
  %4356 = add i64 %4355, 7
  store i64 %4356, i64* %PC.i714
  %4357 = inttoptr i64 %4354 to i32*
  %4358 = load i32, i32* %4357
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4359, align 1
  %4360 = and i32 %4358, 255
  %4361 = call i32 @llvm.ctpop.i32(i32 %4360)
  %4362 = trunc i32 %4361 to i8
  %4363 = and i8 %4362, 1
  %4364 = xor i8 %4363, 1
  %4365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4364, i8* %4365, align 1
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4366, align 1
  %4367 = icmp eq i32 %4358, 0
  %4368 = zext i1 %4367 to i8
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4368, i8* %4369, align 1
  %4370 = lshr i32 %4358, 31
  %4371 = trunc i32 %4370 to i8
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4371, i8* %4372, align 1
  %4373 = lshr i32 %4358, 31
  %4374 = xor i32 %4370, %4373
  %4375 = add i32 %4374, %4373
  %4376 = icmp eq i32 %4375, 2
  %4377 = zext i1 %4376 to i8
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4377, i8* %4378, align 1
  store %struct.Memory* %loadMem_4630c5, %struct.Memory** %MEMORY
  %loadMem_4630cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4380 = getelementptr inbounds %struct.GPR, %struct.GPR* %4379, i32 0, i32 33
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %4381 to i64*
  %4382 = load i64, i64* %PC.i713
  %4383 = add i64 %4382, 45
  %4384 = load i64, i64* %PC.i713
  %4385 = add i64 %4384, 6
  %4386 = load i64, i64* %PC.i713
  %4387 = add i64 %4386, 6
  store i64 %4387, i64* %PC.i713
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4389 = load i8, i8* %4388, align 1
  %4390 = icmp eq i8 %4389, 0
  %4391 = zext i1 %4390 to i8
  store i8 %4391, i8* %BRANCH_TAKEN, align 1
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4393 = select i1 %4390, i64 %4383, i64 %4385
  store i64 %4393, i64* %4392, align 8
  store %struct.Memory* %loadMem_4630cc, %struct.Memory** %MEMORY
  %loadBr_4630cc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4630cc = icmp eq i8 %loadBr_4630cc, 1
  br i1 %cmpBr_4630cc, label %block_.L_4630f9, label %block_4630d2

block_4630d2:                                     ; preds = %block_.L_4630a1
  %loadMem_4630d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4395 = getelementptr inbounds %struct.GPR, %struct.GPR* %4394, i32 0, i32 33
  %4396 = getelementptr inbounds %struct.Reg, %struct.Reg* %4395, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %4396 to i64*
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4398 = getelementptr inbounds %struct.GPR, %struct.GPR* %4397, i32 0, i32 15
  %4399 = getelementptr inbounds %struct.Reg, %struct.Reg* %4398, i32 0, i32 0
  %RBP.i712 = bitcast %union.anon* %4399 to i64*
  %4400 = load i64, i64* %RBP.i712
  %4401 = sub i64 %4400, 120
  %4402 = load i64, i64* %PC.i711
  %4403 = add i64 %4402, 4
  store i64 %4403, i64* %PC.i711
  %4404 = inttoptr i64 %4401 to i32*
  %4405 = load i32, i32* %4404
  %4406 = sub i32 %4405, 1
  %4407 = icmp ult i32 %4405, 1
  %4408 = zext i1 %4407 to i8
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4408, i8* %4409, align 1
  %4410 = and i32 %4406, 255
  %4411 = call i32 @llvm.ctpop.i32(i32 %4410)
  %4412 = trunc i32 %4411 to i8
  %4413 = and i8 %4412, 1
  %4414 = xor i8 %4413, 1
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4414, i8* %4415, align 1
  %4416 = xor i32 %4405, 1
  %4417 = xor i32 %4416, %4406
  %4418 = lshr i32 %4417, 4
  %4419 = trunc i32 %4418 to i8
  %4420 = and i8 %4419, 1
  %4421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4420, i8* %4421, align 1
  %4422 = icmp eq i32 %4406, 0
  %4423 = zext i1 %4422 to i8
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4423, i8* %4424, align 1
  %4425 = lshr i32 %4406, 31
  %4426 = trunc i32 %4425 to i8
  %4427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4426, i8* %4427, align 1
  %4428 = lshr i32 %4405, 31
  %4429 = xor i32 %4425, %4428
  %4430 = add i32 %4429, %4428
  %4431 = icmp eq i32 %4430, 2
  %4432 = zext i1 %4431 to i8
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4432, i8* %4433, align 1
  store %struct.Memory* %loadMem_4630d2, %struct.Memory** %MEMORY
  %loadMem_4630d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4435 = getelementptr inbounds %struct.GPR, %struct.GPR* %4434, i32 0, i32 33
  %4436 = getelementptr inbounds %struct.Reg, %struct.Reg* %4435, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %4436 to i64*
  %4437 = load i64, i64* %PC.i710
  %4438 = add i64 %4437, 35
  %4439 = load i64, i64* %PC.i710
  %4440 = add i64 %4439, 6
  %4441 = load i64, i64* %PC.i710
  %4442 = add i64 %4441, 6
  store i64 %4442, i64* %PC.i710
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4444 = load i8, i8* %4443, align 1
  %4445 = icmp eq i8 %4444, 0
  %4446 = zext i1 %4445 to i8
  store i8 %4446, i8* %BRANCH_TAKEN, align 1
  %4447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4448 = select i1 %4445, i64 %4438, i64 %4440
  store i64 %4448, i64* %4447, align 8
  store %struct.Memory* %loadMem_4630d6, %struct.Memory** %MEMORY
  %loadBr_4630d6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4630d6 = icmp eq i8 %loadBr_4630d6, 1
  br i1 %cmpBr_4630d6, label %block_.L_4630f9, label %block_4630dc

block_4630dc:                                     ; preds = %block_4630d2
  %loadMem_4630dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4450 = getelementptr inbounds %struct.GPR, %struct.GPR* %4449, i32 0, i32 33
  %4451 = getelementptr inbounds %struct.Reg, %struct.Reg* %4450, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %4451 to i64*
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4453 = getelementptr inbounds %struct.GPR, %struct.GPR* %4452, i32 0, i32 1
  %4454 = getelementptr inbounds %struct.Reg, %struct.Reg* %4453, i32 0, i32 0
  %RAX.i709 = bitcast %union.anon* %4454 to i64*
  %4455 = load i64, i64* %PC.i708
  %4456 = add i64 %4455, 7
  store i64 %4456, i64* %PC.i708
  %4457 = load i32, i32* bitcast (%G_0x7afd34_type* @G_0x7afd34 to i32*)
  %4458 = zext i32 %4457 to i64
  store i64 %4458, i64* %RAX.i709, align 8
  store %struct.Memory* %loadMem_4630dc, %struct.Memory** %MEMORY
  %loadMem_4630e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4460 = getelementptr inbounds %struct.GPR, %struct.GPR* %4459, i32 0, i32 33
  %4461 = getelementptr inbounds %struct.Reg, %struct.Reg* %4460, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %4461 to i64*
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4463 = getelementptr inbounds %struct.GPR, %struct.GPR* %4462, i32 0, i32 5
  %4464 = getelementptr inbounds %struct.Reg, %struct.Reg* %4463, i32 0, i32 0
  %RCX.i706 = bitcast %union.anon* %4464 to i64*
  %4465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4466 = getelementptr inbounds %struct.GPR, %struct.GPR* %4465, i32 0, i32 15
  %4467 = getelementptr inbounds %struct.Reg, %struct.Reg* %4466, i32 0, i32 0
  %RBP.i707 = bitcast %union.anon* %4467 to i64*
  %4468 = load i64, i64* %RBP.i707
  %4469 = sub i64 %4468, 48
  %4470 = load i64, i64* %PC.i705
  %4471 = add i64 %4470, 4
  store i64 %4471, i64* %PC.i705
  %4472 = inttoptr i64 %4469 to i64*
  %4473 = load i64, i64* %4472
  store i64 %4473, i64* %RCX.i706, align 8
  store %struct.Memory* %loadMem_4630e3, %struct.Memory** %MEMORY
  %loadMem_4630e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4475 = getelementptr inbounds %struct.GPR, %struct.GPR* %4474, i32 0, i32 33
  %4476 = getelementptr inbounds %struct.Reg, %struct.Reg* %4475, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %4476 to i64*
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4478 = getelementptr inbounds %struct.GPR, %struct.GPR* %4477, i32 0, i32 7
  %4479 = getelementptr inbounds %struct.Reg, %struct.Reg* %4478, i32 0, i32 0
  %RDX.i703 = bitcast %union.anon* %4479 to i64*
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4481 = getelementptr inbounds %struct.GPR, %struct.GPR* %4480, i32 0, i32 15
  %4482 = getelementptr inbounds %struct.Reg, %struct.Reg* %4481, i32 0, i32 0
  %RBP.i704 = bitcast %union.anon* %4482 to i64*
  %4483 = load i64, i64* %RBP.i704
  %4484 = sub i64 %4483, 80
  %4485 = load i64, i64* %PC.i702
  %4486 = add i64 %4485, 4
  store i64 %4486, i64* %PC.i702
  %4487 = inttoptr i64 %4484 to i32*
  %4488 = load i32, i32* %4487
  %4489 = sext i32 %4488 to i64
  store i64 %4489, i64* %RDX.i703, align 8
  store %struct.Memory* %loadMem_4630e7, %struct.Memory** %MEMORY
  %loadMem_4630eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4491 = getelementptr inbounds %struct.GPR, %struct.GPR* %4490, i32 0, i32 33
  %4492 = getelementptr inbounds %struct.Reg, %struct.Reg* %4491, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %4492 to i64*
  %4493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4494 = getelementptr inbounds %struct.GPR, %struct.GPR* %4493, i32 0, i32 1
  %4495 = getelementptr inbounds %struct.Reg, %struct.Reg* %4494, i32 0, i32 0
  %RAX.i699 = bitcast %union.anon* %4495 to i64*
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4497 = getelementptr inbounds %struct.GPR, %struct.GPR* %4496, i32 0, i32 5
  %4498 = getelementptr inbounds %struct.Reg, %struct.Reg* %4497, i32 0, i32 0
  %RCX.i700 = bitcast %union.anon* %4498 to i64*
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4500 = getelementptr inbounds %struct.GPR, %struct.GPR* %4499, i32 0, i32 7
  %4501 = getelementptr inbounds %struct.Reg, %struct.Reg* %4500, i32 0, i32 0
  %RDX.i701 = bitcast %union.anon* %4501 to i64*
  %4502 = load i64, i64* %RAX.i699
  %4503 = load i64, i64* %RCX.i700
  %4504 = load i64, i64* %RDX.i701
  %4505 = mul i64 %4504, 4
  %4506 = add i64 %4503, 200
  %4507 = add i64 %4506, %4505
  %4508 = load i64, i64* %PC.i698
  %4509 = add i64 %4508, 7
  store i64 %4509, i64* %PC.i698
  %4510 = trunc i64 %4502 to i32
  %4511 = inttoptr i64 %4507 to i32*
  %4512 = load i32, i32* %4511
  %4513 = add i32 %4512, %4510
  %4514 = zext i32 %4513 to i64
  store i64 %4514, i64* %RAX.i699, align 8
  %4515 = icmp ult i32 %4513, %4510
  %4516 = icmp ult i32 %4513, %4512
  %4517 = or i1 %4515, %4516
  %4518 = zext i1 %4517 to i8
  %4519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4518, i8* %4519, align 1
  %4520 = and i32 %4513, 255
  %4521 = call i32 @llvm.ctpop.i32(i32 %4520)
  %4522 = trunc i32 %4521 to i8
  %4523 = and i8 %4522, 1
  %4524 = xor i8 %4523, 1
  %4525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4524, i8* %4525, align 1
  %4526 = xor i32 %4512, %4510
  %4527 = xor i32 %4526, %4513
  %4528 = lshr i32 %4527, 4
  %4529 = trunc i32 %4528 to i8
  %4530 = and i8 %4529, 1
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4530, i8* %4531, align 1
  %4532 = icmp eq i32 %4513, 0
  %4533 = zext i1 %4532 to i8
  %4534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4533, i8* %4534, align 1
  %4535 = lshr i32 %4513, 31
  %4536 = trunc i32 %4535 to i8
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4536, i8* %4537, align 1
  %4538 = lshr i32 %4510, 31
  %4539 = lshr i32 %4512, 31
  %4540 = xor i32 %4535, %4538
  %4541 = xor i32 %4535, %4539
  %4542 = add i32 %4540, %4541
  %4543 = icmp eq i32 %4542, 2
  %4544 = zext i1 %4543 to i8
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4544, i8* %4545, align 1
  store %struct.Memory* %loadMem_4630eb, %struct.Memory** %MEMORY
  %loadMem_4630f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4547 = getelementptr inbounds %struct.GPR, %struct.GPR* %4546, i32 0, i32 33
  %4548 = getelementptr inbounds %struct.Reg, %struct.Reg* %4547, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %4548 to i64*
  %4549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4550 = getelementptr inbounds %struct.GPR, %struct.GPR* %4549, i32 0, i32 1
  %4551 = getelementptr inbounds %struct.Reg, %struct.Reg* %4550, i32 0, i32 0
  %EAX.i695 = bitcast %union.anon* %4551 to i32*
  %4552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4553 = getelementptr inbounds %struct.GPR, %struct.GPR* %4552, i32 0, i32 5
  %4554 = getelementptr inbounds %struct.Reg, %struct.Reg* %4553, i32 0, i32 0
  %RCX.i696 = bitcast %union.anon* %4554 to i64*
  %4555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4556 = getelementptr inbounds %struct.GPR, %struct.GPR* %4555, i32 0, i32 7
  %4557 = getelementptr inbounds %struct.Reg, %struct.Reg* %4556, i32 0, i32 0
  %RDX.i697 = bitcast %union.anon* %4557 to i64*
  %4558 = load i64, i64* %RCX.i696
  %4559 = load i64, i64* %RDX.i697
  %4560 = mul i64 %4559, 4
  %4561 = add i64 %4558, 200
  %4562 = add i64 %4561, %4560
  %4563 = load i32, i32* %EAX.i695
  %4564 = zext i32 %4563 to i64
  %4565 = load i64, i64* %PC.i694
  %4566 = add i64 %4565, 7
  store i64 %4566, i64* %PC.i694
  %4567 = inttoptr i64 %4562 to i32*
  store i32 %4563, i32* %4567
  store %struct.Memory* %loadMem_4630f2, %struct.Memory** %MEMORY
  br label %block_.L_4630f9

block_.L_4630f9:                                  ; preds = %block_4630dc, %block_4630d2, %block_.L_4630a1
  %loadMem_4630f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4569 = getelementptr inbounds %struct.GPR, %struct.GPR* %4568, i32 0, i32 33
  %4570 = getelementptr inbounds %struct.Reg, %struct.Reg* %4569, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %4570 to i64*
  %4571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4572 = getelementptr inbounds %struct.GPR, %struct.GPR* %4571, i32 0, i32 1
  %4573 = getelementptr inbounds %struct.Reg, %struct.Reg* %4572, i32 0, i32 0
  %RAX.i692 = bitcast %union.anon* %4573 to i64*
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4575 = getelementptr inbounds %struct.GPR, %struct.GPR* %4574, i32 0, i32 15
  %4576 = getelementptr inbounds %struct.Reg, %struct.Reg* %4575, i32 0, i32 0
  %RBP.i693 = bitcast %union.anon* %4576 to i64*
  %4577 = load i64, i64* %RBP.i693
  %4578 = sub i64 %4577, 140
  %4579 = load i64, i64* %PC.i691
  %4580 = add i64 %4579, 6
  store i64 %4580, i64* %PC.i691
  %4581 = inttoptr i64 %4578 to i32*
  %4582 = load i32, i32* %4581
  %4583 = zext i32 %4582 to i64
  store i64 %4583, i64* %RAX.i692, align 8
  store %struct.Memory* %loadMem_4630f9, %struct.Memory** %MEMORY
  %loadMem_4630ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4585 = getelementptr inbounds %struct.GPR, %struct.GPR* %4584, i32 0, i32 33
  %4586 = getelementptr inbounds %struct.Reg, %struct.Reg* %4585, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %4586 to i64*
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4588 = getelementptr inbounds %struct.GPR, %struct.GPR* %4587, i32 0, i32 1
  %4589 = getelementptr inbounds %struct.Reg, %struct.Reg* %4588, i32 0, i32 0
  %RAX.i689 = bitcast %union.anon* %4589 to i64*
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4591 = getelementptr inbounds %struct.GPR, %struct.GPR* %4590, i32 0, i32 15
  %4592 = getelementptr inbounds %struct.Reg, %struct.Reg* %4591, i32 0, i32 0
  %RBP.i690 = bitcast %union.anon* %4592 to i64*
  %4593 = load i64, i64* %RAX.i689
  %4594 = load i64, i64* %RBP.i690
  %4595 = sub i64 %4594, 120
  %4596 = load i64, i64* %PC.i688
  %4597 = add i64 %4596, 3
  store i64 %4597, i64* %PC.i688
  %4598 = trunc i64 %4593 to i32
  %4599 = inttoptr i64 %4595 to i32*
  %4600 = load i32, i32* %4599
  %4601 = add i32 %4600, %4598
  %4602 = zext i32 %4601 to i64
  store i64 %4602, i64* %RAX.i689, align 8
  %4603 = icmp ult i32 %4601, %4598
  %4604 = icmp ult i32 %4601, %4600
  %4605 = or i1 %4603, %4604
  %4606 = zext i1 %4605 to i8
  %4607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4606, i8* %4607, align 1
  %4608 = and i32 %4601, 255
  %4609 = call i32 @llvm.ctpop.i32(i32 %4608)
  %4610 = trunc i32 %4609 to i8
  %4611 = and i8 %4610, 1
  %4612 = xor i8 %4611, 1
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4612, i8* %4613, align 1
  %4614 = xor i32 %4600, %4598
  %4615 = xor i32 %4614, %4601
  %4616 = lshr i32 %4615, 4
  %4617 = trunc i32 %4616 to i8
  %4618 = and i8 %4617, 1
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4618, i8* %4619, align 1
  %4620 = icmp eq i32 %4601, 0
  %4621 = zext i1 %4620 to i8
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4621, i8* %4622, align 1
  %4623 = lshr i32 %4601, 31
  %4624 = trunc i32 %4623 to i8
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4624, i8* %4625, align 1
  %4626 = lshr i32 %4598, 31
  %4627 = lshr i32 %4600, 31
  %4628 = xor i32 %4623, %4626
  %4629 = xor i32 %4623, %4627
  %4630 = add i32 %4628, %4629
  %4631 = icmp eq i32 %4630, 2
  %4632 = zext i1 %4631 to i8
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4632, i8* %4633, align 1
  store %struct.Memory* %loadMem_4630ff, %struct.Memory** %MEMORY
  %loadMem_463102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4635 = getelementptr inbounds %struct.GPR, %struct.GPR* %4634, i32 0, i32 33
  %4636 = getelementptr inbounds %struct.Reg, %struct.Reg* %4635, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %4636 to i64*
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4638 = getelementptr inbounds %struct.GPR, %struct.GPR* %4637, i32 0, i32 1
  %4639 = getelementptr inbounds %struct.Reg, %struct.Reg* %4638, i32 0, i32 0
  %EAX.i687 = bitcast %union.anon* %4639 to i32*
  %4640 = load i32, i32* %EAX.i687
  %4641 = zext i32 %4640 to i64
  %4642 = load i64, i64* %PC.i686
  %4643 = add i64 %4642, 3
  store i64 %4643, i64* %PC.i686
  %4644 = sub i32 %4640, 1
  %4645 = icmp ult i32 %4640, 1
  %4646 = zext i1 %4645 to i8
  %4647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4646, i8* %4647, align 1
  %4648 = and i32 %4644, 255
  %4649 = call i32 @llvm.ctpop.i32(i32 %4648)
  %4650 = trunc i32 %4649 to i8
  %4651 = and i8 %4650, 1
  %4652 = xor i8 %4651, 1
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4652, i8* %4653, align 1
  %4654 = xor i64 1, %4641
  %4655 = trunc i64 %4654 to i32
  %4656 = xor i32 %4655, %4644
  %4657 = lshr i32 %4656, 4
  %4658 = trunc i32 %4657 to i8
  %4659 = and i8 %4658, 1
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4659, i8* %4660, align 1
  %4661 = icmp eq i32 %4644, 0
  %4662 = zext i1 %4661 to i8
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4662, i8* %4663, align 1
  %4664 = lshr i32 %4644, 31
  %4665 = trunc i32 %4664 to i8
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4665, i8* %4666, align 1
  %4667 = lshr i32 %4640, 31
  %4668 = xor i32 %4664, %4667
  %4669 = add i32 %4668, %4667
  %4670 = icmp eq i32 %4669, 2
  %4671 = zext i1 %4670 to i8
  %4672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4671, i8* %4672, align 1
  store %struct.Memory* %loadMem_463102, %struct.Memory** %MEMORY
  %loadMem_463105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4674 = getelementptr inbounds %struct.GPR, %struct.GPR* %4673, i32 0, i32 33
  %4675 = getelementptr inbounds %struct.Reg, %struct.Reg* %4674, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %4675 to i64*
  %4676 = load i64, i64* %PC.i685
  %4677 = add i64 %4676, 26
  %4678 = load i64, i64* %PC.i685
  %4679 = add i64 %4678, 6
  %4680 = load i64, i64* %PC.i685
  %4681 = add i64 %4680, 6
  store i64 %4681, i64* %PC.i685
  %4682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4683 = load i8, i8* %4682, align 1
  %4684 = icmp eq i8 %4683, 0
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4686 = load i8, i8* %4685, align 1
  %4687 = icmp ne i8 %4686, 0
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4689 = load i8, i8* %4688, align 1
  %4690 = icmp ne i8 %4689, 0
  %4691 = xor i1 %4687, %4690
  %4692 = xor i1 %4691, true
  %4693 = and i1 %4684, %4692
  %4694 = zext i1 %4693 to i8
  store i8 %4694, i8* %BRANCH_TAKEN, align 1
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4696 = select i1 %4693, i64 %4677, i64 %4679
  store i64 %4696, i64* %4695, align 8
  store %struct.Memory* %loadMem_463105, %struct.Memory** %MEMORY
  %loadBr_463105 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_463105 = icmp eq i8 %loadBr_463105, 1
  br i1 %cmpBr_463105, label %block_.L_46311f, label %block_46310b

block_46310b:                                     ; preds = %block_.L_4630f9
  %loadMem_46310b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4698 = getelementptr inbounds %struct.GPR, %struct.GPR* %4697, i32 0, i32 33
  %4699 = getelementptr inbounds %struct.Reg, %struct.Reg* %4698, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %4699 to i64*
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4701 = getelementptr inbounds %struct.GPR, %struct.GPR* %4700, i32 0, i32 15
  %4702 = getelementptr inbounds %struct.Reg, %struct.Reg* %4701, i32 0, i32 0
  %RBP.i684 = bitcast %union.anon* %4702 to i64*
  %4703 = load i64, i64* %RBP.i684
  %4704 = sub i64 %4703, 76
  %4705 = load i64, i64* %PC.i683
  %4706 = add i64 %4705, 4
  store i64 %4706, i64* %PC.i683
  %4707 = inttoptr i64 %4704 to i32*
  %4708 = load i32, i32* %4707
  %4709 = sub i32 %4708, 2
  %4710 = icmp ult i32 %4708, 2
  %4711 = zext i1 %4710 to i8
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4711, i8* %4712, align 1
  %4713 = and i32 %4709, 255
  %4714 = call i32 @llvm.ctpop.i32(i32 %4713)
  %4715 = trunc i32 %4714 to i8
  %4716 = and i8 %4715, 1
  %4717 = xor i8 %4716, 1
  %4718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4717, i8* %4718, align 1
  %4719 = xor i32 %4708, 2
  %4720 = xor i32 %4719, %4709
  %4721 = lshr i32 %4720, 4
  %4722 = trunc i32 %4721 to i8
  %4723 = and i8 %4722, 1
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4723, i8* %4724, align 1
  %4725 = icmp eq i32 %4709, 0
  %4726 = zext i1 %4725 to i8
  %4727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4726, i8* %4727, align 1
  %4728 = lshr i32 %4709, 31
  %4729 = trunc i32 %4728 to i8
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4729, i8* %4730, align 1
  %4731 = lshr i32 %4708, 31
  %4732 = xor i32 %4728, %4731
  %4733 = add i32 %4732, %4731
  %4734 = icmp eq i32 %4733, 2
  %4735 = zext i1 %4734 to i8
  %4736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4735, i8* %4736, align 1
  store %struct.Memory* %loadMem_46310b, %struct.Memory** %MEMORY
  %loadMem_46310f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4738 = getelementptr inbounds %struct.GPR, %struct.GPR* %4737, i32 0, i32 33
  %4739 = getelementptr inbounds %struct.Reg, %struct.Reg* %4738, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %4739 to i64*
  %4740 = load i64, i64* %PC.i682
  %4741 = add i64 %4740, 314
  %4742 = load i64, i64* %PC.i682
  %4743 = add i64 %4742, 6
  %4744 = load i64, i64* %PC.i682
  %4745 = add i64 %4744, 6
  store i64 %4745, i64* %PC.i682
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4747 = load i8, i8* %4746, align 1
  %4748 = icmp eq i8 %4747, 0
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4750 = load i8, i8* %4749, align 1
  %4751 = icmp ne i8 %4750, 0
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4753 = load i8, i8* %4752, align 1
  %4754 = icmp ne i8 %4753, 0
  %4755 = xor i1 %4751, %4754
  %4756 = xor i1 %4755, true
  %4757 = and i1 %4748, %4756
  %4758 = zext i1 %4757 to i8
  store i8 %4758, i8* %BRANCH_TAKEN, align 1
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4760 = select i1 %4757, i64 %4741, i64 %4743
  store i64 %4760, i64* %4759, align 8
  store %struct.Memory* %loadMem_46310f, %struct.Memory** %MEMORY
  %loadBr_46310f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46310f = icmp eq i8 %loadBr_46310f, 1
  br i1 %cmpBr_46310f, label %block_.L_463249, label %block_463115

block_463115:                                     ; preds = %block_46310b
  %loadMem_463115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4762 = getelementptr inbounds %struct.GPR, %struct.GPR* %4761, i32 0, i32 33
  %4763 = getelementptr inbounds %struct.Reg, %struct.Reg* %4762, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %4763 to i64*
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4765 = getelementptr inbounds %struct.GPR, %struct.GPR* %4764, i32 0, i32 15
  %4766 = getelementptr inbounds %struct.Reg, %struct.Reg* %4765, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %4766 to i64*
  %4767 = load i64, i64* %RBP.i681
  %4768 = sub i64 %4767, 112
  %4769 = load i64, i64* %PC.i680
  %4770 = add i64 %4769, 4
  store i64 %4770, i64* %PC.i680
  %4771 = inttoptr i64 %4768 to i32*
  %4772 = load i32, i32* %4771
  %4773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4773, align 1
  %4774 = and i32 %4772, 255
  %4775 = call i32 @llvm.ctpop.i32(i32 %4774)
  %4776 = trunc i32 %4775 to i8
  %4777 = and i8 %4776, 1
  %4778 = xor i8 %4777, 1
  %4779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4778, i8* %4779, align 1
  %4780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4780, align 1
  %4781 = icmp eq i32 %4772, 0
  %4782 = zext i1 %4781 to i8
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4782, i8* %4783, align 1
  %4784 = lshr i32 %4772, 31
  %4785 = trunc i32 %4784 to i8
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4785, i8* %4786, align 1
  %4787 = lshr i32 %4772, 31
  %4788 = xor i32 %4784, %4787
  %4789 = add i32 %4788, %4787
  %4790 = icmp eq i32 %4789, 2
  %4791 = zext i1 %4790 to i8
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4791, i8* %4792, align 1
  store %struct.Memory* %loadMem_463115, %struct.Memory** %MEMORY
  %loadMem_463119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4794 = getelementptr inbounds %struct.GPR, %struct.GPR* %4793, i32 0, i32 33
  %4795 = getelementptr inbounds %struct.Reg, %struct.Reg* %4794, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %4795 to i64*
  %4796 = load i64, i64* %PC.i679
  %4797 = add i64 %4796, 304
  %4798 = load i64, i64* %PC.i679
  %4799 = add i64 %4798, 6
  %4800 = load i64, i64* %PC.i679
  %4801 = add i64 %4800, 6
  store i64 %4801, i64* %PC.i679
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4803 = load i8, i8* %4802, align 1
  %4804 = icmp eq i8 %4803, 0
  %4805 = zext i1 %4804 to i8
  store i8 %4805, i8* %BRANCH_TAKEN, align 1
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4807 = select i1 %4804, i64 %4797, i64 %4799
  store i64 %4807, i64* %4806, align 8
  store %struct.Memory* %loadMem_463119, %struct.Memory** %MEMORY
  %loadBr_463119 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_463119 = icmp eq i8 %loadBr_463119, 1
  br i1 %cmpBr_463119, label %block_.L_463249, label %block_.L_46311f

block_.L_46311f:                                  ; preds = %block_463115, %block_.L_4630f9
  %loadMem_46311f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4809 = getelementptr inbounds %struct.GPR, %struct.GPR* %4808, i32 0, i32 33
  %4810 = getelementptr inbounds %struct.Reg, %struct.Reg* %4809, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %4810 to i64*
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4812 = getelementptr inbounds %struct.GPR, %struct.GPR* %4811, i32 0, i32 15
  %4813 = getelementptr inbounds %struct.Reg, %struct.Reg* %4812, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %4813 to i64*
  %4814 = load i64, i64* %RBP.i678
  %4815 = sub i64 %4814, 108
  %4816 = load i64, i64* %PC.i677
  %4817 = add i64 %4816, 4
  store i64 %4817, i64* %PC.i677
  %4818 = inttoptr i64 %4815 to i32*
  %4819 = load i32, i32* %4818
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4820, align 1
  %4821 = and i32 %4819, 255
  %4822 = call i32 @llvm.ctpop.i32(i32 %4821)
  %4823 = trunc i32 %4822 to i8
  %4824 = and i8 %4823, 1
  %4825 = xor i8 %4824, 1
  %4826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4825, i8* %4826, align 1
  %4827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4827, align 1
  %4828 = icmp eq i32 %4819, 0
  %4829 = zext i1 %4828 to i8
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4829, i8* %4830, align 1
  %4831 = lshr i32 %4819, 31
  %4832 = trunc i32 %4831 to i8
  %4833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4832, i8* %4833, align 1
  %4834 = lshr i32 %4819, 31
  %4835 = xor i32 %4831, %4834
  %4836 = add i32 %4835, %4834
  %4837 = icmp eq i32 %4836, 2
  %4838 = zext i1 %4837 to i8
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4838, i8* %4839, align 1
  store %struct.Memory* %loadMem_46311f, %struct.Memory** %MEMORY
  %loadMem_463123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4841 = getelementptr inbounds %struct.GPR, %struct.GPR* %4840, i32 0, i32 33
  %4842 = getelementptr inbounds %struct.Reg, %struct.Reg* %4841, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %4842 to i64*
  %4843 = load i64, i64* %PC.i676
  %4844 = add i64 %4843, 294
  %4845 = load i64, i64* %PC.i676
  %4846 = add i64 %4845, 6
  %4847 = load i64, i64* %PC.i676
  %4848 = add i64 %4847, 6
  store i64 %4848, i64* %PC.i676
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4850 = load i8, i8* %4849, align 1
  %4851 = icmp ne i8 %4850, 0
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4853 = load i8, i8* %4852, align 1
  %4854 = icmp ne i8 %4853, 0
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4856 = load i8, i8* %4855, align 1
  %4857 = icmp ne i8 %4856, 0
  %4858 = xor i1 %4854, %4857
  %4859 = or i1 %4851, %4858
  %4860 = zext i1 %4859 to i8
  store i8 %4860, i8* %BRANCH_TAKEN, align 1
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4862 = select i1 %4859, i64 %4844, i64 %4846
  store i64 %4862, i64* %4861, align 8
  store %struct.Memory* %loadMem_463123, %struct.Memory** %MEMORY
  %loadBr_463123 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_463123 = icmp eq i8 %loadBr_463123, 1
  br i1 %cmpBr_463123, label %block_.L_463249, label %block_463129

block_463129:                                     ; preds = %block_.L_46311f
  %loadMem_463129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4864 = getelementptr inbounds %struct.GPR, %struct.GPR* %4863, i32 0, i32 33
  %4865 = getelementptr inbounds %struct.Reg, %struct.Reg* %4864, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %4865 to i64*
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4867 = getelementptr inbounds %struct.GPR, %struct.GPR* %4866, i32 0, i32 7
  %4868 = getelementptr inbounds %struct.Reg, %struct.Reg* %4867, i32 0, i32 0
  %RDX.i675 = bitcast %union.anon* %4868 to i64*
  %4869 = load i64, i64* %PC.i674
  %4870 = add i64 %4869, 5
  store i64 %4870, i64* %PC.i674
  store i64 5, i64* %RDX.i675, align 8
  store %struct.Memory* %loadMem_463129, %struct.Memory** %MEMORY
  %loadMem_46312e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4872 = getelementptr inbounds %struct.GPR, %struct.GPR* %4871, i32 0, i32 33
  %4873 = getelementptr inbounds %struct.Reg, %struct.Reg* %4872, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %4873 to i64*
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4875 = getelementptr inbounds %struct.GPR, %struct.GPR* %4874, i32 0, i32 1
  %4876 = getelementptr inbounds %struct.Reg, %struct.Reg* %4875, i32 0, i32 0
  %EAX.i672 = bitcast %union.anon* %4876 to i32*
  %4877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4878 = getelementptr inbounds %struct.GPR, %struct.GPR* %4877, i32 0, i32 1
  %4879 = getelementptr inbounds %struct.Reg, %struct.Reg* %4878, i32 0, i32 0
  %RAX.i673 = bitcast %union.anon* %4879 to i64*
  %4880 = load i64, i64* %RAX.i673
  %4881 = load i32, i32* %EAX.i672
  %4882 = zext i32 %4881 to i64
  %4883 = load i64, i64* %PC.i671
  %4884 = add i64 %4883, 2
  store i64 %4884, i64* %PC.i671
  %4885 = xor i64 %4882, %4880
  %4886 = trunc i64 %4885 to i32
  %4887 = and i64 %4885, 4294967295
  store i64 %4887, i64* %RAX.i673, align 8
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4888, align 1
  %4889 = and i32 %4886, 255
  %4890 = call i32 @llvm.ctpop.i32(i32 %4889)
  %4891 = trunc i32 %4890 to i8
  %4892 = and i8 %4891, 1
  %4893 = xor i8 %4892, 1
  %4894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4893, i8* %4894, align 1
  %4895 = icmp eq i32 %4886, 0
  %4896 = zext i1 %4895 to i8
  %4897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4896, i8* %4897, align 1
  %4898 = lshr i32 %4886, 31
  %4899 = trunc i32 %4898 to i8
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4899, i8* %4900, align 1
  %4901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4901, align 1
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4902, align 1
  store %struct.Memory* %loadMem_46312e, %struct.Memory** %MEMORY
  %loadMem_463130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4904 = getelementptr inbounds %struct.GPR, %struct.GPR* %4903, i32 0, i32 33
  %4905 = getelementptr inbounds %struct.Reg, %struct.Reg* %4904, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %4905 to i64*
  %4906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4907 = getelementptr inbounds %struct.GPR, %struct.GPR* %4906, i32 0, i32 1
  %4908 = getelementptr inbounds %struct.Reg, %struct.Reg* %4907, i32 0, i32 0
  %EAX.i669 = bitcast %union.anon* %4908 to i32*
  %4909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4910 = getelementptr inbounds %struct.GPR, %struct.GPR* %4909, i32 0, i32 5
  %4911 = getelementptr inbounds %struct.Reg, %struct.Reg* %4910, i32 0, i32 0
  %RCX.i670 = bitcast %union.anon* %4911 to i64*
  %4912 = load i32, i32* %EAX.i669
  %4913 = zext i32 %4912 to i64
  %4914 = load i64, i64* %PC.i668
  %4915 = add i64 %4914, 2
  store i64 %4915, i64* %PC.i668
  %4916 = and i64 %4913, 4294967295
  store i64 %4916, i64* %RCX.i670, align 8
  store %struct.Memory* %loadMem_463130, %struct.Memory** %MEMORY
  %loadMem_463132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4918 = getelementptr inbounds %struct.GPR, %struct.GPR* %4917, i32 0, i32 33
  %4919 = getelementptr inbounds %struct.Reg, %struct.Reg* %4918, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %4919 to i64*
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4921 = getelementptr inbounds %struct.GPR, %struct.GPR* %4920, i32 0, i32 11
  %4922 = getelementptr inbounds %struct.Reg, %struct.Reg* %4921, i32 0, i32 0
  %RDI.i666 = bitcast %union.anon* %4922 to i64*
  %4923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4924 = getelementptr inbounds %struct.GPR, %struct.GPR* %4923, i32 0, i32 15
  %4925 = getelementptr inbounds %struct.Reg, %struct.Reg* %4924, i32 0, i32 0
  %RBP.i667 = bitcast %union.anon* %4925 to i64*
  %4926 = load i64, i64* %RBP.i667
  %4927 = sub i64 %4926, 100
  %4928 = load i64, i64* %PC.i665
  %4929 = add i64 %4928, 3
  store i64 %4929, i64* %PC.i665
  %4930 = inttoptr i64 %4927 to i32*
  %4931 = load i32, i32* %4930
  %4932 = zext i32 %4931 to i64
  store i64 %4932, i64* %RDI.i666, align 8
  store %struct.Memory* %loadMem_463132, %struct.Memory** %MEMORY
  %loadMem_463135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4934 = getelementptr inbounds %struct.GPR, %struct.GPR* %4933, i32 0, i32 33
  %4935 = getelementptr inbounds %struct.Reg, %struct.Reg* %4934, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %4935 to i64*
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4937 = getelementptr inbounds %struct.GPR, %struct.GPR* %4936, i32 0, i32 9
  %4938 = getelementptr inbounds %struct.Reg, %struct.Reg* %4937, i32 0, i32 0
  %RSI.i663 = bitcast %union.anon* %4938 to i64*
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4940 = getelementptr inbounds %struct.GPR, %struct.GPR* %4939, i32 0, i32 15
  %4941 = getelementptr inbounds %struct.Reg, %struct.Reg* %4940, i32 0, i32 0
  %RBP.i664 = bitcast %union.anon* %4941 to i64*
  %4942 = load i64, i64* %RBP.i664
  %4943 = sub i64 %4942, 72
  %4944 = load i64, i64* %PC.i662
  %4945 = add i64 %4944, 3
  store i64 %4945, i64* %PC.i662
  %4946 = inttoptr i64 %4943 to i32*
  %4947 = load i32, i32* %4946
  %4948 = zext i32 %4947 to i64
  store i64 %4948, i64* %RSI.i663, align 8
  store %struct.Memory* %loadMem_463135, %struct.Memory** %MEMORY
  %loadMem1_463138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4950 = getelementptr inbounds %struct.GPR, %struct.GPR* %4949, i32 0, i32 33
  %4951 = getelementptr inbounds %struct.Reg, %struct.Reg* %4950, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %4951 to i64*
  %4952 = load i64, i64* %PC.i661
  %4953 = add i64 %4952, -334728
  %4954 = load i64, i64* %PC.i661
  %4955 = add i64 %4954, 5
  %4956 = load i64, i64* %PC.i661
  %4957 = add i64 %4956, 5
  store i64 %4957, i64* %PC.i661
  %4958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4959 = load i64, i64* %4958, align 8
  %4960 = add i64 %4959, -8
  %4961 = inttoptr i64 %4960 to i64*
  store i64 %4955, i64* %4961
  store i64 %4960, i64* %4958, align 8
  %4962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4953, i64* %4962, align 8
  store %struct.Memory* %loadMem1_463138, %struct.Memory** %MEMORY
  %loadMem2_463138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_463138 = load i64, i64* %3
  %call2_463138 = call %struct.Memory* @sub_4115b0.approxlib(%struct.State* %0, i64 %loadPC_463138, %struct.Memory* %loadMem2_463138)
  store %struct.Memory* %call2_463138, %struct.Memory** %MEMORY
  %loadMem_46313d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 33
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %4965 to i64*
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4967 = getelementptr inbounds %struct.GPR, %struct.GPR* %4966, i32 0, i32 1
  %4968 = getelementptr inbounds %struct.Reg, %struct.Reg* %4967, i32 0, i32 0
  %EAX.i659 = bitcast %union.anon* %4968 to i32*
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4970 = getelementptr inbounds %struct.GPR, %struct.GPR* %4969, i32 0, i32 15
  %4971 = getelementptr inbounds %struct.Reg, %struct.Reg* %4970, i32 0, i32 0
  %RBP.i660 = bitcast %union.anon* %4971 to i64*
  %4972 = load i64, i64* %RBP.i660
  %4973 = sub i64 %4972, 148
  %4974 = load i32, i32* %EAX.i659
  %4975 = zext i32 %4974 to i64
  %4976 = load i64, i64* %PC.i658
  %4977 = add i64 %4976, 6
  store i64 %4977, i64* %PC.i658
  %4978 = inttoptr i64 %4973 to i32*
  store i32 %4974, i32* %4978
  store %struct.Memory* %loadMem_46313d, %struct.Memory** %MEMORY
  %loadMem_463143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4980 = getelementptr inbounds %struct.GPR, %struct.GPR* %4979, i32 0, i32 33
  %4981 = getelementptr inbounds %struct.Reg, %struct.Reg* %4980, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %4981 to i64*
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4983 = getelementptr inbounds %struct.GPR, %struct.GPR* %4982, i32 0, i32 15
  %4984 = getelementptr inbounds %struct.Reg, %struct.Reg* %4983, i32 0, i32 0
  %RBP.i657 = bitcast %union.anon* %4984 to i64*
  %4985 = load i64, i64* %RBP.i657
  %4986 = sub i64 %4985, 148
  %4987 = load i64, i64* %PC.i656
  %4988 = add i64 %4987, 7
  store i64 %4988, i64* %PC.i656
  %4989 = inttoptr i64 %4986 to i32*
  %4990 = load i32, i32* %4989
  %4991 = sub i32 %4990, 5
  %4992 = icmp ult i32 %4990, 5
  %4993 = zext i1 %4992 to i8
  %4994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4993, i8* %4994, align 1
  %4995 = and i32 %4991, 255
  %4996 = call i32 @llvm.ctpop.i32(i32 %4995)
  %4997 = trunc i32 %4996 to i8
  %4998 = and i8 %4997, 1
  %4999 = xor i8 %4998, 1
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4999, i8* %5000, align 1
  %5001 = xor i32 %4990, 5
  %5002 = xor i32 %5001, %4991
  %5003 = lshr i32 %5002, 4
  %5004 = trunc i32 %5003 to i8
  %5005 = and i8 %5004, 1
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5005, i8* %5006, align 1
  %5007 = icmp eq i32 %4991, 0
  %5008 = zext i1 %5007 to i8
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5008, i8* %5009, align 1
  %5010 = lshr i32 %4991, 31
  %5011 = trunc i32 %5010 to i8
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5011, i8* %5012, align 1
  %5013 = lshr i32 %4990, 31
  %5014 = xor i32 %5010, %5013
  %5015 = add i32 %5014, %5013
  %5016 = icmp eq i32 %5015, 2
  %5017 = zext i1 %5016 to i8
  %5018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5017, i8* %5018, align 1
  store %struct.Memory* %loadMem_463143, %struct.Memory** %MEMORY
  %loadMem_46314a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5020 = getelementptr inbounds %struct.GPR, %struct.GPR* %5019, i32 0, i32 33
  %5021 = getelementptr inbounds %struct.Reg, %struct.Reg* %5020, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %5021 to i64*
  %5022 = load i64, i64* %PC.i655
  %5023 = add i64 %5022, 39
  %5024 = load i64, i64* %PC.i655
  %5025 = add i64 %5024, 6
  %5026 = load i64, i64* %PC.i655
  %5027 = add i64 %5026, 6
  store i64 %5027, i64* %PC.i655
  %5028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5029 = load i8, i8* %5028, align 1
  %5030 = icmp eq i8 %5029, 0
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5032 = load i8, i8* %5031, align 1
  %5033 = icmp ne i8 %5032, 0
  %5034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5035 = load i8, i8* %5034, align 1
  %5036 = icmp ne i8 %5035, 0
  %5037 = xor i1 %5033, %5036
  %5038 = xor i1 %5037, true
  %5039 = and i1 %5030, %5038
  %5040 = zext i1 %5039 to i8
  store i8 %5040, i8* %BRANCH_TAKEN, align 1
  %5041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5042 = select i1 %5039, i64 %5023, i64 %5025
  store i64 %5042, i64* %5041, align 8
  store %struct.Memory* %loadMem_46314a, %struct.Memory** %MEMORY
  %loadBr_46314a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46314a = icmp eq i8 %loadBr_46314a, 1
  br i1 %cmpBr_46314a, label %block_.L_463171, label %block_463150

block_463150:                                     ; preds = %block_463129
  %loadMem_463150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5044 = getelementptr inbounds %struct.GPR, %struct.GPR* %5043, i32 0, i32 33
  %5045 = getelementptr inbounds %struct.Reg, %struct.Reg* %5044, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %5045 to i64*
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5047 = getelementptr inbounds %struct.GPR, %struct.GPR* %5046, i32 0, i32 15
  %5048 = getelementptr inbounds %struct.Reg, %struct.Reg* %5047, i32 0, i32 0
  %RBP.i654 = bitcast %union.anon* %5048 to i64*
  %5049 = load i64, i64* %RBP.i654
  %5050 = sub i64 %5049, 148
  %5051 = load i64, i64* %PC.i653
  %5052 = add i64 %5051, 7
  store i64 %5052, i64* %PC.i653
  %5053 = inttoptr i64 %5050 to i32*
  %5054 = load i32, i32* %5053
  %5055 = sub i32 %5054, 4
  %5056 = icmp ult i32 %5054, 4
  %5057 = zext i1 %5056 to i8
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5057, i8* %5058, align 1
  %5059 = and i32 %5055, 255
  %5060 = call i32 @llvm.ctpop.i32(i32 %5059)
  %5061 = trunc i32 %5060 to i8
  %5062 = and i8 %5061, 1
  %5063 = xor i8 %5062, 1
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5063, i8* %5064, align 1
  %5065 = xor i32 %5054, 4
  %5066 = xor i32 %5065, %5055
  %5067 = lshr i32 %5066, 4
  %5068 = trunc i32 %5067 to i8
  %5069 = and i8 %5068, 1
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5069, i8* %5070, align 1
  %5071 = icmp eq i32 %5055, 0
  %5072 = zext i1 %5071 to i8
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5072, i8* %5073, align 1
  %5074 = lshr i32 %5055, 31
  %5075 = trunc i32 %5074 to i8
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5075, i8* %5076, align 1
  %5077 = lshr i32 %5054, 31
  %5078 = xor i32 %5074, %5077
  %5079 = add i32 %5078, %5077
  %5080 = icmp eq i32 %5079, 2
  %5081 = zext i1 %5080 to i8
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5081, i8* %5082, align 1
  store %struct.Memory* %loadMem_463150, %struct.Memory** %MEMORY
  %loadMem_463157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5084 = getelementptr inbounds %struct.GPR, %struct.GPR* %5083, i32 0, i32 33
  %5085 = getelementptr inbounds %struct.Reg, %struct.Reg* %5084, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %5085 to i64*
  %5086 = load i64, i64* %PC.i652
  %5087 = add i64 %5086, 36
  %5088 = load i64, i64* %PC.i652
  %5089 = add i64 %5088, 6
  %5090 = load i64, i64* %PC.i652
  %5091 = add i64 %5090, 6
  store i64 %5091, i64* %PC.i652
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5093 = load i8, i8* %5092, align 1
  %5094 = icmp eq i8 %5093, 0
  %5095 = zext i1 %5094 to i8
  store i8 %5095, i8* %BRANCH_TAKEN, align 1
  %5096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5097 = select i1 %5094, i64 %5087, i64 %5089
  store i64 %5097, i64* %5096, align 8
  store %struct.Memory* %loadMem_463157, %struct.Memory** %MEMORY
  %loadBr_463157 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_463157 = icmp eq i8 %loadBr_463157, 1
  br i1 %cmpBr_463157, label %block_.L_46317b, label %block_46315d

block_46315d:                                     ; preds = %block_463150
  %loadMem_46315d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5099 = getelementptr inbounds %struct.GPR, %struct.GPR* %5098, i32 0, i32 33
  %5100 = getelementptr inbounds %struct.Reg, %struct.Reg* %5099, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %5100 to i64*
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5102 = getelementptr inbounds %struct.GPR, %struct.GPR* %5101, i32 0, i32 1
  %5103 = getelementptr inbounds %struct.Reg, %struct.Reg* %5102, i32 0, i32 0
  %RAX.i651 = bitcast %union.anon* %5103 to i64*
  %5104 = load i64, i64* %PC.i650
  %5105 = add i64 %5104, 7
  store i64 %5105, i64* %PC.i650
  %5106 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %5107 = zext i32 %5106 to i64
  store i64 %5107, i64* %RAX.i651, align 8
  store %struct.Memory* %loadMem_46315d, %struct.Memory** %MEMORY
  %loadMem_463164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5109 = getelementptr inbounds %struct.GPR, %struct.GPR* %5108, i32 0, i32 33
  %5110 = getelementptr inbounds %struct.Reg, %struct.Reg* %5109, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %5110 to i64*
  %5111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5112 = getelementptr inbounds %struct.GPR, %struct.GPR* %5111, i32 0, i32 1
  %5113 = getelementptr inbounds %struct.Reg, %struct.Reg* %5112, i32 0, i32 0
  %EAX.i649 = bitcast %union.anon* %5113 to i32*
  %5114 = load i32, i32* %EAX.i649
  %5115 = zext i32 %5114 to i64
  %5116 = load i64, i64* %PC.i648
  %5117 = add i64 %5116, 7
  store i64 %5117, i64* %PC.i648
  %5118 = load i32, i32* bitcast (%G_0xb54ce0_type* @G_0xb54ce0 to i32*)
  %5119 = sub i32 %5114, %5118
  %5120 = icmp ult i32 %5114, %5118
  %5121 = zext i1 %5120 to i8
  %5122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5121, i8* %5122, align 1
  %5123 = and i32 %5119, 255
  %5124 = call i32 @llvm.ctpop.i32(i32 %5123)
  %5125 = trunc i32 %5124 to i8
  %5126 = and i8 %5125, 1
  %5127 = xor i8 %5126, 1
  %5128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5127, i8* %5128, align 1
  %5129 = xor i32 %5118, %5114
  %5130 = xor i32 %5129, %5119
  %5131 = lshr i32 %5130, 4
  %5132 = trunc i32 %5131 to i8
  %5133 = and i8 %5132, 1
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5133, i8* %5134, align 1
  %5135 = icmp eq i32 %5119, 0
  %5136 = zext i1 %5135 to i8
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5136, i8* %5137, align 1
  %5138 = lshr i32 %5119, 31
  %5139 = trunc i32 %5138 to i8
  %5140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5139, i8* %5140, align 1
  %5141 = lshr i32 %5114, 31
  %5142 = lshr i32 %5118, 31
  %5143 = xor i32 %5142, %5141
  %5144 = xor i32 %5138, %5141
  %5145 = add i32 %5144, %5143
  %5146 = icmp eq i32 %5145, 2
  %5147 = zext i1 %5146 to i8
  %5148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5147, i8* %5148, align 1
  store %struct.Memory* %loadMem_463164, %struct.Memory** %MEMORY
  %loadMem_46316b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5150 = getelementptr inbounds %struct.GPR, %struct.GPR* %5149, i32 0, i32 33
  %5151 = getelementptr inbounds %struct.Reg, %struct.Reg* %5150, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %5151 to i64*
  %5152 = load i64, i64* %PC.i647
  %5153 = add i64 %5152, 16
  %5154 = load i64, i64* %PC.i647
  %5155 = add i64 %5154, 6
  %5156 = load i64, i64* %PC.i647
  %5157 = add i64 %5156, 6
  store i64 %5157, i64* %PC.i647
  %5158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5159 = load i8, i8* %5158, align 1
  %5160 = icmp ne i8 %5159, 0
  %5161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5162 = load i8, i8* %5161, align 1
  %5163 = icmp ne i8 %5162, 0
  %5164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5165 = load i8, i8* %5164, align 1
  %5166 = icmp ne i8 %5165, 0
  %5167 = xor i1 %5163, %5166
  %5168 = or i1 %5160, %5167
  %5169 = zext i1 %5168 to i8
  store i8 %5169, i8* %BRANCH_TAKEN, align 1
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5171 = select i1 %5168, i64 %5153, i64 %5155
  store i64 %5171, i64* %5170, align 8
  store %struct.Memory* %loadMem_46316b, %struct.Memory** %MEMORY
  %loadBr_46316b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46316b = icmp eq i8 %loadBr_46316b, 1
  br i1 %cmpBr_46316b, label %block_.L_46317b, label %block_.L_463171

block_.L_463171:                                  ; preds = %block_46315d, %block_463129
  %loadMem_463171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5173 = getelementptr inbounds %struct.GPR, %struct.GPR* %5172, i32 0, i32 33
  %5174 = getelementptr inbounds %struct.Reg, %struct.Reg* %5173, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %5174 to i64*
  %5175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5176 = getelementptr inbounds %struct.GPR, %struct.GPR* %5175, i32 0, i32 15
  %5177 = getelementptr inbounds %struct.Reg, %struct.Reg* %5176, i32 0, i32 0
  %RBP.i646 = bitcast %union.anon* %5177 to i64*
  %5178 = load i64, i64* %RBP.i646
  %5179 = sub i64 %5178, 148
  %5180 = load i64, i64* %PC.i645
  %5181 = add i64 %5180, 10
  store i64 %5181, i64* %PC.i645
  %5182 = inttoptr i64 %5179 to i32*
  store i32 5, i32* %5182
  store %struct.Memory* %loadMem_463171, %struct.Memory** %MEMORY
  br label %block_.L_46317b

block_.L_46317b:                                  ; preds = %block_.L_463171, %block_46315d, %block_463150
  %loadMem_46317b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5184 = getelementptr inbounds %struct.GPR, %struct.GPR* %5183, i32 0, i32 33
  %5185 = getelementptr inbounds %struct.Reg, %struct.Reg* %5184, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %5185 to i64*
  %5186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5187 = getelementptr inbounds %struct.GPR, %struct.GPR* %5186, i32 0, i32 1
  %5188 = getelementptr inbounds %struct.Reg, %struct.Reg* %5187, i32 0, i32 0
  %EAX.i643 = bitcast %union.anon* %5188 to i32*
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5190 = getelementptr inbounds %struct.GPR, %struct.GPR* %5189, i32 0, i32 1
  %5191 = getelementptr inbounds %struct.Reg, %struct.Reg* %5190, i32 0, i32 0
  %RAX.i644 = bitcast %union.anon* %5191 to i64*
  %5192 = load i64, i64* %RAX.i644
  %5193 = load i32, i32* %EAX.i643
  %5194 = zext i32 %5193 to i64
  %5195 = load i64, i64* %PC.i642
  %5196 = add i64 %5195, 2
  store i64 %5196, i64* %PC.i642
  %5197 = xor i64 %5194, %5192
  %5198 = trunc i64 %5197 to i32
  %5199 = and i64 %5197, 4294967295
  store i64 %5199, i64* %RAX.i644, align 8
  %5200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5200, align 1
  %5201 = and i32 %5198, 255
  %5202 = call i32 @llvm.ctpop.i32(i32 %5201)
  %5203 = trunc i32 %5202 to i8
  %5204 = and i8 %5203, 1
  %5205 = xor i8 %5204, 1
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5205, i8* %5206, align 1
  %5207 = icmp eq i32 %5198, 0
  %5208 = zext i1 %5207 to i8
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5208, i8* %5209, align 1
  %5210 = lshr i32 %5198, 31
  %5211 = trunc i32 %5210 to i8
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5211, i8* %5212, align 1
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5213, align 1
  %5214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5214, align 1
  store %struct.Memory* %loadMem_46317b, %struct.Memory** %MEMORY
  %loadMem_46317d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5216 = getelementptr inbounds %struct.GPR, %struct.GPR* %5215, i32 0, i32 33
  %5217 = getelementptr inbounds %struct.Reg, %struct.Reg* %5216, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %5217 to i64*
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5219 = getelementptr inbounds %struct.GPR, %struct.GPR* %5218, i32 0, i32 1
  %5220 = getelementptr inbounds %struct.Reg, %struct.Reg* %5219, i32 0, i32 0
  %5221 = bitcast %union.anon* %5220 to %struct.anon.2*
  %AL.i640 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5221, i32 0, i32 0
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5223 = getelementptr inbounds %struct.GPR, %struct.GPR* %5222, i32 0, i32 5
  %5224 = getelementptr inbounds %struct.Reg, %struct.Reg* %5223, i32 0, i32 0
  %5225 = bitcast %union.anon* %5224 to %struct.anon.2*
  %CL.i641 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5225, i32 0, i32 0
  %5226 = load i8, i8* %AL.i640
  %5227 = zext i8 %5226 to i64
  %5228 = load i64, i64* %PC.i639
  %5229 = add i64 %5228, 2
  store i64 %5229, i64* %PC.i639
  store i8 %5226, i8* %CL.i641, align 1
  store %struct.Memory* %loadMem_46317d, %struct.Memory** %MEMORY
  %loadMem_46317f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5231 = getelementptr inbounds %struct.GPR, %struct.GPR* %5230, i32 0, i32 33
  %5232 = getelementptr inbounds %struct.Reg, %struct.Reg* %5231, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %5232 to i64*
  %5233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5234 = getelementptr inbounds %struct.GPR, %struct.GPR* %5233, i32 0, i32 7
  %5235 = getelementptr inbounds %struct.Reg, %struct.Reg* %5234, i32 0, i32 0
  %RDX.i637 = bitcast %union.anon* %5235 to i64*
  %5236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5237 = getelementptr inbounds %struct.GPR, %struct.GPR* %5236, i32 0, i32 15
  %5238 = getelementptr inbounds %struct.Reg, %struct.Reg* %5237, i32 0, i32 0
  %RBP.i638 = bitcast %union.anon* %5238 to i64*
  %5239 = load i64, i64* %RBP.i638
  %5240 = sub i64 %5239, 148
  %5241 = load i64, i64* %PC.i636
  %5242 = add i64 %5241, 7
  store i64 %5242, i64* %PC.i636
  %5243 = inttoptr i64 %5240 to i32*
  %5244 = load i32, i32* %5243
  %5245 = sext i32 %5244 to i64
  store i64 %5245, i64* %RDX.i637, align 8
  store %struct.Memory* %loadMem_46317f, %struct.Memory** %MEMORY
  %loadMem_463186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5247 = getelementptr inbounds %struct.GPR, %struct.GPR* %5246, i32 0, i32 33
  %5248 = getelementptr inbounds %struct.Reg, %struct.Reg* %5247, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %5248 to i64*
  %5249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5250 = getelementptr inbounds %struct.GPR, %struct.GPR* %5249, i32 0, i32 1
  %5251 = getelementptr inbounds %struct.Reg, %struct.Reg* %5250, i32 0, i32 0
  %RAX.i634 = bitcast %union.anon* %5251 to i64*
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5253 = getelementptr inbounds %struct.GPR, %struct.GPR* %5252, i32 0, i32 7
  %5254 = getelementptr inbounds %struct.Reg, %struct.Reg* %5253, i32 0, i32 0
  %RDX.i635 = bitcast %union.anon* %5254 to i64*
  %5255 = load i64, i64* %RDX.i635
  %5256 = mul i64 %5255, 4
  %5257 = add i64 %5256, 8060224
  %5258 = load i64, i64* %PC.i633
  %5259 = add i64 %5258, 7
  store i64 %5259, i64* %PC.i633
  %5260 = inttoptr i64 %5257 to i32*
  %5261 = load i32, i32* %5260
  %5262 = zext i32 %5261 to i64
  store i64 %5262, i64* %RAX.i634, align 8
  store %struct.Memory* %loadMem_463186, %struct.Memory** %MEMORY
  %loadMem_46318d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5264 = getelementptr inbounds %struct.GPR, %struct.GPR* %5263, i32 0, i32 33
  %5265 = getelementptr inbounds %struct.Reg, %struct.Reg* %5264, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %5265 to i64*
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5267 = getelementptr inbounds %struct.GPR, %struct.GPR* %5266, i32 0, i32 7
  %5268 = getelementptr inbounds %struct.Reg, %struct.Reg* %5267, i32 0, i32 0
  %RDX.i631 = bitcast %union.anon* %5268 to i64*
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5270 = getelementptr inbounds %struct.GPR, %struct.GPR* %5269, i32 0, i32 15
  %5271 = getelementptr inbounds %struct.Reg, %struct.Reg* %5270, i32 0, i32 0
  %RBP.i632 = bitcast %union.anon* %5271 to i64*
  %5272 = load i64, i64* %RBP.i632
  %5273 = sub i64 %5272, 48
  %5274 = load i64, i64* %PC.i630
  %5275 = add i64 %5274, 4
  store i64 %5275, i64* %PC.i630
  %5276 = inttoptr i64 %5273 to i64*
  %5277 = load i64, i64* %5276
  store i64 %5277, i64* %RDX.i631, align 8
  store %struct.Memory* %loadMem_46318d, %struct.Memory** %MEMORY
  %loadMem_463191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5279 = getelementptr inbounds %struct.GPR, %struct.GPR* %5278, i32 0, i32 33
  %5280 = getelementptr inbounds %struct.Reg, %struct.Reg* %5279, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %5280 to i64*
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5282 = getelementptr inbounds %struct.GPR, %struct.GPR* %5281, i32 0, i32 9
  %5283 = getelementptr inbounds %struct.Reg, %struct.Reg* %5282, i32 0, i32 0
  %RSI.i628 = bitcast %union.anon* %5283 to i64*
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5285 = getelementptr inbounds %struct.GPR, %struct.GPR* %5284, i32 0, i32 15
  %5286 = getelementptr inbounds %struct.Reg, %struct.Reg* %5285, i32 0, i32 0
  %RBP.i629 = bitcast %union.anon* %5286 to i64*
  %5287 = load i64, i64* %RBP.i629
  %5288 = sub i64 %5287, 80
  %5289 = load i64, i64* %PC.i627
  %5290 = add i64 %5289, 4
  store i64 %5290, i64* %PC.i627
  %5291 = inttoptr i64 %5288 to i32*
  %5292 = load i32, i32* %5291
  %5293 = sext i32 %5292 to i64
  store i64 %5293, i64* %RSI.i628, align 8
  store %struct.Memory* %loadMem_463191, %struct.Memory** %MEMORY
  %loadMem_463195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5295 = getelementptr inbounds %struct.GPR, %struct.GPR* %5294, i32 0, i32 33
  %5296 = getelementptr inbounds %struct.Reg, %struct.Reg* %5295, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %5296 to i64*
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5298 = getelementptr inbounds %struct.GPR, %struct.GPR* %5297, i32 0, i32 1
  %5299 = getelementptr inbounds %struct.Reg, %struct.Reg* %5298, i32 0, i32 0
  %RAX.i624 = bitcast %union.anon* %5299 to i64*
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5301 = getelementptr inbounds %struct.GPR, %struct.GPR* %5300, i32 0, i32 7
  %5302 = getelementptr inbounds %struct.Reg, %struct.Reg* %5301, i32 0, i32 0
  %RDX.i625 = bitcast %union.anon* %5302 to i64*
  %5303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5304 = getelementptr inbounds %struct.GPR, %struct.GPR* %5303, i32 0, i32 9
  %5305 = getelementptr inbounds %struct.Reg, %struct.Reg* %5304, i32 0, i32 0
  %RSI.i626 = bitcast %union.anon* %5305 to i64*
  %5306 = load i64, i64* %RAX.i624
  %5307 = load i64, i64* %RDX.i625
  %5308 = load i64, i64* %RSI.i626
  %5309 = mul i64 %5308, 4
  %5310 = add i64 %5307, 200
  %5311 = add i64 %5310, %5309
  %5312 = load i64, i64* %PC.i623
  %5313 = add i64 %5312, 7
  store i64 %5313, i64* %PC.i623
  %5314 = trunc i64 %5306 to i32
  %5315 = inttoptr i64 %5311 to i32*
  %5316 = load i32, i32* %5315
  %5317 = add i32 %5316, %5314
  %5318 = zext i32 %5317 to i64
  store i64 %5318, i64* %RAX.i624, align 8
  %5319 = icmp ult i32 %5317, %5314
  %5320 = icmp ult i32 %5317, %5316
  %5321 = or i1 %5319, %5320
  %5322 = zext i1 %5321 to i8
  %5323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5322, i8* %5323, align 1
  %5324 = and i32 %5317, 255
  %5325 = call i32 @llvm.ctpop.i32(i32 %5324)
  %5326 = trunc i32 %5325 to i8
  %5327 = and i8 %5326, 1
  %5328 = xor i8 %5327, 1
  %5329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5328, i8* %5329, align 1
  %5330 = xor i32 %5316, %5314
  %5331 = xor i32 %5330, %5317
  %5332 = lshr i32 %5331, 4
  %5333 = trunc i32 %5332 to i8
  %5334 = and i8 %5333, 1
  %5335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5334, i8* %5335, align 1
  %5336 = icmp eq i32 %5317, 0
  %5337 = zext i1 %5336 to i8
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5337, i8* %5338, align 1
  %5339 = lshr i32 %5317, 31
  %5340 = trunc i32 %5339 to i8
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5340, i8* %5341, align 1
  %5342 = lshr i32 %5314, 31
  %5343 = lshr i32 %5316, 31
  %5344 = xor i32 %5339, %5342
  %5345 = xor i32 %5339, %5343
  %5346 = add i32 %5344, %5345
  %5347 = icmp eq i32 %5346, 2
  %5348 = zext i1 %5347 to i8
  %5349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5348, i8* %5349, align 1
  store %struct.Memory* %loadMem_463195, %struct.Memory** %MEMORY
  %loadMem_46319c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5351 = getelementptr inbounds %struct.GPR, %struct.GPR* %5350, i32 0, i32 33
  %5352 = getelementptr inbounds %struct.Reg, %struct.Reg* %5351, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %5352 to i64*
  %5353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5354 = getelementptr inbounds %struct.GPR, %struct.GPR* %5353, i32 0, i32 1
  %5355 = getelementptr inbounds %struct.Reg, %struct.Reg* %5354, i32 0, i32 0
  %EAX.i620 = bitcast %union.anon* %5355 to i32*
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5357 = getelementptr inbounds %struct.GPR, %struct.GPR* %5356, i32 0, i32 7
  %5358 = getelementptr inbounds %struct.Reg, %struct.Reg* %5357, i32 0, i32 0
  %RDX.i621 = bitcast %union.anon* %5358 to i64*
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5360 = getelementptr inbounds %struct.GPR, %struct.GPR* %5359, i32 0, i32 9
  %5361 = getelementptr inbounds %struct.Reg, %struct.Reg* %5360, i32 0, i32 0
  %RSI.i622 = bitcast %union.anon* %5361 to i64*
  %5362 = load i64, i64* %RDX.i621
  %5363 = load i64, i64* %RSI.i622
  %5364 = mul i64 %5363, 4
  %5365 = add i64 %5362, 200
  %5366 = add i64 %5365, %5364
  %5367 = load i32, i32* %EAX.i620
  %5368 = zext i32 %5367 to i64
  %5369 = load i64, i64* %PC.i619
  %5370 = add i64 %5369, 7
  store i64 %5370, i64* %PC.i619
  %5371 = inttoptr i64 %5366 to i32*
  store i32 %5367, i32* %5371
  store %struct.Memory* %loadMem_46319c, %struct.Memory** %MEMORY
  %loadMem_4631a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5373 = getelementptr inbounds %struct.GPR, %struct.GPR* %5372, i32 0, i32 33
  %5374 = getelementptr inbounds %struct.Reg, %struct.Reg* %5373, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %5374 to i64*
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5376 = getelementptr inbounds %struct.GPR, %struct.GPR* %5375, i32 0, i32 15
  %5377 = getelementptr inbounds %struct.Reg, %struct.Reg* %5376, i32 0, i32 0
  %RBP.i618 = bitcast %union.anon* %5377 to i64*
  %5378 = load i64, i64* %RBP.i618
  %5379 = sub i64 %5378, 76
  %5380 = load i64, i64* %PC.i617
  %5381 = add i64 %5380, 4
  store i64 %5381, i64* %PC.i617
  %5382 = inttoptr i64 %5379 to i32*
  %5383 = load i32, i32* %5382
  %5384 = sub i32 %5383, 2
  %5385 = icmp ult i32 %5383, 2
  %5386 = zext i1 %5385 to i8
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5386, i8* %5387, align 1
  %5388 = and i32 %5384, 255
  %5389 = call i32 @llvm.ctpop.i32(i32 %5388)
  %5390 = trunc i32 %5389 to i8
  %5391 = and i8 %5390, 1
  %5392 = xor i8 %5391, 1
  %5393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5392, i8* %5393, align 1
  %5394 = xor i32 %5383, 2
  %5395 = xor i32 %5394, %5384
  %5396 = lshr i32 %5395, 4
  %5397 = trunc i32 %5396 to i8
  %5398 = and i8 %5397, 1
  %5399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5398, i8* %5399, align 1
  %5400 = icmp eq i32 %5384, 0
  %5401 = zext i1 %5400 to i8
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5401, i8* %5402, align 1
  %5403 = lshr i32 %5384, 31
  %5404 = trunc i32 %5403 to i8
  %5405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5404, i8* %5405, align 1
  %5406 = lshr i32 %5383, 31
  %5407 = xor i32 %5403, %5406
  %5408 = add i32 %5407, %5406
  %5409 = icmp eq i32 %5408, 2
  %5410 = zext i1 %5409 to i8
  %5411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5410, i8* %5411, align 1
  store %struct.Memory* %loadMem_4631a3, %struct.Memory** %MEMORY
  %loadMem_4631a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5413 = getelementptr inbounds %struct.GPR, %struct.GPR* %5412, i32 0, i32 33
  %5414 = getelementptr inbounds %struct.Reg, %struct.Reg* %5413, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %5414 to i64*
  %5415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5416 = getelementptr inbounds %struct.GPR, %struct.GPR* %5415, i32 0, i32 5
  %5417 = getelementptr inbounds %struct.Reg, %struct.Reg* %5416, i32 0, i32 0
  %5418 = bitcast %union.anon* %5417 to %struct.anon.2*
  %CL.i615 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5418, i32 0, i32 0
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5420 = getelementptr inbounds %struct.GPR, %struct.GPR* %5419, i32 0, i32 15
  %5421 = getelementptr inbounds %struct.Reg, %struct.Reg* %5420, i32 0, i32 0
  %RBP.i616 = bitcast %union.anon* %5421 to i64*
  %5422 = load i64, i64* %RBP.i616
  %5423 = sub i64 %5422, 697
  %5424 = load i8, i8* %CL.i615
  %5425 = zext i8 %5424 to i64
  %5426 = load i64, i64* %PC.i614
  %5427 = add i64 %5426, 6
  store i64 %5427, i64* %PC.i614
  %5428 = inttoptr i64 %5423 to i8*
  store i8 %5424, i8* %5428
  store %struct.Memory* %loadMem_4631a7, %struct.Memory** %MEMORY
  %loadMem_4631ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5430 = getelementptr inbounds %struct.GPR, %struct.GPR* %5429, i32 0, i32 33
  %5431 = getelementptr inbounds %struct.Reg, %struct.Reg* %5430, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %5431 to i64*
  %5432 = load i64, i64* %PC.i613
  %5433 = add i64 %5432, 27
  %5434 = load i64, i64* %PC.i613
  %5435 = add i64 %5434, 6
  %5436 = load i64, i64* %PC.i613
  %5437 = add i64 %5436, 6
  store i64 %5437, i64* %PC.i613
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5439 = load i8, i8* %5438, align 1
  %5440 = icmp eq i8 %5439, 0
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5442 = load i8, i8* %5441, align 1
  %5443 = icmp ne i8 %5442, 0
  %5444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5445 = load i8, i8* %5444, align 1
  %5446 = icmp ne i8 %5445, 0
  %5447 = xor i1 %5443, %5446
  %5448 = xor i1 %5447, true
  %5449 = and i1 %5440, %5448
  %5450 = zext i1 %5449 to i8
  store i8 %5450, i8* %BRANCH_TAKEN, align 1
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5452 = select i1 %5449, i64 %5433, i64 %5435
  store i64 %5452, i64* %5451, align 8
  store %struct.Memory* %loadMem_4631ad, %struct.Memory** %MEMORY
  %loadBr_4631ad = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4631ad = icmp eq i8 %loadBr_4631ad, 1
  br i1 %cmpBr_4631ad, label %block_.L_4631c8, label %block_4631b3

block_4631b3:                                     ; preds = %block_.L_46317b
  %loadMem_4631b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5454 = getelementptr inbounds %struct.GPR, %struct.GPR* %5453, i32 0, i32 33
  %5455 = getelementptr inbounds %struct.Reg, %struct.Reg* %5454, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %5455 to i64*
  %5456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5457 = getelementptr inbounds %struct.GPR, %struct.GPR* %5456, i32 0, i32 1
  %5458 = getelementptr inbounds %struct.Reg, %struct.Reg* %5457, i32 0, i32 0
  %RAX.i611 = bitcast %union.anon* %5458 to i64*
  %5459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5460 = getelementptr inbounds %struct.GPR, %struct.GPR* %5459, i32 0, i32 15
  %5461 = getelementptr inbounds %struct.Reg, %struct.Reg* %5460, i32 0, i32 0
  %RBP.i612 = bitcast %union.anon* %5461 to i64*
  %5462 = load i64, i64* %RBP.i612
  %5463 = sub i64 %5462, 140
  %5464 = load i64, i64* %PC.i610
  %5465 = add i64 %5464, 6
  store i64 %5465, i64* %PC.i610
  %5466 = inttoptr i64 %5463 to i32*
  %5467 = load i32, i32* %5466
  %5468 = zext i32 %5467 to i64
  store i64 %5468, i64* %RAX.i611, align 8
  store %struct.Memory* %loadMem_4631b3, %struct.Memory** %MEMORY
  %loadMem_4631b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5470 = getelementptr inbounds %struct.GPR, %struct.GPR* %5469, i32 0, i32 33
  %5471 = getelementptr inbounds %struct.Reg, %struct.Reg* %5470, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %5471 to i64*
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5473 = getelementptr inbounds %struct.GPR, %struct.GPR* %5472, i32 0, i32 1
  %5474 = getelementptr inbounds %struct.Reg, %struct.Reg* %5473, i32 0, i32 0
  %RAX.i608 = bitcast %union.anon* %5474 to i64*
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5476 = getelementptr inbounds %struct.GPR, %struct.GPR* %5475, i32 0, i32 15
  %5477 = getelementptr inbounds %struct.Reg, %struct.Reg* %5476, i32 0, i32 0
  %RBP.i609 = bitcast %union.anon* %5477 to i64*
  %5478 = load i64, i64* %RAX.i608
  %5479 = load i64, i64* %RBP.i609
  %5480 = sub i64 %5479, 120
  %5481 = load i64, i64* %PC.i607
  %5482 = add i64 %5481, 3
  store i64 %5482, i64* %PC.i607
  %5483 = trunc i64 %5478 to i32
  %5484 = inttoptr i64 %5480 to i32*
  %5485 = load i32, i32* %5484
  %5486 = add i32 %5485, %5483
  %5487 = zext i32 %5486 to i64
  store i64 %5487, i64* %RAX.i608, align 8
  %5488 = icmp ult i32 %5486, %5483
  %5489 = icmp ult i32 %5486, %5485
  %5490 = or i1 %5488, %5489
  %5491 = zext i1 %5490 to i8
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5491, i8* %5492, align 1
  %5493 = and i32 %5486, 255
  %5494 = call i32 @llvm.ctpop.i32(i32 %5493)
  %5495 = trunc i32 %5494 to i8
  %5496 = and i8 %5495, 1
  %5497 = xor i8 %5496, 1
  %5498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5497, i8* %5498, align 1
  %5499 = xor i32 %5485, %5483
  %5500 = xor i32 %5499, %5486
  %5501 = lshr i32 %5500, 4
  %5502 = trunc i32 %5501 to i8
  %5503 = and i8 %5502, 1
  %5504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5503, i8* %5504, align 1
  %5505 = icmp eq i32 %5486, 0
  %5506 = zext i1 %5505 to i8
  %5507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5506, i8* %5507, align 1
  %5508 = lshr i32 %5486, 31
  %5509 = trunc i32 %5508 to i8
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5509, i8* %5510, align 1
  %5511 = lshr i32 %5483, 31
  %5512 = lshr i32 %5485, 31
  %5513 = xor i32 %5508, %5511
  %5514 = xor i32 %5508, %5512
  %5515 = add i32 %5513, %5514
  %5516 = icmp eq i32 %5515, 2
  %5517 = zext i1 %5516 to i8
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5517, i8* %5518, align 1
  store %struct.Memory* %loadMem_4631b9, %struct.Memory** %MEMORY
  %loadMem_4631bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5520 = getelementptr inbounds %struct.GPR, %struct.GPR* %5519, i32 0, i32 33
  %5521 = getelementptr inbounds %struct.Reg, %struct.Reg* %5520, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %5521 to i64*
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5523 = getelementptr inbounds %struct.GPR, %struct.GPR* %5522, i32 0, i32 1
  %5524 = getelementptr inbounds %struct.Reg, %struct.Reg* %5523, i32 0, i32 0
  %EAX.i606 = bitcast %union.anon* %5524 to i32*
  %5525 = load i32, i32* %EAX.i606
  %5526 = zext i32 %5525 to i64
  %5527 = load i64, i64* %PC.i605
  %5528 = add i64 %5527, 3
  store i64 %5528, i64* %PC.i605
  %5529 = sub i32 %5525, 1
  %5530 = icmp ult i32 %5525, 1
  %5531 = zext i1 %5530 to i8
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5531, i8* %5532, align 1
  %5533 = and i32 %5529, 255
  %5534 = call i32 @llvm.ctpop.i32(i32 %5533)
  %5535 = trunc i32 %5534 to i8
  %5536 = and i8 %5535, 1
  %5537 = xor i8 %5536, 1
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5537, i8* %5538, align 1
  %5539 = xor i64 1, %5526
  %5540 = trunc i64 %5539 to i32
  %5541 = xor i32 %5540, %5529
  %5542 = lshr i32 %5541, 4
  %5543 = trunc i32 %5542 to i8
  %5544 = and i8 %5543, 1
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5544, i8* %5545, align 1
  %5546 = icmp eq i32 %5529, 0
  %5547 = zext i1 %5546 to i8
  %5548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5547, i8* %5548, align 1
  %5549 = lshr i32 %5529, 31
  %5550 = trunc i32 %5549 to i8
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5550, i8* %5551, align 1
  %5552 = lshr i32 %5525, 31
  %5553 = xor i32 %5549, %5552
  %5554 = add i32 %5553, %5552
  %5555 = icmp eq i32 %5554, 2
  %5556 = zext i1 %5555 to i8
  %5557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5556, i8* %5557, align 1
  store %struct.Memory* %loadMem_4631bc, %struct.Memory** %MEMORY
  %loadMem_4631bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5559 = getelementptr inbounds %struct.GPR, %struct.GPR* %5558, i32 0, i32 33
  %5560 = getelementptr inbounds %struct.Reg, %struct.Reg* %5559, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %5560 to i64*
  %5561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5562 = getelementptr inbounds %struct.GPR, %struct.GPR* %5561, i32 0, i32 5
  %5563 = getelementptr inbounds %struct.Reg, %struct.Reg* %5562, i32 0, i32 0
  %5564 = bitcast %union.anon* %5563 to %struct.anon.2*
  %CL.i604 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5564, i32 0, i32 0
  %5565 = load i64, i64* %PC.i603
  %5566 = add i64 %5565, 3
  store i64 %5566, i64* %PC.i603
  %5567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5568 = load i8, i8* %5567, align 1
  %5569 = icmp eq i8 %5568, 0
  %5570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5571 = load i8, i8* %5570, align 1
  %5572 = icmp ne i8 %5571, 0
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5574 = load i8, i8* %5573, align 1
  %5575 = icmp ne i8 %5574, 0
  %5576 = xor i1 %5572, %5575
  %5577 = xor i1 %5576, true
  %5578 = and i1 %5569, %5577
  %5579 = zext i1 %5578 to i8
  store i8 %5579, i8* %CL.i604, align 1
  store %struct.Memory* %loadMem_4631bf, %struct.Memory** %MEMORY
  %loadMem_4631c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5581 = getelementptr inbounds %struct.GPR, %struct.GPR* %5580, i32 0, i32 33
  %5582 = getelementptr inbounds %struct.Reg, %struct.Reg* %5581, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %5582 to i64*
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5584 = getelementptr inbounds %struct.GPR, %struct.GPR* %5583, i32 0, i32 5
  %5585 = getelementptr inbounds %struct.Reg, %struct.Reg* %5584, i32 0, i32 0
  %5586 = bitcast %union.anon* %5585 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5586, i32 0, i32 0
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5588 = getelementptr inbounds %struct.GPR, %struct.GPR* %5587, i32 0, i32 15
  %5589 = getelementptr inbounds %struct.Reg, %struct.Reg* %5588, i32 0, i32 0
  %RBP.i602 = bitcast %union.anon* %5589 to i64*
  %5590 = load i64, i64* %RBP.i602
  %5591 = sub i64 %5590, 697
  %5592 = load i8, i8* %CL.i
  %5593 = zext i8 %5592 to i64
  %5594 = load i64, i64* %PC.i601
  %5595 = add i64 %5594, 6
  store i64 %5595, i64* %PC.i601
  %5596 = inttoptr i64 %5591 to i8*
  store i8 %5592, i8* %5596
  store %struct.Memory* %loadMem_4631c2, %struct.Memory** %MEMORY
  br label %block_.L_4631c8

block_.L_4631c8:                                  ; preds = %block_4631b3, %block_.L_46317b
  %loadMem_4631c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5598 = getelementptr inbounds %struct.GPR, %struct.GPR* %5597, i32 0, i32 33
  %5599 = getelementptr inbounds %struct.Reg, %struct.Reg* %5598, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %5599 to i64*
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5601 = getelementptr inbounds %struct.GPR, %struct.GPR* %5600, i32 0, i32 1
  %5602 = getelementptr inbounds %struct.Reg, %struct.Reg* %5601, i32 0, i32 0
  %5603 = bitcast %union.anon* %5602 to %struct.anon.2*
  %AL.i599 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5603, i32 0, i32 0
  %5604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5605 = getelementptr inbounds %struct.GPR, %struct.GPR* %5604, i32 0, i32 15
  %5606 = getelementptr inbounds %struct.Reg, %struct.Reg* %5605, i32 0, i32 0
  %RBP.i600 = bitcast %union.anon* %5606 to i64*
  %5607 = load i64, i64* %RBP.i600
  %5608 = sub i64 %5607, 697
  %5609 = load i64, i64* %PC.i598
  %5610 = add i64 %5609, 6
  store i64 %5610, i64* %PC.i598
  %5611 = inttoptr i64 %5608 to i8*
  %5612 = load i8, i8* %5611
  store i8 %5612, i8* %AL.i599, align 1
  store %struct.Memory* %loadMem_4631c8, %struct.Memory** %MEMORY
  %loadMem_4631ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %5613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5614 = getelementptr inbounds %struct.GPR, %struct.GPR* %5613, i32 0, i32 33
  %5615 = getelementptr inbounds %struct.Reg, %struct.Reg* %5614, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %5615 to i64*
  %5616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5617 = getelementptr inbounds %struct.GPR, %struct.GPR* %5616, i32 0, i32 1
  %5618 = getelementptr inbounds %struct.Reg, %struct.Reg* %5617, i32 0, i32 0
  %5619 = bitcast %union.anon* %5618 to %struct.anon.2*
  %AL.i597 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5619, i32 0, i32 0
  %5620 = load i8, i8* %AL.i597
  %5621 = zext i8 %5620 to i64
  %5622 = load i64, i64* %PC.i596
  %5623 = add i64 %5622, 2
  store i64 %5623, i64* %PC.i596
  %5624 = and i64 1, %5621
  %5625 = trunc i64 %5624 to i8
  store i8 %5625, i8* %AL.i597, align 1
  %5626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5626, align 1
  %5627 = trunc i64 %5624 to i32
  %5628 = and i32 %5627, 255
  %5629 = call i32 @llvm.ctpop.i32(i32 %5628)
  %5630 = trunc i32 %5629 to i8
  %5631 = and i8 %5630, 1
  %5632 = xor i8 %5631, 1
  %5633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5632, i8* %5633, align 1
  %5634 = icmp eq i8 %5625, 0
  %5635 = zext i1 %5634 to i8
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5635, i8* %5636, align 1
  %5637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5637, align 1
  %5638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5638, align 1
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5639, align 1
  store %struct.Memory* %loadMem_4631ce, %struct.Memory** %MEMORY
  %loadMem_4631d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5641 = getelementptr inbounds %struct.GPR, %struct.GPR* %5640, i32 0, i32 33
  %5642 = getelementptr inbounds %struct.Reg, %struct.Reg* %5641, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %5642 to i64*
  %5643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5644 = getelementptr inbounds %struct.GPR, %struct.GPR* %5643, i32 0, i32 1
  %5645 = getelementptr inbounds %struct.Reg, %struct.Reg* %5644, i32 0, i32 0
  %5646 = bitcast %union.anon* %5645 to %struct.anon.2*
  %AL.i594 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5646, i32 0, i32 0
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5648 = getelementptr inbounds %struct.GPR, %struct.GPR* %5647, i32 0, i32 5
  %5649 = getelementptr inbounds %struct.Reg, %struct.Reg* %5648, i32 0, i32 0
  %RCX.i595 = bitcast %union.anon* %5649 to i64*
  %5650 = load i8, i8* %AL.i594
  %5651 = zext i8 %5650 to i64
  %5652 = load i64, i64* %PC.i593
  %5653 = add i64 %5652, 3
  store i64 %5653, i64* %PC.i593
  %5654 = and i64 %5651, 255
  store i64 %5654, i64* %RCX.i595, align 8
  store %struct.Memory* %loadMem_4631d0, %struct.Memory** %MEMORY
  %loadMem_4631d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5656 = getelementptr inbounds %struct.GPR, %struct.GPR* %5655, i32 0, i32 33
  %5657 = getelementptr inbounds %struct.Reg, %struct.Reg* %5656, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %5657 to i64*
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5659 = getelementptr inbounds %struct.GPR, %struct.GPR* %5658, i32 0, i32 5
  %5660 = getelementptr inbounds %struct.Reg, %struct.Reg* %5659, i32 0, i32 0
  %ECX.i591 = bitcast %union.anon* %5660 to i32*
  %5661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5662 = getelementptr inbounds %struct.GPR, %struct.GPR* %5661, i32 0, i32 15
  %5663 = getelementptr inbounds %struct.Reg, %struct.Reg* %5662, i32 0, i32 0
  %RBP.i592 = bitcast %union.anon* %5663 to i64*
  %5664 = load i64, i64* %RBP.i592
  %5665 = sub i64 %5664, 144
  %5666 = load i32, i32* %ECX.i591
  %5667 = zext i32 %5666 to i64
  %5668 = load i64, i64* %PC.i590
  %5669 = add i64 %5668, 6
  store i64 %5669, i64* %PC.i590
  %5670 = inttoptr i64 %5665 to i32*
  store i32 %5666, i32* %5670
  store %struct.Memory* %loadMem_4631d3, %struct.Memory** %MEMORY
  %loadMem_4631d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5672 = getelementptr inbounds %struct.GPR, %struct.GPR* %5671, i32 0, i32 33
  %5673 = getelementptr inbounds %struct.Reg, %struct.Reg* %5672, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %5673 to i64*
  %5674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5675 = getelementptr inbounds %struct.GPR, %struct.GPR* %5674, i32 0, i32 15
  %5676 = getelementptr inbounds %struct.Reg, %struct.Reg* %5675, i32 0, i32 0
  %RBP.i589 = bitcast %union.anon* %5676 to i64*
  %5677 = load i64, i64* %RBP.i589
  %5678 = sub i64 %5677, 148
  %5679 = load i64, i64* %PC.i588
  %5680 = add i64 %5679, 7
  store i64 %5680, i64* %PC.i588
  %5681 = inttoptr i64 %5678 to i32*
  %5682 = load i32, i32* %5681
  %5683 = sub i32 %5682, 1
  %5684 = icmp ult i32 %5682, 1
  %5685 = zext i1 %5684 to i8
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5685, i8* %5686, align 1
  %5687 = and i32 %5683, 255
  %5688 = call i32 @llvm.ctpop.i32(i32 %5687)
  %5689 = trunc i32 %5688 to i8
  %5690 = and i8 %5689, 1
  %5691 = xor i8 %5690, 1
  %5692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5691, i8* %5692, align 1
  %5693 = xor i32 %5682, 1
  %5694 = xor i32 %5693, %5683
  %5695 = lshr i32 %5694, 4
  %5696 = trunc i32 %5695 to i8
  %5697 = and i8 %5696, 1
  %5698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5697, i8* %5698, align 1
  %5699 = icmp eq i32 %5683, 0
  %5700 = zext i1 %5699 to i8
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5700, i8* %5701, align 1
  %5702 = lshr i32 %5683, 31
  %5703 = trunc i32 %5702 to i8
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5703, i8* %5704, align 1
  %5705 = lshr i32 %5682, 31
  %5706 = xor i32 %5702, %5705
  %5707 = add i32 %5706, %5705
  %5708 = icmp eq i32 %5707, 2
  %5709 = zext i1 %5708 to i8
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5709, i8* %5710, align 1
  store %struct.Memory* %loadMem_4631d9, %struct.Memory** %MEMORY
  %loadMem_4631e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5712 = getelementptr inbounds %struct.GPR, %struct.GPR* %5711, i32 0, i32 33
  %5713 = getelementptr inbounds %struct.Reg, %struct.Reg* %5712, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %5713 to i64*
  %5714 = load i64, i64* %PC.i587
  %5715 = add i64 %5714, 58
  %5716 = load i64, i64* %PC.i587
  %5717 = add i64 %5716, 6
  %5718 = load i64, i64* %PC.i587
  %5719 = add i64 %5718, 6
  store i64 %5719, i64* %PC.i587
  %5720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5721 = load i8, i8* %5720, align 1
  %5722 = icmp eq i8 %5721, 0
  %5723 = zext i1 %5722 to i8
  store i8 %5723, i8* %BRANCH_TAKEN, align 1
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5725 = select i1 %5722, i64 %5715, i64 %5717
  store i64 %5725, i64* %5724, align 8
  store %struct.Memory* %loadMem_4631e0, %struct.Memory** %MEMORY
  %loadBr_4631e0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4631e0 = icmp eq i8 %loadBr_4631e0, 1
  br i1 %cmpBr_4631e0, label %block_.L_46321a, label %block_4631e6

block_4631e6:                                     ; preds = %block_.L_4631c8
  %loadMem_4631e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5727 = getelementptr inbounds %struct.GPR, %struct.GPR* %5726, i32 0, i32 33
  %5728 = getelementptr inbounds %struct.Reg, %struct.Reg* %5727, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %5728 to i64*
  %5729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5730 = getelementptr inbounds %struct.GPR, %struct.GPR* %5729, i32 0, i32 15
  %5731 = getelementptr inbounds %struct.Reg, %struct.Reg* %5730, i32 0, i32 0
  %RBP.i586 = bitcast %union.anon* %5731 to i64*
  %5732 = load i64, i64* %RBP.i586
  %5733 = sub i64 %5732, 128
  %5734 = load i64, i64* %PC.i585
  %5735 = add i64 %5734, 4
  store i64 %5735, i64* %PC.i585
  %5736 = inttoptr i64 %5733 to i32*
  %5737 = load i32, i32* %5736
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5738, align 1
  %5739 = and i32 %5737, 255
  %5740 = call i32 @llvm.ctpop.i32(i32 %5739)
  %5741 = trunc i32 %5740 to i8
  %5742 = and i8 %5741, 1
  %5743 = xor i8 %5742, 1
  %5744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5743, i8* %5744, align 1
  %5745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5745, align 1
  %5746 = icmp eq i32 %5737, 0
  %5747 = zext i1 %5746 to i8
  %5748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5747, i8* %5748, align 1
  %5749 = lshr i32 %5737, 31
  %5750 = trunc i32 %5749 to i8
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5750, i8* %5751, align 1
  %5752 = lshr i32 %5737, 31
  %5753 = xor i32 %5749, %5752
  %5754 = add i32 %5753, %5752
  %5755 = icmp eq i32 %5754, 2
  %5756 = zext i1 %5755 to i8
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5756, i8* %5757, align 1
  store %struct.Memory* %loadMem_4631e6, %struct.Memory** %MEMORY
  %loadMem_4631ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %5758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5759 = getelementptr inbounds %struct.GPR, %struct.GPR* %5758, i32 0, i32 33
  %5760 = getelementptr inbounds %struct.Reg, %struct.Reg* %5759, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %5760 to i64*
  %5761 = load i64, i64* %PC.i584
  %5762 = add i64 %5761, 48
  %5763 = load i64, i64* %PC.i584
  %5764 = add i64 %5763, 6
  %5765 = load i64, i64* %PC.i584
  %5766 = add i64 %5765, 6
  store i64 %5766, i64* %PC.i584
  %5767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5768 = load i8, i8* %5767, align 1
  %5769 = icmp eq i8 %5768, 0
  %5770 = zext i1 %5769 to i8
  store i8 %5770, i8* %BRANCH_TAKEN, align 1
  %5771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5772 = select i1 %5769, i64 %5762, i64 %5764
  store i64 %5772, i64* %5771, align 8
  store %struct.Memory* %loadMem_4631ea, %struct.Memory** %MEMORY
  %loadBr_4631ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4631ea = icmp eq i8 %loadBr_4631ea, 1
  br i1 %cmpBr_4631ea, label %block_.L_46321a, label %block_4631f0

block_4631f0:                                     ; preds = %block_4631e6
  %loadMem_4631f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5774 = getelementptr inbounds %struct.GPR, %struct.GPR* %5773, i32 0, i32 33
  %5775 = getelementptr inbounds %struct.Reg, %struct.Reg* %5774, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %5775 to i64*
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5777 = getelementptr inbounds %struct.GPR, %struct.GPR* %5776, i32 0, i32 15
  %5778 = getelementptr inbounds %struct.Reg, %struct.Reg* %5777, i32 0, i32 0
  %RBP.i583 = bitcast %union.anon* %5778 to i64*
  %5779 = load i64, i64* %RBP.i583
  %5780 = sub i64 %5779, 144
  %5781 = load i64, i64* %PC.i582
  %5782 = add i64 %5781, 7
  store i64 %5782, i64* %PC.i582
  %5783 = inttoptr i64 %5780 to i32*
  %5784 = load i32, i32* %5783
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5785, align 1
  %5786 = and i32 %5784, 255
  %5787 = call i32 @llvm.ctpop.i32(i32 %5786)
  %5788 = trunc i32 %5787 to i8
  %5789 = and i8 %5788, 1
  %5790 = xor i8 %5789, 1
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5790, i8* %5791, align 1
  %5792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5792, align 1
  %5793 = icmp eq i32 %5784, 0
  %5794 = zext i1 %5793 to i8
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5794, i8* %5795, align 1
  %5796 = lshr i32 %5784, 31
  %5797 = trunc i32 %5796 to i8
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5797, i8* %5798, align 1
  %5799 = lshr i32 %5784, 31
  %5800 = xor i32 %5796, %5799
  %5801 = add i32 %5800, %5799
  %5802 = icmp eq i32 %5801, 2
  %5803 = zext i1 %5802 to i8
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5803, i8* %5804, align 1
  store %struct.Memory* %loadMem_4631f0, %struct.Memory** %MEMORY
  %loadMem_4631f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5806 = getelementptr inbounds %struct.GPR, %struct.GPR* %5805, i32 0, i32 33
  %5807 = getelementptr inbounds %struct.Reg, %struct.Reg* %5806, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %5807 to i64*
  %5808 = load i64, i64* %PC.i581
  %5809 = add i64 %5808, 35
  %5810 = load i64, i64* %PC.i581
  %5811 = add i64 %5810, 6
  %5812 = load i64, i64* %PC.i581
  %5813 = add i64 %5812, 6
  store i64 %5813, i64* %PC.i581
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5815 = load i8, i8* %5814, align 1
  %5816 = icmp eq i8 %5815, 0
  %5817 = zext i1 %5816 to i8
  store i8 %5817, i8* %BRANCH_TAKEN, align 1
  %5818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5819 = select i1 %5816, i64 %5809, i64 %5811
  store i64 %5819, i64* %5818, align 8
  store %struct.Memory* %loadMem_4631f7, %struct.Memory** %MEMORY
  %loadBr_4631f7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4631f7 = icmp eq i8 %loadBr_4631f7, 1
  br i1 %cmpBr_4631f7, label %block_.L_46321a, label %block_4631fd

block_4631fd:                                     ; preds = %block_4631f0
  %loadMem_4631fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 33
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %5822 to i64*
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5824 = getelementptr inbounds %struct.GPR, %struct.GPR* %5823, i32 0, i32 1
  %5825 = getelementptr inbounds %struct.Reg, %struct.Reg* %5824, i32 0, i32 0
  %RAX.i580 = bitcast %union.anon* %5825 to i64*
  %5826 = load i64, i64* %PC.i579
  %5827 = add i64 %5826, 7
  store i64 %5827, i64* %PC.i579
  %5828 = load i32, i32* bitcast (%G_0x7afd58_type* @G_0x7afd58 to i32*)
  %5829 = zext i32 %5828 to i64
  store i64 %5829, i64* %RAX.i580, align 8
  store %struct.Memory* %loadMem_4631fd, %struct.Memory** %MEMORY
  %loadMem_463204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5831 = getelementptr inbounds %struct.GPR, %struct.GPR* %5830, i32 0, i32 33
  %5832 = getelementptr inbounds %struct.Reg, %struct.Reg* %5831, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %5832 to i64*
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5834 = getelementptr inbounds %struct.GPR, %struct.GPR* %5833, i32 0, i32 5
  %5835 = getelementptr inbounds %struct.Reg, %struct.Reg* %5834, i32 0, i32 0
  %RCX.i577 = bitcast %union.anon* %5835 to i64*
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5837 = getelementptr inbounds %struct.GPR, %struct.GPR* %5836, i32 0, i32 15
  %5838 = getelementptr inbounds %struct.Reg, %struct.Reg* %5837, i32 0, i32 0
  %RBP.i578 = bitcast %union.anon* %5838 to i64*
  %5839 = load i64, i64* %RBP.i578
  %5840 = sub i64 %5839, 48
  %5841 = load i64, i64* %PC.i576
  %5842 = add i64 %5841, 4
  store i64 %5842, i64* %PC.i576
  %5843 = inttoptr i64 %5840 to i64*
  %5844 = load i64, i64* %5843
  store i64 %5844, i64* %RCX.i577, align 8
  store %struct.Memory* %loadMem_463204, %struct.Memory** %MEMORY
  %loadMem_463208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5846 = getelementptr inbounds %struct.GPR, %struct.GPR* %5845, i32 0, i32 33
  %5847 = getelementptr inbounds %struct.Reg, %struct.Reg* %5846, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %5847 to i64*
  %5848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5849 = getelementptr inbounds %struct.GPR, %struct.GPR* %5848, i32 0, i32 7
  %5850 = getelementptr inbounds %struct.Reg, %struct.Reg* %5849, i32 0, i32 0
  %RDX.i574 = bitcast %union.anon* %5850 to i64*
  %5851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5852 = getelementptr inbounds %struct.GPR, %struct.GPR* %5851, i32 0, i32 15
  %5853 = getelementptr inbounds %struct.Reg, %struct.Reg* %5852, i32 0, i32 0
  %RBP.i575 = bitcast %union.anon* %5853 to i64*
  %5854 = load i64, i64* %RBP.i575
  %5855 = sub i64 %5854, 80
  %5856 = load i64, i64* %PC.i573
  %5857 = add i64 %5856, 4
  store i64 %5857, i64* %PC.i573
  %5858 = inttoptr i64 %5855 to i32*
  %5859 = load i32, i32* %5858
  %5860 = sext i32 %5859 to i64
  store i64 %5860, i64* %RDX.i574, align 8
  store %struct.Memory* %loadMem_463208, %struct.Memory** %MEMORY
  %loadMem_46320c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5862 = getelementptr inbounds %struct.GPR, %struct.GPR* %5861, i32 0, i32 33
  %5863 = getelementptr inbounds %struct.Reg, %struct.Reg* %5862, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %5863 to i64*
  %5864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5865 = getelementptr inbounds %struct.GPR, %struct.GPR* %5864, i32 0, i32 1
  %5866 = getelementptr inbounds %struct.Reg, %struct.Reg* %5865, i32 0, i32 0
  %RAX.i570 = bitcast %union.anon* %5866 to i64*
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5868 = getelementptr inbounds %struct.GPR, %struct.GPR* %5867, i32 0, i32 5
  %5869 = getelementptr inbounds %struct.Reg, %struct.Reg* %5868, i32 0, i32 0
  %RCX.i571 = bitcast %union.anon* %5869 to i64*
  %5870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5871 = getelementptr inbounds %struct.GPR, %struct.GPR* %5870, i32 0, i32 7
  %5872 = getelementptr inbounds %struct.Reg, %struct.Reg* %5871, i32 0, i32 0
  %RDX.i572 = bitcast %union.anon* %5872 to i64*
  %5873 = load i64, i64* %RAX.i570
  %5874 = load i64, i64* %RCX.i571
  %5875 = load i64, i64* %RDX.i572
  %5876 = mul i64 %5875, 4
  %5877 = add i64 %5874, 200
  %5878 = add i64 %5877, %5876
  %5879 = load i64, i64* %PC.i569
  %5880 = add i64 %5879, 7
  store i64 %5880, i64* %PC.i569
  %5881 = trunc i64 %5873 to i32
  %5882 = inttoptr i64 %5878 to i32*
  %5883 = load i32, i32* %5882
  %5884 = add i32 %5883, %5881
  %5885 = zext i32 %5884 to i64
  store i64 %5885, i64* %RAX.i570, align 8
  %5886 = icmp ult i32 %5884, %5881
  %5887 = icmp ult i32 %5884, %5883
  %5888 = or i1 %5886, %5887
  %5889 = zext i1 %5888 to i8
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5889, i8* %5890, align 1
  %5891 = and i32 %5884, 255
  %5892 = call i32 @llvm.ctpop.i32(i32 %5891)
  %5893 = trunc i32 %5892 to i8
  %5894 = and i8 %5893, 1
  %5895 = xor i8 %5894, 1
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5895, i8* %5896, align 1
  %5897 = xor i32 %5883, %5881
  %5898 = xor i32 %5897, %5884
  %5899 = lshr i32 %5898, 4
  %5900 = trunc i32 %5899 to i8
  %5901 = and i8 %5900, 1
  %5902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5901, i8* %5902, align 1
  %5903 = icmp eq i32 %5884, 0
  %5904 = zext i1 %5903 to i8
  %5905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5904, i8* %5905, align 1
  %5906 = lshr i32 %5884, 31
  %5907 = trunc i32 %5906 to i8
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5907, i8* %5908, align 1
  %5909 = lshr i32 %5881, 31
  %5910 = lshr i32 %5883, 31
  %5911 = xor i32 %5906, %5909
  %5912 = xor i32 %5906, %5910
  %5913 = add i32 %5911, %5912
  %5914 = icmp eq i32 %5913, 2
  %5915 = zext i1 %5914 to i8
  %5916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5915, i8* %5916, align 1
  store %struct.Memory* %loadMem_46320c, %struct.Memory** %MEMORY
  %loadMem_463213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5918 = getelementptr inbounds %struct.GPR, %struct.GPR* %5917, i32 0, i32 33
  %5919 = getelementptr inbounds %struct.Reg, %struct.Reg* %5918, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %5919 to i64*
  %5920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5921 = getelementptr inbounds %struct.GPR, %struct.GPR* %5920, i32 0, i32 1
  %5922 = getelementptr inbounds %struct.Reg, %struct.Reg* %5921, i32 0, i32 0
  %EAX.i566 = bitcast %union.anon* %5922 to i32*
  %5923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5924 = getelementptr inbounds %struct.GPR, %struct.GPR* %5923, i32 0, i32 5
  %5925 = getelementptr inbounds %struct.Reg, %struct.Reg* %5924, i32 0, i32 0
  %RCX.i567 = bitcast %union.anon* %5925 to i64*
  %5926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5927 = getelementptr inbounds %struct.GPR, %struct.GPR* %5926, i32 0, i32 7
  %5928 = getelementptr inbounds %struct.Reg, %struct.Reg* %5927, i32 0, i32 0
  %RDX.i568 = bitcast %union.anon* %5928 to i64*
  %5929 = load i64, i64* %RCX.i567
  %5930 = load i64, i64* %RDX.i568
  %5931 = mul i64 %5930, 4
  %5932 = add i64 %5929, 200
  %5933 = add i64 %5932, %5931
  %5934 = load i32, i32* %EAX.i566
  %5935 = zext i32 %5934 to i64
  %5936 = load i64, i64* %PC.i565
  %5937 = add i64 %5936, 7
  store i64 %5937, i64* %PC.i565
  %5938 = inttoptr i64 %5933 to i32*
  store i32 %5934, i32* %5938
  store %struct.Memory* %loadMem_463213, %struct.Memory** %MEMORY
  br label %block_.L_46321a

block_.L_46321a:                                  ; preds = %block_4631fd, %block_4631f0, %block_4631e6, %block_.L_4631c8
  %loadMem_46321a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5940 = getelementptr inbounds %struct.GPR, %struct.GPR* %5939, i32 0, i32 33
  %5941 = getelementptr inbounds %struct.Reg, %struct.Reg* %5940, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %5941 to i64*
  %5942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5943 = getelementptr inbounds %struct.GPR, %struct.GPR* %5942, i32 0, i32 15
  %5944 = getelementptr inbounds %struct.Reg, %struct.Reg* %5943, i32 0, i32 0
  %RBP.i564 = bitcast %union.anon* %5944 to i64*
  %5945 = load i64, i64* %RBP.i564
  %5946 = sub i64 %5945, 144
  %5947 = load i64, i64* %PC.i563
  %5948 = add i64 %5947, 7
  store i64 %5948, i64* %PC.i563
  %5949 = inttoptr i64 %5946 to i32*
  %5950 = load i32, i32* %5949
  %5951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5951, align 1
  %5952 = and i32 %5950, 255
  %5953 = call i32 @llvm.ctpop.i32(i32 %5952)
  %5954 = trunc i32 %5953 to i8
  %5955 = and i8 %5954, 1
  %5956 = xor i8 %5955, 1
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5956, i8* %5957, align 1
  %5958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5958, align 1
  %5959 = icmp eq i32 %5950, 0
  %5960 = zext i1 %5959 to i8
  %5961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5960, i8* %5961, align 1
  %5962 = lshr i32 %5950, 31
  %5963 = trunc i32 %5962 to i8
  %5964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5963, i8* %5964, align 1
  %5965 = lshr i32 %5950, 31
  %5966 = xor i32 %5962, %5965
  %5967 = add i32 %5966, %5965
  %5968 = icmp eq i32 %5967, 2
  %5969 = zext i1 %5968 to i8
  %5970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5969, i8* %5970, align 1
  store %struct.Memory* %loadMem_46321a, %struct.Memory** %MEMORY
  %loadMem_463221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5972 = getelementptr inbounds %struct.GPR, %struct.GPR* %5971, i32 0, i32 33
  %5973 = getelementptr inbounds %struct.Reg, %struct.Reg* %5972, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %5973 to i64*
  %5974 = load i64, i64* %PC.i562
  %5975 = add i64 %5974, 35
  %5976 = load i64, i64* %PC.i562
  %5977 = add i64 %5976, 6
  %5978 = load i64, i64* %PC.i562
  %5979 = add i64 %5978, 6
  store i64 %5979, i64* %PC.i562
  %5980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5981 = load i8, i8* %5980, align 1
  store i8 %5981, i8* %BRANCH_TAKEN, align 1
  %5982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5983 = icmp ne i8 %5981, 0
  %5984 = select i1 %5983, i64 %5975, i64 %5977
  store i64 %5984, i64* %5982, align 8
  store %struct.Memory* %loadMem_463221, %struct.Memory** %MEMORY
  %loadBr_463221 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_463221 = icmp eq i8 %loadBr_463221, 1
  br i1 %cmpBr_463221, label %block_.L_463244, label %block_463227

block_463227:                                     ; preds = %block_.L_46321a
  %loadMem_463227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5986 = getelementptr inbounds %struct.GPR, %struct.GPR* %5985, i32 0, i32 33
  %5987 = getelementptr inbounds %struct.Reg, %struct.Reg* %5986, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %5987 to i64*
  %5988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5989 = getelementptr inbounds %struct.GPR, %struct.GPR* %5988, i32 0, i32 1
  %5990 = getelementptr inbounds %struct.Reg, %struct.Reg* %5989, i32 0, i32 0
  %RAX.i561 = bitcast %union.anon* %5990 to i64*
  %5991 = load i64, i64* %PC.i560
  %5992 = add i64 %5991, 7
  store i64 %5992, i64* %PC.i560
  %5993 = load i32, i32* bitcast (%G_0x7afd5c_type* @G_0x7afd5c to i32*)
  %5994 = zext i32 %5993 to i64
  store i64 %5994, i64* %RAX.i561, align 8
  store %struct.Memory* %loadMem_463227, %struct.Memory** %MEMORY
  %loadMem_46322e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 33
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %5997 to i64*
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5999 = getelementptr inbounds %struct.GPR, %struct.GPR* %5998, i32 0, i32 5
  %6000 = getelementptr inbounds %struct.Reg, %struct.Reg* %5999, i32 0, i32 0
  %RCX.i558 = bitcast %union.anon* %6000 to i64*
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6002 = getelementptr inbounds %struct.GPR, %struct.GPR* %6001, i32 0, i32 15
  %6003 = getelementptr inbounds %struct.Reg, %struct.Reg* %6002, i32 0, i32 0
  %RBP.i559 = bitcast %union.anon* %6003 to i64*
  %6004 = load i64, i64* %RBP.i559
  %6005 = sub i64 %6004, 48
  %6006 = load i64, i64* %PC.i557
  %6007 = add i64 %6006, 4
  store i64 %6007, i64* %PC.i557
  %6008 = inttoptr i64 %6005 to i64*
  %6009 = load i64, i64* %6008
  store i64 %6009, i64* %RCX.i558, align 8
  store %struct.Memory* %loadMem_46322e, %struct.Memory** %MEMORY
  %loadMem_463232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6011 = getelementptr inbounds %struct.GPR, %struct.GPR* %6010, i32 0, i32 33
  %6012 = getelementptr inbounds %struct.Reg, %struct.Reg* %6011, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %6012 to i64*
  %6013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6014 = getelementptr inbounds %struct.GPR, %struct.GPR* %6013, i32 0, i32 7
  %6015 = getelementptr inbounds %struct.Reg, %struct.Reg* %6014, i32 0, i32 0
  %RDX.i555 = bitcast %union.anon* %6015 to i64*
  %6016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6017 = getelementptr inbounds %struct.GPR, %struct.GPR* %6016, i32 0, i32 15
  %6018 = getelementptr inbounds %struct.Reg, %struct.Reg* %6017, i32 0, i32 0
  %RBP.i556 = bitcast %union.anon* %6018 to i64*
  %6019 = load i64, i64* %RBP.i556
  %6020 = sub i64 %6019, 80
  %6021 = load i64, i64* %PC.i554
  %6022 = add i64 %6021, 4
  store i64 %6022, i64* %PC.i554
  %6023 = inttoptr i64 %6020 to i32*
  %6024 = load i32, i32* %6023
  %6025 = sext i32 %6024 to i64
  store i64 %6025, i64* %RDX.i555, align 8
  store %struct.Memory* %loadMem_463232, %struct.Memory** %MEMORY
  %loadMem_463236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 33
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %6028 to i64*
  %6029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6030 = getelementptr inbounds %struct.GPR, %struct.GPR* %6029, i32 0, i32 1
  %6031 = getelementptr inbounds %struct.Reg, %struct.Reg* %6030, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %6031 to i64*
  %6032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6033 = getelementptr inbounds %struct.GPR, %struct.GPR* %6032, i32 0, i32 5
  %6034 = getelementptr inbounds %struct.Reg, %struct.Reg* %6033, i32 0, i32 0
  %RCX.i552 = bitcast %union.anon* %6034 to i64*
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6036 = getelementptr inbounds %struct.GPR, %struct.GPR* %6035, i32 0, i32 7
  %6037 = getelementptr inbounds %struct.Reg, %struct.Reg* %6036, i32 0, i32 0
  %RDX.i553 = bitcast %union.anon* %6037 to i64*
  %6038 = load i64, i64* %RAX.i551
  %6039 = load i64, i64* %RCX.i552
  %6040 = load i64, i64* %RDX.i553
  %6041 = mul i64 %6040, 4
  %6042 = add i64 %6039, 200
  %6043 = add i64 %6042, %6041
  %6044 = load i64, i64* %PC.i550
  %6045 = add i64 %6044, 7
  store i64 %6045, i64* %PC.i550
  %6046 = trunc i64 %6038 to i32
  %6047 = inttoptr i64 %6043 to i32*
  %6048 = load i32, i32* %6047
  %6049 = add i32 %6048, %6046
  %6050 = zext i32 %6049 to i64
  store i64 %6050, i64* %RAX.i551, align 8
  %6051 = icmp ult i32 %6049, %6046
  %6052 = icmp ult i32 %6049, %6048
  %6053 = or i1 %6051, %6052
  %6054 = zext i1 %6053 to i8
  %6055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6054, i8* %6055, align 1
  %6056 = and i32 %6049, 255
  %6057 = call i32 @llvm.ctpop.i32(i32 %6056)
  %6058 = trunc i32 %6057 to i8
  %6059 = and i8 %6058, 1
  %6060 = xor i8 %6059, 1
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6060, i8* %6061, align 1
  %6062 = xor i32 %6048, %6046
  %6063 = xor i32 %6062, %6049
  %6064 = lshr i32 %6063, 4
  %6065 = trunc i32 %6064 to i8
  %6066 = and i8 %6065, 1
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6066, i8* %6067, align 1
  %6068 = icmp eq i32 %6049, 0
  %6069 = zext i1 %6068 to i8
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6069, i8* %6070, align 1
  %6071 = lshr i32 %6049, 31
  %6072 = trunc i32 %6071 to i8
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6072, i8* %6073, align 1
  %6074 = lshr i32 %6046, 31
  %6075 = lshr i32 %6048, 31
  %6076 = xor i32 %6071, %6074
  %6077 = xor i32 %6071, %6075
  %6078 = add i32 %6076, %6077
  %6079 = icmp eq i32 %6078, 2
  %6080 = zext i1 %6079 to i8
  %6081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6080, i8* %6081, align 1
  store %struct.Memory* %loadMem_463236, %struct.Memory** %MEMORY
  %loadMem_46323d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6083 = getelementptr inbounds %struct.GPR, %struct.GPR* %6082, i32 0, i32 33
  %6084 = getelementptr inbounds %struct.Reg, %struct.Reg* %6083, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %6084 to i64*
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6086 = getelementptr inbounds %struct.GPR, %struct.GPR* %6085, i32 0, i32 1
  %6087 = getelementptr inbounds %struct.Reg, %struct.Reg* %6086, i32 0, i32 0
  %EAX.i547 = bitcast %union.anon* %6087 to i32*
  %6088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6089 = getelementptr inbounds %struct.GPR, %struct.GPR* %6088, i32 0, i32 5
  %6090 = getelementptr inbounds %struct.Reg, %struct.Reg* %6089, i32 0, i32 0
  %RCX.i548 = bitcast %union.anon* %6090 to i64*
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6092 = getelementptr inbounds %struct.GPR, %struct.GPR* %6091, i32 0, i32 7
  %6093 = getelementptr inbounds %struct.Reg, %struct.Reg* %6092, i32 0, i32 0
  %RDX.i549 = bitcast %union.anon* %6093 to i64*
  %6094 = load i64, i64* %RCX.i548
  %6095 = load i64, i64* %RDX.i549
  %6096 = mul i64 %6095, 4
  %6097 = add i64 %6094, 200
  %6098 = add i64 %6097, %6096
  %6099 = load i32, i32* %EAX.i547
  %6100 = zext i32 %6099 to i64
  %6101 = load i64, i64* %PC.i546
  %6102 = add i64 %6101, 7
  store i64 %6102, i64* %PC.i546
  %6103 = inttoptr i64 %6098 to i32*
  store i32 %6099, i32* %6103
  store %struct.Memory* %loadMem_46323d, %struct.Memory** %MEMORY
  br label %block_.L_463244

block_.L_463244:                                  ; preds = %block_463227, %block_.L_46321a
  %loadMem_463244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6105 = getelementptr inbounds %struct.GPR, %struct.GPR* %6104, i32 0, i32 33
  %6106 = getelementptr inbounds %struct.Reg, %struct.Reg* %6105, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %6106 to i64*
  %6107 = load i64, i64* %PC.i545
  %6108 = add i64 %6107, 5
  %6109 = load i64, i64* %PC.i545
  %6110 = add i64 %6109, 5
  store i64 %6110, i64* %PC.i545
  %6111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6108, i64* %6111, align 8
  store %struct.Memory* %loadMem_463244, %struct.Memory** %MEMORY
  br label %block_.L_463249

block_.L_463249:                                  ; preds = %block_.L_463244, %block_.L_46311f, %block_463115, %block_46310b
  %loadMem_463249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6113 = getelementptr inbounds %struct.GPR, %struct.GPR* %6112, i32 0, i32 33
  %6114 = getelementptr inbounds %struct.Reg, %struct.Reg* %6113, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %6114 to i64*
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6116 = getelementptr inbounds %struct.GPR, %struct.GPR* %6115, i32 0, i32 15
  %6117 = getelementptr inbounds %struct.Reg, %struct.Reg* %6116, i32 0, i32 0
  %RBP.i544 = bitcast %union.anon* %6117 to i64*
  %6118 = load i64, i64* %RBP.i544
  %6119 = sub i64 %6118, 132
  %6120 = load i64, i64* %PC.i543
  %6121 = add i64 %6120, 7
  store i64 %6121, i64* %PC.i543
  %6122 = inttoptr i64 %6119 to i32*
  %6123 = load i32, i32* %6122
  %6124 = sub i32 %6123, 4
  %6125 = icmp ult i32 %6123, 4
  %6126 = zext i1 %6125 to i8
  %6127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6126, i8* %6127, align 1
  %6128 = and i32 %6124, 255
  %6129 = call i32 @llvm.ctpop.i32(i32 %6128)
  %6130 = trunc i32 %6129 to i8
  %6131 = and i8 %6130, 1
  %6132 = xor i8 %6131, 1
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6132, i8* %6133, align 1
  %6134 = xor i32 %6123, 4
  %6135 = xor i32 %6134, %6124
  %6136 = lshr i32 %6135, 4
  %6137 = trunc i32 %6136 to i8
  %6138 = and i8 %6137, 1
  %6139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6138, i8* %6139, align 1
  %6140 = icmp eq i32 %6124, 0
  %6141 = zext i1 %6140 to i8
  %6142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6141, i8* %6142, align 1
  %6143 = lshr i32 %6124, 31
  %6144 = trunc i32 %6143 to i8
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6144, i8* %6145, align 1
  %6146 = lshr i32 %6123, 31
  %6147 = xor i32 %6143, %6146
  %6148 = add i32 %6147, %6146
  %6149 = icmp eq i32 %6148, 2
  %6150 = zext i1 %6149 to i8
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6150, i8* %6151, align 1
  store %struct.Memory* %loadMem_463249, %struct.Memory** %MEMORY
  %loadMem_463250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6153 = getelementptr inbounds %struct.GPR, %struct.GPR* %6152, i32 0, i32 33
  %6154 = getelementptr inbounds %struct.Reg, %struct.Reg* %6153, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %6154 to i64*
  %6155 = load i64, i64* %PC.i542
  %6156 = add i64 %6155, 11
  %6157 = load i64, i64* %PC.i542
  %6158 = add i64 %6157, 6
  %6159 = load i64, i64* %PC.i542
  %6160 = add i64 %6159, 6
  store i64 %6160, i64* %PC.i542
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6162 = load i8, i8* %6161, align 1
  %6163 = icmp eq i8 %6162, 0
  %6164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6165 = load i8, i8* %6164, align 1
  %6166 = icmp ne i8 %6165, 0
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6168 = load i8, i8* %6167, align 1
  %6169 = icmp ne i8 %6168, 0
  %6170 = xor i1 %6166, %6169
  %6171 = xor i1 %6170, true
  %6172 = and i1 %6163, %6171
  %6173 = zext i1 %6172 to i8
  store i8 %6173, i8* %BRANCH_TAKEN, align 1
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6175 = select i1 %6172, i64 %6156, i64 %6158
  store i64 %6175, i64* %6174, align 8
  store %struct.Memory* %loadMem_463250, %struct.Memory** %MEMORY
  %loadBr_463250 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_463250 = icmp eq i8 %loadBr_463250, 1
  br i1 %cmpBr_463250, label %block_.L_46325b, label %block_463256

block_463256:                                     ; preds = %block_.L_463249
  %loadMem_463256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6177 = getelementptr inbounds %struct.GPR, %struct.GPR* %6176, i32 0, i32 33
  %6178 = getelementptr inbounds %struct.Reg, %struct.Reg* %6177, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %6178 to i64*
  %6179 = load i64, i64* %PC.i541
  %6180 = add i64 %6179, 45
  %6181 = load i64, i64* %PC.i541
  %6182 = add i64 %6181, 5
  store i64 %6182, i64* %PC.i541
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6180, i64* %6183, align 8
  store %struct.Memory* %loadMem_463256, %struct.Memory** %MEMORY
  br label %block_.L_463283

block_.L_46325b:                                  ; preds = %block_.L_463249
  %loadMem_46325b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6185 = getelementptr inbounds %struct.GPR, %struct.GPR* %6184, i32 0, i32 33
  %6186 = getelementptr inbounds %struct.Reg, %struct.Reg* %6185, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %6186 to i64*
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6188 = getelementptr inbounds %struct.GPR, %struct.GPR* %6187, i32 0, i32 11
  %6189 = getelementptr inbounds %struct.Reg, %struct.Reg* %6188, i32 0, i32 0
  %RDI.i540 = bitcast %union.anon* %6189 to i64*
  %6190 = load i64, i64* %PC.i539
  %6191 = add i64 %6190, 10
  store i64 %6191, i64* %PC.i539
  store i64 ptrtoint (%G__0x57fb0d_type* @G__0x57fb0d to i64), i64* %RDI.i540, align 8
  store %struct.Memory* %loadMem_46325b, %struct.Memory** %MEMORY
  %loadMem_463265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6193 = getelementptr inbounds %struct.GPR, %struct.GPR* %6192, i32 0, i32 33
  %6194 = getelementptr inbounds %struct.Reg, %struct.Reg* %6193, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %6194 to i64*
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6196 = getelementptr inbounds %struct.GPR, %struct.GPR* %6195, i32 0, i32 9
  %6197 = getelementptr inbounds %struct.Reg, %struct.Reg* %6196, i32 0, i32 0
  %RSI.i538 = bitcast %union.anon* %6197 to i64*
  %6198 = load i64, i64* %PC.i537
  %6199 = add i64 %6198, 5
  store i64 %6199, i64* %PC.i537
  store i64 4300, i64* %RSI.i538, align 8
  store %struct.Memory* %loadMem_463265, %struct.Memory** %MEMORY
  %loadMem_46326a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6201 = getelementptr inbounds %struct.GPR, %struct.GPR* %6200, i32 0, i32 33
  %6202 = getelementptr inbounds %struct.Reg, %struct.Reg* %6201, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %6202 to i64*
  %6203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6204 = getelementptr inbounds %struct.GPR, %struct.GPR* %6203, i32 0, i32 7
  %6205 = getelementptr inbounds %struct.Reg, %struct.Reg* %6204, i32 0, i32 0
  %RDX.i536 = bitcast %union.anon* %6205 to i64*
  %6206 = load i64, i64* %PC.i535
  %6207 = add i64 %6206, 10
  store i64 %6207, i64* %PC.i535
  store i64 ptrtoint (%G__0x57fdbf_type* @G__0x57fdbf to i64), i64* %RDX.i536, align 8
  store %struct.Memory* %loadMem_46326a, %struct.Memory** %MEMORY
  %loadMem_463274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6209 = getelementptr inbounds %struct.GPR, %struct.GPR* %6208, i32 0, i32 33
  %6210 = getelementptr inbounds %struct.Reg, %struct.Reg* %6209, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %6210 to i64*
  %6211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6212 = getelementptr inbounds %struct.GPR, %struct.GPR* %6211, i32 0, i32 1
  %6213 = getelementptr inbounds %struct.Reg, %struct.Reg* %6212, i32 0, i32 0
  %RAX.i534 = bitcast %union.anon* %6213 to i64*
  %6214 = load i64, i64* %PC.i533
  %6215 = add i64 %6214, 5
  store i64 %6215, i64* %PC.i533
  store i64 4294967295, i64* %RAX.i534, align 8
  store %struct.Memory* %loadMem_463274, %struct.Memory** %MEMORY
  %loadMem_463279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6217 = getelementptr inbounds %struct.GPR, %struct.GPR* %6216, i32 0, i32 33
  %6218 = getelementptr inbounds %struct.Reg, %struct.Reg* %6217, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %6218 to i64*
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6220 = getelementptr inbounds %struct.GPR, %struct.GPR* %6219, i32 0, i32 1
  %6221 = getelementptr inbounds %struct.Reg, %struct.Reg* %6220, i32 0, i32 0
  %EAX.i531 = bitcast %union.anon* %6221 to i32*
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6223 = getelementptr inbounds %struct.GPR, %struct.GPR* %6222, i32 0, i32 5
  %6224 = getelementptr inbounds %struct.Reg, %struct.Reg* %6223, i32 0, i32 0
  %RCX.i532 = bitcast %union.anon* %6224 to i64*
  %6225 = load i32, i32* %EAX.i531
  %6226 = zext i32 %6225 to i64
  %6227 = load i64, i64* %PC.i530
  %6228 = add i64 %6227, 2
  store i64 %6228, i64* %PC.i530
  %6229 = and i64 %6226, 4294967295
  store i64 %6229, i64* %RCX.i532, align 8
  store %struct.Memory* %loadMem_463279, %struct.Memory** %MEMORY
  %loadMem_46327b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6231 = getelementptr inbounds %struct.GPR, %struct.GPR* %6230, i32 0, i32 33
  %6232 = getelementptr inbounds %struct.Reg, %struct.Reg* %6231, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %6232 to i64*
  %6233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6234 = getelementptr inbounds %struct.GPR, %struct.GPR* %6233, i32 0, i32 1
  %6235 = getelementptr inbounds %struct.Reg, %struct.Reg* %6234, i32 0, i32 0
  %EAX.i528 = bitcast %union.anon* %6235 to i32*
  %6236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6237 = getelementptr inbounds %struct.GPR, %struct.GPR* %6236, i32 0, i32 17
  %6238 = getelementptr inbounds %struct.Reg, %struct.Reg* %6237, i32 0, i32 0
  %R8D.i529 = bitcast %union.anon* %6238 to i32*
  %6239 = bitcast i32* %R8D.i529 to i64*
  %6240 = load i32, i32* %EAX.i528
  %6241 = zext i32 %6240 to i64
  %6242 = load i64, i64* %PC.i527
  %6243 = add i64 %6242, 3
  store i64 %6243, i64* %PC.i527
  %6244 = and i64 %6241, 4294967295
  store i64 %6244, i64* %6239, align 8
  store %struct.Memory* %loadMem_46327b, %struct.Memory** %MEMORY
  %loadMem1_46327e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6246 = getelementptr inbounds %struct.GPR, %struct.GPR* %6245, i32 0, i32 33
  %6247 = getelementptr inbounds %struct.Reg, %struct.Reg* %6246, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %6247 to i64*
  %6248 = load i64, i64* %PC.i526
  %6249 = add i64 %6248, -70126
  %6250 = load i64, i64* %PC.i526
  %6251 = add i64 %6250, 5
  %6252 = load i64, i64* %PC.i526
  %6253 = add i64 %6252, 5
  store i64 %6253, i64* %PC.i526
  %6254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6255 = load i64, i64* %6254, align 8
  %6256 = add i64 %6255, -8
  %6257 = inttoptr i64 %6256 to i64*
  store i64 %6251, i64* %6257
  store i64 %6256, i64* %6254, align 8
  %6258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6249, i64* %6258, align 8
  store %struct.Memory* %loadMem1_46327e, %struct.Memory** %MEMORY
  %loadMem2_46327e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_46327e = load i64, i64* %3
  %call2_46327e = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_46327e, %struct.Memory* %loadMem2_46327e)
  store %struct.Memory* %call2_46327e, %struct.Memory** %MEMORY
  br label %block_.L_463283

block_.L_463283:                                  ; preds = %block_.L_46325b, %block_463256
  %loadMem_463283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6260 = getelementptr inbounds %struct.GPR, %struct.GPR* %6259, i32 0, i32 33
  %6261 = getelementptr inbounds %struct.Reg, %struct.Reg* %6260, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %6261 to i64*
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6263 = getelementptr inbounds %struct.GPR, %struct.GPR* %6262, i32 0, i32 1
  %6264 = getelementptr inbounds %struct.Reg, %struct.Reg* %6263, i32 0, i32 0
  %RAX.i524 = bitcast %union.anon* %6264 to i64*
  %6265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6266 = getelementptr inbounds %struct.GPR, %struct.GPR* %6265, i32 0, i32 15
  %6267 = getelementptr inbounds %struct.Reg, %struct.Reg* %6266, i32 0, i32 0
  %RBP.i525 = bitcast %union.anon* %6267 to i64*
  %6268 = load i64, i64* %RBP.i525
  %6269 = sub i64 %6268, 132
  %6270 = load i64, i64* %PC.i523
  %6271 = add i64 %6270, 7
  store i64 %6271, i64* %PC.i523
  %6272 = inttoptr i64 %6269 to i32*
  %6273 = load i32, i32* %6272
  %6274 = sext i32 %6273 to i64
  store i64 %6274, i64* %RAX.i524, align 8
  store %struct.Memory* %loadMem_463283, %struct.Memory** %MEMORY
  %loadMem_46328a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6276 = getelementptr inbounds %struct.GPR, %struct.GPR* %6275, i32 0, i32 33
  %6277 = getelementptr inbounds %struct.Reg, %struct.Reg* %6276, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %6277 to i64*
  %6278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6279 = getelementptr inbounds %struct.GPR, %struct.GPR* %6278, i32 0, i32 1
  %6280 = getelementptr inbounds %struct.Reg, %struct.Reg* %6279, i32 0, i32 0
  %RAX.i521 = bitcast %union.anon* %6280 to i64*
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6282 = getelementptr inbounds %struct.GPR, %struct.GPR* %6281, i32 0, i32 5
  %6283 = getelementptr inbounds %struct.Reg, %struct.Reg* %6282, i32 0, i32 0
  %RCX.i522 = bitcast %union.anon* %6283 to i64*
  %6284 = load i64, i64* %RAX.i521
  %6285 = mul i64 %6284, 4
  %6286 = add i64 %6285, 8060256
  %6287 = load i64, i64* %PC.i520
  %6288 = add i64 %6287, 7
  store i64 %6288, i64* %PC.i520
  %6289 = inttoptr i64 %6286 to i32*
  %6290 = load i32, i32* %6289
  %6291 = zext i32 %6290 to i64
  store i64 %6291, i64* %RCX.i522, align 8
  store %struct.Memory* %loadMem_46328a, %struct.Memory** %MEMORY
  %loadMem_463291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6293 = getelementptr inbounds %struct.GPR, %struct.GPR* %6292, i32 0, i32 33
  %6294 = getelementptr inbounds %struct.Reg, %struct.Reg* %6293, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %6294 to i64*
  %6295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6296 = getelementptr inbounds %struct.GPR, %struct.GPR* %6295, i32 0, i32 1
  %6297 = getelementptr inbounds %struct.Reg, %struct.Reg* %6296, i32 0, i32 0
  %RAX.i518 = bitcast %union.anon* %6297 to i64*
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6299 = getelementptr inbounds %struct.GPR, %struct.GPR* %6298, i32 0, i32 15
  %6300 = getelementptr inbounds %struct.Reg, %struct.Reg* %6299, i32 0, i32 0
  %RBP.i519 = bitcast %union.anon* %6300 to i64*
  %6301 = load i64, i64* %RBP.i519
  %6302 = sub i64 %6301, 48
  %6303 = load i64, i64* %PC.i517
  %6304 = add i64 %6303, 4
  store i64 %6304, i64* %PC.i517
  %6305 = inttoptr i64 %6302 to i64*
  %6306 = load i64, i64* %6305
  store i64 %6306, i64* %RAX.i518, align 8
  store %struct.Memory* %loadMem_463291, %struct.Memory** %MEMORY
  %loadMem_463295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6308 = getelementptr inbounds %struct.GPR, %struct.GPR* %6307, i32 0, i32 33
  %6309 = getelementptr inbounds %struct.Reg, %struct.Reg* %6308, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %6309 to i64*
  %6310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6311 = getelementptr inbounds %struct.GPR, %struct.GPR* %6310, i32 0, i32 7
  %6312 = getelementptr inbounds %struct.Reg, %struct.Reg* %6311, i32 0, i32 0
  %RDX.i515 = bitcast %union.anon* %6312 to i64*
  %6313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6314 = getelementptr inbounds %struct.GPR, %struct.GPR* %6313, i32 0, i32 15
  %6315 = getelementptr inbounds %struct.Reg, %struct.Reg* %6314, i32 0, i32 0
  %RBP.i516 = bitcast %union.anon* %6315 to i64*
  %6316 = load i64, i64* %RBP.i516
  %6317 = sub i64 %6316, 80
  %6318 = load i64, i64* %PC.i514
  %6319 = add i64 %6318, 4
  store i64 %6319, i64* %PC.i514
  %6320 = inttoptr i64 %6317 to i32*
  %6321 = load i32, i32* %6320
  %6322 = sext i32 %6321 to i64
  store i64 %6322, i64* %RDX.i515, align 8
  store %struct.Memory* %loadMem_463295, %struct.Memory** %MEMORY
  %loadMem_463299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6324 = getelementptr inbounds %struct.GPR, %struct.GPR* %6323, i32 0, i32 33
  %6325 = getelementptr inbounds %struct.Reg, %struct.Reg* %6324, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %6325 to i64*
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6327 = getelementptr inbounds %struct.GPR, %struct.GPR* %6326, i32 0, i32 1
  %6328 = getelementptr inbounds %struct.Reg, %struct.Reg* %6327, i32 0, i32 0
  %RAX.i511 = bitcast %union.anon* %6328 to i64*
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6330 = getelementptr inbounds %struct.GPR, %struct.GPR* %6329, i32 0, i32 5
  %6331 = getelementptr inbounds %struct.Reg, %struct.Reg* %6330, i32 0, i32 0
  %RCX.i512 = bitcast %union.anon* %6331 to i64*
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6333 = getelementptr inbounds %struct.GPR, %struct.GPR* %6332, i32 0, i32 7
  %6334 = getelementptr inbounds %struct.Reg, %struct.Reg* %6333, i32 0, i32 0
  %RDX.i513 = bitcast %union.anon* %6334 to i64*
  %6335 = load i64, i64* %RCX.i512
  %6336 = load i64, i64* %RAX.i511
  %6337 = load i64, i64* %RDX.i513
  %6338 = mul i64 %6337, 4
  %6339 = add i64 %6336, 200
  %6340 = add i64 %6339, %6338
  %6341 = load i64, i64* %PC.i510
  %6342 = add i64 %6341, 7
  store i64 %6342, i64* %PC.i510
  %6343 = trunc i64 %6335 to i32
  %6344 = inttoptr i64 %6340 to i32*
  %6345 = load i32, i32* %6344
  %6346 = add i32 %6345, %6343
  %6347 = zext i32 %6346 to i64
  store i64 %6347, i64* %RCX.i512, align 8
  %6348 = icmp ult i32 %6346, %6343
  %6349 = icmp ult i32 %6346, %6345
  %6350 = or i1 %6348, %6349
  %6351 = zext i1 %6350 to i8
  %6352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6351, i8* %6352, align 1
  %6353 = and i32 %6346, 255
  %6354 = call i32 @llvm.ctpop.i32(i32 %6353)
  %6355 = trunc i32 %6354 to i8
  %6356 = and i8 %6355, 1
  %6357 = xor i8 %6356, 1
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6357, i8* %6358, align 1
  %6359 = xor i32 %6345, %6343
  %6360 = xor i32 %6359, %6346
  %6361 = lshr i32 %6360, 4
  %6362 = trunc i32 %6361 to i8
  %6363 = and i8 %6362, 1
  %6364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6363, i8* %6364, align 1
  %6365 = icmp eq i32 %6346, 0
  %6366 = zext i1 %6365 to i8
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6366, i8* %6367, align 1
  %6368 = lshr i32 %6346, 31
  %6369 = trunc i32 %6368 to i8
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6369, i8* %6370, align 1
  %6371 = lshr i32 %6343, 31
  %6372 = lshr i32 %6345, 31
  %6373 = xor i32 %6368, %6371
  %6374 = xor i32 %6368, %6372
  %6375 = add i32 %6373, %6374
  %6376 = icmp eq i32 %6375, 2
  %6377 = zext i1 %6376 to i8
  %6378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6377, i8* %6378, align 1
  store %struct.Memory* %loadMem_463299, %struct.Memory** %MEMORY
  %loadMem_4632a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6380 = getelementptr inbounds %struct.GPR, %struct.GPR* %6379, i32 0, i32 33
  %6381 = getelementptr inbounds %struct.Reg, %struct.Reg* %6380, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %6381 to i64*
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6383 = getelementptr inbounds %struct.GPR, %struct.GPR* %6382, i32 0, i32 5
  %6384 = getelementptr inbounds %struct.Reg, %struct.Reg* %6383, i32 0, i32 0
  %ECX.i507 = bitcast %union.anon* %6384 to i32*
  %6385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6386 = getelementptr inbounds %struct.GPR, %struct.GPR* %6385, i32 0, i32 1
  %6387 = getelementptr inbounds %struct.Reg, %struct.Reg* %6386, i32 0, i32 0
  %RAX.i508 = bitcast %union.anon* %6387 to i64*
  %6388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6389 = getelementptr inbounds %struct.GPR, %struct.GPR* %6388, i32 0, i32 7
  %6390 = getelementptr inbounds %struct.Reg, %struct.Reg* %6389, i32 0, i32 0
  %RDX.i509 = bitcast %union.anon* %6390 to i64*
  %6391 = load i64, i64* %RAX.i508
  %6392 = load i64, i64* %RDX.i509
  %6393 = mul i64 %6392, 4
  %6394 = add i64 %6391, 200
  %6395 = add i64 %6394, %6393
  %6396 = load i32, i32* %ECX.i507
  %6397 = zext i32 %6396 to i64
  %6398 = load i64, i64* %PC.i506
  %6399 = add i64 %6398, 7
  store i64 %6399, i64* %PC.i506
  %6400 = inttoptr i64 %6395 to i32*
  store i32 %6396, i32* %6400
  store %struct.Memory* %loadMem_4632a0, %struct.Memory** %MEMORY
  %loadMem_4632a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6402 = getelementptr inbounds %struct.GPR, %struct.GPR* %6401, i32 0, i32 33
  %6403 = getelementptr inbounds %struct.Reg, %struct.Reg* %6402, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %6403 to i64*
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6405 = getelementptr inbounds %struct.GPR, %struct.GPR* %6404, i32 0, i32 15
  %6406 = getelementptr inbounds %struct.Reg, %struct.Reg* %6405, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %6406 to i64*
  %6407 = load i64, i64* %RBP.i505
  %6408 = sub i64 %6407, 104
  %6409 = load i64, i64* %PC.i504
  %6410 = add i64 %6409, 4
  store i64 %6410, i64* %PC.i504
  %6411 = inttoptr i64 %6408 to i32*
  %6412 = load i32, i32* %6411
  %6413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6413, align 1
  %6414 = and i32 %6412, 255
  %6415 = call i32 @llvm.ctpop.i32(i32 %6414)
  %6416 = trunc i32 %6415 to i8
  %6417 = and i8 %6416, 1
  %6418 = xor i8 %6417, 1
  %6419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6418, i8* %6419, align 1
  %6420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6420, align 1
  %6421 = icmp eq i32 %6412, 0
  %6422 = zext i1 %6421 to i8
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6422, i8* %6423, align 1
  %6424 = lshr i32 %6412, 31
  %6425 = trunc i32 %6424 to i8
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6425, i8* %6426, align 1
  %6427 = lshr i32 %6412, 31
  %6428 = xor i32 %6424, %6427
  %6429 = add i32 %6428, %6427
  %6430 = icmp eq i32 %6429, 2
  %6431 = zext i1 %6430 to i8
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6431, i8* %6432, align 1
  store %struct.Memory* %loadMem_4632a7, %struct.Memory** %MEMORY
  %loadMem_4632ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6434 = getelementptr inbounds %struct.GPR, %struct.GPR* %6433, i32 0, i32 33
  %6435 = getelementptr inbounds %struct.Reg, %struct.Reg* %6434, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %6435 to i64*
  %6436 = load i64, i64* %PC.i503
  %6437 = add i64 %6436, 35
  %6438 = load i64, i64* %PC.i503
  %6439 = add i64 %6438, 6
  %6440 = load i64, i64* %PC.i503
  %6441 = add i64 %6440, 6
  store i64 %6441, i64* %PC.i503
  %6442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6443 = load i8, i8* %6442, align 1
  %6444 = icmp eq i8 %6443, 0
  %6445 = zext i1 %6444 to i8
  store i8 %6445, i8* %BRANCH_TAKEN, align 1
  %6446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6447 = select i1 %6444, i64 %6437, i64 %6439
  store i64 %6447, i64* %6446, align 8
  store %struct.Memory* %loadMem_4632ab, %struct.Memory** %MEMORY
  %loadBr_4632ab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4632ab = icmp eq i8 %loadBr_4632ab, 1
  br i1 %cmpBr_4632ab, label %block_.L_4632ce, label %block_4632b1

block_4632b1:                                     ; preds = %block_.L_463283
  %loadMem_4632b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6449 = getelementptr inbounds %struct.GPR, %struct.GPR* %6448, i32 0, i32 33
  %6450 = getelementptr inbounds %struct.Reg, %struct.Reg* %6449, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %6450 to i64*
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6452 = getelementptr inbounds %struct.GPR, %struct.GPR* %6451, i32 0, i32 1
  %6453 = getelementptr inbounds %struct.Reg, %struct.Reg* %6452, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %6453 to i64*
  %6454 = load i64, i64* %PC.i501
  %6455 = add i64 %6454, 7
  store i64 %6455, i64* %PC.i501
  %6456 = load i32, i32* bitcast (%G_0x7afd74_type* @G_0x7afd74 to i32*)
  %6457 = zext i32 %6456 to i64
  store i64 %6457, i64* %RAX.i502, align 8
  store %struct.Memory* %loadMem_4632b1, %struct.Memory** %MEMORY
  %loadMem_4632b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6459 = getelementptr inbounds %struct.GPR, %struct.GPR* %6458, i32 0, i32 33
  %6460 = getelementptr inbounds %struct.Reg, %struct.Reg* %6459, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %6460 to i64*
  %6461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6462 = getelementptr inbounds %struct.GPR, %struct.GPR* %6461, i32 0, i32 5
  %6463 = getelementptr inbounds %struct.Reg, %struct.Reg* %6462, i32 0, i32 0
  %RCX.i499 = bitcast %union.anon* %6463 to i64*
  %6464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6465 = getelementptr inbounds %struct.GPR, %struct.GPR* %6464, i32 0, i32 15
  %6466 = getelementptr inbounds %struct.Reg, %struct.Reg* %6465, i32 0, i32 0
  %RBP.i500 = bitcast %union.anon* %6466 to i64*
  %6467 = load i64, i64* %RBP.i500
  %6468 = sub i64 %6467, 48
  %6469 = load i64, i64* %PC.i498
  %6470 = add i64 %6469, 4
  store i64 %6470, i64* %PC.i498
  %6471 = inttoptr i64 %6468 to i64*
  %6472 = load i64, i64* %6471
  store i64 %6472, i64* %RCX.i499, align 8
  store %struct.Memory* %loadMem_4632b8, %struct.Memory** %MEMORY
  %loadMem_4632bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6474 = getelementptr inbounds %struct.GPR, %struct.GPR* %6473, i32 0, i32 33
  %6475 = getelementptr inbounds %struct.Reg, %struct.Reg* %6474, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %6475 to i64*
  %6476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6477 = getelementptr inbounds %struct.GPR, %struct.GPR* %6476, i32 0, i32 7
  %6478 = getelementptr inbounds %struct.Reg, %struct.Reg* %6477, i32 0, i32 0
  %RDX.i496 = bitcast %union.anon* %6478 to i64*
  %6479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6480 = getelementptr inbounds %struct.GPR, %struct.GPR* %6479, i32 0, i32 15
  %6481 = getelementptr inbounds %struct.Reg, %struct.Reg* %6480, i32 0, i32 0
  %RBP.i497 = bitcast %union.anon* %6481 to i64*
  %6482 = load i64, i64* %RBP.i497
  %6483 = sub i64 %6482, 80
  %6484 = load i64, i64* %PC.i495
  %6485 = add i64 %6484, 4
  store i64 %6485, i64* %PC.i495
  %6486 = inttoptr i64 %6483 to i32*
  %6487 = load i32, i32* %6486
  %6488 = sext i32 %6487 to i64
  store i64 %6488, i64* %RDX.i496, align 8
  store %struct.Memory* %loadMem_4632bc, %struct.Memory** %MEMORY
  %loadMem_4632c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6490 = getelementptr inbounds %struct.GPR, %struct.GPR* %6489, i32 0, i32 33
  %6491 = getelementptr inbounds %struct.Reg, %struct.Reg* %6490, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %6491 to i64*
  %6492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6493 = getelementptr inbounds %struct.GPR, %struct.GPR* %6492, i32 0, i32 1
  %6494 = getelementptr inbounds %struct.Reg, %struct.Reg* %6493, i32 0, i32 0
  %RAX.i492 = bitcast %union.anon* %6494 to i64*
  %6495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6496 = getelementptr inbounds %struct.GPR, %struct.GPR* %6495, i32 0, i32 5
  %6497 = getelementptr inbounds %struct.Reg, %struct.Reg* %6496, i32 0, i32 0
  %RCX.i493 = bitcast %union.anon* %6497 to i64*
  %6498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6499 = getelementptr inbounds %struct.GPR, %struct.GPR* %6498, i32 0, i32 7
  %6500 = getelementptr inbounds %struct.Reg, %struct.Reg* %6499, i32 0, i32 0
  %RDX.i494 = bitcast %union.anon* %6500 to i64*
  %6501 = load i64, i64* %RAX.i492
  %6502 = load i64, i64* %RCX.i493
  %6503 = load i64, i64* %RDX.i494
  %6504 = mul i64 %6503, 4
  %6505 = add i64 %6502, 200
  %6506 = add i64 %6505, %6504
  %6507 = load i64, i64* %PC.i491
  %6508 = add i64 %6507, 7
  store i64 %6508, i64* %PC.i491
  %6509 = trunc i64 %6501 to i32
  %6510 = inttoptr i64 %6506 to i32*
  %6511 = load i32, i32* %6510
  %6512 = add i32 %6511, %6509
  %6513 = zext i32 %6512 to i64
  store i64 %6513, i64* %RAX.i492, align 8
  %6514 = icmp ult i32 %6512, %6509
  %6515 = icmp ult i32 %6512, %6511
  %6516 = or i1 %6514, %6515
  %6517 = zext i1 %6516 to i8
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6517, i8* %6518, align 1
  %6519 = and i32 %6512, 255
  %6520 = call i32 @llvm.ctpop.i32(i32 %6519)
  %6521 = trunc i32 %6520 to i8
  %6522 = and i8 %6521, 1
  %6523 = xor i8 %6522, 1
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6523, i8* %6524, align 1
  %6525 = xor i32 %6511, %6509
  %6526 = xor i32 %6525, %6512
  %6527 = lshr i32 %6526, 4
  %6528 = trunc i32 %6527 to i8
  %6529 = and i8 %6528, 1
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6529, i8* %6530, align 1
  %6531 = icmp eq i32 %6512, 0
  %6532 = zext i1 %6531 to i8
  %6533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6532, i8* %6533, align 1
  %6534 = lshr i32 %6512, 31
  %6535 = trunc i32 %6534 to i8
  %6536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6535, i8* %6536, align 1
  %6537 = lshr i32 %6509, 31
  %6538 = lshr i32 %6511, 31
  %6539 = xor i32 %6534, %6537
  %6540 = xor i32 %6534, %6538
  %6541 = add i32 %6539, %6540
  %6542 = icmp eq i32 %6541, 2
  %6543 = zext i1 %6542 to i8
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6543, i8* %6544, align 1
  store %struct.Memory* %loadMem_4632c0, %struct.Memory** %MEMORY
  %loadMem_4632c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6546 = getelementptr inbounds %struct.GPR, %struct.GPR* %6545, i32 0, i32 33
  %6547 = getelementptr inbounds %struct.Reg, %struct.Reg* %6546, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %6547 to i64*
  %6548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6549 = getelementptr inbounds %struct.GPR, %struct.GPR* %6548, i32 0, i32 1
  %6550 = getelementptr inbounds %struct.Reg, %struct.Reg* %6549, i32 0, i32 0
  %EAX.i488 = bitcast %union.anon* %6550 to i32*
  %6551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6552 = getelementptr inbounds %struct.GPR, %struct.GPR* %6551, i32 0, i32 5
  %6553 = getelementptr inbounds %struct.Reg, %struct.Reg* %6552, i32 0, i32 0
  %RCX.i489 = bitcast %union.anon* %6553 to i64*
  %6554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6555 = getelementptr inbounds %struct.GPR, %struct.GPR* %6554, i32 0, i32 7
  %6556 = getelementptr inbounds %struct.Reg, %struct.Reg* %6555, i32 0, i32 0
  %RDX.i490 = bitcast %union.anon* %6556 to i64*
  %6557 = load i64, i64* %RCX.i489
  %6558 = load i64, i64* %RDX.i490
  %6559 = mul i64 %6558, 4
  %6560 = add i64 %6557, 200
  %6561 = add i64 %6560, %6559
  %6562 = load i32, i32* %EAX.i488
  %6563 = zext i32 %6562 to i64
  %6564 = load i64, i64* %PC.i487
  %6565 = add i64 %6564, 7
  store i64 %6565, i64* %PC.i487
  %6566 = inttoptr i64 %6561 to i32*
  store i32 %6562, i32* %6566
  store %struct.Memory* %loadMem_4632c7, %struct.Memory** %MEMORY
  br label %block_.L_4632ce

block_.L_4632ce:                                  ; preds = %block_4632b1, %block_.L_463283
  %loadMem_4632ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %6567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6568 = getelementptr inbounds %struct.GPR, %struct.GPR* %6567, i32 0, i32 33
  %6569 = getelementptr inbounds %struct.Reg, %struct.Reg* %6568, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %6569 to i64*
  %6570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6571 = getelementptr inbounds %struct.GPR, %struct.GPR* %6570, i32 0, i32 15
  %6572 = getelementptr inbounds %struct.Reg, %struct.Reg* %6571, i32 0, i32 0
  %RBP.i486 = bitcast %union.anon* %6572 to i64*
  %6573 = load i64, i64* %RBP.i486
  %6574 = sub i64 %6573, 120
  %6575 = load i64, i64* %PC.i485
  %6576 = add i64 %6575, 4
  store i64 %6576, i64* %PC.i485
  %6577 = inttoptr i64 %6574 to i32*
  %6578 = load i32, i32* %6577
  %6579 = sub i32 %6578, 5
  %6580 = icmp ult i32 %6578, 5
  %6581 = zext i1 %6580 to i8
  %6582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6581, i8* %6582, align 1
  %6583 = and i32 %6579, 255
  %6584 = call i32 @llvm.ctpop.i32(i32 %6583)
  %6585 = trunc i32 %6584 to i8
  %6586 = and i8 %6585, 1
  %6587 = xor i8 %6586, 1
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6587, i8* %6588, align 1
  %6589 = xor i32 %6578, 5
  %6590 = xor i32 %6589, %6579
  %6591 = lshr i32 %6590, 4
  %6592 = trunc i32 %6591 to i8
  %6593 = and i8 %6592, 1
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6593, i8* %6594, align 1
  %6595 = icmp eq i32 %6579, 0
  %6596 = zext i1 %6595 to i8
  %6597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6596, i8* %6597, align 1
  %6598 = lshr i32 %6579, 31
  %6599 = trunc i32 %6598 to i8
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6599, i8* %6600, align 1
  %6601 = lshr i32 %6578, 31
  %6602 = xor i32 %6598, %6601
  %6603 = add i32 %6602, %6601
  %6604 = icmp eq i32 %6603, 2
  %6605 = zext i1 %6604 to i8
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6605, i8* %6606, align 1
  store %struct.Memory* %loadMem_4632ce, %struct.Memory** %MEMORY
  %loadMem_4632d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6608 = getelementptr inbounds %struct.GPR, %struct.GPR* %6607, i32 0, i32 33
  %6609 = getelementptr inbounds %struct.Reg, %struct.Reg* %6608, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %6609 to i64*
  %6610 = load i64, i64* %PC.i484
  %6611 = add i64 %6610, 44
  %6612 = load i64, i64* %PC.i484
  %6613 = add i64 %6612, 6
  %6614 = load i64, i64* %PC.i484
  %6615 = add i64 %6614, 6
  store i64 %6615, i64* %PC.i484
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6617 = load i8, i8* %6616, align 1
  %6618 = icmp eq i8 %6617, 0
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6620 = load i8, i8* %6619, align 1
  %6621 = icmp ne i8 %6620, 0
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6623 = load i8, i8* %6622, align 1
  %6624 = icmp ne i8 %6623, 0
  %6625 = xor i1 %6621, %6624
  %6626 = xor i1 %6625, true
  %6627 = and i1 %6618, %6626
  %6628 = zext i1 %6627 to i8
  store i8 %6628, i8* %BRANCH_TAKEN, align 1
  %6629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6630 = select i1 %6627, i64 %6611, i64 %6613
  store i64 %6630, i64* %6629, align 8
  store %struct.Memory* %loadMem_4632d2, %struct.Memory** %MEMORY
  %loadBr_4632d2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4632d2 = icmp eq i8 %loadBr_4632d2, 1
  br i1 %cmpBr_4632d2, label %block_.L_4632fe, label %block_4632d8

block_4632d8:                                     ; preds = %block_.L_4632ce
  %loadMem_4632d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6632 = getelementptr inbounds %struct.GPR, %struct.GPR* %6631, i32 0, i32 33
  %6633 = getelementptr inbounds %struct.Reg, %struct.Reg* %6632, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %6633 to i64*
  %6634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6635 = getelementptr inbounds %struct.GPR, %struct.GPR* %6634, i32 0, i32 1
  %6636 = getelementptr inbounds %struct.Reg, %struct.Reg* %6635, i32 0, i32 0
  %RAX.i482 = bitcast %union.anon* %6636 to i64*
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6638 = getelementptr inbounds %struct.GPR, %struct.GPR* %6637, i32 0, i32 15
  %6639 = getelementptr inbounds %struct.Reg, %struct.Reg* %6638, i32 0, i32 0
  %RBP.i483 = bitcast %union.anon* %6639 to i64*
  %6640 = load i64, i64* %RBP.i483
  %6641 = sub i64 %6640, 120
  %6642 = load i64, i64* %PC.i481
  %6643 = add i64 %6642, 4
  store i64 %6643, i64* %PC.i481
  %6644 = inttoptr i64 %6641 to i32*
  %6645 = load i32, i32* %6644
  %6646 = sext i32 %6645 to i64
  store i64 %6646, i64* %RAX.i482, align 8
  store %struct.Memory* %loadMem_4632d8, %struct.Memory** %MEMORY
  %loadMem_4632dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6648 = getelementptr inbounds %struct.GPR, %struct.GPR* %6647, i32 0, i32 33
  %6649 = getelementptr inbounds %struct.Reg, %struct.Reg* %6648, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %6649 to i64*
  %6650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6651 = getelementptr inbounds %struct.GPR, %struct.GPR* %6650, i32 0, i32 1
  %6652 = getelementptr inbounds %struct.Reg, %struct.Reg* %6651, i32 0, i32 0
  %RAX.i479 = bitcast %union.anon* %6652 to i64*
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6654 = getelementptr inbounds %struct.GPR, %struct.GPR* %6653, i32 0, i32 5
  %6655 = getelementptr inbounds %struct.Reg, %struct.Reg* %6654, i32 0, i32 0
  %RCX.i480 = bitcast %union.anon* %6655 to i64*
  %6656 = load i64, i64* %RAX.i479
  %6657 = mul i64 %6656, 4
  %6658 = add i64 %6657, 8060288
  %6659 = load i64, i64* %PC.i478
  %6660 = add i64 %6659, 7
  store i64 %6660, i64* %PC.i478
  %6661 = inttoptr i64 %6658 to i32*
  %6662 = load i32, i32* %6661
  %6663 = zext i32 %6662 to i64
  store i64 %6663, i64* %RCX.i480, align 8
  store %struct.Memory* %loadMem_4632dc, %struct.Memory** %MEMORY
  %loadMem_4632e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6665 = getelementptr inbounds %struct.GPR, %struct.GPR* %6664, i32 0, i32 33
  %6666 = getelementptr inbounds %struct.Reg, %struct.Reg* %6665, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %6666 to i64*
  %6667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6668 = getelementptr inbounds %struct.GPR, %struct.GPR* %6667, i32 0, i32 1
  %6669 = getelementptr inbounds %struct.Reg, %struct.Reg* %6668, i32 0, i32 0
  %RAX.i476 = bitcast %union.anon* %6669 to i64*
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6671 = getelementptr inbounds %struct.GPR, %struct.GPR* %6670, i32 0, i32 15
  %6672 = getelementptr inbounds %struct.Reg, %struct.Reg* %6671, i32 0, i32 0
  %RBP.i477 = bitcast %union.anon* %6672 to i64*
  %6673 = load i64, i64* %RBP.i477
  %6674 = sub i64 %6673, 48
  %6675 = load i64, i64* %PC.i475
  %6676 = add i64 %6675, 4
  store i64 %6676, i64* %PC.i475
  %6677 = inttoptr i64 %6674 to i64*
  %6678 = load i64, i64* %6677
  store i64 %6678, i64* %RAX.i476, align 8
  store %struct.Memory* %loadMem_4632e3, %struct.Memory** %MEMORY
  %loadMem_4632e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6680 = getelementptr inbounds %struct.GPR, %struct.GPR* %6679, i32 0, i32 33
  %6681 = getelementptr inbounds %struct.Reg, %struct.Reg* %6680, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %6681 to i64*
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6683 = getelementptr inbounds %struct.GPR, %struct.GPR* %6682, i32 0, i32 7
  %6684 = getelementptr inbounds %struct.Reg, %struct.Reg* %6683, i32 0, i32 0
  %RDX.i473 = bitcast %union.anon* %6684 to i64*
  %6685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6686 = getelementptr inbounds %struct.GPR, %struct.GPR* %6685, i32 0, i32 15
  %6687 = getelementptr inbounds %struct.Reg, %struct.Reg* %6686, i32 0, i32 0
  %RBP.i474 = bitcast %union.anon* %6687 to i64*
  %6688 = load i64, i64* %RBP.i474
  %6689 = sub i64 %6688, 80
  %6690 = load i64, i64* %PC.i472
  %6691 = add i64 %6690, 4
  store i64 %6691, i64* %PC.i472
  %6692 = inttoptr i64 %6689 to i32*
  %6693 = load i32, i32* %6692
  %6694 = sext i32 %6693 to i64
  store i64 %6694, i64* %RDX.i473, align 8
  store %struct.Memory* %loadMem_4632e7, %struct.Memory** %MEMORY
  %loadMem_4632eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6696 = getelementptr inbounds %struct.GPR, %struct.GPR* %6695, i32 0, i32 33
  %6697 = getelementptr inbounds %struct.Reg, %struct.Reg* %6696, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %6697 to i64*
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6699 = getelementptr inbounds %struct.GPR, %struct.GPR* %6698, i32 0, i32 1
  %6700 = getelementptr inbounds %struct.Reg, %struct.Reg* %6699, i32 0, i32 0
  %RAX.i469 = bitcast %union.anon* %6700 to i64*
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6702 = getelementptr inbounds %struct.GPR, %struct.GPR* %6701, i32 0, i32 5
  %6703 = getelementptr inbounds %struct.Reg, %struct.Reg* %6702, i32 0, i32 0
  %RCX.i470 = bitcast %union.anon* %6703 to i64*
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6705 = getelementptr inbounds %struct.GPR, %struct.GPR* %6704, i32 0, i32 7
  %6706 = getelementptr inbounds %struct.Reg, %struct.Reg* %6705, i32 0, i32 0
  %RDX.i471 = bitcast %union.anon* %6706 to i64*
  %6707 = load i64, i64* %RCX.i470
  %6708 = load i64, i64* %RAX.i469
  %6709 = load i64, i64* %RDX.i471
  %6710 = mul i64 %6709, 4
  %6711 = add i64 %6708, 200
  %6712 = add i64 %6711, %6710
  %6713 = load i64, i64* %PC.i468
  %6714 = add i64 %6713, 7
  store i64 %6714, i64* %PC.i468
  %6715 = trunc i64 %6707 to i32
  %6716 = inttoptr i64 %6712 to i32*
  %6717 = load i32, i32* %6716
  %6718 = add i32 %6717, %6715
  %6719 = zext i32 %6718 to i64
  store i64 %6719, i64* %RCX.i470, align 8
  %6720 = icmp ult i32 %6718, %6715
  %6721 = icmp ult i32 %6718, %6717
  %6722 = or i1 %6720, %6721
  %6723 = zext i1 %6722 to i8
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6723, i8* %6724, align 1
  %6725 = and i32 %6718, 255
  %6726 = call i32 @llvm.ctpop.i32(i32 %6725)
  %6727 = trunc i32 %6726 to i8
  %6728 = and i8 %6727, 1
  %6729 = xor i8 %6728, 1
  %6730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6729, i8* %6730, align 1
  %6731 = xor i32 %6717, %6715
  %6732 = xor i32 %6731, %6718
  %6733 = lshr i32 %6732, 4
  %6734 = trunc i32 %6733 to i8
  %6735 = and i8 %6734, 1
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6735, i8* %6736, align 1
  %6737 = icmp eq i32 %6718, 0
  %6738 = zext i1 %6737 to i8
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6738, i8* %6739, align 1
  %6740 = lshr i32 %6718, 31
  %6741 = trunc i32 %6740 to i8
  %6742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6741, i8* %6742, align 1
  %6743 = lshr i32 %6715, 31
  %6744 = lshr i32 %6717, 31
  %6745 = xor i32 %6740, %6743
  %6746 = xor i32 %6740, %6744
  %6747 = add i32 %6745, %6746
  %6748 = icmp eq i32 %6747, 2
  %6749 = zext i1 %6748 to i8
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6749, i8* %6750, align 1
  store %struct.Memory* %loadMem_4632eb, %struct.Memory** %MEMORY
  %loadMem_4632f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6752 = getelementptr inbounds %struct.GPR, %struct.GPR* %6751, i32 0, i32 33
  %6753 = getelementptr inbounds %struct.Reg, %struct.Reg* %6752, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %6753 to i64*
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6755 = getelementptr inbounds %struct.GPR, %struct.GPR* %6754, i32 0, i32 5
  %6756 = getelementptr inbounds %struct.Reg, %struct.Reg* %6755, i32 0, i32 0
  %ECX.i465 = bitcast %union.anon* %6756 to i32*
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6758 = getelementptr inbounds %struct.GPR, %struct.GPR* %6757, i32 0, i32 1
  %6759 = getelementptr inbounds %struct.Reg, %struct.Reg* %6758, i32 0, i32 0
  %RAX.i466 = bitcast %union.anon* %6759 to i64*
  %6760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6761 = getelementptr inbounds %struct.GPR, %struct.GPR* %6760, i32 0, i32 7
  %6762 = getelementptr inbounds %struct.Reg, %struct.Reg* %6761, i32 0, i32 0
  %RDX.i467 = bitcast %union.anon* %6762 to i64*
  %6763 = load i64, i64* %RAX.i466
  %6764 = load i64, i64* %RDX.i467
  %6765 = mul i64 %6764, 4
  %6766 = add i64 %6763, 200
  %6767 = add i64 %6766, %6765
  %6768 = load i32, i32* %ECX.i465
  %6769 = zext i32 %6768 to i64
  %6770 = load i64, i64* %PC.i464
  %6771 = add i64 %6770, 7
  store i64 %6771, i64* %PC.i464
  %6772 = inttoptr i64 %6767 to i32*
  store i32 %6768, i32* %6772
  store %struct.Memory* %loadMem_4632f2, %struct.Memory** %MEMORY
  %loadMem_4632f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6774 = getelementptr inbounds %struct.GPR, %struct.GPR* %6773, i32 0, i32 33
  %6775 = getelementptr inbounds %struct.Reg, %struct.Reg* %6774, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %6775 to i64*
  %6776 = load i64, i64* %PC.i463
  %6777 = add i64 %6776, 34
  %6778 = load i64, i64* %PC.i463
  %6779 = add i64 %6778, 5
  store i64 %6779, i64* %PC.i463
  %6780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6777, i64* %6780, align 8
  store %struct.Memory* %loadMem_4632f9, %struct.Memory** %MEMORY
  br label %block_.L_46331b

block_.L_4632fe:                                  ; preds = %block_.L_4632ce
  %loadMem_4632fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6782 = getelementptr inbounds %struct.GPR, %struct.GPR* %6781, i32 0, i32 33
  %6783 = getelementptr inbounds %struct.Reg, %struct.Reg* %6782, i32 0, i32 0
  %PC.i461 = bitcast %union.anon* %6783 to i64*
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6785 = getelementptr inbounds %struct.GPR, %struct.GPR* %6784, i32 0, i32 1
  %6786 = getelementptr inbounds %struct.Reg, %struct.Reg* %6785, i32 0, i32 0
  %RAX.i462 = bitcast %union.anon* %6786 to i64*
  %6787 = load i64, i64* %PC.i461
  %6788 = add i64 %6787, 7
  store i64 %6788, i64* %PC.i461
  %6789 = load i32, i32* bitcast (%G_0x7afd94_type* @G_0x7afd94 to i32*)
  %6790 = zext i32 %6789 to i64
  store i64 %6790, i64* %RAX.i462, align 8
  store %struct.Memory* %loadMem_4632fe, %struct.Memory** %MEMORY
  %loadMem_463305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6792 = getelementptr inbounds %struct.GPR, %struct.GPR* %6791, i32 0, i32 33
  %6793 = getelementptr inbounds %struct.Reg, %struct.Reg* %6792, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %6793 to i64*
  %6794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6795 = getelementptr inbounds %struct.GPR, %struct.GPR* %6794, i32 0, i32 5
  %6796 = getelementptr inbounds %struct.Reg, %struct.Reg* %6795, i32 0, i32 0
  %RCX.i459 = bitcast %union.anon* %6796 to i64*
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6798 = getelementptr inbounds %struct.GPR, %struct.GPR* %6797, i32 0, i32 15
  %6799 = getelementptr inbounds %struct.Reg, %struct.Reg* %6798, i32 0, i32 0
  %RBP.i460 = bitcast %union.anon* %6799 to i64*
  %6800 = load i64, i64* %RBP.i460
  %6801 = sub i64 %6800, 48
  %6802 = load i64, i64* %PC.i458
  %6803 = add i64 %6802, 4
  store i64 %6803, i64* %PC.i458
  %6804 = inttoptr i64 %6801 to i64*
  %6805 = load i64, i64* %6804
  store i64 %6805, i64* %RCX.i459, align 8
  store %struct.Memory* %loadMem_463305, %struct.Memory** %MEMORY
  %loadMem_463309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6807 = getelementptr inbounds %struct.GPR, %struct.GPR* %6806, i32 0, i32 33
  %6808 = getelementptr inbounds %struct.Reg, %struct.Reg* %6807, i32 0, i32 0
  %PC.i455 = bitcast %union.anon* %6808 to i64*
  %6809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6810 = getelementptr inbounds %struct.GPR, %struct.GPR* %6809, i32 0, i32 7
  %6811 = getelementptr inbounds %struct.Reg, %struct.Reg* %6810, i32 0, i32 0
  %RDX.i456 = bitcast %union.anon* %6811 to i64*
  %6812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6813 = getelementptr inbounds %struct.GPR, %struct.GPR* %6812, i32 0, i32 15
  %6814 = getelementptr inbounds %struct.Reg, %struct.Reg* %6813, i32 0, i32 0
  %RBP.i457 = bitcast %union.anon* %6814 to i64*
  %6815 = load i64, i64* %RBP.i457
  %6816 = sub i64 %6815, 80
  %6817 = load i64, i64* %PC.i455
  %6818 = add i64 %6817, 4
  store i64 %6818, i64* %PC.i455
  %6819 = inttoptr i64 %6816 to i32*
  %6820 = load i32, i32* %6819
  %6821 = sext i32 %6820 to i64
  store i64 %6821, i64* %RDX.i456, align 8
  store %struct.Memory* %loadMem_463309, %struct.Memory** %MEMORY
  %loadMem_46330d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6823 = getelementptr inbounds %struct.GPR, %struct.GPR* %6822, i32 0, i32 33
  %6824 = getelementptr inbounds %struct.Reg, %struct.Reg* %6823, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %6824 to i64*
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6826 = getelementptr inbounds %struct.GPR, %struct.GPR* %6825, i32 0, i32 1
  %6827 = getelementptr inbounds %struct.Reg, %struct.Reg* %6826, i32 0, i32 0
  %RAX.i452 = bitcast %union.anon* %6827 to i64*
  %6828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6829 = getelementptr inbounds %struct.GPR, %struct.GPR* %6828, i32 0, i32 5
  %6830 = getelementptr inbounds %struct.Reg, %struct.Reg* %6829, i32 0, i32 0
  %RCX.i453 = bitcast %union.anon* %6830 to i64*
  %6831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6832 = getelementptr inbounds %struct.GPR, %struct.GPR* %6831, i32 0, i32 7
  %6833 = getelementptr inbounds %struct.Reg, %struct.Reg* %6832, i32 0, i32 0
  %RDX.i454 = bitcast %union.anon* %6833 to i64*
  %6834 = load i64, i64* %RAX.i452
  %6835 = load i64, i64* %RCX.i453
  %6836 = load i64, i64* %RDX.i454
  %6837 = mul i64 %6836, 4
  %6838 = add i64 %6835, 200
  %6839 = add i64 %6838, %6837
  %6840 = load i64, i64* %PC.i451
  %6841 = add i64 %6840, 7
  store i64 %6841, i64* %PC.i451
  %6842 = trunc i64 %6834 to i32
  %6843 = inttoptr i64 %6839 to i32*
  %6844 = load i32, i32* %6843
  %6845 = add i32 %6844, %6842
  %6846 = zext i32 %6845 to i64
  store i64 %6846, i64* %RAX.i452, align 8
  %6847 = icmp ult i32 %6845, %6842
  %6848 = icmp ult i32 %6845, %6844
  %6849 = or i1 %6847, %6848
  %6850 = zext i1 %6849 to i8
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6850, i8* %6851, align 1
  %6852 = and i32 %6845, 255
  %6853 = call i32 @llvm.ctpop.i32(i32 %6852)
  %6854 = trunc i32 %6853 to i8
  %6855 = and i8 %6854, 1
  %6856 = xor i8 %6855, 1
  %6857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6856, i8* %6857, align 1
  %6858 = xor i32 %6844, %6842
  %6859 = xor i32 %6858, %6845
  %6860 = lshr i32 %6859, 4
  %6861 = trunc i32 %6860 to i8
  %6862 = and i8 %6861, 1
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6862, i8* %6863, align 1
  %6864 = icmp eq i32 %6845, 0
  %6865 = zext i1 %6864 to i8
  %6866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6865, i8* %6866, align 1
  %6867 = lshr i32 %6845, 31
  %6868 = trunc i32 %6867 to i8
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6868, i8* %6869, align 1
  %6870 = lshr i32 %6842, 31
  %6871 = lshr i32 %6844, 31
  %6872 = xor i32 %6867, %6870
  %6873 = xor i32 %6867, %6871
  %6874 = add i32 %6872, %6873
  %6875 = icmp eq i32 %6874, 2
  %6876 = zext i1 %6875 to i8
  %6877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6876, i8* %6877, align 1
  store %struct.Memory* %loadMem_46330d, %struct.Memory** %MEMORY
  %loadMem_463314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6879 = getelementptr inbounds %struct.GPR, %struct.GPR* %6878, i32 0, i32 33
  %6880 = getelementptr inbounds %struct.Reg, %struct.Reg* %6879, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %6880 to i64*
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6882 = getelementptr inbounds %struct.GPR, %struct.GPR* %6881, i32 0, i32 1
  %6883 = getelementptr inbounds %struct.Reg, %struct.Reg* %6882, i32 0, i32 0
  %EAX.i448 = bitcast %union.anon* %6883 to i32*
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6885 = getelementptr inbounds %struct.GPR, %struct.GPR* %6884, i32 0, i32 5
  %6886 = getelementptr inbounds %struct.Reg, %struct.Reg* %6885, i32 0, i32 0
  %RCX.i449 = bitcast %union.anon* %6886 to i64*
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6888 = getelementptr inbounds %struct.GPR, %struct.GPR* %6887, i32 0, i32 7
  %6889 = getelementptr inbounds %struct.Reg, %struct.Reg* %6888, i32 0, i32 0
  %RDX.i450 = bitcast %union.anon* %6889 to i64*
  %6890 = load i64, i64* %RCX.i449
  %6891 = load i64, i64* %RDX.i450
  %6892 = mul i64 %6891, 4
  %6893 = add i64 %6890, 200
  %6894 = add i64 %6893, %6892
  %6895 = load i32, i32* %EAX.i448
  %6896 = zext i32 %6895 to i64
  %6897 = load i64, i64* %PC.i447
  %6898 = add i64 %6897, 7
  store i64 %6898, i64* %PC.i447
  %6899 = inttoptr i64 %6894 to i32*
  store i32 %6895, i32* %6899
  store %struct.Memory* %loadMem_463314, %struct.Memory** %MEMORY
  br label %block_.L_46331b

block_.L_46331b:                                  ; preds = %block_.L_4632fe, %block_4632d8
  %loadMem_46331b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6901 = getelementptr inbounds %struct.GPR, %struct.GPR* %6900, i32 0, i32 33
  %6902 = getelementptr inbounds %struct.Reg, %struct.Reg* %6901, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %6902 to i64*
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6904 = getelementptr inbounds %struct.GPR, %struct.GPR* %6903, i32 0, i32 15
  %6905 = getelementptr inbounds %struct.Reg, %struct.Reg* %6904, i32 0, i32 0
  %RBP.i446 = bitcast %union.anon* %6905 to i64*
  %6906 = load i64, i64* %RBP.i446
  %6907 = sub i64 %6906, 128
  %6908 = load i64, i64* %PC.i445
  %6909 = add i64 %6908, 4
  store i64 %6909, i64* %PC.i445
  %6910 = inttoptr i64 %6907 to i32*
  %6911 = load i32, i32* %6910
  %6912 = sub i32 %6911, 5
  %6913 = icmp ult i32 %6911, 5
  %6914 = zext i1 %6913 to i8
  %6915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6914, i8* %6915, align 1
  %6916 = and i32 %6912, 255
  %6917 = call i32 @llvm.ctpop.i32(i32 %6916)
  %6918 = trunc i32 %6917 to i8
  %6919 = and i8 %6918, 1
  %6920 = xor i8 %6919, 1
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6920, i8* %6921, align 1
  %6922 = xor i32 %6911, 5
  %6923 = xor i32 %6922, %6912
  %6924 = lshr i32 %6923, 4
  %6925 = trunc i32 %6924 to i8
  %6926 = and i8 %6925, 1
  %6927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6926, i8* %6927, align 1
  %6928 = icmp eq i32 %6912, 0
  %6929 = zext i1 %6928 to i8
  %6930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6929, i8* %6930, align 1
  %6931 = lshr i32 %6912, 31
  %6932 = trunc i32 %6931 to i8
  %6933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6932, i8* %6933, align 1
  %6934 = lshr i32 %6911, 31
  %6935 = xor i32 %6931, %6934
  %6936 = add i32 %6935, %6934
  %6937 = icmp eq i32 %6936, 2
  %6938 = zext i1 %6937 to i8
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6938, i8* %6939, align 1
  store %struct.Memory* %loadMem_46331b, %struct.Memory** %MEMORY
  %loadMem_46331f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6941 = getelementptr inbounds %struct.GPR, %struct.GPR* %6940, i32 0, i32 33
  %6942 = getelementptr inbounds %struct.Reg, %struct.Reg* %6941, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %6942 to i64*
  %6943 = load i64, i64* %PC.i444
  %6944 = add i64 %6943, 44
  %6945 = load i64, i64* %PC.i444
  %6946 = add i64 %6945, 6
  %6947 = load i64, i64* %PC.i444
  %6948 = add i64 %6947, 6
  store i64 %6948, i64* %PC.i444
  %6949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6950 = load i8, i8* %6949, align 1
  %6951 = icmp eq i8 %6950, 0
  %6952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6953 = load i8, i8* %6952, align 1
  %6954 = icmp ne i8 %6953, 0
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6956 = load i8, i8* %6955, align 1
  %6957 = icmp ne i8 %6956, 0
  %6958 = xor i1 %6954, %6957
  %6959 = xor i1 %6958, true
  %6960 = and i1 %6951, %6959
  %6961 = zext i1 %6960 to i8
  store i8 %6961, i8* %BRANCH_TAKEN, align 1
  %6962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6963 = select i1 %6960, i64 %6944, i64 %6946
  store i64 %6963, i64* %6962, align 8
  store %struct.Memory* %loadMem_46331f, %struct.Memory** %MEMORY
  %loadBr_46331f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46331f = icmp eq i8 %loadBr_46331f, 1
  br i1 %cmpBr_46331f, label %block_.L_46334b, label %block_463325

block_463325:                                     ; preds = %block_.L_46331b
  %loadMem_463325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6965 = getelementptr inbounds %struct.GPR, %struct.GPR* %6964, i32 0, i32 33
  %6966 = getelementptr inbounds %struct.Reg, %struct.Reg* %6965, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %6966 to i64*
  %6967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6968 = getelementptr inbounds %struct.GPR, %struct.GPR* %6967, i32 0, i32 1
  %6969 = getelementptr inbounds %struct.Reg, %struct.Reg* %6968, i32 0, i32 0
  %RAX.i442 = bitcast %union.anon* %6969 to i64*
  %6970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6971 = getelementptr inbounds %struct.GPR, %struct.GPR* %6970, i32 0, i32 15
  %6972 = getelementptr inbounds %struct.Reg, %struct.Reg* %6971, i32 0, i32 0
  %RBP.i443 = bitcast %union.anon* %6972 to i64*
  %6973 = load i64, i64* %RBP.i443
  %6974 = sub i64 %6973, 128
  %6975 = load i64, i64* %PC.i441
  %6976 = add i64 %6975, 4
  store i64 %6976, i64* %PC.i441
  %6977 = inttoptr i64 %6974 to i32*
  %6978 = load i32, i32* %6977
  %6979 = sext i32 %6978 to i64
  store i64 %6979, i64* %RAX.i442, align 8
  store %struct.Memory* %loadMem_463325, %struct.Memory** %MEMORY
  %loadMem_463329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 33
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %6982 to i64*
  %6983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6984 = getelementptr inbounds %struct.GPR, %struct.GPR* %6983, i32 0, i32 1
  %6985 = getelementptr inbounds %struct.Reg, %struct.Reg* %6984, i32 0, i32 0
  %RAX.i439 = bitcast %union.anon* %6985 to i64*
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6987 = getelementptr inbounds %struct.GPR, %struct.GPR* %6986, i32 0, i32 5
  %6988 = getelementptr inbounds %struct.Reg, %struct.Reg* %6987, i32 0, i32 0
  %RCX.i440 = bitcast %union.anon* %6988 to i64*
  %6989 = load i64, i64* %RAX.i439
  %6990 = mul i64 %6989, 4
  %6991 = add i64 %6990, 8060320
  %6992 = load i64, i64* %PC.i438
  %6993 = add i64 %6992, 7
  store i64 %6993, i64* %PC.i438
  %6994 = inttoptr i64 %6991 to i32*
  %6995 = load i32, i32* %6994
  %6996 = zext i32 %6995 to i64
  store i64 %6996, i64* %RCX.i440, align 8
  store %struct.Memory* %loadMem_463329, %struct.Memory** %MEMORY
  %loadMem_463330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6998 = getelementptr inbounds %struct.GPR, %struct.GPR* %6997, i32 0, i32 33
  %6999 = getelementptr inbounds %struct.Reg, %struct.Reg* %6998, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %6999 to i64*
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7001 = getelementptr inbounds %struct.GPR, %struct.GPR* %7000, i32 0, i32 1
  %7002 = getelementptr inbounds %struct.Reg, %struct.Reg* %7001, i32 0, i32 0
  %RAX.i436 = bitcast %union.anon* %7002 to i64*
  %7003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7004 = getelementptr inbounds %struct.GPR, %struct.GPR* %7003, i32 0, i32 15
  %7005 = getelementptr inbounds %struct.Reg, %struct.Reg* %7004, i32 0, i32 0
  %RBP.i437 = bitcast %union.anon* %7005 to i64*
  %7006 = load i64, i64* %RBP.i437
  %7007 = sub i64 %7006, 48
  %7008 = load i64, i64* %PC.i435
  %7009 = add i64 %7008, 4
  store i64 %7009, i64* %PC.i435
  %7010 = inttoptr i64 %7007 to i64*
  %7011 = load i64, i64* %7010
  store i64 %7011, i64* %RAX.i436, align 8
  store %struct.Memory* %loadMem_463330, %struct.Memory** %MEMORY
  %loadMem_463334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7013 = getelementptr inbounds %struct.GPR, %struct.GPR* %7012, i32 0, i32 33
  %7014 = getelementptr inbounds %struct.Reg, %struct.Reg* %7013, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %7014 to i64*
  %7015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7016 = getelementptr inbounds %struct.GPR, %struct.GPR* %7015, i32 0, i32 7
  %7017 = getelementptr inbounds %struct.Reg, %struct.Reg* %7016, i32 0, i32 0
  %RDX.i433 = bitcast %union.anon* %7017 to i64*
  %7018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7019 = getelementptr inbounds %struct.GPR, %struct.GPR* %7018, i32 0, i32 15
  %7020 = getelementptr inbounds %struct.Reg, %struct.Reg* %7019, i32 0, i32 0
  %RBP.i434 = bitcast %union.anon* %7020 to i64*
  %7021 = load i64, i64* %RBP.i434
  %7022 = sub i64 %7021, 80
  %7023 = load i64, i64* %PC.i432
  %7024 = add i64 %7023, 4
  store i64 %7024, i64* %PC.i432
  %7025 = inttoptr i64 %7022 to i32*
  %7026 = load i32, i32* %7025
  %7027 = sext i32 %7026 to i64
  store i64 %7027, i64* %RDX.i433, align 8
  store %struct.Memory* %loadMem_463334, %struct.Memory** %MEMORY
  %loadMem_463338 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7029 = getelementptr inbounds %struct.GPR, %struct.GPR* %7028, i32 0, i32 33
  %7030 = getelementptr inbounds %struct.Reg, %struct.Reg* %7029, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %7030 to i64*
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7032 = getelementptr inbounds %struct.GPR, %struct.GPR* %7031, i32 0, i32 1
  %7033 = getelementptr inbounds %struct.Reg, %struct.Reg* %7032, i32 0, i32 0
  %RAX.i429 = bitcast %union.anon* %7033 to i64*
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7035 = getelementptr inbounds %struct.GPR, %struct.GPR* %7034, i32 0, i32 5
  %7036 = getelementptr inbounds %struct.Reg, %struct.Reg* %7035, i32 0, i32 0
  %RCX.i430 = bitcast %union.anon* %7036 to i64*
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7038 = getelementptr inbounds %struct.GPR, %struct.GPR* %7037, i32 0, i32 7
  %7039 = getelementptr inbounds %struct.Reg, %struct.Reg* %7038, i32 0, i32 0
  %RDX.i431 = bitcast %union.anon* %7039 to i64*
  %7040 = load i64, i64* %RCX.i430
  %7041 = load i64, i64* %RAX.i429
  %7042 = load i64, i64* %RDX.i431
  %7043 = mul i64 %7042, 4
  %7044 = add i64 %7041, 200
  %7045 = add i64 %7044, %7043
  %7046 = load i64, i64* %PC.i428
  %7047 = add i64 %7046, 7
  store i64 %7047, i64* %PC.i428
  %7048 = trunc i64 %7040 to i32
  %7049 = inttoptr i64 %7045 to i32*
  %7050 = load i32, i32* %7049
  %7051 = add i32 %7050, %7048
  %7052 = zext i32 %7051 to i64
  store i64 %7052, i64* %RCX.i430, align 8
  %7053 = icmp ult i32 %7051, %7048
  %7054 = icmp ult i32 %7051, %7050
  %7055 = or i1 %7053, %7054
  %7056 = zext i1 %7055 to i8
  %7057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7056, i8* %7057, align 1
  %7058 = and i32 %7051, 255
  %7059 = call i32 @llvm.ctpop.i32(i32 %7058)
  %7060 = trunc i32 %7059 to i8
  %7061 = and i8 %7060, 1
  %7062 = xor i8 %7061, 1
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7062, i8* %7063, align 1
  %7064 = xor i32 %7050, %7048
  %7065 = xor i32 %7064, %7051
  %7066 = lshr i32 %7065, 4
  %7067 = trunc i32 %7066 to i8
  %7068 = and i8 %7067, 1
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7068, i8* %7069, align 1
  %7070 = icmp eq i32 %7051, 0
  %7071 = zext i1 %7070 to i8
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7071, i8* %7072, align 1
  %7073 = lshr i32 %7051, 31
  %7074 = trunc i32 %7073 to i8
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7074, i8* %7075, align 1
  %7076 = lshr i32 %7048, 31
  %7077 = lshr i32 %7050, 31
  %7078 = xor i32 %7073, %7076
  %7079 = xor i32 %7073, %7077
  %7080 = add i32 %7078, %7079
  %7081 = icmp eq i32 %7080, 2
  %7082 = zext i1 %7081 to i8
  %7083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7082, i8* %7083, align 1
  store %struct.Memory* %loadMem_463338, %struct.Memory** %MEMORY
  %loadMem_46333f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7085 = getelementptr inbounds %struct.GPR, %struct.GPR* %7084, i32 0, i32 33
  %7086 = getelementptr inbounds %struct.Reg, %struct.Reg* %7085, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %7086 to i64*
  %7087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7088 = getelementptr inbounds %struct.GPR, %struct.GPR* %7087, i32 0, i32 5
  %7089 = getelementptr inbounds %struct.Reg, %struct.Reg* %7088, i32 0, i32 0
  %ECX.i425 = bitcast %union.anon* %7089 to i32*
  %7090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7091 = getelementptr inbounds %struct.GPR, %struct.GPR* %7090, i32 0, i32 1
  %7092 = getelementptr inbounds %struct.Reg, %struct.Reg* %7091, i32 0, i32 0
  %RAX.i426 = bitcast %union.anon* %7092 to i64*
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7094 = getelementptr inbounds %struct.GPR, %struct.GPR* %7093, i32 0, i32 7
  %7095 = getelementptr inbounds %struct.Reg, %struct.Reg* %7094, i32 0, i32 0
  %RDX.i427 = bitcast %union.anon* %7095 to i64*
  %7096 = load i64, i64* %RAX.i426
  %7097 = load i64, i64* %RDX.i427
  %7098 = mul i64 %7097, 4
  %7099 = add i64 %7096, 200
  %7100 = add i64 %7099, %7098
  %7101 = load i32, i32* %ECX.i425
  %7102 = zext i32 %7101 to i64
  %7103 = load i64, i64* %PC.i424
  %7104 = add i64 %7103, 7
  store i64 %7104, i64* %PC.i424
  %7105 = inttoptr i64 %7100 to i32*
  store i32 %7101, i32* %7105
  store %struct.Memory* %loadMem_46333f, %struct.Memory** %MEMORY
  %loadMem_463346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7107 = getelementptr inbounds %struct.GPR, %struct.GPR* %7106, i32 0, i32 33
  %7108 = getelementptr inbounds %struct.Reg, %struct.Reg* %7107, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %7108 to i64*
  %7109 = load i64, i64* %PC.i423
  %7110 = add i64 %7109, 34
  %7111 = load i64, i64* %PC.i423
  %7112 = add i64 %7111, 5
  store i64 %7112, i64* %PC.i423
  %7113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7110, i64* %7113, align 8
  store %struct.Memory* %loadMem_463346, %struct.Memory** %MEMORY
  br label %block_.L_463368

block_.L_46334b:                                  ; preds = %block_.L_46331b
  %loadMem_46334b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7115 = getelementptr inbounds %struct.GPR, %struct.GPR* %7114, i32 0, i32 33
  %7116 = getelementptr inbounds %struct.Reg, %struct.Reg* %7115, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %7116 to i64*
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7118 = getelementptr inbounds %struct.GPR, %struct.GPR* %7117, i32 0, i32 1
  %7119 = getelementptr inbounds %struct.Reg, %struct.Reg* %7118, i32 0, i32 0
  %RAX.i422 = bitcast %union.anon* %7119 to i64*
  %7120 = load i64, i64* %PC.i421
  %7121 = add i64 %7120, 7
  store i64 %7121, i64* %PC.i421
  %7122 = load i32, i32* bitcast (%G_0x7afdb4_type* @G_0x7afdb4 to i32*)
  %7123 = zext i32 %7122 to i64
  store i64 %7123, i64* %RAX.i422, align 8
  store %struct.Memory* %loadMem_46334b, %struct.Memory** %MEMORY
  %loadMem_463352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7125 = getelementptr inbounds %struct.GPR, %struct.GPR* %7124, i32 0, i32 33
  %7126 = getelementptr inbounds %struct.Reg, %struct.Reg* %7125, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %7126 to i64*
  %7127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7128 = getelementptr inbounds %struct.GPR, %struct.GPR* %7127, i32 0, i32 5
  %7129 = getelementptr inbounds %struct.Reg, %struct.Reg* %7128, i32 0, i32 0
  %RCX.i419 = bitcast %union.anon* %7129 to i64*
  %7130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7131 = getelementptr inbounds %struct.GPR, %struct.GPR* %7130, i32 0, i32 15
  %7132 = getelementptr inbounds %struct.Reg, %struct.Reg* %7131, i32 0, i32 0
  %RBP.i420 = bitcast %union.anon* %7132 to i64*
  %7133 = load i64, i64* %RBP.i420
  %7134 = sub i64 %7133, 48
  %7135 = load i64, i64* %PC.i418
  %7136 = add i64 %7135, 4
  store i64 %7136, i64* %PC.i418
  %7137 = inttoptr i64 %7134 to i64*
  %7138 = load i64, i64* %7137
  store i64 %7138, i64* %RCX.i419, align 8
  store %struct.Memory* %loadMem_463352, %struct.Memory** %MEMORY
  %loadMem_463356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7140 = getelementptr inbounds %struct.GPR, %struct.GPR* %7139, i32 0, i32 33
  %7141 = getelementptr inbounds %struct.Reg, %struct.Reg* %7140, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %7141 to i64*
  %7142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7143 = getelementptr inbounds %struct.GPR, %struct.GPR* %7142, i32 0, i32 7
  %7144 = getelementptr inbounds %struct.Reg, %struct.Reg* %7143, i32 0, i32 0
  %RDX.i416 = bitcast %union.anon* %7144 to i64*
  %7145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7146 = getelementptr inbounds %struct.GPR, %struct.GPR* %7145, i32 0, i32 15
  %7147 = getelementptr inbounds %struct.Reg, %struct.Reg* %7146, i32 0, i32 0
  %RBP.i417 = bitcast %union.anon* %7147 to i64*
  %7148 = load i64, i64* %RBP.i417
  %7149 = sub i64 %7148, 80
  %7150 = load i64, i64* %PC.i415
  %7151 = add i64 %7150, 4
  store i64 %7151, i64* %PC.i415
  %7152 = inttoptr i64 %7149 to i32*
  %7153 = load i32, i32* %7152
  %7154 = sext i32 %7153 to i64
  store i64 %7154, i64* %RDX.i416, align 8
  store %struct.Memory* %loadMem_463356, %struct.Memory** %MEMORY
  %loadMem_46335a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7156 = getelementptr inbounds %struct.GPR, %struct.GPR* %7155, i32 0, i32 33
  %7157 = getelementptr inbounds %struct.Reg, %struct.Reg* %7156, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %7157 to i64*
  %7158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7159 = getelementptr inbounds %struct.GPR, %struct.GPR* %7158, i32 0, i32 1
  %7160 = getelementptr inbounds %struct.Reg, %struct.Reg* %7159, i32 0, i32 0
  %RAX.i412 = bitcast %union.anon* %7160 to i64*
  %7161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7162 = getelementptr inbounds %struct.GPR, %struct.GPR* %7161, i32 0, i32 5
  %7163 = getelementptr inbounds %struct.Reg, %struct.Reg* %7162, i32 0, i32 0
  %RCX.i413 = bitcast %union.anon* %7163 to i64*
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7165 = getelementptr inbounds %struct.GPR, %struct.GPR* %7164, i32 0, i32 7
  %7166 = getelementptr inbounds %struct.Reg, %struct.Reg* %7165, i32 0, i32 0
  %RDX.i414 = bitcast %union.anon* %7166 to i64*
  %7167 = load i64, i64* %RAX.i412
  %7168 = load i64, i64* %RCX.i413
  %7169 = load i64, i64* %RDX.i414
  %7170 = mul i64 %7169, 4
  %7171 = add i64 %7168, 200
  %7172 = add i64 %7171, %7170
  %7173 = load i64, i64* %PC.i411
  %7174 = add i64 %7173, 7
  store i64 %7174, i64* %PC.i411
  %7175 = trunc i64 %7167 to i32
  %7176 = inttoptr i64 %7172 to i32*
  %7177 = load i32, i32* %7176
  %7178 = add i32 %7177, %7175
  %7179 = zext i32 %7178 to i64
  store i64 %7179, i64* %RAX.i412, align 8
  %7180 = icmp ult i32 %7178, %7175
  %7181 = icmp ult i32 %7178, %7177
  %7182 = or i1 %7180, %7181
  %7183 = zext i1 %7182 to i8
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7183, i8* %7184, align 1
  %7185 = and i32 %7178, 255
  %7186 = call i32 @llvm.ctpop.i32(i32 %7185)
  %7187 = trunc i32 %7186 to i8
  %7188 = and i8 %7187, 1
  %7189 = xor i8 %7188, 1
  %7190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7189, i8* %7190, align 1
  %7191 = xor i32 %7177, %7175
  %7192 = xor i32 %7191, %7178
  %7193 = lshr i32 %7192, 4
  %7194 = trunc i32 %7193 to i8
  %7195 = and i8 %7194, 1
  %7196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7195, i8* %7196, align 1
  %7197 = icmp eq i32 %7178, 0
  %7198 = zext i1 %7197 to i8
  %7199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7198, i8* %7199, align 1
  %7200 = lshr i32 %7178, 31
  %7201 = trunc i32 %7200 to i8
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7201, i8* %7202, align 1
  %7203 = lshr i32 %7175, 31
  %7204 = lshr i32 %7177, 31
  %7205 = xor i32 %7200, %7203
  %7206 = xor i32 %7200, %7204
  %7207 = add i32 %7205, %7206
  %7208 = icmp eq i32 %7207, 2
  %7209 = zext i1 %7208 to i8
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7209, i8* %7210, align 1
  store %struct.Memory* %loadMem_46335a, %struct.Memory** %MEMORY
  %loadMem_463361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7212 = getelementptr inbounds %struct.GPR, %struct.GPR* %7211, i32 0, i32 33
  %7213 = getelementptr inbounds %struct.Reg, %struct.Reg* %7212, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %7213 to i64*
  %7214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7215 = getelementptr inbounds %struct.GPR, %struct.GPR* %7214, i32 0, i32 1
  %7216 = getelementptr inbounds %struct.Reg, %struct.Reg* %7215, i32 0, i32 0
  %EAX.i408 = bitcast %union.anon* %7216 to i32*
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7218 = getelementptr inbounds %struct.GPR, %struct.GPR* %7217, i32 0, i32 5
  %7219 = getelementptr inbounds %struct.Reg, %struct.Reg* %7218, i32 0, i32 0
  %RCX.i409 = bitcast %union.anon* %7219 to i64*
  %7220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7221 = getelementptr inbounds %struct.GPR, %struct.GPR* %7220, i32 0, i32 7
  %7222 = getelementptr inbounds %struct.Reg, %struct.Reg* %7221, i32 0, i32 0
  %RDX.i410 = bitcast %union.anon* %7222 to i64*
  %7223 = load i64, i64* %RCX.i409
  %7224 = load i64, i64* %RDX.i410
  %7225 = mul i64 %7224, 4
  %7226 = add i64 %7223, 200
  %7227 = add i64 %7226, %7225
  %7228 = load i32, i32* %EAX.i408
  %7229 = zext i32 %7228 to i64
  %7230 = load i64, i64* %PC.i407
  %7231 = add i64 %7230, 7
  store i64 %7231, i64* %PC.i407
  %7232 = inttoptr i64 %7227 to i32*
  store i32 %7228, i32* %7232
  store %struct.Memory* %loadMem_463361, %struct.Memory** %MEMORY
  br label %block_.L_463368

block_.L_463368:                                  ; preds = %block_.L_46334b, %block_463325
  %loadMem_463368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7234 = getelementptr inbounds %struct.GPR, %struct.GPR* %7233, i32 0, i32 33
  %7235 = getelementptr inbounds %struct.Reg, %struct.Reg* %7234, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %7235 to i64*
  %7236 = load i64, i64* %PC.i406
  %7237 = add i64 %7236, 5
  %7238 = load i64, i64* %PC.i406
  %7239 = add i64 %7238, 5
  store i64 %7239, i64* %PC.i406
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7237, i64* %7240, align 8
  store %struct.Memory* %loadMem_463368, %struct.Memory** %MEMORY
  br label %block_.L_46336d

block_.L_46336d:                                  ; preds = %block_.L_463368, %block_.L_46306b
  %loadMem_46336d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7242 = getelementptr inbounds %struct.GPR, %struct.GPR* %7241, i32 0, i32 33
  %7243 = getelementptr inbounds %struct.Reg, %struct.Reg* %7242, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %7243 to i64*
  %7244 = load i64, i64* %PC.i405
  %7245 = add i64 %7244, 5
  %7246 = load i64, i64* %PC.i405
  %7247 = add i64 %7246, 5
  store i64 %7247, i64* %PC.i405
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7245, i64* %7248, align 8
  store %struct.Memory* %loadMem_46336d, %struct.Memory** %MEMORY
  br label %block_.L_463372

block_.L_463372:                                  ; preds = %block_.L_46336d
  %loadMem_463372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7250 = getelementptr inbounds %struct.GPR, %struct.GPR* %7249, i32 0, i32 33
  %7251 = getelementptr inbounds %struct.Reg, %struct.Reg* %7250, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %7251 to i64*
  %7252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7253 = getelementptr inbounds %struct.GPR, %struct.GPR* %7252, i32 0, i32 1
  %7254 = getelementptr inbounds %struct.Reg, %struct.Reg* %7253, i32 0, i32 0
  %RAX.i403 = bitcast %union.anon* %7254 to i64*
  %7255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7256 = getelementptr inbounds %struct.GPR, %struct.GPR* %7255, i32 0, i32 15
  %7257 = getelementptr inbounds %struct.Reg, %struct.Reg* %7256, i32 0, i32 0
  %RBP.i404 = bitcast %union.anon* %7257 to i64*
  %7258 = load i64, i64* %RBP.i404
  %7259 = sub i64 %7258, 80
  %7260 = load i64, i64* %PC.i402
  %7261 = add i64 %7260, 3
  store i64 %7261, i64* %PC.i402
  %7262 = inttoptr i64 %7259 to i32*
  %7263 = load i32, i32* %7262
  %7264 = zext i32 %7263 to i64
  store i64 %7264, i64* %RAX.i403, align 8
  store %struct.Memory* %loadMem_463372, %struct.Memory** %MEMORY
  %loadMem_463375 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7266 = getelementptr inbounds %struct.GPR, %struct.GPR* %7265, i32 0, i32 33
  %7267 = getelementptr inbounds %struct.Reg, %struct.Reg* %7266, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %7267 to i64*
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7269 = getelementptr inbounds %struct.GPR, %struct.GPR* %7268, i32 0, i32 1
  %7270 = getelementptr inbounds %struct.Reg, %struct.Reg* %7269, i32 0, i32 0
  %RAX.i401 = bitcast %union.anon* %7270 to i64*
  %7271 = load i64, i64* %RAX.i401
  %7272 = load i64, i64* %PC.i400
  %7273 = add i64 %7272, 3
  store i64 %7273, i64* %PC.i400
  %7274 = trunc i64 %7271 to i32
  %7275 = add i32 1, %7274
  %7276 = zext i32 %7275 to i64
  store i64 %7276, i64* %RAX.i401, align 8
  %7277 = icmp ult i32 %7275, %7274
  %7278 = icmp ult i32 %7275, 1
  %7279 = or i1 %7277, %7278
  %7280 = zext i1 %7279 to i8
  %7281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7280, i8* %7281, align 1
  %7282 = and i32 %7275, 255
  %7283 = call i32 @llvm.ctpop.i32(i32 %7282)
  %7284 = trunc i32 %7283 to i8
  %7285 = and i8 %7284, 1
  %7286 = xor i8 %7285, 1
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7286, i8* %7287, align 1
  %7288 = xor i64 1, %7271
  %7289 = trunc i64 %7288 to i32
  %7290 = xor i32 %7289, %7275
  %7291 = lshr i32 %7290, 4
  %7292 = trunc i32 %7291 to i8
  %7293 = and i8 %7292, 1
  %7294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7293, i8* %7294, align 1
  %7295 = icmp eq i32 %7275, 0
  %7296 = zext i1 %7295 to i8
  %7297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7296, i8* %7297, align 1
  %7298 = lshr i32 %7275, 31
  %7299 = trunc i32 %7298 to i8
  %7300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7299, i8* %7300, align 1
  %7301 = lshr i32 %7274, 31
  %7302 = xor i32 %7298, %7301
  %7303 = add i32 %7302, %7298
  %7304 = icmp eq i32 %7303, 2
  %7305 = zext i1 %7304 to i8
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7305, i8* %7306, align 1
  store %struct.Memory* %loadMem_463375, %struct.Memory** %MEMORY
  %loadMem_463378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7308 = getelementptr inbounds %struct.GPR, %struct.GPR* %7307, i32 0, i32 33
  %7309 = getelementptr inbounds %struct.Reg, %struct.Reg* %7308, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %7309 to i64*
  %7310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7311 = getelementptr inbounds %struct.GPR, %struct.GPR* %7310, i32 0, i32 1
  %7312 = getelementptr inbounds %struct.Reg, %struct.Reg* %7311, i32 0, i32 0
  %EAX.i398 = bitcast %union.anon* %7312 to i32*
  %7313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7314 = getelementptr inbounds %struct.GPR, %struct.GPR* %7313, i32 0, i32 15
  %7315 = getelementptr inbounds %struct.Reg, %struct.Reg* %7314, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %7315 to i64*
  %7316 = load i64, i64* %RBP.i399
  %7317 = sub i64 %7316, 80
  %7318 = load i32, i32* %EAX.i398
  %7319 = zext i32 %7318 to i64
  %7320 = load i64, i64* %PC.i397
  %7321 = add i64 %7320, 3
  store i64 %7321, i64* %PC.i397
  %7322 = inttoptr i64 %7317 to i32*
  store i32 %7318, i32* %7322
  store %struct.Memory* %loadMem_463378, %struct.Memory** %MEMORY
  %loadMem_46337b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7324 = getelementptr inbounds %struct.GPR, %struct.GPR* %7323, i32 0, i32 33
  %7325 = getelementptr inbounds %struct.Reg, %struct.Reg* %7324, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %7325 to i64*
  %7326 = load i64, i64* %PC.i396
  %7327 = add i64 %7326, -1676
  %7328 = load i64, i64* %PC.i396
  %7329 = add i64 %7328, 5
  store i64 %7329, i64* %PC.i396
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7327, i64* %7330, align 8
  store %struct.Memory* %loadMem_46337b, %struct.Memory** %MEMORY
  br label %block_.L_462cef

block_.L_463380:                                  ; preds = %block_.L_462cef
  %loadMem_463380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7332 = getelementptr inbounds %struct.GPR, %struct.GPR* %7331, i32 0, i32 33
  %7333 = getelementptr inbounds %struct.Reg, %struct.Reg* %7332, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %7333 to i64*
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7335 = getelementptr inbounds %struct.GPR, %struct.GPR* %7334, i32 0, i32 1
  %7336 = getelementptr inbounds %struct.Reg, %struct.Reg* %7335, i32 0, i32 0
  %RAX.i394 = bitcast %union.anon* %7336 to i64*
  %7337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7338 = getelementptr inbounds %struct.GPR, %struct.GPR* %7337, i32 0, i32 15
  %7339 = getelementptr inbounds %struct.Reg, %struct.Reg* %7338, i32 0, i32 0
  %RBP.i395 = bitcast %union.anon* %7339 to i64*
  %7340 = load i64, i64* %RBP.i395
  %7341 = sub i64 %7340, 68
  %7342 = load i64, i64* %PC.i393
  %7343 = add i64 %7342, 3
  store i64 %7343, i64* %PC.i393
  %7344 = inttoptr i64 %7341 to i32*
  %7345 = load i32, i32* %7344
  %7346 = zext i32 %7345 to i64
  store i64 %7346, i64* %RAX.i394, align 8
  store %struct.Memory* %loadMem_463380, %struct.Memory** %MEMORY
  %loadMem_463383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 33
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %7349 to i64*
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7351 = getelementptr inbounds %struct.GPR, %struct.GPR* %7350, i32 0, i32 1
  %7352 = getelementptr inbounds %struct.Reg, %struct.Reg* %7351, i32 0, i32 0
  %EAX.i391 = bitcast %union.anon* %7352 to i32*
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7354 = getelementptr inbounds %struct.GPR, %struct.GPR* %7353, i32 0, i32 15
  %7355 = getelementptr inbounds %struct.Reg, %struct.Reg* %7354, i32 0, i32 0
  %RBP.i392 = bitcast %union.anon* %7355 to i64*
  %7356 = load i64, i64* %RBP.i392
  %7357 = sub i64 %7356, 84
  %7358 = load i32, i32* %EAX.i391
  %7359 = zext i32 %7358 to i64
  %7360 = load i64, i64* %PC.i390
  %7361 = add i64 %7360, 3
  store i64 %7361, i64* %PC.i390
  %7362 = inttoptr i64 %7357 to i32*
  store i32 %7358, i32* %7362
  store %struct.Memory* %loadMem_463383, %struct.Memory** %MEMORY
  br label %block_.L_463386

block_.L_463386:                                  ; preds = %block_.L_46348d, %block_.L_463380
  %loadMem_463386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7364 = getelementptr inbounds %struct.GPR, %struct.GPR* %7363, i32 0, i32 33
  %7365 = getelementptr inbounds %struct.Reg, %struct.Reg* %7364, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %7365 to i64*
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7367 = getelementptr inbounds %struct.GPR, %struct.GPR* %7366, i32 0, i32 1
  %7368 = getelementptr inbounds %struct.Reg, %struct.Reg* %7367, i32 0, i32 0
  %RAX.i388 = bitcast %union.anon* %7368 to i64*
  %7369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7370 = getelementptr inbounds %struct.GPR, %struct.GPR* %7369, i32 0, i32 15
  %7371 = getelementptr inbounds %struct.Reg, %struct.Reg* %7370, i32 0, i32 0
  %RBP.i389 = bitcast %union.anon* %7371 to i64*
  %7372 = load i64, i64* %RBP.i389
  %7373 = sub i64 %7372, 84
  %7374 = load i64, i64* %PC.i387
  %7375 = add i64 %7374, 3
  store i64 %7375, i64* %PC.i387
  %7376 = inttoptr i64 %7373 to i32*
  %7377 = load i32, i32* %7376
  %7378 = zext i32 %7377 to i64
  store i64 %7378, i64* %RAX.i388, align 8
  store %struct.Memory* %loadMem_463386, %struct.Memory** %MEMORY
  %loadMem_463389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7380 = getelementptr inbounds %struct.GPR, %struct.GPR* %7379, i32 0, i32 33
  %7381 = getelementptr inbounds %struct.Reg, %struct.Reg* %7380, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %7381 to i64*
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7383 = getelementptr inbounds %struct.GPR, %struct.GPR* %7382, i32 0, i32 5
  %7384 = getelementptr inbounds %struct.Reg, %struct.Reg* %7383, i32 0, i32 0
  %RCX.i385 = bitcast %union.anon* %7384 to i64*
  %7385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7386 = getelementptr inbounds %struct.GPR, %struct.GPR* %7385, i32 0, i32 15
  %7387 = getelementptr inbounds %struct.Reg, %struct.Reg* %7386, i32 0, i32 0
  %RBP.i386 = bitcast %union.anon* %7387 to i64*
  %7388 = load i64, i64* %RBP.i386
  %7389 = sub i64 %7388, 48
  %7390 = load i64, i64* %PC.i384
  %7391 = add i64 %7390, 4
  store i64 %7391, i64* %PC.i384
  %7392 = inttoptr i64 %7389 to i64*
  %7393 = load i64, i64* %7392
  store i64 %7393, i64* %RCX.i385, align 8
  store %struct.Memory* %loadMem_463389, %struct.Memory** %MEMORY
  %loadMem_46338d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7395 = getelementptr inbounds %struct.GPR, %struct.GPR* %7394, i32 0, i32 33
  %7396 = getelementptr inbounds %struct.Reg, %struct.Reg* %7395, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %7396 to i64*
  %7397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7398 = getelementptr inbounds %struct.GPR, %struct.GPR* %7397, i32 0, i32 5
  %7399 = getelementptr inbounds %struct.Reg, %struct.Reg* %7398, i32 0, i32 0
  %RCX.i382 = bitcast %union.anon* %7399 to i64*
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 7
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %RDX.i383 = bitcast %union.anon* %7402 to i64*
  %7403 = load i64, i64* %RCX.i382
  %7404 = add i64 %7403, 400
  %7405 = load i64, i64* %PC.i381
  %7406 = add i64 %7405, 6
  store i64 %7406, i64* %PC.i381
  %7407 = inttoptr i64 %7404 to i32*
  %7408 = load i32, i32* %7407
  %7409 = zext i32 %7408 to i64
  store i64 %7409, i64* %RDX.i383, align 8
  store %struct.Memory* %loadMem_46338d, %struct.Memory** %MEMORY
  %loadMem_463393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7411 = getelementptr inbounds %struct.GPR, %struct.GPR* %7410, i32 0, i32 33
  %7412 = getelementptr inbounds %struct.Reg, %struct.Reg* %7411, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %7412 to i64*
  %7413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7414 = getelementptr inbounds %struct.GPR, %struct.GPR* %7413, i32 0, i32 7
  %7415 = getelementptr inbounds %struct.Reg, %struct.Reg* %7414, i32 0, i32 0
  %RDX.i380 = bitcast %union.anon* %7415 to i64*
  %7416 = load i64, i64* %RDX.i380
  %7417 = load i64, i64* %PC.i379
  %7418 = add i64 %7417, 3
  store i64 %7418, i64* %PC.i379
  %7419 = trunc i64 %7416 to i32
  %7420 = sub i32 %7419, 1
  %7421 = zext i32 %7420 to i64
  store i64 %7421, i64* %RDX.i380, align 8
  %7422 = icmp ult i32 %7419, 1
  %7423 = zext i1 %7422 to i8
  %7424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7423, i8* %7424, align 1
  %7425 = and i32 %7420, 255
  %7426 = call i32 @llvm.ctpop.i32(i32 %7425)
  %7427 = trunc i32 %7426 to i8
  %7428 = and i8 %7427, 1
  %7429 = xor i8 %7428, 1
  %7430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7429, i8* %7430, align 1
  %7431 = xor i64 1, %7416
  %7432 = trunc i64 %7431 to i32
  %7433 = xor i32 %7432, %7420
  %7434 = lshr i32 %7433, 4
  %7435 = trunc i32 %7434 to i8
  %7436 = and i8 %7435, 1
  %7437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7436, i8* %7437, align 1
  %7438 = icmp eq i32 %7420, 0
  %7439 = zext i1 %7438 to i8
  %7440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7439, i8* %7440, align 1
  %7441 = lshr i32 %7420, 31
  %7442 = trunc i32 %7441 to i8
  %7443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7442, i8* %7443, align 1
  %7444 = lshr i32 %7419, 31
  %7445 = xor i32 %7441, %7444
  %7446 = add i32 %7445, %7444
  %7447 = icmp eq i32 %7446, 2
  %7448 = zext i1 %7447 to i8
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7448, i8* %7449, align 1
  store %struct.Memory* %loadMem_463393, %struct.Memory** %MEMORY
  %loadMem_463396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7451 = getelementptr inbounds %struct.GPR, %struct.GPR* %7450, i32 0, i32 33
  %7452 = getelementptr inbounds %struct.Reg, %struct.Reg* %7451, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %7452 to i64*
  %7453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7454 = getelementptr inbounds %struct.GPR, %struct.GPR* %7453, i32 0, i32 1
  %7455 = getelementptr inbounds %struct.Reg, %struct.Reg* %7454, i32 0, i32 0
  %EAX.i377 = bitcast %union.anon* %7455 to i32*
  %7456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7457 = getelementptr inbounds %struct.GPR, %struct.GPR* %7456, i32 0, i32 7
  %7458 = getelementptr inbounds %struct.Reg, %struct.Reg* %7457, i32 0, i32 0
  %EDX.i378 = bitcast %union.anon* %7458 to i32*
  %7459 = load i32, i32* %EAX.i377
  %7460 = zext i32 %7459 to i64
  %7461 = load i32, i32* %EDX.i378
  %7462 = zext i32 %7461 to i64
  %7463 = load i64, i64* %PC.i376
  %7464 = add i64 %7463, 2
  store i64 %7464, i64* %PC.i376
  %7465 = sub i32 %7459, %7461
  %7466 = icmp ult i32 %7459, %7461
  %7467 = zext i1 %7466 to i8
  %7468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7467, i8* %7468, align 1
  %7469 = and i32 %7465, 255
  %7470 = call i32 @llvm.ctpop.i32(i32 %7469)
  %7471 = trunc i32 %7470 to i8
  %7472 = and i8 %7471, 1
  %7473 = xor i8 %7472, 1
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7473, i8* %7474, align 1
  %7475 = xor i64 %7462, %7460
  %7476 = trunc i64 %7475 to i32
  %7477 = xor i32 %7476, %7465
  %7478 = lshr i32 %7477, 4
  %7479 = trunc i32 %7478 to i8
  %7480 = and i8 %7479, 1
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7480, i8* %7481, align 1
  %7482 = icmp eq i32 %7465, 0
  %7483 = zext i1 %7482 to i8
  %7484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7483, i8* %7484, align 1
  %7485 = lshr i32 %7465, 31
  %7486 = trunc i32 %7485 to i8
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7486, i8* %7487, align 1
  %7488 = lshr i32 %7459, 31
  %7489 = lshr i32 %7461, 31
  %7490 = xor i32 %7489, %7488
  %7491 = xor i32 %7485, %7488
  %7492 = add i32 %7491, %7490
  %7493 = icmp eq i32 %7492, 2
  %7494 = zext i1 %7493 to i8
  %7495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7494, i8* %7495, align 1
  store %struct.Memory* %loadMem_463396, %struct.Memory** %MEMORY
  %loadMem_463398 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7497 = getelementptr inbounds %struct.GPR, %struct.GPR* %7496, i32 0, i32 33
  %7498 = getelementptr inbounds %struct.Reg, %struct.Reg* %7497, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %7498 to i64*
  %7499 = load i64, i64* %PC.i375
  %7500 = add i64 %7499, 259
  %7501 = load i64, i64* %PC.i375
  %7502 = add i64 %7501, 6
  %7503 = load i64, i64* %PC.i375
  %7504 = add i64 %7503, 6
  store i64 %7504, i64* %PC.i375
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7506 = load i8, i8* %7505, align 1
  %7507 = icmp ne i8 %7506, 0
  %7508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7509 = load i8, i8* %7508, align 1
  %7510 = icmp ne i8 %7509, 0
  %7511 = xor i1 %7507, %7510
  %7512 = xor i1 %7511, true
  %7513 = zext i1 %7512 to i8
  store i8 %7513, i8* %BRANCH_TAKEN, align 1
  %7514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7515 = select i1 %7511, i64 %7502, i64 %7500
  store i64 %7515, i64* %7514, align 8
  store %struct.Memory* %loadMem_463398, %struct.Memory** %MEMORY
  %loadBr_463398 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_463398 = icmp eq i8 %loadBr_463398, 1
  br i1 %cmpBr_463398, label %block_.L_46349b, label %block_46339e

block_46339e:                                     ; preds = %block_.L_463386
  %loadMem_46339e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7517 = getelementptr inbounds %struct.GPR, %struct.GPR* %7516, i32 0, i32 33
  %7518 = getelementptr inbounds %struct.Reg, %struct.Reg* %7517, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %7518 to i64*
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7520 = getelementptr inbounds %struct.GPR, %struct.GPR* %7519, i32 0, i32 1
  %7521 = getelementptr inbounds %struct.Reg, %struct.Reg* %7520, i32 0, i32 0
  %RAX.i373 = bitcast %union.anon* %7521 to i64*
  %7522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7523 = getelementptr inbounds %struct.GPR, %struct.GPR* %7522, i32 0, i32 15
  %7524 = getelementptr inbounds %struct.Reg, %struct.Reg* %7523, i32 0, i32 0
  %RBP.i374 = bitcast %union.anon* %7524 to i64*
  %7525 = load i64, i64* %RBP.i374
  %7526 = sub i64 %7525, 48
  %7527 = load i64, i64* %PC.i372
  %7528 = add i64 %7527, 4
  store i64 %7528, i64* %PC.i372
  %7529 = inttoptr i64 %7526 to i64*
  %7530 = load i64, i64* %7529
  store i64 %7530, i64* %RAX.i373, align 8
  store %struct.Memory* %loadMem_46339e, %struct.Memory** %MEMORY
  %loadMem_4633a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7532 = getelementptr inbounds %struct.GPR, %struct.GPR* %7531, i32 0, i32 33
  %7533 = getelementptr inbounds %struct.Reg, %struct.Reg* %7532, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %7533 to i64*
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7535 = getelementptr inbounds %struct.GPR, %struct.GPR* %7534, i32 0, i32 5
  %7536 = getelementptr inbounds %struct.Reg, %struct.Reg* %7535, i32 0, i32 0
  %RCX.i370 = bitcast %union.anon* %7536 to i64*
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7538 = getelementptr inbounds %struct.GPR, %struct.GPR* %7537, i32 0, i32 15
  %7539 = getelementptr inbounds %struct.Reg, %struct.Reg* %7538, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %7539 to i64*
  %7540 = load i64, i64* %RBP.i371
  %7541 = sub i64 %7540, 84
  %7542 = load i64, i64* %PC.i369
  %7543 = add i64 %7542, 4
  store i64 %7543, i64* %PC.i369
  %7544 = inttoptr i64 %7541 to i32*
  %7545 = load i32, i32* %7544
  %7546 = sext i32 %7545 to i64
  store i64 %7546, i64* %RCX.i370, align 8
  store %struct.Memory* %loadMem_4633a2, %struct.Memory** %MEMORY
  %loadMem_4633a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7548 = getelementptr inbounds %struct.GPR, %struct.GPR* %7547, i32 0, i32 33
  %7549 = getelementptr inbounds %struct.Reg, %struct.Reg* %7548, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %7549 to i64*
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7551 = getelementptr inbounds %struct.GPR, %struct.GPR* %7550, i32 0, i32 1
  %7552 = getelementptr inbounds %struct.Reg, %struct.Reg* %7551, i32 0, i32 0
  %RAX.i366 = bitcast %union.anon* %7552 to i64*
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7554 = getelementptr inbounds %struct.GPR, %struct.GPR* %7553, i32 0, i32 5
  %7555 = getelementptr inbounds %struct.Reg, %struct.Reg* %7554, i32 0, i32 0
  %RCX.i367 = bitcast %union.anon* %7555 to i64*
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7557 = getelementptr inbounds %struct.GPR, %struct.GPR* %7556, i32 0, i32 7
  %7558 = getelementptr inbounds %struct.Reg, %struct.Reg* %7557, i32 0, i32 0
  %RDX.i368 = bitcast %union.anon* %7558 to i64*
  %7559 = load i64, i64* %RAX.i366
  %7560 = load i64, i64* %RCX.i367
  %7561 = mul i64 %7560, 4
  %7562 = add i64 %7559, 200
  %7563 = add i64 %7562, %7561
  %7564 = load i64, i64* %PC.i365
  %7565 = add i64 %7564, 7
  store i64 %7565, i64* %PC.i365
  %7566 = inttoptr i64 %7563 to i32*
  %7567 = load i32, i32* %7566
  %7568 = zext i32 %7567 to i64
  store i64 %7568, i64* %RDX.i368, align 8
  store %struct.Memory* %loadMem_4633a6, %struct.Memory** %MEMORY
  %loadMem_4633ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7570 = getelementptr inbounds %struct.GPR, %struct.GPR* %7569, i32 0, i32 33
  %7571 = getelementptr inbounds %struct.Reg, %struct.Reg* %7570, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %7571 to i64*
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7573 = getelementptr inbounds %struct.GPR, %struct.GPR* %7572, i32 0, i32 7
  %7574 = getelementptr inbounds %struct.Reg, %struct.Reg* %7573, i32 0, i32 0
  %EDX.i363 = bitcast %union.anon* %7574 to i32*
  %7575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7576 = getelementptr inbounds %struct.GPR, %struct.GPR* %7575, i32 0, i32 15
  %7577 = getelementptr inbounds %struct.Reg, %struct.Reg* %7576, i32 0, i32 0
  %RBP.i364 = bitcast %union.anon* %7577 to i64*
  %7578 = load i64, i64* %RBP.i364
  %7579 = sub i64 %7578, 92
  %7580 = load i32, i32* %EDX.i363
  %7581 = zext i32 %7580 to i64
  %7582 = load i64, i64* %PC.i362
  %7583 = add i64 %7582, 3
  store i64 %7583, i64* %PC.i362
  %7584 = inttoptr i64 %7579 to i32*
  store i32 %7580, i32* %7584
  store %struct.Memory* %loadMem_4633ad, %struct.Memory** %MEMORY
  %loadMem_4633b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7586 = getelementptr inbounds %struct.GPR, %struct.GPR* %7585, i32 0, i32 33
  %7587 = getelementptr inbounds %struct.Reg, %struct.Reg* %7586, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %7587 to i64*
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7589 = getelementptr inbounds %struct.GPR, %struct.GPR* %7588, i32 0, i32 15
  %7590 = getelementptr inbounds %struct.Reg, %struct.Reg* %7589, i32 0, i32 0
  %RBP.i361 = bitcast %union.anon* %7590 to i64*
  %7591 = load i64, i64* %RBP.i361
  %7592 = sub i64 %7591, 96
  %7593 = load i64, i64* %PC.i360
  %7594 = add i64 %7593, 7
  store i64 %7594, i64* %PC.i360
  %7595 = inttoptr i64 %7592 to i32*
  store i32 0, i32* %7595
  store %struct.Memory* %loadMem_4633b0, %struct.Memory** %MEMORY
  %loadMem_4633b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7597 = getelementptr inbounds %struct.GPR, %struct.GPR* %7596, i32 0, i32 33
  %7598 = getelementptr inbounds %struct.Reg, %struct.Reg* %7597, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %7598 to i64*
  %7599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7600 = getelementptr inbounds %struct.GPR, %struct.GPR* %7599, i32 0, i32 7
  %7601 = getelementptr inbounds %struct.Reg, %struct.Reg* %7600, i32 0, i32 0
  %RDX.i358 = bitcast %union.anon* %7601 to i64*
  %7602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7603 = getelementptr inbounds %struct.GPR, %struct.GPR* %7602, i32 0, i32 15
  %7604 = getelementptr inbounds %struct.Reg, %struct.Reg* %7603, i32 0, i32 0
  %RBP.i359 = bitcast %union.anon* %7604 to i64*
  %7605 = load i64, i64* %RBP.i359
  %7606 = sub i64 %7605, 84
  %7607 = load i64, i64* %PC.i357
  %7608 = add i64 %7607, 3
  store i64 %7608, i64* %PC.i357
  %7609 = inttoptr i64 %7606 to i32*
  %7610 = load i32, i32* %7609
  %7611 = zext i32 %7610 to i64
  store i64 %7611, i64* %RDX.i358, align 8
  store %struct.Memory* %loadMem_4633b7, %struct.Memory** %MEMORY
  %loadMem_4633ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %7612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7613 = getelementptr inbounds %struct.GPR, %struct.GPR* %7612, i32 0, i32 33
  %7614 = getelementptr inbounds %struct.Reg, %struct.Reg* %7613, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %7614 to i64*
  %7615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7616 = getelementptr inbounds %struct.GPR, %struct.GPR* %7615, i32 0, i32 7
  %7617 = getelementptr inbounds %struct.Reg, %struct.Reg* %7616, i32 0, i32 0
  %RDX.i356 = bitcast %union.anon* %7617 to i64*
  %7618 = load i64, i64* %RDX.i356
  %7619 = load i64, i64* %PC.i355
  %7620 = add i64 %7619, 3
  store i64 %7620, i64* %PC.i355
  %7621 = trunc i64 %7618 to i32
  %7622 = add i32 1, %7621
  %7623 = zext i32 %7622 to i64
  store i64 %7623, i64* %RDX.i356, align 8
  %7624 = icmp ult i32 %7622, %7621
  %7625 = icmp ult i32 %7622, 1
  %7626 = or i1 %7624, %7625
  %7627 = zext i1 %7626 to i8
  %7628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7627, i8* %7628, align 1
  %7629 = and i32 %7622, 255
  %7630 = call i32 @llvm.ctpop.i32(i32 %7629)
  %7631 = trunc i32 %7630 to i8
  %7632 = and i8 %7631, 1
  %7633 = xor i8 %7632, 1
  %7634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7633, i8* %7634, align 1
  %7635 = xor i64 1, %7618
  %7636 = trunc i64 %7635 to i32
  %7637 = xor i32 %7636, %7622
  %7638 = lshr i32 %7637, 4
  %7639 = trunc i32 %7638 to i8
  %7640 = and i8 %7639, 1
  %7641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7640, i8* %7641, align 1
  %7642 = icmp eq i32 %7622, 0
  %7643 = zext i1 %7642 to i8
  %7644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7643, i8* %7644, align 1
  %7645 = lshr i32 %7622, 31
  %7646 = trunc i32 %7645 to i8
  %7647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7646, i8* %7647, align 1
  %7648 = lshr i32 %7621, 31
  %7649 = xor i32 %7645, %7648
  %7650 = add i32 %7649, %7645
  %7651 = icmp eq i32 %7650, 2
  %7652 = zext i1 %7651 to i8
  %7653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7652, i8* %7653, align 1
  store %struct.Memory* %loadMem_4633ba, %struct.Memory** %MEMORY
  %loadMem_4633bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7655 = getelementptr inbounds %struct.GPR, %struct.GPR* %7654, i32 0, i32 33
  %7656 = getelementptr inbounds %struct.Reg, %struct.Reg* %7655, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %7656 to i64*
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7658 = getelementptr inbounds %struct.GPR, %struct.GPR* %7657, i32 0, i32 7
  %7659 = getelementptr inbounds %struct.Reg, %struct.Reg* %7658, i32 0, i32 0
  %EDX.i353 = bitcast %union.anon* %7659 to i32*
  %7660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7661 = getelementptr inbounds %struct.GPR, %struct.GPR* %7660, i32 0, i32 15
  %7662 = getelementptr inbounds %struct.Reg, %struct.Reg* %7661, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %7662 to i64*
  %7663 = load i64, i64* %RBP.i354
  %7664 = sub i64 %7663, 88
  %7665 = load i32, i32* %EDX.i353
  %7666 = zext i32 %7665 to i64
  %7667 = load i64, i64* %PC.i352
  %7668 = add i64 %7667, 3
  store i64 %7668, i64* %PC.i352
  %7669 = inttoptr i64 %7664 to i32*
  store i32 %7665, i32* %7669
  store %struct.Memory* %loadMem_4633bd, %struct.Memory** %MEMORY
  br label %block_.L_4633c0

block_.L_4633c0:                                  ; preds = %block_.L_463408, %block_46339e
  %loadMem_4633c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7671 = getelementptr inbounds %struct.GPR, %struct.GPR* %7670, i32 0, i32 33
  %7672 = getelementptr inbounds %struct.Reg, %struct.Reg* %7671, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %7672 to i64*
  %7673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7674 = getelementptr inbounds %struct.GPR, %struct.GPR* %7673, i32 0, i32 1
  %7675 = getelementptr inbounds %struct.Reg, %struct.Reg* %7674, i32 0, i32 0
  %RAX.i350 = bitcast %union.anon* %7675 to i64*
  %7676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7677 = getelementptr inbounds %struct.GPR, %struct.GPR* %7676, i32 0, i32 15
  %7678 = getelementptr inbounds %struct.Reg, %struct.Reg* %7677, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %7678 to i64*
  %7679 = load i64, i64* %RBP.i351
  %7680 = sub i64 %7679, 88
  %7681 = load i64, i64* %PC.i349
  %7682 = add i64 %7681, 3
  store i64 %7682, i64* %PC.i349
  %7683 = inttoptr i64 %7680 to i32*
  %7684 = load i32, i32* %7683
  %7685 = zext i32 %7684 to i64
  store i64 %7685, i64* %RAX.i350, align 8
  store %struct.Memory* %loadMem_4633c0, %struct.Memory** %MEMORY
  %loadMem_4633c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7687 = getelementptr inbounds %struct.GPR, %struct.GPR* %7686, i32 0, i32 33
  %7688 = getelementptr inbounds %struct.Reg, %struct.Reg* %7687, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %7688 to i64*
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7690 = getelementptr inbounds %struct.GPR, %struct.GPR* %7689, i32 0, i32 5
  %7691 = getelementptr inbounds %struct.Reg, %struct.Reg* %7690, i32 0, i32 0
  %RCX.i347 = bitcast %union.anon* %7691 to i64*
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 15
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %RBP.i348 = bitcast %union.anon* %7694 to i64*
  %7695 = load i64, i64* %RBP.i348
  %7696 = sub i64 %7695, 48
  %7697 = load i64, i64* %PC.i346
  %7698 = add i64 %7697, 4
  store i64 %7698, i64* %PC.i346
  %7699 = inttoptr i64 %7696 to i64*
  %7700 = load i64, i64* %7699
  store i64 %7700, i64* %RCX.i347, align 8
  store %struct.Memory* %loadMem_4633c3, %struct.Memory** %MEMORY
  %loadMem_4633c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7702 = getelementptr inbounds %struct.GPR, %struct.GPR* %7701, i32 0, i32 33
  %7703 = getelementptr inbounds %struct.Reg, %struct.Reg* %7702, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %7703 to i64*
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7705 = getelementptr inbounds %struct.GPR, %struct.GPR* %7704, i32 0, i32 1
  %7706 = getelementptr inbounds %struct.Reg, %struct.Reg* %7705, i32 0, i32 0
  %EAX.i344 = bitcast %union.anon* %7706 to i32*
  %7707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7708 = getelementptr inbounds %struct.GPR, %struct.GPR* %7707, i32 0, i32 5
  %7709 = getelementptr inbounds %struct.Reg, %struct.Reg* %7708, i32 0, i32 0
  %RCX.i345 = bitcast %union.anon* %7709 to i64*
  %7710 = load i32, i32* %EAX.i344
  %7711 = zext i32 %7710 to i64
  %7712 = load i64, i64* %RCX.i345
  %7713 = add i64 %7712, 400
  %7714 = load i64, i64* %PC.i343
  %7715 = add i64 %7714, 6
  store i64 %7715, i64* %PC.i343
  %7716 = inttoptr i64 %7713 to i32*
  %7717 = load i32, i32* %7716
  %7718 = sub i32 %7710, %7717
  %7719 = icmp ult i32 %7710, %7717
  %7720 = zext i1 %7719 to i8
  %7721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7720, i8* %7721, align 1
  %7722 = and i32 %7718, 255
  %7723 = call i32 @llvm.ctpop.i32(i32 %7722)
  %7724 = trunc i32 %7723 to i8
  %7725 = and i8 %7724, 1
  %7726 = xor i8 %7725, 1
  %7727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7726, i8* %7727, align 1
  %7728 = xor i32 %7717, %7710
  %7729 = xor i32 %7728, %7718
  %7730 = lshr i32 %7729, 4
  %7731 = trunc i32 %7730 to i8
  %7732 = and i8 %7731, 1
  %7733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7732, i8* %7733, align 1
  %7734 = icmp eq i32 %7718, 0
  %7735 = zext i1 %7734 to i8
  %7736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7735, i8* %7736, align 1
  %7737 = lshr i32 %7718, 31
  %7738 = trunc i32 %7737 to i8
  %7739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7738, i8* %7739, align 1
  %7740 = lshr i32 %7710, 31
  %7741 = lshr i32 %7717, 31
  %7742 = xor i32 %7741, %7740
  %7743 = xor i32 %7737, %7740
  %7744 = add i32 %7743, %7742
  %7745 = icmp eq i32 %7744, 2
  %7746 = zext i1 %7745 to i8
  %7747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7746, i8* %7747, align 1
  store %struct.Memory* %loadMem_4633c7, %struct.Memory** %MEMORY
  %loadMem_4633cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7749 = getelementptr inbounds %struct.GPR, %struct.GPR* %7748, i32 0, i32 33
  %7750 = getelementptr inbounds %struct.Reg, %struct.Reg* %7749, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %7750 to i64*
  %7751 = load i64, i64* %PC.i342
  %7752 = add i64 %7751, 73
  %7753 = load i64, i64* %PC.i342
  %7754 = add i64 %7753, 6
  %7755 = load i64, i64* %PC.i342
  %7756 = add i64 %7755, 6
  store i64 %7756, i64* %PC.i342
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7758 = load i8, i8* %7757, align 1
  %7759 = icmp ne i8 %7758, 0
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7761 = load i8, i8* %7760, align 1
  %7762 = icmp ne i8 %7761, 0
  %7763 = xor i1 %7759, %7762
  %7764 = xor i1 %7763, true
  %7765 = zext i1 %7764 to i8
  store i8 %7765, i8* %BRANCH_TAKEN, align 1
  %7766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7767 = select i1 %7763, i64 %7754, i64 %7752
  store i64 %7767, i64* %7766, align 8
  store %struct.Memory* %loadMem_4633cd, %struct.Memory** %MEMORY
  %loadBr_4633cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4633cd = icmp eq i8 %loadBr_4633cd, 1
  br i1 %cmpBr_4633cd, label %block_.L_463416, label %block_4633d3

block_4633d3:                                     ; preds = %block_.L_4633c0
  %loadMem_4633d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7769 = getelementptr inbounds %struct.GPR, %struct.GPR* %7768, i32 0, i32 33
  %7770 = getelementptr inbounds %struct.Reg, %struct.Reg* %7769, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %7770 to i64*
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7772 = getelementptr inbounds %struct.GPR, %struct.GPR* %7771, i32 0, i32 1
  %7773 = getelementptr inbounds %struct.Reg, %struct.Reg* %7772, i32 0, i32 0
  %RAX.i340 = bitcast %union.anon* %7773 to i64*
  %7774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7775 = getelementptr inbounds %struct.GPR, %struct.GPR* %7774, i32 0, i32 15
  %7776 = getelementptr inbounds %struct.Reg, %struct.Reg* %7775, i32 0, i32 0
  %RBP.i341 = bitcast %union.anon* %7776 to i64*
  %7777 = load i64, i64* %RBP.i341
  %7778 = sub i64 %7777, 48
  %7779 = load i64, i64* %PC.i339
  %7780 = add i64 %7779, 4
  store i64 %7780, i64* %PC.i339
  %7781 = inttoptr i64 %7778 to i64*
  %7782 = load i64, i64* %7781
  store i64 %7782, i64* %RAX.i340, align 8
  store %struct.Memory* %loadMem_4633d3, %struct.Memory** %MEMORY
  %loadMem_4633d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7784 = getelementptr inbounds %struct.GPR, %struct.GPR* %7783, i32 0, i32 33
  %7785 = getelementptr inbounds %struct.Reg, %struct.Reg* %7784, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %7785 to i64*
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7787 = getelementptr inbounds %struct.GPR, %struct.GPR* %7786, i32 0, i32 5
  %7788 = getelementptr inbounds %struct.Reg, %struct.Reg* %7787, i32 0, i32 0
  %RCX.i337 = bitcast %union.anon* %7788 to i64*
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7790 = getelementptr inbounds %struct.GPR, %struct.GPR* %7789, i32 0, i32 15
  %7791 = getelementptr inbounds %struct.Reg, %struct.Reg* %7790, i32 0, i32 0
  %RBP.i338 = bitcast %union.anon* %7791 to i64*
  %7792 = load i64, i64* %RBP.i338
  %7793 = sub i64 %7792, 88
  %7794 = load i64, i64* %PC.i336
  %7795 = add i64 %7794, 4
  store i64 %7795, i64* %PC.i336
  %7796 = inttoptr i64 %7793 to i32*
  %7797 = load i32, i32* %7796
  %7798 = sext i32 %7797 to i64
  store i64 %7798, i64* %RCX.i337, align 8
  store %struct.Memory* %loadMem_4633d7, %struct.Memory** %MEMORY
  %loadMem_4633db = load %struct.Memory*, %struct.Memory** %MEMORY
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7800 = getelementptr inbounds %struct.GPR, %struct.GPR* %7799, i32 0, i32 33
  %7801 = getelementptr inbounds %struct.Reg, %struct.Reg* %7800, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %7801 to i64*
  %7802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7803 = getelementptr inbounds %struct.GPR, %struct.GPR* %7802, i32 0, i32 1
  %7804 = getelementptr inbounds %struct.Reg, %struct.Reg* %7803, i32 0, i32 0
  %RAX.i333 = bitcast %union.anon* %7804 to i64*
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7806 = getelementptr inbounds %struct.GPR, %struct.GPR* %7805, i32 0, i32 5
  %7807 = getelementptr inbounds %struct.Reg, %struct.Reg* %7806, i32 0, i32 0
  %RCX.i334 = bitcast %union.anon* %7807 to i64*
  %7808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7809 = getelementptr inbounds %struct.GPR, %struct.GPR* %7808, i32 0, i32 7
  %7810 = getelementptr inbounds %struct.Reg, %struct.Reg* %7809, i32 0, i32 0
  %RDX.i335 = bitcast %union.anon* %7810 to i64*
  %7811 = load i64, i64* %RAX.i333
  %7812 = load i64, i64* %RCX.i334
  %7813 = mul i64 %7812, 4
  %7814 = add i64 %7811, 200
  %7815 = add i64 %7814, %7813
  %7816 = load i64, i64* %PC.i332
  %7817 = add i64 %7816, 7
  store i64 %7817, i64* %PC.i332
  %7818 = inttoptr i64 %7815 to i32*
  %7819 = load i32, i32* %7818
  %7820 = zext i32 %7819 to i64
  store i64 %7820, i64* %RDX.i335, align 8
  store %struct.Memory* %loadMem_4633db, %struct.Memory** %MEMORY
  %loadMem_4633e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7822 = getelementptr inbounds %struct.GPR, %struct.GPR* %7821, i32 0, i32 33
  %7823 = getelementptr inbounds %struct.Reg, %struct.Reg* %7822, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %7823 to i64*
  %7824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7825 = getelementptr inbounds %struct.GPR, %struct.GPR* %7824, i32 0, i32 7
  %7826 = getelementptr inbounds %struct.Reg, %struct.Reg* %7825, i32 0, i32 0
  %EDX.i330 = bitcast %union.anon* %7826 to i32*
  %7827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7828 = getelementptr inbounds %struct.GPR, %struct.GPR* %7827, i32 0, i32 15
  %7829 = getelementptr inbounds %struct.Reg, %struct.Reg* %7828, i32 0, i32 0
  %RBP.i331 = bitcast %union.anon* %7829 to i64*
  %7830 = load i32, i32* %EDX.i330
  %7831 = zext i32 %7830 to i64
  %7832 = load i64, i64* %RBP.i331
  %7833 = sub i64 %7832, 92
  %7834 = load i64, i64* %PC.i329
  %7835 = add i64 %7834, 3
  store i64 %7835, i64* %PC.i329
  %7836 = inttoptr i64 %7833 to i32*
  %7837 = load i32, i32* %7836
  %7838 = sub i32 %7830, %7837
  %7839 = icmp ult i32 %7830, %7837
  %7840 = zext i1 %7839 to i8
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7840, i8* %7841, align 1
  %7842 = and i32 %7838, 255
  %7843 = call i32 @llvm.ctpop.i32(i32 %7842)
  %7844 = trunc i32 %7843 to i8
  %7845 = and i8 %7844, 1
  %7846 = xor i8 %7845, 1
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7846, i8* %7847, align 1
  %7848 = xor i32 %7837, %7830
  %7849 = xor i32 %7848, %7838
  %7850 = lshr i32 %7849, 4
  %7851 = trunc i32 %7850 to i8
  %7852 = and i8 %7851, 1
  %7853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7852, i8* %7853, align 1
  %7854 = icmp eq i32 %7838, 0
  %7855 = zext i1 %7854 to i8
  %7856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7855, i8* %7856, align 1
  %7857 = lshr i32 %7838, 31
  %7858 = trunc i32 %7857 to i8
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7858, i8* %7859, align 1
  %7860 = lshr i32 %7830, 31
  %7861 = lshr i32 %7837, 31
  %7862 = xor i32 %7861, %7860
  %7863 = xor i32 %7857, %7860
  %7864 = add i32 %7863, %7862
  %7865 = icmp eq i32 %7864, 2
  %7866 = zext i1 %7865 to i8
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7866, i8* %7867, align 1
  store %struct.Memory* %loadMem_4633e2, %struct.Memory** %MEMORY
  %loadMem_4633e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7869 = getelementptr inbounds %struct.GPR, %struct.GPR* %7868, i32 0, i32 33
  %7870 = getelementptr inbounds %struct.Reg, %struct.Reg* %7869, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %7870 to i64*
  %7871 = load i64, i64* %PC.i328
  %7872 = add i64 %7871, 30
  %7873 = load i64, i64* %PC.i328
  %7874 = add i64 %7873, 6
  %7875 = load i64, i64* %PC.i328
  %7876 = add i64 %7875, 6
  store i64 %7876, i64* %PC.i328
  %7877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7878 = load i8, i8* %7877, align 1
  %7879 = icmp ne i8 %7878, 0
  %7880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7881 = load i8, i8* %7880, align 1
  %7882 = icmp ne i8 %7881, 0
  %7883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7884 = load i8, i8* %7883, align 1
  %7885 = icmp ne i8 %7884, 0
  %7886 = xor i1 %7882, %7885
  %7887 = or i1 %7879, %7886
  %7888 = zext i1 %7887 to i8
  store i8 %7888, i8* %BRANCH_TAKEN, align 1
  %7889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7890 = select i1 %7887, i64 %7872, i64 %7874
  store i64 %7890, i64* %7889, align 8
  store %struct.Memory* %loadMem_4633e5, %struct.Memory** %MEMORY
  %loadBr_4633e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4633e5 = icmp eq i8 %loadBr_4633e5, 1
  br i1 %cmpBr_4633e5, label %block_.L_463403, label %block_4633eb

block_4633eb:                                     ; preds = %block_4633d3
  %loadMem_4633eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7892 = getelementptr inbounds %struct.GPR, %struct.GPR* %7891, i32 0, i32 33
  %7893 = getelementptr inbounds %struct.Reg, %struct.Reg* %7892, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %7893 to i64*
  %7894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7895 = getelementptr inbounds %struct.GPR, %struct.GPR* %7894, i32 0, i32 1
  %7896 = getelementptr inbounds %struct.Reg, %struct.Reg* %7895, i32 0, i32 0
  %RAX.i326 = bitcast %union.anon* %7896 to i64*
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7898 = getelementptr inbounds %struct.GPR, %struct.GPR* %7897, i32 0, i32 15
  %7899 = getelementptr inbounds %struct.Reg, %struct.Reg* %7898, i32 0, i32 0
  %RBP.i327 = bitcast %union.anon* %7899 to i64*
  %7900 = load i64, i64* %RBP.i327
  %7901 = sub i64 %7900, 48
  %7902 = load i64, i64* %PC.i325
  %7903 = add i64 %7902, 4
  store i64 %7903, i64* %PC.i325
  %7904 = inttoptr i64 %7901 to i64*
  %7905 = load i64, i64* %7904
  store i64 %7905, i64* %RAX.i326, align 8
  store %struct.Memory* %loadMem_4633eb, %struct.Memory** %MEMORY
  %loadMem_4633ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7907 = getelementptr inbounds %struct.GPR, %struct.GPR* %7906, i32 0, i32 33
  %7908 = getelementptr inbounds %struct.Reg, %struct.Reg* %7907, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %7908 to i64*
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7910 = getelementptr inbounds %struct.GPR, %struct.GPR* %7909, i32 0, i32 5
  %7911 = getelementptr inbounds %struct.Reg, %struct.Reg* %7910, i32 0, i32 0
  %RCX.i323 = bitcast %union.anon* %7911 to i64*
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 15
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %RBP.i324 = bitcast %union.anon* %7914 to i64*
  %7915 = load i64, i64* %RBP.i324
  %7916 = sub i64 %7915, 88
  %7917 = load i64, i64* %PC.i322
  %7918 = add i64 %7917, 4
  store i64 %7918, i64* %PC.i322
  %7919 = inttoptr i64 %7916 to i32*
  %7920 = load i32, i32* %7919
  %7921 = sext i32 %7920 to i64
  store i64 %7921, i64* %RCX.i323, align 8
  store %struct.Memory* %loadMem_4633ef, %struct.Memory** %MEMORY
  %loadMem_4633f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7923 = getelementptr inbounds %struct.GPR, %struct.GPR* %7922, i32 0, i32 33
  %7924 = getelementptr inbounds %struct.Reg, %struct.Reg* %7923, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %7924 to i64*
  %7925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7926 = getelementptr inbounds %struct.GPR, %struct.GPR* %7925, i32 0, i32 1
  %7927 = getelementptr inbounds %struct.Reg, %struct.Reg* %7926, i32 0, i32 0
  %RAX.i319 = bitcast %union.anon* %7927 to i64*
  %7928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7929 = getelementptr inbounds %struct.GPR, %struct.GPR* %7928, i32 0, i32 5
  %7930 = getelementptr inbounds %struct.Reg, %struct.Reg* %7929, i32 0, i32 0
  %RCX.i320 = bitcast %union.anon* %7930 to i64*
  %7931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7932 = getelementptr inbounds %struct.GPR, %struct.GPR* %7931, i32 0, i32 7
  %7933 = getelementptr inbounds %struct.Reg, %struct.Reg* %7932, i32 0, i32 0
  %RDX.i321 = bitcast %union.anon* %7933 to i64*
  %7934 = load i64, i64* %RAX.i319
  %7935 = load i64, i64* %RCX.i320
  %7936 = mul i64 %7935, 4
  %7937 = add i64 %7934, 200
  %7938 = add i64 %7937, %7936
  %7939 = load i64, i64* %PC.i318
  %7940 = add i64 %7939, 7
  store i64 %7940, i64* %PC.i318
  %7941 = inttoptr i64 %7938 to i32*
  %7942 = load i32, i32* %7941
  %7943 = zext i32 %7942 to i64
  store i64 %7943, i64* %RDX.i321, align 8
  store %struct.Memory* %loadMem_4633f3, %struct.Memory** %MEMORY
  %loadMem_4633fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7945 = getelementptr inbounds %struct.GPR, %struct.GPR* %7944, i32 0, i32 33
  %7946 = getelementptr inbounds %struct.Reg, %struct.Reg* %7945, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %7946 to i64*
  %7947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7948 = getelementptr inbounds %struct.GPR, %struct.GPR* %7947, i32 0, i32 7
  %7949 = getelementptr inbounds %struct.Reg, %struct.Reg* %7948, i32 0, i32 0
  %EDX.i316 = bitcast %union.anon* %7949 to i32*
  %7950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7951 = getelementptr inbounds %struct.GPR, %struct.GPR* %7950, i32 0, i32 15
  %7952 = getelementptr inbounds %struct.Reg, %struct.Reg* %7951, i32 0, i32 0
  %RBP.i317 = bitcast %union.anon* %7952 to i64*
  %7953 = load i64, i64* %RBP.i317
  %7954 = sub i64 %7953, 92
  %7955 = load i32, i32* %EDX.i316
  %7956 = zext i32 %7955 to i64
  %7957 = load i64, i64* %PC.i315
  %7958 = add i64 %7957, 3
  store i64 %7958, i64* %PC.i315
  %7959 = inttoptr i64 %7954 to i32*
  store i32 %7955, i32* %7959
  store %struct.Memory* %loadMem_4633fa, %struct.Memory** %MEMORY
  %loadMem_4633fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7961 = getelementptr inbounds %struct.GPR, %struct.GPR* %7960, i32 0, i32 33
  %7962 = getelementptr inbounds %struct.Reg, %struct.Reg* %7961, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %7962 to i64*
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7964 = getelementptr inbounds %struct.GPR, %struct.GPR* %7963, i32 0, i32 7
  %7965 = getelementptr inbounds %struct.Reg, %struct.Reg* %7964, i32 0, i32 0
  %RDX.i313 = bitcast %union.anon* %7965 to i64*
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7967 = getelementptr inbounds %struct.GPR, %struct.GPR* %7966, i32 0, i32 15
  %7968 = getelementptr inbounds %struct.Reg, %struct.Reg* %7967, i32 0, i32 0
  %RBP.i314 = bitcast %union.anon* %7968 to i64*
  %7969 = load i64, i64* %RBP.i314
  %7970 = sub i64 %7969, 88
  %7971 = load i64, i64* %PC.i312
  %7972 = add i64 %7971, 3
  store i64 %7972, i64* %PC.i312
  %7973 = inttoptr i64 %7970 to i32*
  %7974 = load i32, i32* %7973
  %7975 = zext i32 %7974 to i64
  store i64 %7975, i64* %RDX.i313, align 8
  store %struct.Memory* %loadMem_4633fd, %struct.Memory** %MEMORY
  %loadMem_463400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7977 = getelementptr inbounds %struct.GPR, %struct.GPR* %7976, i32 0, i32 33
  %7978 = getelementptr inbounds %struct.Reg, %struct.Reg* %7977, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %7978 to i64*
  %7979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7980 = getelementptr inbounds %struct.GPR, %struct.GPR* %7979, i32 0, i32 7
  %7981 = getelementptr inbounds %struct.Reg, %struct.Reg* %7980, i32 0, i32 0
  %EDX.i310 = bitcast %union.anon* %7981 to i32*
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7983 = getelementptr inbounds %struct.GPR, %struct.GPR* %7982, i32 0, i32 15
  %7984 = getelementptr inbounds %struct.Reg, %struct.Reg* %7983, i32 0, i32 0
  %RBP.i311 = bitcast %union.anon* %7984 to i64*
  %7985 = load i64, i64* %RBP.i311
  %7986 = sub i64 %7985, 96
  %7987 = load i32, i32* %EDX.i310
  %7988 = zext i32 %7987 to i64
  %7989 = load i64, i64* %PC.i309
  %7990 = add i64 %7989, 3
  store i64 %7990, i64* %PC.i309
  %7991 = inttoptr i64 %7986 to i32*
  store i32 %7987, i32* %7991
  store %struct.Memory* %loadMem_463400, %struct.Memory** %MEMORY
  br label %block_.L_463403

block_.L_463403:                                  ; preds = %block_4633eb, %block_4633d3
  %loadMem_463403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7993 = getelementptr inbounds %struct.GPR, %struct.GPR* %7992, i32 0, i32 33
  %7994 = getelementptr inbounds %struct.Reg, %struct.Reg* %7993, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %7994 to i64*
  %7995 = load i64, i64* %PC.i308
  %7996 = add i64 %7995, 5
  %7997 = load i64, i64* %PC.i308
  %7998 = add i64 %7997, 5
  store i64 %7998, i64* %PC.i308
  %7999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7996, i64* %7999, align 8
  store %struct.Memory* %loadMem_463403, %struct.Memory** %MEMORY
  br label %block_.L_463408

block_.L_463408:                                  ; preds = %block_.L_463403
  %loadMem_463408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8001 = getelementptr inbounds %struct.GPR, %struct.GPR* %8000, i32 0, i32 33
  %8002 = getelementptr inbounds %struct.Reg, %struct.Reg* %8001, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %8002 to i64*
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8004 = getelementptr inbounds %struct.GPR, %struct.GPR* %8003, i32 0, i32 1
  %8005 = getelementptr inbounds %struct.Reg, %struct.Reg* %8004, i32 0, i32 0
  %RAX.i306 = bitcast %union.anon* %8005 to i64*
  %8006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8007 = getelementptr inbounds %struct.GPR, %struct.GPR* %8006, i32 0, i32 15
  %8008 = getelementptr inbounds %struct.Reg, %struct.Reg* %8007, i32 0, i32 0
  %RBP.i307 = bitcast %union.anon* %8008 to i64*
  %8009 = load i64, i64* %RBP.i307
  %8010 = sub i64 %8009, 88
  %8011 = load i64, i64* %PC.i305
  %8012 = add i64 %8011, 3
  store i64 %8012, i64* %PC.i305
  %8013 = inttoptr i64 %8010 to i32*
  %8014 = load i32, i32* %8013
  %8015 = zext i32 %8014 to i64
  store i64 %8015, i64* %RAX.i306, align 8
  store %struct.Memory* %loadMem_463408, %struct.Memory** %MEMORY
  %loadMem_46340b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8017 = getelementptr inbounds %struct.GPR, %struct.GPR* %8016, i32 0, i32 33
  %8018 = getelementptr inbounds %struct.Reg, %struct.Reg* %8017, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %8018 to i64*
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8020 = getelementptr inbounds %struct.GPR, %struct.GPR* %8019, i32 0, i32 1
  %8021 = getelementptr inbounds %struct.Reg, %struct.Reg* %8020, i32 0, i32 0
  %RAX.i304 = bitcast %union.anon* %8021 to i64*
  %8022 = load i64, i64* %RAX.i304
  %8023 = load i64, i64* %PC.i303
  %8024 = add i64 %8023, 3
  store i64 %8024, i64* %PC.i303
  %8025 = trunc i64 %8022 to i32
  %8026 = add i32 1, %8025
  %8027 = zext i32 %8026 to i64
  store i64 %8027, i64* %RAX.i304, align 8
  %8028 = icmp ult i32 %8026, %8025
  %8029 = icmp ult i32 %8026, 1
  %8030 = or i1 %8028, %8029
  %8031 = zext i1 %8030 to i8
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8031, i8* %8032, align 1
  %8033 = and i32 %8026, 255
  %8034 = call i32 @llvm.ctpop.i32(i32 %8033)
  %8035 = trunc i32 %8034 to i8
  %8036 = and i8 %8035, 1
  %8037 = xor i8 %8036, 1
  %8038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8037, i8* %8038, align 1
  %8039 = xor i64 1, %8022
  %8040 = trunc i64 %8039 to i32
  %8041 = xor i32 %8040, %8026
  %8042 = lshr i32 %8041, 4
  %8043 = trunc i32 %8042 to i8
  %8044 = and i8 %8043, 1
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8044, i8* %8045, align 1
  %8046 = icmp eq i32 %8026, 0
  %8047 = zext i1 %8046 to i8
  %8048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8047, i8* %8048, align 1
  %8049 = lshr i32 %8026, 31
  %8050 = trunc i32 %8049 to i8
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8050, i8* %8051, align 1
  %8052 = lshr i32 %8025, 31
  %8053 = xor i32 %8049, %8052
  %8054 = add i32 %8053, %8049
  %8055 = icmp eq i32 %8054, 2
  %8056 = zext i1 %8055 to i8
  %8057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8056, i8* %8057, align 1
  store %struct.Memory* %loadMem_46340b, %struct.Memory** %MEMORY
  %loadMem_46340e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8059 = getelementptr inbounds %struct.GPR, %struct.GPR* %8058, i32 0, i32 33
  %8060 = getelementptr inbounds %struct.Reg, %struct.Reg* %8059, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %8060 to i64*
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8062 = getelementptr inbounds %struct.GPR, %struct.GPR* %8061, i32 0, i32 1
  %8063 = getelementptr inbounds %struct.Reg, %struct.Reg* %8062, i32 0, i32 0
  %EAX.i301 = bitcast %union.anon* %8063 to i32*
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8065 = getelementptr inbounds %struct.GPR, %struct.GPR* %8064, i32 0, i32 15
  %8066 = getelementptr inbounds %struct.Reg, %struct.Reg* %8065, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %8066 to i64*
  %8067 = load i64, i64* %RBP.i302
  %8068 = sub i64 %8067, 88
  %8069 = load i32, i32* %EAX.i301
  %8070 = zext i32 %8069 to i64
  %8071 = load i64, i64* %PC.i300
  %8072 = add i64 %8071, 3
  store i64 %8072, i64* %PC.i300
  %8073 = inttoptr i64 %8068 to i32*
  store i32 %8069, i32* %8073
  store %struct.Memory* %loadMem_46340e, %struct.Memory** %MEMORY
  %loadMem_463411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8075 = getelementptr inbounds %struct.GPR, %struct.GPR* %8074, i32 0, i32 33
  %8076 = getelementptr inbounds %struct.Reg, %struct.Reg* %8075, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %8076 to i64*
  %8077 = load i64, i64* %PC.i299
  %8078 = add i64 %8077, -81
  %8079 = load i64, i64* %PC.i299
  %8080 = add i64 %8079, 5
  store i64 %8080, i64* %PC.i299
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8078, i64* %8081, align 8
  store %struct.Memory* %loadMem_463411, %struct.Memory** %MEMORY
  br label %block_.L_4633c0

block_.L_463416:                                  ; preds = %block_.L_4633c0
  %loadMem_463416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8083 = getelementptr inbounds %struct.GPR, %struct.GPR* %8082, i32 0, i32 33
  %8084 = getelementptr inbounds %struct.Reg, %struct.Reg* %8083, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %8084 to i64*
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8086 = getelementptr inbounds %struct.GPR, %struct.GPR* %8085, i32 0, i32 15
  %8087 = getelementptr inbounds %struct.Reg, %struct.Reg* %8086, i32 0, i32 0
  %RBP.i298 = bitcast %union.anon* %8087 to i64*
  %8088 = load i64, i64* %RBP.i298
  %8089 = sub i64 %8088, 96
  %8090 = load i64, i64* %PC.i297
  %8091 = add i64 %8090, 4
  store i64 %8091, i64* %PC.i297
  %8092 = inttoptr i64 %8089 to i32*
  %8093 = load i32, i32* %8092
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8094, align 1
  %8095 = and i32 %8093, 255
  %8096 = call i32 @llvm.ctpop.i32(i32 %8095)
  %8097 = trunc i32 %8096 to i8
  %8098 = and i8 %8097, 1
  %8099 = xor i8 %8098, 1
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8099, i8* %8100, align 1
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8101, align 1
  %8102 = icmp eq i32 %8093, 0
  %8103 = zext i1 %8102 to i8
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8103, i8* %8104, align 1
  %8105 = lshr i32 %8093, 31
  %8106 = trunc i32 %8105 to i8
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8106, i8* %8107, align 1
  %8108 = lshr i32 %8093, 31
  %8109 = xor i32 %8105, %8108
  %8110 = add i32 %8109, %8108
  %8111 = icmp eq i32 %8110, 2
  %8112 = zext i1 %8111 to i8
  %8113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8112, i8* %8113, align 1
  store %struct.Memory* %loadMem_463416, %struct.Memory** %MEMORY
  %loadMem_46341a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8115 = getelementptr inbounds %struct.GPR, %struct.GPR* %8114, i32 0, i32 33
  %8116 = getelementptr inbounds %struct.Reg, %struct.Reg* %8115, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %8116 to i64*
  %8117 = load i64, i64* %PC.i296
  %8118 = add i64 %8117, 110
  %8119 = load i64, i64* %PC.i296
  %8120 = add i64 %8119, 6
  %8121 = load i64, i64* %PC.i296
  %8122 = add i64 %8121, 6
  store i64 %8122, i64* %PC.i296
  %8123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8124 = load i8, i8* %8123, align 1
  store i8 %8124, i8* %BRANCH_TAKEN, align 1
  %8125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8126 = icmp ne i8 %8124, 0
  %8127 = select i1 %8126, i64 %8118, i64 %8120
  store i64 %8127, i64* %8125, align 8
  store %struct.Memory* %loadMem_46341a, %struct.Memory** %MEMORY
  %loadBr_46341a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46341a = icmp eq i8 %loadBr_46341a, 1
  br i1 %cmpBr_46341a, label %block_.L_463488, label %block_463420

block_463420:                                     ; preds = %block_.L_463416
  %loadMem_463420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8129 = getelementptr inbounds %struct.GPR, %struct.GPR* %8128, i32 0, i32 33
  %8130 = getelementptr inbounds %struct.Reg, %struct.Reg* %8129, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %8130 to i64*
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8132 = getelementptr inbounds %struct.GPR, %struct.GPR* %8131, i32 0, i32 1
  %8133 = getelementptr inbounds %struct.Reg, %struct.Reg* %8132, i32 0, i32 0
  %RAX.i294 = bitcast %union.anon* %8133 to i64*
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8135 = getelementptr inbounds %struct.GPR, %struct.GPR* %8134, i32 0, i32 15
  %8136 = getelementptr inbounds %struct.Reg, %struct.Reg* %8135, i32 0, i32 0
  %RBP.i295 = bitcast %union.anon* %8136 to i64*
  %8137 = load i64, i64* %RBP.i295
  %8138 = sub i64 %8137, 48
  %8139 = load i64, i64* %PC.i293
  %8140 = add i64 %8139, 4
  store i64 %8140, i64* %PC.i293
  %8141 = inttoptr i64 %8138 to i64*
  %8142 = load i64, i64* %8141
  store i64 %8142, i64* %RAX.i294, align 8
  store %struct.Memory* %loadMem_463420, %struct.Memory** %MEMORY
  %loadMem_463424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8144 = getelementptr inbounds %struct.GPR, %struct.GPR* %8143, i32 0, i32 33
  %8145 = getelementptr inbounds %struct.Reg, %struct.Reg* %8144, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %8145 to i64*
  %8146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8147 = getelementptr inbounds %struct.GPR, %struct.GPR* %8146, i32 0, i32 5
  %8148 = getelementptr inbounds %struct.Reg, %struct.Reg* %8147, i32 0, i32 0
  %RCX.i291 = bitcast %union.anon* %8148 to i64*
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8150 = getelementptr inbounds %struct.GPR, %struct.GPR* %8149, i32 0, i32 15
  %8151 = getelementptr inbounds %struct.Reg, %struct.Reg* %8150, i32 0, i32 0
  %RBP.i292 = bitcast %union.anon* %8151 to i64*
  %8152 = load i64, i64* %RBP.i292
  %8153 = sub i64 %8152, 96
  %8154 = load i64, i64* %PC.i290
  %8155 = add i64 %8154, 4
  store i64 %8155, i64* %PC.i290
  %8156 = inttoptr i64 %8153 to i32*
  %8157 = load i32, i32* %8156
  %8158 = sext i32 %8157 to i64
  store i64 %8158, i64* %RCX.i291, align 8
  store %struct.Memory* %loadMem_463424, %struct.Memory** %MEMORY
  %loadMem_463428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8160 = getelementptr inbounds %struct.GPR, %struct.GPR* %8159, i32 0, i32 33
  %8161 = getelementptr inbounds %struct.Reg, %struct.Reg* %8160, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %8161 to i64*
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8163 = getelementptr inbounds %struct.GPR, %struct.GPR* %8162, i32 0, i32 1
  %8164 = getelementptr inbounds %struct.Reg, %struct.Reg* %8163, i32 0, i32 0
  %RAX.i287 = bitcast %union.anon* %8164 to i64*
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8166 = getelementptr inbounds %struct.GPR, %struct.GPR* %8165, i32 0, i32 5
  %8167 = getelementptr inbounds %struct.Reg, %struct.Reg* %8166, i32 0, i32 0
  %RCX.i288 = bitcast %union.anon* %8167 to i64*
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8169 = getelementptr inbounds %struct.GPR, %struct.GPR* %8168, i32 0, i32 7
  %8170 = getelementptr inbounds %struct.Reg, %struct.Reg* %8169, i32 0, i32 0
  %RDX.i289 = bitcast %union.anon* %8170 to i64*
  %8171 = load i64, i64* %RAX.i287
  %8172 = load i64, i64* %RCX.i288
  %8173 = mul i64 %8172, 4
  %8174 = add i64 %8173, %8171
  %8175 = load i64, i64* %PC.i286
  %8176 = add i64 %8175, 3
  store i64 %8176, i64* %PC.i286
  %8177 = inttoptr i64 %8174 to i32*
  %8178 = load i32, i32* %8177
  %8179 = zext i32 %8178 to i64
  store i64 %8179, i64* %RDX.i289, align 8
  store %struct.Memory* %loadMem_463428, %struct.Memory** %MEMORY
  %loadMem_46342b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8181 = getelementptr inbounds %struct.GPR, %struct.GPR* %8180, i32 0, i32 33
  %8182 = getelementptr inbounds %struct.Reg, %struct.Reg* %8181, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %8182 to i64*
  %8183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8184 = getelementptr inbounds %struct.GPR, %struct.GPR* %8183, i32 0, i32 7
  %8185 = getelementptr inbounds %struct.Reg, %struct.Reg* %8184, i32 0, i32 0
  %EDX.i284 = bitcast %union.anon* %8185 to i32*
  %8186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8187 = getelementptr inbounds %struct.GPR, %struct.GPR* %8186, i32 0, i32 15
  %8188 = getelementptr inbounds %struct.Reg, %struct.Reg* %8187, i32 0, i32 0
  %RBP.i285 = bitcast %union.anon* %8188 to i64*
  %8189 = load i64, i64* %RBP.i285
  %8190 = sub i64 %8189, 152
  %8191 = load i32, i32* %EDX.i284
  %8192 = zext i32 %8191 to i64
  %8193 = load i64, i64* %PC.i283
  %8194 = add i64 %8193, 6
  store i64 %8194, i64* %PC.i283
  %8195 = inttoptr i64 %8190 to i32*
  store i32 %8191, i32* %8195
  store %struct.Memory* %loadMem_46342b, %struct.Memory** %MEMORY
  %loadMem_463431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8197 = getelementptr inbounds %struct.GPR, %struct.GPR* %8196, i32 0, i32 33
  %8198 = getelementptr inbounds %struct.Reg, %struct.Reg* %8197, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %8198 to i64*
  %8199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8200 = getelementptr inbounds %struct.GPR, %struct.GPR* %8199, i32 0, i32 1
  %8201 = getelementptr inbounds %struct.Reg, %struct.Reg* %8200, i32 0, i32 0
  %RAX.i281 = bitcast %union.anon* %8201 to i64*
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8203 = getelementptr inbounds %struct.GPR, %struct.GPR* %8202, i32 0, i32 15
  %8204 = getelementptr inbounds %struct.Reg, %struct.Reg* %8203, i32 0, i32 0
  %RBP.i282 = bitcast %union.anon* %8204 to i64*
  %8205 = load i64, i64* %RBP.i282
  %8206 = sub i64 %8205, 48
  %8207 = load i64, i64* %PC.i280
  %8208 = add i64 %8207, 4
  store i64 %8208, i64* %PC.i280
  %8209 = inttoptr i64 %8206 to i64*
  %8210 = load i64, i64* %8209
  store i64 %8210, i64* %RAX.i281, align 8
  store %struct.Memory* %loadMem_463431, %struct.Memory** %MEMORY
  %loadMem_463435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8212 = getelementptr inbounds %struct.GPR, %struct.GPR* %8211, i32 0, i32 33
  %8213 = getelementptr inbounds %struct.Reg, %struct.Reg* %8212, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %8213 to i64*
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8215 = getelementptr inbounds %struct.GPR, %struct.GPR* %8214, i32 0, i32 5
  %8216 = getelementptr inbounds %struct.Reg, %struct.Reg* %8215, i32 0, i32 0
  %RCX.i278 = bitcast %union.anon* %8216 to i64*
  %8217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8218 = getelementptr inbounds %struct.GPR, %struct.GPR* %8217, i32 0, i32 15
  %8219 = getelementptr inbounds %struct.Reg, %struct.Reg* %8218, i32 0, i32 0
  %RBP.i279 = bitcast %union.anon* %8219 to i64*
  %8220 = load i64, i64* %RBP.i279
  %8221 = sub i64 %8220, 84
  %8222 = load i64, i64* %PC.i277
  %8223 = add i64 %8222, 4
  store i64 %8223, i64* %PC.i277
  %8224 = inttoptr i64 %8221 to i32*
  %8225 = load i32, i32* %8224
  %8226 = sext i32 %8225 to i64
  store i64 %8226, i64* %RCX.i278, align 8
  store %struct.Memory* %loadMem_463435, %struct.Memory** %MEMORY
  %loadMem_463439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8228 = getelementptr inbounds %struct.GPR, %struct.GPR* %8227, i32 0, i32 33
  %8229 = getelementptr inbounds %struct.Reg, %struct.Reg* %8228, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %8229 to i64*
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8231 = getelementptr inbounds %struct.GPR, %struct.GPR* %8230, i32 0, i32 1
  %8232 = getelementptr inbounds %struct.Reg, %struct.Reg* %8231, i32 0, i32 0
  %RAX.i274 = bitcast %union.anon* %8232 to i64*
  %8233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8234 = getelementptr inbounds %struct.GPR, %struct.GPR* %8233, i32 0, i32 5
  %8235 = getelementptr inbounds %struct.Reg, %struct.Reg* %8234, i32 0, i32 0
  %RCX.i275 = bitcast %union.anon* %8235 to i64*
  %8236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8237 = getelementptr inbounds %struct.GPR, %struct.GPR* %8236, i32 0, i32 7
  %8238 = getelementptr inbounds %struct.Reg, %struct.Reg* %8237, i32 0, i32 0
  %RDX.i276 = bitcast %union.anon* %8238 to i64*
  %8239 = load i64, i64* %RAX.i274
  %8240 = load i64, i64* %RCX.i275
  %8241 = mul i64 %8240, 4
  %8242 = add i64 %8241, %8239
  %8243 = load i64, i64* %PC.i273
  %8244 = add i64 %8243, 3
  store i64 %8244, i64* %PC.i273
  %8245 = inttoptr i64 %8242 to i32*
  %8246 = load i32, i32* %8245
  %8247 = zext i32 %8246 to i64
  store i64 %8247, i64* %RDX.i276, align 8
  store %struct.Memory* %loadMem_463439, %struct.Memory** %MEMORY
  %loadMem_46343c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8249 = getelementptr inbounds %struct.GPR, %struct.GPR* %8248, i32 0, i32 33
  %8250 = getelementptr inbounds %struct.Reg, %struct.Reg* %8249, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %8250 to i64*
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8252 = getelementptr inbounds %struct.GPR, %struct.GPR* %8251, i32 0, i32 1
  %8253 = getelementptr inbounds %struct.Reg, %struct.Reg* %8252, i32 0, i32 0
  %RAX.i271 = bitcast %union.anon* %8253 to i64*
  %8254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8255 = getelementptr inbounds %struct.GPR, %struct.GPR* %8254, i32 0, i32 15
  %8256 = getelementptr inbounds %struct.Reg, %struct.Reg* %8255, i32 0, i32 0
  %RBP.i272 = bitcast %union.anon* %8256 to i64*
  %8257 = load i64, i64* %RBP.i272
  %8258 = sub i64 %8257, 48
  %8259 = load i64, i64* %PC.i270
  %8260 = add i64 %8259, 4
  store i64 %8260, i64* %PC.i270
  %8261 = inttoptr i64 %8258 to i64*
  %8262 = load i64, i64* %8261
  store i64 %8262, i64* %RAX.i271, align 8
  store %struct.Memory* %loadMem_46343c, %struct.Memory** %MEMORY
  %loadMem_463440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8264 = getelementptr inbounds %struct.GPR, %struct.GPR* %8263, i32 0, i32 33
  %8265 = getelementptr inbounds %struct.Reg, %struct.Reg* %8264, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %8265 to i64*
  %8266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8267 = getelementptr inbounds %struct.GPR, %struct.GPR* %8266, i32 0, i32 5
  %8268 = getelementptr inbounds %struct.Reg, %struct.Reg* %8267, i32 0, i32 0
  %RCX.i268 = bitcast %union.anon* %8268 to i64*
  %8269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8270 = getelementptr inbounds %struct.GPR, %struct.GPR* %8269, i32 0, i32 15
  %8271 = getelementptr inbounds %struct.Reg, %struct.Reg* %8270, i32 0, i32 0
  %RBP.i269 = bitcast %union.anon* %8271 to i64*
  %8272 = load i64, i64* %RBP.i269
  %8273 = sub i64 %8272, 96
  %8274 = load i64, i64* %PC.i267
  %8275 = add i64 %8274, 4
  store i64 %8275, i64* %PC.i267
  %8276 = inttoptr i64 %8273 to i32*
  %8277 = load i32, i32* %8276
  %8278 = sext i32 %8277 to i64
  store i64 %8278, i64* %RCX.i268, align 8
  store %struct.Memory* %loadMem_463440, %struct.Memory** %MEMORY
  %loadMem_463444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8280 = getelementptr inbounds %struct.GPR, %struct.GPR* %8279, i32 0, i32 33
  %8281 = getelementptr inbounds %struct.Reg, %struct.Reg* %8280, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %8281 to i64*
  %8282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8283 = getelementptr inbounds %struct.GPR, %struct.GPR* %8282, i32 0, i32 7
  %8284 = getelementptr inbounds %struct.Reg, %struct.Reg* %8283, i32 0, i32 0
  %EDX.i264 = bitcast %union.anon* %8284 to i32*
  %8285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8286 = getelementptr inbounds %struct.GPR, %struct.GPR* %8285, i32 0, i32 1
  %8287 = getelementptr inbounds %struct.Reg, %struct.Reg* %8286, i32 0, i32 0
  %RAX.i265 = bitcast %union.anon* %8287 to i64*
  %8288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8289 = getelementptr inbounds %struct.GPR, %struct.GPR* %8288, i32 0, i32 5
  %8290 = getelementptr inbounds %struct.Reg, %struct.Reg* %8289, i32 0, i32 0
  %RCX.i266 = bitcast %union.anon* %8290 to i64*
  %8291 = load i64, i64* %RAX.i265
  %8292 = load i64, i64* %RCX.i266
  %8293 = mul i64 %8292, 4
  %8294 = add i64 %8293, %8291
  %8295 = load i32, i32* %EDX.i264
  %8296 = zext i32 %8295 to i64
  %8297 = load i64, i64* %PC.i263
  %8298 = add i64 %8297, 3
  store i64 %8298, i64* %PC.i263
  %8299 = inttoptr i64 %8294 to i32*
  store i32 %8295, i32* %8299
  store %struct.Memory* %loadMem_463444, %struct.Memory** %MEMORY
  %loadMem_463447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8301 = getelementptr inbounds %struct.GPR, %struct.GPR* %8300, i32 0, i32 33
  %8302 = getelementptr inbounds %struct.Reg, %struct.Reg* %8301, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %8302 to i64*
  %8303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8304 = getelementptr inbounds %struct.GPR, %struct.GPR* %8303, i32 0, i32 1
  %8305 = getelementptr inbounds %struct.Reg, %struct.Reg* %8304, i32 0, i32 0
  %RAX.i261 = bitcast %union.anon* %8305 to i64*
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8307 = getelementptr inbounds %struct.GPR, %struct.GPR* %8306, i32 0, i32 15
  %8308 = getelementptr inbounds %struct.Reg, %struct.Reg* %8307, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %8308 to i64*
  %8309 = load i64, i64* %RBP.i262
  %8310 = sub i64 %8309, 48
  %8311 = load i64, i64* %PC.i260
  %8312 = add i64 %8311, 4
  store i64 %8312, i64* %PC.i260
  %8313 = inttoptr i64 %8310 to i64*
  %8314 = load i64, i64* %8313
  store i64 %8314, i64* %RAX.i261, align 8
  store %struct.Memory* %loadMem_463447, %struct.Memory** %MEMORY
  %loadMem_46344b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8316 = getelementptr inbounds %struct.GPR, %struct.GPR* %8315, i32 0, i32 33
  %8317 = getelementptr inbounds %struct.Reg, %struct.Reg* %8316, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %8317 to i64*
  %8318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8319 = getelementptr inbounds %struct.GPR, %struct.GPR* %8318, i32 0, i32 5
  %8320 = getelementptr inbounds %struct.Reg, %struct.Reg* %8319, i32 0, i32 0
  %RCX.i258 = bitcast %union.anon* %8320 to i64*
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8322 = getelementptr inbounds %struct.GPR, %struct.GPR* %8321, i32 0, i32 15
  %8323 = getelementptr inbounds %struct.Reg, %struct.Reg* %8322, i32 0, i32 0
  %RBP.i259 = bitcast %union.anon* %8323 to i64*
  %8324 = load i64, i64* %RBP.i259
  %8325 = sub i64 %8324, 84
  %8326 = load i64, i64* %PC.i257
  %8327 = add i64 %8326, 4
  store i64 %8327, i64* %PC.i257
  %8328 = inttoptr i64 %8325 to i32*
  %8329 = load i32, i32* %8328
  %8330 = sext i32 %8329 to i64
  store i64 %8330, i64* %RCX.i258, align 8
  store %struct.Memory* %loadMem_46344b, %struct.Memory** %MEMORY
  %loadMem_46344f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8332 = getelementptr inbounds %struct.GPR, %struct.GPR* %8331, i32 0, i32 33
  %8333 = getelementptr inbounds %struct.Reg, %struct.Reg* %8332, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %8333 to i64*
  %8334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8335 = getelementptr inbounds %struct.GPR, %struct.GPR* %8334, i32 0, i32 1
  %8336 = getelementptr inbounds %struct.Reg, %struct.Reg* %8335, i32 0, i32 0
  %RAX.i254 = bitcast %union.anon* %8336 to i64*
  %8337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8338 = getelementptr inbounds %struct.GPR, %struct.GPR* %8337, i32 0, i32 5
  %8339 = getelementptr inbounds %struct.Reg, %struct.Reg* %8338, i32 0, i32 0
  %RCX.i255 = bitcast %union.anon* %8339 to i64*
  %8340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8341 = getelementptr inbounds %struct.GPR, %struct.GPR* %8340, i32 0, i32 7
  %8342 = getelementptr inbounds %struct.Reg, %struct.Reg* %8341, i32 0, i32 0
  %RDX.i256 = bitcast %union.anon* %8342 to i64*
  %8343 = load i64, i64* %RAX.i254
  %8344 = load i64, i64* %RCX.i255
  %8345 = mul i64 %8344, 4
  %8346 = add i64 %8343, 200
  %8347 = add i64 %8346, %8345
  %8348 = load i64, i64* %PC.i253
  %8349 = add i64 %8348, 7
  store i64 %8349, i64* %PC.i253
  %8350 = inttoptr i64 %8347 to i32*
  %8351 = load i32, i32* %8350
  %8352 = zext i32 %8351 to i64
  store i64 %8352, i64* %RDX.i256, align 8
  store %struct.Memory* %loadMem_46344f, %struct.Memory** %MEMORY
  %loadMem_463456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8354 = getelementptr inbounds %struct.GPR, %struct.GPR* %8353, i32 0, i32 33
  %8355 = getelementptr inbounds %struct.Reg, %struct.Reg* %8354, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %8355 to i64*
  %8356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8357 = getelementptr inbounds %struct.GPR, %struct.GPR* %8356, i32 0, i32 1
  %8358 = getelementptr inbounds %struct.Reg, %struct.Reg* %8357, i32 0, i32 0
  %RAX.i251 = bitcast %union.anon* %8358 to i64*
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8360 = getelementptr inbounds %struct.GPR, %struct.GPR* %8359, i32 0, i32 15
  %8361 = getelementptr inbounds %struct.Reg, %struct.Reg* %8360, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %8361 to i64*
  %8362 = load i64, i64* %RBP.i252
  %8363 = sub i64 %8362, 48
  %8364 = load i64, i64* %PC.i250
  %8365 = add i64 %8364, 4
  store i64 %8365, i64* %PC.i250
  %8366 = inttoptr i64 %8363 to i64*
  %8367 = load i64, i64* %8366
  store i64 %8367, i64* %RAX.i251, align 8
  store %struct.Memory* %loadMem_463456, %struct.Memory** %MEMORY
  %loadMem_46345a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8369 = getelementptr inbounds %struct.GPR, %struct.GPR* %8368, i32 0, i32 33
  %8370 = getelementptr inbounds %struct.Reg, %struct.Reg* %8369, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %8370 to i64*
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8372 = getelementptr inbounds %struct.GPR, %struct.GPR* %8371, i32 0, i32 5
  %8373 = getelementptr inbounds %struct.Reg, %struct.Reg* %8372, i32 0, i32 0
  %RCX.i248 = bitcast %union.anon* %8373 to i64*
  %8374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8375 = getelementptr inbounds %struct.GPR, %struct.GPR* %8374, i32 0, i32 15
  %8376 = getelementptr inbounds %struct.Reg, %struct.Reg* %8375, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %8376 to i64*
  %8377 = load i64, i64* %RBP.i249
  %8378 = sub i64 %8377, 96
  %8379 = load i64, i64* %PC.i247
  %8380 = add i64 %8379, 4
  store i64 %8380, i64* %PC.i247
  %8381 = inttoptr i64 %8378 to i32*
  %8382 = load i32, i32* %8381
  %8383 = sext i32 %8382 to i64
  store i64 %8383, i64* %RCX.i248, align 8
  store %struct.Memory* %loadMem_46345a, %struct.Memory** %MEMORY
  %loadMem_46345e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8385 = getelementptr inbounds %struct.GPR, %struct.GPR* %8384, i32 0, i32 33
  %8386 = getelementptr inbounds %struct.Reg, %struct.Reg* %8385, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %8386 to i64*
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8388 = getelementptr inbounds %struct.GPR, %struct.GPR* %8387, i32 0, i32 7
  %8389 = getelementptr inbounds %struct.Reg, %struct.Reg* %8388, i32 0, i32 0
  %EDX.i244 = bitcast %union.anon* %8389 to i32*
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8391 = getelementptr inbounds %struct.GPR, %struct.GPR* %8390, i32 0, i32 1
  %8392 = getelementptr inbounds %struct.Reg, %struct.Reg* %8391, i32 0, i32 0
  %RAX.i245 = bitcast %union.anon* %8392 to i64*
  %8393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8394 = getelementptr inbounds %struct.GPR, %struct.GPR* %8393, i32 0, i32 5
  %8395 = getelementptr inbounds %struct.Reg, %struct.Reg* %8394, i32 0, i32 0
  %RCX.i246 = bitcast %union.anon* %8395 to i64*
  %8396 = load i64, i64* %RAX.i245
  %8397 = load i64, i64* %RCX.i246
  %8398 = mul i64 %8397, 4
  %8399 = add i64 %8396, 200
  %8400 = add i64 %8399, %8398
  %8401 = load i32, i32* %EDX.i244
  %8402 = zext i32 %8401 to i64
  %8403 = load i64, i64* %PC.i243
  %8404 = add i64 %8403, 7
  store i64 %8404, i64* %PC.i243
  %8405 = inttoptr i64 %8400 to i32*
  store i32 %8401, i32* %8405
  store %struct.Memory* %loadMem_46345e, %struct.Memory** %MEMORY
  %loadMem_463465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 33
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %8408 to i64*
  %8409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8410 = getelementptr inbounds %struct.GPR, %struct.GPR* %8409, i32 0, i32 7
  %8411 = getelementptr inbounds %struct.Reg, %struct.Reg* %8410, i32 0, i32 0
  %RDX.i241 = bitcast %union.anon* %8411 to i64*
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8413 = getelementptr inbounds %struct.GPR, %struct.GPR* %8412, i32 0, i32 15
  %8414 = getelementptr inbounds %struct.Reg, %struct.Reg* %8413, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %8414 to i64*
  %8415 = load i64, i64* %RBP.i242
  %8416 = sub i64 %8415, 152
  %8417 = load i64, i64* %PC.i240
  %8418 = add i64 %8417, 6
  store i64 %8418, i64* %PC.i240
  %8419 = inttoptr i64 %8416 to i32*
  %8420 = load i32, i32* %8419
  %8421 = zext i32 %8420 to i64
  store i64 %8421, i64* %RDX.i241, align 8
  store %struct.Memory* %loadMem_463465, %struct.Memory** %MEMORY
  %loadMem_46346b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 33
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %8424 to i64*
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8426 = getelementptr inbounds %struct.GPR, %struct.GPR* %8425, i32 0, i32 1
  %8427 = getelementptr inbounds %struct.Reg, %struct.Reg* %8426, i32 0, i32 0
  %RAX.i238 = bitcast %union.anon* %8427 to i64*
  %8428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8429 = getelementptr inbounds %struct.GPR, %struct.GPR* %8428, i32 0, i32 15
  %8430 = getelementptr inbounds %struct.Reg, %struct.Reg* %8429, i32 0, i32 0
  %RBP.i239 = bitcast %union.anon* %8430 to i64*
  %8431 = load i64, i64* %RBP.i239
  %8432 = sub i64 %8431, 48
  %8433 = load i64, i64* %PC.i237
  %8434 = add i64 %8433, 4
  store i64 %8434, i64* %PC.i237
  %8435 = inttoptr i64 %8432 to i64*
  %8436 = load i64, i64* %8435
  store i64 %8436, i64* %RAX.i238, align 8
  store %struct.Memory* %loadMem_46346b, %struct.Memory** %MEMORY
  %loadMem_46346f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8438 = getelementptr inbounds %struct.GPR, %struct.GPR* %8437, i32 0, i32 33
  %8439 = getelementptr inbounds %struct.Reg, %struct.Reg* %8438, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %8439 to i64*
  %8440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8441 = getelementptr inbounds %struct.GPR, %struct.GPR* %8440, i32 0, i32 5
  %8442 = getelementptr inbounds %struct.Reg, %struct.Reg* %8441, i32 0, i32 0
  %RCX.i235 = bitcast %union.anon* %8442 to i64*
  %8443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8444 = getelementptr inbounds %struct.GPR, %struct.GPR* %8443, i32 0, i32 15
  %8445 = getelementptr inbounds %struct.Reg, %struct.Reg* %8444, i32 0, i32 0
  %RBP.i236 = bitcast %union.anon* %8445 to i64*
  %8446 = load i64, i64* %RBP.i236
  %8447 = sub i64 %8446, 84
  %8448 = load i64, i64* %PC.i234
  %8449 = add i64 %8448, 4
  store i64 %8449, i64* %PC.i234
  %8450 = inttoptr i64 %8447 to i32*
  %8451 = load i32, i32* %8450
  %8452 = sext i32 %8451 to i64
  store i64 %8452, i64* %RCX.i235, align 8
  store %struct.Memory* %loadMem_46346f, %struct.Memory** %MEMORY
  %loadMem_463473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8454 = getelementptr inbounds %struct.GPR, %struct.GPR* %8453, i32 0, i32 33
  %8455 = getelementptr inbounds %struct.Reg, %struct.Reg* %8454, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %8455 to i64*
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8457 = getelementptr inbounds %struct.GPR, %struct.GPR* %8456, i32 0, i32 7
  %8458 = getelementptr inbounds %struct.Reg, %struct.Reg* %8457, i32 0, i32 0
  %EDX.i231 = bitcast %union.anon* %8458 to i32*
  %8459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8460 = getelementptr inbounds %struct.GPR, %struct.GPR* %8459, i32 0, i32 1
  %8461 = getelementptr inbounds %struct.Reg, %struct.Reg* %8460, i32 0, i32 0
  %RAX.i232 = bitcast %union.anon* %8461 to i64*
  %8462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8463 = getelementptr inbounds %struct.GPR, %struct.GPR* %8462, i32 0, i32 5
  %8464 = getelementptr inbounds %struct.Reg, %struct.Reg* %8463, i32 0, i32 0
  %RCX.i233 = bitcast %union.anon* %8464 to i64*
  %8465 = load i64, i64* %RAX.i232
  %8466 = load i64, i64* %RCX.i233
  %8467 = mul i64 %8466, 4
  %8468 = add i64 %8467, %8465
  %8469 = load i32, i32* %EDX.i231
  %8470 = zext i32 %8469 to i64
  %8471 = load i64, i64* %PC.i230
  %8472 = add i64 %8471, 3
  store i64 %8472, i64* %PC.i230
  %8473 = inttoptr i64 %8468 to i32*
  store i32 %8469, i32* %8473
  store %struct.Memory* %loadMem_463473, %struct.Memory** %MEMORY
  %loadMem_463476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8475 = getelementptr inbounds %struct.GPR, %struct.GPR* %8474, i32 0, i32 33
  %8476 = getelementptr inbounds %struct.Reg, %struct.Reg* %8475, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %8476 to i64*
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8478 = getelementptr inbounds %struct.GPR, %struct.GPR* %8477, i32 0, i32 7
  %8479 = getelementptr inbounds %struct.Reg, %struct.Reg* %8478, i32 0, i32 0
  %RDX.i228 = bitcast %union.anon* %8479 to i64*
  %8480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8481 = getelementptr inbounds %struct.GPR, %struct.GPR* %8480, i32 0, i32 15
  %8482 = getelementptr inbounds %struct.Reg, %struct.Reg* %8481, i32 0, i32 0
  %RBP.i229 = bitcast %union.anon* %8482 to i64*
  %8483 = load i64, i64* %RBP.i229
  %8484 = sub i64 %8483, 92
  %8485 = load i64, i64* %PC.i227
  %8486 = add i64 %8485, 3
  store i64 %8486, i64* %PC.i227
  %8487 = inttoptr i64 %8484 to i32*
  %8488 = load i32, i32* %8487
  %8489 = zext i32 %8488 to i64
  store i64 %8489, i64* %RDX.i228, align 8
  store %struct.Memory* %loadMem_463476, %struct.Memory** %MEMORY
  %loadMem_463479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8491 = getelementptr inbounds %struct.GPR, %struct.GPR* %8490, i32 0, i32 33
  %8492 = getelementptr inbounds %struct.Reg, %struct.Reg* %8491, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %8492 to i64*
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 1
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %RAX.i225 = bitcast %union.anon* %8495 to i64*
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8497 = getelementptr inbounds %struct.GPR, %struct.GPR* %8496, i32 0, i32 15
  %8498 = getelementptr inbounds %struct.Reg, %struct.Reg* %8497, i32 0, i32 0
  %RBP.i226 = bitcast %union.anon* %8498 to i64*
  %8499 = load i64, i64* %RBP.i226
  %8500 = sub i64 %8499, 48
  %8501 = load i64, i64* %PC.i224
  %8502 = add i64 %8501, 4
  store i64 %8502, i64* %PC.i224
  %8503 = inttoptr i64 %8500 to i64*
  %8504 = load i64, i64* %8503
  store i64 %8504, i64* %RAX.i225, align 8
  store %struct.Memory* %loadMem_463479, %struct.Memory** %MEMORY
  %loadMem_46347d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8506 = getelementptr inbounds %struct.GPR, %struct.GPR* %8505, i32 0, i32 33
  %8507 = getelementptr inbounds %struct.Reg, %struct.Reg* %8506, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %8507 to i64*
  %8508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8509 = getelementptr inbounds %struct.GPR, %struct.GPR* %8508, i32 0, i32 5
  %8510 = getelementptr inbounds %struct.Reg, %struct.Reg* %8509, i32 0, i32 0
  %RCX.i222 = bitcast %union.anon* %8510 to i64*
  %8511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8512 = getelementptr inbounds %struct.GPR, %struct.GPR* %8511, i32 0, i32 15
  %8513 = getelementptr inbounds %struct.Reg, %struct.Reg* %8512, i32 0, i32 0
  %RBP.i223 = bitcast %union.anon* %8513 to i64*
  %8514 = load i64, i64* %RBP.i223
  %8515 = sub i64 %8514, 84
  %8516 = load i64, i64* %PC.i221
  %8517 = add i64 %8516, 4
  store i64 %8517, i64* %PC.i221
  %8518 = inttoptr i64 %8515 to i32*
  %8519 = load i32, i32* %8518
  %8520 = sext i32 %8519 to i64
  store i64 %8520, i64* %RCX.i222, align 8
  store %struct.Memory* %loadMem_46347d, %struct.Memory** %MEMORY
  %loadMem_463481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8522 = getelementptr inbounds %struct.GPR, %struct.GPR* %8521, i32 0, i32 33
  %8523 = getelementptr inbounds %struct.Reg, %struct.Reg* %8522, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %8523 to i64*
  %8524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8525 = getelementptr inbounds %struct.GPR, %struct.GPR* %8524, i32 0, i32 7
  %8526 = getelementptr inbounds %struct.Reg, %struct.Reg* %8525, i32 0, i32 0
  %EDX.i218 = bitcast %union.anon* %8526 to i32*
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8528 = getelementptr inbounds %struct.GPR, %struct.GPR* %8527, i32 0, i32 1
  %8529 = getelementptr inbounds %struct.Reg, %struct.Reg* %8528, i32 0, i32 0
  %RAX.i219 = bitcast %union.anon* %8529 to i64*
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8531 = getelementptr inbounds %struct.GPR, %struct.GPR* %8530, i32 0, i32 5
  %8532 = getelementptr inbounds %struct.Reg, %struct.Reg* %8531, i32 0, i32 0
  %RCX.i220 = bitcast %union.anon* %8532 to i64*
  %8533 = load i64, i64* %RAX.i219
  %8534 = load i64, i64* %RCX.i220
  %8535 = mul i64 %8534, 4
  %8536 = add i64 %8533, 200
  %8537 = add i64 %8536, %8535
  %8538 = load i32, i32* %EDX.i218
  %8539 = zext i32 %8538 to i64
  %8540 = load i64, i64* %PC.i217
  %8541 = add i64 %8540, 7
  store i64 %8541, i64* %PC.i217
  %8542 = inttoptr i64 %8537 to i32*
  store i32 %8538, i32* %8542
  store %struct.Memory* %loadMem_463481, %struct.Memory** %MEMORY
  br label %block_.L_463488

block_.L_463488:                                  ; preds = %block_463420, %block_.L_463416
  %loadMem_463488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8544 = getelementptr inbounds %struct.GPR, %struct.GPR* %8543, i32 0, i32 33
  %8545 = getelementptr inbounds %struct.Reg, %struct.Reg* %8544, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %8545 to i64*
  %8546 = load i64, i64* %PC.i216
  %8547 = add i64 %8546, 5
  %8548 = load i64, i64* %PC.i216
  %8549 = add i64 %8548, 5
  store i64 %8549, i64* %PC.i216
  %8550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8547, i64* %8550, align 8
  store %struct.Memory* %loadMem_463488, %struct.Memory** %MEMORY
  br label %block_.L_46348d

block_.L_46348d:                                  ; preds = %block_.L_463488
  %loadMem_46348d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8552 = getelementptr inbounds %struct.GPR, %struct.GPR* %8551, i32 0, i32 33
  %8553 = getelementptr inbounds %struct.Reg, %struct.Reg* %8552, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %8553 to i64*
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8555 = getelementptr inbounds %struct.GPR, %struct.GPR* %8554, i32 0, i32 1
  %8556 = getelementptr inbounds %struct.Reg, %struct.Reg* %8555, i32 0, i32 0
  %RAX.i214 = bitcast %union.anon* %8556 to i64*
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8558 = getelementptr inbounds %struct.GPR, %struct.GPR* %8557, i32 0, i32 15
  %8559 = getelementptr inbounds %struct.Reg, %struct.Reg* %8558, i32 0, i32 0
  %RBP.i215 = bitcast %union.anon* %8559 to i64*
  %8560 = load i64, i64* %RBP.i215
  %8561 = sub i64 %8560, 84
  %8562 = load i64, i64* %PC.i213
  %8563 = add i64 %8562, 3
  store i64 %8563, i64* %PC.i213
  %8564 = inttoptr i64 %8561 to i32*
  %8565 = load i32, i32* %8564
  %8566 = zext i32 %8565 to i64
  store i64 %8566, i64* %RAX.i214, align 8
  store %struct.Memory* %loadMem_46348d, %struct.Memory** %MEMORY
  %loadMem_463490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8568 = getelementptr inbounds %struct.GPR, %struct.GPR* %8567, i32 0, i32 33
  %8569 = getelementptr inbounds %struct.Reg, %struct.Reg* %8568, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %8569 to i64*
  %8570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8571 = getelementptr inbounds %struct.GPR, %struct.GPR* %8570, i32 0, i32 1
  %8572 = getelementptr inbounds %struct.Reg, %struct.Reg* %8571, i32 0, i32 0
  %RAX.i212 = bitcast %union.anon* %8572 to i64*
  %8573 = load i64, i64* %RAX.i212
  %8574 = load i64, i64* %PC.i211
  %8575 = add i64 %8574, 3
  store i64 %8575, i64* %PC.i211
  %8576 = trunc i64 %8573 to i32
  %8577 = add i32 1, %8576
  %8578 = zext i32 %8577 to i64
  store i64 %8578, i64* %RAX.i212, align 8
  %8579 = icmp ult i32 %8577, %8576
  %8580 = icmp ult i32 %8577, 1
  %8581 = or i1 %8579, %8580
  %8582 = zext i1 %8581 to i8
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8582, i8* %8583, align 1
  %8584 = and i32 %8577, 255
  %8585 = call i32 @llvm.ctpop.i32(i32 %8584)
  %8586 = trunc i32 %8585 to i8
  %8587 = and i8 %8586, 1
  %8588 = xor i8 %8587, 1
  %8589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8588, i8* %8589, align 1
  %8590 = xor i64 1, %8573
  %8591 = trunc i64 %8590 to i32
  %8592 = xor i32 %8591, %8577
  %8593 = lshr i32 %8592, 4
  %8594 = trunc i32 %8593 to i8
  %8595 = and i8 %8594, 1
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8595, i8* %8596, align 1
  %8597 = icmp eq i32 %8577, 0
  %8598 = zext i1 %8597 to i8
  %8599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8598, i8* %8599, align 1
  %8600 = lshr i32 %8577, 31
  %8601 = trunc i32 %8600 to i8
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8601, i8* %8602, align 1
  %8603 = lshr i32 %8576, 31
  %8604 = xor i32 %8600, %8603
  %8605 = add i32 %8604, %8600
  %8606 = icmp eq i32 %8605, 2
  %8607 = zext i1 %8606 to i8
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8607, i8* %8608, align 1
  store %struct.Memory* %loadMem_463490, %struct.Memory** %MEMORY
  %loadMem_463493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8610 = getelementptr inbounds %struct.GPR, %struct.GPR* %8609, i32 0, i32 33
  %8611 = getelementptr inbounds %struct.Reg, %struct.Reg* %8610, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %8611 to i64*
  %8612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8613 = getelementptr inbounds %struct.GPR, %struct.GPR* %8612, i32 0, i32 1
  %8614 = getelementptr inbounds %struct.Reg, %struct.Reg* %8613, i32 0, i32 0
  %EAX.i209 = bitcast %union.anon* %8614 to i32*
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8616 = getelementptr inbounds %struct.GPR, %struct.GPR* %8615, i32 0, i32 15
  %8617 = getelementptr inbounds %struct.Reg, %struct.Reg* %8616, i32 0, i32 0
  %RBP.i210 = bitcast %union.anon* %8617 to i64*
  %8618 = load i64, i64* %RBP.i210
  %8619 = sub i64 %8618, 84
  %8620 = load i32, i32* %EAX.i209
  %8621 = zext i32 %8620 to i64
  %8622 = load i64, i64* %PC.i208
  %8623 = add i64 %8622, 3
  store i64 %8623, i64* %PC.i208
  %8624 = inttoptr i64 %8619 to i32*
  store i32 %8620, i32* %8624
  store %struct.Memory* %loadMem_463493, %struct.Memory** %MEMORY
  %loadMem_463496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8626 = getelementptr inbounds %struct.GPR, %struct.GPR* %8625, i32 0, i32 33
  %8627 = getelementptr inbounds %struct.Reg, %struct.Reg* %8626, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %8627 to i64*
  %8628 = load i64, i64* %PC.i207
  %8629 = add i64 %8628, -272
  %8630 = load i64, i64* %PC.i207
  %8631 = add i64 %8630, 5
  store i64 %8631, i64* %PC.i207
  %8632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8629, i64* %8632, align 8
  store %struct.Memory* %loadMem_463496, %struct.Memory** %MEMORY
  br label %block_.L_463386

block_.L_46349b:                                  ; preds = %block_.L_463386
  %loadMem_46349b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8634 = getelementptr inbounds %struct.GPR, %struct.GPR* %8633, i32 0, i32 33
  %8635 = getelementptr inbounds %struct.Reg, %struct.Reg* %8634, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %8635 to i64*
  %8636 = load i64, i64* %PC.i206
  %8637 = add i64 %8636, 9
  store i64 %8637, i64* %PC.i206
  %8638 = load i64, i64* bitcast (%G_0xab0ef8_type* @G_0xab0ef8 to i64*)
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8639, align 1
  %8640 = trunc i64 %8638 to i32
  %8641 = and i32 %8640, 255
  %8642 = call i32 @llvm.ctpop.i32(i32 %8641)
  %8643 = trunc i32 %8642 to i8
  %8644 = and i8 %8643, 1
  %8645 = xor i8 %8644, 1
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8645, i8* %8646, align 1
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8647, align 1
  %8648 = icmp eq i64 %8638, 0
  %8649 = zext i1 %8648 to i8
  %8650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8649, i8* %8650, align 1
  %8651 = lshr i64 %8638, 63
  %8652 = trunc i64 %8651 to i8
  %8653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8652, i8* %8653, align 1
  %8654 = lshr i64 %8638, 63
  %8655 = xor i64 %8651, %8654
  %8656 = add i64 %8655, %8654
  %8657 = icmp eq i64 %8656, 2
  %8658 = zext i1 %8657 to i8
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8658, i8* %8659, align 1
  store %struct.Memory* %loadMem_46349b, %struct.Memory** %MEMORY
  %loadMem_4634a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8661 = getelementptr inbounds %struct.GPR, %struct.GPR* %8660, i32 0, i32 33
  %8662 = getelementptr inbounds %struct.Reg, %struct.Reg* %8661, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %8662 to i64*
  %8663 = load i64, i64* %PC.i205
  %8664 = add i64 %8663, 355
  %8665 = load i64, i64* %PC.i205
  %8666 = add i64 %8665, 6
  %8667 = load i64, i64* %PC.i205
  %8668 = add i64 %8667, 6
  store i64 %8668, i64* %PC.i205
  %8669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8670 = load i8, i8* %8669, align 1
  store i8 %8670, i8* %BRANCH_TAKEN, align 1
  %8671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8672 = icmp ne i8 %8670, 0
  %8673 = select i1 %8672, i64 %8664, i64 %8666
  store i64 %8673, i64* %8671, align 8
  store %struct.Memory* %loadMem_4634a4, %struct.Memory** %MEMORY
  %loadBr_4634a4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4634a4 = icmp eq i8 %loadBr_4634a4, 1
  br i1 %cmpBr_4634a4, label %block_.L_463607, label %block_4634aa

block_4634aa:                                     ; preds = %block_.L_46349b
  %loadMem_4634aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8675 = getelementptr inbounds %struct.GPR, %struct.GPR* %8674, i32 0, i32 33
  %8676 = getelementptr inbounds %struct.Reg, %struct.Reg* %8675, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %8676 to i64*
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8678 = getelementptr inbounds %struct.GPR, %struct.GPR* %8677, i32 0, i32 9
  %8679 = getelementptr inbounds %struct.Reg, %struct.Reg* %8678, i32 0, i32 0
  %RSI.i204 = bitcast %union.anon* %8679 to i64*
  %8680 = load i64, i64* %PC.i203
  %8681 = add i64 %8680, 10
  store i64 %8681, i64* %PC.i203
  store i64 ptrtoint (%G__0x57fdd0_type* @G__0x57fdd0 to i64), i64* %RSI.i204, align 8
  store %struct.Memory* %loadMem_4634aa, %struct.Memory** %MEMORY
  %loadMem_4634b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8683 = getelementptr inbounds %struct.GPR, %struct.GPR* %8682, i32 0, i32 33
  %8684 = getelementptr inbounds %struct.Reg, %struct.Reg* %8683, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %8684 to i64*
  %8685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8686 = getelementptr inbounds %struct.GPR, %struct.GPR* %8685, i32 0, i32 5
  %8687 = getelementptr inbounds %struct.Reg, %struct.Reg* %8686, i32 0, i32 0
  %RCX.i201 = bitcast %union.anon* %8687 to i64*
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8689 = getelementptr inbounds %struct.GPR, %struct.GPR* %8688, i32 0, i32 15
  %8690 = getelementptr inbounds %struct.Reg, %struct.Reg* %8689, i32 0, i32 0
  %RBP.i202 = bitcast %union.anon* %8690 to i64*
  %8691 = load i64, i64* %RBP.i202
  %8692 = sub i64 %8691, 668
  %8693 = load i64, i64* %PC.i200
  %8694 = add i64 %8693, 7
  store i64 %8694, i64* %PC.i200
  store i64 %8692, i64* %RCX.i201, align 8
  store %struct.Memory* %loadMem_4634b4, %struct.Memory** %MEMORY
  %loadMem_4634bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8696 = getelementptr inbounds %struct.GPR, %struct.GPR* %8695, i32 0, i32 33
  %8697 = getelementptr inbounds %struct.Reg, %struct.Reg* %8696, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %8697 to i64*
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8699 = getelementptr inbounds %struct.GPR, %struct.GPR* %8698, i32 0, i32 11
  %8700 = getelementptr inbounds %struct.Reg, %struct.Reg* %8699, i32 0, i32 0
  %RDI.i198 = bitcast %union.anon* %8700 to i64*
  %8701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8702 = getelementptr inbounds %struct.GPR, %struct.GPR* %8701, i32 0, i32 15
  %8703 = getelementptr inbounds %struct.Reg, %struct.Reg* %8702, i32 0, i32 0
  %RBP.i199 = bitcast %union.anon* %8703 to i64*
  %8704 = load i64, i64* %RBP.i199
  %8705 = sub i64 %8704, 656
  %8706 = load i64, i64* %PC.i197
  %8707 = add i64 %8706, 7
  store i64 %8707, i64* %PC.i197
  store i64 %8705, i64* %RDI.i198, align 8
  store %struct.Memory* %loadMem_4634bb, %struct.Memory** %MEMORY
  %loadMem_4634c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8709 = getelementptr inbounds %struct.GPR, %struct.GPR* %8708, i32 0, i32 33
  %8710 = getelementptr inbounds %struct.Reg, %struct.Reg* %8709, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %8710 to i64*
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8712 = getelementptr inbounds %struct.GPR, %struct.GPR* %8711, i32 0, i32 7
  %8713 = getelementptr inbounds %struct.Reg, %struct.Reg* %8712, i32 0, i32 0
  %RDX.i195 = bitcast %union.anon* %8713 to i64*
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8715 = getelementptr inbounds %struct.GPR, %struct.GPR* %8714, i32 0, i32 15
  %8716 = getelementptr inbounds %struct.Reg, %struct.Reg* %8715, i32 0, i32 0
  %RBP.i196 = bitcast %union.anon* %8716 to i64*
  %8717 = load i64, i64* %RBP.i196
  %8718 = sub i64 %8717, 64
  %8719 = load i64, i64* %PC.i194
  %8720 = add i64 %8719, 4
  store i64 %8720, i64* %PC.i194
  %8721 = inttoptr i64 %8718 to i64*
  %8722 = load i64, i64* %8721
  store i64 %8722, i64* %RDX.i195, align 8
  store %struct.Memory* %loadMem_4634c2, %struct.Memory** %MEMORY
  %loadMem_4634c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 33
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %8725 to i64*
  %8726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8727 = getelementptr inbounds %struct.GPR, %struct.GPR* %8726, i32 0, i32 1
  %8728 = getelementptr inbounds %struct.Reg, %struct.Reg* %8727, i32 0, i32 0
  %8729 = bitcast %union.anon* %8728 to %struct.anon.2*
  %AL.i193 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8729, i32 0, i32 0
  %8730 = load i64, i64* %PC.i192
  %8731 = add i64 %8730, 2
  store i64 %8731, i64* %PC.i192
  store i8 0, i8* %AL.i193, align 1
  store %struct.Memory* %loadMem_4634c6, %struct.Memory** %MEMORY
  %loadMem1_4634c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8733 = getelementptr inbounds %struct.GPR, %struct.GPR* %8732, i32 0, i32 33
  %8734 = getelementptr inbounds %struct.Reg, %struct.Reg* %8733, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %8734 to i64*
  %8735 = load i64, i64* %PC.i191
  %8736 = add i64 %8735, -402168
  %8737 = load i64, i64* %PC.i191
  %8738 = add i64 %8737, 5
  %8739 = load i64, i64* %PC.i191
  %8740 = add i64 %8739, 5
  store i64 %8740, i64* %PC.i191
  %8741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8742 = load i64, i64* %8741, align 8
  %8743 = add i64 %8742, -8
  %8744 = inttoptr i64 %8743 to i64*
  store i64 %8738, i64* %8744
  store i64 %8743, i64* %8741, align 8
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8736, i64* %8745, align 8
  store %struct.Memory* %loadMem1_4634c8, %struct.Memory** %MEMORY
  %loadMem2_4634c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4634c8 = load i64, i64* %3
  %8746 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %loadMem2_4634c8)
  store %struct.Memory* %8746, %struct.Memory** %MEMORY
  %loadMem_4634cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8748 = getelementptr inbounds %struct.GPR, %struct.GPR* %8747, i32 0, i32 33
  %8749 = getelementptr inbounds %struct.Reg, %struct.Reg* %8748, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %8749 to i64*
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8751 = getelementptr inbounds %struct.GPR, %struct.GPR* %8750, i32 0, i32 5
  %8752 = getelementptr inbounds %struct.Reg, %struct.Reg* %8751, i32 0, i32 0
  %RCX.i187 = bitcast %union.anon* %8752 to i64*
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8754 = getelementptr inbounds %struct.GPR, %struct.GPR* %8753, i32 0, i32 15
  %8755 = getelementptr inbounds %struct.Reg, %struct.Reg* %8754, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %8755 to i64*
  %8756 = load i64, i64* %RBP.i188
  %8757 = sub i64 %8756, 656
  %8758 = load i64, i64* %PC.i186
  %8759 = add i64 %8758, 7
  store i64 %8759, i64* %PC.i186
  store i64 %8757, i64* %RCX.i187, align 8
  store %struct.Memory* %loadMem_4634cd, %struct.Memory** %MEMORY
  %loadMem_4634d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8761 = getelementptr inbounds %struct.GPR, %struct.GPR* %8760, i32 0, i32 33
  %8762 = getelementptr inbounds %struct.Reg, %struct.Reg* %8761, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %8762 to i64*
  %8763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8764 = getelementptr inbounds %struct.GPR, %struct.GPR* %8763, i32 0, i32 7
  %8765 = getelementptr inbounds %struct.Reg, %struct.Reg* %8764, i32 0, i32 0
  %RDX.i184 = bitcast %union.anon* %8765 to i64*
  %8766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8767 = getelementptr inbounds %struct.GPR, %struct.GPR* %8766, i32 0, i32 15
  %8768 = getelementptr inbounds %struct.Reg, %struct.Reg* %8767, i32 0, i32 0
  %RBP.i185 = bitcast %union.anon* %8768 to i64*
  %8769 = load i64, i64* %RBP.i185
  %8770 = sub i64 %8769, 668
  %8771 = load i64, i64* %PC.i183
  %8772 = add i64 %8771, 7
  store i64 %8772, i64* %PC.i183
  %8773 = inttoptr i64 %8770 to i32*
  %8774 = load i32, i32* %8773
  %8775 = sext i32 %8774 to i64
  store i64 %8775, i64* %RDX.i184, align 8
  store %struct.Memory* %loadMem_4634d4, %struct.Memory** %MEMORY
  %loadMem_4634db = load %struct.Memory*, %struct.Memory** %MEMORY
  %8776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8777 = getelementptr inbounds %struct.GPR, %struct.GPR* %8776, i32 0, i32 33
  %8778 = getelementptr inbounds %struct.Reg, %struct.Reg* %8777, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %8778 to i64*
  %8779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8780 = getelementptr inbounds %struct.GPR, %struct.GPR* %8779, i32 0, i32 5
  %8781 = getelementptr inbounds %struct.Reg, %struct.Reg* %8780, i32 0, i32 0
  %RCX.i181 = bitcast %union.anon* %8781 to i64*
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8783 = getelementptr inbounds %struct.GPR, %struct.GPR* %8782, i32 0, i32 7
  %8784 = getelementptr inbounds %struct.Reg, %struct.Reg* %8783, i32 0, i32 0
  %RDX.i182 = bitcast %union.anon* %8784 to i64*
  %8785 = load i64, i64* %RCX.i181
  %8786 = load i64, i64* %RDX.i182
  %8787 = load i64, i64* %PC.i180
  %8788 = add i64 %8787, 3
  store i64 %8788, i64* %PC.i180
  %8789 = add i64 %8786, %8785
  store i64 %8789, i64* %RCX.i181, align 8
  %8790 = icmp ult i64 %8789, %8785
  %8791 = icmp ult i64 %8789, %8786
  %8792 = or i1 %8790, %8791
  %8793 = zext i1 %8792 to i8
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8793, i8* %8794, align 1
  %8795 = trunc i64 %8789 to i32
  %8796 = and i32 %8795, 255
  %8797 = call i32 @llvm.ctpop.i32(i32 %8796)
  %8798 = trunc i32 %8797 to i8
  %8799 = and i8 %8798, 1
  %8800 = xor i8 %8799, 1
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8800, i8* %8801, align 1
  %8802 = xor i64 %8786, %8785
  %8803 = xor i64 %8802, %8789
  %8804 = lshr i64 %8803, 4
  %8805 = trunc i64 %8804 to i8
  %8806 = and i8 %8805, 1
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8806, i8* %8807, align 1
  %8808 = icmp eq i64 %8789, 0
  %8809 = zext i1 %8808 to i8
  %8810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8809, i8* %8810, align 1
  %8811 = lshr i64 %8789, 63
  %8812 = trunc i64 %8811 to i8
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8812, i8* %8813, align 1
  %8814 = lshr i64 %8785, 63
  %8815 = lshr i64 %8786, 63
  %8816 = xor i64 %8811, %8814
  %8817 = xor i64 %8811, %8815
  %8818 = add i64 %8816, %8817
  %8819 = icmp eq i64 %8818, 2
  %8820 = zext i1 %8819 to i8
  %8821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8820, i8* %8821, align 1
  store %struct.Memory* %loadMem_4634db, %struct.Memory** %MEMORY
  %loadMem_4634de = load %struct.Memory*, %struct.Memory** %MEMORY
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8823 = getelementptr inbounds %struct.GPR, %struct.GPR* %8822, i32 0, i32 33
  %8824 = getelementptr inbounds %struct.Reg, %struct.Reg* %8823, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %8824 to i64*
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8826 = getelementptr inbounds %struct.GPR, %struct.GPR* %8825, i32 0, i32 5
  %8827 = getelementptr inbounds %struct.Reg, %struct.Reg* %8826, i32 0, i32 0
  %RCX.i178 = bitcast %union.anon* %8827 to i64*
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8829 = getelementptr inbounds %struct.GPR, %struct.GPR* %8828, i32 0, i32 15
  %8830 = getelementptr inbounds %struct.Reg, %struct.Reg* %8829, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %8830 to i64*
  %8831 = load i64, i64* %RBP.i179
  %8832 = sub i64 %8831, 664
  %8833 = load i64, i64* %RCX.i178
  %8834 = load i64, i64* %PC.i177
  %8835 = add i64 %8834, 7
  store i64 %8835, i64* %PC.i177
  %8836 = inttoptr i64 %8832 to i64*
  store i64 %8833, i64* %8836
  store %struct.Memory* %loadMem_4634de, %struct.Memory** %MEMORY
  %loadMem_4634e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8838 = getelementptr inbounds %struct.GPR, %struct.GPR* %8837, i32 0, i32 33
  %8839 = getelementptr inbounds %struct.Reg, %struct.Reg* %8838, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %8839 to i64*
  %8840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8841 = getelementptr inbounds %struct.GPR, %struct.GPR* %8840, i32 0, i32 17
  %8842 = getelementptr inbounds %struct.Reg, %struct.Reg* %8841, i32 0, i32 0
  %R8D.i175 = bitcast %union.anon* %8842 to i32*
  %8843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8844 = getelementptr inbounds %struct.GPR, %struct.GPR* %8843, i32 0, i32 15
  %8845 = getelementptr inbounds %struct.Reg, %struct.Reg* %8844, i32 0, i32 0
  %RBP.i176 = bitcast %union.anon* %8845 to i64*
  %8846 = bitcast i32* %R8D.i175 to i64*
  %8847 = load i64, i64* %RBP.i176
  %8848 = sub i64 %8847, 68
  %8849 = load i64, i64* %PC.i174
  %8850 = add i64 %8849, 4
  store i64 %8850, i64* %PC.i174
  %8851 = inttoptr i64 %8848 to i32*
  %8852 = load i32, i32* %8851
  %8853 = zext i32 %8852 to i64
  store i64 %8853, i64* %8846, align 8
  store %struct.Memory* %loadMem_4634e5, %struct.Memory** %MEMORY
  %loadMem_4634e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8855 = getelementptr inbounds %struct.GPR, %struct.GPR* %8854, i32 0, i32 33
  %8856 = getelementptr inbounds %struct.Reg, %struct.Reg* %8855, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %8856 to i64*
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8858 = getelementptr inbounds %struct.GPR, %struct.GPR* %8857, i32 0, i32 17
  %8859 = getelementptr inbounds %struct.Reg, %struct.Reg* %8858, i32 0, i32 0
  %R8D.i172 = bitcast %union.anon* %8859 to i32*
  %8860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8861 = getelementptr inbounds %struct.GPR, %struct.GPR* %8860, i32 0, i32 15
  %8862 = getelementptr inbounds %struct.Reg, %struct.Reg* %8861, i32 0, i32 0
  %RBP.i173 = bitcast %union.anon* %8862 to i64*
  %8863 = load i64, i64* %RBP.i173
  %8864 = sub i64 %8863, 84
  %8865 = load i32, i32* %R8D.i172
  %8866 = zext i32 %8865 to i64
  %8867 = load i64, i64* %PC.i171
  %8868 = add i64 %8867, 4
  store i64 %8868, i64* %PC.i171
  %8869 = inttoptr i64 %8864 to i32*
  store i32 %8865, i32* %8869
  store %struct.Memory* %loadMem_4634e9, %struct.Memory** %MEMORY
  %loadMem_4634ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8871 = getelementptr inbounds %struct.GPR, %struct.GPR* %8870, i32 0, i32 33
  %8872 = getelementptr inbounds %struct.Reg, %struct.Reg* %8871, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %8872 to i64*
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8874 = getelementptr inbounds %struct.GPR, %struct.GPR* %8873, i32 0, i32 1
  %8875 = getelementptr inbounds %struct.Reg, %struct.Reg* %8874, i32 0, i32 0
  %EAX.i169 = bitcast %union.anon* %8875 to i32*
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8877 = getelementptr inbounds %struct.GPR, %struct.GPR* %8876, i32 0, i32 15
  %8878 = getelementptr inbounds %struct.Reg, %struct.Reg* %8877, i32 0, i32 0
  %RBP.i170 = bitcast %union.anon* %8878 to i64*
  %8879 = load i64, i64* %RBP.i170
  %8880 = sub i64 %8879, 704
  %8881 = load i32, i32* %EAX.i169
  %8882 = zext i32 %8881 to i64
  %8883 = load i64, i64* %PC.i168
  %8884 = add i64 %8883, 6
  store i64 %8884, i64* %PC.i168
  %8885 = inttoptr i64 %8880 to i32*
  store i32 %8881, i32* %8885
  store %struct.Memory* %loadMem_4634ed, %struct.Memory** %MEMORY
  br label %block_.L_4634f3

block_.L_4634f3:                                  ; preds = %routine_idivl__r8d.exit, %block_4634aa
  %loadMem_4634f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8887 = getelementptr inbounds %struct.GPR, %struct.GPR* %8886, i32 0, i32 33
  %8888 = getelementptr inbounds %struct.Reg, %struct.Reg* %8887, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %8888 to i64*
  %8889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8890 = getelementptr inbounds %struct.GPR, %struct.GPR* %8889, i32 0, i32 1
  %8891 = getelementptr inbounds %struct.Reg, %struct.Reg* %8890, i32 0, i32 0
  %RAX.i166 = bitcast %union.anon* %8891 to i64*
  %8892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8893 = getelementptr inbounds %struct.GPR, %struct.GPR* %8892, i32 0, i32 15
  %8894 = getelementptr inbounds %struct.Reg, %struct.Reg* %8893, i32 0, i32 0
  %RBP.i167 = bitcast %union.anon* %8894 to i64*
  %8895 = load i64, i64* %RBP.i167
  %8896 = sub i64 %8895, 84
  %8897 = load i64, i64* %PC.i165
  %8898 = add i64 %8897, 3
  store i64 %8898, i64* %PC.i165
  %8899 = inttoptr i64 %8896 to i32*
  %8900 = load i32, i32* %8899
  %8901 = zext i32 %8900 to i64
  store i64 %8901, i64* %RAX.i166, align 8
  store %struct.Memory* %loadMem_4634f3, %struct.Memory** %MEMORY
  %loadMem_4634f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8903 = getelementptr inbounds %struct.GPR, %struct.GPR* %8902, i32 0, i32 33
  %8904 = getelementptr inbounds %struct.Reg, %struct.Reg* %8903, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %8904 to i64*
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8906 = getelementptr inbounds %struct.GPR, %struct.GPR* %8905, i32 0, i32 5
  %8907 = getelementptr inbounds %struct.Reg, %struct.Reg* %8906, i32 0, i32 0
  %RCX.i163 = bitcast %union.anon* %8907 to i64*
  %8908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8909 = getelementptr inbounds %struct.GPR, %struct.GPR* %8908, i32 0, i32 15
  %8910 = getelementptr inbounds %struct.Reg, %struct.Reg* %8909, i32 0, i32 0
  %RBP.i164 = bitcast %union.anon* %8910 to i64*
  %8911 = load i64, i64* %RBP.i164
  %8912 = sub i64 %8911, 48
  %8913 = load i64, i64* %PC.i162
  %8914 = add i64 %8913, 4
  store i64 %8914, i64* %PC.i162
  %8915 = inttoptr i64 %8912 to i64*
  %8916 = load i64, i64* %8915
  store i64 %8916, i64* %RCX.i163, align 8
  store %struct.Memory* %loadMem_4634f6, %struct.Memory** %MEMORY
  %loadMem_4634fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8918 = getelementptr inbounds %struct.GPR, %struct.GPR* %8917, i32 0, i32 33
  %8919 = getelementptr inbounds %struct.Reg, %struct.Reg* %8918, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %8919 to i64*
  %8920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8921 = getelementptr inbounds %struct.GPR, %struct.GPR* %8920, i32 0, i32 1
  %8922 = getelementptr inbounds %struct.Reg, %struct.Reg* %8921, i32 0, i32 0
  %EAX.i160 = bitcast %union.anon* %8922 to i32*
  %8923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8924 = getelementptr inbounds %struct.GPR, %struct.GPR* %8923, i32 0, i32 5
  %8925 = getelementptr inbounds %struct.Reg, %struct.Reg* %8924, i32 0, i32 0
  %RCX.i161 = bitcast %union.anon* %8925 to i64*
  %8926 = load i32, i32* %EAX.i160
  %8927 = zext i32 %8926 to i64
  %8928 = load i64, i64* %RCX.i161
  %8929 = add i64 %8928, 400
  %8930 = load i64, i64* %PC.i159
  %8931 = add i64 %8930, 6
  store i64 %8931, i64* %PC.i159
  %8932 = inttoptr i64 %8929 to i32*
  %8933 = load i32, i32* %8932
  %8934 = sub i32 %8926, %8933
  %8935 = icmp ult i32 %8926, %8933
  %8936 = zext i1 %8935 to i8
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8936, i8* %8937, align 1
  %8938 = and i32 %8934, 255
  %8939 = call i32 @llvm.ctpop.i32(i32 %8938)
  %8940 = trunc i32 %8939 to i8
  %8941 = and i8 %8940, 1
  %8942 = xor i8 %8941, 1
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8942, i8* %8943, align 1
  %8944 = xor i32 %8933, %8926
  %8945 = xor i32 %8944, %8934
  %8946 = lshr i32 %8945, 4
  %8947 = trunc i32 %8946 to i8
  %8948 = and i8 %8947, 1
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8948, i8* %8949, align 1
  %8950 = icmp eq i32 %8934, 0
  %8951 = zext i1 %8950 to i8
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8951, i8* %8952, align 1
  %8953 = lshr i32 %8934, 31
  %8954 = trunc i32 %8953 to i8
  %8955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8954, i8* %8955, align 1
  %8956 = lshr i32 %8926, 31
  %8957 = lshr i32 %8933, 31
  %8958 = xor i32 %8957, %8956
  %8959 = xor i32 %8953, %8956
  %8960 = add i32 %8959, %8958
  %8961 = icmp eq i32 %8960, 2
  %8962 = zext i1 %8961 to i8
  %8963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8962, i8* %8963, align 1
  store %struct.Memory* %loadMem_4634fa, %struct.Memory** %MEMORY
  %loadMem_463500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8965 = getelementptr inbounds %struct.GPR, %struct.GPR* %8964, i32 0, i32 33
  %8966 = getelementptr inbounds %struct.Reg, %struct.Reg* %8965, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %8966 to i64*
  %8967 = load i64, i64* %PC.i158
  %8968 = add i64 %8967, 243
  %8969 = load i64, i64* %PC.i158
  %8970 = add i64 %8969, 6
  %8971 = load i64, i64* %PC.i158
  %8972 = add i64 %8971, 6
  store i64 %8972, i64* %PC.i158
  %8973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8974 = load i8, i8* %8973, align 1
  %8975 = icmp ne i8 %8974, 0
  %8976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8977 = load i8, i8* %8976, align 1
  %8978 = icmp ne i8 %8977, 0
  %8979 = xor i1 %8975, %8978
  %8980 = xor i1 %8979, true
  %8981 = zext i1 %8980 to i8
  store i8 %8981, i8* %BRANCH_TAKEN, align 1
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8983 = select i1 %8979, i64 %8970, i64 %8968
  store i64 %8983, i64* %8982, align 8
  store %struct.Memory* %loadMem_463500, %struct.Memory** %MEMORY
  %loadBr_463500 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_463500 = icmp eq i8 %loadBr_463500, 1
  br i1 %cmpBr_463500, label %block_.L_4635f3, label %block_463506

block_463506:                                     ; preds = %block_.L_4634f3
  %loadMem_463506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8985 = getelementptr inbounds %struct.GPR, %struct.GPR* %8984, i32 0, i32 33
  %8986 = getelementptr inbounds %struct.Reg, %struct.Reg* %8985, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %8986 to i64*
  %8987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8988 = getelementptr inbounds %struct.GPR, %struct.GPR* %8987, i32 0, i32 9
  %8989 = getelementptr inbounds %struct.Reg, %struct.Reg* %8988, i32 0, i32 0
  %RSI.i157 = bitcast %union.anon* %8989 to i64*
  %8990 = load i64, i64* %PC.i156
  %8991 = add i64 %8990, 10
  store i64 %8991, i64* %PC.i156
  store i64 ptrtoint (%G__0x57f9a0_type* @G__0x57f9a0 to i64), i64* %RSI.i157, align 8
  store %struct.Memory* %loadMem_463506, %struct.Memory** %MEMORY
  %loadMem_463510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8993 = getelementptr inbounds %struct.GPR, %struct.GPR* %8992, i32 0, i32 33
  %8994 = getelementptr inbounds %struct.Reg, %struct.Reg* %8993, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %8994 to i64*
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8996 = getelementptr inbounds %struct.GPR, %struct.GPR* %8995, i32 0, i32 15
  %8997 = getelementptr inbounds %struct.Reg, %struct.Reg* %8996, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %8997 to i64*
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8999 = getelementptr inbounds %struct.GPR, %struct.GPR* %8998, i32 0, i32 19
  %9000 = getelementptr inbounds %struct.Reg, %struct.Reg* %8999, i32 0, i32 0
  %R9.i = bitcast %union.anon* %9000 to i64*
  %9001 = load i64, i64* %RBP.i155
  %9002 = sub i64 %9001, 668
  %9003 = load i64, i64* %PC.i154
  %9004 = add i64 %9003, 7
  store i64 %9004, i64* %PC.i154
  store i64 %9002, i64* %R9.i, align 8
  store %struct.Memory* %loadMem_463510, %struct.Memory** %MEMORY
  %loadMem_463517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9006 = getelementptr inbounds %struct.GPR, %struct.GPR* %9005, i32 0, i32 33
  %9007 = getelementptr inbounds %struct.Reg, %struct.Reg* %9006, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %9007 to i64*
  %9008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9009 = getelementptr inbounds %struct.GPR, %struct.GPR* %9008, i32 0, i32 1
  %9010 = getelementptr inbounds %struct.Reg, %struct.Reg* %9009, i32 0, i32 0
  %RAX.i153 = bitcast %union.anon* %9010 to i64*
  %9011 = load i64, i64* %PC.i152
  %9012 = add i64 %9011, 5
  store i64 %9012, i64* %PC.i152
  store i64 20, i64* %RAX.i153, align 8
  store %struct.Memory* %loadMem_463517, %struct.Memory** %MEMORY
  %loadMem_46351c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9014 = getelementptr inbounds %struct.GPR, %struct.GPR* %9013, i32 0, i32 33
  %9015 = getelementptr inbounds %struct.Reg, %struct.Reg* %9014, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %9015 to i64*
  %9016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9017 = getelementptr inbounds %struct.GPR, %struct.GPR* %9016, i32 0, i32 11
  %9018 = getelementptr inbounds %struct.Reg, %struct.Reg* %9017, i32 0, i32 0
  %RDI.i150 = bitcast %union.anon* %9018 to i64*
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9020 = getelementptr inbounds %struct.GPR, %struct.GPR* %9019, i32 0, i32 15
  %9021 = getelementptr inbounds %struct.Reg, %struct.Reg* %9020, i32 0, i32 0
  %RBP.i151 = bitcast %union.anon* %9021 to i64*
  %9022 = load i64, i64* %RBP.i151
  %9023 = sub i64 %9022, 664
  %9024 = load i64, i64* %PC.i149
  %9025 = add i64 %9024, 7
  store i64 %9025, i64* %PC.i149
  %9026 = inttoptr i64 %9023 to i64*
  %9027 = load i64, i64* %9026
  store i64 %9027, i64* %RDI.i150, align 8
  store %struct.Memory* %loadMem_46351c, %struct.Memory** %MEMORY
  %loadMem_463523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9029 = getelementptr inbounds %struct.GPR, %struct.GPR* %9028, i32 0, i32 33
  %9030 = getelementptr inbounds %struct.Reg, %struct.Reg* %9029, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %9030 to i64*
  %9031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9032 = getelementptr inbounds %struct.GPR, %struct.GPR* %9031, i32 0, i32 5
  %9033 = getelementptr inbounds %struct.Reg, %struct.Reg* %9032, i32 0, i32 0
  %RCX.i147 = bitcast %union.anon* %9033 to i64*
  %9034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9035 = getelementptr inbounds %struct.GPR, %struct.GPR* %9034, i32 0, i32 15
  %9036 = getelementptr inbounds %struct.Reg, %struct.Reg* %9035, i32 0, i32 0
  %RBP.i148 = bitcast %union.anon* %9036 to i64*
  %9037 = load i64, i64* %RBP.i148
  %9038 = sub i64 %9037, 48
  %9039 = load i64, i64* %PC.i146
  %9040 = add i64 %9039, 4
  store i64 %9040, i64* %PC.i146
  %9041 = inttoptr i64 %9038 to i64*
  %9042 = load i64, i64* %9041
  store i64 %9042, i64* %RCX.i147, align 8
  store %struct.Memory* %loadMem_463523, %struct.Memory** %MEMORY
  %loadMem_463527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9044 = getelementptr inbounds %struct.GPR, %struct.GPR* %9043, i32 0, i32 33
  %9045 = getelementptr inbounds %struct.Reg, %struct.Reg* %9044, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %9045 to i64*
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9047 = getelementptr inbounds %struct.GPR, %struct.GPR* %9046, i32 0, i32 7
  %9048 = getelementptr inbounds %struct.Reg, %struct.Reg* %9047, i32 0, i32 0
  %RDX.i144 = bitcast %union.anon* %9048 to i64*
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9050 = getelementptr inbounds %struct.GPR, %struct.GPR* %9049, i32 0, i32 15
  %9051 = getelementptr inbounds %struct.Reg, %struct.Reg* %9050, i32 0, i32 0
  %RBP.i145 = bitcast %union.anon* %9051 to i64*
  %9052 = load i64, i64* %RBP.i145
  %9053 = sub i64 %9052, 84
  %9054 = load i64, i64* %PC.i143
  %9055 = add i64 %9054, 4
  store i64 %9055, i64* %PC.i143
  %9056 = inttoptr i64 %9053 to i32*
  %9057 = load i32, i32* %9056
  %9058 = sext i32 %9057 to i64
  store i64 %9058, i64* %RDX.i144, align 8
  store %struct.Memory* %loadMem_463527, %struct.Memory** %MEMORY
  %loadMem_46352b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9060 = getelementptr inbounds %struct.GPR, %struct.GPR* %9059, i32 0, i32 33
  %9061 = getelementptr inbounds %struct.Reg, %struct.Reg* %9060, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %9061 to i64*
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9063 = getelementptr inbounds %struct.GPR, %struct.GPR* %9062, i32 0, i32 17
  %9064 = getelementptr inbounds %struct.Reg, %struct.Reg* %9063, i32 0, i32 0
  %R8D.i140 = bitcast %union.anon* %9064 to i32*
  %9065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9066 = getelementptr inbounds %struct.GPR, %struct.GPR* %9065, i32 0, i32 5
  %9067 = getelementptr inbounds %struct.Reg, %struct.Reg* %9066, i32 0, i32 0
  %RCX.i141 = bitcast %union.anon* %9067 to i64*
  %9068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9069 = getelementptr inbounds %struct.GPR, %struct.GPR* %9068, i32 0, i32 7
  %9070 = getelementptr inbounds %struct.Reg, %struct.Reg* %9069, i32 0, i32 0
  %RDX.i142 = bitcast %union.anon* %9070 to i64*
  %9071 = bitcast i32* %R8D.i140 to i64*
  %9072 = load i64, i64* %RCX.i141
  %9073 = load i64, i64* %RDX.i142
  %9074 = mul i64 %9073, 4
  %9075 = add i64 %9074, %9072
  %9076 = load i64, i64* %PC.i139
  %9077 = add i64 %9076, 4
  store i64 %9077, i64* %PC.i139
  %9078 = inttoptr i64 %9075 to i32*
  %9079 = load i32, i32* %9078
  %9080 = zext i32 %9079 to i64
  store i64 %9080, i64* %9071, align 8
  store %struct.Memory* %loadMem_46352b, %struct.Memory** %MEMORY
  %loadMem_46352f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9082 = getelementptr inbounds %struct.GPR, %struct.GPR* %9081, i32 0, i32 33
  %9083 = getelementptr inbounds %struct.Reg, %struct.Reg* %9082, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %9083 to i64*
  %9084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9085 = getelementptr inbounds %struct.GPR, %struct.GPR* %9084, i32 0, i32 1
  %9086 = getelementptr inbounds %struct.Reg, %struct.Reg* %9085, i32 0, i32 0
  %EAX.i137 = bitcast %union.anon* %9086 to i32*
  %9087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9088 = getelementptr inbounds %struct.GPR, %struct.GPR* %9087, i32 0, i32 15
  %9089 = getelementptr inbounds %struct.Reg, %struct.Reg* %9088, i32 0, i32 0
  %RBP.i138 = bitcast %union.anon* %9089 to i64*
  %9090 = load i64, i64* %RBP.i138
  %9091 = sub i64 %9090, 708
  %9092 = load i32, i32* %EAX.i137
  %9093 = zext i32 %9092 to i64
  %9094 = load i64, i64* %PC.i136
  %9095 = add i64 %9094, 6
  store i64 %9095, i64* %PC.i136
  %9096 = inttoptr i64 %9091 to i32*
  store i32 %9092, i32* %9096
  store %struct.Memory* %loadMem_46352f, %struct.Memory** %MEMORY
  %loadMem_463535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9098 = getelementptr inbounds %struct.GPR, %struct.GPR* %9097, i32 0, i32 33
  %9099 = getelementptr inbounds %struct.Reg, %struct.Reg* %9098, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %9099 to i64*
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9101 = getelementptr inbounds %struct.GPR, %struct.GPR* %9100, i32 0, i32 17
  %9102 = getelementptr inbounds %struct.Reg, %struct.Reg* %9101, i32 0, i32 0
  %R8D.i134 = bitcast %union.anon* %9102 to i32*
  %9103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9104 = getelementptr inbounds %struct.GPR, %struct.GPR* %9103, i32 0, i32 1
  %9105 = getelementptr inbounds %struct.Reg, %struct.Reg* %9104, i32 0, i32 0
  %RAX.i135 = bitcast %union.anon* %9105 to i64*
  %9106 = load i32, i32* %R8D.i134
  %9107 = zext i32 %9106 to i64
  %9108 = load i64, i64* %PC.i133
  %9109 = add i64 %9108, 3
  store i64 %9109, i64* %PC.i133
  %9110 = and i64 %9107, 4294967295
  store i64 %9110, i64* %RAX.i135, align 8
  store %struct.Memory* %loadMem_463535, %struct.Memory** %MEMORY
  %loadMem_463538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9112 = getelementptr inbounds %struct.GPR, %struct.GPR* %9111, i32 0, i32 33
  %9113 = getelementptr inbounds %struct.Reg, %struct.Reg* %9112, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %9113 to i64*
  %9114 = load i64, i64* %PC.i132
  %9115 = add i64 %9114, 1
  store i64 %9115, i64* %PC.i132
  %9116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9118 = bitcast %union.anon* %9117 to i32*
  %9119 = load i32, i32* %9118, align 8
  %9120 = sext i32 %9119 to i64
  %9121 = lshr i64 %9120, 32
  store i64 %9121, i64* %9116, align 8
  store %struct.Memory* %loadMem_463538, %struct.Memory** %MEMORY
  %loadMem_463539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9123 = getelementptr inbounds %struct.GPR, %struct.GPR* %9122, i32 0, i32 33
  %9124 = getelementptr inbounds %struct.Reg, %struct.Reg* %9123, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %9124 to i64*
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9126 = getelementptr inbounds %struct.GPR, %struct.GPR* %9125, i32 0, i32 17
  %9127 = getelementptr inbounds %struct.Reg, %struct.Reg* %9126, i32 0, i32 0
  %R8D.i130 = bitcast %union.anon* %9127 to i32*
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9129 = getelementptr inbounds %struct.GPR, %struct.GPR* %9128, i32 0, i32 15
  %9130 = getelementptr inbounds %struct.Reg, %struct.Reg* %9129, i32 0, i32 0
  %RBP.i131 = bitcast %union.anon* %9130 to i64*
  %9131 = bitcast i32* %R8D.i130 to i64*
  %9132 = load i64, i64* %RBP.i131
  %9133 = sub i64 %9132, 708
  %9134 = load i64, i64* %PC.i129
  %9135 = add i64 %9134, 7
  store i64 %9135, i64* %PC.i129
  %9136 = inttoptr i64 %9133 to i32*
  %9137 = load i32, i32* %9136
  %9138 = zext i32 %9137 to i64
  store i64 %9138, i64* %9131, align 8
  store %struct.Memory* %loadMem_463539, %struct.Memory** %MEMORY
  %loadMem_463540 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9140 = getelementptr inbounds %struct.GPR, %struct.GPR* %9139, i32 0, i32 33
  %9141 = getelementptr inbounds %struct.Reg, %struct.Reg* %9140, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %9141 to i64*
  %9142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9143 = getelementptr inbounds %struct.GPR, %struct.GPR* %9142, i32 0, i32 17
  %9144 = getelementptr inbounds %struct.Reg, %struct.Reg* %9143, i32 0, i32 0
  %R8D.i125 = bitcast %union.anon* %9144 to i32*
  %9145 = load i32, i32* %R8D.i125
  %9146 = zext i32 %9145 to i64
  %9147 = load i64, i64* %PC.i124
  %9148 = add i64 %9147, 3
  store i64 %9148, i64* %PC.i124
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9150 = bitcast %union.anon* %9149 to i32*
  %9151 = load i32, i32* %9150, align 8
  %9152 = zext i32 %9151 to i64
  %9153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %9154 = bitcast %union.anon* %9153 to i32*
  %9155 = load i32, i32* %9154, align 8
  %9156 = zext i32 %9155 to i64
  %9157 = shl i64 %9146, 32
  %9158 = ashr exact i64 %9157, 32
  %9159 = shl i64 %9156, 32
  %9160 = or i64 %9159, %9152
  %9161 = sdiv i64 %9160, %9158
  %9162 = shl i64 %9161, 32
  %9163 = ashr exact i64 %9162, 32
  %9164 = icmp eq i64 %9161, %9163
  br i1 %9164, label %9169, label %9165

; <label>:9165:                                   ; preds = %block_463506
  %9166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9167 = load i64, i64* %9166, align 8
  %9168 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9167, %struct.Memory* %loadMem_463540)
  br label %routine_idivl__r8d.exit126

; <label>:9169:                                   ; preds = %block_463506
  %9170 = srem i64 %9160, %9158
  %9171 = getelementptr inbounds %union.anon, %union.anon* %9149, i64 0, i32 0
  %9172 = and i64 %9161, 4294967295
  store i64 %9172, i64* %9171, align 8
  %9173 = getelementptr inbounds %union.anon, %union.anon* %9153, i64 0, i32 0
  %9174 = and i64 %9170, 4294967295
  store i64 %9174, i64* %9173, align 8
  %9175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9175, align 1
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %9176, align 1
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9177, align 1
  %9178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9178, align 1
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9179, align 1
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9180, align 1
  br label %routine_idivl__r8d.exit126

routine_idivl__r8d.exit126:                       ; preds = %9165, %9169
  %9181 = phi %struct.Memory* [ %9168, %9165 ], [ %loadMem_463540, %9169 ]
  store %struct.Memory* %9181, %struct.Memory** %MEMORY
  %loadMem_463543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9183 = getelementptr inbounds %struct.GPR, %struct.GPR* %9182, i32 0, i32 33
  %9184 = getelementptr inbounds %struct.Reg, %struct.Reg* %9183, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %9184 to i64*
  %9185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9186 = getelementptr inbounds %struct.GPR, %struct.GPR* %9185, i32 0, i32 7
  %9187 = getelementptr inbounds %struct.Reg, %struct.Reg* %9186, i32 0, i32 0
  %RDX.i123 = bitcast %union.anon* %9187 to i64*
  %9188 = load i64, i64* %RDX.i123
  %9189 = load i64, i64* %PC.i122
  %9190 = add i64 %9189, 3
  store i64 %9190, i64* %PC.i122
  %9191 = trunc i64 %9188 to i32
  %9192 = sub i32 %9191, 1
  %9193 = zext i32 %9192 to i64
  store i64 %9193, i64* %RDX.i123, align 8
  %9194 = icmp ult i32 %9191, 1
  %9195 = zext i1 %9194 to i8
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9195, i8* %9196, align 1
  %9197 = and i32 %9192, 255
  %9198 = call i32 @llvm.ctpop.i32(i32 %9197)
  %9199 = trunc i32 %9198 to i8
  %9200 = and i8 %9199, 1
  %9201 = xor i8 %9200, 1
  %9202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9201, i8* %9202, align 1
  %9203 = xor i64 1, %9188
  %9204 = trunc i64 %9203 to i32
  %9205 = xor i32 %9204, %9192
  %9206 = lshr i32 %9205, 4
  %9207 = trunc i32 %9206 to i8
  %9208 = and i8 %9207, 1
  %9209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9208, i8* %9209, align 1
  %9210 = icmp eq i32 %9192, 0
  %9211 = zext i1 %9210 to i8
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9211, i8* %9212, align 1
  %9213 = lshr i32 %9192, 31
  %9214 = trunc i32 %9213 to i8
  %9215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9214, i8* %9215, align 1
  %9216 = lshr i32 %9191, 31
  %9217 = xor i32 %9213, %9216
  %9218 = add i32 %9217, %9216
  %9219 = icmp eq i32 %9218, 2
  %9220 = zext i1 %9219 to i8
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9220, i8* %9221, align 1
  store %struct.Memory* %loadMem_463543, %struct.Memory** %MEMORY
  %loadMem_463546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9223 = getelementptr inbounds %struct.GPR, %struct.GPR* %9222, i32 0, i32 33
  %9224 = getelementptr inbounds %struct.Reg, %struct.Reg* %9223, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %9224 to i64*
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9226 = getelementptr inbounds %struct.GPR, %struct.GPR* %9225, i32 0, i32 7
  %9227 = getelementptr inbounds %struct.Reg, %struct.Reg* %9226, i32 0, i32 0
  %RDX.i121 = bitcast %union.anon* %9227 to i64*
  %9228 = load i64, i64* %RDX.i121
  %9229 = load i64, i64* %PC.i120
  %9230 = add i64 %9229, 3
  store i64 %9230, i64* %PC.i120
  %9231 = trunc i64 %9228 to i32
  %9232 = add i32 65, %9231
  %9233 = zext i32 %9232 to i64
  store i64 %9233, i64* %RDX.i121, align 8
  %9234 = icmp ult i32 %9232, %9231
  %9235 = icmp ult i32 %9232, 65
  %9236 = or i1 %9234, %9235
  %9237 = zext i1 %9236 to i8
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9237, i8* %9238, align 1
  %9239 = and i32 %9232, 255
  %9240 = call i32 @llvm.ctpop.i32(i32 %9239)
  %9241 = trunc i32 %9240 to i8
  %9242 = and i8 %9241, 1
  %9243 = xor i8 %9242, 1
  %9244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9243, i8* %9244, align 1
  %9245 = xor i64 65, %9228
  %9246 = trunc i64 %9245 to i32
  %9247 = xor i32 %9246, %9232
  %9248 = lshr i32 %9247, 4
  %9249 = trunc i32 %9248 to i8
  %9250 = and i8 %9249, 1
  %9251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9250, i8* %9251, align 1
  %9252 = icmp eq i32 %9232, 0
  %9253 = zext i1 %9252 to i8
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9253, i8* %9254, align 1
  %9255 = lshr i32 %9232, 31
  %9256 = trunc i32 %9255 to i8
  %9257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9256, i8* %9257, align 1
  %9258 = lshr i32 %9231, 31
  %9259 = xor i32 %9255, %9258
  %9260 = add i32 %9259, %9255
  %9261 = icmp eq i32 %9260, 2
  %9262 = zext i1 %9261 to i8
  %9263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9262, i8* %9263, align 1
  store %struct.Memory* %loadMem_463546, %struct.Memory** %MEMORY
  %loadMem_463549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9265 = getelementptr inbounds %struct.GPR, %struct.GPR* %9264, i32 0, i32 33
  %9266 = getelementptr inbounds %struct.Reg, %struct.Reg* %9265, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %9266 to i64*
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9268 = getelementptr inbounds %struct.GPR, %struct.GPR* %9267, i32 0, i32 5
  %9269 = getelementptr inbounds %struct.Reg, %struct.Reg* %9268, i32 0, i32 0
  %RCX.i118 = bitcast %union.anon* %9269 to i64*
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9271 = getelementptr inbounds %struct.GPR, %struct.GPR* %9270, i32 0, i32 15
  %9272 = getelementptr inbounds %struct.Reg, %struct.Reg* %9271, i32 0, i32 0
  %RBP.i119 = bitcast %union.anon* %9272 to i64*
  %9273 = load i64, i64* %RBP.i119
  %9274 = sub i64 %9273, 48
  %9275 = load i64, i64* %PC.i117
  %9276 = add i64 %9275, 4
  store i64 %9276, i64* %PC.i117
  %9277 = inttoptr i64 %9274 to i64*
  %9278 = load i64, i64* %9277
  store i64 %9278, i64* %RCX.i118, align 8
  store %struct.Memory* %loadMem_463549, %struct.Memory** %MEMORY
  %loadMem_46354d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9280 = getelementptr inbounds %struct.GPR, %struct.GPR* %9279, i32 0, i32 33
  %9281 = getelementptr inbounds %struct.Reg, %struct.Reg* %9280, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %9281 to i64*
  %9282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9283 = getelementptr inbounds %struct.GPR, %struct.GPR* %9282, i32 0, i32 15
  %9284 = getelementptr inbounds %struct.Reg, %struct.Reg* %9283, i32 0, i32 0
  %RBP.i115 = bitcast %union.anon* %9284 to i64*
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9286 = getelementptr inbounds %struct.GPR, %struct.GPR* %9285, i32 0, i32 21
  %9287 = getelementptr inbounds %struct.Reg, %struct.Reg* %9286, i32 0, i32 0
  %R10.i116 = bitcast %union.anon* %9287 to i64*
  %9288 = load i64, i64* %RBP.i115
  %9289 = sub i64 %9288, 84
  %9290 = load i64, i64* %PC.i114
  %9291 = add i64 %9290, 4
  store i64 %9291, i64* %PC.i114
  %9292 = inttoptr i64 %9289 to i32*
  %9293 = load i32, i32* %9292
  %9294 = sext i32 %9293 to i64
  store i64 %9294, i64* %R10.i116, align 8
  store %struct.Memory* %loadMem_46354d, %struct.Memory** %MEMORY
  %loadMem_463551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9296 = getelementptr inbounds %struct.GPR, %struct.GPR* %9295, i32 0, i32 33
  %9297 = getelementptr inbounds %struct.Reg, %struct.Reg* %9296, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %9297 to i64*
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9299 = getelementptr inbounds %struct.GPR, %struct.GPR* %9298, i32 0, i32 23
  %9300 = getelementptr inbounds %struct.Reg, %struct.Reg* %9299, i32 0, i32 0
  %R11D.i111 = bitcast %union.anon* %9300 to i32*
  %9301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9302 = getelementptr inbounds %struct.GPR, %struct.GPR* %9301, i32 0, i32 5
  %9303 = getelementptr inbounds %struct.Reg, %struct.Reg* %9302, i32 0, i32 0
  %RCX.i112 = bitcast %union.anon* %9303 to i64*
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9305 = getelementptr inbounds %struct.GPR, %struct.GPR* %9304, i32 0, i32 21
  %9306 = getelementptr inbounds %struct.Reg, %struct.Reg* %9305, i32 0, i32 0
  %R10.i113 = bitcast %union.anon* %9306 to i64*
  %9307 = bitcast i32* %R11D.i111 to i64*
  %9308 = load i64, i64* %RCX.i112
  %9309 = load i64, i64* %R10.i113
  %9310 = mul i64 %9309, 4
  %9311 = add i64 %9310, %9308
  %9312 = load i64, i64* %PC.i110
  %9313 = add i64 %9312, 4
  store i64 %9313, i64* %PC.i110
  %9314 = inttoptr i64 %9311 to i32*
  %9315 = load i32, i32* %9314
  %9316 = zext i32 %9315 to i64
  store i64 %9316, i64* %9307, align 8
  store %struct.Memory* %loadMem_463551, %struct.Memory** %MEMORY
  %loadMem_463555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9318 = getelementptr inbounds %struct.GPR, %struct.GPR* %9317, i32 0, i32 33
  %9319 = getelementptr inbounds %struct.Reg, %struct.Reg* %9318, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %9319 to i64*
  %9320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9321 = getelementptr inbounds %struct.GPR, %struct.GPR* %9320, i32 0, i32 23
  %9322 = getelementptr inbounds %struct.Reg, %struct.Reg* %9321, i32 0, i32 0
  %R11D.i108 = bitcast %union.anon* %9322 to i32*
  %9323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9324 = getelementptr inbounds %struct.GPR, %struct.GPR* %9323, i32 0, i32 1
  %9325 = getelementptr inbounds %struct.Reg, %struct.Reg* %9324, i32 0, i32 0
  %RAX.i109 = bitcast %union.anon* %9325 to i64*
  %9326 = load i32, i32* %R11D.i108
  %9327 = zext i32 %9326 to i64
  %9328 = load i64, i64* %PC.i107
  %9329 = add i64 %9328, 3
  store i64 %9329, i64* %PC.i107
  %9330 = and i64 %9327, 4294967295
  store i64 %9330, i64* %RAX.i109, align 8
  store %struct.Memory* %loadMem_463555, %struct.Memory** %MEMORY
  %loadMem_463558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9332 = getelementptr inbounds %struct.GPR, %struct.GPR* %9331, i32 0, i32 33
  %9333 = getelementptr inbounds %struct.Reg, %struct.Reg* %9332, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %9333 to i64*
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9335 = getelementptr inbounds %struct.GPR, %struct.GPR* %9334, i32 0, i32 7
  %9336 = getelementptr inbounds %struct.Reg, %struct.Reg* %9335, i32 0, i32 0
  %EDX.i105 = bitcast %union.anon* %9336 to i32*
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9338 = getelementptr inbounds %struct.GPR, %struct.GPR* %9337, i32 0, i32 15
  %9339 = getelementptr inbounds %struct.Reg, %struct.Reg* %9338, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %9339 to i64*
  %9340 = load i64, i64* %RBP.i106
  %9341 = sub i64 %9340, 712
  %9342 = load i32, i32* %EDX.i105
  %9343 = zext i32 %9342 to i64
  %9344 = load i64, i64* %PC.i104
  %9345 = add i64 %9344, 6
  store i64 %9345, i64* %PC.i104
  %9346 = inttoptr i64 %9341 to i32*
  store i32 %9342, i32* %9346
  store %struct.Memory* %loadMem_463558, %struct.Memory** %MEMORY
  %loadMem_46355e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9348 = getelementptr inbounds %struct.GPR, %struct.GPR* %9347, i32 0, i32 33
  %9349 = getelementptr inbounds %struct.Reg, %struct.Reg* %9348, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %9349 to i64*
  %9350 = load i64, i64* %PC.i103
  %9351 = add i64 %9350, 1
  store i64 %9351, i64* %PC.i103
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9354 = bitcast %union.anon* %9353 to i32*
  %9355 = load i32, i32* %9354, align 8
  %9356 = sext i32 %9355 to i64
  %9357 = lshr i64 %9356, 32
  store i64 %9357, i64* %9352, align 8
  store %struct.Memory* %loadMem_46355e, %struct.Memory** %MEMORY
  %loadMem_46355f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9359 = getelementptr inbounds %struct.GPR, %struct.GPR* %9358, i32 0, i32 33
  %9360 = getelementptr inbounds %struct.Reg, %struct.Reg* %9359, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %9360 to i64*
  %9361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9362 = getelementptr inbounds %struct.GPR, %struct.GPR* %9361, i32 0, i32 17
  %9363 = getelementptr inbounds %struct.Reg, %struct.Reg* %9362, i32 0, i32 0
  %R8D.i99 = bitcast %union.anon* %9363 to i32*
  %9364 = load i32, i32* %R8D.i99
  %9365 = zext i32 %9364 to i64
  %9366 = load i64, i64* %PC.i98
  %9367 = add i64 %9366, 3
  store i64 %9367, i64* %PC.i98
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9369 = bitcast %union.anon* %9368 to i32*
  %9370 = load i32, i32* %9369, align 8
  %9371 = zext i32 %9370 to i64
  %9372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %9373 = bitcast %union.anon* %9372 to i32*
  %9374 = load i32, i32* %9373, align 8
  %9375 = zext i32 %9374 to i64
  %9376 = shl i64 %9365, 32
  %9377 = ashr exact i64 %9376, 32
  %9378 = shl i64 %9375, 32
  %9379 = or i64 %9378, %9371
  %9380 = sdiv i64 %9379, %9377
  %9381 = shl i64 %9380, 32
  %9382 = ashr exact i64 %9381, 32
  %9383 = icmp eq i64 %9380, %9382
  br i1 %9383, label %9388, label %9384

; <label>:9384:                                   ; preds = %routine_idivl__r8d.exit126
  %9385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9386 = load i64, i64* %9385, align 8
  %9387 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9386, %struct.Memory* %loadMem_46355f)
  br label %routine_idivl__r8d.exit100

; <label>:9388:                                   ; preds = %routine_idivl__r8d.exit126
  %9389 = srem i64 %9379, %9377
  %9390 = getelementptr inbounds %union.anon, %union.anon* %9368, i64 0, i32 0
  %9391 = and i64 %9380, 4294967295
  store i64 %9391, i64* %9390, align 8
  %9392 = getelementptr inbounds %union.anon, %union.anon* %9372, i64 0, i32 0
  %9393 = and i64 %9389, 4294967295
  store i64 %9393, i64* %9392, align 8
  %9394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9394, align 1
  %9395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %9395, align 1
  %9396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9396, align 1
  %9397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9397, align 1
  %9398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9398, align 1
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9399, align 1
  br label %routine_idivl__r8d.exit100

routine_idivl__r8d.exit100:                       ; preds = %9384, %9388
  %9400 = phi %struct.Memory* [ %9387, %9384 ], [ %loadMem_46355f, %9388 ]
  store %struct.Memory* %9400, %struct.Memory** %MEMORY
  %loadMem_463562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 33
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %9403 to i64*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 7
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %RDX.i97 = bitcast %union.anon* %9406 to i64*
  %9407 = load i64, i64* %RDX.i97
  %9408 = load i64, i64* %PC.i96
  %9409 = add i64 %9408, 3
  store i64 %9409, i64* %PC.i96
  %9410 = trunc i64 %9407 to i32
  %9411 = sub i32 %9410, 1
  %9412 = zext i32 %9411 to i64
  store i64 %9412, i64* %RDX.i97, align 8
  %9413 = icmp ult i32 %9410, 1
  %9414 = zext i1 %9413 to i8
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9414, i8* %9415, align 1
  %9416 = and i32 %9411, 255
  %9417 = call i32 @llvm.ctpop.i32(i32 %9416)
  %9418 = trunc i32 %9417 to i8
  %9419 = and i8 %9418, 1
  %9420 = xor i8 %9419, 1
  %9421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9420, i8* %9421, align 1
  %9422 = xor i64 1, %9407
  %9423 = trunc i64 %9422 to i32
  %9424 = xor i32 %9423, %9411
  %9425 = lshr i32 %9424, 4
  %9426 = trunc i32 %9425 to i8
  %9427 = and i8 %9426, 1
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9427, i8* %9428, align 1
  %9429 = icmp eq i32 %9411, 0
  %9430 = zext i1 %9429 to i8
  %9431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9430, i8* %9431, align 1
  %9432 = lshr i32 %9411, 31
  %9433 = trunc i32 %9432 to i8
  %9434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9433, i8* %9434, align 1
  %9435 = lshr i32 %9410, 31
  %9436 = xor i32 %9432, %9435
  %9437 = add i32 %9436, %9435
  %9438 = icmp eq i32 %9437, 2
  %9439 = zext i1 %9438 to i8
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9439, i8* %9440, align 1
  store %struct.Memory* %loadMem_463562, %struct.Memory** %MEMORY
  %loadMem_463565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9442 = getelementptr inbounds %struct.GPR, %struct.GPR* %9441, i32 0, i32 33
  %9443 = getelementptr inbounds %struct.Reg, %struct.Reg* %9442, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %9443 to i64*
  %9444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9445 = getelementptr inbounds %struct.GPR, %struct.GPR* %9444, i32 0, i32 7
  %9446 = getelementptr inbounds %struct.Reg, %struct.Reg* %9445, i32 0, i32 0
  %EDX.i95 = bitcast %union.anon* %9446 to i32*
  %9447 = load i32, i32* %EDX.i95
  %9448 = zext i32 %9447 to i64
  %9449 = load i64, i64* %PC.i94
  %9450 = add i64 %9449, 3
  store i64 %9450, i64* %PC.i94
  %9451 = sub i32 %9447, 8
  %9452 = icmp ult i32 %9447, 8
  %9453 = zext i1 %9452 to i8
  %9454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9453, i8* %9454, align 1
  %9455 = and i32 %9451, 255
  %9456 = call i32 @llvm.ctpop.i32(i32 %9455)
  %9457 = trunc i32 %9456 to i8
  %9458 = and i8 %9457, 1
  %9459 = xor i8 %9458, 1
  %9460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9459, i8* %9460, align 1
  %9461 = xor i64 8, %9448
  %9462 = trunc i64 %9461 to i32
  %9463 = xor i32 %9462, %9451
  %9464 = lshr i32 %9463, 4
  %9465 = trunc i32 %9464 to i8
  %9466 = and i8 %9465, 1
  %9467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9466, i8* %9467, align 1
  %9468 = icmp eq i32 %9451, 0
  %9469 = zext i1 %9468 to i8
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9469, i8* %9470, align 1
  %9471 = lshr i32 %9451, 31
  %9472 = trunc i32 %9471 to i8
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9472, i8* %9473, align 1
  %9474 = lshr i32 %9447, 31
  %9475 = xor i32 %9471, %9474
  %9476 = add i32 %9475, %9474
  %9477 = icmp eq i32 %9476, 2
  %9478 = zext i1 %9477 to i8
  %9479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9478, i8* %9479, align 1
  store %struct.Memory* %loadMem_463565, %struct.Memory** %MEMORY
  %loadMem_463568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9481 = getelementptr inbounds %struct.GPR, %struct.GPR* %9480, i32 0, i32 33
  %9482 = getelementptr inbounds %struct.Reg, %struct.Reg* %9481, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %9482 to i64*
  %9483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9484 = getelementptr inbounds %struct.GPR, %struct.GPR* %9483, i32 0, i32 3
  %9485 = getelementptr inbounds %struct.Reg, %struct.Reg* %9484, i32 0, i32 0
  %9486 = bitcast %union.anon* %9485 to %struct.anon.2*
  %BL.i93 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9486, i32 0, i32 0
  %9487 = load i64, i64* %PC.i92
  %9488 = add i64 %9487, 3
  store i64 %9488, i64* %PC.i92
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9490 = load i8, i8* %9489, align 1
  %9491 = icmp ne i8 %9490, 0
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9493 = load i8, i8* %9492, align 1
  %9494 = icmp ne i8 %9493, 0
  %9495 = xor i1 %9491, %9494
  %9496 = xor i1 %9495, true
  %9497 = zext i1 %9496 to i8
  store i8 %9497, i8* %BL.i93, align 1
  store %struct.Memory* %loadMem_463568, %struct.Memory** %MEMORY
  %loadMem_46356b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9499 = getelementptr inbounds %struct.GPR, %struct.GPR* %9498, i32 0, i32 33
  %9500 = getelementptr inbounds %struct.Reg, %struct.Reg* %9499, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %9500 to i64*
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9502 = getelementptr inbounds %struct.GPR, %struct.GPR* %9501, i32 0, i32 3
  %9503 = getelementptr inbounds %struct.Reg, %struct.Reg* %9502, i32 0, i32 0
  %9504 = bitcast %union.anon* %9503 to %struct.anon.2*
  %BL.i91 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9504, i32 0, i32 0
  %9505 = load i8, i8* %BL.i91
  %9506 = zext i8 %9505 to i64
  %9507 = load i64, i64* %PC.i90
  %9508 = add i64 %9507, 3
  store i64 %9508, i64* %PC.i90
  %9509 = and i64 1, %9506
  %9510 = trunc i64 %9509 to i8
  store i8 %9510, i8* %BL.i91, align 1
  %9511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9511, align 1
  %9512 = trunc i64 %9509 to i32
  %9513 = and i32 %9512, 255
  %9514 = call i32 @llvm.ctpop.i32(i32 %9513)
  %9515 = trunc i32 %9514 to i8
  %9516 = and i8 %9515, 1
  %9517 = xor i8 %9516, 1
  %9518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9517, i8* %9518, align 1
  %9519 = icmp eq i8 %9510, 0
  %9520 = zext i1 %9519 to i8
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9520, i8* %9521, align 1
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9522, align 1
  %9523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9523, align 1
  %9524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9524, align 1
  store %struct.Memory* %loadMem_46356b, %struct.Memory** %MEMORY
  %loadMem_46356e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9526 = getelementptr inbounds %struct.GPR, %struct.GPR* %9525, i32 0, i32 33
  %9527 = getelementptr inbounds %struct.Reg, %struct.Reg* %9526, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %9527 to i64*
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9529 = getelementptr inbounds %struct.GPR, %struct.GPR* %9528, i32 0, i32 3
  %9530 = getelementptr inbounds %struct.Reg, %struct.Reg* %9529, i32 0, i32 0
  %9531 = bitcast %union.anon* %9530 to %struct.anon.2*
  %BL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9531, i32 0, i32 0
  %9532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9533 = getelementptr inbounds %struct.GPR, %struct.GPR* %9532, i32 0, i32 7
  %9534 = getelementptr inbounds %struct.Reg, %struct.Reg* %9533, i32 0, i32 0
  %RDX.i89 = bitcast %union.anon* %9534 to i64*
  %9535 = load i8, i8* %BL.i
  %9536 = zext i8 %9535 to i64
  %9537 = load i64, i64* %PC.i88
  %9538 = add i64 %9537, 3
  store i64 %9538, i64* %PC.i88
  %9539 = and i64 %9536, 255
  store i64 %9539, i64* %RDX.i89, align 8
  store %struct.Memory* %loadMem_46356e, %struct.Memory** %MEMORY
  %loadMem_463571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9541 = getelementptr inbounds %struct.GPR, %struct.GPR* %9540, i32 0, i32 33
  %9542 = getelementptr inbounds %struct.Reg, %struct.Reg* %9541, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %9542 to i64*
  %9543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9544 = getelementptr inbounds %struct.GPR, %struct.GPR* %9543, i32 0, i32 23
  %9545 = getelementptr inbounds %struct.Reg, %struct.Reg* %9544, i32 0, i32 0
  %R11D.i86 = bitcast %union.anon* %9545 to i32*
  %9546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9547 = getelementptr inbounds %struct.GPR, %struct.GPR* %9546, i32 0, i32 15
  %9548 = getelementptr inbounds %struct.Reg, %struct.Reg* %9547, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %9548 to i64*
  %9549 = bitcast i32* %R11D.i86 to i64*
  %9550 = load i64, i64* %RBP.i87
  %9551 = sub i64 %9550, 712
  %9552 = load i64, i64* %PC.i85
  %9553 = add i64 %9552, 7
  store i64 %9553, i64* %PC.i85
  %9554 = inttoptr i64 %9551 to i32*
  %9555 = load i32, i32* %9554
  %9556 = zext i32 %9555 to i64
  store i64 %9556, i64* %9549, align 8
  store %struct.Memory* %loadMem_463571, %struct.Memory** %MEMORY
  %loadMem_463578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9558 = getelementptr inbounds %struct.GPR, %struct.GPR* %9557, i32 0, i32 33
  %9559 = getelementptr inbounds %struct.Reg, %struct.Reg* %9558, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %9559 to i64*
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9561 = getelementptr inbounds %struct.GPR, %struct.GPR* %9560, i32 0, i32 7
  %9562 = getelementptr inbounds %struct.Reg, %struct.Reg* %9561, i32 0, i32 0
  %EDX.i83 = bitcast %union.anon* %9562 to i32*
  %9563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9564 = getelementptr inbounds %struct.GPR, %struct.GPR* %9563, i32 0, i32 23
  %9565 = getelementptr inbounds %struct.Reg, %struct.Reg* %9564, i32 0, i32 0
  %R11D.i84 = bitcast %union.anon* %9565 to i32*
  %9566 = bitcast i32* %R11D.i84 to i64*
  %9567 = load i32, i32* %R11D.i84
  %9568 = zext i32 %9567 to i64
  %9569 = load i32, i32* %EDX.i83
  %9570 = zext i32 %9569 to i64
  %9571 = load i64, i64* %PC.i82
  %9572 = add i64 %9571, 3
  store i64 %9572, i64* %PC.i82
  %9573 = add i32 %9569, %9567
  %9574 = zext i32 %9573 to i64
  store i64 %9574, i64* %9566, align 8
  %9575 = icmp ult i32 %9573, %9567
  %9576 = icmp ult i32 %9573, %9569
  %9577 = or i1 %9575, %9576
  %9578 = zext i1 %9577 to i8
  %9579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9578, i8* %9579, align 1
  %9580 = and i32 %9573, 255
  %9581 = call i32 @llvm.ctpop.i32(i32 %9580)
  %9582 = trunc i32 %9581 to i8
  %9583 = and i8 %9582, 1
  %9584 = xor i8 %9583, 1
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9584, i8* %9585, align 1
  %9586 = xor i64 %9570, %9568
  %9587 = trunc i64 %9586 to i32
  %9588 = xor i32 %9587, %9573
  %9589 = lshr i32 %9588, 4
  %9590 = trunc i32 %9589 to i8
  %9591 = and i8 %9590, 1
  %9592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9591, i8* %9592, align 1
  %9593 = icmp eq i32 %9573, 0
  %9594 = zext i1 %9593 to i8
  %9595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9594, i8* %9595, align 1
  %9596 = lshr i32 %9573, 31
  %9597 = trunc i32 %9596 to i8
  %9598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9597, i8* %9598, align 1
  %9599 = lshr i32 %9567, 31
  %9600 = lshr i32 %9569, 31
  %9601 = xor i32 %9596, %9599
  %9602 = xor i32 %9596, %9600
  %9603 = add i32 %9601, %9602
  %9604 = icmp eq i32 %9603, 2
  %9605 = zext i1 %9604 to i8
  %9606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9605, i8* %9606, align 1
  store %struct.Memory* %loadMem_463578, %struct.Memory** %MEMORY
  %loadMem_46357b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9608 = getelementptr inbounds %struct.GPR, %struct.GPR* %9607, i32 0, i32 33
  %9609 = getelementptr inbounds %struct.Reg, %struct.Reg* %9608, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %9609 to i64*
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9611 = getelementptr inbounds %struct.GPR, %struct.GPR* %9610, i32 0, i32 7
  %9612 = getelementptr inbounds %struct.Reg, %struct.Reg* %9611, i32 0, i32 0
  %RDX.i81 = bitcast %union.anon* %9612 to i64*
  %9613 = load i64, i64* %PC.i80
  %9614 = add i64 %9613, 7
  store i64 %9614, i64* %PC.i80
  %9615 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %9616 = zext i32 %9615 to i64
  store i64 %9616, i64* %RDX.i81, align 8
  store %struct.Memory* %loadMem_46357b, %struct.Memory** %MEMORY
  %loadMem_463582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9618 = getelementptr inbounds %struct.GPR, %struct.GPR* %9617, i32 0, i32 33
  %9619 = getelementptr inbounds %struct.Reg, %struct.Reg* %9618, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %9619 to i64*
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9621 = getelementptr inbounds %struct.GPR, %struct.GPR* %9620, i32 0, i32 5
  %9622 = getelementptr inbounds %struct.Reg, %struct.Reg* %9621, i32 0, i32 0
  %RCX.i78 = bitcast %union.anon* %9622 to i64*
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9624 = getelementptr inbounds %struct.GPR, %struct.GPR* %9623, i32 0, i32 15
  %9625 = getelementptr inbounds %struct.Reg, %struct.Reg* %9624, i32 0, i32 0
  %RBP.i79 = bitcast %union.anon* %9625 to i64*
  %9626 = load i64, i64* %RBP.i79
  %9627 = sub i64 %9626, 48
  %9628 = load i64, i64* %PC.i77
  %9629 = add i64 %9628, 4
  store i64 %9629, i64* %PC.i77
  %9630 = inttoptr i64 %9627 to i64*
  %9631 = load i64, i64* %9630
  store i64 %9631, i64* %RCX.i78, align 8
  store %struct.Memory* %loadMem_463582, %struct.Memory** %MEMORY
  %loadMem_463586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9633 = getelementptr inbounds %struct.GPR, %struct.GPR* %9632, i32 0, i32 33
  %9634 = getelementptr inbounds %struct.Reg, %struct.Reg* %9633, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %9634 to i64*
  %9635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9636 = getelementptr inbounds %struct.GPR, %struct.GPR* %9635, i32 0, i32 15
  %9637 = getelementptr inbounds %struct.Reg, %struct.Reg* %9636, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %9637 to i64*
  %9638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9639 = getelementptr inbounds %struct.GPR, %struct.GPR* %9638, i32 0, i32 21
  %9640 = getelementptr inbounds %struct.Reg, %struct.Reg* %9639, i32 0, i32 0
  %R10.i76 = bitcast %union.anon* %9640 to i64*
  %9641 = load i64, i64* %RBP.i75
  %9642 = sub i64 %9641, 84
  %9643 = load i64, i64* %PC.i74
  %9644 = add i64 %9643, 4
  store i64 %9644, i64* %PC.i74
  %9645 = inttoptr i64 %9642 to i32*
  %9646 = load i32, i32* %9645
  %9647 = sext i32 %9646 to i64
  store i64 %9647, i64* %R10.i76, align 8
  store %struct.Memory* %loadMem_463586, %struct.Memory** %MEMORY
  %loadMem_46358a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9649 = getelementptr inbounds %struct.GPR, %struct.GPR* %9648, i32 0, i32 33
  %9650 = getelementptr inbounds %struct.Reg, %struct.Reg* %9649, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %9650 to i64*
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9652 = getelementptr inbounds %struct.GPR, %struct.GPR* %9651, i32 0, i32 29
  %9653 = getelementptr inbounds %struct.Reg, %struct.Reg* %9652, i32 0, i32 0
  %R14D.i71 = bitcast %union.anon* %9653 to i32*
  %9654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9655 = getelementptr inbounds %struct.GPR, %struct.GPR* %9654, i32 0, i32 5
  %9656 = getelementptr inbounds %struct.Reg, %struct.Reg* %9655, i32 0, i32 0
  %RCX.i72 = bitcast %union.anon* %9656 to i64*
  %9657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9658 = getelementptr inbounds %struct.GPR, %struct.GPR* %9657, i32 0, i32 21
  %9659 = getelementptr inbounds %struct.Reg, %struct.Reg* %9658, i32 0, i32 0
  %R10.i73 = bitcast %union.anon* %9659 to i64*
  %9660 = bitcast i32* %R14D.i71 to i64*
  %9661 = load i64, i64* %RCX.i72
  %9662 = load i64, i64* %R10.i73
  %9663 = mul i64 %9662, 4
  %9664 = add i64 %9663, %9661
  %9665 = load i64, i64* %PC.i70
  %9666 = add i64 %9665, 4
  store i64 %9666, i64* %PC.i70
  %9667 = inttoptr i64 %9664 to i32*
  %9668 = load i32, i32* %9667
  %9669 = zext i32 %9668 to i64
  store i64 %9669, i64* %9660, align 8
  store %struct.Memory* %loadMem_46358a, %struct.Memory** %MEMORY
  %loadMem_46358e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9671 = getelementptr inbounds %struct.GPR, %struct.GPR* %9670, i32 0, i32 33
  %9672 = getelementptr inbounds %struct.Reg, %struct.Reg* %9671, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %9672 to i64*
  %9673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9674 = getelementptr inbounds %struct.GPR, %struct.GPR* %9673, i32 0, i32 29
  %9675 = getelementptr inbounds %struct.Reg, %struct.Reg* %9674, i32 0, i32 0
  %R14D.i68 = bitcast %union.anon* %9675 to i32*
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9677 = getelementptr inbounds %struct.GPR, %struct.GPR* %9676, i32 0, i32 1
  %9678 = getelementptr inbounds %struct.Reg, %struct.Reg* %9677, i32 0, i32 0
  %RAX.i69 = bitcast %union.anon* %9678 to i64*
  %9679 = load i32, i32* %R14D.i68
  %9680 = zext i32 %9679 to i64
  %9681 = load i64, i64* %PC.i67
  %9682 = add i64 %9681, 3
  store i64 %9682, i64* %PC.i67
  %9683 = and i64 %9680, 4294967295
  store i64 %9683, i64* %RAX.i69, align 8
  store %struct.Memory* %loadMem_46358e, %struct.Memory** %MEMORY
  %loadMem_463591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9685 = getelementptr inbounds %struct.GPR, %struct.GPR* %9684, i32 0, i32 33
  %9686 = getelementptr inbounds %struct.Reg, %struct.Reg* %9685, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %9686 to i64*
  %9687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9688 = getelementptr inbounds %struct.GPR, %struct.GPR* %9687, i32 0, i32 7
  %9689 = getelementptr inbounds %struct.Reg, %struct.Reg* %9688, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %9689 to i32*
  %9690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9691 = getelementptr inbounds %struct.GPR, %struct.GPR* %9690, i32 0, i32 15
  %9692 = getelementptr inbounds %struct.Reg, %struct.Reg* %9691, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %9692 to i64*
  %9693 = load i64, i64* %RBP.i66
  %9694 = sub i64 %9693, 716
  %9695 = load i32, i32* %EDX.i
  %9696 = zext i32 %9695 to i64
  %9697 = load i64, i64* %PC.i65
  %9698 = add i64 %9697, 6
  store i64 %9698, i64* %PC.i65
  %9699 = inttoptr i64 %9694 to i32*
  store i32 %9695, i32* %9699
  store %struct.Memory* %loadMem_463591, %struct.Memory** %MEMORY
  %loadMem_463597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9701 = getelementptr inbounds %struct.GPR, %struct.GPR* %9700, i32 0, i32 33
  %9702 = getelementptr inbounds %struct.Reg, %struct.Reg* %9701, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %9702 to i64*
  %9703 = load i64, i64* %PC.i64
  %9704 = add i64 %9703, 1
  store i64 %9704, i64* %PC.i64
  %9705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9707 = bitcast %union.anon* %9706 to i32*
  %9708 = load i32, i32* %9707, align 8
  %9709 = sext i32 %9708 to i64
  %9710 = lshr i64 %9709, 32
  store i64 %9710, i64* %9705, align 8
  store %struct.Memory* %loadMem_463597, %struct.Memory** %MEMORY
  %loadMem_463598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9712 = getelementptr inbounds %struct.GPR, %struct.GPR* %9711, i32 0, i32 33
  %9713 = getelementptr inbounds %struct.Reg, %struct.Reg* %9712, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %9713 to i64*
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9715 = getelementptr inbounds %struct.GPR, %struct.GPR* %9714, i32 0, i32 17
  %9716 = getelementptr inbounds %struct.Reg, %struct.Reg* %9715, i32 0, i32 0
  %R8D.i61 = bitcast %union.anon* %9716 to i32*
  %9717 = load i32, i32* %R8D.i61
  %9718 = zext i32 %9717 to i64
  %9719 = load i64, i64* %PC.i60
  %9720 = add i64 %9719, 3
  store i64 %9720, i64* %PC.i60
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9722 = bitcast %union.anon* %9721 to i32*
  %9723 = load i32, i32* %9722, align 8
  %9724 = zext i32 %9723 to i64
  %9725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %9726 = bitcast %union.anon* %9725 to i32*
  %9727 = load i32, i32* %9726, align 8
  %9728 = zext i32 %9727 to i64
  %9729 = shl i64 %9718, 32
  %9730 = ashr exact i64 %9729, 32
  %9731 = shl i64 %9728, 32
  %9732 = or i64 %9731, %9724
  %9733 = sdiv i64 %9732, %9730
  %9734 = shl i64 %9733, 32
  %9735 = ashr exact i64 %9734, 32
  %9736 = icmp eq i64 %9733, %9735
  br i1 %9736, label %9741, label %9737

; <label>:9737:                                   ; preds = %routine_idivl__r8d.exit100
  %9738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9739 = load i64, i64* %9738, align 8
  %9740 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9739, %struct.Memory* %loadMem_463598)
  br label %routine_idivl__r8d.exit

; <label>:9741:                                   ; preds = %routine_idivl__r8d.exit100
  %9742 = srem i64 %9732, %9730
  %9743 = getelementptr inbounds %union.anon, %union.anon* %9721, i64 0, i32 0
  %9744 = and i64 %9733, 4294967295
  store i64 %9744, i64* %9743, align 8
  %9745 = getelementptr inbounds %union.anon, %union.anon* %9725, i64 0, i32 0
  %9746 = and i64 %9742, 4294967295
  store i64 %9746, i64* %9745, align 8
  %9747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9747, align 1
  %9748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %9748, align 1
  %9749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9749, align 1
  %9750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9750, align 1
  %9751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9751, align 1
  %9752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9752, align 1
  br label %routine_idivl__r8d.exit

routine_idivl__r8d.exit:                          ; preds = %9737, %9741
  %9753 = phi %struct.Memory* [ %9740, %9737 ], [ %loadMem_463598, %9741 ]
  store %struct.Memory* %9753, %struct.Memory** %MEMORY
  %loadMem_46359b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9755 = getelementptr inbounds %struct.GPR, %struct.GPR* %9754, i32 0, i32 33
  %9756 = getelementptr inbounds %struct.Reg, %struct.Reg* %9755, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %9756 to i64*
  %9757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9758 = getelementptr inbounds %struct.GPR, %struct.GPR* %9757, i32 0, i32 1
  %9759 = getelementptr inbounds %struct.Reg, %struct.Reg* %9758, i32 0, i32 0
  %RAX.i59 = bitcast %union.anon* %9759 to i64*
  %9760 = load i64, i64* %RAX.i59
  %9761 = load i64, i64* %PC.i58
  %9762 = add i64 %9761, 3
  store i64 %9762, i64* %PC.i58
  %9763 = trunc i64 %9760 to i32
  %9764 = sub i32 %9763, 1
  %9765 = zext i32 %9764 to i64
  store i64 %9765, i64* %RAX.i59, align 8
  %9766 = icmp ult i32 %9763, 1
  %9767 = zext i1 %9766 to i8
  %9768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9767, i8* %9768, align 1
  %9769 = and i32 %9764, 255
  %9770 = call i32 @llvm.ctpop.i32(i32 %9769)
  %9771 = trunc i32 %9770 to i8
  %9772 = and i8 %9771, 1
  %9773 = xor i8 %9772, 1
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9773, i8* %9774, align 1
  %9775 = xor i64 1, %9760
  %9776 = trunc i64 %9775 to i32
  %9777 = xor i32 %9776, %9764
  %9778 = lshr i32 %9777, 4
  %9779 = trunc i32 %9778 to i8
  %9780 = and i8 %9779, 1
  %9781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9780, i8* %9781, align 1
  %9782 = icmp eq i32 %9764, 0
  %9783 = zext i1 %9782 to i8
  %9784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9783, i8* %9784, align 1
  %9785 = lshr i32 %9764, 31
  %9786 = trunc i32 %9785 to i8
  %9787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9786, i8* %9787, align 1
  %9788 = lshr i32 %9763, 31
  %9789 = xor i32 %9785, %9788
  %9790 = add i32 %9789, %9788
  %9791 = icmp eq i32 %9790, 2
  %9792 = zext i1 %9791 to i8
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9792, i8* %9793, align 1
  store %struct.Memory* %loadMem_46359b, %struct.Memory** %MEMORY
  %loadMem_46359e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9795 = getelementptr inbounds %struct.GPR, %struct.GPR* %9794, i32 0, i32 33
  %9796 = getelementptr inbounds %struct.Reg, %struct.Reg* %9795, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %9796 to i64*
  %9797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9798 = getelementptr inbounds %struct.GPR, %struct.GPR* %9797, i32 0, i32 29
  %9799 = getelementptr inbounds %struct.Reg, %struct.Reg* %9798, i32 0, i32 0
  %R14D.i56 = bitcast %union.anon* %9799 to i32*
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9801 = getelementptr inbounds %struct.GPR, %struct.GPR* %9800, i32 0, i32 15
  %9802 = getelementptr inbounds %struct.Reg, %struct.Reg* %9801, i32 0, i32 0
  %RBP.i57 = bitcast %union.anon* %9802 to i64*
  %9803 = bitcast i32* %R14D.i56 to i64*
  %9804 = load i64, i64* %RBP.i57
  %9805 = sub i64 %9804, 716
  %9806 = load i64, i64* %PC.i55
  %9807 = add i64 %9806, 7
  store i64 %9807, i64* %PC.i55
  %9808 = inttoptr i64 %9805 to i32*
  %9809 = load i32, i32* %9808
  %9810 = zext i32 %9809 to i64
  store i64 %9810, i64* %9803, align 8
  store %struct.Memory* %loadMem_46359e, %struct.Memory** %MEMORY
  %loadMem_4635a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9812 = getelementptr inbounds %struct.GPR, %struct.GPR* %9811, i32 0, i32 33
  %9813 = getelementptr inbounds %struct.Reg, %struct.Reg* %9812, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %9813 to i64*
  %9814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9815 = getelementptr inbounds %struct.GPR, %struct.GPR* %9814, i32 0, i32 1
  %9816 = getelementptr inbounds %struct.Reg, %struct.Reg* %9815, i32 0, i32 0
  %EAX.i53 = bitcast %union.anon* %9816 to i32*
  %9817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9818 = getelementptr inbounds %struct.GPR, %struct.GPR* %9817, i32 0, i32 29
  %9819 = getelementptr inbounds %struct.Reg, %struct.Reg* %9818, i32 0, i32 0
  %R14D.i54 = bitcast %union.anon* %9819 to i32*
  %9820 = bitcast i32* %R14D.i54 to i64*
  %9821 = load i32, i32* %R14D.i54
  %9822 = zext i32 %9821 to i64
  %9823 = load i32, i32* %EAX.i53
  %9824 = zext i32 %9823 to i64
  %9825 = load i64, i64* %PC.i52
  %9826 = add i64 %9825, 3
  store i64 %9826, i64* %PC.i52
  %9827 = sub i32 %9821, %9823
  %9828 = zext i32 %9827 to i64
  store i64 %9828, i64* %9820, align 8
  %9829 = icmp ult i32 %9821, %9823
  %9830 = zext i1 %9829 to i8
  %9831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9830, i8* %9831, align 1
  %9832 = and i32 %9827, 255
  %9833 = call i32 @llvm.ctpop.i32(i32 %9832)
  %9834 = trunc i32 %9833 to i8
  %9835 = and i8 %9834, 1
  %9836 = xor i8 %9835, 1
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9836, i8* %9837, align 1
  %9838 = xor i64 %9824, %9822
  %9839 = trunc i64 %9838 to i32
  %9840 = xor i32 %9839, %9827
  %9841 = lshr i32 %9840, 4
  %9842 = trunc i32 %9841 to i8
  %9843 = and i8 %9842, 1
  %9844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9843, i8* %9844, align 1
  %9845 = icmp eq i32 %9827, 0
  %9846 = zext i1 %9845 to i8
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9846, i8* %9847, align 1
  %9848 = lshr i32 %9827, 31
  %9849 = trunc i32 %9848 to i8
  %9850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9849, i8* %9850, align 1
  %9851 = lshr i32 %9821, 31
  %9852 = lshr i32 %9823, 31
  %9853 = xor i32 %9852, %9851
  %9854 = xor i32 %9848, %9851
  %9855 = add i32 %9854, %9853
  %9856 = icmp eq i32 %9855, 2
  %9857 = zext i1 %9856 to i8
  %9858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9857, i8* %9858, align 1
  store %struct.Memory* %loadMem_4635a5, %struct.Memory** %MEMORY
  %loadMem_4635a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9860 = getelementptr inbounds %struct.GPR, %struct.GPR* %9859, i32 0, i32 33
  %9861 = getelementptr inbounds %struct.Reg, %struct.Reg* %9860, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %9861 to i64*
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9863 = getelementptr inbounds %struct.GPR, %struct.GPR* %9862, i32 0, i32 5
  %9864 = getelementptr inbounds %struct.Reg, %struct.Reg* %9863, i32 0, i32 0
  %RCX.i50 = bitcast %union.anon* %9864 to i64*
  %9865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9866 = getelementptr inbounds %struct.GPR, %struct.GPR* %9865, i32 0, i32 15
  %9867 = getelementptr inbounds %struct.Reg, %struct.Reg* %9866, i32 0, i32 0
  %RBP.i51 = bitcast %union.anon* %9867 to i64*
  %9868 = load i64, i64* %RBP.i51
  %9869 = sub i64 %9868, 48
  %9870 = load i64, i64* %PC.i49
  %9871 = add i64 %9870, 4
  store i64 %9871, i64* %PC.i49
  %9872 = inttoptr i64 %9869 to i64*
  %9873 = load i64, i64* %9872
  store i64 %9873, i64* %RCX.i50, align 8
  store %struct.Memory* %loadMem_4635a8, %struct.Memory** %MEMORY
  %loadMem_4635ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %9874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9875 = getelementptr inbounds %struct.GPR, %struct.GPR* %9874, i32 0, i32 33
  %9876 = getelementptr inbounds %struct.Reg, %struct.Reg* %9875, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %9876 to i64*
  %9877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9878 = getelementptr inbounds %struct.GPR, %struct.GPR* %9877, i32 0, i32 15
  %9879 = getelementptr inbounds %struct.Reg, %struct.Reg* %9878, i32 0, i32 0
  %RBP.i47 = bitcast %union.anon* %9879 to i64*
  %9880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9881 = getelementptr inbounds %struct.GPR, %struct.GPR* %9880, i32 0, i32 21
  %9882 = getelementptr inbounds %struct.Reg, %struct.Reg* %9881, i32 0, i32 0
  %R10.i48 = bitcast %union.anon* %9882 to i64*
  %9883 = load i64, i64* %RBP.i47
  %9884 = sub i64 %9883, 84
  %9885 = load i64, i64* %PC.i46
  %9886 = add i64 %9885, 4
  store i64 %9886, i64* %PC.i46
  %9887 = inttoptr i64 %9884 to i32*
  %9888 = load i32, i32* %9887
  %9889 = sext i32 %9888 to i64
  store i64 %9889, i64* %R10.i48, align 8
  store %struct.Memory* %loadMem_4635ac, %struct.Memory** %MEMORY
  %loadMem_4635b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9891 = getelementptr inbounds %struct.GPR, %struct.GPR* %9890, i32 0, i32 33
  %9892 = getelementptr inbounds %struct.Reg, %struct.Reg* %9891, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %9892 to i64*
  %9893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9894 = getelementptr inbounds %struct.GPR, %struct.GPR* %9893, i32 0, i32 17
  %9895 = getelementptr inbounds %struct.Reg, %struct.Reg* %9894, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %9895 to i32*
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9897 = getelementptr inbounds %struct.GPR, %struct.GPR* %9896, i32 0, i32 5
  %9898 = getelementptr inbounds %struct.Reg, %struct.Reg* %9897, i32 0, i32 0
  %RCX.i45 = bitcast %union.anon* %9898 to i64*
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9900 = getelementptr inbounds %struct.GPR, %struct.GPR* %9899, i32 0, i32 21
  %9901 = getelementptr inbounds %struct.Reg, %struct.Reg* %9900, i32 0, i32 0
  %R10.i = bitcast %union.anon* %9901 to i64*
  %9902 = bitcast i32* %R8D.i to i64*
  %9903 = load i64, i64* %RCX.i45
  %9904 = load i64, i64* %R10.i
  %9905 = mul i64 %9904, 4
  %9906 = add i64 %9903, 200
  %9907 = add i64 %9906, %9905
  %9908 = load i64, i64* %PC.i44
  %9909 = add i64 %9908, 8
  store i64 %9909, i64* %PC.i44
  %9910 = inttoptr i64 %9907 to i32*
  %9911 = load i32, i32* %9910
  %9912 = zext i32 %9911 to i64
  store i64 %9912, i64* %9902, align 8
  store %struct.Memory* %loadMem_4635b0, %struct.Memory** %MEMORY
  %loadMem_4635b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9914 = getelementptr inbounds %struct.GPR, %struct.GPR* %9913, i32 0, i32 33
  %9915 = getelementptr inbounds %struct.Reg, %struct.Reg* %9914, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %9915 to i64*
  %9916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9917 = getelementptr inbounds %struct.GPR, %struct.GPR* %9916, i32 0, i32 23
  %9918 = getelementptr inbounds %struct.Reg, %struct.Reg* %9917, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %9918 to i32*
  %9919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9920 = getelementptr inbounds %struct.GPR, %struct.GPR* %9919, i32 0, i32 7
  %9921 = getelementptr inbounds %struct.Reg, %struct.Reg* %9920, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %9921 to i64*
  %9922 = load i32, i32* %R11D.i
  %9923 = zext i32 %9922 to i64
  %9924 = load i64, i64* %PC.i43
  %9925 = add i64 %9924, 3
  store i64 %9925, i64* %PC.i43
  %9926 = and i64 %9923, 4294967295
  store i64 %9926, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_4635b8, %struct.Memory** %MEMORY
  %loadMem_4635bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9928 = getelementptr inbounds %struct.GPR, %struct.GPR* %9927, i32 0, i32 33
  %9929 = getelementptr inbounds %struct.Reg, %struct.Reg* %9928, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %9929 to i64*
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9931 = getelementptr inbounds %struct.GPR, %struct.GPR* %9930, i32 0, i32 29
  %9932 = getelementptr inbounds %struct.Reg, %struct.Reg* %9931, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %9932 to i32*
  %9933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9934 = getelementptr inbounds %struct.GPR, %struct.GPR* %9933, i32 0, i32 5
  %9935 = getelementptr inbounds %struct.Reg, %struct.Reg* %9934, i32 0, i32 0
  %RCX.i42 = bitcast %union.anon* %9935 to i64*
  %9936 = load i32, i32* %R14D.i
  %9937 = zext i32 %9936 to i64
  %9938 = load i64, i64* %PC.i41
  %9939 = add i64 %9938, 3
  store i64 %9939, i64* %PC.i41
  %9940 = and i64 %9937, 4294967295
  store i64 %9940, i64* %RCX.i42, align 8
  store %struct.Memory* %loadMem_4635bb, %struct.Memory** %MEMORY
  %loadMem_4635be = load %struct.Memory*, %struct.Memory** %MEMORY
  %9941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9942 = getelementptr inbounds %struct.GPR, %struct.GPR* %9941, i32 0, i32 33
  %9943 = getelementptr inbounds %struct.Reg, %struct.Reg* %9942, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %9943 to i64*
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9945 = getelementptr inbounds %struct.GPR, %struct.GPR* %9944, i32 0, i32 1
  %9946 = getelementptr inbounds %struct.Reg, %struct.Reg* %9945, i32 0, i32 0
  %9947 = bitcast %union.anon* %9946 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9947, i32 0, i32 0
  %9948 = load i64, i64* %PC.i40
  %9949 = add i64 %9948, 2
  store i64 %9949, i64* %PC.i40
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_4635be, %struct.Memory** %MEMORY
  %loadMem1_4635c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9951 = getelementptr inbounds %struct.GPR, %struct.GPR* %9950, i32 0, i32 33
  %9952 = getelementptr inbounds %struct.Reg, %struct.Reg* %9951, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %9952 to i64*
  %9953 = load i64, i64* %PC.i39
  %9954 = add i64 %9953, -402416
  %9955 = load i64, i64* %PC.i39
  %9956 = add i64 %9955, 5
  %9957 = load i64, i64* %PC.i39
  %9958 = add i64 %9957, 5
  store i64 %9958, i64* %PC.i39
  %9959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9960 = load i64, i64* %9959, align 8
  %9961 = add i64 %9960, -8
  %9962 = inttoptr i64 %9961 to i64*
  store i64 %9956, i64* %9962
  store i64 %9961, i64* %9959, align 8
  %9963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9954, i64* %9963, align 8
  store %struct.Memory* %loadMem1_4635c0, %struct.Memory** %MEMORY
  %loadMem2_4635c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4635c0 = load i64, i64* %3
  %9964 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %loadMem2_4635c0)
  store %struct.Memory* %9964, %struct.Memory** %MEMORY
  %loadMem_4635c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9966 = getelementptr inbounds %struct.GPR, %struct.GPR* %9965, i32 0, i32 33
  %9967 = getelementptr inbounds %struct.Reg, %struct.Reg* %9966, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %9967 to i64*
  %9968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9969 = getelementptr inbounds %struct.GPR, %struct.GPR* %9968, i32 0, i32 5
  %9970 = getelementptr inbounds %struct.Reg, %struct.Reg* %9969, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %9970 to i64*
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9972 = getelementptr inbounds %struct.GPR, %struct.GPR* %9971, i32 0, i32 15
  %9973 = getelementptr inbounds %struct.Reg, %struct.Reg* %9972, i32 0, i32 0
  %RBP.i35 = bitcast %union.anon* %9973 to i64*
  %9974 = load i64, i64* %RBP.i35
  %9975 = sub i64 %9974, 668
  %9976 = load i64, i64* %PC.i34
  %9977 = add i64 %9976, 6
  store i64 %9977, i64* %PC.i34
  %9978 = inttoptr i64 %9975 to i32*
  %9979 = load i32, i32* %9978
  %9980 = zext i32 %9979 to i64
  store i64 %9980, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_4635c5, %struct.Memory** %MEMORY
  %loadMem_4635cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9982 = getelementptr inbounds %struct.GPR, %struct.GPR* %9981, i32 0, i32 33
  %9983 = getelementptr inbounds %struct.Reg, %struct.Reg* %9982, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %9983 to i64*
  %9984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9985 = getelementptr inbounds %struct.GPR, %struct.GPR* %9984, i32 0, i32 9
  %9986 = getelementptr inbounds %struct.Reg, %struct.Reg* %9985, i32 0, i32 0
  %RSI.i32 = bitcast %union.anon* %9986 to i64*
  %9987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9988 = getelementptr inbounds %struct.GPR, %struct.GPR* %9987, i32 0, i32 15
  %9989 = getelementptr inbounds %struct.Reg, %struct.Reg* %9988, i32 0, i32 0
  %RBP.i33 = bitcast %union.anon* %9989 to i64*
  %9990 = load i64, i64* %RBP.i33
  %9991 = sub i64 %9990, 664
  %9992 = load i64, i64* %PC.i31
  %9993 = add i64 %9992, 7
  store i64 %9993, i64* %PC.i31
  %9994 = inttoptr i64 %9991 to i64*
  %9995 = load i64, i64* %9994
  store i64 %9995, i64* %RSI.i32, align 8
  store %struct.Memory* %loadMem_4635cb, %struct.Memory** %MEMORY
  %loadMem_4635d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9997 = getelementptr inbounds %struct.GPR, %struct.GPR* %9996, i32 0, i32 33
  %9998 = getelementptr inbounds %struct.Reg, %struct.Reg* %9997, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %9998 to i64*
  %9999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10000 = getelementptr inbounds %struct.GPR, %struct.GPR* %9999, i32 0, i32 5
  %10001 = getelementptr inbounds %struct.Reg, %struct.Reg* %10000, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %10001 to i32*
  %10002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10003 = getelementptr inbounds %struct.GPR, %struct.GPR* %10002, i32 0, i32 11
  %10004 = getelementptr inbounds %struct.Reg, %struct.Reg* %10003, i32 0, i32 0
  %RDI.i30 = bitcast %union.anon* %10004 to i64*
  %10005 = load i32, i32* %ECX.i
  %10006 = zext i32 %10005 to i64
  %10007 = load i64, i64* %PC.i29
  %10008 = add i64 %10007, 3
  store i64 %10008, i64* %PC.i29
  %10009 = shl i64 %10006, 32
  %10010 = ashr exact i64 %10009, 32
  store i64 %10010, i64* %RDI.i30, align 8
  store %struct.Memory* %loadMem_4635d2, %struct.Memory** %MEMORY
  %loadMem_4635d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10012 = getelementptr inbounds %struct.GPR, %struct.GPR* %10011, i32 0, i32 33
  %10013 = getelementptr inbounds %struct.Reg, %struct.Reg* %10012, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %10013 to i64*
  %10014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10015 = getelementptr inbounds %struct.GPR, %struct.GPR* %10014, i32 0, i32 9
  %10016 = getelementptr inbounds %struct.Reg, %struct.Reg* %10015, i32 0, i32 0
  %RSI.i27 = bitcast %union.anon* %10016 to i64*
  %10017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10018 = getelementptr inbounds %struct.GPR, %struct.GPR* %10017, i32 0, i32 11
  %10019 = getelementptr inbounds %struct.Reg, %struct.Reg* %10018, i32 0, i32 0
  %RDI.i28 = bitcast %union.anon* %10019 to i64*
  %10020 = load i64, i64* %RSI.i27
  %10021 = load i64, i64* %RDI.i28
  %10022 = load i64, i64* %PC.i26
  %10023 = add i64 %10022, 3
  store i64 %10023, i64* %PC.i26
  %10024 = add i64 %10021, %10020
  store i64 %10024, i64* %RSI.i27, align 8
  %10025 = icmp ult i64 %10024, %10020
  %10026 = icmp ult i64 %10024, %10021
  %10027 = or i1 %10025, %10026
  %10028 = zext i1 %10027 to i8
  %10029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10028, i8* %10029, align 1
  %10030 = trunc i64 %10024 to i32
  %10031 = and i32 %10030, 255
  %10032 = call i32 @llvm.ctpop.i32(i32 %10031)
  %10033 = trunc i32 %10032 to i8
  %10034 = and i8 %10033, 1
  %10035 = xor i8 %10034, 1
  %10036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10035, i8* %10036, align 1
  %10037 = xor i64 %10021, %10020
  %10038 = xor i64 %10037, %10024
  %10039 = lshr i64 %10038, 4
  %10040 = trunc i64 %10039 to i8
  %10041 = and i8 %10040, 1
  %10042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10041, i8* %10042, align 1
  %10043 = icmp eq i64 %10024, 0
  %10044 = zext i1 %10043 to i8
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10044, i8* %10045, align 1
  %10046 = lshr i64 %10024, 63
  %10047 = trunc i64 %10046 to i8
  %10048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10047, i8* %10048, align 1
  %10049 = lshr i64 %10020, 63
  %10050 = lshr i64 %10021, 63
  %10051 = xor i64 %10046, %10049
  %10052 = xor i64 %10046, %10050
  %10053 = add i64 %10051, %10052
  %10054 = icmp eq i64 %10053, 2
  %10055 = zext i1 %10054 to i8
  %10056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10055, i8* %10056, align 1
  store %struct.Memory* %loadMem_4635d5, %struct.Memory** %MEMORY
  %loadMem_4635d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10058 = getelementptr inbounds %struct.GPR, %struct.GPR* %10057, i32 0, i32 33
  %10059 = getelementptr inbounds %struct.Reg, %struct.Reg* %10058, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %10059 to i64*
  %10060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10061 = getelementptr inbounds %struct.GPR, %struct.GPR* %10060, i32 0, i32 9
  %10062 = getelementptr inbounds %struct.Reg, %struct.Reg* %10061, i32 0, i32 0
  %RSI.i24 = bitcast %union.anon* %10062 to i64*
  %10063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10064 = getelementptr inbounds %struct.GPR, %struct.GPR* %10063, i32 0, i32 15
  %10065 = getelementptr inbounds %struct.Reg, %struct.Reg* %10064, i32 0, i32 0
  %RBP.i25 = bitcast %union.anon* %10065 to i64*
  %10066 = load i64, i64* %RBP.i25
  %10067 = sub i64 %10066, 664
  %10068 = load i64, i64* %RSI.i24
  %10069 = load i64, i64* %PC.i23
  %10070 = add i64 %10069, 7
  store i64 %10070, i64* %PC.i23
  %10071 = inttoptr i64 %10067 to i64*
  store i64 %10068, i64* %10071
  store %struct.Memory* %loadMem_4635d8, %struct.Memory** %MEMORY
  %loadMem_4635df = load %struct.Memory*, %struct.Memory** %MEMORY
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10073 = getelementptr inbounds %struct.GPR, %struct.GPR* %10072, i32 0, i32 33
  %10074 = getelementptr inbounds %struct.Reg, %struct.Reg* %10073, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %10074 to i64*
  %10075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10076 = getelementptr inbounds %struct.GPR, %struct.GPR* %10075, i32 0, i32 1
  %10077 = getelementptr inbounds %struct.Reg, %struct.Reg* %10076, i32 0, i32 0
  %EAX.i21 = bitcast %union.anon* %10077 to i32*
  %10078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10079 = getelementptr inbounds %struct.GPR, %struct.GPR* %10078, i32 0, i32 15
  %10080 = getelementptr inbounds %struct.Reg, %struct.Reg* %10079, i32 0, i32 0
  %RBP.i22 = bitcast %union.anon* %10080 to i64*
  %10081 = load i64, i64* %RBP.i22
  %10082 = sub i64 %10081, 720
  %10083 = load i32, i32* %EAX.i21
  %10084 = zext i32 %10083 to i64
  %10085 = load i64, i64* %PC.i20
  %10086 = add i64 %10085, 6
  store i64 %10086, i64* %PC.i20
  %10087 = inttoptr i64 %10082 to i32*
  store i32 %10083, i32* %10087
  store %struct.Memory* %loadMem_4635df, %struct.Memory** %MEMORY
  %loadMem_4635e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10089 = getelementptr inbounds %struct.GPR, %struct.GPR* %10088, i32 0, i32 33
  %10090 = getelementptr inbounds %struct.Reg, %struct.Reg* %10089, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %10090 to i64*
  %10091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10092 = getelementptr inbounds %struct.GPR, %struct.GPR* %10091, i32 0, i32 1
  %10093 = getelementptr inbounds %struct.Reg, %struct.Reg* %10092, i32 0, i32 0
  %RAX.i18 = bitcast %union.anon* %10093 to i64*
  %10094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10095 = getelementptr inbounds %struct.GPR, %struct.GPR* %10094, i32 0, i32 15
  %10096 = getelementptr inbounds %struct.Reg, %struct.Reg* %10095, i32 0, i32 0
  %RBP.i19 = bitcast %union.anon* %10096 to i64*
  %10097 = load i64, i64* %RBP.i19
  %10098 = sub i64 %10097, 84
  %10099 = load i64, i64* %PC.i17
  %10100 = add i64 %10099, 3
  store i64 %10100, i64* %PC.i17
  %10101 = inttoptr i64 %10098 to i32*
  %10102 = load i32, i32* %10101
  %10103 = zext i32 %10102 to i64
  store i64 %10103, i64* %RAX.i18, align 8
  store %struct.Memory* %loadMem_4635e5, %struct.Memory** %MEMORY
  %loadMem_4635e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10105 = getelementptr inbounds %struct.GPR, %struct.GPR* %10104, i32 0, i32 33
  %10106 = getelementptr inbounds %struct.Reg, %struct.Reg* %10105, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %10106 to i64*
  %10107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10108 = getelementptr inbounds %struct.GPR, %struct.GPR* %10107, i32 0, i32 1
  %10109 = getelementptr inbounds %struct.Reg, %struct.Reg* %10108, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %10109 to i64*
  %10110 = load i64, i64* %RAX.i
  %10111 = load i64, i64* %PC.i16
  %10112 = add i64 %10111, 3
  store i64 %10112, i64* %PC.i16
  %10113 = trunc i64 %10110 to i32
  %10114 = add i32 1, %10113
  %10115 = zext i32 %10114 to i64
  store i64 %10115, i64* %RAX.i, align 8
  %10116 = icmp ult i32 %10114, %10113
  %10117 = icmp ult i32 %10114, 1
  %10118 = or i1 %10116, %10117
  %10119 = zext i1 %10118 to i8
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10119, i8* %10120, align 1
  %10121 = and i32 %10114, 255
  %10122 = call i32 @llvm.ctpop.i32(i32 %10121)
  %10123 = trunc i32 %10122 to i8
  %10124 = and i8 %10123, 1
  %10125 = xor i8 %10124, 1
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10125, i8* %10126, align 1
  %10127 = xor i64 1, %10110
  %10128 = trunc i64 %10127 to i32
  %10129 = xor i32 %10128, %10114
  %10130 = lshr i32 %10129, 4
  %10131 = trunc i32 %10130 to i8
  %10132 = and i8 %10131, 1
  %10133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10132, i8* %10133, align 1
  %10134 = icmp eq i32 %10114, 0
  %10135 = zext i1 %10134 to i8
  %10136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10135, i8* %10136, align 1
  %10137 = lshr i32 %10114, 31
  %10138 = trunc i32 %10137 to i8
  %10139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10138, i8* %10139, align 1
  %10140 = lshr i32 %10113, 31
  %10141 = xor i32 %10137, %10140
  %10142 = add i32 %10141, %10137
  %10143 = icmp eq i32 %10142, 2
  %10144 = zext i1 %10143 to i8
  %10145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10144, i8* %10145, align 1
  store %struct.Memory* %loadMem_4635e8, %struct.Memory** %MEMORY
  %loadMem_4635eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10147 = getelementptr inbounds %struct.GPR, %struct.GPR* %10146, i32 0, i32 33
  %10148 = getelementptr inbounds %struct.Reg, %struct.Reg* %10147, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %10148 to i64*
  %10149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10150 = getelementptr inbounds %struct.GPR, %struct.GPR* %10149, i32 0, i32 1
  %10151 = getelementptr inbounds %struct.Reg, %struct.Reg* %10150, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %10151 to i32*
  %10152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10153 = getelementptr inbounds %struct.GPR, %struct.GPR* %10152, i32 0, i32 15
  %10154 = getelementptr inbounds %struct.Reg, %struct.Reg* %10153, i32 0, i32 0
  %RBP.i15 = bitcast %union.anon* %10154 to i64*
  %10155 = load i64, i64* %RBP.i15
  %10156 = sub i64 %10155, 84
  %10157 = load i32, i32* %EAX.i
  %10158 = zext i32 %10157 to i64
  %10159 = load i64, i64* %PC.i14
  %10160 = add i64 %10159, 3
  store i64 %10160, i64* %PC.i14
  %10161 = inttoptr i64 %10156 to i32*
  store i32 %10157, i32* %10161
  store %struct.Memory* %loadMem_4635eb, %struct.Memory** %MEMORY
  %loadMem_4635ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %10162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10163 = getelementptr inbounds %struct.GPR, %struct.GPR* %10162, i32 0, i32 33
  %10164 = getelementptr inbounds %struct.Reg, %struct.Reg* %10163, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %10164 to i64*
  %10165 = load i64, i64* %PC.i13
  %10166 = add i64 %10165, -251
  %10167 = load i64, i64* %PC.i13
  %10168 = add i64 %10167, 5
  store i64 %10168, i64* %PC.i13
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10166, i64* %10169, align 8
  store %struct.Memory* %loadMem_4635ee, %struct.Memory** %MEMORY
  br label %block_.L_4634f3

block_.L_4635f3:                                  ; preds = %block_.L_4634f3
  %loadMem_4635f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10171 = getelementptr inbounds %struct.GPR, %struct.GPR* %10170, i32 0, i32 33
  %10172 = getelementptr inbounds %struct.Reg, %struct.Reg* %10171, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %10172 to i64*
  %10173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10174 = getelementptr inbounds %struct.GPR, %struct.GPR* %10173, i32 0, i32 9
  %10175 = getelementptr inbounds %struct.Reg, %struct.Reg* %10174, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %10175 to i64*
  %10176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10177 = getelementptr inbounds %struct.GPR, %struct.GPR* %10176, i32 0, i32 15
  %10178 = getelementptr inbounds %struct.Reg, %struct.Reg* %10177, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %10178 to i64*
  %10179 = load i64, i64* %RBP.i12
  %10180 = sub i64 %10179, 656
  %10181 = load i64, i64* %PC.i11
  %10182 = add i64 %10181, 7
  store i64 %10182, i64* %PC.i11
  store i64 %10180, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_4635f3, %struct.Memory** %MEMORY
  %loadMem_4635fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10184 = getelementptr inbounds %struct.GPR, %struct.GPR* %10183, i32 0, i32 33
  %10185 = getelementptr inbounds %struct.Reg, %struct.Reg* %10184, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %10185 to i64*
  %10186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10187 = getelementptr inbounds %struct.GPR, %struct.GPR* %10186, i32 0, i32 11
  %10188 = getelementptr inbounds %struct.Reg, %struct.Reg* %10187, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %10188 to i64*
  %10189 = load i64, i64* %PC.i10
  %10190 = add i64 %10189, 8
  store i64 %10190, i64* %PC.i10
  %10191 = load i64, i64* bitcast (%G_0xab0ef8_type* @G_0xab0ef8 to i64*)
  store i64 %10191, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_4635fa, %struct.Memory** %MEMORY
  %loadMem1_463602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10193 = getelementptr inbounds %struct.GPR, %struct.GPR* %10192, i32 0, i32 33
  %10194 = getelementptr inbounds %struct.Reg, %struct.Reg* %10193, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %10194 to i64*
  %10195 = load i64, i64* %PC.i9
  %10196 = add i64 %10195, -388882
  %10197 = load i64, i64* %PC.i9
  %10198 = add i64 %10197, 5
  %10199 = load i64, i64* %PC.i9
  %10200 = add i64 %10199, 5
  store i64 %10200, i64* %PC.i9
  %10201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10202 = load i64, i64* %10201, align 8
  %10203 = add i64 %10202, -8
  %10204 = inttoptr i64 %10203 to i64*
  store i64 %10198, i64* %10204
  store i64 %10203, i64* %10201, align 8
  %10205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10196, i64* %10205, align 8
  store %struct.Memory* %loadMem1_463602, %struct.Memory** %MEMORY
  %loadMem2_463602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_463602 = load i64, i64* %3
  %call2_463602 = call %struct.Memory* @sub_4046f0.sgftreeAddComment(%struct.State* %0, i64 %loadPC_463602, %struct.Memory* %loadMem2_463602)
  store %struct.Memory* %call2_463602, %struct.Memory** %MEMORY
  br label %block_.L_463607

block_.L_463607:                                  ; preds = %block_.L_4635f3, %block_.L_46349b, %block_462ce4
  %loadMem_463607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10207 = getelementptr inbounds %struct.GPR, %struct.GPR* %10206, i32 0, i32 33
  %10208 = getelementptr inbounds %struct.Reg, %struct.Reg* %10207, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %10208 to i64*
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10210 = getelementptr inbounds %struct.GPR, %struct.GPR* %10209, i32 0, i32 13
  %10211 = getelementptr inbounds %struct.Reg, %struct.Reg* %10210, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %10211 to i64*
  %10212 = load i64, i64* %RSP.i
  %10213 = load i64, i64* %PC.i8
  %10214 = add i64 %10213, 7
  store i64 %10214, i64* %PC.i8
  %10215 = add i64 736, %10212
  store i64 %10215, i64* %RSP.i, align 8
  %10216 = icmp ult i64 %10215, %10212
  %10217 = icmp ult i64 %10215, 736
  %10218 = or i1 %10216, %10217
  %10219 = zext i1 %10218 to i8
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10219, i8* %10220, align 1
  %10221 = trunc i64 %10215 to i32
  %10222 = and i32 %10221, 255
  %10223 = call i32 @llvm.ctpop.i32(i32 %10222)
  %10224 = trunc i32 %10223 to i8
  %10225 = and i8 %10224, 1
  %10226 = xor i8 %10225, 1
  %10227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10226, i8* %10227, align 1
  %10228 = xor i64 736, %10212
  %10229 = xor i64 %10228, %10215
  %10230 = lshr i64 %10229, 4
  %10231 = trunc i64 %10230 to i8
  %10232 = and i8 %10231, 1
  %10233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10232, i8* %10233, align 1
  %10234 = icmp eq i64 %10215, 0
  %10235 = zext i1 %10234 to i8
  %10236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10235, i8* %10236, align 1
  %10237 = lshr i64 %10215, 63
  %10238 = trunc i64 %10237 to i8
  %10239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10238, i8* %10239, align 1
  %10240 = lshr i64 %10212, 63
  %10241 = xor i64 %10237, %10240
  %10242 = add i64 %10241, %10237
  %10243 = icmp eq i64 %10242, 2
  %10244 = zext i1 %10243 to i8
  %10245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10244, i8* %10245, align 1
  store %struct.Memory* %loadMem_463607, %struct.Memory** %MEMORY
  %loadMem_46360e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10247 = getelementptr inbounds %struct.GPR, %struct.GPR* %10246, i32 0, i32 33
  %10248 = getelementptr inbounds %struct.Reg, %struct.Reg* %10247, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %10248 to i64*
  %10249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10250 = getelementptr inbounds %struct.GPR, %struct.GPR* %10249, i32 0, i32 3
  %10251 = getelementptr inbounds %struct.Reg, %struct.Reg* %10250, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %10251 to i64*
  %10252 = load i64, i64* %PC.i7
  %10253 = add i64 %10252, 1
  store i64 %10253, i64* %PC.i7
  %10254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10255 = load i64, i64* %10254, align 8
  %10256 = add i64 %10255, 8
  %10257 = inttoptr i64 %10255 to i64*
  %10258 = load i64, i64* %10257
  store i64 %10258, i64* %RBX.i, align 8
  store i64 %10256, i64* %10254, align 8
  store %struct.Memory* %loadMem_46360e, %struct.Memory** %MEMORY
  %loadMem_46360f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10260 = getelementptr inbounds %struct.GPR, %struct.GPR* %10259, i32 0, i32 33
  %10261 = getelementptr inbounds %struct.Reg, %struct.Reg* %10260, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %10261 to i64*
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10263 = getelementptr inbounds %struct.GPR, %struct.GPR* %10262, i32 0, i32 25
  %10264 = getelementptr inbounds %struct.Reg, %struct.Reg* %10263, i32 0, i32 0
  %R12.i = bitcast %union.anon* %10264 to i64*
  %10265 = load i64, i64* %PC.i6
  %10266 = add i64 %10265, 2
  store i64 %10266, i64* %PC.i6
  %10267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10268 = load i64, i64* %10267, align 8
  %10269 = add i64 %10268, 8
  %10270 = inttoptr i64 %10268 to i64*
  %10271 = load i64, i64* %10270
  store i64 %10271, i64* %R12.i, align 8
  store i64 %10269, i64* %10267, align 8
  store %struct.Memory* %loadMem_46360f, %struct.Memory** %MEMORY
  %loadMem_463611 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10273 = getelementptr inbounds %struct.GPR, %struct.GPR* %10272, i32 0, i32 33
  %10274 = getelementptr inbounds %struct.Reg, %struct.Reg* %10273, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %10274 to i64*
  %10275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10276 = getelementptr inbounds %struct.GPR, %struct.GPR* %10275, i32 0, i32 29
  %10277 = getelementptr inbounds %struct.Reg, %struct.Reg* %10276, i32 0, i32 0
  %R14.i = bitcast %union.anon* %10277 to i64*
  %10278 = load i64, i64* %PC.i5
  %10279 = add i64 %10278, 2
  store i64 %10279, i64* %PC.i5
  %10280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10281 = load i64, i64* %10280, align 8
  %10282 = add i64 %10281, 8
  %10283 = inttoptr i64 %10281 to i64*
  %10284 = load i64, i64* %10283
  store i64 %10284, i64* %R14.i, align 8
  store i64 %10282, i64* %10280, align 8
  store %struct.Memory* %loadMem_463611, %struct.Memory** %MEMORY
  %loadMem_463613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10286 = getelementptr inbounds %struct.GPR, %struct.GPR* %10285, i32 0, i32 33
  %10287 = getelementptr inbounds %struct.Reg, %struct.Reg* %10286, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %10287 to i64*
  %10288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10289 = getelementptr inbounds %struct.GPR, %struct.GPR* %10288, i32 0, i32 31
  %10290 = getelementptr inbounds %struct.Reg, %struct.Reg* %10289, i32 0, i32 0
  %R15.i = bitcast %union.anon* %10290 to i64*
  %10291 = load i64, i64* %PC.i4
  %10292 = add i64 %10291, 2
  store i64 %10292, i64* %PC.i4
  %10293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10294 = load i64, i64* %10293, align 8
  %10295 = add i64 %10294, 8
  %10296 = inttoptr i64 %10294 to i64*
  %10297 = load i64, i64* %10296
  store i64 %10297, i64* %R15.i, align 8
  store i64 %10295, i64* %10293, align 8
  store %struct.Memory* %loadMem_463613, %struct.Memory** %MEMORY
  %loadMem_463615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10299 = getelementptr inbounds %struct.GPR, %struct.GPR* %10298, i32 0, i32 33
  %10300 = getelementptr inbounds %struct.Reg, %struct.Reg* %10299, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %10300 to i64*
  %10301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10302 = getelementptr inbounds %struct.GPR, %struct.GPR* %10301, i32 0, i32 15
  %10303 = getelementptr inbounds %struct.Reg, %struct.Reg* %10302, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %10303 to i64*
  %10304 = load i64, i64* %PC.i2
  %10305 = add i64 %10304, 1
  store i64 %10305, i64* %PC.i2
  %10306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10307 = load i64, i64* %10306, align 8
  %10308 = add i64 %10307, 8
  %10309 = inttoptr i64 %10307 to i64*
  %10310 = load i64, i64* %10309
  store i64 %10310, i64* %RBP.i3, align 8
  store i64 %10308, i64* %10306, align 8
  store %struct.Memory* %loadMem_463615, %struct.Memory** %MEMORY
  %loadMem_463616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10312 = getelementptr inbounds %struct.GPR, %struct.GPR* %10311, i32 0, i32 33
  %10313 = getelementptr inbounds %struct.Reg, %struct.Reg* %10312, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %10313 to i64*
  %10314 = load i64, i64* %PC.i1
  %10315 = add i64 %10314, 1
  store i64 %10315, i64* %PC.i1
  %10316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10318 = load i64, i64* %10317, align 8
  %10319 = inttoptr i64 %10318 to i64*
  %10320 = load i64, i64* %10319
  store i64 %10320, i64* %10316, align 8
  %10321 = add i64 %10318, 8
  store i64 %10321, i64* %10317, align 8
  store %struct.Memory* %loadMem_463616, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_463616
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R15
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r12(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R12
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x2e0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 736
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 736
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 736, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.countlib(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x190__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 68
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 2
  %14 = icmp ult i32 %9, 2
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_462ce9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_463607(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x190__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 400
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_463380(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x68__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x6c__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x70__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x74__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x78__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x7c__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x80__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x84__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x50__rbp____rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___r11__rbx_4____r14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 3
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 23
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R11 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R14D to i64*
  %16 = load i64, i64* %R11
  %17 = load i64, i64* %RBX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r14d__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %R14D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 108
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 116
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 120
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 124
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 128
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____r14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R14D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____r15d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R15D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____r12d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R12D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x2a8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 680
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r14d___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R14D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x2b0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r15d___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R15D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x2b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r12d___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R12D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax____rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x2b8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x8__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x2b0__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r11__0x10__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %R11
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x2a8__rbp____rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 680
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rbx__0x18__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 24
  %14 = load i64, i64* %RBX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r10__0x20__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 32
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.incremental_order_moves(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x48__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 72
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_463070(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xa___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 10, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.approxlib(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 108
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_462e80(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_462e2a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_462e57(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb54ce4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0xb54ce0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0xb54ce0_type* @G_0xb54ce0 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_462e57(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afc74___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afc74_type* @G_0x7afc74 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 4
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 4
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 4, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x50__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0xc8__rdx__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 200
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0xc8__rdx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 200
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_462e7b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x88__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afc60___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8060000
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x50__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0xc8__rax__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 200
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0xc8__rax__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 200
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_462ed8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_462eaf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afc90___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afc90_type* @G_0x7afc90 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0xc8__rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 200
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0xc8__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 200
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_462ed3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afc80___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8060032
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_462eea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_462f12(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57fb0d___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57fb0d_type* @G__0x57fb0d to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1083___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4227, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57fdbf___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57fdbf_type* @G__0x57fdbf to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967295, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abortgo(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x84__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afca0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8060064
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_462f4a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 120
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_462f67(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afcb4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afcb4_type* @G_0x7afcb4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 120
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_462f97(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x78__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afcc0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8060096
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_462fb7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afcd4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afcd4_type* @G_0x7afcd4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x78__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x88__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1
  %14 = icmp ult i32 %9, 1
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_46301e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 124
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_462ff9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x7c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afce0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8060128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_463019(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afcf4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afcf4_type* @G_0x7afcf4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x7c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 124
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46301e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 128
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_46304e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x80__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afd00___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8060160
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46306b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afd14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afd14_type* @G_0x7afd14 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46336d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4630a1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 4, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afd20___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8060192
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4630f9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 120
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afd34___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afd34_type* @G_0x7afd34 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_46311f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_463249(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_463249(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_463249(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x5___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_463171(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_46317b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_46317b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x5__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 5, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x94__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afd40___rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8060224
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x2b9__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 697
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4631c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setg__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x2b9__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 697
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_46321a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 128
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 144
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afd58___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afd58_type* @G_0x7afd58 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_463244(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afd5c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afd5c_type* @G_0x7afd5c to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_463249(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_46325b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_463283(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x10cc___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4300, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afd60___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8060256
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4632ce(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afd74___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afd74_type* @G_0x7afd74 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4632fe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afd80___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8060288
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46331b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afd94___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afd94_type* @G_0x7afd94 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_46334b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afda0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8060320
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_463368(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7afdb4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7afdb4_type* @G_0x7afdb4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_463372(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_462cef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x190__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46349b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x54__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc8__rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 200
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_463416(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x58__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x5c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 92
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_463403(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_463408(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4633c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_463488(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x60__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0xc8__rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 200
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46348d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_463386(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 9
  store i64 %7, i64* %PC
  %8 = load i64, i64* bitcast (%G_0xab0ef8_type* @G_0xab0ef8 to i64*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = trunc i64 %8 to i32
  %11 = and i32 %10, 255
  %12 = call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17, align 1
  %18 = icmp eq i64 %8, 0
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19, i8* %20, align 1
  %21 = lshr i64 %8, 63
  %22 = trunc i64 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %8, 63
  %25 = xor i64 %21, %24
  %26 = add i64 %25, %24
  %27 = icmp eq i64 %26, 2
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_463607(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57fdd0___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57fdd0_type* @G__0x57fdd0 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x29c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x290__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sprintf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x290__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x29c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x298__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 68
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2c0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4635f3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57f9a0___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57f9a0_type* @G__0x57f9a0 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x29c__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x298__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x54__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2c4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 708
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c4__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 708
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R8D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_addl__0x41___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 65, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 65
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 65, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x54__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__r10_4____r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R11D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %R10
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r11d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R11D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x2c8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 8
  %14 = icmp ult i32 %9, 8
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 8, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setge__bl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___bl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %BL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %BL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__bl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %BL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c8__rbp____r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 712
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edx___r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i32, i32* %R11D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = add i32 %15, %13
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  %21 = icmp ult i32 %19, %13
  %22 = icmp ult i32 %19, %15
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i64 %16, %14
  %33 = trunc i64 %32 to i32
  %34 = xor i32 %33, %19
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %19, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %19, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %13, 31
  %46 = lshr i32 %15, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7ae438___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__r10_4____r14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R14D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %R10
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r14d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R14D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x2cc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2cc__rbp____r14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R14D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 716
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__eax___r14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R14D to i64*
  %13 = load i32, i32* %R14D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = sub i32 %13, %15
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  %21 = icmp ult i32 %13, %15
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %19, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %16, %14
  %31 = trunc i64 %30 to i32
  %32 = xor i32 %31, %19
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %19, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %19, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %13, 31
  %44 = lshr i32 %15, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc8__rcx__r10_4____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %R10
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 200
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 8
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %20 to i32*
  %24 = load i32, i32* %23
  %25 = zext i32 %24 to i64
  store i64 %25, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r11d___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R11D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r14d___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R14D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x29c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x298__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x298__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2d0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 720
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4634f3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x290__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xab0ef8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xab0ef8_type* @G_0xab0ef8 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sgftreeAddComment(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x2e0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 736, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 736
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 736, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBX, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r12(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 25
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R12 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R12, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R14, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R15, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
