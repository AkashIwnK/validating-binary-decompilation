; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x7ae438_type = type <{ [4 x i8] }>
%G_0xa777b__rip__type = type <{ [8 x i8] }>
%G_0xa7800__rip__type = type <{ [8 x i8] }>
%G_0xa788c__rip__type = type <{ [4 x i8] }>
%G_0xa789e__rip__type = type <{ [4 x i8] }>
%G_0xa78e0__rip__type = type <{ [4 x i8] }>
%G_0xab0f24_type = type <{ [4 x i8] }>
%G__0x57d7b6_type = type <{ [8 x i8] }>
%G__0x57da5a_type = type <{ [8 x i8] }>
%G__0x57da85_type = type <{ [8 x i8] }>
%G__0x57daab_type = type <{ [8 x i8] }>
%G__0x57dacb_type = type <{ [8 x i8] }>
%G__0x57dafd_type = type <{ [8 x i8] }>
%G__0x57db17_type = type <{ [8 x i8] }>
%G__0x586073_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x7ae438 = global %G_0x7ae438_type zeroinitializer
@G_0xa777b__rip_ = global %G_0xa777b__rip__type zeroinitializer
@G_0xa7800__rip_ = global %G_0xa7800__rip__type zeroinitializer
@G_0xa788c__rip_ = global %G_0xa788c__rip__type zeroinitializer
@G_0xa789e__rip_ = global %G_0xa789e__rip__type zeroinitializer
@G_0xa78e0__rip_ = global %G_0xa78e0__rip__type zeroinitializer
@G_0xab0f24 = global %G_0xab0f24_type zeroinitializer
@G__0x57d7b6 = global %G__0x57d7b6_type zeroinitializer
@G__0x57da5a = global %G__0x57da5a_type zeroinitializer
@G__0x57da85 = global %G__0x57da85_type zeroinitializer
@G__0x57daab = global %G__0x57daab_type zeroinitializer
@G__0x57dacb = global %G__0x57dacb_type zeroinitializer
@G__0x57dafd = global %G__0x57dafd_type zeroinitializer
@G__0x57db17 = global %G__0x57db17_type zeroinitializer
@G__0x586073 = global %G__0x586073_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_43b030.is_halfeye(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_439a40.print_eye(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_451db0.gprintf(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43a060.read_eye(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43baf0.min_eyes(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40f200.is_ko(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43bb10.eyevalue_to_string(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43bc10.guess_eye_space(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43b010.max_eyes(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4142a0.is_self_atari(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40f690.is_edge_vertex(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4e26d0.gg_normalize_float2int(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_452090.abortgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @compute_eyes_pessimistic(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_43b2b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_43b2b0, %struct.Memory** %MEMORY
  %loadMem_43b2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i23 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i24 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i23
  %27 = load i64, i64* %PC.i22
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i22
  store i64 %26, i64* %RBP.i24, align 8
  store %struct.Memory* %loadMem_43b2b1, %struct.Memory** %MEMORY
  %loadMem_43b2b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i41 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i41
  %36 = load i64, i64* %PC.i40
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i40
  %38 = sub i64 %35, 208
  store i64 %38, i64* %RSP.i41, align 8
  %39 = icmp ult i64 %35, 208
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 208, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_43b2b4, %struct.Memory** %MEMORY
  %loadMem_43b2bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RAX.i116 = bitcast %union.anon* %72 to i64*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i117 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i117
  %77 = add i64 %76, 16
  %78 = load i64, i64* %PC.i115
  %79 = add i64 %78, 4
  store i64 %79, i64* %PC.i115
  %80 = inttoptr i64 %77 to i64*
  %81 = load i64, i64* %80
  store i64 %81, i64* %RAX.i116, align 8
  store %struct.Memory* %loadMem_43b2bb, %struct.Memory** %MEMORY
  %loadMem_43b2bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %83 = getelementptr inbounds %struct.GPR, %struct.GPR* %82, i32 0, i32 33
  %84 = getelementptr inbounds %struct.Reg, %struct.Reg* %83, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %84 to i64*
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %86 = getelementptr inbounds %struct.GPR, %struct.GPR* %85, i32 0, i32 11
  %87 = getelementptr inbounds %struct.Reg, %struct.Reg* %86, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %87 to i32*
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %89 = getelementptr inbounds %struct.GPR, %struct.GPR* %88, i32 0, i32 15
  %90 = getelementptr inbounds %struct.Reg, %struct.Reg* %89, i32 0, i32 0
  %RBP.i137 = bitcast %union.anon* %90 to i64*
  %91 = load i64, i64* %RBP.i137
  %92 = sub i64 %91, 4
  %93 = load i32, i32* %EDI.i
  %94 = zext i32 %93 to i64
  %95 = load i64, i64* %PC.i136
  %96 = add i64 %95, 3
  store i64 %96, i64* %PC.i136
  %97 = inttoptr i64 %92 to i32*
  store i32 %93, i32* %97
  store %struct.Memory* %loadMem_43b2bf, %struct.Memory** %MEMORY
  %loadMem_43b2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %98 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %99 = getelementptr inbounds %struct.GPR, %struct.GPR* %98, i32 0, i32 33
  %100 = getelementptr inbounds %struct.Reg, %struct.Reg* %99, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %100 to i64*
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %102 = getelementptr inbounds %struct.GPR, %struct.GPR* %101, i32 0, i32 9
  %103 = getelementptr inbounds %struct.Reg, %struct.Reg* %102, i32 0, i32 0
  %RSI.i221 = bitcast %union.anon* %103 to i64*
  %104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %105 = getelementptr inbounds %struct.GPR, %struct.GPR* %104, i32 0, i32 15
  %106 = getelementptr inbounds %struct.Reg, %struct.Reg* %105, i32 0, i32 0
  %RBP.i222 = bitcast %union.anon* %106 to i64*
  %107 = load i64, i64* %RBP.i222
  %108 = sub i64 %107, 16
  %109 = load i64, i64* %RSI.i221
  %110 = load i64, i64* %PC.i220
  %111 = add i64 %110, 4
  store i64 %111, i64* %PC.i220
  %112 = inttoptr i64 %108 to i64*
  store i64 %109, i64* %112
  store %struct.Memory* %loadMem_43b2c2, %struct.Memory** %MEMORY
  %loadMem_43b2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %114 = getelementptr inbounds %struct.GPR, %struct.GPR* %113, i32 0, i32 33
  %115 = getelementptr inbounds %struct.Reg, %struct.Reg* %114, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %115 to i64*
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %117 = getelementptr inbounds %struct.GPR, %struct.GPR* %116, i32 0, i32 7
  %118 = getelementptr inbounds %struct.Reg, %struct.Reg* %117, i32 0, i32 0
  %RDX.i1053 = bitcast %union.anon* %118 to i64*
  %119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %120 = getelementptr inbounds %struct.GPR, %struct.GPR* %119, i32 0, i32 15
  %121 = getelementptr inbounds %struct.Reg, %struct.Reg* %120, i32 0, i32 0
  %RBP.i1054 = bitcast %union.anon* %121 to i64*
  %122 = load i64, i64* %RBP.i1054
  %123 = sub i64 %122, 24
  %124 = load i64, i64* %RDX.i1053
  %125 = load i64, i64* %PC.i1052
  %126 = add i64 %125, 4
  store i64 %126, i64* %PC.i1052
  %127 = inttoptr i64 %123 to i64*
  store i64 %124, i64* %127
  store %struct.Memory* %loadMem_43b2c6, %struct.Memory** %MEMORY
  %loadMem_43b2ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %129 = getelementptr inbounds %struct.GPR, %struct.GPR* %128, i32 0, i32 33
  %130 = getelementptr inbounds %struct.Reg, %struct.Reg* %129, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %130 to i64*
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %132 = getelementptr inbounds %struct.GPR, %struct.GPR* %131, i32 0, i32 5
  %133 = getelementptr inbounds %struct.Reg, %struct.Reg* %132, i32 0, i32 0
  %RCX.i1050 = bitcast %union.anon* %133 to i64*
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 15
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %RBP.i1051 = bitcast %union.anon* %136 to i64*
  %137 = load i64, i64* %RBP.i1051
  %138 = sub i64 %137, 32
  %139 = load i64, i64* %RCX.i1050
  %140 = load i64, i64* %PC.i1049
  %141 = add i64 %140, 4
  store i64 %141, i64* %PC.i1049
  %142 = inttoptr i64 %138 to i64*
  store i64 %139, i64* %142
  store %struct.Memory* %loadMem_43b2ca, %struct.Memory** %MEMORY
  %loadMem_43b2ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %144 = getelementptr inbounds %struct.GPR, %struct.GPR* %143, i32 0, i32 33
  %145 = getelementptr inbounds %struct.Reg, %struct.Reg* %144, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %145 to i64*
  %146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %147 = getelementptr inbounds %struct.GPR, %struct.GPR* %146, i32 0, i32 15
  %148 = getelementptr inbounds %struct.Reg, %struct.Reg* %147, i32 0, i32 0
  %RBP.i1047 = bitcast %union.anon* %148 to i64*
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %150 = getelementptr inbounds %struct.GPR, %struct.GPR* %149, i32 0, i32 17
  %151 = getelementptr inbounds %struct.Reg, %struct.Reg* %150, i32 0, i32 0
  %R8.i1048 = bitcast %union.anon* %151 to i64*
  %152 = load i64, i64* %RBP.i1047
  %153 = sub i64 %152, 40
  %154 = load i64, i64* %R8.i1048
  %155 = load i64, i64* %PC.i1046
  %156 = add i64 %155, 4
  store i64 %156, i64* %PC.i1046
  %157 = inttoptr i64 %153 to i64*
  store i64 %154, i64* %157
  store %struct.Memory* %loadMem_43b2ce, %struct.Memory** %MEMORY
  %loadMem_43b2d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 33
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %160 to i64*
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 15
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %163 to i64*
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %165 = getelementptr inbounds %struct.GPR, %struct.GPR* %164, i32 0, i32 19
  %166 = getelementptr inbounds %struct.Reg, %struct.Reg* %165, i32 0, i32 0
  %R9.i1045 = bitcast %union.anon* %166 to i64*
  %167 = load i64, i64* %RBP.i1044
  %168 = sub i64 %167, 48
  %169 = load i64, i64* %R9.i1045
  %170 = load i64, i64* %PC.i1043
  %171 = add i64 %170, 4
  store i64 %171, i64* %PC.i1043
  %172 = inttoptr i64 %168 to i64*
  store i64 %169, i64* %172
  store %struct.Memory* %loadMem_43b2d2, %struct.Memory** %MEMORY
  %loadMem_43b2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %174 = getelementptr inbounds %struct.GPR, %struct.GPR* %173, i32 0, i32 33
  %175 = getelementptr inbounds %struct.Reg, %struct.Reg* %174, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %175 to i64*
  %176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %177 = getelementptr inbounds %struct.GPR, %struct.GPR* %176, i32 0, i32 1
  %178 = getelementptr inbounds %struct.Reg, %struct.Reg* %177, i32 0, i32 0
  %RAX.i1041 = bitcast %union.anon* %178 to i64*
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %180 = getelementptr inbounds %struct.GPR, %struct.GPR* %179, i32 0, i32 15
  %181 = getelementptr inbounds %struct.Reg, %struct.Reg* %180, i32 0, i32 0
  %RBP.i1042 = bitcast %union.anon* %181 to i64*
  %182 = load i64, i64* %RBP.i1042
  %183 = sub i64 %182, 56
  %184 = load i64, i64* %RAX.i1041
  %185 = load i64, i64* %PC.i1040
  %186 = add i64 %185, 4
  store i64 %186, i64* %PC.i1040
  %187 = inttoptr i64 %183 to i64*
  store i64 %184, i64* %187
  store %struct.Memory* %loadMem_43b2d6, %struct.Memory** %MEMORY
  %loadMem_43b2da = load %struct.Memory*, %struct.Memory** %MEMORY
  %188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %189 = getelementptr inbounds %struct.GPR, %struct.GPR* %188, i32 0, i32 33
  %190 = getelementptr inbounds %struct.Reg, %struct.Reg* %189, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %190 to i64*
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %192 = getelementptr inbounds %struct.GPR, %struct.GPR* %191, i32 0, i32 15
  %193 = getelementptr inbounds %struct.Reg, %struct.Reg* %192, i32 0, i32 0
  %RBP.i1039 = bitcast %union.anon* %193 to i64*
  %194 = load i64, i64* %RBP.i1039
  %195 = sub i64 %194, 68
  %196 = load i64, i64* %PC.i1038
  %197 = add i64 %196, 7
  store i64 %197, i64* %PC.i1038
  %198 = inttoptr i64 %195 to i32*
  store i32 0, i32* %198
  store %struct.Memory* %loadMem_43b2da, %struct.Memory** %MEMORY
  %loadMem_43b2e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %200 = getelementptr inbounds %struct.GPR, %struct.GPR* %199, i32 0, i32 33
  %201 = getelementptr inbounds %struct.Reg, %struct.Reg* %200, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %201 to i64*
  %202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %203 = getelementptr inbounds %struct.GPR, %struct.GPR* %202, i32 0, i32 15
  %204 = getelementptr inbounds %struct.Reg, %struct.Reg* %203, i32 0, i32 0
  %RBP.i1037 = bitcast %union.anon* %204 to i64*
  %205 = load i64, i64* %RBP.i1037
  %206 = sub i64 %205, 72
  %207 = load i64, i64* %PC.i1036
  %208 = add i64 %207, 7
  store i64 %208, i64* %PC.i1036
  %209 = inttoptr i64 %206 to i32*
  store i32 0, i32* %209
  store %struct.Memory* %loadMem_43b2e1, %struct.Memory** %MEMORY
  %loadMem_43b2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 33
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 15
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %RBP.i1035 = bitcast %union.anon* %215 to i64*
  %216 = load i64, i64* %RBP.i1035
  %217 = sub i64 %216, 76
  %218 = load i64, i64* %PC.i1034
  %219 = add i64 %218, 7
  store i64 %219, i64* %PC.i1034
  %220 = inttoptr i64 %217 to i32*
  store i32 0, i32* %220
  store %struct.Memory* %loadMem_43b2e8, %struct.Memory** %MEMORY
  %loadMem_43b2ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 33
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %223 to i64*
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %225 = getelementptr inbounds %struct.GPR, %struct.GPR* %224, i32 0, i32 15
  %226 = getelementptr inbounds %struct.Reg, %struct.Reg* %225, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %226 to i64*
  %227 = load i64, i64* %RBP.i1033
  %228 = sub i64 %227, 84
  %229 = load i64, i64* %PC.i1032
  %230 = add i64 %229, 7
  store i64 %230, i64* %PC.i1032
  %231 = inttoptr i64 %228 to i32*
  store i32 0, i32* %231
  store %struct.Memory* %loadMem_43b2ef, %struct.Memory** %MEMORY
  %loadMem_43b2f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %233 = getelementptr inbounds %struct.GPR, %struct.GPR* %232, i32 0, i32 33
  %234 = getelementptr inbounds %struct.Reg, %struct.Reg* %233, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %234 to i64*
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %236 = getelementptr inbounds %struct.GPR, %struct.GPR* %235, i32 0, i32 15
  %237 = getelementptr inbounds %struct.Reg, %struct.Reg* %236, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %237 to i64*
  %238 = load i64, i64* %RBP.i1031
  %239 = sub i64 %238, 60
  %240 = load i64, i64* %PC.i1030
  %241 = add i64 %240, 7
  store i64 %241, i64* %PC.i1030
  %242 = inttoptr i64 %239 to i32*
  store i32 0, i32* %242
  store %struct.Memory* %loadMem_43b2f6, %struct.Memory** %MEMORY
  br label %block_.L_43b2fd

block_.L_43b2fd:                                  ; preds = %block_.L_43b43f, %entry
  %loadMem_43b2fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %244 = getelementptr inbounds %struct.GPR, %struct.GPR* %243, i32 0, i32 33
  %245 = getelementptr inbounds %struct.Reg, %struct.Reg* %244, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %245 to i64*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %247 = getelementptr inbounds %struct.GPR, %struct.GPR* %246, i32 0, i32 1
  %248 = getelementptr inbounds %struct.Reg, %struct.Reg* %247, i32 0, i32 0
  %RAX.i1028 = bitcast %union.anon* %248 to i64*
  %249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %250 = getelementptr inbounds %struct.GPR, %struct.GPR* %249, i32 0, i32 15
  %251 = getelementptr inbounds %struct.Reg, %struct.Reg* %250, i32 0, i32 0
  %RBP.i1029 = bitcast %union.anon* %251 to i64*
  %252 = load i64, i64* %RBP.i1029
  %253 = sub i64 %252, 60
  %254 = load i64, i64* %PC.i1027
  %255 = add i64 %254, 3
  store i64 %255, i64* %PC.i1027
  %256 = inttoptr i64 %253 to i32*
  %257 = load i32, i32* %256
  %258 = zext i32 %257 to i64
  store i64 %258, i64* %RAX.i1028, align 8
  store %struct.Memory* %loadMem_43b2fd, %struct.Memory** %MEMORY
  %loadMem_43b300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %260 = getelementptr inbounds %struct.GPR, %struct.GPR* %259, i32 0, i32 33
  %261 = getelementptr inbounds %struct.Reg, %struct.Reg* %260, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %261 to i64*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %263 = getelementptr inbounds %struct.GPR, %struct.GPR* %262, i32 0, i32 1
  %264 = getelementptr inbounds %struct.Reg, %struct.Reg* %263, i32 0, i32 0
  %EAX.i1026 = bitcast %union.anon* %264 to i32*
  %265 = load i32, i32* %EAX.i1026
  %266 = zext i32 %265 to i64
  %267 = load i64, i64* %PC.i1025
  %268 = add i64 %267, 7
  store i64 %268, i64* %PC.i1025
  %269 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %270 = sub i32 %265, %269
  %271 = icmp ult i32 %265, %269
  %272 = zext i1 %271 to i8
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %272, i8* %273, align 1
  %274 = and i32 %270, 255
  %275 = call i32 @llvm.ctpop.i32(i32 %274)
  %276 = trunc i32 %275 to i8
  %277 = and i8 %276, 1
  %278 = xor i8 %277, 1
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %278, i8* %279, align 1
  %280 = xor i32 %269, %265
  %281 = xor i32 %280, %270
  %282 = lshr i32 %281, 4
  %283 = trunc i32 %282 to i8
  %284 = and i8 %283, 1
  %285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %284, i8* %285, align 1
  %286 = icmp eq i32 %270, 0
  %287 = zext i1 %286 to i8
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %287, i8* %288, align 1
  %289 = lshr i32 %270, 31
  %290 = trunc i32 %289 to i8
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %290, i8* %291, align 1
  %292 = lshr i32 %265, 31
  %293 = lshr i32 %269, 31
  %294 = xor i32 %293, %292
  %295 = xor i32 %289, %292
  %296 = add i32 %295, %294
  %297 = icmp eq i32 %296, 2
  %298 = zext i1 %297 to i8
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %298, i8* %299, align 1
  store %struct.Memory* %loadMem_43b300, %struct.Memory** %MEMORY
  %loadMem_43b307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %301 = getelementptr inbounds %struct.GPR, %struct.GPR* %300, i32 0, i32 33
  %302 = getelementptr inbounds %struct.Reg, %struct.Reg* %301, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %302 to i64*
  %303 = load i64, i64* %PC.i1024
  %304 = add i64 %303, 326
  %305 = load i64, i64* %PC.i1024
  %306 = add i64 %305, 6
  %307 = load i64, i64* %PC.i1024
  %308 = add i64 %307, 6
  store i64 %308, i64* %PC.i1024
  %309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %310 = load i8, i8* %309, align 1
  %311 = icmp ne i8 %310, 0
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %313 = load i8, i8* %312, align 1
  %314 = icmp ne i8 %313, 0
  %315 = xor i1 %311, %314
  %316 = xor i1 %315, true
  %317 = zext i1 %316 to i8
  store i8 %317, i8* %BRANCH_TAKEN, align 1
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %319 = select i1 %315, i64 %306, i64 %304
  store i64 %319, i64* %318, align 8
  store %struct.Memory* %loadMem_43b307, %struct.Memory** %MEMORY
  %loadBr_43b307 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b307 = icmp eq i8 %loadBr_43b307, 1
  br i1 %cmpBr_43b307, label %block_.L_43b44d, label %block_43b30d

block_43b30d:                                     ; preds = %block_.L_43b2fd
  %loadMem_43b30d = load %struct.Memory*, %struct.Memory** %MEMORY
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %321 = getelementptr inbounds %struct.GPR, %struct.GPR* %320, i32 0, i32 33
  %322 = getelementptr inbounds %struct.Reg, %struct.Reg* %321, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %322 to i64*
  %323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %324 = getelementptr inbounds %struct.GPR, %struct.GPR* %323, i32 0, i32 15
  %325 = getelementptr inbounds %struct.Reg, %struct.Reg* %324, i32 0, i32 0
  %RBP.i1023 = bitcast %union.anon* %325 to i64*
  %326 = load i64, i64* %RBP.i1023
  %327 = sub i64 %326, 64
  %328 = load i64, i64* %PC.i1022
  %329 = add i64 %328, 7
  store i64 %329, i64* %PC.i1022
  %330 = inttoptr i64 %327 to i32*
  store i32 0, i32* %330
  store %struct.Memory* %loadMem_43b30d, %struct.Memory** %MEMORY
  br label %block_.L_43b314

block_.L_43b314:                                  ; preds = %block_.L_43b42c, %block_43b30d
  %loadMem_43b314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %332 = getelementptr inbounds %struct.GPR, %struct.GPR* %331, i32 0, i32 33
  %333 = getelementptr inbounds %struct.Reg, %struct.Reg* %332, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %333 to i64*
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %335 = getelementptr inbounds %struct.GPR, %struct.GPR* %334, i32 0, i32 1
  %336 = getelementptr inbounds %struct.Reg, %struct.Reg* %335, i32 0, i32 0
  %RAX.i1020 = bitcast %union.anon* %336 to i64*
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %338 = getelementptr inbounds %struct.GPR, %struct.GPR* %337, i32 0, i32 15
  %339 = getelementptr inbounds %struct.Reg, %struct.Reg* %338, i32 0, i32 0
  %RBP.i1021 = bitcast %union.anon* %339 to i64*
  %340 = load i64, i64* %RBP.i1021
  %341 = sub i64 %340, 64
  %342 = load i64, i64* %PC.i1019
  %343 = add i64 %342, 3
  store i64 %343, i64* %PC.i1019
  %344 = inttoptr i64 %341 to i32*
  %345 = load i32, i32* %344
  %346 = zext i32 %345 to i64
  store i64 %346, i64* %RAX.i1020, align 8
  store %struct.Memory* %loadMem_43b314, %struct.Memory** %MEMORY
  %loadMem_43b317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %348 = getelementptr inbounds %struct.GPR, %struct.GPR* %347, i32 0, i32 33
  %349 = getelementptr inbounds %struct.Reg, %struct.Reg* %348, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %349 to i64*
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %351 = getelementptr inbounds %struct.GPR, %struct.GPR* %350, i32 0, i32 1
  %352 = getelementptr inbounds %struct.Reg, %struct.Reg* %351, i32 0, i32 0
  %EAX.i1018 = bitcast %union.anon* %352 to i32*
  %353 = load i32, i32* %EAX.i1018
  %354 = zext i32 %353 to i64
  %355 = load i64, i64* %PC.i1017
  %356 = add i64 %355, 7
  store i64 %356, i64* %PC.i1017
  %357 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %358 = sub i32 %353, %357
  %359 = icmp ult i32 %353, %357
  %360 = zext i1 %359 to i8
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %360, i8* %361, align 1
  %362 = and i32 %358, 255
  %363 = call i32 @llvm.ctpop.i32(i32 %362)
  %364 = trunc i32 %363 to i8
  %365 = and i8 %364, 1
  %366 = xor i8 %365, 1
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %366, i8* %367, align 1
  %368 = xor i32 %357, %353
  %369 = xor i32 %368, %358
  %370 = lshr i32 %369, 4
  %371 = trunc i32 %370 to i8
  %372 = and i8 %371, 1
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %372, i8* %373, align 1
  %374 = icmp eq i32 %358, 0
  %375 = zext i1 %374 to i8
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %375, i8* %376, align 1
  %377 = lshr i32 %358, 31
  %378 = trunc i32 %377 to i8
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %378, i8* %379, align 1
  %380 = lshr i32 %353, 31
  %381 = lshr i32 %357, 31
  %382 = xor i32 %381, %380
  %383 = xor i32 %377, %380
  %384 = add i32 %383, %382
  %385 = icmp eq i32 %384, 2
  %386 = zext i1 %385 to i8
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %386, i8* %387, align 1
  store %struct.Memory* %loadMem_43b317, %struct.Memory** %MEMORY
  %loadMem_43b31e = load %struct.Memory*, %struct.Memory** %MEMORY
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %389 = getelementptr inbounds %struct.GPR, %struct.GPR* %388, i32 0, i32 33
  %390 = getelementptr inbounds %struct.Reg, %struct.Reg* %389, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %390 to i64*
  %391 = load i64, i64* %PC.i1016
  %392 = add i64 %391, 284
  %393 = load i64, i64* %PC.i1016
  %394 = add i64 %393, 6
  %395 = load i64, i64* %PC.i1016
  %396 = add i64 %395, 6
  store i64 %396, i64* %PC.i1016
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %398 = load i8, i8* %397, align 1
  %399 = icmp ne i8 %398, 0
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %401 = load i8, i8* %400, align 1
  %402 = icmp ne i8 %401, 0
  %403 = xor i1 %399, %402
  %404 = xor i1 %403, true
  %405 = zext i1 %404 to i8
  store i8 %405, i8* %BRANCH_TAKEN, align 1
  %406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %407 = select i1 %403, i64 %394, i64 %392
  store i64 %407, i64* %406, align 8
  store %struct.Memory* %loadMem_43b31e, %struct.Memory** %MEMORY
  %loadBr_43b31e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b31e = icmp eq i8 %loadBr_43b31e, 1
  br i1 %cmpBr_43b31e, label %block_.L_43b43a, label %block_43b324

block_43b324:                                     ; preds = %block_.L_43b314
  %loadMem_43b324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %409 = getelementptr inbounds %struct.GPR, %struct.GPR* %408, i32 0, i32 33
  %410 = getelementptr inbounds %struct.Reg, %struct.Reg* %409, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %410 to i64*
  %411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %412 = getelementptr inbounds %struct.GPR, %struct.GPR* %411, i32 0, i32 1
  %413 = getelementptr inbounds %struct.Reg, %struct.Reg* %412, i32 0, i32 0
  %RAX.i1014 = bitcast %union.anon* %413 to i64*
  %414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %415 = getelementptr inbounds %struct.GPR, %struct.GPR* %414, i32 0, i32 15
  %416 = getelementptr inbounds %struct.Reg, %struct.Reg* %415, i32 0, i32 0
  %RBP.i1015 = bitcast %union.anon* %416 to i64*
  %417 = load i64, i64* %RBP.i1015
  %418 = sub i64 %417, 60
  %419 = load i64, i64* %PC.i1013
  %420 = add i64 %419, 4
  store i64 %420, i64* %PC.i1013
  %421 = inttoptr i64 %418 to i32*
  %422 = load i32, i32* %421
  %423 = sext i32 %422 to i64
  %424 = mul i64 %423, 20
  %425 = trunc i64 %424 to i32
  %426 = and i64 %424, 4294967295
  store i64 %426, i64* %RAX.i1014, align 8
  %427 = shl i64 %424, 32
  %428 = ashr exact i64 %427, 32
  %429 = icmp ne i64 %428, %424
  %430 = zext i1 %429 to i8
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %430, i8* %431, align 1
  %432 = and i32 %425, 255
  %433 = call i32 @llvm.ctpop.i32(i32 %432)
  %434 = trunc i32 %433 to i8
  %435 = and i8 %434, 1
  %436 = xor i8 %435, 1
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %436, i8* %437, align 1
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %438, align 1
  %439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %439, align 1
  %440 = lshr i32 %425, 31
  %441 = trunc i32 %440 to i8
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %441, i8* %442, align 1
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %430, i8* %443, align 1
  store %struct.Memory* %loadMem_43b324, %struct.Memory** %MEMORY
  %loadMem_43b328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %445 = getelementptr inbounds %struct.GPR, %struct.GPR* %444, i32 0, i32 33
  %446 = getelementptr inbounds %struct.Reg, %struct.Reg* %445, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %446 to i64*
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %448 = getelementptr inbounds %struct.GPR, %struct.GPR* %447, i32 0, i32 1
  %449 = getelementptr inbounds %struct.Reg, %struct.Reg* %448, i32 0, i32 0
  %RAX.i1012 = bitcast %union.anon* %449 to i64*
  %450 = load i64, i64* %RAX.i1012
  %451 = load i64, i64* %PC.i1011
  %452 = add i64 %451, 3
  store i64 %452, i64* %PC.i1011
  %453 = trunc i64 %450 to i32
  %454 = add i32 21, %453
  %455 = zext i32 %454 to i64
  store i64 %455, i64* %RAX.i1012, align 8
  %456 = icmp ult i32 %454, %453
  %457 = icmp ult i32 %454, 21
  %458 = or i1 %456, %457
  %459 = zext i1 %458 to i8
  %460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %459, i8* %460, align 1
  %461 = and i32 %454, 255
  %462 = call i32 @llvm.ctpop.i32(i32 %461)
  %463 = trunc i32 %462 to i8
  %464 = and i8 %463, 1
  %465 = xor i8 %464, 1
  %466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %465, i8* %466, align 1
  %467 = xor i64 21, %450
  %468 = trunc i64 %467 to i32
  %469 = xor i32 %468, %454
  %470 = lshr i32 %469, 4
  %471 = trunc i32 %470 to i8
  %472 = and i8 %471, 1
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %472, i8* %473, align 1
  %474 = icmp eq i32 %454, 0
  %475 = zext i1 %474 to i8
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %475, i8* %476, align 1
  %477 = lshr i32 %454, 31
  %478 = trunc i32 %477 to i8
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %478, i8* %479, align 1
  %480 = lshr i32 %453, 31
  %481 = xor i32 %477, %480
  %482 = add i32 %481, %477
  %483 = icmp eq i32 %482, 2
  %484 = zext i1 %483 to i8
  %485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %484, i8* %485, align 1
  store %struct.Memory* %loadMem_43b328, %struct.Memory** %MEMORY
  %loadMem_43b32b = load %struct.Memory*, %struct.Memory** %MEMORY
  %486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %487 = getelementptr inbounds %struct.GPR, %struct.GPR* %486, i32 0, i32 33
  %488 = getelementptr inbounds %struct.Reg, %struct.Reg* %487, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %488 to i64*
  %489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %490 = getelementptr inbounds %struct.GPR, %struct.GPR* %489, i32 0, i32 1
  %491 = getelementptr inbounds %struct.Reg, %struct.Reg* %490, i32 0, i32 0
  %RAX.i1009 = bitcast %union.anon* %491 to i64*
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %493 = getelementptr inbounds %struct.GPR, %struct.GPR* %492, i32 0, i32 15
  %494 = getelementptr inbounds %struct.Reg, %struct.Reg* %493, i32 0, i32 0
  %RBP.i1010 = bitcast %union.anon* %494 to i64*
  %495 = load i64, i64* %RAX.i1009
  %496 = load i64, i64* %RBP.i1010
  %497 = sub i64 %496, 64
  %498 = load i64, i64* %PC.i1008
  %499 = add i64 %498, 3
  store i64 %499, i64* %PC.i1008
  %500 = trunc i64 %495 to i32
  %501 = inttoptr i64 %497 to i32*
  %502 = load i32, i32* %501
  %503 = add i32 %502, %500
  %504 = zext i32 %503 to i64
  store i64 %504, i64* %RAX.i1009, align 8
  %505 = icmp ult i32 %503, %500
  %506 = icmp ult i32 %503, %502
  %507 = or i1 %505, %506
  %508 = zext i1 %507 to i8
  %509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %508, i8* %509, align 1
  %510 = and i32 %503, 255
  %511 = call i32 @llvm.ctpop.i32(i32 %510)
  %512 = trunc i32 %511 to i8
  %513 = and i8 %512, 1
  %514 = xor i8 %513, 1
  %515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %514, i8* %515, align 1
  %516 = xor i32 %502, %500
  %517 = xor i32 %516, %503
  %518 = lshr i32 %517, 4
  %519 = trunc i32 %518 to i8
  %520 = and i8 %519, 1
  %521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %520, i8* %521, align 1
  %522 = icmp eq i32 %503, 0
  %523 = zext i1 %522 to i8
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %523, i8* %524, align 1
  %525 = lshr i32 %503, 31
  %526 = trunc i32 %525 to i8
  %527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %526, i8* %527, align 1
  %528 = lshr i32 %500, 31
  %529 = lshr i32 %502, 31
  %530 = xor i32 %525, %528
  %531 = xor i32 %525, %529
  %532 = add i32 %530, %531
  %533 = icmp eq i32 %532, 2
  %534 = zext i1 %533 to i8
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %534, i8* %535, align 1
  store %struct.Memory* %loadMem_43b32b, %struct.Memory** %MEMORY
  %loadMem_43b32e = load %struct.Memory*, %struct.Memory** %MEMORY
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %537 = getelementptr inbounds %struct.GPR, %struct.GPR* %536, i32 0, i32 33
  %538 = getelementptr inbounds %struct.Reg, %struct.Reg* %537, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %538 to i64*
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %540 = getelementptr inbounds %struct.GPR, %struct.GPR* %539, i32 0, i32 1
  %541 = getelementptr inbounds %struct.Reg, %struct.Reg* %540, i32 0, i32 0
  %EAX.i1006 = bitcast %union.anon* %541 to i32*
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %543 = getelementptr inbounds %struct.GPR, %struct.GPR* %542, i32 0, i32 15
  %544 = getelementptr inbounds %struct.Reg, %struct.Reg* %543, i32 0, i32 0
  %RBP.i1007 = bitcast %union.anon* %544 to i64*
  %545 = load i64, i64* %RBP.i1007
  %546 = sub i64 %545, 88
  %547 = load i32, i32* %EAX.i1006
  %548 = zext i32 %547 to i64
  %549 = load i64, i64* %PC.i1005
  %550 = add i64 %549, 3
  store i64 %550, i64* %PC.i1005
  %551 = inttoptr i64 %546 to i32*
  store i32 %547, i32* %551
  store %struct.Memory* %loadMem_43b32e, %struct.Memory** %MEMORY
  %loadMem_43b331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %553 = getelementptr inbounds %struct.GPR, %struct.GPR* %552, i32 0, i32 33
  %554 = getelementptr inbounds %struct.Reg, %struct.Reg* %553, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %554 to i64*
  %555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %556 = getelementptr inbounds %struct.GPR, %struct.GPR* %555, i32 0, i32 5
  %557 = getelementptr inbounds %struct.Reg, %struct.Reg* %556, i32 0, i32 0
  %RCX.i1003 = bitcast %union.anon* %557 to i64*
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %559 = getelementptr inbounds %struct.GPR, %struct.GPR* %558, i32 0, i32 15
  %560 = getelementptr inbounds %struct.Reg, %struct.Reg* %559, i32 0, i32 0
  %RBP.i1004 = bitcast %union.anon* %560 to i64*
  %561 = load i64, i64* %RBP.i1004
  %562 = sub i64 %561, 48
  %563 = load i64, i64* %PC.i1002
  %564 = add i64 %563, 4
  store i64 %564, i64* %PC.i1002
  %565 = inttoptr i64 %562 to i64*
  %566 = load i64, i64* %565
  store i64 %566, i64* %RCX.i1003, align 8
  store %struct.Memory* %loadMem_43b331, %struct.Memory** %MEMORY
  %loadMem_43b335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %568 = getelementptr inbounds %struct.GPR, %struct.GPR* %567, i32 0, i32 33
  %569 = getelementptr inbounds %struct.Reg, %struct.Reg* %568, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %569 to i64*
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %571 = getelementptr inbounds %struct.GPR, %struct.GPR* %570, i32 0, i32 7
  %572 = getelementptr inbounds %struct.Reg, %struct.Reg* %571, i32 0, i32 0
  %RDX.i1000 = bitcast %union.anon* %572 to i64*
  %573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %574 = getelementptr inbounds %struct.GPR, %struct.GPR* %573, i32 0, i32 15
  %575 = getelementptr inbounds %struct.Reg, %struct.Reg* %574, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %575 to i64*
  %576 = load i64, i64* %RBP.i1001
  %577 = sub i64 %576, 88
  %578 = load i64, i64* %PC.i999
  %579 = add i64 %578, 4
  store i64 %579, i64* %PC.i999
  %580 = inttoptr i64 %577 to i32*
  %581 = load i32, i32* %580
  %582 = sext i32 %581 to i64
  store i64 %582, i64* %RDX.i1000, align 8
  store %struct.Memory* %loadMem_43b335, %struct.Memory** %MEMORY
  %loadMem_43b339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %584 = getelementptr inbounds %struct.GPR, %struct.GPR* %583, i32 0, i32 33
  %585 = getelementptr inbounds %struct.Reg, %struct.Reg* %584, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %585 to i64*
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %587 = getelementptr inbounds %struct.GPR, %struct.GPR* %586, i32 0, i32 7
  %588 = getelementptr inbounds %struct.Reg, %struct.Reg* %587, i32 0, i32 0
  %RDX.i998 = bitcast %union.anon* %588 to i64*
  %589 = load i64, i64* %RDX.i998
  %590 = load i64, i64* %PC.i997
  %591 = add i64 %590, 4
  store i64 %591, i64* %PC.i997
  %592 = sext i64 %589 to i128
  %593 = and i128 %592, -18446744073709551616
  %594 = zext i64 %589 to i128
  %595 = or i128 %593, %594
  %596 = mul i128 36, %595
  %597 = trunc i128 %596 to i64
  store i64 %597, i64* %RDX.i998, align 8
  %598 = sext i64 %597 to i128
  %599 = icmp ne i128 %598, %596
  %600 = zext i1 %599 to i8
  %601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %600, i8* %601, align 1
  %602 = trunc i128 %596 to i32
  %603 = and i32 %602, 255
  %604 = call i32 @llvm.ctpop.i32(i32 %603)
  %605 = trunc i32 %604 to i8
  %606 = and i8 %605, 1
  %607 = xor i8 %606, 1
  %608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %607, i8* %608, align 1
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %609, align 1
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %610, align 1
  %611 = lshr i64 %597, 63
  %612 = trunc i64 %611 to i8
  %613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %612, i8* %613, align 1
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %600, i8* %614, align 1
  store %struct.Memory* %loadMem_43b339, %struct.Memory** %MEMORY
  %loadMem_43b33d = load %struct.Memory*, %struct.Memory** %MEMORY
  %615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %616 = getelementptr inbounds %struct.GPR, %struct.GPR* %615, i32 0, i32 33
  %617 = getelementptr inbounds %struct.Reg, %struct.Reg* %616, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %617 to i64*
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %619 = getelementptr inbounds %struct.GPR, %struct.GPR* %618, i32 0, i32 5
  %620 = getelementptr inbounds %struct.Reg, %struct.Reg* %619, i32 0, i32 0
  %RCX.i995 = bitcast %union.anon* %620 to i64*
  %621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %622 = getelementptr inbounds %struct.GPR, %struct.GPR* %621, i32 0, i32 7
  %623 = getelementptr inbounds %struct.Reg, %struct.Reg* %622, i32 0, i32 0
  %RDX.i996 = bitcast %union.anon* %623 to i64*
  %624 = load i64, i64* %RCX.i995
  %625 = load i64, i64* %RDX.i996
  %626 = load i64, i64* %PC.i994
  %627 = add i64 %626, 3
  store i64 %627, i64* %PC.i994
  %628 = add i64 %625, %624
  store i64 %628, i64* %RCX.i995, align 8
  %629 = icmp ult i64 %628, %624
  %630 = icmp ult i64 %628, %625
  %631 = or i1 %629, %630
  %632 = zext i1 %631 to i8
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %632, i8* %633, align 1
  %634 = trunc i64 %628 to i32
  %635 = and i32 %634, 255
  %636 = call i32 @llvm.ctpop.i32(i32 %635)
  %637 = trunc i32 %636 to i8
  %638 = and i8 %637, 1
  %639 = xor i8 %638, 1
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %639, i8* %640, align 1
  %641 = xor i64 %625, %624
  %642 = xor i64 %641, %628
  %643 = lshr i64 %642, 4
  %644 = trunc i64 %643 to i8
  %645 = and i8 %644, 1
  %646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %645, i8* %646, align 1
  %647 = icmp eq i64 %628, 0
  %648 = zext i1 %647 to i8
  %649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %648, i8* %649, align 1
  %650 = lshr i64 %628, 63
  %651 = trunc i64 %650 to i8
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %651, i8* %652, align 1
  %653 = lshr i64 %624, 63
  %654 = lshr i64 %625, 63
  %655 = xor i64 %650, %653
  %656 = xor i64 %650, %654
  %657 = add i64 %655, %656
  %658 = icmp eq i64 %657, 2
  %659 = zext i1 %658 to i8
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %659, i8* %660, align 1
  store %struct.Memory* %loadMem_43b33d, %struct.Memory** %MEMORY
  %loadMem_43b340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %662 = getelementptr inbounds %struct.GPR, %struct.GPR* %661, i32 0, i32 33
  %663 = getelementptr inbounds %struct.Reg, %struct.Reg* %662, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %663 to i64*
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %665 = getelementptr inbounds %struct.GPR, %struct.GPR* %664, i32 0, i32 1
  %666 = getelementptr inbounds %struct.Reg, %struct.Reg* %665, i32 0, i32 0
  %RAX.i992 = bitcast %union.anon* %666 to i64*
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %668 = getelementptr inbounds %struct.GPR, %struct.GPR* %667, i32 0, i32 5
  %669 = getelementptr inbounds %struct.Reg, %struct.Reg* %668, i32 0, i32 0
  %RCX.i993 = bitcast %union.anon* %669 to i64*
  %670 = load i64, i64* %RCX.i993
  %671 = add i64 %670, 12
  %672 = load i64, i64* %PC.i991
  %673 = add i64 %672, 3
  store i64 %673, i64* %PC.i991
  %674 = inttoptr i64 %671 to i32*
  %675 = load i32, i32* %674
  %676 = zext i32 %675 to i64
  store i64 %676, i64* %RAX.i992, align 8
  store %struct.Memory* %loadMem_43b340, %struct.Memory** %MEMORY
  %loadMem_43b343 = load %struct.Memory*, %struct.Memory** %MEMORY
  %677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %678 = getelementptr inbounds %struct.GPR, %struct.GPR* %677, i32 0, i32 33
  %679 = getelementptr inbounds %struct.Reg, %struct.Reg* %678, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %679 to i64*
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %681 = getelementptr inbounds %struct.GPR, %struct.GPR* %680, i32 0, i32 1
  %682 = getelementptr inbounds %struct.Reg, %struct.Reg* %681, i32 0, i32 0
  %EAX.i989 = bitcast %union.anon* %682 to i32*
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %684 = getelementptr inbounds %struct.GPR, %struct.GPR* %683, i32 0, i32 15
  %685 = getelementptr inbounds %struct.Reg, %struct.Reg* %684, i32 0, i32 0
  %RBP.i990 = bitcast %union.anon* %685 to i64*
  %686 = load i32, i32* %EAX.i989
  %687 = zext i32 %686 to i64
  %688 = load i64, i64* %RBP.i990
  %689 = sub i64 %688, 4
  %690 = load i64, i64* %PC.i988
  %691 = add i64 %690, 3
  store i64 %691, i64* %PC.i988
  %692 = inttoptr i64 %689 to i32*
  %693 = load i32, i32* %692
  %694 = sub i32 %686, %693
  %695 = icmp ult i32 %686, %693
  %696 = zext i1 %695 to i8
  %697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %696, i8* %697, align 1
  %698 = and i32 %694, 255
  %699 = call i32 @llvm.ctpop.i32(i32 %698)
  %700 = trunc i32 %699 to i8
  %701 = and i8 %700, 1
  %702 = xor i8 %701, 1
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %702, i8* %703, align 1
  %704 = xor i32 %693, %686
  %705 = xor i32 %704, %694
  %706 = lshr i32 %705, 4
  %707 = trunc i32 %706 to i8
  %708 = and i8 %707, 1
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %708, i8* %709, align 1
  %710 = icmp eq i32 %694, 0
  %711 = zext i1 %710 to i8
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %711, i8* %712, align 1
  %713 = lshr i32 %694, 31
  %714 = trunc i32 %713 to i8
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %714, i8* %715, align 1
  %716 = lshr i32 %686, 31
  %717 = lshr i32 %693, 31
  %718 = xor i32 %717, %716
  %719 = xor i32 %713, %716
  %720 = add i32 %719, %718
  %721 = icmp eq i32 %720, 2
  %722 = zext i1 %721 to i8
  %723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %722, i8* %723, align 1
  store %struct.Memory* %loadMem_43b343, %struct.Memory** %MEMORY
  %loadMem_43b346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %725 = getelementptr inbounds %struct.GPR, %struct.GPR* %724, i32 0, i32 33
  %726 = getelementptr inbounds %struct.Reg, %struct.Reg* %725, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %726 to i64*
  %727 = load i64, i64* %PC.i987
  %728 = add i64 %727, 11
  %729 = load i64, i64* %PC.i987
  %730 = add i64 %729, 6
  %731 = load i64, i64* %PC.i987
  %732 = add i64 %731, 6
  store i64 %732, i64* %PC.i987
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %734 = load i8, i8* %733, align 1
  store i8 %734, i8* %BRANCH_TAKEN, align 1
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %736 = icmp ne i8 %734, 0
  %737 = select i1 %736, i64 %728, i64 %730
  store i64 %737, i64* %735, align 8
  store %struct.Memory* %loadMem_43b346, %struct.Memory** %MEMORY
  %loadBr_43b346 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b346 = icmp eq i8 %loadBr_43b346, 1
  br i1 %cmpBr_43b346, label %block_.L_43b351, label %block_43b34c

block_43b34c:                                     ; preds = %block_43b324
  %loadMem_43b34c = load %struct.Memory*, %struct.Memory** %MEMORY
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %739 = getelementptr inbounds %struct.GPR, %struct.GPR* %738, i32 0, i32 33
  %740 = getelementptr inbounds %struct.Reg, %struct.Reg* %739, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %740 to i64*
  %741 = load i64, i64* %PC.i986
  %742 = add i64 %741, 224
  %743 = load i64, i64* %PC.i986
  %744 = add i64 %743, 5
  store i64 %744, i64* %PC.i986
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %742, i64* %745, align 8
  store %struct.Memory* %loadMem_43b34c, %struct.Memory** %MEMORY
  br label %block_.L_43b42c

block_.L_43b351:                                  ; preds = %block_43b324
  %loadMem_43b351 = load %struct.Memory*, %struct.Memory** %MEMORY
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %747 = getelementptr inbounds %struct.GPR, %struct.GPR* %746, i32 0, i32 33
  %748 = getelementptr inbounds %struct.Reg, %struct.Reg* %747, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %748 to i64*
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %750 = getelementptr inbounds %struct.GPR, %struct.GPR* %749, i32 0, i32 1
  %751 = getelementptr inbounds %struct.Reg, %struct.Reg* %750, i32 0, i32 0
  %RAX.i984 = bitcast %union.anon* %751 to i64*
  %752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %753 = getelementptr inbounds %struct.GPR, %struct.GPR* %752, i32 0, i32 15
  %754 = getelementptr inbounds %struct.Reg, %struct.Reg* %753, i32 0, i32 0
  %RBP.i985 = bitcast %union.anon* %754 to i64*
  %755 = load i64, i64* %RBP.i985
  %756 = sub i64 %755, 48
  %757 = load i64, i64* %PC.i983
  %758 = add i64 %757, 4
  store i64 %758, i64* %PC.i983
  %759 = inttoptr i64 %756 to i64*
  %760 = load i64, i64* %759
  store i64 %760, i64* %RAX.i984, align 8
  store %struct.Memory* %loadMem_43b351, %struct.Memory** %MEMORY
  %loadMem_43b355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 33
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %763 to i64*
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %765 = getelementptr inbounds %struct.GPR, %struct.GPR* %764, i32 0, i32 5
  %766 = getelementptr inbounds %struct.Reg, %struct.Reg* %765, i32 0, i32 0
  %RCX.i981 = bitcast %union.anon* %766 to i64*
  %767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %768 = getelementptr inbounds %struct.GPR, %struct.GPR* %767, i32 0, i32 15
  %769 = getelementptr inbounds %struct.Reg, %struct.Reg* %768, i32 0, i32 0
  %RBP.i982 = bitcast %union.anon* %769 to i64*
  %770 = load i64, i64* %RBP.i982
  %771 = sub i64 %770, 88
  %772 = load i64, i64* %PC.i980
  %773 = add i64 %772, 4
  store i64 %773, i64* %PC.i980
  %774 = inttoptr i64 %771 to i32*
  %775 = load i32, i32* %774
  %776 = sext i32 %775 to i64
  store i64 %776, i64* %RCX.i981, align 8
  store %struct.Memory* %loadMem_43b355, %struct.Memory** %MEMORY
  %loadMem_43b359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %778 = getelementptr inbounds %struct.GPR, %struct.GPR* %777, i32 0, i32 33
  %779 = getelementptr inbounds %struct.Reg, %struct.Reg* %778, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %779 to i64*
  %780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %781 = getelementptr inbounds %struct.GPR, %struct.GPR* %780, i32 0, i32 5
  %782 = getelementptr inbounds %struct.Reg, %struct.Reg* %781, i32 0, i32 0
  %RCX.i979 = bitcast %union.anon* %782 to i64*
  %783 = load i64, i64* %RCX.i979
  %784 = load i64, i64* %PC.i978
  %785 = add i64 %784, 4
  store i64 %785, i64* %PC.i978
  %786 = sext i64 %783 to i128
  %787 = and i128 %786, -18446744073709551616
  %788 = zext i64 %783 to i128
  %789 = or i128 %787, %788
  %790 = mul i128 36, %789
  %791 = trunc i128 %790 to i64
  store i64 %791, i64* %RCX.i979, align 8
  %792 = sext i64 %791 to i128
  %793 = icmp ne i128 %792, %790
  %794 = zext i1 %793 to i8
  %795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %794, i8* %795, align 1
  %796 = trunc i128 %790 to i32
  %797 = and i32 %796, 255
  %798 = call i32 @llvm.ctpop.i32(i32 %797)
  %799 = trunc i32 %798 to i8
  %800 = and i8 %799, 1
  %801 = xor i8 %800, 1
  %802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %801, i8* %802, align 1
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %803, align 1
  %804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %804, align 1
  %805 = lshr i64 %791, 63
  %806 = trunc i64 %805 to i8
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %806, i8* %807, align 1
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %794, i8* %808, align 1
  store %struct.Memory* %loadMem_43b359, %struct.Memory** %MEMORY
  %loadMem_43b35d = load %struct.Memory*, %struct.Memory** %MEMORY
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %810 = getelementptr inbounds %struct.GPR, %struct.GPR* %809, i32 0, i32 33
  %811 = getelementptr inbounds %struct.Reg, %struct.Reg* %810, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %811 to i64*
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 1
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %RAX.i976 = bitcast %union.anon* %814 to i64*
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 5
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %RCX.i977 = bitcast %union.anon* %817 to i64*
  %818 = load i64, i64* %RAX.i976
  %819 = load i64, i64* %RCX.i977
  %820 = load i64, i64* %PC.i975
  %821 = add i64 %820, 3
  store i64 %821, i64* %PC.i975
  %822 = add i64 %819, %818
  store i64 %822, i64* %RAX.i976, align 8
  %823 = icmp ult i64 %822, %818
  %824 = icmp ult i64 %822, %819
  %825 = or i1 %823, %824
  %826 = zext i1 %825 to i8
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %826, i8* %827, align 1
  %828 = trunc i64 %822 to i32
  %829 = and i32 %828, 255
  %830 = call i32 @llvm.ctpop.i32(i32 %829)
  %831 = trunc i32 %830 to i8
  %832 = and i8 %831, 1
  %833 = xor i8 %832, 1
  %834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %833, i8* %834, align 1
  %835 = xor i64 %819, %818
  %836 = xor i64 %835, %822
  %837 = lshr i64 %836, 4
  %838 = trunc i64 %837 to i8
  %839 = and i8 %838, 1
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %839, i8* %840, align 1
  %841 = icmp eq i64 %822, 0
  %842 = zext i1 %841 to i8
  %843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %842, i8* %843, align 1
  %844 = lshr i64 %822, 63
  %845 = trunc i64 %844 to i8
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %845, i8* %846, align 1
  %847 = lshr i64 %818, 63
  %848 = lshr i64 %819, 63
  %849 = xor i64 %844, %847
  %850 = xor i64 %844, %848
  %851 = add i64 %849, %850
  %852 = icmp eq i64 %851, 2
  %853 = zext i1 %852 to i8
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %853, i8* %854, align 1
  store %struct.Memory* %loadMem_43b35d, %struct.Memory** %MEMORY
  %loadMem_43b360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 33
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %857 to i64*
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 1
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %RAX.i973 = bitcast %union.anon* %860 to i64*
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 7
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %RDX.i974 = bitcast %union.anon* %863 to i64*
  %864 = load i64, i64* %RAX.i973
  %865 = add i64 %864, 28
  %866 = load i64, i64* %PC.i972
  %867 = add i64 %866, 4
  store i64 %867, i64* %PC.i972
  %868 = inttoptr i64 %865 to i8*
  %869 = load i8, i8* %868
  %870 = sext i8 %869 to i64
  %871 = and i64 %870, 4294967295
  store i64 %871, i64* %RDX.i974, align 8
  store %struct.Memory* %loadMem_43b360, %struct.Memory** %MEMORY
  %loadMem_43b364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %873 = getelementptr inbounds %struct.GPR, %struct.GPR* %872, i32 0, i32 33
  %874 = getelementptr inbounds %struct.Reg, %struct.Reg* %873, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %874 to i64*
  %875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %876 = getelementptr inbounds %struct.GPR, %struct.GPR* %875, i32 0, i32 7
  %877 = getelementptr inbounds %struct.Reg, %struct.Reg* %876, i32 0, i32 0
  %EDX.i971 = bitcast %union.anon* %877 to i32*
  %878 = load i32, i32* %EDX.i971
  %879 = zext i32 %878 to i64
  %880 = load i64, i64* %PC.i970
  %881 = add i64 %880, 3
  store i64 %881, i64* %PC.i970
  %882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %882, align 1
  %883 = and i32 %878, 255
  %884 = call i32 @llvm.ctpop.i32(i32 %883)
  %885 = trunc i32 %884 to i8
  %886 = and i8 %885, 1
  %887 = xor i8 %886, 1
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %887, i8* %888, align 1
  %889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %889, align 1
  %890 = icmp eq i32 %878, 0
  %891 = zext i1 %890 to i8
  %892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %891, i8* %892, align 1
  %893 = lshr i32 %878, 31
  %894 = trunc i32 %893 to i8
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %894, i8* %895, align 1
  %896 = lshr i32 %878, 31
  %897 = xor i32 %893, %896
  %898 = add i32 %897, %896
  %899 = icmp eq i32 %898, 2
  %900 = zext i1 %899 to i8
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %900, i8* %901, align 1
  store %struct.Memory* %loadMem_43b364, %struct.Memory** %MEMORY
  %loadMem_43b367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %903 = getelementptr inbounds %struct.GPR, %struct.GPR* %902, i32 0, i32 33
  %904 = getelementptr inbounds %struct.Reg, %struct.Reg* %903, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %904 to i64*
  %905 = load i64, i64* %PC.i969
  %906 = add i64 %905, 27
  %907 = load i64, i64* %PC.i969
  %908 = add i64 %907, 6
  %909 = load i64, i64* %PC.i969
  %910 = add i64 %909, 6
  store i64 %910, i64* %PC.i969
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %912 = load i8, i8* %911, align 1
  %913 = icmp eq i8 %912, 0
  %914 = zext i1 %913 to i8
  store i8 %914, i8* %BRANCH_TAKEN, align 1
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %916 = select i1 %913, i64 %906, i64 %908
  store i64 %916, i64* %915, align 8
  store %struct.Memory* %loadMem_43b367, %struct.Memory** %MEMORY
  %loadBr_43b367 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b367 = icmp eq i8 %loadBr_43b367, 1
  br i1 %cmpBr_43b367, label %block_.L_43b382, label %block_43b36d

block_43b36d:                                     ; preds = %block_.L_43b351
  %loadMem_43b36d = load %struct.Memory*, %struct.Memory** %MEMORY
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %918 = getelementptr inbounds %struct.GPR, %struct.GPR* %917, i32 0, i32 33
  %919 = getelementptr inbounds %struct.Reg, %struct.Reg* %918, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %919 to i64*
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %921 = getelementptr inbounds %struct.GPR, %struct.GPR* %920, i32 0, i32 11
  %922 = getelementptr inbounds %struct.Reg, %struct.Reg* %921, i32 0, i32 0
  %RDI.i967 = bitcast %union.anon* %922 to i64*
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %924 = getelementptr inbounds %struct.GPR, %struct.GPR* %923, i32 0, i32 15
  %925 = getelementptr inbounds %struct.Reg, %struct.Reg* %924, i32 0, i32 0
  %RBP.i968 = bitcast %union.anon* %925 to i64*
  %926 = load i64, i64* %RBP.i968
  %927 = sub i64 %926, 56
  %928 = load i64, i64* %PC.i966
  %929 = add i64 %928, 4
  store i64 %929, i64* %PC.i966
  %930 = inttoptr i64 %927 to i64*
  %931 = load i64, i64* %930
  store i64 %931, i64* %RDI.i967, align 8
  store %struct.Memory* %loadMem_43b36d, %struct.Memory** %MEMORY
  %loadMem_43b371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %933 = getelementptr inbounds %struct.GPR, %struct.GPR* %932, i32 0, i32 33
  %934 = getelementptr inbounds %struct.Reg, %struct.Reg* %933, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %934 to i64*
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %936 = getelementptr inbounds %struct.GPR, %struct.GPR* %935, i32 0, i32 9
  %937 = getelementptr inbounds %struct.Reg, %struct.Reg* %936, i32 0, i32 0
  %RSI.i964 = bitcast %union.anon* %937 to i64*
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 15
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %RBP.i965 = bitcast %union.anon* %940 to i64*
  %941 = load i64, i64* %RBP.i965
  %942 = sub i64 %941, 88
  %943 = load i64, i64* %PC.i963
  %944 = add i64 %943, 3
  store i64 %944, i64* %PC.i963
  %945 = inttoptr i64 %942 to i32*
  %946 = load i32, i32* %945
  %947 = zext i32 %946 to i64
  store i64 %947, i64* %RSI.i964, align 8
  store %struct.Memory* %loadMem_43b371, %struct.Memory** %MEMORY
  %loadMem1_43b374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %949 = getelementptr inbounds %struct.GPR, %struct.GPR* %948, i32 0, i32 33
  %950 = getelementptr inbounds %struct.Reg, %struct.Reg* %949, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %950 to i64*
  %951 = load i64, i64* %PC.i962
  %952 = add i64 %951, -836
  %953 = load i64, i64* %PC.i962
  %954 = add i64 %953, 5
  %955 = load i64, i64* %PC.i962
  %956 = add i64 %955, 5
  store i64 %956, i64* %PC.i962
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %958 = load i64, i64* %957, align 8
  %959 = add i64 %958, -8
  %960 = inttoptr i64 %959 to i64*
  store i64 %954, i64* %960
  store i64 %959, i64* %957, align 8
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %952, i64* %961, align 8
  store %struct.Memory* %loadMem1_43b374, %struct.Memory** %MEMORY
  %loadMem2_43b374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b374 = load i64, i64* %3
  %call2_43b374 = call %struct.Memory* @sub_43b030.is_halfeye(%struct.State* %0, i64 %loadPC_43b374, %struct.Memory* %loadMem2_43b374)
  store %struct.Memory* %call2_43b374, %struct.Memory** %MEMORY
  %loadMem_43b379 = load %struct.Memory*, %struct.Memory** %MEMORY
  %962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %963 = getelementptr inbounds %struct.GPR, %struct.GPR* %962, i32 0, i32 33
  %964 = getelementptr inbounds %struct.Reg, %struct.Reg* %963, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %964 to i64*
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %966 = getelementptr inbounds %struct.GPR, %struct.GPR* %965, i32 0, i32 1
  %967 = getelementptr inbounds %struct.Reg, %struct.Reg* %966, i32 0, i32 0
  %EAX.i961 = bitcast %union.anon* %967 to i32*
  %968 = load i32, i32* %EAX.i961
  %969 = zext i32 %968 to i64
  %970 = load i64, i64* %PC.i960
  %971 = add i64 %970, 3
  store i64 %971, i64* %PC.i960
  %972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %972, align 1
  %973 = and i32 %968, 255
  %974 = call i32 @llvm.ctpop.i32(i32 %973)
  %975 = trunc i32 %974 to i8
  %976 = and i8 %975, 1
  %977 = xor i8 %976, 1
  %978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %977, i8* %978, align 1
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %979, align 1
  %980 = icmp eq i32 %968, 0
  %981 = zext i1 %980 to i8
  %982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %981, i8* %982, align 1
  %983 = lshr i32 %968, 31
  %984 = trunc i32 %983 to i8
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %984, i8* %985, align 1
  %986 = lshr i32 %968, 31
  %987 = xor i32 %983, %986
  %988 = add i32 %987, %986
  %989 = icmp eq i32 %988, 2
  %990 = zext i1 %989 to i8
  %991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %990, i8* %991, align 1
  store %struct.Memory* %loadMem_43b379, %struct.Memory** %MEMORY
  %loadMem_43b37c = load %struct.Memory*, %struct.Memory** %MEMORY
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %993 = getelementptr inbounds %struct.GPR, %struct.GPR* %992, i32 0, i32 33
  %994 = getelementptr inbounds %struct.Reg, %struct.Reg* %993, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %994 to i64*
  %995 = load i64, i64* %PC.i959
  %996 = add i64 %995, 115
  %997 = load i64, i64* %PC.i959
  %998 = add i64 %997, 6
  %999 = load i64, i64* %PC.i959
  %1000 = add i64 %999, 6
  store i64 %1000, i64* %PC.i959
  %1001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1002 = load i8, i8* %1001, align 1
  store i8 %1002, i8* %BRANCH_TAKEN, align 1
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1004 = icmp ne i8 %1002, 0
  %1005 = select i1 %1004, i64 %996, i64 %998
  store i64 %1005, i64* %1003, align 8
  store %struct.Memory* %loadMem_43b37c, %struct.Memory** %MEMORY
  %loadBr_43b37c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b37c = icmp eq i8 %loadBr_43b37c, 1
  br i1 %cmpBr_43b37c, label %block_.L_43b3ef, label %block_.L_43b382

block_.L_43b382:                                  ; preds = %block_43b36d, %block_.L_43b351
  %loadMem_43b382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1007 = getelementptr inbounds %struct.GPR, %struct.GPR* %1006, i32 0, i32 33
  %1008 = getelementptr inbounds %struct.Reg, %struct.Reg* %1007, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %1008 to i64*
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1010 = getelementptr inbounds %struct.GPR, %struct.GPR* %1009, i32 0, i32 1
  %1011 = getelementptr inbounds %struct.Reg, %struct.Reg* %1010, i32 0, i32 0
  %RAX.i957 = bitcast %union.anon* %1011 to i64*
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1013 = getelementptr inbounds %struct.GPR, %struct.GPR* %1012, i32 0, i32 15
  %1014 = getelementptr inbounds %struct.Reg, %struct.Reg* %1013, i32 0, i32 0
  %RBP.i958 = bitcast %union.anon* %1014 to i64*
  %1015 = load i64, i64* %RBP.i958
  %1016 = sub i64 %1015, 68
  %1017 = load i64, i64* %PC.i956
  %1018 = add i64 %1017, 3
  store i64 %1018, i64* %PC.i956
  %1019 = inttoptr i64 %1016 to i32*
  %1020 = load i32, i32* %1019
  %1021 = zext i32 %1020 to i64
  store i64 %1021, i64* %RAX.i957, align 8
  store %struct.Memory* %loadMem_43b382, %struct.Memory** %MEMORY
  %loadMem_43b385 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1023 = getelementptr inbounds %struct.GPR, %struct.GPR* %1022, i32 0, i32 33
  %1024 = getelementptr inbounds %struct.Reg, %struct.Reg* %1023, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %1024 to i64*
  %1025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1026 = getelementptr inbounds %struct.GPR, %struct.GPR* %1025, i32 0, i32 1
  %1027 = getelementptr inbounds %struct.Reg, %struct.Reg* %1026, i32 0, i32 0
  %RAX.i955 = bitcast %union.anon* %1027 to i64*
  %1028 = load i64, i64* %RAX.i955
  %1029 = load i64, i64* %PC.i954
  %1030 = add i64 %1029, 3
  store i64 %1030, i64* %PC.i954
  %1031 = trunc i64 %1028 to i32
  %1032 = add i32 1, %1031
  %1033 = zext i32 %1032 to i64
  store i64 %1033, i64* %RAX.i955, align 8
  %1034 = icmp ult i32 %1032, %1031
  %1035 = icmp ult i32 %1032, 1
  %1036 = or i1 %1034, %1035
  %1037 = zext i1 %1036 to i8
  %1038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1037, i8* %1038, align 1
  %1039 = and i32 %1032, 255
  %1040 = call i32 @llvm.ctpop.i32(i32 %1039)
  %1041 = trunc i32 %1040 to i8
  %1042 = and i8 %1041, 1
  %1043 = xor i8 %1042, 1
  %1044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1043, i8* %1044, align 1
  %1045 = xor i64 1, %1028
  %1046 = trunc i64 %1045 to i32
  %1047 = xor i32 %1046, %1032
  %1048 = lshr i32 %1047, 4
  %1049 = trunc i32 %1048 to i8
  %1050 = and i8 %1049, 1
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1050, i8* %1051, align 1
  %1052 = icmp eq i32 %1032, 0
  %1053 = zext i1 %1052 to i8
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1053, i8* %1054, align 1
  %1055 = lshr i32 %1032, 31
  %1056 = trunc i32 %1055 to i8
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1056, i8* %1057, align 1
  %1058 = lshr i32 %1031, 31
  %1059 = xor i32 %1055, %1058
  %1060 = add i32 %1059, %1055
  %1061 = icmp eq i32 %1060, 2
  %1062 = zext i1 %1061 to i8
  %1063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1062, i8* %1063, align 1
  store %struct.Memory* %loadMem_43b385, %struct.Memory** %MEMORY
  %loadMem_43b388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1065 = getelementptr inbounds %struct.GPR, %struct.GPR* %1064, i32 0, i32 33
  %1066 = getelementptr inbounds %struct.Reg, %struct.Reg* %1065, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %1066 to i64*
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1068 = getelementptr inbounds %struct.GPR, %struct.GPR* %1067, i32 0, i32 1
  %1069 = getelementptr inbounds %struct.Reg, %struct.Reg* %1068, i32 0, i32 0
  %EAX.i952 = bitcast %union.anon* %1069 to i32*
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1071 = getelementptr inbounds %struct.GPR, %struct.GPR* %1070, i32 0, i32 15
  %1072 = getelementptr inbounds %struct.Reg, %struct.Reg* %1071, i32 0, i32 0
  %RBP.i953 = bitcast %union.anon* %1072 to i64*
  %1073 = load i64, i64* %RBP.i953
  %1074 = sub i64 %1073, 68
  %1075 = load i32, i32* %EAX.i952
  %1076 = zext i32 %1075 to i64
  %1077 = load i64, i64* %PC.i951
  %1078 = add i64 %1077, 3
  store i64 %1078, i64* %PC.i951
  %1079 = inttoptr i64 %1074 to i32*
  store i32 %1075, i32* %1079
  store %struct.Memory* %loadMem_43b388, %struct.Memory** %MEMORY
  %loadMem_43b38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1081 = getelementptr inbounds %struct.GPR, %struct.GPR* %1080, i32 0, i32 33
  %1082 = getelementptr inbounds %struct.Reg, %struct.Reg* %1081, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %1082 to i64*
  %1083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1084 = getelementptr inbounds %struct.GPR, %struct.GPR* %1083, i32 0, i32 5
  %1085 = getelementptr inbounds %struct.Reg, %struct.Reg* %1084, i32 0, i32 0
  %RCX.i949 = bitcast %union.anon* %1085 to i64*
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 15
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %RBP.i950 = bitcast %union.anon* %1088 to i64*
  %1089 = load i64, i64* %RBP.i950
  %1090 = sub i64 %1089, 48
  %1091 = load i64, i64* %PC.i948
  %1092 = add i64 %1091, 4
  store i64 %1092, i64* %PC.i948
  %1093 = inttoptr i64 %1090 to i64*
  %1094 = load i64, i64* %1093
  store i64 %1094, i64* %RCX.i949, align 8
  store %struct.Memory* %loadMem_43b38b, %struct.Memory** %MEMORY
  %loadMem_43b38f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1096 = getelementptr inbounds %struct.GPR, %struct.GPR* %1095, i32 0, i32 33
  %1097 = getelementptr inbounds %struct.Reg, %struct.Reg* %1096, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %1097 to i64*
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1099 = getelementptr inbounds %struct.GPR, %struct.GPR* %1098, i32 0, i32 7
  %1100 = getelementptr inbounds %struct.Reg, %struct.Reg* %1099, i32 0, i32 0
  %RDX.i946 = bitcast %union.anon* %1100 to i64*
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1102 = getelementptr inbounds %struct.GPR, %struct.GPR* %1101, i32 0, i32 15
  %1103 = getelementptr inbounds %struct.Reg, %struct.Reg* %1102, i32 0, i32 0
  %RBP.i947 = bitcast %union.anon* %1103 to i64*
  %1104 = load i64, i64* %RBP.i947
  %1105 = sub i64 %1104, 88
  %1106 = load i64, i64* %PC.i945
  %1107 = add i64 %1106, 4
  store i64 %1107, i64* %PC.i945
  %1108 = inttoptr i64 %1105 to i32*
  %1109 = load i32, i32* %1108
  %1110 = sext i32 %1109 to i64
  store i64 %1110, i64* %RDX.i946, align 8
  store %struct.Memory* %loadMem_43b38f, %struct.Memory** %MEMORY
  %loadMem_43b393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1112 = getelementptr inbounds %struct.GPR, %struct.GPR* %1111, i32 0, i32 33
  %1113 = getelementptr inbounds %struct.Reg, %struct.Reg* %1112, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %1113 to i64*
  %1114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1115 = getelementptr inbounds %struct.GPR, %struct.GPR* %1114, i32 0, i32 7
  %1116 = getelementptr inbounds %struct.Reg, %struct.Reg* %1115, i32 0, i32 0
  %RDX.i944 = bitcast %union.anon* %1116 to i64*
  %1117 = load i64, i64* %RDX.i944
  %1118 = load i64, i64* %PC.i943
  %1119 = add i64 %1118, 4
  store i64 %1119, i64* %PC.i943
  %1120 = sext i64 %1117 to i128
  %1121 = and i128 %1120, -18446744073709551616
  %1122 = zext i64 %1117 to i128
  %1123 = or i128 %1121, %1122
  %1124 = mul i128 36, %1123
  %1125 = trunc i128 %1124 to i64
  store i64 %1125, i64* %RDX.i944, align 8
  %1126 = sext i64 %1125 to i128
  %1127 = icmp ne i128 %1126, %1124
  %1128 = zext i1 %1127 to i8
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1128, i8* %1129, align 1
  %1130 = trunc i128 %1124 to i32
  %1131 = and i32 %1130, 255
  %1132 = call i32 @llvm.ctpop.i32(i32 %1131)
  %1133 = trunc i32 %1132 to i8
  %1134 = and i8 %1133, 1
  %1135 = xor i8 %1134, 1
  %1136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1135, i8* %1136, align 1
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1137, align 1
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1138, align 1
  %1139 = lshr i64 %1125, 63
  %1140 = trunc i64 %1139 to i8
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1140, i8* %1141, align 1
  %1142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1128, i8* %1142, align 1
  store %struct.Memory* %loadMem_43b393, %struct.Memory** %MEMORY
  %loadMem_43b397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1144 = getelementptr inbounds %struct.GPR, %struct.GPR* %1143, i32 0, i32 33
  %1145 = getelementptr inbounds %struct.Reg, %struct.Reg* %1144, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %1145 to i64*
  %1146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1147 = getelementptr inbounds %struct.GPR, %struct.GPR* %1146, i32 0, i32 5
  %1148 = getelementptr inbounds %struct.Reg, %struct.Reg* %1147, i32 0, i32 0
  %RCX.i941 = bitcast %union.anon* %1148 to i64*
  %1149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1150 = getelementptr inbounds %struct.GPR, %struct.GPR* %1149, i32 0, i32 7
  %1151 = getelementptr inbounds %struct.Reg, %struct.Reg* %1150, i32 0, i32 0
  %RDX.i942 = bitcast %union.anon* %1151 to i64*
  %1152 = load i64, i64* %RCX.i941
  %1153 = load i64, i64* %RDX.i942
  %1154 = load i64, i64* %PC.i940
  %1155 = add i64 %1154, 3
  store i64 %1155, i64* %PC.i940
  %1156 = add i64 %1153, %1152
  store i64 %1156, i64* %RCX.i941, align 8
  %1157 = icmp ult i64 %1156, %1152
  %1158 = icmp ult i64 %1156, %1153
  %1159 = or i1 %1157, %1158
  %1160 = zext i1 %1159 to i8
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1160, i8* %1161, align 1
  %1162 = trunc i64 %1156 to i32
  %1163 = and i32 %1162, 255
  %1164 = call i32 @llvm.ctpop.i32(i32 %1163)
  %1165 = trunc i32 %1164 to i8
  %1166 = and i8 %1165, 1
  %1167 = xor i8 %1166, 1
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1167, i8* %1168, align 1
  %1169 = xor i64 %1153, %1152
  %1170 = xor i64 %1169, %1156
  %1171 = lshr i64 %1170, 4
  %1172 = trunc i64 %1171 to i8
  %1173 = and i8 %1172, 1
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1173, i8* %1174, align 1
  %1175 = icmp eq i64 %1156, 0
  %1176 = zext i1 %1175 to i8
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1176, i8* %1177, align 1
  %1178 = lshr i64 %1156, 63
  %1179 = trunc i64 %1178 to i8
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1179, i8* %1180, align 1
  %1181 = lshr i64 %1152, 63
  %1182 = lshr i64 %1153, 63
  %1183 = xor i64 %1178, %1181
  %1184 = xor i64 %1178, %1182
  %1185 = add i64 %1183, %1184
  %1186 = icmp eq i64 %1185, 2
  %1187 = zext i1 %1186 to i8
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1187, i8* %1188, align 1
  store %struct.Memory* %loadMem_43b397, %struct.Memory** %MEMORY
  %loadMem_43b39a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1190 = getelementptr inbounds %struct.GPR, %struct.GPR* %1189, i32 0, i32 33
  %1191 = getelementptr inbounds %struct.Reg, %struct.Reg* %1190, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %1191 to i64*
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1193 = getelementptr inbounds %struct.GPR, %struct.GPR* %1192, i32 0, i32 1
  %1194 = getelementptr inbounds %struct.Reg, %struct.Reg* %1193, i32 0, i32 0
  %RAX.i938 = bitcast %union.anon* %1194 to i64*
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1196 = getelementptr inbounds %struct.GPR, %struct.GPR* %1195, i32 0, i32 5
  %1197 = getelementptr inbounds %struct.Reg, %struct.Reg* %1196, i32 0, i32 0
  %RCX.i939 = bitcast %union.anon* %1197 to i64*
  %1198 = load i64, i64* %RCX.i939
  %1199 = add i64 %1198, 28
  %1200 = load i64, i64* %PC.i937
  %1201 = add i64 %1200, 4
  store i64 %1201, i64* %PC.i937
  %1202 = inttoptr i64 %1199 to i8*
  %1203 = load i8, i8* %1202
  %1204 = sext i8 %1203 to i64
  %1205 = and i64 %1204, 4294967295
  store i64 %1205, i64* %RAX.i938, align 8
  store %struct.Memory* %loadMem_43b39a, %struct.Memory** %MEMORY
  %loadMem_43b39e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1207 = getelementptr inbounds %struct.GPR, %struct.GPR* %1206, i32 0, i32 33
  %1208 = getelementptr inbounds %struct.Reg, %struct.Reg* %1207, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %1208 to i64*
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1210 = getelementptr inbounds %struct.GPR, %struct.GPR* %1209, i32 0, i32 1
  %1211 = getelementptr inbounds %struct.Reg, %struct.Reg* %1210, i32 0, i32 0
  %EAX.i936 = bitcast %union.anon* %1211 to i32*
  %1212 = load i32, i32* %EAX.i936
  %1213 = zext i32 %1212 to i64
  %1214 = load i64, i64* %PC.i935
  %1215 = add i64 %1214, 3
  store i64 %1215, i64* %PC.i935
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1216, align 1
  %1217 = and i32 %1212, 255
  %1218 = call i32 @llvm.ctpop.i32(i32 %1217)
  %1219 = trunc i32 %1218 to i8
  %1220 = and i8 %1219, 1
  %1221 = xor i8 %1220, 1
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1221, i8* %1222, align 1
  %1223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1223, align 1
  %1224 = icmp eq i32 %1212, 0
  %1225 = zext i1 %1224 to i8
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1225, i8* %1226, align 1
  %1227 = lshr i32 %1212, 31
  %1228 = trunc i32 %1227 to i8
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1228, i8* %1229, align 1
  %1230 = lshr i32 %1212, 31
  %1231 = xor i32 %1227, %1230
  %1232 = add i32 %1231, %1230
  %1233 = icmp eq i32 %1232, 2
  %1234 = zext i1 %1233 to i8
  %1235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1234, i8* %1235, align 1
  store %struct.Memory* %loadMem_43b39e, %struct.Memory** %MEMORY
  %loadMem_43b3a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1237 = getelementptr inbounds %struct.GPR, %struct.GPR* %1236, i32 0, i32 33
  %1238 = getelementptr inbounds %struct.Reg, %struct.Reg* %1237, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %1238 to i64*
  %1239 = load i64, i64* %PC.i934
  %1240 = add i64 %1239, 43
  %1241 = load i64, i64* %PC.i934
  %1242 = add i64 %1241, 6
  %1243 = load i64, i64* %PC.i934
  %1244 = add i64 %1243, 6
  store i64 %1244, i64* %PC.i934
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1246 = load i8, i8* %1245, align 1
  store i8 %1246, i8* %BRANCH_TAKEN, align 1
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1248 = icmp ne i8 %1246, 0
  %1249 = select i1 %1248, i64 %1240, i64 %1242
  store i64 %1249, i64* %1247, align 8
  store %struct.Memory* %loadMem_43b3a1, %struct.Memory** %MEMORY
  %loadBr_43b3a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b3a1 = icmp eq i8 %loadBr_43b3a1, 1
  br i1 %cmpBr_43b3a1, label %block_.L_43b3cc, label %block_43b3a7

block_43b3a7:                                     ; preds = %block_.L_43b382
  %loadMem_43b3a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1251 = getelementptr inbounds %struct.GPR, %struct.GPR* %1250, i32 0, i32 33
  %1252 = getelementptr inbounds %struct.Reg, %struct.Reg* %1251, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %1252 to i64*
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1254 = getelementptr inbounds %struct.GPR, %struct.GPR* %1253, i32 0, i32 1
  %1255 = getelementptr inbounds %struct.Reg, %struct.Reg* %1254, i32 0, i32 0
  %RAX.i932 = bitcast %union.anon* %1255 to i64*
  %1256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1257 = getelementptr inbounds %struct.GPR, %struct.GPR* %1256, i32 0, i32 15
  %1258 = getelementptr inbounds %struct.Reg, %struct.Reg* %1257, i32 0, i32 0
  %RBP.i933 = bitcast %union.anon* %1258 to i64*
  %1259 = load i64, i64* %RBP.i933
  %1260 = sub i64 %1259, 48
  %1261 = load i64, i64* %PC.i931
  %1262 = add i64 %1261, 4
  store i64 %1262, i64* %PC.i931
  %1263 = inttoptr i64 %1260 to i64*
  %1264 = load i64, i64* %1263
  store i64 %1264, i64* %RAX.i932, align 8
  store %struct.Memory* %loadMem_43b3a7, %struct.Memory** %MEMORY
  %loadMem_43b3ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1266 = getelementptr inbounds %struct.GPR, %struct.GPR* %1265, i32 0, i32 33
  %1267 = getelementptr inbounds %struct.Reg, %struct.Reg* %1266, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %1267 to i64*
  %1268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1269 = getelementptr inbounds %struct.GPR, %struct.GPR* %1268, i32 0, i32 5
  %1270 = getelementptr inbounds %struct.Reg, %struct.Reg* %1269, i32 0, i32 0
  %RCX.i929 = bitcast %union.anon* %1270 to i64*
  %1271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1272 = getelementptr inbounds %struct.GPR, %struct.GPR* %1271, i32 0, i32 15
  %1273 = getelementptr inbounds %struct.Reg, %struct.Reg* %1272, i32 0, i32 0
  %RBP.i930 = bitcast %union.anon* %1273 to i64*
  %1274 = load i64, i64* %RBP.i930
  %1275 = sub i64 %1274, 88
  %1276 = load i64, i64* %PC.i928
  %1277 = add i64 %1276, 4
  store i64 %1277, i64* %PC.i928
  %1278 = inttoptr i64 %1275 to i32*
  %1279 = load i32, i32* %1278
  %1280 = sext i32 %1279 to i64
  store i64 %1280, i64* %RCX.i929, align 8
  store %struct.Memory* %loadMem_43b3ab, %struct.Memory** %MEMORY
  %loadMem_43b3af = load %struct.Memory*, %struct.Memory** %MEMORY
  %1281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1282 = getelementptr inbounds %struct.GPR, %struct.GPR* %1281, i32 0, i32 33
  %1283 = getelementptr inbounds %struct.Reg, %struct.Reg* %1282, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %1283 to i64*
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1285 = getelementptr inbounds %struct.GPR, %struct.GPR* %1284, i32 0, i32 5
  %1286 = getelementptr inbounds %struct.Reg, %struct.Reg* %1285, i32 0, i32 0
  %RCX.i927 = bitcast %union.anon* %1286 to i64*
  %1287 = load i64, i64* %RCX.i927
  %1288 = load i64, i64* %PC.i926
  %1289 = add i64 %1288, 4
  store i64 %1289, i64* %PC.i926
  %1290 = sext i64 %1287 to i128
  %1291 = and i128 %1290, -18446744073709551616
  %1292 = zext i64 %1287 to i128
  %1293 = or i128 %1291, %1292
  %1294 = mul i128 36, %1293
  %1295 = trunc i128 %1294 to i64
  store i64 %1295, i64* %RCX.i927, align 8
  %1296 = sext i64 %1295 to i128
  %1297 = icmp ne i128 %1296, %1294
  %1298 = zext i1 %1297 to i8
  %1299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1298, i8* %1299, align 1
  %1300 = trunc i128 %1294 to i32
  %1301 = and i32 %1300, 255
  %1302 = call i32 @llvm.ctpop.i32(i32 %1301)
  %1303 = trunc i32 %1302 to i8
  %1304 = and i8 %1303, 1
  %1305 = xor i8 %1304, 1
  %1306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1305, i8* %1306, align 1
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1307, align 1
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1308, align 1
  %1309 = lshr i64 %1295, 63
  %1310 = trunc i64 %1309 to i8
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1310, i8* %1311, align 1
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1298, i8* %1312, align 1
  store %struct.Memory* %loadMem_43b3af, %struct.Memory** %MEMORY
  %loadMem_43b3b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1314 = getelementptr inbounds %struct.GPR, %struct.GPR* %1313, i32 0, i32 33
  %1315 = getelementptr inbounds %struct.Reg, %struct.Reg* %1314, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %1315 to i64*
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1317 = getelementptr inbounds %struct.GPR, %struct.GPR* %1316, i32 0, i32 1
  %1318 = getelementptr inbounds %struct.Reg, %struct.Reg* %1317, i32 0, i32 0
  %RAX.i924 = bitcast %union.anon* %1318 to i64*
  %1319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1320 = getelementptr inbounds %struct.GPR, %struct.GPR* %1319, i32 0, i32 5
  %1321 = getelementptr inbounds %struct.Reg, %struct.Reg* %1320, i32 0, i32 0
  %RCX.i925 = bitcast %union.anon* %1321 to i64*
  %1322 = load i64, i64* %RAX.i924
  %1323 = load i64, i64* %RCX.i925
  %1324 = load i64, i64* %PC.i923
  %1325 = add i64 %1324, 3
  store i64 %1325, i64* %PC.i923
  %1326 = add i64 %1323, %1322
  store i64 %1326, i64* %RAX.i924, align 8
  %1327 = icmp ult i64 %1326, %1322
  %1328 = icmp ult i64 %1326, %1323
  %1329 = or i1 %1327, %1328
  %1330 = zext i1 %1329 to i8
  %1331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1330, i8* %1331, align 1
  %1332 = trunc i64 %1326 to i32
  %1333 = and i32 %1332, 255
  %1334 = call i32 @llvm.ctpop.i32(i32 %1333)
  %1335 = trunc i32 %1334 to i8
  %1336 = and i8 %1335, 1
  %1337 = xor i8 %1336, 1
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1337, i8* %1338, align 1
  %1339 = xor i64 %1323, %1322
  %1340 = xor i64 %1339, %1326
  %1341 = lshr i64 %1340, 4
  %1342 = trunc i64 %1341 to i8
  %1343 = and i8 %1342, 1
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1343, i8* %1344, align 1
  %1345 = icmp eq i64 %1326, 0
  %1346 = zext i1 %1345 to i8
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1346, i8* %1347, align 1
  %1348 = lshr i64 %1326, 63
  %1349 = trunc i64 %1348 to i8
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1349, i8* %1350, align 1
  %1351 = lshr i64 %1322, 63
  %1352 = lshr i64 %1323, 63
  %1353 = xor i64 %1348, %1351
  %1354 = xor i64 %1348, %1352
  %1355 = add i64 %1353, %1354
  %1356 = icmp eq i64 %1355, 2
  %1357 = zext i1 %1356 to i8
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1357, i8* %1358, align 1
  store %struct.Memory* %loadMem_43b3b3, %struct.Memory** %MEMORY
  %loadMem_43b3b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1360 = getelementptr inbounds %struct.GPR, %struct.GPR* %1359, i32 0, i32 33
  %1361 = getelementptr inbounds %struct.Reg, %struct.Reg* %1360, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %1361 to i64*
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 1
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %RAX.i921 = bitcast %union.anon* %1364 to i64*
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1366 = getelementptr inbounds %struct.GPR, %struct.GPR* %1365, i32 0, i32 7
  %1367 = getelementptr inbounds %struct.Reg, %struct.Reg* %1366, i32 0, i32 0
  %RDX.i922 = bitcast %union.anon* %1367 to i64*
  %1368 = load i64, i64* %RAX.i921
  %1369 = add i64 %1368, 31
  %1370 = load i64, i64* %PC.i920
  %1371 = add i64 %1370, 4
  store i64 %1371, i64* %PC.i920
  %1372 = inttoptr i64 %1369 to i8*
  %1373 = load i8, i8* %1372
  %1374 = sext i8 %1373 to i64
  %1375 = and i64 %1374, 4294967295
  store i64 %1375, i64* %RDX.i922, align 8
  store %struct.Memory* %loadMem_43b3b6, %struct.Memory** %MEMORY
  %loadMem_43b3ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1377 = getelementptr inbounds %struct.GPR, %struct.GPR* %1376, i32 0, i32 33
  %1378 = getelementptr inbounds %struct.Reg, %struct.Reg* %1377, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %1378 to i64*
  %1379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1380 = getelementptr inbounds %struct.GPR, %struct.GPR* %1379, i32 0, i32 7
  %1381 = getelementptr inbounds %struct.Reg, %struct.Reg* %1380, i32 0, i32 0
  %EDX.i919 = bitcast %union.anon* %1381 to i32*
  %1382 = load i32, i32* %EDX.i919
  %1383 = zext i32 %1382 to i64
  %1384 = load i64, i64* %PC.i918
  %1385 = add i64 %1384, 3
  store i64 %1385, i64* %PC.i918
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1386, align 1
  %1387 = and i32 %1382, 255
  %1388 = call i32 @llvm.ctpop.i32(i32 %1387)
  %1389 = trunc i32 %1388 to i8
  %1390 = and i8 %1389, 1
  %1391 = xor i8 %1390, 1
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1391, i8* %1392, align 1
  %1393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1393, align 1
  %1394 = icmp eq i32 %1382, 0
  %1395 = zext i1 %1394 to i8
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1395, i8* %1396, align 1
  %1397 = lshr i32 %1382, 31
  %1398 = trunc i32 %1397 to i8
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1398, i8* %1399, align 1
  %1400 = lshr i32 %1382, 31
  %1401 = xor i32 %1397, %1400
  %1402 = add i32 %1401, %1400
  %1403 = icmp eq i32 %1402, 2
  %1404 = zext i1 %1403 to i8
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1404, i8* %1405, align 1
  store %struct.Memory* %loadMem_43b3ba, %struct.Memory** %MEMORY
  %loadMem_43b3bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1407 = getelementptr inbounds %struct.GPR, %struct.GPR* %1406, i32 0, i32 33
  %1408 = getelementptr inbounds %struct.Reg, %struct.Reg* %1407, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %1408 to i64*
  %1409 = load i64, i64* %PC.i917
  %1410 = add i64 %1409, 15
  %1411 = load i64, i64* %PC.i917
  %1412 = add i64 %1411, 6
  %1413 = load i64, i64* %PC.i917
  %1414 = add i64 %1413, 6
  store i64 %1414, i64* %PC.i917
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1416 = load i8, i8* %1415, align 1
  %1417 = icmp ne i8 %1416, 0
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1419 = load i8, i8* %1418, align 1
  %1420 = icmp ne i8 %1419, 0
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1422 = load i8, i8* %1421, align 1
  %1423 = icmp ne i8 %1422, 0
  %1424 = xor i1 %1420, %1423
  %1425 = or i1 %1417, %1424
  %1426 = zext i1 %1425 to i8
  store i8 %1426, i8* %BRANCH_TAKEN, align 1
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1428 = select i1 %1425, i64 %1410, i64 %1412
  store i64 %1428, i64* %1427, align 8
  store %struct.Memory* %loadMem_43b3bd, %struct.Memory** %MEMORY
  %loadBr_43b3bd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b3bd = icmp eq i8 %loadBr_43b3bd, 1
  br i1 %cmpBr_43b3bd, label %block_.L_43b3cc, label %block_43b3c3

block_43b3c3:                                     ; preds = %block_43b3a7
  %loadMem_43b3c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1430 = getelementptr inbounds %struct.GPR, %struct.GPR* %1429, i32 0, i32 33
  %1431 = getelementptr inbounds %struct.Reg, %struct.Reg* %1430, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %1431 to i64*
  %1432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1433 = getelementptr inbounds %struct.GPR, %struct.GPR* %1432, i32 0, i32 1
  %1434 = getelementptr inbounds %struct.Reg, %struct.Reg* %1433, i32 0, i32 0
  %RAX.i915 = bitcast %union.anon* %1434 to i64*
  %1435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1436 = getelementptr inbounds %struct.GPR, %struct.GPR* %1435, i32 0, i32 15
  %1437 = getelementptr inbounds %struct.Reg, %struct.Reg* %1436, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %1437 to i64*
  %1438 = load i64, i64* %RBP.i916
  %1439 = sub i64 %1438, 76
  %1440 = load i64, i64* %PC.i914
  %1441 = add i64 %1440, 3
  store i64 %1441, i64* %PC.i914
  %1442 = inttoptr i64 %1439 to i32*
  %1443 = load i32, i32* %1442
  %1444 = zext i32 %1443 to i64
  store i64 %1444, i64* %RAX.i915, align 8
  store %struct.Memory* %loadMem_43b3c3, %struct.Memory** %MEMORY
  %loadMem_43b3c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1446 = getelementptr inbounds %struct.GPR, %struct.GPR* %1445, i32 0, i32 33
  %1447 = getelementptr inbounds %struct.Reg, %struct.Reg* %1446, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %1447 to i64*
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1449 = getelementptr inbounds %struct.GPR, %struct.GPR* %1448, i32 0, i32 1
  %1450 = getelementptr inbounds %struct.Reg, %struct.Reg* %1449, i32 0, i32 0
  %RAX.i913 = bitcast %union.anon* %1450 to i64*
  %1451 = load i64, i64* %RAX.i913
  %1452 = load i64, i64* %PC.i912
  %1453 = add i64 %1452, 3
  store i64 %1453, i64* %PC.i912
  %1454 = trunc i64 %1451 to i32
  %1455 = add i32 1, %1454
  %1456 = zext i32 %1455 to i64
  store i64 %1456, i64* %RAX.i913, align 8
  %1457 = icmp ult i32 %1455, %1454
  %1458 = icmp ult i32 %1455, 1
  %1459 = or i1 %1457, %1458
  %1460 = zext i1 %1459 to i8
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1460, i8* %1461, align 1
  %1462 = and i32 %1455, 255
  %1463 = call i32 @llvm.ctpop.i32(i32 %1462)
  %1464 = trunc i32 %1463 to i8
  %1465 = and i8 %1464, 1
  %1466 = xor i8 %1465, 1
  %1467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1466, i8* %1467, align 1
  %1468 = xor i64 1, %1451
  %1469 = trunc i64 %1468 to i32
  %1470 = xor i32 %1469, %1455
  %1471 = lshr i32 %1470, 4
  %1472 = trunc i32 %1471 to i8
  %1473 = and i8 %1472, 1
  %1474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1473, i8* %1474, align 1
  %1475 = icmp eq i32 %1455, 0
  %1476 = zext i1 %1475 to i8
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1476, i8* %1477, align 1
  %1478 = lshr i32 %1455, 31
  %1479 = trunc i32 %1478 to i8
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1479, i8* %1480, align 1
  %1481 = lshr i32 %1454, 31
  %1482 = xor i32 %1478, %1481
  %1483 = add i32 %1482, %1478
  %1484 = icmp eq i32 %1483, 2
  %1485 = zext i1 %1484 to i8
  %1486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1485, i8* %1486, align 1
  store %struct.Memory* %loadMem_43b3c6, %struct.Memory** %MEMORY
  %loadMem_43b3c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1488 = getelementptr inbounds %struct.GPR, %struct.GPR* %1487, i32 0, i32 33
  %1489 = getelementptr inbounds %struct.Reg, %struct.Reg* %1488, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %1489 to i64*
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1491 = getelementptr inbounds %struct.GPR, %struct.GPR* %1490, i32 0, i32 1
  %1492 = getelementptr inbounds %struct.Reg, %struct.Reg* %1491, i32 0, i32 0
  %EAX.i910 = bitcast %union.anon* %1492 to i32*
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1494 = getelementptr inbounds %struct.GPR, %struct.GPR* %1493, i32 0, i32 15
  %1495 = getelementptr inbounds %struct.Reg, %struct.Reg* %1494, i32 0, i32 0
  %RBP.i911 = bitcast %union.anon* %1495 to i64*
  %1496 = load i64, i64* %RBP.i911
  %1497 = sub i64 %1496, 76
  %1498 = load i32, i32* %EAX.i910
  %1499 = zext i32 %1498 to i64
  %1500 = load i64, i64* %PC.i909
  %1501 = add i64 %1500, 3
  store i64 %1501, i64* %PC.i909
  %1502 = inttoptr i64 %1497 to i32*
  store i32 %1498, i32* %1502
  store %struct.Memory* %loadMem_43b3c9, %struct.Memory** %MEMORY
  br label %block_.L_43b3cc

block_.L_43b3cc:                                  ; preds = %block_43b3c3, %block_43b3a7, %block_.L_43b382
  %loadMem_43b3cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1504 = getelementptr inbounds %struct.GPR, %struct.GPR* %1503, i32 0, i32 33
  %1505 = getelementptr inbounds %struct.Reg, %struct.Reg* %1504, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %1505 to i64*
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1507 = getelementptr inbounds %struct.GPR, %struct.GPR* %1506, i32 0, i32 11
  %1508 = getelementptr inbounds %struct.Reg, %struct.Reg* %1507, i32 0, i32 0
  %RDI.i907 = bitcast %union.anon* %1508 to i64*
  %1509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1510 = getelementptr inbounds %struct.GPR, %struct.GPR* %1509, i32 0, i32 15
  %1511 = getelementptr inbounds %struct.Reg, %struct.Reg* %1510, i32 0, i32 0
  %RBP.i908 = bitcast %union.anon* %1511 to i64*
  %1512 = load i64, i64* %RBP.i908
  %1513 = sub i64 %1512, 56
  %1514 = load i64, i64* %PC.i906
  %1515 = add i64 %1514, 4
  store i64 %1515, i64* %PC.i906
  %1516 = inttoptr i64 %1513 to i64*
  %1517 = load i64, i64* %1516
  store i64 %1517, i64* %RDI.i907, align 8
  store %struct.Memory* %loadMem_43b3cc, %struct.Memory** %MEMORY
  %loadMem_43b3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1519 = getelementptr inbounds %struct.GPR, %struct.GPR* %1518, i32 0, i32 33
  %1520 = getelementptr inbounds %struct.Reg, %struct.Reg* %1519, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %1520 to i64*
  %1521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1522 = getelementptr inbounds %struct.GPR, %struct.GPR* %1521, i32 0, i32 9
  %1523 = getelementptr inbounds %struct.Reg, %struct.Reg* %1522, i32 0, i32 0
  %RSI.i904 = bitcast %union.anon* %1523 to i64*
  %1524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1525 = getelementptr inbounds %struct.GPR, %struct.GPR* %1524, i32 0, i32 15
  %1526 = getelementptr inbounds %struct.Reg, %struct.Reg* %1525, i32 0, i32 0
  %RBP.i905 = bitcast %union.anon* %1526 to i64*
  %1527 = load i64, i64* %RBP.i905
  %1528 = sub i64 %1527, 88
  %1529 = load i64, i64* %PC.i903
  %1530 = add i64 %1529, 3
  store i64 %1530, i64* %PC.i903
  %1531 = inttoptr i64 %1528 to i32*
  %1532 = load i32, i32* %1531
  %1533 = zext i32 %1532 to i64
  store i64 %1533, i64* %RSI.i904, align 8
  store %struct.Memory* %loadMem_43b3d0, %struct.Memory** %MEMORY
  %loadMem1_43b3d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1535 = getelementptr inbounds %struct.GPR, %struct.GPR* %1534, i32 0, i32 33
  %1536 = getelementptr inbounds %struct.Reg, %struct.Reg* %1535, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %1536 to i64*
  %1537 = load i64, i64* %PC.i902
  %1538 = add i64 %1537, -931
  %1539 = load i64, i64* %PC.i902
  %1540 = add i64 %1539, 5
  %1541 = load i64, i64* %PC.i902
  %1542 = add i64 %1541, 5
  store i64 %1542, i64* %PC.i902
  %1543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1544 = load i64, i64* %1543, align 8
  %1545 = add i64 %1544, -8
  %1546 = inttoptr i64 %1545 to i64*
  store i64 %1540, i64* %1546
  store i64 %1545, i64* %1543, align 8
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1538, i64* %1547, align 8
  store %struct.Memory* %loadMem1_43b3d3, %struct.Memory** %MEMORY
  %loadMem2_43b3d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b3d3 = load i64, i64* %3
  %call2_43b3d3 = call %struct.Memory* @sub_43b030.is_halfeye(%struct.State* %0, i64 %loadPC_43b3d3, %struct.Memory* %loadMem2_43b3d3)
  store %struct.Memory* %call2_43b3d3, %struct.Memory** %MEMORY
  %loadMem_43b3d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1549 = getelementptr inbounds %struct.GPR, %struct.GPR* %1548, i32 0, i32 33
  %1550 = getelementptr inbounds %struct.Reg, %struct.Reg* %1549, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %1550 to i64*
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1552 = getelementptr inbounds %struct.GPR, %struct.GPR* %1551, i32 0, i32 1
  %1553 = getelementptr inbounds %struct.Reg, %struct.Reg* %1552, i32 0, i32 0
  %EAX.i901 = bitcast %union.anon* %1553 to i32*
  %1554 = load i32, i32* %EAX.i901
  %1555 = zext i32 %1554 to i64
  %1556 = load i64, i64* %PC.i900
  %1557 = add i64 %1556, 3
  store i64 %1557, i64* %PC.i900
  %1558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1558, align 1
  %1559 = and i32 %1554, 255
  %1560 = call i32 @llvm.ctpop.i32(i32 %1559)
  %1561 = trunc i32 %1560 to i8
  %1562 = and i8 %1561, 1
  %1563 = xor i8 %1562, 1
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1563, i8* %1564, align 1
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1565, align 1
  %1566 = icmp eq i32 %1554, 0
  %1567 = zext i1 %1566 to i8
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1567, i8* %1568, align 1
  %1569 = lshr i32 %1554, 31
  %1570 = trunc i32 %1569 to i8
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1570, i8* %1571, align 1
  %1572 = lshr i32 %1554, 31
  %1573 = xor i32 %1569, %1572
  %1574 = add i32 %1573, %1572
  %1575 = icmp eq i32 %1574, 2
  %1576 = zext i1 %1575 to i8
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1576, i8* %1577, align 1
  store %struct.Memory* %loadMem_43b3d8, %struct.Memory** %MEMORY
  %loadMem_43b3db = load %struct.Memory*, %struct.Memory** %MEMORY
  %1578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1579 = getelementptr inbounds %struct.GPR, %struct.GPR* %1578, i32 0, i32 33
  %1580 = getelementptr inbounds %struct.Reg, %struct.Reg* %1579, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %1580 to i64*
  %1581 = load i64, i64* %PC.i899
  %1582 = add i64 %1581, 15
  %1583 = load i64, i64* %PC.i899
  %1584 = add i64 %1583, 6
  %1585 = load i64, i64* %PC.i899
  %1586 = add i64 %1585, 6
  store i64 %1586, i64* %PC.i899
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1588 = load i8, i8* %1587, align 1
  store i8 %1588, i8* %BRANCH_TAKEN, align 1
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1590 = icmp ne i8 %1588, 0
  %1591 = select i1 %1590, i64 %1582, i64 %1584
  store i64 %1591, i64* %1589, align 8
  store %struct.Memory* %loadMem_43b3db, %struct.Memory** %MEMORY
  %loadBr_43b3db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b3db = icmp eq i8 %loadBr_43b3db, 1
  br i1 %cmpBr_43b3db, label %block_.L_43b3ea, label %block_43b3e1

block_43b3e1:                                     ; preds = %block_.L_43b3cc
  %loadMem_43b3e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1593 = getelementptr inbounds %struct.GPR, %struct.GPR* %1592, i32 0, i32 33
  %1594 = getelementptr inbounds %struct.Reg, %struct.Reg* %1593, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %1594 to i64*
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1596 = getelementptr inbounds %struct.GPR, %struct.GPR* %1595, i32 0, i32 1
  %1597 = getelementptr inbounds %struct.Reg, %struct.Reg* %1596, i32 0, i32 0
  %RAX.i897 = bitcast %union.anon* %1597 to i64*
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1599 = getelementptr inbounds %struct.GPR, %struct.GPR* %1598, i32 0, i32 15
  %1600 = getelementptr inbounds %struct.Reg, %struct.Reg* %1599, i32 0, i32 0
  %RBP.i898 = bitcast %union.anon* %1600 to i64*
  %1601 = load i64, i64* %RBP.i898
  %1602 = sub i64 %1601, 72
  %1603 = load i64, i64* %PC.i896
  %1604 = add i64 %1603, 3
  store i64 %1604, i64* %PC.i896
  %1605 = inttoptr i64 %1602 to i32*
  %1606 = load i32, i32* %1605
  %1607 = zext i32 %1606 to i64
  store i64 %1607, i64* %RAX.i897, align 8
  store %struct.Memory* %loadMem_43b3e1, %struct.Memory** %MEMORY
  %loadMem_43b3e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1609 = getelementptr inbounds %struct.GPR, %struct.GPR* %1608, i32 0, i32 33
  %1610 = getelementptr inbounds %struct.Reg, %struct.Reg* %1609, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %1610 to i64*
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1612 = getelementptr inbounds %struct.GPR, %struct.GPR* %1611, i32 0, i32 1
  %1613 = getelementptr inbounds %struct.Reg, %struct.Reg* %1612, i32 0, i32 0
  %RAX.i895 = bitcast %union.anon* %1613 to i64*
  %1614 = load i64, i64* %RAX.i895
  %1615 = load i64, i64* %PC.i894
  %1616 = add i64 %1615, 3
  store i64 %1616, i64* %PC.i894
  %1617 = trunc i64 %1614 to i32
  %1618 = add i32 1, %1617
  %1619 = zext i32 %1618 to i64
  store i64 %1619, i64* %RAX.i895, align 8
  %1620 = icmp ult i32 %1618, %1617
  %1621 = icmp ult i32 %1618, 1
  %1622 = or i1 %1620, %1621
  %1623 = zext i1 %1622 to i8
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1623, i8* %1624, align 1
  %1625 = and i32 %1618, 255
  %1626 = call i32 @llvm.ctpop.i32(i32 %1625)
  %1627 = trunc i32 %1626 to i8
  %1628 = and i8 %1627, 1
  %1629 = xor i8 %1628, 1
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1629, i8* %1630, align 1
  %1631 = xor i64 1, %1614
  %1632 = trunc i64 %1631 to i32
  %1633 = xor i32 %1632, %1618
  %1634 = lshr i32 %1633, 4
  %1635 = trunc i32 %1634 to i8
  %1636 = and i8 %1635, 1
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1636, i8* %1637, align 1
  %1638 = icmp eq i32 %1618, 0
  %1639 = zext i1 %1638 to i8
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1639, i8* %1640, align 1
  %1641 = lshr i32 %1618, 31
  %1642 = trunc i32 %1641 to i8
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1642, i8* %1643, align 1
  %1644 = lshr i32 %1617, 31
  %1645 = xor i32 %1641, %1644
  %1646 = add i32 %1645, %1641
  %1647 = icmp eq i32 %1646, 2
  %1648 = zext i1 %1647 to i8
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1648, i8* %1649, align 1
  store %struct.Memory* %loadMem_43b3e4, %struct.Memory** %MEMORY
  %loadMem_43b3e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1651 = getelementptr inbounds %struct.GPR, %struct.GPR* %1650, i32 0, i32 33
  %1652 = getelementptr inbounds %struct.Reg, %struct.Reg* %1651, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %1652 to i64*
  %1653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1654 = getelementptr inbounds %struct.GPR, %struct.GPR* %1653, i32 0, i32 1
  %1655 = getelementptr inbounds %struct.Reg, %struct.Reg* %1654, i32 0, i32 0
  %EAX.i892 = bitcast %union.anon* %1655 to i32*
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1657 = getelementptr inbounds %struct.GPR, %struct.GPR* %1656, i32 0, i32 15
  %1658 = getelementptr inbounds %struct.Reg, %struct.Reg* %1657, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %1658 to i64*
  %1659 = load i64, i64* %RBP.i893
  %1660 = sub i64 %1659, 72
  %1661 = load i32, i32* %EAX.i892
  %1662 = zext i32 %1661 to i64
  %1663 = load i64, i64* %PC.i891
  %1664 = add i64 %1663, 3
  store i64 %1664, i64* %PC.i891
  %1665 = inttoptr i64 %1660 to i32*
  store i32 %1661, i32* %1665
  store %struct.Memory* %loadMem_43b3e7, %struct.Memory** %MEMORY
  br label %block_.L_43b3ea

block_.L_43b3ea:                                  ; preds = %block_43b3e1, %block_.L_43b3cc
  %loadMem_43b3ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %1666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1667 = getelementptr inbounds %struct.GPR, %struct.GPR* %1666, i32 0, i32 33
  %1668 = getelementptr inbounds %struct.Reg, %struct.Reg* %1667, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %1668 to i64*
  %1669 = load i64, i64* %PC.i890
  %1670 = add i64 %1669, 61
  %1671 = load i64, i64* %PC.i890
  %1672 = add i64 %1671, 5
  store i64 %1672, i64* %PC.i890
  %1673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1670, i64* %1673, align 8
  store %struct.Memory* %loadMem_43b3ea, %struct.Memory** %MEMORY
  br label %block_.L_43b427

block_.L_43b3ef:                                  ; preds = %block_43b36d
  %loadMem_43b3ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1675 = getelementptr inbounds %struct.GPR, %struct.GPR* %1674, i32 0, i32 33
  %1676 = getelementptr inbounds %struct.Reg, %struct.Reg* %1675, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %1676 to i64*
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1678 = getelementptr inbounds %struct.GPR, %struct.GPR* %1677, i32 0, i32 1
  %1679 = getelementptr inbounds %struct.Reg, %struct.Reg* %1678, i32 0, i32 0
  %RAX.i888 = bitcast %union.anon* %1679 to i64*
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1681 = getelementptr inbounds %struct.GPR, %struct.GPR* %1680, i32 0, i32 15
  %1682 = getelementptr inbounds %struct.Reg, %struct.Reg* %1681, i32 0, i32 0
  %RBP.i889 = bitcast %union.anon* %1682 to i64*
  %1683 = load i64, i64* %RBP.i889
  %1684 = sub i64 %1683, 88
  %1685 = load i64, i64* %PC.i887
  %1686 = add i64 %1685, 4
  store i64 %1686, i64* %PC.i887
  %1687 = inttoptr i64 %1684 to i32*
  %1688 = load i32, i32* %1687
  %1689 = sext i32 %1688 to i64
  store i64 %1689, i64* %RAX.i888, align 8
  store %struct.Memory* %loadMem_43b3ef, %struct.Memory** %MEMORY
  %loadMem_43b3f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1691 = getelementptr inbounds %struct.GPR, %struct.GPR* %1690, i32 0, i32 33
  %1692 = getelementptr inbounds %struct.Reg, %struct.Reg* %1691, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %1692 to i64*
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1694 = getelementptr inbounds %struct.GPR, %struct.GPR* %1693, i32 0, i32 1
  %1695 = getelementptr inbounds %struct.Reg, %struct.Reg* %1694, i32 0, i32 0
  %RAX.i885 = bitcast %union.anon* %1695 to i64*
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1697 = getelementptr inbounds %struct.GPR, %struct.GPR* %1696, i32 0, i32 5
  %1698 = getelementptr inbounds %struct.Reg, %struct.Reg* %1697, i32 0, i32 0
  %RCX.i886 = bitcast %union.anon* %1698 to i64*
  %1699 = load i64, i64* %RAX.i885
  %1700 = add i64 %1699, 12099168
  %1701 = load i64, i64* %PC.i884
  %1702 = add i64 %1701, 8
  store i64 %1702, i64* %PC.i884
  %1703 = inttoptr i64 %1700 to i8*
  %1704 = load i8, i8* %1703
  %1705 = zext i8 %1704 to i64
  store i64 %1705, i64* %RCX.i886, align 8
  store %struct.Memory* %loadMem_43b3f3, %struct.Memory** %MEMORY
  %loadMem_43b3fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1707 = getelementptr inbounds %struct.GPR, %struct.GPR* %1706, i32 0, i32 33
  %1708 = getelementptr inbounds %struct.Reg, %struct.Reg* %1707, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %1708 to i64*
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1710 = getelementptr inbounds %struct.GPR, %struct.GPR* %1709, i32 0, i32 5
  %1711 = getelementptr inbounds %struct.Reg, %struct.Reg* %1710, i32 0, i32 0
  %ECX.i883 = bitcast %union.anon* %1711 to i32*
  %1712 = load i32, i32* %ECX.i883
  %1713 = zext i32 %1712 to i64
  %1714 = load i64, i64* %PC.i882
  %1715 = add i64 %1714, 3
  store i64 %1715, i64* %PC.i882
  %1716 = sub i32 %1712, 1
  %1717 = icmp ult i32 %1712, 1
  %1718 = zext i1 %1717 to i8
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1718, i8* %1719, align 1
  %1720 = and i32 %1716, 255
  %1721 = call i32 @llvm.ctpop.i32(i32 %1720)
  %1722 = trunc i32 %1721 to i8
  %1723 = and i8 %1722, 1
  %1724 = xor i8 %1723, 1
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1724, i8* %1725, align 1
  %1726 = xor i64 1, %1713
  %1727 = trunc i64 %1726 to i32
  %1728 = xor i32 %1727, %1716
  %1729 = lshr i32 %1728, 4
  %1730 = trunc i32 %1729 to i8
  %1731 = and i8 %1730, 1
  %1732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1731, i8* %1732, align 1
  %1733 = icmp eq i32 %1716, 0
  %1734 = zext i1 %1733 to i8
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1734, i8* %1735, align 1
  %1736 = lshr i32 %1716, 31
  %1737 = trunc i32 %1736 to i8
  %1738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1737, i8* %1738, align 1
  %1739 = lshr i32 %1712, 31
  %1740 = xor i32 %1736, %1739
  %1741 = add i32 %1740, %1739
  %1742 = icmp eq i32 %1741, 2
  %1743 = zext i1 %1742 to i8
  %1744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1743, i8* %1744, align 1
  store %struct.Memory* %loadMem_43b3fb, %struct.Memory** %MEMORY
  %loadMem_43b3fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %1745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1746 = getelementptr inbounds %struct.GPR, %struct.GPR* %1745, i32 0, i32 33
  %1747 = getelementptr inbounds %struct.Reg, %struct.Reg* %1746, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %1747 to i64*
  %1748 = load i64, i64* %PC.i881
  %1749 = add i64 %1748, 27
  %1750 = load i64, i64* %PC.i881
  %1751 = add i64 %1750, 6
  %1752 = load i64, i64* %PC.i881
  %1753 = add i64 %1752, 6
  store i64 %1753, i64* %PC.i881
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1755 = load i8, i8* %1754, align 1
  store i8 %1755, i8* %BRANCH_TAKEN, align 1
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1757 = icmp ne i8 %1755, 0
  %1758 = select i1 %1757, i64 %1749, i64 %1751
  store i64 %1758, i64* %1756, align 8
  store %struct.Memory* %loadMem_43b3fe, %struct.Memory** %MEMORY
  %loadBr_43b3fe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b3fe = icmp eq i8 %loadBr_43b3fe, 1
  br i1 %cmpBr_43b3fe, label %block_.L_43b419, label %block_43b404

block_43b404:                                     ; preds = %block_.L_43b3ef
  %loadMem_43b404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 33
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %1761 to i64*
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1763 = getelementptr inbounds %struct.GPR, %struct.GPR* %1762, i32 0, i32 1
  %1764 = getelementptr inbounds %struct.Reg, %struct.Reg* %1763, i32 0, i32 0
  %RAX.i879 = bitcast %union.anon* %1764 to i64*
  %1765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1766 = getelementptr inbounds %struct.GPR, %struct.GPR* %1765, i32 0, i32 15
  %1767 = getelementptr inbounds %struct.Reg, %struct.Reg* %1766, i32 0, i32 0
  %RBP.i880 = bitcast %union.anon* %1767 to i64*
  %1768 = load i64, i64* %RBP.i880
  %1769 = sub i64 %1768, 88
  %1770 = load i64, i64* %PC.i878
  %1771 = add i64 %1770, 4
  store i64 %1771, i64* %PC.i878
  %1772 = inttoptr i64 %1769 to i32*
  %1773 = load i32, i32* %1772
  %1774 = sext i32 %1773 to i64
  store i64 %1774, i64* %RAX.i879, align 8
  store %struct.Memory* %loadMem_43b404, %struct.Memory** %MEMORY
  %loadMem_43b408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1776 = getelementptr inbounds %struct.GPR, %struct.GPR* %1775, i32 0, i32 33
  %1777 = getelementptr inbounds %struct.Reg, %struct.Reg* %1776, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %1777 to i64*
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1779 = getelementptr inbounds %struct.GPR, %struct.GPR* %1778, i32 0, i32 1
  %1780 = getelementptr inbounds %struct.Reg, %struct.Reg* %1779, i32 0, i32 0
  %RAX.i876 = bitcast %union.anon* %1780 to i64*
  %1781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1782 = getelementptr inbounds %struct.GPR, %struct.GPR* %1781, i32 0, i32 5
  %1783 = getelementptr inbounds %struct.Reg, %struct.Reg* %1782, i32 0, i32 0
  %RCX.i877 = bitcast %union.anon* %1783 to i64*
  %1784 = load i64, i64* %RAX.i876
  %1785 = add i64 %1784, 12099168
  %1786 = load i64, i64* %PC.i875
  %1787 = add i64 %1786, 8
  store i64 %1787, i64* %PC.i875
  %1788 = inttoptr i64 %1785 to i8*
  %1789 = load i8, i8* %1788
  %1790 = zext i8 %1789 to i64
  store i64 %1790, i64* %RCX.i877, align 8
  store %struct.Memory* %loadMem_43b408, %struct.Memory** %MEMORY
  %loadMem_43b410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1792 = getelementptr inbounds %struct.GPR, %struct.GPR* %1791, i32 0, i32 33
  %1793 = getelementptr inbounds %struct.Reg, %struct.Reg* %1792, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %1793 to i64*
  %1794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1795 = getelementptr inbounds %struct.GPR, %struct.GPR* %1794, i32 0, i32 5
  %1796 = getelementptr inbounds %struct.Reg, %struct.Reg* %1795, i32 0, i32 0
  %ECX.i874 = bitcast %union.anon* %1796 to i32*
  %1797 = load i32, i32* %ECX.i874
  %1798 = zext i32 %1797 to i64
  %1799 = load i64, i64* %PC.i873
  %1800 = add i64 %1799, 3
  store i64 %1800, i64* %PC.i873
  %1801 = sub i32 %1797, 2
  %1802 = icmp ult i32 %1797, 2
  %1803 = zext i1 %1802 to i8
  %1804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1803, i8* %1804, align 1
  %1805 = and i32 %1801, 255
  %1806 = call i32 @llvm.ctpop.i32(i32 %1805)
  %1807 = trunc i32 %1806 to i8
  %1808 = and i8 %1807, 1
  %1809 = xor i8 %1808, 1
  %1810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1809, i8* %1810, align 1
  %1811 = xor i64 2, %1798
  %1812 = trunc i64 %1811 to i32
  %1813 = xor i32 %1812, %1801
  %1814 = lshr i32 %1813, 4
  %1815 = trunc i32 %1814 to i8
  %1816 = and i8 %1815, 1
  %1817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1816, i8* %1817, align 1
  %1818 = icmp eq i32 %1801, 0
  %1819 = zext i1 %1818 to i8
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1819, i8* %1820, align 1
  %1821 = lshr i32 %1801, 31
  %1822 = trunc i32 %1821 to i8
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1822, i8* %1823, align 1
  %1824 = lshr i32 %1797, 31
  %1825 = xor i32 %1821, %1824
  %1826 = add i32 %1825, %1824
  %1827 = icmp eq i32 %1826, 2
  %1828 = zext i1 %1827 to i8
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1828, i8* %1829, align 1
  store %struct.Memory* %loadMem_43b410, %struct.Memory** %MEMORY
  %loadMem_43b413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1831 = getelementptr inbounds %struct.GPR, %struct.GPR* %1830, i32 0, i32 33
  %1832 = getelementptr inbounds %struct.Reg, %struct.Reg* %1831, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %1832 to i64*
  %1833 = load i64, i64* %PC.i872
  %1834 = add i64 %1833, 15
  %1835 = load i64, i64* %PC.i872
  %1836 = add i64 %1835, 6
  %1837 = load i64, i64* %PC.i872
  %1838 = add i64 %1837, 6
  store i64 %1838, i64* %PC.i872
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1840 = load i8, i8* %1839, align 1
  %1841 = icmp eq i8 %1840, 0
  %1842 = zext i1 %1841 to i8
  store i8 %1842, i8* %BRANCH_TAKEN, align 1
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1844 = select i1 %1841, i64 %1834, i64 %1836
  store i64 %1844, i64* %1843, align 8
  store %struct.Memory* %loadMem_43b413, %struct.Memory** %MEMORY
  %loadBr_43b413 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b413 = icmp eq i8 %loadBr_43b413, 1
  br i1 %cmpBr_43b413, label %block_.L_43b422, label %block_.L_43b419

block_.L_43b419:                                  ; preds = %block_43b404, %block_.L_43b3ef
  %loadMem_43b419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1846 = getelementptr inbounds %struct.GPR, %struct.GPR* %1845, i32 0, i32 33
  %1847 = getelementptr inbounds %struct.Reg, %struct.Reg* %1846, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %1847 to i64*
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1849 = getelementptr inbounds %struct.GPR, %struct.GPR* %1848, i32 0, i32 1
  %1850 = getelementptr inbounds %struct.Reg, %struct.Reg* %1849, i32 0, i32 0
  %RAX.i870 = bitcast %union.anon* %1850 to i64*
  %1851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1852 = getelementptr inbounds %struct.GPR, %struct.GPR* %1851, i32 0, i32 15
  %1853 = getelementptr inbounds %struct.Reg, %struct.Reg* %1852, i32 0, i32 0
  %RBP.i871 = bitcast %union.anon* %1853 to i64*
  %1854 = load i64, i64* %RBP.i871
  %1855 = sub i64 %1854, 84
  %1856 = load i64, i64* %PC.i869
  %1857 = add i64 %1856, 3
  store i64 %1857, i64* %PC.i869
  %1858 = inttoptr i64 %1855 to i32*
  %1859 = load i32, i32* %1858
  %1860 = zext i32 %1859 to i64
  store i64 %1860, i64* %RAX.i870, align 8
  store %struct.Memory* %loadMem_43b419, %struct.Memory** %MEMORY
  %loadMem_43b41c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1862 = getelementptr inbounds %struct.GPR, %struct.GPR* %1861, i32 0, i32 33
  %1863 = getelementptr inbounds %struct.Reg, %struct.Reg* %1862, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %1863 to i64*
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1865 = getelementptr inbounds %struct.GPR, %struct.GPR* %1864, i32 0, i32 1
  %1866 = getelementptr inbounds %struct.Reg, %struct.Reg* %1865, i32 0, i32 0
  %RAX.i868 = bitcast %union.anon* %1866 to i64*
  %1867 = load i64, i64* %RAX.i868
  %1868 = load i64, i64* %PC.i867
  %1869 = add i64 %1868, 3
  store i64 %1869, i64* %PC.i867
  %1870 = trunc i64 %1867 to i32
  %1871 = add i32 1, %1870
  %1872 = zext i32 %1871 to i64
  store i64 %1872, i64* %RAX.i868, align 8
  %1873 = icmp ult i32 %1871, %1870
  %1874 = icmp ult i32 %1871, 1
  %1875 = or i1 %1873, %1874
  %1876 = zext i1 %1875 to i8
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1876, i8* %1877, align 1
  %1878 = and i32 %1871, 255
  %1879 = call i32 @llvm.ctpop.i32(i32 %1878)
  %1880 = trunc i32 %1879 to i8
  %1881 = and i8 %1880, 1
  %1882 = xor i8 %1881, 1
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1882, i8* %1883, align 1
  %1884 = xor i64 1, %1867
  %1885 = trunc i64 %1884 to i32
  %1886 = xor i32 %1885, %1871
  %1887 = lshr i32 %1886, 4
  %1888 = trunc i32 %1887 to i8
  %1889 = and i8 %1888, 1
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1889, i8* %1890, align 1
  %1891 = icmp eq i32 %1871, 0
  %1892 = zext i1 %1891 to i8
  %1893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1892, i8* %1893, align 1
  %1894 = lshr i32 %1871, 31
  %1895 = trunc i32 %1894 to i8
  %1896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1895, i8* %1896, align 1
  %1897 = lshr i32 %1870, 31
  %1898 = xor i32 %1894, %1897
  %1899 = add i32 %1898, %1894
  %1900 = icmp eq i32 %1899, 2
  %1901 = zext i1 %1900 to i8
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1901, i8* %1902, align 1
  store %struct.Memory* %loadMem_43b41c, %struct.Memory** %MEMORY
  %loadMem_43b41f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1904 = getelementptr inbounds %struct.GPR, %struct.GPR* %1903, i32 0, i32 33
  %1905 = getelementptr inbounds %struct.Reg, %struct.Reg* %1904, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %1905 to i64*
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1907 = getelementptr inbounds %struct.GPR, %struct.GPR* %1906, i32 0, i32 1
  %1908 = getelementptr inbounds %struct.Reg, %struct.Reg* %1907, i32 0, i32 0
  %EAX.i865 = bitcast %union.anon* %1908 to i32*
  %1909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1910 = getelementptr inbounds %struct.GPR, %struct.GPR* %1909, i32 0, i32 15
  %1911 = getelementptr inbounds %struct.Reg, %struct.Reg* %1910, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %1911 to i64*
  %1912 = load i64, i64* %RBP.i866
  %1913 = sub i64 %1912, 84
  %1914 = load i32, i32* %EAX.i865
  %1915 = zext i32 %1914 to i64
  %1916 = load i64, i64* %PC.i864
  %1917 = add i64 %1916, 3
  store i64 %1917, i64* %PC.i864
  %1918 = inttoptr i64 %1913 to i32*
  store i32 %1914, i32* %1918
  store %struct.Memory* %loadMem_43b41f, %struct.Memory** %MEMORY
  br label %block_.L_43b422

block_.L_43b422:                                  ; preds = %block_.L_43b419, %block_43b404
  %loadMem_43b422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1920 = getelementptr inbounds %struct.GPR, %struct.GPR* %1919, i32 0, i32 33
  %1921 = getelementptr inbounds %struct.Reg, %struct.Reg* %1920, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %1921 to i64*
  %1922 = load i64, i64* %PC.i863
  %1923 = add i64 %1922, 5
  %1924 = load i64, i64* %PC.i863
  %1925 = add i64 %1924, 5
  store i64 %1925, i64* %PC.i863
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1923, i64* %1926, align 8
  store %struct.Memory* %loadMem_43b422, %struct.Memory** %MEMORY
  br label %block_.L_43b427

block_.L_43b427:                                  ; preds = %block_.L_43b422, %block_.L_43b3ea
  %loadMem_43b427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1928 = getelementptr inbounds %struct.GPR, %struct.GPR* %1927, i32 0, i32 33
  %1929 = getelementptr inbounds %struct.Reg, %struct.Reg* %1928, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %1929 to i64*
  %1930 = load i64, i64* %PC.i862
  %1931 = add i64 %1930, 5
  %1932 = load i64, i64* %PC.i862
  %1933 = add i64 %1932, 5
  store i64 %1933, i64* %PC.i862
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1931, i64* %1934, align 8
  store %struct.Memory* %loadMem_43b427, %struct.Memory** %MEMORY
  br label %block_.L_43b42c

block_.L_43b42c:                                  ; preds = %block_.L_43b427, %block_43b34c
  %loadMem_43b42c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1936 = getelementptr inbounds %struct.GPR, %struct.GPR* %1935, i32 0, i32 33
  %1937 = getelementptr inbounds %struct.Reg, %struct.Reg* %1936, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %1937 to i64*
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1939 = getelementptr inbounds %struct.GPR, %struct.GPR* %1938, i32 0, i32 1
  %1940 = getelementptr inbounds %struct.Reg, %struct.Reg* %1939, i32 0, i32 0
  %RAX.i860 = bitcast %union.anon* %1940 to i64*
  %1941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1942 = getelementptr inbounds %struct.GPR, %struct.GPR* %1941, i32 0, i32 15
  %1943 = getelementptr inbounds %struct.Reg, %struct.Reg* %1942, i32 0, i32 0
  %RBP.i861 = bitcast %union.anon* %1943 to i64*
  %1944 = load i64, i64* %RBP.i861
  %1945 = sub i64 %1944, 64
  %1946 = load i64, i64* %PC.i859
  %1947 = add i64 %1946, 3
  store i64 %1947, i64* %PC.i859
  %1948 = inttoptr i64 %1945 to i32*
  %1949 = load i32, i32* %1948
  %1950 = zext i32 %1949 to i64
  store i64 %1950, i64* %RAX.i860, align 8
  store %struct.Memory* %loadMem_43b42c, %struct.Memory** %MEMORY
  %loadMem_43b42f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1952 = getelementptr inbounds %struct.GPR, %struct.GPR* %1951, i32 0, i32 33
  %1953 = getelementptr inbounds %struct.Reg, %struct.Reg* %1952, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %1953 to i64*
  %1954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1955 = getelementptr inbounds %struct.GPR, %struct.GPR* %1954, i32 0, i32 1
  %1956 = getelementptr inbounds %struct.Reg, %struct.Reg* %1955, i32 0, i32 0
  %RAX.i858 = bitcast %union.anon* %1956 to i64*
  %1957 = load i64, i64* %RAX.i858
  %1958 = load i64, i64* %PC.i857
  %1959 = add i64 %1958, 3
  store i64 %1959, i64* %PC.i857
  %1960 = trunc i64 %1957 to i32
  %1961 = add i32 1, %1960
  %1962 = zext i32 %1961 to i64
  store i64 %1962, i64* %RAX.i858, align 8
  %1963 = icmp ult i32 %1961, %1960
  %1964 = icmp ult i32 %1961, 1
  %1965 = or i1 %1963, %1964
  %1966 = zext i1 %1965 to i8
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1966, i8* %1967, align 1
  %1968 = and i32 %1961, 255
  %1969 = call i32 @llvm.ctpop.i32(i32 %1968)
  %1970 = trunc i32 %1969 to i8
  %1971 = and i8 %1970, 1
  %1972 = xor i8 %1971, 1
  %1973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1972, i8* %1973, align 1
  %1974 = xor i64 1, %1957
  %1975 = trunc i64 %1974 to i32
  %1976 = xor i32 %1975, %1961
  %1977 = lshr i32 %1976, 4
  %1978 = trunc i32 %1977 to i8
  %1979 = and i8 %1978, 1
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1979, i8* %1980, align 1
  %1981 = icmp eq i32 %1961, 0
  %1982 = zext i1 %1981 to i8
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1982, i8* %1983, align 1
  %1984 = lshr i32 %1961, 31
  %1985 = trunc i32 %1984 to i8
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1985, i8* %1986, align 1
  %1987 = lshr i32 %1960, 31
  %1988 = xor i32 %1984, %1987
  %1989 = add i32 %1988, %1984
  %1990 = icmp eq i32 %1989, 2
  %1991 = zext i1 %1990 to i8
  %1992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1991, i8* %1992, align 1
  store %struct.Memory* %loadMem_43b42f, %struct.Memory** %MEMORY
  %loadMem_43b432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1994 = getelementptr inbounds %struct.GPR, %struct.GPR* %1993, i32 0, i32 33
  %1995 = getelementptr inbounds %struct.Reg, %struct.Reg* %1994, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %1995 to i64*
  %1996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1997 = getelementptr inbounds %struct.GPR, %struct.GPR* %1996, i32 0, i32 1
  %1998 = getelementptr inbounds %struct.Reg, %struct.Reg* %1997, i32 0, i32 0
  %EAX.i855 = bitcast %union.anon* %1998 to i32*
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2000 = getelementptr inbounds %struct.GPR, %struct.GPR* %1999, i32 0, i32 15
  %2001 = getelementptr inbounds %struct.Reg, %struct.Reg* %2000, i32 0, i32 0
  %RBP.i856 = bitcast %union.anon* %2001 to i64*
  %2002 = load i64, i64* %RBP.i856
  %2003 = sub i64 %2002, 64
  %2004 = load i32, i32* %EAX.i855
  %2005 = zext i32 %2004 to i64
  %2006 = load i64, i64* %PC.i854
  %2007 = add i64 %2006, 3
  store i64 %2007, i64* %PC.i854
  %2008 = inttoptr i64 %2003 to i32*
  store i32 %2004, i32* %2008
  store %struct.Memory* %loadMem_43b432, %struct.Memory** %MEMORY
  %loadMem_43b435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2010 = getelementptr inbounds %struct.GPR, %struct.GPR* %2009, i32 0, i32 33
  %2011 = getelementptr inbounds %struct.Reg, %struct.Reg* %2010, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %2011 to i64*
  %2012 = load i64, i64* %PC.i853
  %2013 = add i64 %2012, -289
  %2014 = load i64, i64* %PC.i853
  %2015 = add i64 %2014, 5
  store i64 %2015, i64* %PC.i853
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2013, i64* %2016, align 8
  store %struct.Memory* %loadMem_43b435, %struct.Memory** %MEMORY
  br label %block_.L_43b314

block_.L_43b43a:                                  ; preds = %block_.L_43b314
  %loadMem_43b43a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2018 = getelementptr inbounds %struct.GPR, %struct.GPR* %2017, i32 0, i32 33
  %2019 = getelementptr inbounds %struct.Reg, %struct.Reg* %2018, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %2019 to i64*
  %2020 = load i64, i64* %PC.i852
  %2021 = add i64 %2020, 5
  %2022 = load i64, i64* %PC.i852
  %2023 = add i64 %2022, 5
  store i64 %2023, i64* %PC.i852
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2021, i64* %2024, align 8
  store %struct.Memory* %loadMem_43b43a, %struct.Memory** %MEMORY
  br label %block_.L_43b43f

block_.L_43b43f:                                  ; preds = %block_.L_43b43a
  %loadMem_43b43f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 33
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %2027 to i64*
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2029 = getelementptr inbounds %struct.GPR, %struct.GPR* %2028, i32 0, i32 1
  %2030 = getelementptr inbounds %struct.Reg, %struct.Reg* %2029, i32 0, i32 0
  %RAX.i850 = bitcast %union.anon* %2030 to i64*
  %2031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2032 = getelementptr inbounds %struct.GPR, %struct.GPR* %2031, i32 0, i32 15
  %2033 = getelementptr inbounds %struct.Reg, %struct.Reg* %2032, i32 0, i32 0
  %RBP.i851 = bitcast %union.anon* %2033 to i64*
  %2034 = load i64, i64* %RBP.i851
  %2035 = sub i64 %2034, 60
  %2036 = load i64, i64* %PC.i849
  %2037 = add i64 %2036, 3
  store i64 %2037, i64* %PC.i849
  %2038 = inttoptr i64 %2035 to i32*
  %2039 = load i32, i32* %2038
  %2040 = zext i32 %2039 to i64
  store i64 %2040, i64* %RAX.i850, align 8
  store %struct.Memory* %loadMem_43b43f, %struct.Memory** %MEMORY
  %loadMem_43b442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2042 = getelementptr inbounds %struct.GPR, %struct.GPR* %2041, i32 0, i32 33
  %2043 = getelementptr inbounds %struct.Reg, %struct.Reg* %2042, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %2043 to i64*
  %2044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2045 = getelementptr inbounds %struct.GPR, %struct.GPR* %2044, i32 0, i32 1
  %2046 = getelementptr inbounds %struct.Reg, %struct.Reg* %2045, i32 0, i32 0
  %RAX.i848 = bitcast %union.anon* %2046 to i64*
  %2047 = load i64, i64* %RAX.i848
  %2048 = load i64, i64* %PC.i847
  %2049 = add i64 %2048, 3
  store i64 %2049, i64* %PC.i847
  %2050 = trunc i64 %2047 to i32
  %2051 = add i32 1, %2050
  %2052 = zext i32 %2051 to i64
  store i64 %2052, i64* %RAX.i848, align 8
  %2053 = icmp ult i32 %2051, %2050
  %2054 = icmp ult i32 %2051, 1
  %2055 = or i1 %2053, %2054
  %2056 = zext i1 %2055 to i8
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2056, i8* %2057, align 1
  %2058 = and i32 %2051, 255
  %2059 = call i32 @llvm.ctpop.i32(i32 %2058)
  %2060 = trunc i32 %2059 to i8
  %2061 = and i8 %2060, 1
  %2062 = xor i8 %2061, 1
  %2063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2062, i8* %2063, align 1
  %2064 = xor i64 1, %2047
  %2065 = trunc i64 %2064 to i32
  %2066 = xor i32 %2065, %2051
  %2067 = lshr i32 %2066, 4
  %2068 = trunc i32 %2067 to i8
  %2069 = and i8 %2068, 1
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2069, i8* %2070, align 1
  %2071 = icmp eq i32 %2051, 0
  %2072 = zext i1 %2071 to i8
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2072, i8* %2073, align 1
  %2074 = lshr i32 %2051, 31
  %2075 = trunc i32 %2074 to i8
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2075, i8* %2076, align 1
  %2077 = lshr i32 %2050, 31
  %2078 = xor i32 %2074, %2077
  %2079 = add i32 %2078, %2074
  %2080 = icmp eq i32 %2079, 2
  %2081 = zext i1 %2080 to i8
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2081, i8* %2082, align 1
  store %struct.Memory* %loadMem_43b442, %struct.Memory** %MEMORY
  %loadMem_43b445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2084 = getelementptr inbounds %struct.GPR, %struct.GPR* %2083, i32 0, i32 33
  %2085 = getelementptr inbounds %struct.Reg, %struct.Reg* %2084, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %2085 to i64*
  %2086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2087 = getelementptr inbounds %struct.GPR, %struct.GPR* %2086, i32 0, i32 1
  %2088 = getelementptr inbounds %struct.Reg, %struct.Reg* %2087, i32 0, i32 0
  %EAX.i845 = bitcast %union.anon* %2088 to i32*
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2090 = getelementptr inbounds %struct.GPR, %struct.GPR* %2089, i32 0, i32 15
  %2091 = getelementptr inbounds %struct.Reg, %struct.Reg* %2090, i32 0, i32 0
  %RBP.i846 = bitcast %union.anon* %2091 to i64*
  %2092 = load i64, i64* %RBP.i846
  %2093 = sub i64 %2092, 60
  %2094 = load i32, i32* %EAX.i845
  %2095 = zext i32 %2094 to i64
  %2096 = load i64, i64* %PC.i844
  %2097 = add i64 %2096, 3
  store i64 %2097, i64* %PC.i844
  %2098 = inttoptr i64 %2093 to i32*
  store i32 %2094, i32* %2098
  store %struct.Memory* %loadMem_43b445, %struct.Memory** %MEMORY
  %loadMem_43b448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2100 = getelementptr inbounds %struct.GPR, %struct.GPR* %2099, i32 0, i32 33
  %2101 = getelementptr inbounds %struct.Reg, %struct.Reg* %2100, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %2101 to i64*
  %2102 = load i64, i64* %PC.i843
  %2103 = add i64 %2102, -331
  %2104 = load i64, i64* %PC.i843
  %2105 = add i64 %2104, 5
  store i64 %2105, i64* %PC.i843
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2103, i64* %2106, align 8
  store %struct.Memory* %loadMem_43b448, %struct.Memory** %MEMORY
  br label %block_.L_43b2fd

block_.L_43b44d:                                  ; preds = %block_.L_43b2fd
  %loadMem_43b44d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2108 = getelementptr inbounds %struct.GPR, %struct.GPR* %2107, i32 0, i32 33
  %2109 = getelementptr inbounds %struct.Reg, %struct.Reg* %2108, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %2109 to i64*
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2111 = getelementptr inbounds %struct.GPR, %struct.GPR* %2110, i32 0, i32 1
  %2112 = getelementptr inbounds %struct.Reg, %struct.Reg* %2111, i32 0, i32 0
  %RAX.i841 = bitcast %union.anon* %2112 to i64*
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2114 = getelementptr inbounds %struct.GPR, %struct.GPR* %2113, i32 0, i32 15
  %2115 = getelementptr inbounds %struct.Reg, %struct.Reg* %2114, i32 0, i32 0
  %RBP.i842 = bitcast %union.anon* %2115 to i64*
  %2116 = load i64, i64* %RBP.i842
  %2117 = sub i64 %2116, 48
  %2118 = load i64, i64* %PC.i840
  %2119 = add i64 %2118, 4
  store i64 %2119, i64* %PC.i840
  %2120 = inttoptr i64 %2117 to i64*
  %2121 = load i64, i64* %2120
  store i64 %2121, i64* %RAX.i841, align 8
  store %struct.Memory* %loadMem_43b44d, %struct.Memory** %MEMORY
  %loadMem_43b451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2123 = getelementptr inbounds %struct.GPR, %struct.GPR* %2122, i32 0, i32 33
  %2124 = getelementptr inbounds %struct.Reg, %struct.Reg* %2123, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %2124 to i64*
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2126 = getelementptr inbounds %struct.GPR, %struct.GPR* %2125, i32 0, i32 5
  %2127 = getelementptr inbounds %struct.Reg, %struct.Reg* %2126, i32 0, i32 0
  %RCX.i838 = bitcast %union.anon* %2127 to i64*
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2129 = getelementptr inbounds %struct.GPR, %struct.GPR* %2128, i32 0, i32 15
  %2130 = getelementptr inbounds %struct.Reg, %struct.Reg* %2129, i32 0, i32 0
  %RBP.i839 = bitcast %union.anon* %2130 to i64*
  %2131 = load i64, i64* %RBP.i839
  %2132 = sub i64 %2131, 4
  %2133 = load i64, i64* %PC.i837
  %2134 = add i64 %2133, 4
  store i64 %2134, i64* %PC.i837
  %2135 = inttoptr i64 %2132 to i32*
  %2136 = load i32, i32* %2135
  %2137 = sext i32 %2136 to i64
  store i64 %2137, i64* %RCX.i838, align 8
  store %struct.Memory* %loadMem_43b451, %struct.Memory** %MEMORY
  %loadMem_43b455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2139 = getelementptr inbounds %struct.GPR, %struct.GPR* %2138, i32 0, i32 33
  %2140 = getelementptr inbounds %struct.Reg, %struct.Reg* %2139, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %2140 to i64*
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2142 = getelementptr inbounds %struct.GPR, %struct.GPR* %2141, i32 0, i32 5
  %2143 = getelementptr inbounds %struct.Reg, %struct.Reg* %2142, i32 0, i32 0
  %RCX.i836 = bitcast %union.anon* %2143 to i64*
  %2144 = load i64, i64* %RCX.i836
  %2145 = load i64, i64* %PC.i835
  %2146 = add i64 %2145, 4
  store i64 %2146, i64* %PC.i835
  %2147 = sext i64 %2144 to i128
  %2148 = and i128 %2147, -18446744073709551616
  %2149 = zext i64 %2144 to i128
  %2150 = or i128 %2148, %2149
  %2151 = mul i128 36, %2150
  %2152 = trunc i128 %2151 to i64
  store i64 %2152, i64* %RCX.i836, align 8
  %2153 = sext i64 %2152 to i128
  %2154 = icmp ne i128 %2153, %2151
  %2155 = zext i1 %2154 to i8
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2155, i8* %2156, align 1
  %2157 = trunc i128 %2151 to i32
  %2158 = and i32 %2157, 255
  %2159 = call i32 @llvm.ctpop.i32(i32 %2158)
  %2160 = trunc i32 %2159 to i8
  %2161 = and i8 %2160, 1
  %2162 = xor i8 %2161, 1
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2162, i8* %2163, align 1
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2164, align 1
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2165, align 1
  %2166 = lshr i64 %2152, 63
  %2167 = trunc i64 %2166 to i8
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2167, i8* %2168, align 1
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2155, i8* %2169, align 1
  store %struct.Memory* %loadMem_43b455, %struct.Memory** %MEMORY
  %loadMem_43b459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2171 = getelementptr inbounds %struct.GPR, %struct.GPR* %2170, i32 0, i32 33
  %2172 = getelementptr inbounds %struct.Reg, %struct.Reg* %2171, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %2172 to i64*
  %2173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2174 = getelementptr inbounds %struct.GPR, %struct.GPR* %2173, i32 0, i32 1
  %2175 = getelementptr inbounds %struct.Reg, %struct.Reg* %2174, i32 0, i32 0
  %RAX.i833 = bitcast %union.anon* %2175 to i64*
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2177 = getelementptr inbounds %struct.GPR, %struct.GPR* %2176, i32 0, i32 5
  %2178 = getelementptr inbounds %struct.Reg, %struct.Reg* %2177, i32 0, i32 0
  %RCX.i834 = bitcast %union.anon* %2178 to i64*
  %2179 = load i64, i64* %RAX.i833
  %2180 = load i64, i64* %RCX.i834
  %2181 = load i64, i64* %PC.i832
  %2182 = add i64 %2181, 3
  store i64 %2182, i64* %PC.i832
  %2183 = add i64 %2180, %2179
  store i64 %2183, i64* %RAX.i833, align 8
  %2184 = icmp ult i64 %2183, %2179
  %2185 = icmp ult i64 %2183, %2180
  %2186 = or i1 %2184, %2185
  %2187 = zext i1 %2186 to i8
  %2188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2187, i8* %2188, align 1
  %2189 = trunc i64 %2183 to i32
  %2190 = and i32 %2189, 255
  %2191 = call i32 @llvm.ctpop.i32(i32 %2190)
  %2192 = trunc i32 %2191 to i8
  %2193 = and i8 %2192, 1
  %2194 = xor i8 %2193, 1
  %2195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2194, i8* %2195, align 1
  %2196 = xor i64 %2180, %2179
  %2197 = xor i64 %2196, %2183
  %2198 = lshr i64 %2197, 4
  %2199 = trunc i64 %2198 to i8
  %2200 = and i8 %2199, 1
  %2201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2200, i8* %2201, align 1
  %2202 = icmp eq i64 %2183, 0
  %2203 = zext i1 %2202 to i8
  %2204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2203, i8* %2204, align 1
  %2205 = lshr i64 %2183, 63
  %2206 = trunc i64 %2205 to i8
  %2207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2206, i8* %2207, align 1
  %2208 = lshr i64 %2179, 63
  %2209 = lshr i64 %2180, 63
  %2210 = xor i64 %2205, %2208
  %2211 = xor i64 %2205, %2209
  %2212 = add i64 %2210, %2211
  %2213 = icmp eq i64 %2212, 2
  %2214 = zext i1 %2213 to i8
  %2215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2214, i8* %2215, align 1
  store %struct.Memory* %loadMem_43b459, %struct.Memory** %MEMORY
  %loadMem_43b45c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2217 = getelementptr inbounds %struct.GPR, %struct.GPR* %2216, i32 0, i32 33
  %2218 = getelementptr inbounds %struct.Reg, %struct.Reg* %2217, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %2218 to i64*
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2220 = getelementptr inbounds %struct.GPR, %struct.GPR* %2219, i32 0, i32 1
  %2221 = getelementptr inbounds %struct.Reg, %struct.Reg* %2220, i32 0, i32 0
  %RAX.i830 = bitcast %union.anon* %2221 to i64*
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2223 = getelementptr inbounds %struct.GPR, %struct.GPR* %2222, i32 0, i32 7
  %2224 = getelementptr inbounds %struct.Reg, %struct.Reg* %2223, i32 0, i32 0
  %RDX.i831 = bitcast %union.anon* %2224 to i64*
  %2225 = load i64, i64* %RAX.i830
  %2226 = add i64 %2225, 4
  %2227 = load i64, i64* %PC.i829
  %2228 = add i64 %2227, 3
  store i64 %2228, i64* %PC.i829
  %2229 = inttoptr i64 %2226 to i32*
  %2230 = load i32, i32* %2229
  %2231 = zext i32 %2230 to i64
  store i64 %2231, i64* %RDX.i831, align 8
  store %struct.Memory* %loadMem_43b45c, %struct.Memory** %MEMORY
  %loadMem_43b45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2233 = getelementptr inbounds %struct.GPR, %struct.GPR* %2232, i32 0, i32 33
  %2234 = getelementptr inbounds %struct.Reg, %struct.Reg* %2233, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %2234 to i64*
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2236 = getelementptr inbounds %struct.GPR, %struct.GPR* %2235, i32 0, i32 7
  %2237 = getelementptr inbounds %struct.Reg, %struct.Reg* %2236, i32 0, i32 0
  %RDX.i827 = bitcast %union.anon* %2237 to i64*
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2239 = getelementptr inbounds %struct.GPR, %struct.GPR* %2238, i32 0, i32 15
  %2240 = getelementptr inbounds %struct.Reg, %struct.Reg* %2239, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %2240 to i64*
  %2241 = load i64, i64* %RDX.i827
  %2242 = load i64, i64* %RBP.i828
  %2243 = sub i64 %2242, 72
  %2244 = load i64, i64* %PC.i826
  %2245 = add i64 %2244, 3
  store i64 %2245, i64* %PC.i826
  %2246 = trunc i64 %2241 to i32
  %2247 = inttoptr i64 %2243 to i32*
  %2248 = load i32, i32* %2247
  %2249 = add i32 %2248, %2246
  %2250 = zext i32 %2249 to i64
  store i64 %2250, i64* %RDX.i827, align 8
  %2251 = icmp ult i32 %2249, %2246
  %2252 = icmp ult i32 %2249, %2248
  %2253 = or i1 %2251, %2252
  %2254 = zext i1 %2253 to i8
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2254, i8* %2255, align 1
  %2256 = and i32 %2249, 255
  %2257 = call i32 @llvm.ctpop.i32(i32 %2256)
  %2258 = trunc i32 %2257 to i8
  %2259 = and i8 %2258, 1
  %2260 = xor i8 %2259, 1
  %2261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2260, i8* %2261, align 1
  %2262 = xor i32 %2248, %2246
  %2263 = xor i32 %2262, %2249
  %2264 = lshr i32 %2263, 4
  %2265 = trunc i32 %2264 to i8
  %2266 = and i8 %2265, 1
  %2267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2266, i8* %2267, align 1
  %2268 = icmp eq i32 %2249, 0
  %2269 = zext i1 %2268 to i8
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2269, i8* %2270, align 1
  %2271 = lshr i32 %2249, 31
  %2272 = trunc i32 %2271 to i8
  %2273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2272, i8* %2273, align 1
  %2274 = lshr i32 %2246, 31
  %2275 = lshr i32 %2248, 31
  %2276 = xor i32 %2271, %2274
  %2277 = xor i32 %2271, %2275
  %2278 = add i32 %2276, %2277
  %2279 = icmp eq i32 %2278, 2
  %2280 = zext i1 %2279 to i8
  %2281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2280, i8* %2281, align 1
  store %struct.Memory* %loadMem_43b45f, %struct.Memory** %MEMORY
  %loadMem_43b462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2283 = getelementptr inbounds %struct.GPR, %struct.GPR* %2282, i32 0, i32 33
  %2284 = getelementptr inbounds %struct.Reg, %struct.Reg* %2283, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %2284 to i64*
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2286 = getelementptr inbounds %struct.GPR, %struct.GPR* %2285, i32 0, i32 9
  %2287 = getelementptr inbounds %struct.Reg, %struct.Reg* %2286, i32 0, i32 0
  %RSI.i824 = bitcast %union.anon* %2287 to i64*
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2289 = getelementptr inbounds %struct.GPR, %struct.GPR* %2288, i32 0, i32 15
  %2290 = getelementptr inbounds %struct.Reg, %struct.Reg* %2289, i32 0, i32 0
  %RBP.i825 = bitcast %union.anon* %2290 to i64*
  %2291 = load i64, i64* %RBP.i825
  %2292 = sub i64 %2291, 68
  %2293 = load i64, i64* %PC.i823
  %2294 = add i64 %2293, 3
  store i64 %2294, i64* %PC.i823
  %2295 = inttoptr i64 %2292 to i32*
  %2296 = load i32, i32* %2295
  %2297 = zext i32 %2296 to i64
  store i64 %2297, i64* %RSI.i824, align 8
  store %struct.Memory* %loadMem_43b462, %struct.Memory** %MEMORY
  %loadMem_43b465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2299 = getelementptr inbounds %struct.GPR, %struct.GPR* %2298, i32 0, i32 33
  %2300 = getelementptr inbounds %struct.Reg, %struct.Reg* %2299, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %2300 to i64*
  %2301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2302 = getelementptr inbounds %struct.GPR, %struct.GPR* %2301, i32 0, i32 9
  %2303 = getelementptr inbounds %struct.Reg, %struct.Reg* %2302, i32 0, i32 0
  %RSI.i822 = bitcast %union.anon* %2303 to i64*
  %2304 = load i64, i64* %RSI.i822
  %2305 = load i64, i64* %PC.i821
  %2306 = add i64 %2305, 2
  store i64 %2306, i64* %PC.i821
  %2307 = trunc i64 %2304 to i32
  %2308 = shl i32 %2307, 1
  %2309 = icmp slt i32 %2307, 0
  %2310 = icmp slt i32 %2308, 0
  %2311 = xor i1 %2309, %2310
  %2312 = zext i32 %2308 to i64
  store i64 %2312, i64* %RSI.i822, align 8
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2314 = zext i1 %2309 to i8
  store i8 %2314, i8* %2313, align 1
  %2315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2316 = and i32 %2308, 254
  %2317 = call i32 @llvm.ctpop.i32(i32 %2316)
  %2318 = trunc i32 %2317 to i8
  %2319 = and i8 %2318, 1
  %2320 = xor i8 %2319, 1
  store i8 %2320, i8* %2315, align 1
  %2321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2321, align 1
  %2322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2323 = icmp eq i32 %2308, 0
  %2324 = zext i1 %2323 to i8
  store i8 %2324, i8* %2322, align 1
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2326 = lshr i32 %2308, 31
  %2327 = trunc i32 %2326 to i8
  store i8 %2327, i8* %2325, align 1
  %2328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2329 = zext i1 %2311 to i8
  store i8 %2329, i8* %2328, align 1
  store %struct.Memory* %loadMem_43b465, %struct.Memory** %MEMORY
  %loadMem_43b468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2331 = getelementptr inbounds %struct.GPR, %struct.GPR* %2330, i32 0, i32 33
  %2332 = getelementptr inbounds %struct.Reg, %struct.Reg* %2331, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %2332 to i64*
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2334 = getelementptr inbounds %struct.GPR, %struct.GPR* %2333, i32 0, i32 9
  %2335 = getelementptr inbounds %struct.Reg, %struct.Reg* %2334, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %2335 to i32*
  %2336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2337 = getelementptr inbounds %struct.GPR, %struct.GPR* %2336, i32 0, i32 7
  %2338 = getelementptr inbounds %struct.Reg, %struct.Reg* %2337, i32 0, i32 0
  %RDX.i820 = bitcast %union.anon* %2338 to i64*
  %2339 = load i64, i64* %RDX.i820
  %2340 = load i32, i32* %ESI.i
  %2341 = zext i32 %2340 to i64
  %2342 = load i64, i64* %PC.i819
  %2343 = add i64 %2342, 2
  store i64 %2343, i64* %PC.i819
  %2344 = trunc i64 %2339 to i32
  %2345 = sub i32 %2344, %2340
  %2346 = zext i32 %2345 to i64
  store i64 %2346, i64* %RDX.i820, align 8
  %2347 = icmp ult i32 %2344, %2340
  %2348 = zext i1 %2347 to i8
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2348, i8* %2349, align 1
  %2350 = and i32 %2345, 255
  %2351 = call i32 @llvm.ctpop.i32(i32 %2350)
  %2352 = trunc i32 %2351 to i8
  %2353 = and i8 %2352, 1
  %2354 = xor i8 %2353, 1
  %2355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2354, i8* %2355, align 1
  %2356 = xor i64 %2341, %2339
  %2357 = trunc i64 %2356 to i32
  %2358 = xor i32 %2357, %2345
  %2359 = lshr i32 %2358, 4
  %2360 = trunc i32 %2359 to i8
  %2361 = and i8 %2360, 1
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2361, i8* %2362, align 1
  %2363 = icmp eq i32 %2345, 0
  %2364 = zext i1 %2363 to i8
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2364, i8* %2365, align 1
  %2366 = lshr i32 %2345, 31
  %2367 = trunc i32 %2366 to i8
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2367, i8* %2368, align 1
  %2369 = lshr i32 %2344, 31
  %2370 = lshr i32 %2340, 31
  %2371 = xor i32 %2370, %2369
  %2372 = xor i32 %2366, %2369
  %2373 = add i32 %2372, %2371
  %2374 = icmp eq i32 %2373, 2
  %2375 = zext i1 %2374 to i8
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2375, i8* %2376, align 1
  store %struct.Memory* %loadMem_43b468, %struct.Memory** %MEMORY
  %loadMem_43b46a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2378 = getelementptr inbounds %struct.GPR, %struct.GPR* %2377, i32 0, i32 33
  %2379 = getelementptr inbounds %struct.Reg, %struct.Reg* %2378, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %2379 to i64*
  %2380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2381 = getelementptr inbounds %struct.GPR, %struct.GPR* %2380, i32 0, i32 7
  %2382 = getelementptr inbounds %struct.Reg, %struct.Reg* %2381, i32 0, i32 0
  %RDX.i817 = bitcast %union.anon* %2382 to i64*
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2384 = getelementptr inbounds %struct.GPR, %struct.GPR* %2383, i32 0, i32 15
  %2385 = getelementptr inbounds %struct.Reg, %struct.Reg* %2384, i32 0, i32 0
  %RBP.i818 = bitcast %union.anon* %2385 to i64*
  %2386 = load i64, i64* %RDX.i817
  %2387 = load i64, i64* %RBP.i818
  %2388 = sub i64 %2387, 76
  %2389 = load i64, i64* %PC.i816
  %2390 = add i64 %2389, 3
  store i64 %2390, i64* %PC.i816
  %2391 = trunc i64 %2386 to i32
  %2392 = inttoptr i64 %2388 to i32*
  %2393 = load i32, i32* %2392
  %2394 = sub i32 %2391, %2393
  %2395 = zext i32 %2394 to i64
  store i64 %2395, i64* %RDX.i817, align 8
  %2396 = icmp ult i32 %2391, %2393
  %2397 = zext i1 %2396 to i8
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2397, i8* %2398, align 1
  %2399 = and i32 %2394, 255
  %2400 = call i32 @llvm.ctpop.i32(i32 %2399)
  %2401 = trunc i32 %2400 to i8
  %2402 = and i8 %2401, 1
  %2403 = xor i8 %2402, 1
  %2404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2403, i8* %2404, align 1
  %2405 = xor i32 %2393, %2391
  %2406 = xor i32 %2405, %2394
  %2407 = lshr i32 %2406, 4
  %2408 = trunc i32 %2407 to i8
  %2409 = and i8 %2408, 1
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2409, i8* %2410, align 1
  %2411 = icmp eq i32 %2394, 0
  %2412 = zext i1 %2411 to i8
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2412, i8* %2413, align 1
  %2414 = lshr i32 %2394, 31
  %2415 = trunc i32 %2414 to i8
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2415, i8* %2416, align 1
  %2417 = lshr i32 %2391, 31
  %2418 = lshr i32 %2393, 31
  %2419 = xor i32 %2418, %2417
  %2420 = xor i32 %2414, %2417
  %2421 = add i32 %2420, %2419
  %2422 = icmp eq i32 %2421, 2
  %2423 = zext i1 %2422 to i8
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2423, i8* %2424, align 1
  store %struct.Memory* %loadMem_43b46a, %struct.Memory** %MEMORY
  %loadMem_43b46d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2426 = getelementptr inbounds %struct.GPR, %struct.GPR* %2425, i32 0, i32 33
  %2427 = getelementptr inbounds %struct.Reg, %struct.Reg* %2426, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %2427 to i64*
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2429 = getelementptr inbounds %struct.GPR, %struct.GPR* %2428, i32 0, i32 7
  %2430 = getelementptr inbounds %struct.Reg, %struct.Reg* %2429, i32 0, i32 0
  %EDX.i814 = bitcast %union.anon* %2430 to i32*
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2432 = getelementptr inbounds %struct.GPR, %struct.GPR* %2431, i32 0, i32 15
  %2433 = getelementptr inbounds %struct.Reg, %struct.Reg* %2432, i32 0, i32 0
  %RBP.i815 = bitcast %union.anon* %2433 to i64*
  %2434 = load i64, i64* %RBP.i815
  %2435 = sub i64 %2434, 80
  %2436 = load i32, i32* %EDX.i814
  %2437 = zext i32 %2436 to i64
  %2438 = load i64, i64* %PC.i813
  %2439 = add i64 %2438, 3
  store i64 %2439, i64* %PC.i813
  %2440 = inttoptr i64 %2435 to i32*
  store i32 %2436, i32* %2440
  store %struct.Memory* %loadMem_43b46d, %struct.Memory** %MEMORY
  %loadMem_43b470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2442 = getelementptr inbounds %struct.GPR, %struct.GPR* %2441, i32 0, i32 33
  %2443 = getelementptr inbounds %struct.Reg, %struct.Reg* %2442, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %2443 to i64*
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2445 = getelementptr inbounds %struct.GPR, %struct.GPR* %2444, i32 0, i32 15
  %2446 = getelementptr inbounds %struct.Reg, %struct.Reg* %2445, i32 0, i32 0
  %RBP.i812 = bitcast %union.anon* %2446 to i64*
  %2447 = load i64, i64* %RBP.i812
  %2448 = sub i64 %2447, 32
  %2449 = load i64, i64* %PC.i811
  %2450 = add i64 %2449, 5
  store i64 %2450, i64* %PC.i811
  %2451 = inttoptr i64 %2448 to i64*
  %2452 = load i64, i64* %2451
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2453, align 1
  %2454 = trunc i64 %2452 to i32
  %2455 = and i32 %2454, 255
  %2456 = call i32 @llvm.ctpop.i32(i32 %2455)
  %2457 = trunc i32 %2456 to i8
  %2458 = and i8 %2457, 1
  %2459 = xor i8 %2458, 1
  %2460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2459, i8* %2460, align 1
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2461, align 1
  %2462 = icmp eq i64 %2452, 0
  %2463 = zext i1 %2462 to i8
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2463, i8* %2464, align 1
  %2465 = lshr i64 %2452, 63
  %2466 = trunc i64 %2465 to i8
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2466, i8* %2467, align 1
  %2468 = lshr i64 %2452, 63
  %2469 = xor i64 %2465, %2468
  %2470 = add i64 %2469, %2468
  %2471 = icmp eq i64 %2470, 2
  %2472 = zext i1 %2471 to i8
  %2473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2472, i8* %2473, align 1
  store %struct.Memory* %loadMem_43b470, %struct.Memory** %MEMORY
  %loadMem_43b475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2475 = getelementptr inbounds %struct.GPR, %struct.GPR* %2474, i32 0, i32 33
  %2476 = getelementptr inbounds %struct.Reg, %struct.Reg* %2475, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %2476 to i64*
  %2477 = load i64, i64* %PC.i810
  %2478 = add i64 %2477, 16
  %2479 = load i64, i64* %PC.i810
  %2480 = add i64 %2479, 6
  %2481 = load i64, i64* %PC.i810
  %2482 = add i64 %2481, 6
  store i64 %2482, i64* %PC.i810
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2484 = load i8, i8* %2483, align 1
  store i8 %2484, i8* %BRANCH_TAKEN, align 1
  %2485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2486 = icmp ne i8 %2484, 0
  %2487 = select i1 %2486, i64 %2478, i64 %2480
  store i64 %2487, i64* %2485, align 8
  store %struct.Memory* %loadMem_43b475, %struct.Memory** %MEMORY
  %loadBr_43b475 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b475 = icmp eq i8 %loadBr_43b475, 1
  br i1 %cmpBr_43b475, label %block_.L_43b485, label %block_43b47b

block_43b47b:                                     ; preds = %block_.L_43b44d
  %loadMem_43b47b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2489 = getelementptr inbounds %struct.GPR, %struct.GPR* %2488, i32 0, i32 33
  %2490 = getelementptr inbounds %struct.Reg, %struct.Reg* %2489, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %2490 to i64*
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2492 = getelementptr inbounds %struct.GPR, %struct.GPR* %2491, i32 0, i32 1
  %2493 = getelementptr inbounds %struct.Reg, %struct.Reg* %2492, i32 0, i32 0
  %RAX.i808 = bitcast %union.anon* %2493 to i64*
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2495 = getelementptr inbounds %struct.GPR, %struct.GPR* %2494, i32 0, i32 15
  %2496 = getelementptr inbounds %struct.Reg, %struct.Reg* %2495, i32 0, i32 0
  %RBP.i809 = bitcast %union.anon* %2496 to i64*
  %2497 = load i64, i64* %RBP.i809
  %2498 = sub i64 %2497, 32
  %2499 = load i64, i64* %PC.i807
  %2500 = add i64 %2499, 4
  store i64 %2500, i64* %PC.i807
  %2501 = inttoptr i64 %2498 to i64*
  %2502 = load i64, i64* %2501
  store i64 %2502, i64* %RAX.i808, align 8
  store %struct.Memory* %loadMem_43b47b, %struct.Memory** %MEMORY
  %loadMem_43b47f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2504 = getelementptr inbounds %struct.GPR, %struct.GPR* %2503, i32 0, i32 33
  %2505 = getelementptr inbounds %struct.Reg, %struct.Reg* %2504, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %2505 to i64*
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2507 = getelementptr inbounds %struct.GPR, %struct.GPR* %2506, i32 0, i32 1
  %2508 = getelementptr inbounds %struct.Reg, %struct.Reg* %2507, i32 0, i32 0
  %RAX.i806 = bitcast %union.anon* %2508 to i64*
  %2509 = load i64, i64* %RAX.i806
  %2510 = load i64, i64* %PC.i805
  %2511 = add i64 %2510, 6
  store i64 %2511, i64* %PC.i805
  %2512 = inttoptr i64 %2509 to i32*
  store i32 0, i32* %2512
  store %struct.Memory* %loadMem_43b47f, %struct.Memory** %MEMORY
  br label %block_.L_43b485

block_.L_43b485:                                  ; preds = %block_43b47b, %block_.L_43b44d
  %loadMem_43b485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2514 = getelementptr inbounds %struct.GPR, %struct.GPR* %2513, i32 0, i32 33
  %2515 = getelementptr inbounds %struct.Reg, %struct.Reg* %2514, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %2515 to i64*
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2517 = getelementptr inbounds %struct.GPR, %struct.GPR* %2516, i32 0, i32 15
  %2518 = getelementptr inbounds %struct.Reg, %struct.Reg* %2517, i32 0, i32 0
  %RBP.i804 = bitcast %union.anon* %2518 to i64*
  %2519 = load i64, i64* %RBP.i804
  %2520 = sub i64 %2519, 40
  %2521 = load i64, i64* %PC.i803
  %2522 = add i64 %2521, 5
  store i64 %2522, i64* %PC.i803
  %2523 = inttoptr i64 %2520 to i64*
  %2524 = load i64, i64* %2523
  %2525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2525, align 1
  %2526 = trunc i64 %2524 to i32
  %2527 = and i32 %2526, 255
  %2528 = call i32 @llvm.ctpop.i32(i32 %2527)
  %2529 = trunc i32 %2528 to i8
  %2530 = and i8 %2529, 1
  %2531 = xor i8 %2530, 1
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2531, i8* %2532, align 1
  %2533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2533, align 1
  %2534 = icmp eq i64 %2524, 0
  %2535 = zext i1 %2534 to i8
  %2536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2535, i8* %2536, align 1
  %2537 = lshr i64 %2524, 63
  %2538 = trunc i64 %2537 to i8
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2538, i8* %2539, align 1
  %2540 = lshr i64 %2524, 63
  %2541 = xor i64 %2537, %2540
  %2542 = add i64 %2541, %2540
  %2543 = icmp eq i64 %2542, 2
  %2544 = zext i1 %2543 to i8
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2544, i8* %2545, align 1
  store %struct.Memory* %loadMem_43b485, %struct.Memory** %MEMORY
  %loadMem_43b48a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2547 = getelementptr inbounds %struct.GPR, %struct.GPR* %2546, i32 0, i32 33
  %2548 = getelementptr inbounds %struct.Reg, %struct.Reg* %2547, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %2548 to i64*
  %2549 = load i64, i64* %PC.i802
  %2550 = add i64 %2549, 16
  %2551 = load i64, i64* %PC.i802
  %2552 = add i64 %2551, 6
  %2553 = load i64, i64* %PC.i802
  %2554 = add i64 %2553, 6
  store i64 %2554, i64* %PC.i802
  %2555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2556 = load i8, i8* %2555, align 1
  store i8 %2556, i8* %BRANCH_TAKEN, align 1
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2558 = icmp ne i8 %2556, 0
  %2559 = select i1 %2558, i64 %2550, i64 %2552
  store i64 %2559, i64* %2557, align 8
  store %struct.Memory* %loadMem_43b48a, %struct.Memory** %MEMORY
  %loadBr_43b48a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b48a = icmp eq i8 %loadBr_43b48a, 1
  br i1 %cmpBr_43b48a, label %block_.L_43b49a, label %block_43b490

block_43b490:                                     ; preds = %block_.L_43b485
  %loadMem_43b490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 33
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %2562 to i64*
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2564 = getelementptr inbounds %struct.GPR, %struct.GPR* %2563, i32 0, i32 1
  %2565 = getelementptr inbounds %struct.Reg, %struct.Reg* %2564, i32 0, i32 0
  %RAX.i800 = bitcast %union.anon* %2565 to i64*
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2567 = getelementptr inbounds %struct.GPR, %struct.GPR* %2566, i32 0, i32 15
  %2568 = getelementptr inbounds %struct.Reg, %struct.Reg* %2567, i32 0, i32 0
  %RBP.i801 = bitcast %union.anon* %2568 to i64*
  %2569 = load i64, i64* %RBP.i801
  %2570 = sub i64 %2569, 40
  %2571 = load i64, i64* %PC.i799
  %2572 = add i64 %2571, 4
  store i64 %2572, i64* %PC.i799
  %2573 = inttoptr i64 %2570 to i64*
  %2574 = load i64, i64* %2573
  store i64 %2574, i64* %RAX.i800, align 8
  store %struct.Memory* %loadMem_43b490, %struct.Memory** %MEMORY
  %loadMem_43b494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2576 = getelementptr inbounds %struct.GPR, %struct.GPR* %2575, i32 0, i32 33
  %2577 = getelementptr inbounds %struct.Reg, %struct.Reg* %2576, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %2577 to i64*
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2579 = getelementptr inbounds %struct.GPR, %struct.GPR* %2578, i32 0, i32 1
  %2580 = getelementptr inbounds %struct.Reg, %struct.Reg* %2579, i32 0, i32 0
  %RAX.i798 = bitcast %union.anon* %2580 to i64*
  %2581 = load i64, i64* %RAX.i798
  %2582 = load i64, i64* %PC.i797
  %2583 = add i64 %2582, 6
  store i64 %2583, i64* %PC.i797
  %2584 = inttoptr i64 %2581 to i32*
  store i32 0, i32* %2584
  store %struct.Memory* %loadMem_43b494, %struct.Memory** %MEMORY
  br label %block_.L_43b49a

block_.L_43b49a:                                  ; preds = %block_43b490, %block_.L_43b485
  %loadMem_43b49a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2586 = getelementptr inbounds %struct.GPR, %struct.GPR* %2585, i32 0, i32 33
  %2587 = getelementptr inbounds %struct.Reg, %struct.Reg* %2586, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %2587 to i64*
  %2588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2589 = getelementptr inbounds %struct.GPR, %struct.GPR* %2588, i32 0, i32 1
  %2590 = getelementptr inbounds %struct.Reg, %struct.Reg* %2589, i32 0, i32 0
  %RAX.i796 = bitcast %union.anon* %2590 to i64*
  %2591 = load i64, i64* %PC.i795
  %2592 = add i64 %2591, 7
  store i64 %2592, i64* %PC.i795
  %2593 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %2594 = zext i32 %2593 to i64
  store i64 %2594, i64* %RAX.i796, align 8
  store %struct.Memory* %loadMem_43b49a, %struct.Memory** %MEMORY
  %loadMem_43b4a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2596 = getelementptr inbounds %struct.GPR, %struct.GPR* %2595, i32 0, i32 33
  %2597 = getelementptr inbounds %struct.Reg, %struct.Reg* %2596, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %2597 to i64*
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2599 = getelementptr inbounds %struct.GPR, %struct.GPR* %2598, i32 0, i32 1
  %2600 = getelementptr inbounds %struct.Reg, %struct.Reg* %2599, i32 0, i32 0
  %RAX.i794 = bitcast %union.anon* %2600 to i64*
  %2601 = load i64, i64* %RAX.i794
  %2602 = load i64, i64* %PC.i793
  %2603 = add i64 %2602, 3
  store i64 %2603, i64* %PC.i793
  %2604 = and i64 2, %2601
  %2605 = trunc i64 %2604 to i32
  store i64 %2604, i64* %RAX.i794, align 8
  %2606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2606, align 1
  %2607 = and i32 %2605, 255
  %2608 = call i32 @llvm.ctpop.i32(i32 %2607)
  %2609 = trunc i32 %2608 to i8
  %2610 = and i8 %2609, 1
  %2611 = xor i8 %2610, 1
  %2612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2611, i8* %2612, align 1
  %2613 = icmp eq i32 %2605, 0
  %2614 = zext i1 %2613 to i8
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2614, i8* %2615, align 1
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2616, align 1
  %2617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2617, align 1
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2618, align 1
  store %struct.Memory* %loadMem_43b4a1, %struct.Memory** %MEMORY
  %loadMem_43b4a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2620 = getelementptr inbounds %struct.GPR, %struct.GPR* %2619, i32 0, i32 33
  %2621 = getelementptr inbounds %struct.Reg, %struct.Reg* %2620, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %2621 to i64*
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2623 = getelementptr inbounds %struct.GPR, %struct.GPR* %2622, i32 0, i32 1
  %2624 = getelementptr inbounds %struct.Reg, %struct.Reg* %2623, i32 0, i32 0
  %EAX.i792 = bitcast %union.anon* %2624 to i32*
  %2625 = load i32, i32* %EAX.i792
  %2626 = zext i32 %2625 to i64
  %2627 = load i64, i64* %PC.i791
  %2628 = add i64 %2627, 3
  store i64 %2628, i64* %PC.i791
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2629, align 1
  %2630 = and i32 %2625, 255
  %2631 = call i32 @llvm.ctpop.i32(i32 %2630)
  %2632 = trunc i32 %2631 to i8
  %2633 = and i8 %2632, 1
  %2634 = xor i8 %2633, 1
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2634, i8* %2635, align 1
  %2636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2636, align 1
  %2637 = icmp eq i32 %2625, 0
  %2638 = zext i1 %2637 to i8
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2638, i8* %2639, align 1
  %2640 = lshr i32 %2625, 31
  %2641 = trunc i32 %2640 to i8
  %2642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2641, i8* %2642, align 1
  %2643 = lshr i32 %2625, 31
  %2644 = xor i32 %2640, %2643
  %2645 = add i32 %2644, %2643
  %2646 = icmp eq i32 %2645, 2
  %2647 = zext i1 %2646 to i8
  %2648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2647, i8* %2648, align 1
  store %struct.Memory* %loadMem_43b4a4, %struct.Memory** %MEMORY
  %loadMem_43b4a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2650 = getelementptr inbounds %struct.GPR, %struct.GPR* %2649, i32 0, i32 33
  %2651 = getelementptr inbounds %struct.Reg, %struct.Reg* %2650, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %2651 to i64*
  %2652 = load i64, i64* %PC.i790
  %2653 = add i64 %2652, 71
  %2654 = load i64, i64* %PC.i790
  %2655 = add i64 %2654, 6
  %2656 = load i64, i64* %PC.i790
  %2657 = add i64 %2656, 6
  store i64 %2657, i64* %PC.i790
  %2658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2659 = load i8, i8* %2658, align 1
  store i8 %2659, i8* %BRANCH_TAKEN, align 1
  %2660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2661 = icmp ne i8 %2659, 0
  %2662 = select i1 %2661, i64 %2653, i64 %2655
  store i64 %2662, i64* %2660, align 8
  store %struct.Memory* %loadMem_43b4a7, %struct.Memory** %MEMORY
  %loadBr_43b4a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b4a7 = icmp eq i8 %loadBr_43b4a7, 1
  br i1 %cmpBr_43b4a7, label %block_.L_43b4ee, label %block_43b4ad

block_43b4ad:                                     ; preds = %block_.L_43b49a
  %loadMem_43b4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %2663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2664 = getelementptr inbounds %struct.GPR, %struct.GPR* %2663, i32 0, i32 33
  %2665 = getelementptr inbounds %struct.Reg, %struct.Reg* %2664, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %2665 to i64*
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2667 = getelementptr inbounds %struct.GPR, %struct.GPR* %2666, i32 0, i32 11
  %2668 = getelementptr inbounds %struct.Reg, %struct.Reg* %2667, i32 0, i32 0
  %RDI.i788 = bitcast %union.anon* %2668 to i64*
  %2669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2670 = getelementptr inbounds %struct.GPR, %struct.GPR* %2669, i32 0, i32 15
  %2671 = getelementptr inbounds %struct.Reg, %struct.Reg* %2670, i32 0, i32 0
  %RBP.i789 = bitcast %union.anon* %2671 to i64*
  %2672 = load i64, i64* %RBP.i789
  %2673 = sub i64 %2672, 48
  %2674 = load i64, i64* %PC.i787
  %2675 = add i64 %2674, 4
  store i64 %2675, i64* %PC.i787
  %2676 = inttoptr i64 %2673 to i64*
  %2677 = load i64, i64* %2676
  store i64 %2677, i64* %RDI.i788, align 8
  store %struct.Memory* %loadMem_43b4ad, %struct.Memory** %MEMORY
  %loadMem_43b4b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2679 = getelementptr inbounds %struct.GPR, %struct.GPR* %2678, i32 0, i32 33
  %2680 = getelementptr inbounds %struct.Reg, %struct.Reg* %2679, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %2680 to i64*
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2682 = getelementptr inbounds %struct.GPR, %struct.GPR* %2681, i32 0, i32 9
  %2683 = getelementptr inbounds %struct.Reg, %struct.Reg* %2682, i32 0, i32 0
  %RSI.i785 = bitcast %union.anon* %2683 to i64*
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2685 = getelementptr inbounds %struct.GPR, %struct.GPR* %2684, i32 0, i32 15
  %2686 = getelementptr inbounds %struct.Reg, %struct.Reg* %2685, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %2686 to i64*
  %2687 = load i64, i64* %RBP.i786
  %2688 = sub i64 %2687, 56
  %2689 = load i64, i64* %PC.i784
  %2690 = add i64 %2689, 4
  store i64 %2690, i64* %PC.i784
  %2691 = inttoptr i64 %2688 to i64*
  %2692 = load i64, i64* %2691
  store i64 %2692, i64* %RSI.i785, align 8
  store %struct.Memory* %loadMem_43b4b1, %struct.Memory** %MEMORY
  %loadMem_43b4b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2694 = getelementptr inbounds %struct.GPR, %struct.GPR* %2693, i32 0, i32 33
  %2695 = getelementptr inbounds %struct.Reg, %struct.Reg* %2694, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %2695 to i64*
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2697 = getelementptr inbounds %struct.GPR, %struct.GPR* %2696, i32 0, i32 7
  %2698 = getelementptr inbounds %struct.Reg, %struct.Reg* %2697, i32 0, i32 0
  %RDX.i782 = bitcast %union.anon* %2698 to i64*
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2700 = getelementptr inbounds %struct.GPR, %struct.GPR* %2699, i32 0, i32 15
  %2701 = getelementptr inbounds %struct.Reg, %struct.Reg* %2700, i32 0, i32 0
  %RBP.i783 = bitcast %union.anon* %2701 to i64*
  %2702 = load i64, i64* %RBP.i783
  %2703 = sub i64 %2702, 4
  %2704 = load i64, i64* %PC.i781
  %2705 = add i64 %2704, 3
  store i64 %2705, i64* %PC.i781
  %2706 = inttoptr i64 %2703 to i32*
  %2707 = load i32, i32* %2706
  %2708 = zext i32 %2707 to i64
  store i64 %2708, i64* %RDX.i782, align 8
  store %struct.Memory* %loadMem_43b4b5, %struct.Memory** %MEMORY
  %loadMem1_43b4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2710 = getelementptr inbounds %struct.GPR, %struct.GPR* %2709, i32 0, i32 33
  %2711 = getelementptr inbounds %struct.Reg, %struct.Reg* %2710, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %2711 to i64*
  %2712 = load i64, i64* %PC.i780
  %2713 = add i64 %2712, -6776
  %2714 = load i64, i64* %PC.i780
  %2715 = add i64 %2714, 5
  %2716 = load i64, i64* %PC.i780
  %2717 = add i64 %2716, 5
  store i64 %2717, i64* %PC.i780
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2719 = load i64, i64* %2718, align 8
  %2720 = add i64 %2719, -8
  %2721 = inttoptr i64 %2720 to i64*
  store i64 %2715, i64* %2721
  store i64 %2720, i64* %2718, align 8
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2713, i64* %2722, align 8
  store %struct.Memory* %loadMem1_43b4b8, %struct.Memory** %MEMORY
  %loadMem2_43b4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b4b8 = load i64, i64* %3
  %call2_43b4b8 = call %struct.Memory* @sub_439a40.print_eye(%struct.State* %0, i64 %loadPC_43b4b8, %struct.Memory* %loadMem2_43b4b8)
  store %struct.Memory* %call2_43b4b8, %struct.Memory** %MEMORY
  %loadMem_43b4bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2724 = getelementptr inbounds %struct.GPR, %struct.GPR* %2723, i32 0, i32 33
  %2725 = getelementptr inbounds %struct.Reg, %struct.Reg* %2724, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %2725 to i64*
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2727 = getelementptr inbounds %struct.GPR, %struct.GPR* %2726, i32 0, i32 7
  %2728 = getelementptr inbounds %struct.Reg, %struct.Reg* %2727, i32 0, i32 0
  %RDX.i779 = bitcast %union.anon* %2728 to i64*
  %2729 = load i64, i64* %PC.i778
  %2730 = add i64 %2729, 7
  store i64 %2730, i64* %PC.i778
  %2731 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %2732 = zext i32 %2731 to i64
  store i64 %2732, i64* %RDX.i779, align 8
  store %struct.Memory* %loadMem_43b4bd, %struct.Memory** %MEMORY
  %loadMem_43b4c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2734 = getelementptr inbounds %struct.GPR, %struct.GPR* %2733, i32 0, i32 33
  %2735 = getelementptr inbounds %struct.Reg, %struct.Reg* %2734, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %2735 to i64*
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2737 = getelementptr inbounds %struct.GPR, %struct.GPR* %2736, i32 0, i32 7
  %2738 = getelementptr inbounds %struct.Reg, %struct.Reg* %2737, i32 0, i32 0
  %RDX.i777 = bitcast %union.anon* %2738 to i64*
  %2739 = load i64, i64* %RDX.i777
  %2740 = load i64, i64* %PC.i776
  %2741 = add i64 %2740, 3
  store i64 %2741, i64* %PC.i776
  %2742 = and i64 2, %2739
  %2743 = trunc i64 %2742 to i32
  store i64 %2742, i64* %RDX.i777, align 8
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2744, align 1
  %2745 = and i32 %2743, 255
  %2746 = call i32 @llvm.ctpop.i32(i32 %2745)
  %2747 = trunc i32 %2746 to i8
  %2748 = and i8 %2747, 1
  %2749 = xor i8 %2748, 1
  %2750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2749, i8* %2750, align 1
  %2751 = icmp eq i32 %2743, 0
  %2752 = zext i1 %2751 to i8
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2752, i8* %2753, align 1
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2754, align 1
  %2755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2755, align 1
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2756, align 1
  store %struct.Memory* %loadMem_43b4c4, %struct.Memory** %MEMORY
  %loadMem_43b4c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2758 = getelementptr inbounds %struct.GPR, %struct.GPR* %2757, i32 0, i32 33
  %2759 = getelementptr inbounds %struct.Reg, %struct.Reg* %2758, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %2759 to i64*
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2761 = getelementptr inbounds %struct.GPR, %struct.GPR* %2760, i32 0, i32 7
  %2762 = getelementptr inbounds %struct.Reg, %struct.Reg* %2761, i32 0, i32 0
  %EDX.i775 = bitcast %union.anon* %2762 to i32*
  %2763 = load i32, i32* %EDX.i775
  %2764 = zext i32 %2763 to i64
  %2765 = load i64, i64* %PC.i774
  %2766 = add i64 %2765, 3
  store i64 %2766, i64* %PC.i774
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2767, align 1
  %2768 = and i32 %2763, 255
  %2769 = call i32 @llvm.ctpop.i32(i32 %2768)
  %2770 = trunc i32 %2769 to i8
  %2771 = and i8 %2770, 1
  %2772 = xor i8 %2771, 1
  %2773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2772, i8* %2773, align 1
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2774, align 1
  %2775 = icmp eq i32 %2763, 0
  %2776 = zext i1 %2775 to i8
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2776, i8* %2777, align 1
  %2778 = lshr i32 %2763, 31
  %2779 = trunc i32 %2778 to i8
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2779, i8* %2780, align 1
  %2781 = lshr i32 %2763, 31
  %2782 = xor i32 %2778, %2781
  %2783 = add i32 %2782, %2781
  %2784 = icmp eq i32 %2783, 2
  %2785 = zext i1 %2784 to i8
  %2786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2785, i8* %2786, align 1
  store %struct.Memory* %loadMem_43b4c7, %struct.Memory** %MEMORY
  %loadMem_43b4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2788 = getelementptr inbounds %struct.GPR, %struct.GPR* %2787, i32 0, i32 33
  %2789 = getelementptr inbounds %struct.Reg, %struct.Reg* %2788, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %2789 to i64*
  %2790 = load i64, i64* %PC.i773
  %2791 = add i64 %2790, 11
  %2792 = load i64, i64* %PC.i773
  %2793 = add i64 %2792, 6
  %2794 = load i64, i64* %PC.i773
  %2795 = add i64 %2794, 6
  store i64 %2795, i64* %PC.i773
  %2796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2797 = load i8, i8* %2796, align 1
  %2798 = icmp eq i8 %2797, 0
  %2799 = zext i1 %2798 to i8
  store i8 %2799, i8* %BRANCH_TAKEN, align 1
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2801 = select i1 %2798, i64 %2791, i64 %2793
  store i64 %2801, i64* %2800, align 8
  store %struct.Memory* %loadMem_43b4ca, %struct.Memory** %MEMORY
  %loadBr_43b4ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b4ca = icmp eq i8 %loadBr_43b4ca, 1
  br i1 %cmpBr_43b4ca, label %block_.L_43b4d5, label %block_43b4d0

block_43b4d0:                                     ; preds = %block_43b4ad
  %loadMem_43b4d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2803 = getelementptr inbounds %struct.GPR, %struct.GPR* %2802, i32 0, i32 33
  %2804 = getelementptr inbounds %struct.Reg, %struct.Reg* %2803, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %2804 to i64*
  %2805 = load i64, i64* %PC.i772
  %2806 = add i64 %2805, 25
  %2807 = load i64, i64* %PC.i772
  %2808 = add i64 %2807, 5
  store i64 %2808, i64* %PC.i772
  %2809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2806, i64* %2809, align 8
  store %struct.Memory* %loadMem_43b4d0, %struct.Memory** %MEMORY
  br label %block_.L_43b4e9

block_.L_43b4d5:                                  ; preds = %block_43b4ad
  %loadMem_43b4d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2811 = getelementptr inbounds %struct.GPR, %struct.GPR* %2810, i32 0, i32 33
  %2812 = getelementptr inbounds %struct.Reg, %struct.Reg* %2811, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %2812 to i64*
  %2813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2814 = getelementptr inbounds %struct.GPR, %struct.GPR* %2813, i32 0, i32 11
  %2815 = getelementptr inbounds %struct.Reg, %struct.Reg* %2814, i32 0, i32 0
  %RDI.i771 = bitcast %union.anon* %2815 to i64*
  %2816 = load i64, i64* %PC.i770
  %2817 = add i64 %2816, 10
  store i64 %2817, i64* %PC.i770
  store i64 ptrtoint (%G__0x586073_type* @G__0x586073 to i64), i64* %RDI.i771, align 8
  store %struct.Memory* %loadMem_43b4d5, %struct.Memory** %MEMORY
  %loadMem_43b4df = load %struct.Memory*, %struct.Memory** %MEMORY
  %2818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2819 = getelementptr inbounds %struct.GPR, %struct.GPR* %2818, i32 0, i32 33
  %2820 = getelementptr inbounds %struct.Reg, %struct.Reg* %2819, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %2820 to i64*
  %2821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2822 = getelementptr inbounds %struct.GPR, %struct.GPR* %2821, i32 0, i32 1
  %2823 = getelementptr inbounds %struct.Reg, %struct.Reg* %2822, i32 0, i32 0
  %2824 = bitcast %union.anon* %2823 to %struct.anon.2*
  %AL.i769 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2824, i32 0, i32 0
  %2825 = load i64, i64* %PC.i768
  %2826 = add i64 %2825, 2
  store i64 %2826, i64* %PC.i768
  store i8 0, i8* %AL.i769, align 1
  store %struct.Memory* %loadMem_43b4df, %struct.Memory** %MEMORY
  %loadMem1_43b4e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2828 = getelementptr inbounds %struct.GPR, %struct.GPR* %2827, i32 0, i32 33
  %2829 = getelementptr inbounds %struct.Reg, %struct.Reg* %2828, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %2829 to i64*
  %2830 = load i64, i64* %PC.i767
  %2831 = add i64 %2830, 92367
  %2832 = load i64, i64* %PC.i767
  %2833 = add i64 %2832, 5
  %2834 = load i64, i64* %PC.i767
  %2835 = add i64 %2834, 5
  store i64 %2835, i64* %PC.i767
  %2836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2837 = load i64, i64* %2836, align 8
  %2838 = add i64 %2837, -8
  %2839 = inttoptr i64 %2838 to i64*
  store i64 %2833, i64* %2839
  store i64 %2838, i64* %2836, align 8
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2831, i64* %2840, align 8
  store %struct.Memory* %loadMem1_43b4e1, %struct.Memory** %MEMORY
  %loadMem2_43b4e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b4e1 = load i64, i64* %3
  %call2_43b4e1 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_43b4e1, %struct.Memory* %loadMem2_43b4e1)
  store %struct.Memory* %call2_43b4e1, %struct.Memory** %MEMORY
  %loadMem_43b4e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2842 = getelementptr inbounds %struct.GPR, %struct.GPR* %2841, i32 0, i32 33
  %2843 = getelementptr inbounds %struct.Reg, %struct.Reg* %2842, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %2843 to i64*
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2845 = getelementptr inbounds %struct.GPR, %struct.GPR* %2844, i32 0, i32 1
  %2846 = getelementptr inbounds %struct.Reg, %struct.Reg* %2845, i32 0, i32 0
  %EAX.i765 = bitcast %union.anon* %2846 to i32*
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2848 = getelementptr inbounds %struct.GPR, %struct.GPR* %2847, i32 0, i32 15
  %2849 = getelementptr inbounds %struct.Reg, %struct.Reg* %2848, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %2849 to i64*
  %2850 = load i64, i64* %RBP.i766
  %2851 = sub i64 %2850, 120
  %2852 = load i32, i32* %EAX.i765
  %2853 = zext i32 %2852 to i64
  %2854 = load i64, i64* %PC.i764
  %2855 = add i64 %2854, 3
  store i64 %2855, i64* %PC.i764
  %2856 = inttoptr i64 %2851 to i32*
  store i32 %2852, i32* %2856
  store %struct.Memory* %loadMem_43b4e6, %struct.Memory** %MEMORY
  br label %block_.L_43b4e9

block_.L_43b4e9:                                  ; preds = %block_.L_43b4d5, %block_43b4d0
  %loadMem_43b4e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2858 = getelementptr inbounds %struct.GPR, %struct.GPR* %2857, i32 0, i32 33
  %2859 = getelementptr inbounds %struct.Reg, %struct.Reg* %2858, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %2859 to i64*
  %2860 = load i64, i64* %PC.i763
  %2861 = add i64 %2860, 5
  %2862 = load i64, i64* %PC.i763
  %2863 = add i64 %2862, 5
  store i64 %2863, i64* %PC.i763
  %2864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2861, i64* %2864, align 8
  store %struct.Memory* %loadMem_43b4e9, %struct.Memory** %MEMORY
  br label %block_.L_43b4ee

block_.L_43b4ee:                                  ; preds = %block_.L_43b4e9, %block_.L_43b49a
  %loadMem_43b4ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2866 = getelementptr inbounds %struct.GPR, %struct.GPR* %2865, i32 0, i32 33
  %2867 = getelementptr inbounds %struct.Reg, %struct.Reg* %2866, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %2867 to i64*
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2869 = getelementptr inbounds %struct.GPR, %struct.GPR* %2868, i32 0, i32 1
  %2870 = getelementptr inbounds %struct.Reg, %struct.Reg* %2869, i32 0, i32 0
  %EAX.i761 = bitcast %union.anon* %2870 to i32*
  %2871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2872 = getelementptr inbounds %struct.GPR, %struct.GPR* %2871, i32 0, i32 1
  %2873 = getelementptr inbounds %struct.Reg, %struct.Reg* %2872, i32 0, i32 0
  %RAX.i762 = bitcast %union.anon* %2873 to i64*
  %2874 = load i64, i64* %RAX.i762
  %2875 = load i32, i32* %EAX.i761
  %2876 = zext i32 %2875 to i64
  %2877 = load i64, i64* %PC.i760
  %2878 = add i64 %2877, 2
  store i64 %2878, i64* %PC.i760
  %2879 = xor i64 %2876, %2874
  %2880 = trunc i64 %2879 to i32
  %2881 = and i64 %2879, 4294967295
  store i64 %2881, i64* %RAX.i762, align 8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2882, align 1
  %2883 = and i32 %2880, 255
  %2884 = call i32 @llvm.ctpop.i32(i32 %2883)
  %2885 = trunc i32 %2884 to i8
  %2886 = and i8 %2885, 1
  %2887 = xor i8 %2886, 1
  %2888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2887, i8* %2888, align 1
  %2889 = icmp eq i32 %2880, 0
  %2890 = zext i1 %2889 to i8
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2890, i8* %2891, align 1
  %2892 = lshr i32 %2880, 31
  %2893 = trunc i32 %2892 to i8
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2893, i8* %2894, align 1
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2895, align 1
  %2896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2896, align 1
  store %struct.Memory* %loadMem_43b4ee, %struct.Memory** %MEMORY
  %loadMem_43b4f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2898 = getelementptr inbounds %struct.GPR, %struct.GPR* %2897, i32 0, i32 33
  %2899 = getelementptr inbounds %struct.Reg, %struct.Reg* %2898, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %2899 to i64*
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2901 = getelementptr inbounds %struct.GPR, %struct.GPR* %2900, i32 0, i32 11
  %2902 = getelementptr inbounds %struct.Reg, %struct.Reg* %2901, i32 0, i32 0
  %RDI.i758 = bitcast %union.anon* %2902 to i64*
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2904 = getelementptr inbounds %struct.GPR, %struct.GPR* %2903, i32 0, i32 15
  %2905 = getelementptr inbounds %struct.Reg, %struct.Reg* %2904, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %2905 to i64*
  %2906 = load i64, i64* %RBP.i759
  %2907 = sub i64 %2906, 4
  %2908 = load i64, i64* %PC.i757
  %2909 = add i64 %2908, 3
  store i64 %2909, i64* %PC.i757
  %2910 = inttoptr i64 %2907 to i32*
  %2911 = load i32, i32* %2910
  %2912 = zext i32 %2911 to i64
  store i64 %2912, i64* %RDI.i758, align 8
  store %struct.Memory* %loadMem_43b4f0, %struct.Memory** %MEMORY
  %loadMem_43b4f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2914 = getelementptr inbounds %struct.GPR, %struct.GPR* %2913, i32 0, i32 33
  %2915 = getelementptr inbounds %struct.Reg, %struct.Reg* %2914, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %2915 to i64*
  %2916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2917 = getelementptr inbounds %struct.GPR, %struct.GPR* %2916, i32 0, i32 9
  %2918 = getelementptr inbounds %struct.Reg, %struct.Reg* %2917, i32 0, i32 0
  %RSI.i755 = bitcast %union.anon* %2918 to i64*
  %2919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2920 = getelementptr inbounds %struct.GPR, %struct.GPR* %2919, i32 0, i32 15
  %2921 = getelementptr inbounds %struct.Reg, %struct.Reg* %2920, i32 0, i32 0
  %RBP.i756 = bitcast %union.anon* %2921 to i64*
  %2922 = load i64, i64* %RBP.i756
  %2923 = sub i64 %2922, 32
  %2924 = load i64, i64* %PC.i754
  %2925 = add i64 %2924, 4
  store i64 %2925, i64* %PC.i754
  %2926 = inttoptr i64 %2923 to i64*
  %2927 = load i64, i64* %2926
  store i64 %2927, i64* %RSI.i755, align 8
  store %struct.Memory* %loadMem_43b4f3, %struct.Memory** %MEMORY
  %loadMem_43b4f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2929 = getelementptr inbounds %struct.GPR, %struct.GPR* %2928, i32 0, i32 33
  %2930 = getelementptr inbounds %struct.Reg, %struct.Reg* %2929, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %2930 to i64*
  %2931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2932 = getelementptr inbounds %struct.GPR, %struct.GPR* %2931, i32 0, i32 7
  %2933 = getelementptr inbounds %struct.Reg, %struct.Reg* %2932, i32 0, i32 0
  %RDX.i752 = bitcast %union.anon* %2933 to i64*
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2935 = getelementptr inbounds %struct.GPR, %struct.GPR* %2934, i32 0, i32 15
  %2936 = getelementptr inbounds %struct.Reg, %struct.Reg* %2935, i32 0, i32 0
  %RBP.i753 = bitcast %union.anon* %2936 to i64*
  %2937 = load i64, i64* %RBP.i753
  %2938 = sub i64 %2937, 40
  %2939 = load i64, i64* %PC.i751
  %2940 = add i64 %2939, 4
  store i64 %2940, i64* %PC.i751
  %2941 = inttoptr i64 %2938 to i64*
  %2942 = load i64, i64* %2941
  store i64 %2942, i64* %RDX.i752, align 8
  store %struct.Memory* %loadMem_43b4f7, %struct.Memory** %MEMORY
  %loadMem_43b4fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2944 = getelementptr inbounds %struct.GPR, %struct.GPR* %2943, i32 0, i32 33
  %2945 = getelementptr inbounds %struct.Reg, %struct.Reg* %2944, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %2945 to i64*
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2947 = getelementptr inbounds %struct.GPR, %struct.GPR* %2946, i32 0, i32 5
  %2948 = getelementptr inbounds %struct.Reg, %struct.Reg* %2947, i32 0, i32 0
  %RCX.i749 = bitcast %union.anon* %2948 to i64*
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2950 = getelementptr inbounds %struct.GPR, %struct.GPR* %2949, i32 0, i32 15
  %2951 = getelementptr inbounds %struct.Reg, %struct.Reg* %2950, i32 0, i32 0
  %RBP.i750 = bitcast %union.anon* %2951 to i64*
  %2952 = load i64, i64* %RBP.i750
  %2953 = sub i64 %2952, 16
  %2954 = load i64, i64* %PC.i748
  %2955 = add i64 %2954, 4
  store i64 %2955, i64* %PC.i748
  %2956 = inttoptr i64 %2953 to i64*
  %2957 = load i64, i64* %2956
  store i64 %2957, i64* %RCX.i749, align 8
  store %struct.Memory* %loadMem_43b4fb, %struct.Memory** %MEMORY
  %loadMem_43b4ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %2958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2959 = getelementptr inbounds %struct.GPR, %struct.GPR* %2958, i32 0, i32 33
  %2960 = getelementptr inbounds %struct.Reg, %struct.Reg* %2959, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %2960 to i64*
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2962 = getelementptr inbounds %struct.GPR, %struct.GPR* %2961, i32 0, i32 15
  %2963 = getelementptr inbounds %struct.Reg, %struct.Reg* %2962, i32 0, i32 0
  %RBP.i746 = bitcast %union.anon* %2963 to i64*
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2965 = getelementptr inbounds %struct.GPR, %struct.GPR* %2964, i32 0, i32 17
  %2966 = getelementptr inbounds %struct.Reg, %struct.Reg* %2965, i32 0, i32 0
  %R8.i747 = bitcast %union.anon* %2966 to i64*
  %2967 = load i64, i64* %RBP.i746
  %2968 = sub i64 %2967, 48
  %2969 = load i64, i64* %PC.i745
  %2970 = add i64 %2969, 4
  store i64 %2970, i64* %PC.i745
  %2971 = inttoptr i64 %2968 to i64*
  %2972 = load i64, i64* %2971
  store i64 %2972, i64* %R8.i747, align 8
  store %struct.Memory* %loadMem_43b4ff, %struct.Memory** %MEMORY
  %loadMem_43b503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2974 = getelementptr inbounds %struct.GPR, %struct.GPR* %2973, i32 0, i32 33
  %2975 = getelementptr inbounds %struct.Reg, %struct.Reg* %2974, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %2975 to i64*
  %2976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2977 = getelementptr inbounds %struct.GPR, %struct.GPR* %2976, i32 0, i32 15
  %2978 = getelementptr inbounds %struct.Reg, %struct.Reg* %2977, i32 0, i32 0
  %RBP.i743 = bitcast %union.anon* %2978 to i64*
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2980 = getelementptr inbounds %struct.GPR, %struct.GPR* %2979, i32 0, i32 19
  %2981 = getelementptr inbounds %struct.Reg, %struct.Reg* %2980, i32 0, i32 0
  %R9.i744 = bitcast %union.anon* %2981 to i64*
  %2982 = load i64, i64* %RBP.i743
  %2983 = sub i64 %2982, 56
  %2984 = load i64, i64* %PC.i742
  %2985 = add i64 %2984, 4
  store i64 %2985, i64* %PC.i742
  %2986 = inttoptr i64 %2983 to i64*
  %2987 = load i64, i64* %2986
  store i64 %2987, i64* %R9.i744, align 8
  store %struct.Memory* %loadMem_43b503, %struct.Memory** %MEMORY
  %loadMem_43b507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2989 = getelementptr inbounds %struct.GPR, %struct.GPR* %2988, i32 0, i32 33
  %2990 = getelementptr inbounds %struct.Reg, %struct.Reg* %2989, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %2990 to i64*
  %2991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2992 = getelementptr inbounds %struct.GPR, %struct.GPR* %2991, i32 0, i32 13
  %2993 = getelementptr inbounds %struct.Reg, %struct.Reg* %2992, i32 0, i32 0
  %RSP.i741 = bitcast %union.anon* %2993 to i64*
  %2994 = load i64, i64* %RSP.i741
  %2995 = load i64, i64* %PC.i740
  %2996 = add i64 %2995, 7
  store i64 %2996, i64* %PC.i740
  %2997 = inttoptr i64 %2994 to i32*
  store i32 0, i32* %2997
  store %struct.Memory* %loadMem_43b507, %struct.Memory** %MEMORY
  %loadMem_43b50e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2999 = getelementptr inbounds %struct.GPR, %struct.GPR* %2998, i32 0, i32 33
  %3000 = getelementptr inbounds %struct.Reg, %struct.Reg* %2999, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %3000 to i64*
  %3001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3002 = getelementptr inbounds %struct.GPR, %struct.GPR* %3001, i32 0, i32 13
  %3003 = getelementptr inbounds %struct.Reg, %struct.Reg* %3002, i32 0, i32 0
  %RSP.i739 = bitcast %union.anon* %3003 to i64*
  %3004 = load i64, i64* %RSP.i739
  %3005 = add i64 %3004, 8
  %3006 = load i64, i64* %PC.i738
  %3007 = add i64 %3006, 8
  store i64 %3007, i64* %PC.i738
  %3008 = inttoptr i64 %3005 to i32*
  store i32 0, i32* %3008
  store %struct.Memory* %loadMem_43b50e, %struct.Memory** %MEMORY
  %loadMem_43b516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3010 = getelementptr inbounds %struct.GPR, %struct.GPR* %3009, i32 0, i32 33
  %3011 = getelementptr inbounds %struct.Reg, %struct.Reg* %3010, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %3011 to i64*
  %3012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3013 = getelementptr inbounds %struct.GPR, %struct.GPR* %3012, i32 0, i32 1
  %3014 = getelementptr inbounds %struct.Reg, %struct.Reg* %3013, i32 0, i32 0
  %EAX.i736 = bitcast %union.anon* %3014 to i32*
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3016 = getelementptr inbounds %struct.GPR, %struct.GPR* %3015, i32 0, i32 15
  %3017 = getelementptr inbounds %struct.Reg, %struct.Reg* %3016, i32 0, i32 0
  %RBP.i737 = bitcast %union.anon* %3017 to i64*
  %3018 = load i64, i64* %RBP.i737
  %3019 = sub i64 %3018, 124
  %3020 = load i32, i32* %EAX.i736
  %3021 = zext i32 %3020 to i64
  %3022 = load i64, i64* %PC.i735
  %3023 = add i64 %3022, 3
  store i64 %3023, i64* %PC.i735
  %3024 = inttoptr i64 %3019 to i32*
  store i32 %3020, i32* %3024
  store %struct.Memory* %loadMem_43b516, %struct.Memory** %MEMORY
  %loadMem1_43b519 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3026 = getelementptr inbounds %struct.GPR, %struct.GPR* %3025, i32 0, i32 33
  %3027 = getelementptr inbounds %struct.Reg, %struct.Reg* %3026, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %3027 to i64*
  %3028 = load i64, i64* %PC.i734
  %3029 = add i64 %3028, -5305
  %3030 = load i64, i64* %PC.i734
  %3031 = add i64 %3030, 5
  %3032 = load i64, i64* %PC.i734
  %3033 = add i64 %3032, 5
  store i64 %3033, i64* %PC.i734
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3035 = load i64, i64* %3034, align 8
  %3036 = add i64 %3035, -8
  %3037 = inttoptr i64 %3036 to i64*
  store i64 %3031, i64* %3037
  store i64 %3036, i64* %3034, align 8
  %3038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3029, i64* %3038, align 8
  store %struct.Memory* %loadMem1_43b519, %struct.Memory** %MEMORY
  %loadMem2_43b519 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b519 = load i64, i64* %3
  %call2_43b519 = call %struct.Memory* @sub_43a060.read_eye(%struct.State* %0, i64 %loadPC_43b519, %struct.Memory* %loadMem2_43b519)
  store %struct.Memory* %call2_43b519, %struct.Memory** %MEMORY
  %loadMem_43b51e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3040 = getelementptr inbounds %struct.GPR, %struct.GPR* %3039, i32 0, i32 33
  %3041 = getelementptr inbounds %struct.Reg, %struct.Reg* %3040, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %3041 to i64*
  %3042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3043 = getelementptr inbounds %struct.GPR, %struct.GPR* %3042, i32 0, i32 1
  %3044 = getelementptr inbounds %struct.Reg, %struct.Reg* %3043, i32 0, i32 0
  %EAX.i733 = bitcast %union.anon* %3044 to i32*
  %3045 = load i32, i32* %EAX.i733
  %3046 = zext i32 %3045 to i64
  %3047 = load i64, i64* %PC.i732
  %3048 = add i64 %3047, 3
  store i64 %3048, i64* %PC.i732
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3049, align 1
  %3050 = and i32 %3045, 255
  %3051 = call i32 @llvm.ctpop.i32(i32 %3050)
  %3052 = trunc i32 %3051 to i8
  %3053 = and i8 %3052, 1
  %3054 = xor i8 %3053, 1
  %3055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3054, i8* %3055, align 1
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3056, align 1
  %3057 = icmp eq i32 %3045, 0
  %3058 = zext i1 %3057 to i8
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3058, i8* %3059, align 1
  %3060 = lshr i32 %3045, 31
  %3061 = trunc i32 %3060 to i8
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3061, i8* %3062, align 1
  %3063 = lshr i32 %3045, 31
  %3064 = xor i32 %3060, %3063
  %3065 = add i32 %3064, %3063
  %3066 = icmp eq i32 %3065, 2
  %3067 = zext i1 %3066 to i8
  %3068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3067, i8* %3068, align 1
  store %struct.Memory* %loadMem_43b51e, %struct.Memory** %MEMORY
  %loadMem_43b521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3070 = getelementptr inbounds %struct.GPR, %struct.GPR* %3069, i32 0, i32 33
  %3071 = getelementptr inbounds %struct.Reg, %struct.Reg* %3070, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %3071 to i64*
  %3072 = load i64, i64* %PC.i731
  %3073 = add i64 %3072, 180
  %3074 = load i64, i64* %PC.i731
  %3075 = add i64 %3074, 6
  %3076 = load i64, i64* %PC.i731
  %3077 = add i64 %3076, 6
  store i64 %3077, i64* %PC.i731
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3079 = load i8, i8* %3078, align 1
  store i8 %3079, i8* %BRANCH_TAKEN, align 1
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3081 = icmp ne i8 %3079, 0
  %3082 = select i1 %3081, i64 %3073, i64 %3075
  store i64 %3082, i64* %3080, align 8
  store %struct.Memory* %loadMem_43b521, %struct.Memory** %MEMORY
  %loadBr_43b521 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b521 = icmp eq i8 %loadBr_43b521, 1
  br i1 %cmpBr_43b521, label %block_.L_43b5d5, label %block_43b527

block_43b527:                                     ; preds = %block_.L_43b4ee
  %loadMem_43b527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3084 = getelementptr inbounds %struct.GPR, %struct.GPR* %3083, i32 0, i32 33
  %3085 = getelementptr inbounds %struct.Reg, %struct.Reg* %3084, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %3085 to i64*
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3087 = getelementptr inbounds %struct.GPR, %struct.GPR* %3086, i32 0, i32 11
  %3088 = getelementptr inbounds %struct.Reg, %struct.Reg* %3087, i32 0, i32 0
  %RDI.i729 = bitcast %union.anon* %3088 to i64*
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3090 = getelementptr inbounds %struct.GPR, %struct.GPR* %3089, i32 0, i32 15
  %3091 = getelementptr inbounds %struct.Reg, %struct.Reg* %3090, i32 0, i32 0
  %RBP.i730 = bitcast %union.anon* %3091 to i64*
  %3092 = load i64, i64* %RBP.i730
  %3093 = sub i64 %3092, 16
  %3094 = load i64, i64* %PC.i728
  %3095 = add i64 %3094, 4
  store i64 %3095, i64* %PC.i728
  %3096 = inttoptr i64 %3093 to i64*
  %3097 = load i64, i64* %3096
  store i64 %3097, i64* %RDI.i729, align 8
  store %struct.Memory* %loadMem_43b527, %struct.Memory** %MEMORY
  %loadMem1_43b52b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3099 = getelementptr inbounds %struct.GPR, %struct.GPR* %3098, i32 0, i32 33
  %3100 = getelementptr inbounds %struct.Reg, %struct.Reg* %3099, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %3100 to i64*
  %3101 = load i64, i64* %PC.i727
  %3102 = add i64 %3101, 1477
  %3103 = load i64, i64* %PC.i727
  %3104 = add i64 %3103, 5
  %3105 = load i64, i64* %PC.i727
  %3106 = add i64 %3105, 5
  store i64 %3106, i64* %PC.i727
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3108 = load i64, i64* %3107, align 8
  %3109 = add i64 %3108, -8
  %3110 = inttoptr i64 %3109 to i64*
  store i64 %3104, i64* %3110
  store i64 %3109, i64* %3107, align 8
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3102, i64* %3111, align 8
  store %struct.Memory* %loadMem1_43b52b, %struct.Memory** %MEMORY
  %loadMem2_43b52b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b52b = load i64, i64* %3
  %call2_43b52b = call %struct.Memory* @sub_43baf0.min_eyes(%struct.State* %0, i64 %loadPC_43b52b, %struct.Memory* %loadMem2_43b52b)
  store %struct.Memory* %call2_43b52b, %struct.Memory** %MEMORY
  %loadMem_43b530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3113 = getelementptr inbounds %struct.GPR, %struct.GPR* %3112, i32 0, i32 33
  %3114 = getelementptr inbounds %struct.Reg, %struct.Reg* %3113, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %3114 to i64*
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3116 = getelementptr inbounds %struct.GPR, %struct.GPR* %3115, i32 0, i32 1
  %3117 = getelementptr inbounds %struct.Reg, %struct.Reg* %3116, i32 0, i32 0
  %RAX.i725 = bitcast %union.anon* %3117 to i64*
  %3118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3119 = getelementptr inbounds %struct.GPR, %struct.GPR* %3118, i32 0, i32 15
  %3120 = getelementptr inbounds %struct.Reg, %struct.Reg* %3119, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %3120 to i64*
  %3121 = load i64, i64* %RAX.i725
  %3122 = load i64, i64* %RBP.i726
  %3123 = sub i64 %3122, 68
  %3124 = load i64, i64* %PC.i724
  %3125 = add i64 %3124, 3
  store i64 %3125, i64* %PC.i724
  %3126 = trunc i64 %3121 to i32
  %3127 = inttoptr i64 %3123 to i32*
  %3128 = load i32, i32* %3127
  %3129 = sub i32 %3126, %3128
  %3130 = zext i32 %3129 to i64
  store i64 %3130, i64* %RAX.i725, align 8
  %3131 = icmp ult i32 %3126, %3128
  %3132 = zext i1 %3131 to i8
  %3133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3132, i8* %3133, align 1
  %3134 = and i32 %3129, 255
  %3135 = call i32 @llvm.ctpop.i32(i32 %3134)
  %3136 = trunc i32 %3135 to i8
  %3137 = and i8 %3136, 1
  %3138 = xor i8 %3137, 1
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3138, i8* %3139, align 1
  %3140 = xor i32 %3128, %3126
  %3141 = xor i32 %3140, %3129
  %3142 = lshr i32 %3141, 4
  %3143 = trunc i32 %3142 to i8
  %3144 = and i8 %3143, 1
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3144, i8* %3145, align 1
  %3146 = icmp eq i32 %3129, 0
  %3147 = zext i1 %3146 to i8
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3147, i8* %3148, align 1
  %3149 = lshr i32 %3129, 31
  %3150 = trunc i32 %3149 to i8
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3150, i8* %3151, align 1
  %3152 = lshr i32 %3126, 31
  %3153 = lshr i32 %3128, 31
  %3154 = xor i32 %3153, %3152
  %3155 = xor i32 %3149, %3152
  %3156 = add i32 %3155, %3154
  %3157 = icmp eq i32 %3156, 2
  %3158 = zext i1 %3157 to i8
  %3159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3158, i8* %3159, align 1
  store %struct.Memory* %loadMem_43b530, %struct.Memory** %MEMORY
  %loadMem_43b533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3161 = getelementptr inbounds %struct.GPR, %struct.GPR* %3160, i32 0, i32 33
  %3162 = getelementptr inbounds %struct.Reg, %struct.Reg* %3161, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %3162 to i64*
  %3163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3164 = getelementptr inbounds %struct.GPR, %struct.GPR* %3163, i32 0, i32 11
  %3165 = getelementptr inbounds %struct.Reg, %struct.Reg* %3164, i32 0, i32 0
  %RDI.i722 = bitcast %union.anon* %3165 to i64*
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 15
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %RBP.i723 = bitcast %union.anon* %3168 to i64*
  %3169 = load i64, i64* %RBP.i723
  %3170 = sub i64 %3169, 24
  %3171 = load i64, i64* %PC.i721
  %3172 = add i64 %3171, 4
  store i64 %3172, i64* %PC.i721
  %3173 = inttoptr i64 %3170 to i64*
  %3174 = load i64, i64* %3173
  store i64 %3174, i64* %RDI.i722, align 8
  store %struct.Memory* %loadMem_43b533, %struct.Memory** %MEMORY
  %loadMem_43b537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3176 = getelementptr inbounds %struct.GPR, %struct.GPR* %3175, i32 0, i32 33
  %3177 = getelementptr inbounds %struct.Reg, %struct.Reg* %3176, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %3177 to i64*
  %3178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3179 = getelementptr inbounds %struct.GPR, %struct.GPR* %3178, i32 0, i32 1
  %3180 = getelementptr inbounds %struct.Reg, %struct.Reg* %3179, i32 0, i32 0
  %EAX.i719 = bitcast %union.anon* %3180 to i32*
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3182 = getelementptr inbounds %struct.GPR, %struct.GPR* %3181, i32 0, i32 11
  %3183 = getelementptr inbounds %struct.Reg, %struct.Reg* %3182, i32 0, i32 0
  %RDI.i720 = bitcast %union.anon* %3183 to i64*
  %3184 = load i64, i64* %RDI.i720
  %3185 = load i32, i32* %EAX.i719
  %3186 = zext i32 %3185 to i64
  %3187 = load i64, i64* %PC.i718
  %3188 = add i64 %3187, 2
  store i64 %3188, i64* %PC.i718
  %3189 = inttoptr i64 %3184 to i32*
  store i32 %3185, i32* %3189
  store %struct.Memory* %loadMem_43b537, %struct.Memory** %MEMORY
  %loadMem_43b539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3191 = getelementptr inbounds %struct.GPR, %struct.GPR* %3190, i32 0, i32 33
  %3192 = getelementptr inbounds %struct.Reg, %struct.Reg* %3191, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %3192 to i64*
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3194 = getelementptr inbounds %struct.GPR, %struct.GPR* %3193, i32 0, i32 11
  %3195 = getelementptr inbounds %struct.Reg, %struct.Reg* %3194, i32 0, i32 0
  %RDI.i716 = bitcast %union.anon* %3195 to i64*
  %3196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3197 = getelementptr inbounds %struct.GPR, %struct.GPR* %3196, i32 0, i32 15
  %3198 = getelementptr inbounds %struct.Reg, %struct.Reg* %3197, i32 0, i32 0
  %RBP.i717 = bitcast %union.anon* %3198 to i64*
  %3199 = load i64, i64* %RBP.i717
  %3200 = sub i64 %3199, 48
  %3201 = load i64, i64* %PC.i715
  %3202 = add i64 %3201, 4
  store i64 %3202, i64* %PC.i715
  %3203 = inttoptr i64 %3200 to i64*
  %3204 = load i64, i64* %3203
  store i64 %3204, i64* %RDI.i716, align 8
  store %struct.Memory* %loadMem_43b539, %struct.Memory** %MEMORY
  %loadMem_43b53d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3206 = getelementptr inbounds %struct.GPR, %struct.GPR* %3205, i32 0, i32 33
  %3207 = getelementptr inbounds %struct.Reg, %struct.Reg* %3206, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %3207 to i64*
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3209 = getelementptr inbounds %struct.GPR, %struct.GPR* %3208, i32 0, i32 5
  %3210 = getelementptr inbounds %struct.Reg, %struct.Reg* %3209, i32 0, i32 0
  %RCX.i713 = bitcast %union.anon* %3210 to i64*
  %3211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3212 = getelementptr inbounds %struct.GPR, %struct.GPR* %3211, i32 0, i32 15
  %3213 = getelementptr inbounds %struct.Reg, %struct.Reg* %3212, i32 0, i32 0
  %RBP.i714 = bitcast %union.anon* %3213 to i64*
  %3214 = load i64, i64* %RBP.i714
  %3215 = sub i64 %3214, 4
  %3216 = load i64, i64* %PC.i712
  %3217 = add i64 %3216, 4
  store i64 %3217, i64* %PC.i712
  %3218 = inttoptr i64 %3215 to i32*
  %3219 = load i32, i32* %3218
  %3220 = sext i32 %3219 to i64
  store i64 %3220, i64* %RCX.i713, align 8
  store %struct.Memory* %loadMem_43b53d, %struct.Memory** %MEMORY
  %loadMem_43b541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3222 = getelementptr inbounds %struct.GPR, %struct.GPR* %3221, i32 0, i32 33
  %3223 = getelementptr inbounds %struct.Reg, %struct.Reg* %3222, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %3223 to i64*
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3225 = getelementptr inbounds %struct.GPR, %struct.GPR* %3224, i32 0, i32 5
  %3226 = getelementptr inbounds %struct.Reg, %struct.Reg* %3225, i32 0, i32 0
  %RCX.i711 = bitcast %union.anon* %3226 to i64*
  %3227 = load i64, i64* %RCX.i711
  %3228 = load i64, i64* %PC.i710
  %3229 = add i64 %3228, 4
  store i64 %3229, i64* %PC.i710
  %3230 = sext i64 %3227 to i128
  %3231 = and i128 %3230, -18446744073709551616
  %3232 = zext i64 %3227 to i128
  %3233 = or i128 %3231, %3232
  %3234 = mul i128 36, %3233
  %3235 = trunc i128 %3234 to i64
  store i64 %3235, i64* %RCX.i711, align 8
  %3236 = sext i64 %3235 to i128
  %3237 = icmp ne i128 %3236, %3234
  %3238 = zext i1 %3237 to i8
  %3239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3238, i8* %3239, align 1
  %3240 = trunc i128 %3234 to i32
  %3241 = and i32 %3240, 255
  %3242 = call i32 @llvm.ctpop.i32(i32 %3241)
  %3243 = trunc i32 %3242 to i8
  %3244 = and i8 %3243, 1
  %3245 = xor i8 %3244, 1
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3245, i8* %3246, align 1
  %3247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3247, align 1
  %3248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3248, align 1
  %3249 = lshr i64 %3235, 63
  %3250 = trunc i64 %3249 to i8
  %3251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3250, i8* %3251, align 1
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3238, i8* %3252, align 1
  store %struct.Memory* %loadMem_43b541, %struct.Memory** %MEMORY
  %loadMem_43b545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3254 = getelementptr inbounds %struct.GPR, %struct.GPR* %3253, i32 0, i32 33
  %3255 = getelementptr inbounds %struct.Reg, %struct.Reg* %3254, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %3255 to i64*
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3257 = getelementptr inbounds %struct.GPR, %struct.GPR* %3256, i32 0, i32 5
  %3258 = getelementptr inbounds %struct.Reg, %struct.Reg* %3257, i32 0, i32 0
  %RCX.i708 = bitcast %union.anon* %3258 to i64*
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3260 = getelementptr inbounds %struct.GPR, %struct.GPR* %3259, i32 0, i32 11
  %3261 = getelementptr inbounds %struct.Reg, %struct.Reg* %3260, i32 0, i32 0
  %RDI.i709 = bitcast %union.anon* %3261 to i64*
  %3262 = load i64, i64* %RDI.i709
  %3263 = load i64, i64* %RCX.i708
  %3264 = load i64, i64* %PC.i707
  %3265 = add i64 %3264, 3
  store i64 %3265, i64* %PC.i707
  %3266 = add i64 %3263, %3262
  store i64 %3266, i64* %RDI.i709, align 8
  %3267 = icmp ult i64 %3266, %3262
  %3268 = icmp ult i64 %3266, %3263
  %3269 = or i1 %3267, %3268
  %3270 = zext i1 %3269 to i8
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3270, i8* %3271, align 1
  %3272 = trunc i64 %3266 to i32
  %3273 = and i32 %3272, 255
  %3274 = call i32 @llvm.ctpop.i32(i32 %3273)
  %3275 = trunc i32 %3274 to i8
  %3276 = and i8 %3275, 1
  %3277 = xor i8 %3276, 1
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3277, i8* %3278, align 1
  %3279 = xor i64 %3263, %3262
  %3280 = xor i64 %3279, %3266
  %3281 = lshr i64 %3280, 4
  %3282 = trunc i64 %3281 to i8
  %3283 = and i8 %3282, 1
  %3284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3283, i8* %3284, align 1
  %3285 = icmp eq i64 %3266, 0
  %3286 = zext i1 %3285 to i8
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3286, i8* %3287, align 1
  %3288 = lshr i64 %3266, 63
  %3289 = trunc i64 %3288 to i8
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3289, i8* %3290, align 1
  %3291 = lshr i64 %3262, 63
  %3292 = lshr i64 %3263, 63
  %3293 = xor i64 %3288, %3291
  %3294 = xor i64 %3288, %3292
  %3295 = add i64 %3293, %3294
  %3296 = icmp eq i64 %3295, 2
  %3297 = zext i1 %3296 to i8
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3297, i8* %3298, align 1
  store %struct.Memory* %loadMem_43b545, %struct.Memory** %MEMORY
  %loadMem_43b548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3300 = getelementptr inbounds %struct.GPR, %struct.GPR* %3299, i32 0, i32 33
  %3301 = getelementptr inbounds %struct.Reg, %struct.Reg* %3300, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %3301 to i64*
  %3302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3303 = getelementptr inbounds %struct.GPR, %struct.GPR* %3302, i32 0, i32 11
  %3304 = getelementptr inbounds %struct.Reg, %struct.Reg* %3303, i32 0, i32 0
  %RDI.i706 = bitcast %union.anon* %3304 to i64*
  %3305 = load i64, i64* %RDI.i706
  %3306 = add i64 %3305, 4
  %3307 = load i64, i64* %PC.i705
  %3308 = add i64 %3307, 4
  store i64 %3308, i64* %PC.i705
  %3309 = inttoptr i64 %3306 to i32*
  %3310 = load i32, i32* %3309
  %3311 = sub i32 %3310, 1
  %3312 = icmp ult i32 %3310, 1
  %3313 = zext i1 %3312 to i8
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3313, i8* %3314, align 1
  %3315 = and i32 %3311, 255
  %3316 = call i32 @llvm.ctpop.i32(i32 %3315)
  %3317 = trunc i32 %3316 to i8
  %3318 = and i8 %3317, 1
  %3319 = xor i8 %3318, 1
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3319, i8* %3320, align 1
  %3321 = xor i32 %3310, 1
  %3322 = xor i32 %3321, %3311
  %3323 = lshr i32 %3322, 4
  %3324 = trunc i32 %3323 to i8
  %3325 = and i8 %3324, 1
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3325, i8* %3326, align 1
  %3327 = icmp eq i32 %3311, 0
  %3328 = zext i1 %3327 to i8
  %3329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3328, i8* %3329, align 1
  %3330 = lshr i32 %3311, 31
  %3331 = trunc i32 %3330 to i8
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3331, i8* %3332, align 1
  %3333 = lshr i32 %3310, 31
  %3334 = xor i32 %3330, %3333
  %3335 = add i32 %3334, %3333
  %3336 = icmp eq i32 %3335, 2
  %3337 = zext i1 %3336 to i8
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3337, i8* %3338, align 1
  store %struct.Memory* %loadMem_43b548, %struct.Memory** %MEMORY
  %loadMem_43b54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 33
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %3341 to i64*
  %3342 = load i64, i64* %PC.i704
  %3343 = add i64 %3342, 70
  %3344 = load i64, i64* %PC.i704
  %3345 = add i64 %3344, 6
  %3346 = load i64, i64* %PC.i704
  %3347 = add i64 %3346, 6
  store i64 %3347, i64* %PC.i704
  %3348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3349 = load i8, i8* %3348, align 1
  %3350 = icmp eq i8 %3349, 0
  %3351 = zext i1 %3350 to i8
  store i8 %3351, i8* %BRANCH_TAKEN, align 1
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3353 = select i1 %3350, i64 %3343, i64 %3345
  store i64 %3353, i64* %3352, align 8
  store %struct.Memory* %loadMem_43b54c, %struct.Memory** %MEMORY
  %loadBr_43b54c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b54c = icmp eq i8 %loadBr_43b54c, 1
  br i1 %cmpBr_43b54c, label %block_.L_43b592, label %block_43b552

block_43b552:                                     ; preds = %block_43b527
  %loadMem_43b552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3355 = getelementptr inbounds %struct.GPR, %struct.GPR* %3354, i32 0, i32 33
  %3356 = getelementptr inbounds %struct.Reg, %struct.Reg* %3355, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %3356 to i64*
  %3357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3358 = getelementptr inbounds %struct.GPR, %struct.GPR* %3357, i32 0, i32 1
  %3359 = getelementptr inbounds %struct.Reg, %struct.Reg* %3358, i32 0, i32 0
  %EAX.i702 = bitcast %union.anon* %3359 to i32*
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3361 = getelementptr inbounds %struct.GPR, %struct.GPR* %3360, i32 0, i32 1
  %3362 = getelementptr inbounds %struct.Reg, %struct.Reg* %3361, i32 0, i32 0
  %RAX.i703 = bitcast %union.anon* %3362 to i64*
  %3363 = load i64, i64* %RAX.i703
  %3364 = load i32, i32* %EAX.i702
  %3365 = zext i32 %3364 to i64
  %3366 = load i64, i64* %PC.i701
  %3367 = add i64 %3366, 2
  store i64 %3367, i64* %PC.i701
  %3368 = xor i64 %3365, %3363
  %3369 = trunc i64 %3368 to i32
  %3370 = and i64 %3368, 4294967295
  store i64 %3370, i64* %RAX.i703, align 8
  %3371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3371, align 1
  %3372 = and i32 %3369, 255
  %3373 = call i32 @llvm.ctpop.i32(i32 %3372)
  %3374 = trunc i32 %3373 to i8
  %3375 = and i8 %3374, 1
  %3376 = xor i8 %3375, 1
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3376, i8* %3377, align 1
  %3378 = icmp eq i32 %3369, 0
  %3379 = zext i1 %3378 to i8
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3379, i8* %3380, align 1
  %3381 = lshr i32 %3369, 31
  %3382 = trunc i32 %3381 to i8
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3382, i8* %3383, align 1
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3384, align 1
  %3385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3385, align 1
  store %struct.Memory* %loadMem_43b552, %struct.Memory** %MEMORY
  %loadMem_43b554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3387 = getelementptr inbounds %struct.GPR, %struct.GPR* %3386, i32 0, i32 33
  %3388 = getelementptr inbounds %struct.Reg, %struct.Reg* %3387, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %3388 to i64*
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3390 = getelementptr inbounds %struct.GPR, %struct.GPR* %3389, i32 0, i32 1
  %3391 = getelementptr inbounds %struct.Reg, %struct.Reg* %3390, i32 0, i32 0
  %EAX.i699 = bitcast %union.anon* %3391 to i32*
  %3392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3393 = getelementptr inbounds %struct.GPR, %struct.GPR* %3392, i32 0, i32 7
  %3394 = getelementptr inbounds %struct.Reg, %struct.Reg* %3393, i32 0, i32 0
  %RDX.i700 = bitcast %union.anon* %3394 to i64*
  %3395 = load i32, i32* %EAX.i699
  %3396 = zext i32 %3395 to i64
  %3397 = load i64, i64* %PC.i698
  %3398 = add i64 %3397, 2
  store i64 %3398, i64* %PC.i698
  %3399 = and i64 %3396, 4294967295
  store i64 %3399, i64* %RDX.i700, align 8
  store %struct.Memory* %loadMem_43b554, %struct.Memory** %MEMORY
  %loadMem_43b556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3401 = getelementptr inbounds %struct.GPR, %struct.GPR* %3400, i32 0, i32 33
  %3402 = getelementptr inbounds %struct.Reg, %struct.Reg* %3401, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %3402 to i64*
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3404 = getelementptr inbounds %struct.GPR, %struct.GPR* %3403, i32 0, i32 1
  %3405 = getelementptr inbounds %struct.Reg, %struct.Reg* %3404, i32 0, i32 0
  %RAX.i697 = bitcast %union.anon* %3405 to i64*
  %3406 = load i64, i64* %PC.i696
  %3407 = add i64 %3406, 5
  store i64 %3407, i64* %PC.i696
  store i64 1, i64* %RAX.i697, align 8
  store %struct.Memory* %loadMem_43b556, %struct.Memory** %MEMORY
  %loadMem_43b55b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3409 = getelementptr inbounds %struct.GPR, %struct.GPR* %3408, i32 0, i32 33
  %3410 = getelementptr inbounds %struct.Reg, %struct.Reg* %3409, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %3410 to i64*
  %3411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3412 = getelementptr inbounds %struct.GPR, %struct.GPR* %3411, i32 0, i32 5
  %3413 = getelementptr inbounds %struct.Reg, %struct.Reg* %3412, i32 0, i32 0
  %RCX.i695 = bitcast %union.anon* %3413 to i64*
  %3414 = load i64, i64* %PC.i694
  %3415 = add i64 %3414, 5
  store i64 %3415, i64* %PC.i694
  store i64 2, i64* %RCX.i695, align 8
  store %struct.Memory* %loadMem_43b55b, %struct.Memory** %MEMORY
  %loadMem_43b560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3417 = getelementptr inbounds %struct.GPR, %struct.GPR* %3416, i32 0, i32 33
  %3418 = getelementptr inbounds %struct.Reg, %struct.Reg* %3417, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %3418 to i64*
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3420 = getelementptr inbounds %struct.GPR, %struct.GPR* %3419, i32 0, i32 11
  %3421 = getelementptr inbounds %struct.Reg, %struct.Reg* %3420, i32 0, i32 0
  %RDI.i692 = bitcast %union.anon* %3421 to i64*
  %3422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3423 = getelementptr inbounds %struct.GPR, %struct.GPR* %3422, i32 0, i32 15
  %3424 = getelementptr inbounds %struct.Reg, %struct.Reg* %3423, i32 0, i32 0
  %RBP.i693 = bitcast %union.anon* %3424 to i64*
  %3425 = load i64, i64* %RBP.i693
  %3426 = sub i64 %3425, 4
  %3427 = load i64, i64* %PC.i691
  %3428 = add i64 %3427, 3
  store i64 %3428, i64* %PC.i691
  %3429 = inttoptr i64 %3426 to i32*
  %3430 = load i32, i32* %3429
  %3431 = zext i32 %3430 to i64
  store i64 %3431, i64* %RDI.i692, align 8
  store %struct.Memory* %loadMem_43b560, %struct.Memory** %MEMORY
  %loadMem_43b563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3433 = getelementptr inbounds %struct.GPR, %struct.GPR* %3432, i32 0, i32 33
  %3434 = getelementptr inbounds %struct.Reg, %struct.Reg* %3433, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %3434 to i64*
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3436 = getelementptr inbounds %struct.GPR, %struct.GPR* %3435, i32 0, i32 9
  %3437 = getelementptr inbounds %struct.Reg, %struct.Reg* %3436, i32 0, i32 0
  %RSI.i689 = bitcast %union.anon* %3437 to i64*
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3439 = getelementptr inbounds %struct.GPR, %struct.GPR* %3438, i32 0, i32 15
  %3440 = getelementptr inbounds %struct.Reg, %struct.Reg* %3439, i32 0, i32 0
  %RBP.i690 = bitcast %union.anon* %3440 to i64*
  %3441 = load i64, i64* %RBP.i690
  %3442 = sub i64 %3441, 48
  %3443 = load i64, i64* %PC.i688
  %3444 = add i64 %3443, 4
  store i64 %3444, i64* %PC.i688
  %3445 = inttoptr i64 %3442 to i64*
  %3446 = load i64, i64* %3445
  store i64 %3446, i64* %RSI.i689, align 8
  store %struct.Memory* %loadMem_43b563, %struct.Memory** %MEMORY
  %loadMem_43b567 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3448 = getelementptr inbounds %struct.GPR, %struct.GPR* %3447, i32 0, i32 33
  %3449 = getelementptr inbounds %struct.Reg, %struct.Reg* %3448, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %3449 to i64*
  %3450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3451 = getelementptr inbounds %struct.GPR, %struct.GPR* %3450, i32 0, i32 15
  %3452 = getelementptr inbounds %struct.Reg, %struct.Reg* %3451, i32 0, i32 0
  %RBP.i686 = bitcast %union.anon* %3452 to i64*
  %3453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3454 = getelementptr inbounds %struct.GPR, %struct.GPR* %3453, i32 0, i32 17
  %3455 = getelementptr inbounds %struct.Reg, %struct.Reg* %3454, i32 0, i32 0
  %R8.i687 = bitcast %union.anon* %3455 to i64*
  %3456 = load i64, i64* %RBP.i686
  %3457 = sub i64 %3456, 4
  %3458 = load i64, i64* %PC.i685
  %3459 = add i64 %3458, 4
  store i64 %3459, i64* %PC.i685
  %3460 = inttoptr i64 %3457 to i32*
  %3461 = load i32, i32* %3460
  %3462 = sext i32 %3461 to i64
  store i64 %3462, i64* %R8.i687, align 8
  store %struct.Memory* %loadMem_43b567, %struct.Memory** %MEMORY
  %loadMem_43b56b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3464 = getelementptr inbounds %struct.GPR, %struct.GPR* %3463, i32 0, i32 33
  %3465 = getelementptr inbounds %struct.Reg, %struct.Reg* %3464, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %3465 to i64*
  %3466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3467 = getelementptr inbounds %struct.GPR, %struct.GPR* %3466, i32 0, i32 17
  %3468 = getelementptr inbounds %struct.Reg, %struct.Reg* %3467, i32 0, i32 0
  %R8.i684 = bitcast %union.anon* %3468 to i64*
  %3469 = load i64, i64* %R8.i684
  %3470 = load i64, i64* %PC.i683
  %3471 = add i64 %3470, 4
  store i64 %3471, i64* %PC.i683
  %3472 = sext i64 %3469 to i128
  %3473 = and i128 %3472, -18446744073709551616
  %3474 = zext i64 %3469 to i128
  %3475 = or i128 %3473, %3474
  %3476 = mul i128 36, %3475
  %3477 = trunc i128 %3476 to i64
  store i64 %3477, i64* %R8.i684, align 8
  %3478 = sext i64 %3477 to i128
  %3479 = icmp ne i128 %3478, %3476
  %3480 = zext i1 %3479 to i8
  %3481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3480, i8* %3481, align 1
  %3482 = trunc i128 %3476 to i32
  %3483 = and i32 %3482, 255
  %3484 = call i32 @llvm.ctpop.i32(i32 %3483)
  %3485 = trunc i32 %3484 to i8
  %3486 = and i8 %3485, 1
  %3487 = xor i8 %3486, 1
  %3488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3487, i8* %3488, align 1
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3489, align 1
  %3490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3490, align 1
  %3491 = lshr i64 %3477, 63
  %3492 = trunc i64 %3491 to i8
  %3493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3492, i8* %3493, align 1
  %3494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3480, i8* %3494, align 1
  store %struct.Memory* %loadMem_43b56b, %struct.Memory** %MEMORY
  %loadMem_43b56f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 33
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %3497 to i64*
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 9
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %RSI.i681 = bitcast %union.anon* %3500 to i64*
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3502 = getelementptr inbounds %struct.GPR, %struct.GPR* %3501, i32 0, i32 17
  %3503 = getelementptr inbounds %struct.Reg, %struct.Reg* %3502, i32 0, i32 0
  %R8.i682 = bitcast %union.anon* %3503 to i64*
  %3504 = load i64, i64* %RSI.i681
  %3505 = load i64, i64* %R8.i682
  %3506 = load i64, i64* %PC.i680
  %3507 = add i64 %3506, 3
  store i64 %3507, i64* %PC.i680
  %3508 = add i64 %3505, %3504
  store i64 %3508, i64* %RSI.i681, align 8
  %3509 = icmp ult i64 %3508, %3504
  %3510 = icmp ult i64 %3508, %3505
  %3511 = or i1 %3509, %3510
  %3512 = zext i1 %3511 to i8
  %3513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3512, i8* %3513, align 1
  %3514 = trunc i64 %3508 to i32
  %3515 = and i32 %3514, 255
  %3516 = call i32 @llvm.ctpop.i32(i32 %3515)
  %3517 = trunc i32 %3516 to i8
  %3518 = and i8 %3517, 1
  %3519 = xor i8 %3518, 1
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3519, i8* %3520, align 1
  %3521 = xor i64 %3505, %3504
  %3522 = xor i64 %3521, %3508
  %3523 = lshr i64 %3522, 4
  %3524 = trunc i64 %3523 to i8
  %3525 = and i8 %3524, 1
  %3526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3525, i8* %3526, align 1
  %3527 = icmp eq i64 %3508, 0
  %3528 = zext i1 %3527 to i8
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3528, i8* %3529, align 1
  %3530 = lshr i64 %3508, 63
  %3531 = trunc i64 %3530 to i8
  %3532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3531, i8* %3532, align 1
  %3533 = lshr i64 %3504, 63
  %3534 = lshr i64 %3505, 63
  %3535 = xor i64 %3530, %3533
  %3536 = xor i64 %3530, %3534
  %3537 = add i64 %3535, %3536
  %3538 = icmp eq i64 %3537, 2
  %3539 = zext i1 %3538 to i8
  %3540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3539, i8* %3540, align 1
  store %struct.Memory* %loadMem_43b56f, %struct.Memory** %MEMORY
  %loadMem_43b572 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3542 = getelementptr inbounds %struct.GPR, %struct.GPR* %3541, i32 0, i32 33
  %3543 = getelementptr inbounds %struct.Reg, %struct.Reg* %3542, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %3543 to i64*
  %3544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3545 = getelementptr inbounds %struct.GPR, %struct.GPR* %3544, i32 0, i32 9
  %3546 = getelementptr inbounds %struct.Reg, %struct.Reg* %3545, i32 0, i32 0
  %RSI.i679 = bitcast %union.anon* %3546 to i64*
  %3547 = load i64, i64* %RSI.i679
  %3548 = load i64, i64* %PC.i678
  %3549 = add i64 %3548, 3
  store i64 %3549, i64* %PC.i678
  %3550 = inttoptr i64 %3547 to i32*
  %3551 = load i32, i32* %3550
  %3552 = sub i32 %3551, 4
  %3553 = icmp ult i32 %3551, 4
  %3554 = zext i1 %3553 to i8
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3554, i8* %3555, align 1
  %3556 = and i32 %3552, 255
  %3557 = call i32 @llvm.ctpop.i32(i32 %3556)
  %3558 = trunc i32 %3557 to i8
  %3559 = and i8 %3558, 1
  %3560 = xor i8 %3559, 1
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3560, i8* %3561, align 1
  %3562 = xor i32 %3551, 4
  %3563 = xor i32 %3562, %3552
  %3564 = lshr i32 %3563, 4
  %3565 = trunc i32 %3564 to i8
  %3566 = and i8 %3565, 1
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3566, i8* %3567, align 1
  %3568 = icmp eq i32 %3552, 0
  %3569 = zext i1 %3568 to i8
  %3570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3569, i8* %3570, align 1
  %3571 = lshr i32 %3552, 31
  %3572 = trunc i32 %3571 to i8
  %3573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3572, i8* %3573, align 1
  %3574 = lshr i32 %3551, 31
  %3575 = xor i32 %3571, %3574
  %3576 = add i32 %3575, %3574
  %3577 = icmp eq i32 %3576, 2
  %3578 = zext i1 %3577 to i8
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3578, i8* %3579, align 1
  store %struct.Memory* %loadMem_43b572, %struct.Memory** %MEMORY
  %loadMem_43b575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3581 = getelementptr inbounds %struct.GPR, %struct.GPR* %3580, i32 0, i32 33
  %3582 = getelementptr inbounds %struct.Reg, %struct.Reg* %3581, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %3582 to i64*
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3584 = getelementptr inbounds %struct.GPR, %struct.GPR* %3583, i32 0, i32 5
  %3585 = getelementptr inbounds %struct.Reg, %struct.Reg* %3584, i32 0, i32 0
  %ECX.i676 = bitcast %union.anon* %3585 to i32*
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3587 = getelementptr inbounds %struct.GPR, %struct.GPR* %3586, i32 0, i32 1
  %3588 = getelementptr inbounds %struct.Reg, %struct.Reg* %3587, i32 0, i32 0
  %RAX.i677 = bitcast %union.anon* %3588 to i64*
  %3589 = load i32, i32* %ECX.i676
  %3590 = zext i32 %3589 to i64
  %3591 = load i64, i64* %PC.i675
  %3592 = add i64 %3591, 3
  store i64 %3592, i64* %PC.i675
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3594 = load i8, i8* %3593, align 1
  %3595 = icmp ne i8 %3594, 0
  %3596 = load i64, i64* %RAX.i677, align 8
  %3597 = select i1 %3595, i64 %3590, i64 %3596
  %3598 = and i64 %3597, 4294967295
  store i64 %3598, i64* %RAX.i677, align 8
  store %struct.Memory* %loadMem_43b575, %struct.Memory** %MEMORY
  %loadMem_43b578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3600 = getelementptr inbounds %struct.GPR, %struct.GPR* %3599, i32 0, i32 33
  %3601 = getelementptr inbounds %struct.Reg, %struct.Reg* %3600, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %3601 to i64*
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3603 = getelementptr inbounds %struct.GPR, %struct.GPR* %3602, i32 0, i32 1
  %3604 = getelementptr inbounds %struct.Reg, %struct.Reg* %3603, i32 0, i32 0
  %EAX.i673 = bitcast %union.anon* %3604 to i32*
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3606 = getelementptr inbounds %struct.GPR, %struct.GPR* %3605, i32 0, i32 9
  %3607 = getelementptr inbounds %struct.Reg, %struct.Reg* %3606, i32 0, i32 0
  %RSI.i674 = bitcast %union.anon* %3607 to i64*
  %3608 = load i32, i32* %EAX.i673
  %3609 = zext i32 %3608 to i64
  %3610 = load i64, i64* %PC.i672
  %3611 = add i64 %3610, 2
  store i64 %3611, i64* %PC.i672
  %3612 = and i64 %3609, 4294967295
  store i64 %3612, i64* %RSI.i674, align 8
  store %struct.Memory* %loadMem_43b578, %struct.Memory** %MEMORY
  %loadMem1_43b57a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3614 = getelementptr inbounds %struct.GPR, %struct.GPR* %3613, i32 0, i32 33
  %3615 = getelementptr inbounds %struct.Reg, %struct.Reg* %3614, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %3615 to i64*
  %3616 = load i64, i64* %PC.i671
  %3617 = add i64 %3616, -181114
  %3618 = load i64, i64* %PC.i671
  %3619 = add i64 %3618, 5
  %3620 = load i64, i64* %PC.i671
  %3621 = add i64 %3620, 5
  store i64 %3621, i64* %PC.i671
  %3622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3623 = load i64, i64* %3622, align 8
  %3624 = add i64 %3623, -8
  %3625 = inttoptr i64 %3624 to i64*
  store i64 %3619, i64* %3625
  store i64 %3624, i64* %3622, align 8
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3617, i64* %3626, align 8
  store %struct.Memory* %loadMem1_43b57a, %struct.Memory** %MEMORY
  %loadMem2_43b57a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b57a = load i64, i64* %3
  %call2_43b57a = call %struct.Memory* @sub_40f200.is_ko(%struct.State* %0, i64 %loadPC_43b57a, %struct.Memory* %loadMem2_43b57a)
  store %struct.Memory* %call2_43b57a, %struct.Memory** %MEMORY
  %loadMem_43b57f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3628 = getelementptr inbounds %struct.GPR, %struct.GPR* %3627, i32 0, i32 33
  %3629 = getelementptr inbounds %struct.Reg, %struct.Reg* %3628, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %3629 to i64*
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3631 = getelementptr inbounds %struct.GPR, %struct.GPR* %3630, i32 0, i32 1
  %3632 = getelementptr inbounds %struct.Reg, %struct.Reg* %3631, i32 0, i32 0
  %EAX.i670 = bitcast %union.anon* %3632 to i32*
  %3633 = load i32, i32* %EAX.i670
  %3634 = zext i32 %3633 to i64
  %3635 = load i64, i64* %PC.i669
  %3636 = add i64 %3635, 3
  store i64 %3636, i64* %PC.i669
  %3637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3637, align 1
  %3638 = and i32 %3633, 255
  %3639 = call i32 @llvm.ctpop.i32(i32 %3638)
  %3640 = trunc i32 %3639 to i8
  %3641 = and i8 %3640, 1
  %3642 = xor i8 %3641, 1
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3642, i8* %3643, align 1
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3644, align 1
  %3645 = icmp eq i32 %3633, 0
  %3646 = zext i1 %3645 to i8
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3646, i8* %3647, align 1
  %3648 = lshr i32 %3633, 31
  %3649 = trunc i32 %3648 to i8
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3649, i8* %3650, align 1
  %3651 = lshr i32 %3633, 31
  %3652 = xor i32 %3648, %3651
  %3653 = add i32 %3652, %3651
  %3654 = icmp eq i32 %3653, 2
  %3655 = zext i1 %3654 to i8
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3655, i8* %3656, align 1
  store %struct.Memory* %loadMem_43b57f, %struct.Memory** %MEMORY
  %loadMem_43b582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3658 = getelementptr inbounds %struct.GPR, %struct.GPR* %3657, i32 0, i32 33
  %3659 = getelementptr inbounds %struct.Reg, %struct.Reg* %3658, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %3659 to i64*
  %3660 = load i64, i64* %PC.i668
  %3661 = add i64 %3660, 16
  %3662 = load i64, i64* %PC.i668
  %3663 = add i64 %3662, 6
  %3664 = load i64, i64* %PC.i668
  %3665 = add i64 %3664, 6
  store i64 %3665, i64* %PC.i668
  %3666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3667 = load i8, i8* %3666, align 1
  store i8 %3667, i8* %BRANCH_TAKEN, align 1
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3669 = icmp ne i8 %3667, 0
  %3670 = select i1 %3669, i64 %3661, i64 %3663
  store i64 %3670, i64* %3668, align 8
  store %struct.Memory* %loadMem_43b582, %struct.Memory** %MEMORY
  %loadBr_43b582 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b582 = icmp eq i8 %loadBr_43b582, 1
  br i1 %cmpBr_43b582, label %block_.L_43b592, label %block_43b588

block_43b588:                                     ; preds = %block_43b552
  %loadMem_43b588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3672 = getelementptr inbounds %struct.GPR, %struct.GPR* %3671, i32 0, i32 33
  %3673 = getelementptr inbounds %struct.Reg, %struct.Reg* %3672, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %3673 to i64*
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3675 = getelementptr inbounds %struct.GPR, %struct.GPR* %3674, i32 0, i32 1
  %3676 = getelementptr inbounds %struct.Reg, %struct.Reg* %3675, i32 0, i32 0
  %RAX.i666 = bitcast %union.anon* %3676 to i64*
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3678 = getelementptr inbounds %struct.GPR, %struct.GPR* %3677, i32 0, i32 15
  %3679 = getelementptr inbounds %struct.Reg, %struct.Reg* %3678, i32 0, i32 0
  %RBP.i667 = bitcast %union.anon* %3679 to i64*
  %3680 = load i64, i64* %RBP.i667
  %3681 = sub i64 %3680, 24
  %3682 = load i64, i64* %PC.i665
  %3683 = add i64 %3682, 4
  store i64 %3683, i64* %PC.i665
  %3684 = inttoptr i64 %3681 to i64*
  %3685 = load i64, i64* %3684
  store i64 %3685, i64* %RAX.i666, align 8
  store %struct.Memory* %loadMem_43b588, %struct.Memory** %MEMORY
  %loadMem_43b58c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3687 = getelementptr inbounds %struct.GPR, %struct.GPR* %3686, i32 0, i32 33
  %3688 = getelementptr inbounds %struct.Reg, %struct.Reg* %3687, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %3688 to i64*
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3690 = getelementptr inbounds %struct.GPR, %struct.GPR* %3689, i32 0, i32 1
  %3691 = getelementptr inbounds %struct.Reg, %struct.Reg* %3690, i32 0, i32 0
  %RAX.i664 = bitcast %union.anon* %3691 to i64*
  %3692 = load i64, i64* %RAX.i664
  %3693 = load i64, i64* %PC.i663
  %3694 = add i64 %3693, 6
  store i64 %3694, i64* %PC.i663
  %3695 = inttoptr i64 %3692 to i32*
  store i32 0, i32* %3695
  store %struct.Memory* %loadMem_43b58c, %struct.Memory** %MEMORY
  br label %block_.L_43b592

block_.L_43b592:                                  ; preds = %block_43b588, %block_43b552, %block_43b527
  %loadMem_43b592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3697 = getelementptr inbounds %struct.GPR, %struct.GPR* %3696, i32 0, i32 33
  %3698 = getelementptr inbounds %struct.Reg, %struct.Reg* %3697, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %3698 to i64*
  %3699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3700 = getelementptr inbounds %struct.GPR, %struct.GPR* %3699, i32 0, i32 1
  %3701 = getelementptr inbounds %struct.Reg, %struct.Reg* %3700, i32 0, i32 0
  %RAX.i662 = bitcast %union.anon* %3701 to i64*
  %3702 = load i64, i64* %PC.i661
  %3703 = add i64 %3702, 7
  store i64 %3703, i64* %PC.i661
  %3704 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %3705 = zext i32 %3704 to i64
  store i64 %3705, i64* %RAX.i662, align 8
  store %struct.Memory* %loadMem_43b592, %struct.Memory** %MEMORY
  %loadMem_43b599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3707 = getelementptr inbounds %struct.GPR, %struct.GPR* %3706, i32 0, i32 33
  %3708 = getelementptr inbounds %struct.Reg, %struct.Reg* %3707, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %3708 to i64*
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3710 = getelementptr inbounds %struct.GPR, %struct.GPR* %3709, i32 0, i32 1
  %3711 = getelementptr inbounds %struct.Reg, %struct.Reg* %3710, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %3711 to i64*
  %3712 = load i64, i64* %RAX.i660
  %3713 = load i64, i64* %PC.i659
  %3714 = add i64 %3713, 3
  store i64 %3714, i64* %PC.i659
  %3715 = and i64 2, %3712
  %3716 = trunc i64 %3715 to i32
  store i64 %3715, i64* %RAX.i660, align 8
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3717, align 1
  %3718 = and i32 %3716, 255
  %3719 = call i32 @llvm.ctpop.i32(i32 %3718)
  %3720 = trunc i32 %3719 to i8
  %3721 = and i8 %3720, 1
  %3722 = xor i8 %3721, 1
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3722, i8* %3723, align 1
  %3724 = icmp eq i32 %3716, 0
  %3725 = zext i1 %3724 to i8
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3725, i8* %3726, align 1
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3727, align 1
  %3728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3728, align 1
  %3729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3729, align 1
  store %struct.Memory* %loadMem_43b599, %struct.Memory** %MEMORY
  %loadMem_43b59c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3731 = getelementptr inbounds %struct.GPR, %struct.GPR* %3730, i32 0, i32 33
  %3732 = getelementptr inbounds %struct.Reg, %struct.Reg* %3731, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %3732 to i64*
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3734 = getelementptr inbounds %struct.GPR, %struct.GPR* %3733, i32 0, i32 1
  %3735 = getelementptr inbounds %struct.Reg, %struct.Reg* %3734, i32 0, i32 0
  %EAX.i658 = bitcast %union.anon* %3735 to i32*
  %3736 = load i32, i32* %EAX.i658
  %3737 = zext i32 %3736 to i64
  %3738 = load i64, i64* %PC.i657
  %3739 = add i64 %3738, 3
  store i64 %3739, i64* %PC.i657
  %3740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3740, align 1
  %3741 = and i32 %3736, 255
  %3742 = call i32 @llvm.ctpop.i32(i32 %3741)
  %3743 = trunc i32 %3742 to i8
  %3744 = and i8 %3743, 1
  %3745 = xor i8 %3744, 1
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3745, i8* %3746, align 1
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3747, align 1
  %3748 = icmp eq i32 %3736, 0
  %3749 = zext i1 %3748 to i8
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3749, i8* %3750, align 1
  %3751 = lshr i32 %3736, 31
  %3752 = trunc i32 %3751 to i8
  %3753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3752, i8* %3753, align 1
  %3754 = lshr i32 %3736, 31
  %3755 = xor i32 %3751, %3754
  %3756 = add i32 %3755, %3754
  %3757 = icmp eq i32 %3756, 2
  %3758 = zext i1 %3757 to i8
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3758, i8* %3759, align 1
  store %struct.Memory* %loadMem_43b59c, %struct.Memory** %MEMORY
  %loadMem_43b59f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3761 = getelementptr inbounds %struct.GPR, %struct.GPR* %3760, i32 0, i32 33
  %3762 = getelementptr inbounds %struct.Reg, %struct.Reg* %3761, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %3762 to i64*
  %3763 = load i64, i64* %PC.i656
  %3764 = add i64 %3763, 11
  %3765 = load i64, i64* %PC.i656
  %3766 = add i64 %3765, 6
  %3767 = load i64, i64* %PC.i656
  %3768 = add i64 %3767, 6
  store i64 %3768, i64* %PC.i656
  %3769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3770 = load i8, i8* %3769, align 1
  %3771 = icmp eq i8 %3770, 0
  %3772 = zext i1 %3771 to i8
  store i8 %3772, i8* %BRANCH_TAKEN, align 1
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3774 = select i1 %3771, i64 %3764, i64 %3766
  store i64 %3774, i64* %3773, align 8
  store %struct.Memory* %loadMem_43b59f, %struct.Memory** %MEMORY
  %loadBr_43b59f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b59f = icmp eq i8 %loadBr_43b59f, 1
  br i1 %cmpBr_43b59f, label %block_.L_43b5aa, label %block_43b5a5

block_43b5a5:                                     ; preds = %block_.L_43b592
  %loadMem_43b5a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3776 = getelementptr inbounds %struct.GPR, %struct.GPR* %3775, i32 0, i32 33
  %3777 = getelementptr inbounds %struct.Reg, %struct.Reg* %3776, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %3777 to i64*
  %3778 = load i64, i64* %PC.i655
  %3779 = add i64 %3778, 43
  %3780 = load i64, i64* %PC.i655
  %3781 = add i64 %3780, 5
  store i64 %3781, i64* %PC.i655
  %3782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3779, i64* %3782, align 8
  store %struct.Memory* %loadMem_43b5a5, %struct.Memory** %MEMORY
  br label %block_.L_43b5d0

block_.L_43b5aa:                                  ; preds = %block_.L_43b592
  %loadMem_43b5aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3784 = getelementptr inbounds %struct.GPR, %struct.GPR* %3783, i32 0, i32 33
  %3785 = getelementptr inbounds %struct.Reg, %struct.Reg* %3784, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %3785 to i64*
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3787 = getelementptr inbounds %struct.GPR, %struct.GPR* %3786, i32 0, i32 11
  %3788 = getelementptr inbounds %struct.Reg, %struct.Reg* %3787, i32 0, i32 0
  %RDI.i653 = bitcast %union.anon* %3788 to i64*
  %3789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3790 = getelementptr inbounds %struct.GPR, %struct.GPR* %3789, i32 0, i32 15
  %3791 = getelementptr inbounds %struct.Reg, %struct.Reg* %3790, i32 0, i32 0
  %RBP.i654 = bitcast %union.anon* %3791 to i64*
  %3792 = load i64, i64* %RBP.i654
  %3793 = sub i64 %3792, 16
  %3794 = load i64, i64* %PC.i652
  %3795 = add i64 %3794, 4
  store i64 %3795, i64* %PC.i652
  %3796 = inttoptr i64 %3793 to i64*
  %3797 = load i64, i64* %3796
  store i64 %3797, i64* %RDI.i653, align 8
  store %struct.Memory* %loadMem_43b5aa, %struct.Memory** %MEMORY
  %loadMem1_43b5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3799 = getelementptr inbounds %struct.GPR, %struct.GPR* %3798, i32 0, i32 33
  %3800 = getelementptr inbounds %struct.Reg, %struct.Reg* %3799, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %3800 to i64*
  %3801 = load i64, i64* %PC.i651
  %3802 = add i64 %3801, 1378
  %3803 = load i64, i64* %PC.i651
  %3804 = add i64 %3803, 5
  %3805 = load i64, i64* %PC.i651
  %3806 = add i64 %3805, 5
  store i64 %3806, i64* %PC.i651
  %3807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3808 = load i64, i64* %3807, align 8
  %3809 = add i64 %3808, -8
  %3810 = inttoptr i64 %3809 to i64*
  store i64 %3804, i64* %3810
  store i64 %3809, i64* %3807, align 8
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3802, i64* %3811, align 8
  store %struct.Memory* %loadMem1_43b5ae, %struct.Memory** %MEMORY
  %loadMem2_43b5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b5ae = load i64, i64* %3
  %call2_43b5ae = call %struct.Memory* @sub_43bb10.eyevalue_to_string(%struct.State* %0, i64 %loadPC_43b5ae, %struct.Memory* %loadMem2_43b5ae)
  store %struct.Memory* %call2_43b5ae, %struct.Memory** %MEMORY
  %loadMem_43b5b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3813 = getelementptr inbounds %struct.GPR, %struct.GPR* %3812, i32 0, i32 33
  %3814 = getelementptr inbounds %struct.Reg, %struct.Reg* %3813, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %3814 to i64*
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3816 = getelementptr inbounds %struct.GPR, %struct.GPR* %3815, i32 0, i32 11
  %3817 = getelementptr inbounds %struct.Reg, %struct.Reg* %3816, i32 0, i32 0
  %RDI.i650 = bitcast %union.anon* %3817 to i64*
  %3818 = load i64, i64* %PC.i649
  %3819 = add i64 %3818, 10
  store i64 %3819, i64* %PC.i649
  store i64 ptrtoint (%G__0x57da5a_type* @G__0x57da5a to i64), i64* %RDI.i650, align 8
  store %struct.Memory* %loadMem_43b5b3, %struct.Memory** %MEMORY
  %loadMem_43b5bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3821 = getelementptr inbounds %struct.GPR, %struct.GPR* %3820, i32 0, i32 33
  %3822 = getelementptr inbounds %struct.Reg, %struct.Reg* %3821, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %3822 to i64*
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3824 = getelementptr inbounds %struct.GPR, %struct.GPR* %3823, i32 0, i32 5
  %3825 = getelementptr inbounds %struct.Reg, %struct.Reg* %3824, i32 0, i32 0
  %RCX.i647 = bitcast %union.anon* %3825 to i64*
  %3826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3827 = getelementptr inbounds %struct.GPR, %struct.GPR* %3826, i32 0, i32 15
  %3828 = getelementptr inbounds %struct.Reg, %struct.Reg* %3827, i32 0, i32 0
  %RBP.i648 = bitcast %union.anon* %3828 to i64*
  %3829 = load i64, i64* %RBP.i648
  %3830 = sub i64 %3829, 24
  %3831 = load i64, i64* %PC.i646
  %3832 = add i64 %3831, 4
  store i64 %3832, i64* %PC.i646
  %3833 = inttoptr i64 %3830 to i64*
  %3834 = load i64, i64* %3833
  store i64 %3834, i64* %RCX.i647, align 8
  store %struct.Memory* %loadMem_43b5bd, %struct.Memory** %MEMORY
  %loadMem_43b5c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3836 = getelementptr inbounds %struct.GPR, %struct.GPR* %3835, i32 0, i32 33
  %3837 = getelementptr inbounds %struct.Reg, %struct.Reg* %3836, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %3837 to i64*
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3839 = getelementptr inbounds %struct.GPR, %struct.GPR* %3838, i32 0, i32 5
  %3840 = getelementptr inbounds %struct.Reg, %struct.Reg* %3839, i32 0, i32 0
  %RCX.i644 = bitcast %union.anon* %3840 to i64*
  %3841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3842 = getelementptr inbounds %struct.GPR, %struct.GPR* %3841, i32 0, i32 7
  %3843 = getelementptr inbounds %struct.Reg, %struct.Reg* %3842, i32 0, i32 0
  %RDX.i645 = bitcast %union.anon* %3843 to i64*
  %3844 = load i64, i64* %RCX.i644
  %3845 = load i64, i64* %PC.i643
  %3846 = add i64 %3845, 2
  store i64 %3846, i64* %PC.i643
  %3847 = inttoptr i64 %3844 to i32*
  %3848 = load i32, i32* %3847
  %3849 = zext i32 %3848 to i64
  store i64 %3849, i64* %RDX.i645, align 8
  store %struct.Memory* %loadMem_43b5c1, %struct.Memory** %MEMORY
  %loadMem_43b5c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3851 = getelementptr inbounds %struct.GPR, %struct.GPR* %3850, i32 0, i32 33
  %3852 = getelementptr inbounds %struct.Reg, %struct.Reg* %3851, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %3852 to i64*
  %3853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3854 = getelementptr inbounds %struct.GPR, %struct.GPR* %3853, i32 0, i32 1
  %3855 = getelementptr inbounds %struct.Reg, %struct.Reg* %3854, i32 0, i32 0
  %RAX.i641 = bitcast %union.anon* %3855 to i64*
  %3856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3857 = getelementptr inbounds %struct.GPR, %struct.GPR* %3856, i32 0, i32 9
  %3858 = getelementptr inbounds %struct.Reg, %struct.Reg* %3857, i32 0, i32 0
  %RSI.i642 = bitcast %union.anon* %3858 to i64*
  %3859 = load i64, i64* %RAX.i641
  %3860 = load i64, i64* %PC.i640
  %3861 = add i64 %3860, 3
  store i64 %3861, i64* %PC.i640
  store i64 %3859, i64* %RSI.i642, align 8
  store %struct.Memory* %loadMem_43b5c3, %struct.Memory** %MEMORY
  %loadMem_43b5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3863 = getelementptr inbounds %struct.GPR, %struct.GPR* %3862, i32 0, i32 33
  %3864 = getelementptr inbounds %struct.Reg, %struct.Reg* %3863, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %3864 to i64*
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3866 = getelementptr inbounds %struct.GPR, %struct.GPR* %3865, i32 0, i32 1
  %3867 = getelementptr inbounds %struct.Reg, %struct.Reg* %3866, i32 0, i32 0
  %3868 = bitcast %union.anon* %3867 to %struct.anon.2*
  %AL.i639 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3868, i32 0, i32 0
  %3869 = load i64, i64* %PC.i638
  %3870 = add i64 %3869, 2
  store i64 %3870, i64* %PC.i638
  store i8 0, i8* %AL.i639, align 1
  store %struct.Memory* %loadMem_43b5c6, %struct.Memory** %MEMORY
  %loadMem1_43b5c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3872 = getelementptr inbounds %struct.GPR, %struct.GPR* %3871, i32 0, i32 33
  %3873 = getelementptr inbounds %struct.Reg, %struct.Reg* %3872, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %3873 to i64*
  %3874 = load i64, i64* %PC.i637
  %3875 = add i64 %3874, 92136
  %3876 = load i64, i64* %PC.i637
  %3877 = add i64 %3876, 5
  %3878 = load i64, i64* %PC.i637
  %3879 = add i64 %3878, 5
  store i64 %3879, i64* %PC.i637
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3881 = load i64, i64* %3880, align 8
  %3882 = add i64 %3881, -8
  %3883 = inttoptr i64 %3882 to i64*
  store i64 %3877, i64* %3883
  store i64 %3882, i64* %3880, align 8
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3875, i64* %3884, align 8
  store %struct.Memory* %loadMem1_43b5c8, %struct.Memory** %MEMORY
  %loadMem2_43b5c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b5c8 = load i64, i64* %3
  %call2_43b5c8 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_43b5c8, %struct.Memory* %loadMem2_43b5c8)
  store %struct.Memory* %call2_43b5c8, %struct.Memory** %MEMORY
  %loadMem_43b5cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3886 = getelementptr inbounds %struct.GPR, %struct.GPR* %3885, i32 0, i32 33
  %3887 = getelementptr inbounds %struct.Reg, %struct.Reg* %3886, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %3887 to i64*
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3889 = getelementptr inbounds %struct.GPR, %struct.GPR* %3888, i32 0, i32 1
  %3890 = getelementptr inbounds %struct.Reg, %struct.Reg* %3889, i32 0, i32 0
  %EAX.i635 = bitcast %union.anon* %3890 to i32*
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3892 = getelementptr inbounds %struct.GPR, %struct.GPR* %3891, i32 0, i32 15
  %3893 = getelementptr inbounds %struct.Reg, %struct.Reg* %3892, i32 0, i32 0
  %RBP.i636 = bitcast %union.anon* %3893 to i64*
  %3894 = load i64, i64* %RBP.i636
  %3895 = sub i64 %3894, 128
  %3896 = load i32, i32* %EAX.i635
  %3897 = zext i32 %3896 to i64
  %3898 = load i64, i64* %PC.i634
  %3899 = add i64 %3898, 3
  store i64 %3899, i64* %PC.i634
  %3900 = inttoptr i64 %3895 to i32*
  store i32 %3896, i32* %3900
  store %struct.Memory* %loadMem_43b5cd, %struct.Memory** %MEMORY
  br label %block_.L_43b5d0

block_.L_43b5d0:                                  ; preds = %block_.L_43b5aa, %block_43b5a5
  %loadMem_43b5d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3902 = getelementptr inbounds %struct.GPR, %struct.GPR* %3901, i32 0, i32 33
  %3903 = getelementptr inbounds %struct.Reg, %struct.Reg* %3902, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %3903 to i64*
  %3904 = load i64, i64* %PC.i633
  %3905 = add i64 %3904, 101
  %3906 = load i64, i64* %PC.i633
  %3907 = add i64 %3906, 5
  store i64 %3907, i64* %PC.i633
  %3908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3905, i64* %3908, align 8
  store %struct.Memory* %loadMem_43b5d0, %struct.Memory** %MEMORY
  br label %block_.L_43b635

block_.L_43b5d5:                                  ; preds = %block_.L_43b4ee
  %loadMem_43b5d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3910 = getelementptr inbounds %struct.GPR, %struct.GPR* %3909, i32 0, i32 33
  %3911 = getelementptr inbounds %struct.Reg, %struct.Reg* %3910, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %3911 to i64*
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3913 = getelementptr inbounds %struct.GPR, %struct.GPR* %3912, i32 0, i32 11
  %3914 = getelementptr inbounds %struct.Reg, %struct.Reg* %3913, i32 0, i32 0
  %RDI.i631 = bitcast %union.anon* %3914 to i64*
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3916 = getelementptr inbounds %struct.GPR, %struct.GPR* %3915, i32 0, i32 15
  %3917 = getelementptr inbounds %struct.Reg, %struct.Reg* %3916, i32 0, i32 0
  %RBP.i632 = bitcast %union.anon* %3917 to i64*
  %3918 = load i64, i64* %RBP.i632
  %3919 = sub i64 %3918, 4
  %3920 = load i64, i64* %PC.i630
  %3921 = add i64 %3920, 3
  store i64 %3921, i64* %PC.i630
  %3922 = inttoptr i64 %3919 to i32*
  %3923 = load i32, i32* %3922
  %3924 = zext i32 %3923 to i64
  store i64 %3924, i64* %RDI.i631, align 8
  store %struct.Memory* %loadMem_43b5d5, %struct.Memory** %MEMORY
  %loadMem_43b5d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3926 = getelementptr inbounds %struct.GPR, %struct.GPR* %3925, i32 0, i32 33
  %3927 = getelementptr inbounds %struct.Reg, %struct.Reg* %3926, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %3927 to i64*
  %3928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3929 = getelementptr inbounds %struct.GPR, %struct.GPR* %3928, i32 0, i32 9
  %3930 = getelementptr inbounds %struct.Reg, %struct.Reg* %3929, i32 0, i32 0
  %RSI.i628 = bitcast %union.anon* %3930 to i64*
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3932 = getelementptr inbounds %struct.GPR, %struct.GPR* %3931, i32 0, i32 15
  %3933 = getelementptr inbounds %struct.Reg, %struct.Reg* %3932, i32 0, i32 0
  %RBP.i629 = bitcast %union.anon* %3933 to i64*
  %3934 = load i64, i64* %RBP.i629
  %3935 = sub i64 %3934, 80
  %3936 = load i64, i64* %PC.i627
  %3937 = add i64 %3936, 3
  store i64 %3937, i64* %PC.i627
  %3938 = inttoptr i64 %3935 to i32*
  %3939 = load i32, i32* %3938
  %3940 = zext i32 %3939 to i64
  store i64 %3940, i64* %RSI.i628, align 8
  store %struct.Memory* %loadMem_43b5d8, %struct.Memory** %MEMORY
  %loadMem_43b5db = load %struct.Memory*, %struct.Memory** %MEMORY
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3942 = getelementptr inbounds %struct.GPR, %struct.GPR* %3941, i32 0, i32 33
  %3943 = getelementptr inbounds %struct.Reg, %struct.Reg* %3942, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %3943 to i64*
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3945 = getelementptr inbounds %struct.GPR, %struct.GPR* %3944, i32 0, i32 7
  %3946 = getelementptr inbounds %struct.Reg, %struct.Reg* %3945, i32 0, i32 0
  %RDX.i625 = bitcast %union.anon* %3946 to i64*
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3948 = getelementptr inbounds %struct.GPR, %struct.GPR* %3947, i32 0, i32 15
  %3949 = getelementptr inbounds %struct.Reg, %struct.Reg* %3948, i32 0, i32 0
  %RBP.i626 = bitcast %union.anon* %3949 to i64*
  %3950 = load i64, i64* %RBP.i626
  %3951 = sub i64 %3950, 68
  %3952 = load i64, i64* %PC.i624
  %3953 = add i64 %3952, 3
  store i64 %3953, i64* %PC.i624
  %3954 = inttoptr i64 %3951 to i32*
  %3955 = load i32, i32* %3954
  %3956 = zext i32 %3955 to i64
  store i64 %3956, i64* %RDX.i625, align 8
  store %struct.Memory* %loadMem_43b5db, %struct.Memory** %MEMORY
  %loadMem_43b5de = load %struct.Memory*, %struct.Memory** %MEMORY
  %3957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3958 = getelementptr inbounds %struct.GPR, %struct.GPR* %3957, i32 0, i32 33
  %3959 = getelementptr inbounds %struct.Reg, %struct.Reg* %3958, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %3959 to i64*
  %3960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3961 = getelementptr inbounds %struct.GPR, %struct.GPR* %3960, i32 0, i32 5
  %3962 = getelementptr inbounds %struct.Reg, %struct.Reg* %3961, i32 0, i32 0
  %RCX.i622 = bitcast %union.anon* %3962 to i64*
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3964 = getelementptr inbounds %struct.GPR, %struct.GPR* %3963, i32 0, i32 15
  %3965 = getelementptr inbounds %struct.Reg, %struct.Reg* %3964, i32 0, i32 0
  %RBP.i623 = bitcast %union.anon* %3965 to i64*
  %3966 = load i64, i64* %RBP.i623
  %3967 = sub i64 %3966, 48
  %3968 = load i64, i64* %PC.i621
  %3969 = add i64 %3968, 4
  store i64 %3969, i64* %PC.i621
  %3970 = inttoptr i64 %3967 to i64*
  %3971 = load i64, i64* %3970
  store i64 %3971, i64* %RCX.i622, align 8
  store %struct.Memory* %loadMem_43b5de, %struct.Memory** %MEMORY
  %loadMem_43b5e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3973 = getelementptr inbounds %struct.GPR, %struct.GPR* %3972, i32 0, i32 33
  %3974 = getelementptr inbounds %struct.Reg, %struct.Reg* %3973, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %3974 to i64*
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3976 = getelementptr inbounds %struct.GPR, %struct.GPR* %3975, i32 0, i32 15
  %3977 = getelementptr inbounds %struct.Reg, %struct.Reg* %3976, i32 0, i32 0
  %RBP.i620 = bitcast %union.anon* %3977 to i64*
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3979 = getelementptr inbounds %struct.GPR, %struct.GPR* %3978, i32 0, i32 17
  %3980 = getelementptr inbounds %struct.Reg, %struct.Reg* %3979, i32 0, i32 0
  %R8.i = bitcast %union.anon* %3980 to i64*
  %3981 = load i64, i64* %RBP.i620
  %3982 = sub i64 %3981, 16
  %3983 = load i64, i64* %PC.i619
  %3984 = add i64 %3983, 4
  store i64 %3984, i64* %PC.i619
  %3985 = inttoptr i64 %3982 to i64*
  %3986 = load i64, i64* %3985
  store i64 %3986, i64* %R8.i, align 8
  store %struct.Memory* %loadMem_43b5e2, %struct.Memory** %MEMORY
  %loadMem_43b5e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3988 = getelementptr inbounds %struct.GPR, %struct.GPR* %3987, i32 0, i32 33
  %3989 = getelementptr inbounds %struct.Reg, %struct.Reg* %3988, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %3989 to i64*
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3991 = getelementptr inbounds %struct.GPR, %struct.GPR* %3990, i32 0, i32 15
  %3992 = getelementptr inbounds %struct.Reg, %struct.Reg* %3991, i32 0, i32 0
  %RBP.i618 = bitcast %union.anon* %3992 to i64*
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3994 = getelementptr inbounds %struct.GPR, %struct.GPR* %3993, i32 0, i32 19
  %3995 = getelementptr inbounds %struct.Reg, %struct.Reg* %3994, i32 0, i32 0
  %R9.i = bitcast %union.anon* %3995 to i64*
  %3996 = load i64, i64* %RBP.i618
  %3997 = sub i64 %3996, 24
  %3998 = load i64, i64* %PC.i617
  %3999 = add i64 %3998, 4
  store i64 %3999, i64* %PC.i617
  %4000 = inttoptr i64 %3997 to i64*
  %4001 = load i64, i64* %4000
  store i64 %4001, i64* %R9.i, align 8
  store %struct.Memory* %loadMem_43b5e6, %struct.Memory** %MEMORY
  %loadMem1_43b5ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4003 = getelementptr inbounds %struct.GPR, %struct.GPR* %4002, i32 0, i32 33
  %4004 = getelementptr inbounds %struct.Reg, %struct.Reg* %4003, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %4004 to i64*
  %4005 = load i64, i64* %PC.i616
  %4006 = add i64 %4005, 1574
  %4007 = load i64, i64* %PC.i616
  %4008 = add i64 %4007, 5
  %4009 = load i64, i64* %PC.i616
  %4010 = add i64 %4009, 5
  store i64 %4010, i64* %PC.i616
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4012 = load i64, i64* %4011, align 8
  %4013 = add i64 %4012, -8
  %4014 = inttoptr i64 %4013 to i64*
  store i64 %4008, i64* %4014
  store i64 %4013, i64* %4011, align 8
  %4015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4006, i64* %4015, align 8
  store %struct.Memory* %loadMem1_43b5ea, %struct.Memory** %MEMORY
  %loadMem2_43b5ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b5ea = load i64, i64* %3
  %call2_43b5ea = call %struct.Memory* @sub_43bc10.guess_eye_space(%struct.State* %0, i64 %loadPC_43b5ea, %struct.Memory* %loadMem2_43b5ea)
  store %struct.Memory* %call2_43b5ea, %struct.Memory** %MEMORY
  %loadMem_43b5ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4017 = getelementptr inbounds %struct.GPR, %struct.GPR* %4016, i32 0, i32 33
  %4018 = getelementptr inbounds %struct.Reg, %struct.Reg* %4017, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %4018 to i64*
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4020 = getelementptr inbounds %struct.GPR, %struct.GPR* %4019, i32 0, i32 7
  %4021 = getelementptr inbounds %struct.Reg, %struct.Reg* %4020, i32 0, i32 0
  %RDX.i615 = bitcast %union.anon* %4021 to i64*
  %4022 = load i64, i64* %PC.i614
  %4023 = add i64 %4022, 7
  store i64 %4023, i64* %PC.i614
  %4024 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %4025 = zext i32 %4024 to i64
  store i64 %4025, i64* %RDX.i615, align 8
  store %struct.Memory* %loadMem_43b5ef, %struct.Memory** %MEMORY
  %loadMem_43b5f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4027 = getelementptr inbounds %struct.GPR, %struct.GPR* %4026, i32 0, i32 33
  %4028 = getelementptr inbounds %struct.Reg, %struct.Reg* %4027, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %4028 to i64*
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4030 = getelementptr inbounds %struct.GPR, %struct.GPR* %4029, i32 0, i32 7
  %4031 = getelementptr inbounds %struct.Reg, %struct.Reg* %4030, i32 0, i32 0
  %RDX.i613 = bitcast %union.anon* %4031 to i64*
  %4032 = load i64, i64* %RDX.i613
  %4033 = load i64, i64* %PC.i612
  %4034 = add i64 %4033, 3
  store i64 %4034, i64* %PC.i612
  %4035 = and i64 2, %4032
  %4036 = trunc i64 %4035 to i32
  store i64 %4035, i64* %RDX.i613, align 8
  %4037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4037, align 1
  %4038 = and i32 %4036, 255
  %4039 = call i32 @llvm.ctpop.i32(i32 %4038)
  %4040 = trunc i32 %4039 to i8
  %4041 = and i8 %4040, 1
  %4042 = xor i8 %4041, 1
  %4043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4042, i8* %4043, align 1
  %4044 = icmp eq i32 %4036, 0
  %4045 = zext i1 %4044 to i8
  %4046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4045, i8* %4046, align 1
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4047, align 1
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4048, align 1
  %4049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4049, align 1
  store %struct.Memory* %loadMem_43b5f6, %struct.Memory** %MEMORY
  %loadMem_43b5f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4051 = getelementptr inbounds %struct.GPR, %struct.GPR* %4050, i32 0, i32 33
  %4052 = getelementptr inbounds %struct.Reg, %struct.Reg* %4051, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %4052 to i64*
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4054 = getelementptr inbounds %struct.GPR, %struct.GPR* %4053, i32 0, i32 7
  %4055 = getelementptr inbounds %struct.Reg, %struct.Reg* %4054, i32 0, i32 0
  %EDX.i611 = bitcast %union.anon* %4055 to i32*
  %4056 = load i32, i32* %EDX.i611
  %4057 = zext i32 %4056 to i64
  %4058 = load i64, i64* %PC.i610
  %4059 = add i64 %4058, 3
  store i64 %4059, i64* %PC.i610
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4060, align 1
  %4061 = and i32 %4056, 255
  %4062 = call i32 @llvm.ctpop.i32(i32 %4061)
  %4063 = trunc i32 %4062 to i8
  %4064 = and i8 %4063, 1
  %4065 = xor i8 %4064, 1
  %4066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4065, i8* %4066, align 1
  %4067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4067, align 1
  %4068 = icmp eq i32 %4056, 0
  %4069 = zext i1 %4068 to i8
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4069, i8* %4070, align 1
  %4071 = lshr i32 %4056, 31
  %4072 = trunc i32 %4071 to i8
  %4073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4072, i8* %4073, align 1
  %4074 = lshr i32 %4056, 31
  %4075 = xor i32 %4071, %4074
  %4076 = add i32 %4075, %4074
  %4077 = icmp eq i32 %4076, 2
  %4078 = zext i1 %4077 to i8
  %4079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4078, i8* %4079, align 1
  store %struct.Memory* %loadMem_43b5f9, %struct.Memory** %MEMORY
  %loadMem_43b5fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4081 = getelementptr inbounds %struct.GPR, %struct.GPR* %4080, i32 0, i32 33
  %4082 = getelementptr inbounds %struct.Reg, %struct.Reg* %4081, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %4082 to i64*
  %4083 = load i64, i64* %PC.i609
  %4084 = add i64 %4083, 11
  %4085 = load i64, i64* %PC.i609
  %4086 = add i64 %4085, 6
  %4087 = load i64, i64* %PC.i609
  %4088 = add i64 %4087, 6
  store i64 %4088, i64* %PC.i609
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4090 = load i8, i8* %4089, align 1
  %4091 = icmp eq i8 %4090, 0
  %4092 = zext i1 %4091 to i8
  store i8 %4092, i8* %BRANCH_TAKEN, align 1
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4094 = select i1 %4091, i64 %4084, i64 %4086
  store i64 %4094, i64* %4093, align 8
  store %struct.Memory* %loadMem_43b5fc, %struct.Memory** %MEMORY
  %loadBr_43b5fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b5fc = icmp eq i8 %loadBr_43b5fc, 1
  br i1 %cmpBr_43b5fc, label %block_.L_43b607, label %block_43b602

block_43b602:                                     ; preds = %block_.L_43b5d5
  %loadMem_43b602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4096 = getelementptr inbounds %struct.GPR, %struct.GPR* %4095, i32 0, i32 33
  %4097 = getelementptr inbounds %struct.Reg, %struct.Reg* %4096, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %4097 to i64*
  %4098 = load i64, i64* %PC.i608
  %4099 = add i64 %4098, 46
  %4100 = load i64, i64* %PC.i608
  %4101 = add i64 %4100, 5
  store i64 %4101, i64* %PC.i608
  %4102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4099, i64* %4102, align 8
  store %struct.Memory* %loadMem_43b602, %struct.Memory** %MEMORY
  br label %block_.L_43b630

block_.L_43b607:                                  ; preds = %block_.L_43b5d5
  %loadMem_43b607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4104 = getelementptr inbounds %struct.GPR, %struct.GPR* %4103, i32 0, i32 33
  %4105 = getelementptr inbounds %struct.Reg, %struct.Reg* %4104, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %4105 to i64*
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4107 = getelementptr inbounds %struct.GPR, %struct.GPR* %4106, i32 0, i32 11
  %4108 = getelementptr inbounds %struct.Reg, %struct.Reg* %4107, i32 0, i32 0
  %RDI.i606 = bitcast %union.anon* %4108 to i64*
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4110 = getelementptr inbounds %struct.GPR, %struct.GPR* %4109, i32 0, i32 15
  %4111 = getelementptr inbounds %struct.Reg, %struct.Reg* %4110, i32 0, i32 0
  %RBP.i607 = bitcast %union.anon* %4111 to i64*
  %4112 = load i64, i64* %RBP.i607
  %4113 = sub i64 %4112, 16
  %4114 = load i64, i64* %PC.i605
  %4115 = add i64 %4114, 4
  store i64 %4115, i64* %PC.i605
  %4116 = inttoptr i64 %4113 to i64*
  %4117 = load i64, i64* %4116
  store i64 %4117, i64* %RDI.i606, align 8
  store %struct.Memory* %loadMem_43b607, %struct.Memory** %MEMORY
  %loadMem1_43b60b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4119 = getelementptr inbounds %struct.GPR, %struct.GPR* %4118, i32 0, i32 33
  %4120 = getelementptr inbounds %struct.Reg, %struct.Reg* %4119, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %4120 to i64*
  %4121 = load i64, i64* %PC.i604
  %4122 = add i64 %4121, 1285
  %4123 = load i64, i64* %PC.i604
  %4124 = add i64 %4123, 5
  %4125 = load i64, i64* %PC.i604
  %4126 = add i64 %4125, 5
  store i64 %4126, i64* %PC.i604
  %4127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4128 = load i64, i64* %4127, align 8
  %4129 = add i64 %4128, -8
  %4130 = inttoptr i64 %4129 to i64*
  store i64 %4124, i64* %4130
  store i64 %4129, i64* %4127, align 8
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4122, i64* %4131, align 8
  store %struct.Memory* %loadMem1_43b60b, %struct.Memory** %MEMORY
  %loadMem2_43b60b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b60b = load i64, i64* %3
  %call2_43b60b = call %struct.Memory* @sub_43bb10.eyevalue_to_string(%struct.State* %0, i64 %loadPC_43b60b, %struct.Memory* %loadMem2_43b60b)
  store %struct.Memory* %call2_43b60b, %struct.Memory** %MEMORY
  %loadMem_43b610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4133 = getelementptr inbounds %struct.GPR, %struct.GPR* %4132, i32 0, i32 33
  %4134 = getelementptr inbounds %struct.Reg, %struct.Reg* %4133, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %4134 to i64*
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4136 = getelementptr inbounds %struct.GPR, %struct.GPR* %4135, i32 0, i32 11
  %4137 = getelementptr inbounds %struct.Reg, %struct.Reg* %4136, i32 0, i32 0
  %RDI.i603 = bitcast %union.anon* %4137 to i64*
  %4138 = load i64, i64* %PC.i602
  %4139 = add i64 %4138, 10
  store i64 %4139, i64* %PC.i602
  store i64 ptrtoint (%G__0x57da85_type* @G__0x57da85 to i64), i64* %RDI.i603, align 8
  store %struct.Memory* %loadMem_43b610, %struct.Memory** %MEMORY
  %loadMem_43b61a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4141 = getelementptr inbounds %struct.GPR, %struct.GPR* %4140, i32 0, i32 33
  %4142 = getelementptr inbounds %struct.Reg, %struct.Reg* %4141, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %4142 to i64*
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4144 = getelementptr inbounds %struct.GPR, %struct.GPR* %4143, i32 0, i32 5
  %4145 = getelementptr inbounds %struct.Reg, %struct.Reg* %4144, i32 0, i32 0
  %RCX.i600 = bitcast %union.anon* %4145 to i64*
  %4146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4147 = getelementptr inbounds %struct.GPR, %struct.GPR* %4146, i32 0, i32 15
  %4148 = getelementptr inbounds %struct.Reg, %struct.Reg* %4147, i32 0, i32 0
  %RBP.i601 = bitcast %union.anon* %4148 to i64*
  %4149 = load i64, i64* %RBP.i601
  %4150 = sub i64 %4149, 24
  %4151 = load i64, i64* %PC.i599
  %4152 = add i64 %4151, 4
  store i64 %4152, i64* %PC.i599
  %4153 = inttoptr i64 %4150 to i64*
  %4154 = load i64, i64* %4153
  store i64 %4154, i64* %RCX.i600, align 8
  store %struct.Memory* %loadMem_43b61a, %struct.Memory** %MEMORY
  %loadMem_43b61e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4156 = getelementptr inbounds %struct.GPR, %struct.GPR* %4155, i32 0, i32 33
  %4157 = getelementptr inbounds %struct.Reg, %struct.Reg* %4156, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %4157 to i64*
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4159 = getelementptr inbounds %struct.GPR, %struct.GPR* %4158, i32 0, i32 5
  %4160 = getelementptr inbounds %struct.Reg, %struct.Reg* %4159, i32 0, i32 0
  %RCX.i597 = bitcast %union.anon* %4160 to i64*
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4162 = getelementptr inbounds %struct.GPR, %struct.GPR* %4161, i32 0, i32 7
  %4163 = getelementptr inbounds %struct.Reg, %struct.Reg* %4162, i32 0, i32 0
  %RDX.i598 = bitcast %union.anon* %4163 to i64*
  %4164 = load i64, i64* %RCX.i597
  %4165 = load i64, i64* %PC.i596
  %4166 = add i64 %4165, 2
  store i64 %4166, i64* %PC.i596
  %4167 = inttoptr i64 %4164 to i32*
  %4168 = load i32, i32* %4167
  %4169 = zext i32 %4168 to i64
  store i64 %4169, i64* %RDX.i598, align 8
  store %struct.Memory* %loadMem_43b61e, %struct.Memory** %MEMORY
  %loadMem_43b620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4171 = getelementptr inbounds %struct.GPR, %struct.GPR* %4170, i32 0, i32 33
  %4172 = getelementptr inbounds %struct.Reg, %struct.Reg* %4171, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %4172 to i64*
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4174 = getelementptr inbounds %struct.GPR, %struct.GPR* %4173, i32 0, i32 1
  %4175 = getelementptr inbounds %struct.Reg, %struct.Reg* %4174, i32 0, i32 0
  %RAX.i594 = bitcast %union.anon* %4175 to i64*
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4177 = getelementptr inbounds %struct.GPR, %struct.GPR* %4176, i32 0, i32 9
  %4178 = getelementptr inbounds %struct.Reg, %struct.Reg* %4177, i32 0, i32 0
  %RSI.i595 = bitcast %union.anon* %4178 to i64*
  %4179 = load i64, i64* %RAX.i594
  %4180 = load i64, i64* %PC.i593
  %4181 = add i64 %4180, 3
  store i64 %4181, i64* %PC.i593
  store i64 %4179, i64* %RSI.i595, align 8
  store %struct.Memory* %loadMem_43b620, %struct.Memory** %MEMORY
  %loadMem_43b623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4183 = getelementptr inbounds %struct.GPR, %struct.GPR* %4182, i32 0, i32 33
  %4184 = getelementptr inbounds %struct.Reg, %struct.Reg* %4183, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %4184 to i64*
  %4185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4186 = getelementptr inbounds %struct.GPR, %struct.GPR* %4185, i32 0, i32 1
  %4187 = getelementptr inbounds %struct.Reg, %struct.Reg* %4186, i32 0, i32 0
  %4188 = bitcast %union.anon* %4187 to %struct.anon.2*
  %AL.i592 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4188, i32 0, i32 0
  %4189 = load i64, i64* %PC.i591
  %4190 = add i64 %4189, 2
  store i64 %4190, i64* %PC.i591
  store i8 0, i8* %AL.i592, align 1
  store %struct.Memory* %loadMem_43b623, %struct.Memory** %MEMORY
  %loadMem1_43b625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4192 = getelementptr inbounds %struct.GPR, %struct.GPR* %4191, i32 0, i32 33
  %4193 = getelementptr inbounds %struct.Reg, %struct.Reg* %4192, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %4193 to i64*
  %4194 = load i64, i64* %PC.i590
  %4195 = add i64 %4194, 92043
  %4196 = load i64, i64* %PC.i590
  %4197 = add i64 %4196, 5
  %4198 = load i64, i64* %PC.i590
  %4199 = add i64 %4198, 5
  store i64 %4199, i64* %PC.i590
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4201 = load i64, i64* %4200, align 8
  %4202 = add i64 %4201, -8
  %4203 = inttoptr i64 %4202 to i64*
  store i64 %4197, i64* %4203
  store i64 %4202, i64* %4200, align 8
  %4204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4195, i64* %4204, align 8
  store %struct.Memory* %loadMem1_43b625, %struct.Memory** %MEMORY
  %loadMem2_43b625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b625 = load i64, i64* %3
  %call2_43b625 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_43b625, %struct.Memory* %loadMem2_43b625)
  store %struct.Memory* %call2_43b625, %struct.Memory** %MEMORY
  %loadMem_43b62a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4206 = getelementptr inbounds %struct.GPR, %struct.GPR* %4205, i32 0, i32 33
  %4207 = getelementptr inbounds %struct.Reg, %struct.Reg* %4206, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %4207 to i64*
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4209 = getelementptr inbounds %struct.GPR, %struct.GPR* %4208, i32 0, i32 1
  %4210 = getelementptr inbounds %struct.Reg, %struct.Reg* %4209, i32 0, i32 0
  %EAX.i588 = bitcast %union.anon* %4210 to i32*
  %4211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4212 = getelementptr inbounds %struct.GPR, %struct.GPR* %4211, i32 0, i32 15
  %4213 = getelementptr inbounds %struct.Reg, %struct.Reg* %4212, i32 0, i32 0
  %RBP.i589 = bitcast %union.anon* %4213 to i64*
  %4214 = load i64, i64* %RBP.i589
  %4215 = sub i64 %4214, 132
  %4216 = load i32, i32* %EAX.i588
  %4217 = zext i32 %4216 to i64
  %4218 = load i64, i64* %PC.i587
  %4219 = add i64 %4218, 6
  store i64 %4219, i64* %PC.i587
  %4220 = inttoptr i64 %4215 to i32*
  store i32 %4216, i32* %4220
  store %struct.Memory* %loadMem_43b62a, %struct.Memory** %MEMORY
  br label %block_.L_43b630

block_.L_43b630:                                  ; preds = %block_.L_43b607, %block_43b602
  %loadMem_43b630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4222 = getelementptr inbounds %struct.GPR, %struct.GPR* %4221, i32 0, i32 33
  %4223 = getelementptr inbounds %struct.Reg, %struct.Reg* %4222, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %4223 to i64*
  %4224 = load i64, i64* %PC.i586
  %4225 = add i64 %4224, 5
  %4226 = load i64, i64* %PC.i586
  %4227 = add i64 %4226, 5
  store i64 %4227, i64* %PC.i586
  %4228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4225, i64* %4228, align 8
  store %struct.Memory* %loadMem_43b630, %struct.Memory** %MEMORY
  br label %block_.L_43b635

block_.L_43b635:                                  ; preds = %block_.L_43b630, %block_.L_43b5d0
  %loadMem_43b635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4230 = getelementptr inbounds %struct.GPR, %struct.GPR* %4229, i32 0, i32 33
  %4231 = getelementptr inbounds %struct.Reg, %struct.Reg* %4230, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %4231 to i64*
  %4232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4233 = getelementptr inbounds %struct.GPR, %struct.GPR* %4232, i32 0, i32 1
  %4234 = getelementptr inbounds %struct.Reg, %struct.Reg* %4233, i32 0, i32 0
  %RAX.i584 = bitcast %union.anon* %4234 to i64*
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4236 = getelementptr inbounds %struct.GPR, %struct.GPR* %4235, i32 0, i32 15
  %4237 = getelementptr inbounds %struct.Reg, %struct.Reg* %4236, i32 0, i32 0
  %RBP.i585 = bitcast %union.anon* %4237 to i64*
  %4238 = load i64, i64* %RBP.i585
  %4239 = sub i64 %4238, 24
  %4240 = load i64, i64* %PC.i583
  %4241 = add i64 %4240, 4
  store i64 %4241, i64* %PC.i583
  %4242 = inttoptr i64 %4239 to i64*
  %4243 = load i64, i64* %4242
  store i64 %4243, i64* %RAX.i584, align 8
  store %struct.Memory* %loadMem_43b635, %struct.Memory** %MEMORY
  %loadMem_43b639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4245 = getelementptr inbounds %struct.GPR, %struct.GPR* %4244, i32 0, i32 33
  %4246 = getelementptr inbounds %struct.Reg, %struct.Reg* %4245, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %4246 to i64*
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4248 = getelementptr inbounds %struct.GPR, %struct.GPR* %4247, i32 0, i32 1
  %4249 = getelementptr inbounds %struct.Reg, %struct.Reg* %4248, i32 0, i32 0
  %RAX.i582 = bitcast %union.anon* %4249 to i64*
  %4250 = load i64, i64* %RAX.i582
  %4251 = load i64, i64* %PC.i581
  %4252 = add i64 %4251, 3
  store i64 %4252, i64* %PC.i581
  %4253 = inttoptr i64 %4250 to i32*
  %4254 = load i32, i32* %4253
  %4255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4255, align 1
  %4256 = and i32 %4254, 255
  %4257 = call i32 @llvm.ctpop.i32(i32 %4256)
  %4258 = trunc i32 %4257 to i8
  %4259 = and i8 %4258, 1
  %4260 = xor i8 %4259, 1
  %4261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4260, i8* %4261, align 1
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4262, align 1
  %4263 = icmp eq i32 %4254, 0
  %4264 = zext i1 %4263 to i8
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4264, i8* %4265, align 1
  %4266 = lshr i32 %4254, 31
  %4267 = trunc i32 %4266 to i8
  %4268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4267, i8* %4268, align 1
  %4269 = lshr i32 %4254, 31
  %4270 = xor i32 %4266, %4269
  %4271 = add i32 %4270, %4269
  %4272 = icmp eq i32 %4271, 2
  %4273 = zext i1 %4272 to i8
  %4274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4273, i8* %4274, align 1
  store %struct.Memory* %loadMem_43b639, %struct.Memory** %MEMORY
  %loadMem_43b63c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4276 = getelementptr inbounds %struct.GPR, %struct.GPR* %4275, i32 0, i32 33
  %4277 = getelementptr inbounds %struct.Reg, %struct.Reg* %4276, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %4277 to i64*
  %4278 = load i64, i64* %PC.i580
  %4279 = add i64 %4278, 68
  %4280 = load i64, i64* %PC.i580
  %4281 = add i64 %4280, 6
  %4282 = load i64, i64* %PC.i580
  %4283 = add i64 %4282, 6
  store i64 %4283, i64* %PC.i580
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4285 = load i8, i8* %4284, align 1
  %4286 = icmp ne i8 %4285, 0
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4288 = load i8, i8* %4287, align 1
  %4289 = icmp ne i8 %4288, 0
  %4290 = xor i1 %4286, %4289
  %4291 = xor i1 %4290, true
  %4292 = zext i1 %4291 to i8
  store i8 %4292, i8* %BRANCH_TAKEN, align 1
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4294 = select i1 %4290, i64 %4281, i64 %4279
  store i64 %4294, i64* %4293, align 8
  store %struct.Memory* %loadMem_43b63c, %struct.Memory** %MEMORY
  %loadBr_43b63c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b63c = icmp eq i8 %loadBr_43b63c, 1
  br i1 %cmpBr_43b63c, label %block_.L_43b680, label %block_43b642

block_43b642:                                     ; preds = %block_.L_43b635
  %loadMem_43b642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4296 = getelementptr inbounds %struct.GPR, %struct.GPR* %4295, i32 0, i32 33
  %4297 = getelementptr inbounds %struct.Reg, %struct.Reg* %4296, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %4297 to i64*
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4299 = getelementptr inbounds %struct.GPR, %struct.GPR* %4298, i32 0, i32 1
  %4300 = getelementptr inbounds %struct.Reg, %struct.Reg* %4299, i32 0, i32 0
  %RAX.i578 = bitcast %union.anon* %4300 to i64*
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4302 = getelementptr inbounds %struct.GPR, %struct.GPR* %4301, i32 0, i32 15
  %4303 = getelementptr inbounds %struct.Reg, %struct.Reg* %4302, i32 0, i32 0
  %RBP.i579 = bitcast %union.anon* %4303 to i64*
  %4304 = load i64, i64* %RBP.i579
  %4305 = sub i64 %4304, 24
  %4306 = load i64, i64* %PC.i577
  %4307 = add i64 %4306, 4
  store i64 %4307, i64* %PC.i577
  %4308 = inttoptr i64 %4305 to i64*
  %4309 = load i64, i64* %4308
  store i64 %4309, i64* %RAX.i578, align 8
  store %struct.Memory* %loadMem_43b642, %struct.Memory** %MEMORY
  %loadMem_43b646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4311 = getelementptr inbounds %struct.GPR, %struct.GPR* %4310, i32 0, i32 33
  %4312 = getelementptr inbounds %struct.Reg, %struct.Reg* %4311, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %4312 to i64*
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4314 = getelementptr inbounds %struct.GPR, %struct.GPR* %4313, i32 0, i32 1
  %4315 = getelementptr inbounds %struct.Reg, %struct.Reg* %4314, i32 0, i32 0
  %RAX.i576 = bitcast %union.anon* %4315 to i64*
  %4316 = load i64, i64* %RAX.i576
  %4317 = load i64, i64* %PC.i575
  %4318 = add i64 %4317, 6
  store i64 %4318, i64* %PC.i575
  %4319 = inttoptr i64 %4316 to i32*
  store i32 0, i32* %4319
  store %struct.Memory* %loadMem_43b646, %struct.Memory** %MEMORY
  %loadMem_43b64c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4321 = getelementptr inbounds %struct.GPR, %struct.GPR* %4320, i32 0, i32 33
  %4322 = getelementptr inbounds %struct.Reg, %struct.Reg* %4321, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %4322 to i64*
  %4323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4324 = getelementptr inbounds %struct.GPR, %struct.GPR* %4323, i32 0, i32 5
  %4325 = getelementptr inbounds %struct.Reg, %struct.Reg* %4324, i32 0, i32 0
  %RCX.i574 = bitcast %union.anon* %4325 to i64*
  %4326 = load i64, i64* %PC.i573
  %4327 = add i64 %4326, 7
  store i64 %4327, i64* %PC.i573
  %4328 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %4329 = zext i32 %4328 to i64
  store i64 %4329, i64* %RCX.i574, align 8
  store %struct.Memory* %loadMem_43b64c, %struct.Memory** %MEMORY
  %loadMem_43b653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4331 = getelementptr inbounds %struct.GPR, %struct.GPR* %4330, i32 0, i32 33
  %4332 = getelementptr inbounds %struct.Reg, %struct.Reg* %4331, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %4332 to i64*
  %4333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4334 = getelementptr inbounds %struct.GPR, %struct.GPR* %4333, i32 0, i32 5
  %4335 = getelementptr inbounds %struct.Reg, %struct.Reg* %4334, i32 0, i32 0
  %RCX.i572 = bitcast %union.anon* %4335 to i64*
  %4336 = load i64, i64* %RCX.i572
  %4337 = load i64, i64* %PC.i571
  %4338 = add i64 %4337, 3
  store i64 %4338, i64* %PC.i571
  %4339 = and i64 2, %4336
  %4340 = trunc i64 %4339 to i32
  store i64 %4339, i64* %RCX.i572, align 8
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4341, align 1
  %4342 = and i32 %4340, 255
  %4343 = call i32 @llvm.ctpop.i32(i32 %4342)
  %4344 = trunc i32 %4343 to i8
  %4345 = and i8 %4344, 1
  %4346 = xor i8 %4345, 1
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4346, i8* %4347, align 1
  %4348 = icmp eq i32 %4340, 0
  %4349 = zext i1 %4348 to i8
  %4350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4349, i8* %4350, align 1
  %4351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4351, align 1
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4352, align 1
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4353, align 1
  store %struct.Memory* %loadMem_43b653, %struct.Memory** %MEMORY
  %loadMem_43b656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4355 = getelementptr inbounds %struct.GPR, %struct.GPR* %4354, i32 0, i32 33
  %4356 = getelementptr inbounds %struct.Reg, %struct.Reg* %4355, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %4356 to i64*
  %4357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4358 = getelementptr inbounds %struct.GPR, %struct.GPR* %4357, i32 0, i32 5
  %4359 = getelementptr inbounds %struct.Reg, %struct.Reg* %4358, i32 0, i32 0
  %ECX.i570 = bitcast %union.anon* %4359 to i32*
  %4360 = load i32, i32* %ECX.i570
  %4361 = zext i32 %4360 to i64
  %4362 = load i64, i64* %PC.i569
  %4363 = add i64 %4362, 3
  store i64 %4363, i64* %PC.i569
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4364, align 1
  %4365 = and i32 %4360, 255
  %4366 = call i32 @llvm.ctpop.i32(i32 %4365)
  %4367 = trunc i32 %4366 to i8
  %4368 = and i8 %4367, 1
  %4369 = xor i8 %4368, 1
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4369, i8* %4370, align 1
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4371, align 1
  %4372 = icmp eq i32 %4360, 0
  %4373 = zext i1 %4372 to i8
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4373, i8* %4374, align 1
  %4375 = lshr i32 %4360, 31
  %4376 = trunc i32 %4375 to i8
  %4377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4376, i8* %4377, align 1
  %4378 = lshr i32 %4360, 31
  %4379 = xor i32 %4375, %4378
  %4380 = add i32 %4379, %4378
  %4381 = icmp eq i32 %4380, 2
  %4382 = zext i1 %4381 to i8
  %4383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4382, i8* %4383, align 1
  store %struct.Memory* %loadMem_43b656, %struct.Memory** %MEMORY
  %loadMem_43b659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4385 = getelementptr inbounds %struct.GPR, %struct.GPR* %4384, i32 0, i32 33
  %4386 = getelementptr inbounds %struct.Reg, %struct.Reg* %4385, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %4386 to i64*
  %4387 = load i64, i64* %PC.i568
  %4388 = add i64 %4387, 11
  %4389 = load i64, i64* %PC.i568
  %4390 = add i64 %4389, 6
  %4391 = load i64, i64* %PC.i568
  %4392 = add i64 %4391, 6
  store i64 %4392, i64* %PC.i568
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4394 = load i8, i8* %4393, align 1
  %4395 = icmp eq i8 %4394, 0
  %4396 = zext i1 %4395 to i8
  store i8 %4396, i8* %BRANCH_TAKEN, align 1
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4398 = select i1 %4395, i64 %4388, i64 %4390
  store i64 %4398, i64* %4397, align 8
  store %struct.Memory* %loadMem_43b659, %struct.Memory** %MEMORY
  %loadBr_43b659 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b659 = icmp eq i8 %loadBr_43b659, 1
  br i1 %cmpBr_43b659, label %block_.L_43b664, label %block_43b65f

block_43b65f:                                     ; preds = %block_43b642
  %loadMem_43b65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4400 = getelementptr inbounds %struct.GPR, %struct.GPR* %4399, i32 0, i32 33
  %4401 = getelementptr inbounds %struct.Reg, %struct.Reg* %4400, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %4401 to i64*
  %4402 = load i64, i64* %PC.i567
  %4403 = add i64 %4402, 28
  %4404 = load i64, i64* %PC.i567
  %4405 = add i64 %4404, 5
  store i64 %4405, i64* %PC.i567
  %4406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4403, i64* %4406, align 8
  store %struct.Memory* %loadMem_43b65f, %struct.Memory** %MEMORY
  br label %block_.L_43b67b

block_.L_43b664:                                  ; preds = %block_43b642
  %loadMem_43b664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4408 = getelementptr inbounds %struct.GPR, %struct.GPR* %4407, i32 0, i32 33
  %4409 = getelementptr inbounds %struct.Reg, %struct.Reg* %4408, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %4409 to i64*
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4411 = getelementptr inbounds %struct.GPR, %struct.GPR* %4410, i32 0, i32 11
  %4412 = getelementptr inbounds %struct.Reg, %struct.Reg* %4411, i32 0, i32 0
  %RDI.i566 = bitcast %union.anon* %4412 to i64*
  %4413 = load i64, i64* %PC.i565
  %4414 = add i64 %4413, 10
  store i64 %4414, i64* %PC.i565
  store i64 ptrtoint (%G__0x57daab_type* @G__0x57daab to i64), i64* %RDI.i566, align 8
  store %struct.Memory* %loadMem_43b664, %struct.Memory** %MEMORY
  %loadMem_43b66e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4416 = getelementptr inbounds %struct.GPR, %struct.GPR* %4415, i32 0, i32 33
  %4417 = getelementptr inbounds %struct.Reg, %struct.Reg* %4416, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %4417 to i64*
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4419 = getelementptr inbounds %struct.GPR, %struct.GPR* %4418, i32 0, i32 1
  %4420 = getelementptr inbounds %struct.Reg, %struct.Reg* %4419, i32 0, i32 0
  %4421 = bitcast %union.anon* %4420 to %struct.anon.2*
  %AL.i564 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4421, i32 0, i32 0
  %4422 = load i64, i64* %PC.i563
  %4423 = add i64 %4422, 2
  store i64 %4423, i64* %PC.i563
  store i8 0, i8* %AL.i564, align 1
  store %struct.Memory* %loadMem_43b66e, %struct.Memory** %MEMORY
  %loadMem1_43b670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4425 = getelementptr inbounds %struct.GPR, %struct.GPR* %4424, i32 0, i32 33
  %4426 = getelementptr inbounds %struct.Reg, %struct.Reg* %4425, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %4426 to i64*
  %4427 = load i64, i64* %PC.i562
  %4428 = add i64 %4427, 91968
  %4429 = load i64, i64* %PC.i562
  %4430 = add i64 %4429, 5
  %4431 = load i64, i64* %PC.i562
  %4432 = add i64 %4431, 5
  store i64 %4432, i64* %PC.i562
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4434 = load i64, i64* %4433, align 8
  %4435 = add i64 %4434, -8
  %4436 = inttoptr i64 %4435 to i64*
  store i64 %4430, i64* %4436
  store i64 %4435, i64* %4433, align 8
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4428, i64* %4437, align 8
  store %struct.Memory* %loadMem1_43b670, %struct.Memory** %MEMORY
  %loadMem2_43b670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b670 = load i64, i64* %3
  %call2_43b670 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_43b670, %struct.Memory* %loadMem2_43b670)
  store %struct.Memory* %call2_43b670, %struct.Memory** %MEMORY
  %loadMem_43b675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4439 = getelementptr inbounds %struct.GPR, %struct.GPR* %4438, i32 0, i32 33
  %4440 = getelementptr inbounds %struct.Reg, %struct.Reg* %4439, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %4440 to i64*
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4442 = getelementptr inbounds %struct.GPR, %struct.GPR* %4441, i32 0, i32 1
  %4443 = getelementptr inbounds %struct.Reg, %struct.Reg* %4442, i32 0, i32 0
  %EAX.i560 = bitcast %union.anon* %4443 to i32*
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4445 = getelementptr inbounds %struct.GPR, %struct.GPR* %4444, i32 0, i32 15
  %4446 = getelementptr inbounds %struct.Reg, %struct.Reg* %4445, i32 0, i32 0
  %RBP.i561 = bitcast %union.anon* %4446 to i64*
  %4447 = load i64, i64* %RBP.i561
  %4448 = sub i64 %4447, 136
  %4449 = load i32, i32* %EAX.i560
  %4450 = zext i32 %4449 to i64
  %4451 = load i64, i64* %PC.i559
  %4452 = add i64 %4451, 6
  store i64 %4452, i64* %PC.i559
  %4453 = inttoptr i64 %4448 to i32*
  store i32 %4449, i32* %4453
  store %struct.Memory* %loadMem_43b675, %struct.Memory** %MEMORY
  br label %block_.L_43b67b

block_.L_43b67b:                                  ; preds = %block_.L_43b664, %block_43b65f
  %loadMem_43b67b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4455 = getelementptr inbounds %struct.GPR, %struct.GPR* %4454, i32 0, i32 33
  %4456 = getelementptr inbounds %struct.Reg, %struct.Reg* %4455, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %4456 to i64*
  %4457 = load i64, i64* %PC.i558
  %4458 = add i64 %4457, 5
  %4459 = load i64, i64* %PC.i558
  %4460 = add i64 %4459, 5
  store i64 %4460, i64* %PC.i558
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4458, i64* %4461, align 8
  store %struct.Memory* %loadMem_43b67b, %struct.Memory** %MEMORY
  br label %block_.L_43b680

block_.L_43b680:                                  ; preds = %block_.L_43b67b, %block_.L_43b635
  %loadMem_43b680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4463 = getelementptr inbounds %struct.GPR, %struct.GPR* %4462, i32 0, i32 33
  %4464 = getelementptr inbounds %struct.Reg, %struct.Reg* %4463, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %4464 to i64*
  %4465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4466 = getelementptr inbounds %struct.GPR, %struct.GPR* %4465, i32 0, i32 1
  %4467 = getelementptr inbounds %struct.Reg, %struct.Reg* %4466, i32 0, i32 0
  %RAX.i556 = bitcast %union.anon* %4467 to i64*
  %4468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4469 = getelementptr inbounds %struct.GPR, %struct.GPR* %4468, i32 0, i32 15
  %4470 = getelementptr inbounds %struct.Reg, %struct.Reg* %4469, i32 0, i32 0
  %RBP.i557 = bitcast %union.anon* %4470 to i64*
  %4471 = load i64, i64* %RBP.i557
  %4472 = sub i64 %4471, 24
  %4473 = load i64, i64* %PC.i555
  %4474 = add i64 %4473, 4
  store i64 %4474, i64* %PC.i555
  %4475 = inttoptr i64 %4472 to i64*
  %4476 = load i64, i64* %4475
  store i64 %4476, i64* %RAX.i556, align 8
  store %struct.Memory* %loadMem_43b680, %struct.Memory** %MEMORY
  %loadMem_43b684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4478 = getelementptr inbounds %struct.GPR, %struct.GPR* %4477, i32 0, i32 33
  %4479 = getelementptr inbounds %struct.Reg, %struct.Reg* %4478, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %4479 to i64*
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4481 = getelementptr inbounds %struct.GPR, %struct.GPR* %4480, i32 0, i32 1
  %4482 = getelementptr inbounds %struct.Reg, %struct.Reg* %4481, i32 0, i32 0
  %RAX.i554 = bitcast %union.anon* %4482 to i64*
  %4483 = load i64, i64* %RAX.i554
  %4484 = load i64, i64* %PC.i553
  %4485 = add i64 %4484, 3
  store i64 %4485, i64* %PC.i553
  %4486 = inttoptr i64 %4483 to i32*
  %4487 = load i32, i32* %4486
  %4488 = sub i32 %4487, 1
  %4489 = icmp ult i32 %4487, 1
  %4490 = zext i1 %4489 to i8
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4490, i8* %4491, align 1
  %4492 = and i32 %4488, 255
  %4493 = call i32 @llvm.ctpop.i32(i32 %4492)
  %4494 = trunc i32 %4493 to i8
  %4495 = and i8 %4494, 1
  %4496 = xor i8 %4495, 1
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4496, i8* %4497, align 1
  %4498 = xor i32 %4487, 1
  %4499 = xor i32 %4498, %4488
  %4500 = lshr i32 %4499, 4
  %4501 = trunc i32 %4500 to i8
  %4502 = and i8 %4501, 1
  %4503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4502, i8* %4503, align 1
  %4504 = icmp eq i32 %4488, 0
  %4505 = zext i1 %4504 to i8
  %4506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4505, i8* %4506, align 1
  %4507 = lshr i32 %4488, 31
  %4508 = trunc i32 %4507 to i8
  %4509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4508, i8* %4509, align 1
  %4510 = lshr i32 %4487, 31
  %4511 = xor i32 %4507, %4510
  %4512 = add i32 %4511, %4510
  %4513 = icmp eq i32 %4512, 2
  %4514 = zext i1 %4513 to i8
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4514, i8* %4515, align 1
  store %struct.Memory* %loadMem_43b684, %struct.Memory** %MEMORY
  %loadMem_43b687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4517 = getelementptr inbounds %struct.GPR, %struct.GPR* %4516, i32 0, i32 33
  %4518 = getelementptr inbounds %struct.Reg, %struct.Reg* %4517, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %4518 to i64*
  %4519 = load i64, i64* %PC.i552
  %4520 = add i64 %4519, 78
  %4521 = load i64, i64* %PC.i552
  %4522 = add i64 %4521, 6
  %4523 = load i64, i64* %PC.i552
  %4524 = add i64 %4523, 6
  store i64 %4524, i64* %PC.i552
  %4525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4526 = load i8, i8* %4525, align 1
  %4527 = icmp ne i8 %4526, 0
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4529 = load i8, i8* %4528, align 1
  %4530 = icmp ne i8 %4529, 0
  %4531 = xor i1 %4527, %4530
  %4532 = xor i1 %4531, true
  %4533 = zext i1 %4532 to i8
  store i8 %4533, i8* %BRANCH_TAKEN, align 1
  %4534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4535 = select i1 %4531, i64 %4522, i64 %4520
  store i64 %4535, i64* %4534, align 8
  store %struct.Memory* %loadMem_43b687, %struct.Memory** %MEMORY
  %loadBr_43b687 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b687 = icmp eq i8 %loadBr_43b687, 1
  br i1 %cmpBr_43b687, label %block_.L_43b6d5, label %block_43b68d

block_43b68d:                                     ; preds = %block_.L_43b680
  %loadMem_43b68d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4537 = getelementptr inbounds %struct.GPR, %struct.GPR* %4536, i32 0, i32 33
  %4538 = getelementptr inbounds %struct.Reg, %struct.Reg* %4537, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %4538 to i64*
  %4539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4540 = getelementptr inbounds %struct.GPR, %struct.GPR* %4539, i32 0, i32 15
  %4541 = getelementptr inbounds %struct.Reg, %struct.Reg* %4540, i32 0, i32 0
  %RBP.i551 = bitcast %union.anon* %4541 to i64*
  %4542 = load i64, i64* %RBP.i551
  %4543 = sub i64 %4542, 84
  %4544 = load i64, i64* %PC.i550
  %4545 = add i64 %4544, 4
  store i64 %4545, i64* %PC.i550
  %4546 = inttoptr i64 %4543 to i32*
  %4547 = load i32, i32* %4546
  %4548 = sub i32 %4547, 2
  %4549 = icmp ult i32 %4547, 2
  %4550 = zext i1 %4549 to i8
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4550, i8* %4551, align 1
  %4552 = and i32 %4548, 255
  %4553 = call i32 @llvm.ctpop.i32(i32 %4552)
  %4554 = trunc i32 %4553 to i8
  %4555 = and i8 %4554, 1
  %4556 = xor i8 %4555, 1
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4556, i8* %4557, align 1
  %4558 = xor i32 %4547, 2
  %4559 = xor i32 %4558, %4548
  %4560 = lshr i32 %4559, 4
  %4561 = trunc i32 %4560 to i8
  %4562 = and i8 %4561, 1
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4562, i8* %4563, align 1
  %4564 = icmp eq i32 %4548, 0
  %4565 = zext i1 %4564 to i8
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4565, i8* %4566, align 1
  %4567 = lshr i32 %4548, 31
  %4568 = trunc i32 %4567 to i8
  %4569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4568, i8* %4569, align 1
  %4570 = lshr i32 %4547, 31
  %4571 = xor i32 %4567, %4570
  %4572 = add i32 %4571, %4570
  %4573 = icmp eq i32 %4572, 2
  %4574 = zext i1 %4573 to i8
  %4575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4574, i8* %4575, align 1
  store %struct.Memory* %loadMem_43b68d, %struct.Memory** %MEMORY
  %loadMem_43b691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4577 = getelementptr inbounds %struct.GPR, %struct.GPR* %4576, i32 0, i32 33
  %4578 = getelementptr inbounds %struct.Reg, %struct.Reg* %4577, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %4578 to i64*
  %4579 = load i64, i64* %PC.i549
  %4580 = add i64 %4579, 68
  %4581 = load i64, i64* %PC.i549
  %4582 = add i64 %4581, 6
  %4583 = load i64, i64* %PC.i549
  %4584 = add i64 %4583, 6
  store i64 %4584, i64* %PC.i549
  %4585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4586 = load i8, i8* %4585, align 1
  %4587 = icmp ne i8 %4586, 0
  %4588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4589 = load i8, i8* %4588, align 1
  %4590 = icmp ne i8 %4589, 0
  %4591 = xor i1 %4587, %4590
  %4592 = zext i1 %4591 to i8
  store i8 %4592, i8* %BRANCH_TAKEN, align 1
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4594 = select i1 %4591, i64 %4580, i64 %4582
  store i64 %4594, i64* %4593, align 8
  store %struct.Memory* %loadMem_43b691, %struct.Memory** %MEMORY
  %loadBr_43b691 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b691 = icmp eq i8 %loadBr_43b691, 1
  br i1 %cmpBr_43b691, label %block_.L_43b6d5, label %block_43b697

block_43b697:                                     ; preds = %block_43b68d
  %loadMem_43b697 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4596 = getelementptr inbounds %struct.GPR, %struct.GPR* %4595, i32 0, i32 33
  %4597 = getelementptr inbounds %struct.Reg, %struct.Reg* %4596, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %4597 to i64*
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4599 = getelementptr inbounds %struct.GPR, %struct.GPR* %4598, i32 0, i32 1
  %4600 = getelementptr inbounds %struct.Reg, %struct.Reg* %4599, i32 0, i32 0
  %RAX.i547 = bitcast %union.anon* %4600 to i64*
  %4601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4602 = getelementptr inbounds %struct.GPR, %struct.GPR* %4601, i32 0, i32 15
  %4603 = getelementptr inbounds %struct.Reg, %struct.Reg* %4602, i32 0, i32 0
  %RBP.i548 = bitcast %union.anon* %4603 to i64*
  %4604 = load i64, i64* %RBP.i548
  %4605 = sub i64 %4604, 24
  %4606 = load i64, i64* %PC.i546
  %4607 = add i64 %4606, 4
  store i64 %4607, i64* %PC.i546
  %4608 = inttoptr i64 %4605 to i64*
  %4609 = load i64, i64* %4608
  store i64 %4609, i64* %RAX.i547, align 8
  store %struct.Memory* %loadMem_43b697, %struct.Memory** %MEMORY
  %loadMem_43b69b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4611 = getelementptr inbounds %struct.GPR, %struct.GPR* %4610, i32 0, i32 33
  %4612 = getelementptr inbounds %struct.Reg, %struct.Reg* %4611, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %4612 to i64*
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4614 = getelementptr inbounds %struct.GPR, %struct.GPR* %4613, i32 0, i32 1
  %4615 = getelementptr inbounds %struct.Reg, %struct.Reg* %4614, i32 0, i32 0
  %RAX.i545 = bitcast %union.anon* %4615 to i64*
  %4616 = load i64, i64* %RAX.i545
  %4617 = load i64, i64* %PC.i544
  %4618 = add i64 %4617, 6
  store i64 %4618, i64* %PC.i544
  %4619 = inttoptr i64 %4616 to i32*
  store i32 1, i32* %4619
  store %struct.Memory* %loadMem_43b69b, %struct.Memory** %MEMORY
  %loadMem_43b6a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4621 = getelementptr inbounds %struct.GPR, %struct.GPR* %4620, i32 0, i32 33
  %4622 = getelementptr inbounds %struct.Reg, %struct.Reg* %4621, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %4622 to i64*
  %4623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4624 = getelementptr inbounds %struct.GPR, %struct.GPR* %4623, i32 0, i32 5
  %4625 = getelementptr inbounds %struct.Reg, %struct.Reg* %4624, i32 0, i32 0
  %RCX.i543 = bitcast %union.anon* %4625 to i64*
  %4626 = load i64, i64* %PC.i542
  %4627 = add i64 %4626, 7
  store i64 %4627, i64* %PC.i542
  %4628 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %4629 = zext i32 %4628 to i64
  store i64 %4629, i64* %RCX.i543, align 8
  store %struct.Memory* %loadMem_43b6a1, %struct.Memory** %MEMORY
  %loadMem_43b6a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4631 = getelementptr inbounds %struct.GPR, %struct.GPR* %4630, i32 0, i32 33
  %4632 = getelementptr inbounds %struct.Reg, %struct.Reg* %4631, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %4632 to i64*
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4634 = getelementptr inbounds %struct.GPR, %struct.GPR* %4633, i32 0, i32 5
  %4635 = getelementptr inbounds %struct.Reg, %struct.Reg* %4634, i32 0, i32 0
  %RCX.i541 = bitcast %union.anon* %4635 to i64*
  %4636 = load i64, i64* %RCX.i541
  %4637 = load i64, i64* %PC.i540
  %4638 = add i64 %4637, 3
  store i64 %4638, i64* %PC.i540
  %4639 = and i64 2, %4636
  %4640 = trunc i64 %4639 to i32
  store i64 %4639, i64* %RCX.i541, align 8
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4641, align 1
  %4642 = and i32 %4640, 255
  %4643 = call i32 @llvm.ctpop.i32(i32 %4642)
  %4644 = trunc i32 %4643 to i8
  %4645 = and i8 %4644, 1
  %4646 = xor i8 %4645, 1
  %4647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4646, i8* %4647, align 1
  %4648 = icmp eq i32 %4640, 0
  %4649 = zext i1 %4648 to i8
  %4650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4649, i8* %4650, align 1
  %4651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4651, align 1
  %4652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4652, align 1
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4653, align 1
  store %struct.Memory* %loadMem_43b6a8, %struct.Memory** %MEMORY
  %loadMem_43b6ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4655 = getelementptr inbounds %struct.GPR, %struct.GPR* %4654, i32 0, i32 33
  %4656 = getelementptr inbounds %struct.Reg, %struct.Reg* %4655, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %4656 to i64*
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4658 = getelementptr inbounds %struct.GPR, %struct.GPR* %4657, i32 0, i32 5
  %4659 = getelementptr inbounds %struct.Reg, %struct.Reg* %4658, i32 0, i32 0
  %ECX.i539 = bitcast %union.anon* %4659 to i32*
  %4660 = load i32, i32* %ECX.i539
  %4661 = zext i32 %4660 to i64
  %4662 = load i64, i64* %PC.i538
  %4663 = add i64 %4662, 3
  store i64 %4663, i64* %PC.i538
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4664, align 1
  %4665 = and i32 %4660, 255
  %4666 = call i32 @llvm.ctpop.i32(i32 %4665)
  %4667 = trunc i32 %4666 to i8
  %4668 = and i8 %4667, 1
  %4669 = xor i8 %4668, 1
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4669, i8* %4670, align 1
  %4671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4671, align 1
  %4672 = icmp eq i32 %4660, 0
  %4673 = zext i1 %4672 to i8
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4673, i8* %4674, align 1
  %4675 = lshr i32 %4660, 31
  %4676 = trunc i32 %4675 to i8
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4676, i8* %4677, align 1
  %4678 = lshr i32 %4660, 31
  %4679 = xor i32 %4675, %4678
  %4680 = add i32 %4679, %4678
  %4681 = icmp eq i32 %4680, 2
  %4682 = zext i1 %4681 to i8
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4682, i8* %4683, align 1
  store %struct.Memory* %loadMem_43b6ab, %struct.Memory** %MEMORY
  %loadMem_43b6ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4685 = getelementptr inbounds %struct.GPR, %struct.GPR* %4684, i32 0, i32 33
  %4686 = getelementptr inbounds %struct.Reg, %struct.Reg* %4685, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %4686 to i64*
  %4687 = load i64, i64* %PC.i537
  %4688 = add i64 %4687, 11
  %4689 = load i64, i64* %PC.i537
  %4690 = add i64 %4689, 6
  %4691 = load i64, i64* %PC.i537
  %4692 = add i64 %4691, 6
  store i64 %4692, i64* %PC.i537
  %4693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4694 = load i8, i8* %4693, align 1
  %4695 = icmp eq i8 %4694, 0
  %4696 = zext i1 %4695 to i8
  store i8 %4696, i8* %BRANCH_TAKEN, align 1
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4698 = select i1 %4695, i64 %4688, i64 %4690
  store i64 %4698, i64* %4697, align 8
  store %struct.Memory* %loadMem_43b6ae, %struct.Memory** %MEMORY
  %loadBr_43b6ae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b6ae = icmp eq i8 %loadBr_43b6ae, 1
  br i1 %cmpBr_43b6ae, label %block_.L_43b6b9, label %block_43b6b4

block_43b6b4:                                     ; preds = %block_43b697
  %loadMem_43b6b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4700 = getelementptr inbounds %struct.GPR, %struct.GPR* %4699, i32 0, i32 33
  %4701 = getelementptr inbounds %struct.Reg, %struct.Reg* %4700, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %4701 to i64*
  %4702 = load i64, i64* %PC.i536
  %4703 = add i64 %4702, 28
  %4704 = load i64, i64* %PC.i536
  %4705 = add i64 %4704, 5
  store i64 %4705, i64* %PC.i536
  %4706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4703, i64* %4706, align 8
  store %struct.Memory* %loadMem_43b6b4, %struct.Memory** %MEMORY
  br label %block_.L_43b6d0

block_.L_43b6b9:                                  ; preds = %block_43b697
  %loadMem_43b6b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4708 = getelementptr inbounds %struct.GPR, %struct.GPR* %4707, i32 0, i32 33
  %4709 = getelementptr inbounds %struct.Reg, %struct.Reg* %4708, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %4709 to i64*
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4711 = getelementptr inbounds %struct.GPR, %struct.GPR* %4710, i32 0, i32 11
  %4712 = getelementptr inbounds %struct.Reg, %struct.Reg* %4711, i32 0, i32 0
  %RDI.i535 = bitcast %union.anon* %4712 to i64*
  %4713 = load i64, i64* %PC.i534
  %4714 = add i64 %4713, 10
  store i64 %4714, i64* %PC.i534
  store i64 ptrtoint (%G__0x57dacb_type* @G__0x57dacb to i64), i64* %RDI.i535, align 8
  store %struct.Memory* %loadMem_43b6b9, %struct.Memory** %MEMORY
  %loadMem_43b6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4716 = getelementptr inbounds %struct.GPR, %struct.GPR* %4715, i32 0, i32 33
  %4717 = getelementptr inbounds %struct.Reg, %struct.Reg* %4716, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %4717 to i64*
  %4718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4719 = getelementptr inbounds %struct.GPR, %struct.GPR* %4718, i32 0, i32 1
  %4720 = getelementptr inbounds %struct.Reg, %struct.Reg* %4719, i32 0, i32 0
  %4721 = bitcast %union.anon* %4720 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4721, i32 0, i32 0
  %4722 = load i64, i64* %PC.i533
  %4723 = add i64 %4722, 2
  store i64 %4723, i64* %PC.i533
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_43b6c3, %struct.Memory** %MEMORY
  %loadMem1_43b6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4725 = getelementptr inbounds %struct.GPR, %struct.GPR* %4724, i32 0, i32 33
  %4726 = getelementptr inbounds %struct.Reg, %struct.Reg* %4725, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %4726 to i64*
  %4727 = load i64, i64* %PC.i532
  %4728 = add i64 %4727, 91883
  %4729 = load i64, i64* %PC.i532
  %4730 = add i64 %4729, 5
  %4731 = load i64, i64* %PC.i532
  %4732 = add i64 %4731, 5
  store i64 %4732, i64* %PC.i532
  %4733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4734 = load i64, i64* %4733, align 8
  %4735 = add i64 %4734, -8
  %4736 = inttoptr i64 %4735 to i64*
  store i64 %4730, i64* %4736
  store i64 %4735, i64* %4733, align 8
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4728, i64* %4737, align 8
  store %struct.Memory* %loadMem1_43b6c5, %struct.Memory** %MEMORY
  %loadMem2_43b6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b6c5 = load i64, i64* %3
  %call2_43b6c5 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_43b6c5, %struct.Memory* %loadMem2_43b6c5)
  store %struct.Memory* %call2_43b6c5, %struct.Memory** %MEMORY
  %loadMem_43b6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4739 = getelementptr inbounds %struct.GPR, %struct.GPR* %4738, i32 0, i32 33
  %4740 = getelementptr inbounds %struct.Reg, %struct.Reg* %4739, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %4740 to i64*
  %4741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4742 = getelementptr inbounds %struct.GPR, %struct.GPR* %4741, i32 0, i32 1
  %4743 = getelementptr inbounds %struct.Reg, %struct.Reg* %4742, i32 0, i32 0
  %EAX.i530 = bitcast %union.anon* %4743 to i32*
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4745 = getelementptr inbounds %struct.GPR, %struct.GPR* %4744, i32 0, i32 15
  %4746 = getelementptr inbounds %struct.Reg, %struct.Reg* %4745, i32 0, i32 0
  %RBP.i531 = bitcast %union.anon* %4746 to i64*
  %4747 = load i64, i64* %RBP.i531
  %4748 = sub i64 %4747, 140
  %4749 = load i32, i32* %EAX.i530
  %4750 = zext i32 %4749 to i64
  %4751 = load i64, i64* %PC.i529
  %4752 = add i64 %4751, 6
  store i64 %4752, i64* %PC.i529
  %4753 = inttoptr i64 %4748 to i32*
  store i32 %4749, i32* %4753
  store %struct.Memory* %loadMem_43b6ca, %struct.Memory** %MEMORY
  br label %block_.L_43b6d0

block_.L_43b6d0:                                  ; preds = %block_.L_43b6b9, %block_43b6b4
  %loadMem_43b6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4755 = getelementptr inbounds %struct.GPR, %struct.GPR* %4754, i32 0, i32 33
  %4756 = getelementptr inbounds %struct.Reg, %struct.Reg* %4755, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %4756 to i64*
  %4757 = load i64, i64* %PC.i528
  %4758 = add i64 %4757, 5
  %4759 = load i64, i64* %PC.i528
  %4760 = add i64 %4759, 5
  store i64 %4760, i64* %PC.i528
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4758, i64* %4761, align 8
  store %struct.Memory* %loadMem_43b6d0, %struct.Memory** %MEMORY
  br label %block_.L_43b6d5

block_.L_43b6d5:                                  ; preds = %block_.L_43b6d0, %block_43b68d, %block_.L_43b680
  %loadMem_43b6d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4763 = getelementptr inbounds %struct.GPR, %struct.GPR* %4762, i32 0, i32 33
  %4764 = getelementptr inbounds %struct.Reg, %struct.Reg* %4763, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %4764 to i64*
  %4765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4766 = getelementptr inbounds %struct.GPR, %struct.GPR* %4765, i32 0, i32 15
  %4767 = getelementptr inbounds %struct.Reg, %struct.Reg* %4766, i32 0, i32 0
  %RBP.i527 = bitcast %union.anon* %4767 to i64*
  %4768 = load i64, i64* %RBP.i527
  %4769 = sub i64 %4768, 32
  %4770 = load i64, i64* %PC.i526
  %4771 = add i64 %4770, 5
  store i64 %4771, i64* %PC.i526
  %4772 = inttoptr i64 %4769 to i64*
  %4773 = load i64, i64* %4772
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4774, align 1
  %4775 = trunc i64 %4773 to i32
  %4776 = and i32 %4775, 255
  %4777 = call i32 @llvm.ctpop.i32(i32 %4776)
  %4778 = trunc i32 %4777 to i8
  %4779 = and i8 %4778, 1
  %4780 = xor i8 %4779, 1
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4780, i8* %4781, align 1
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4782, align 1
  %4783 = icmp eq i64 %4773, 0
  %4784 = zext i1 %4783 to i8
  %4785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4784, i8* %4785, align 1
  %4786 = lshr i64 %4773, 63
  %4787 = trunc i64 %4786 to i8
  %4788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4787, i8* %4788, align 1
  %4789 = lshr i64 %4773, 63
  %4790 = xor i64 %4786, %4789
  %4791 = add i64 %4790, %4789
  %4792 = icmp eq i64 %4791, 2
  %4793 = zext i1 %4792 to i8
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4793, i8* %4794, align 1
  store %struct.Memory* %loadMem_43b6d5, %struct.Memory** %MEMORY
  %loadMem_43b6da = load %struct.Memory*, %struct.Memory** %MEMORY
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4796 = getelementptr inbounds %struct.GPR, %struct.GPR* %4795, i32 0, i32 33
  %4797 = getelementptr inbounds %struct.Reg, %struct.Reg* %4796, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %4797 to i64*
  %4798 = load i64, i64* %PC.i525
  %4799 = add i64 %4798, 634
  %4800 = load i64, i64* %PC.i525
  %4801 = add i64 %4800, 6
  %4802 = load i64, i64* %PC.i525
  %4803 = add i64 %4802, 6
  store i64 %4803, i64* %PC.i525
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4805 = load i8, i8* %4804, align 1
  store i8 %4805, i8* %BRANCH_TAKEN, align 1
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4807 = icmp ne i8 %4805, 0
  %4808 = select i1 %4807, i64 %4799, i64 %4801
  store i64 %4808, i64* %4806, align 8
  store %struct.Memory* %loadMem_43b6da, %struct.Memory** %MEMORY
  %loadBr_43b6da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b6da = icmp eq i8 %loadBr_43b6da, 1
  br i1 %cmpBr_43b6da, label %block_.L_43b954, label %block_43b6e0

block_43b6e0:                                     ; preds = %block_.L_43b6d5
  %loadMem_43b6e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 33
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %4811 to i64*
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4813 = getelementptr inbounds %struct.GPR, %struct.GPR* %4812, i32 0, i32 1
  %4814 = getelementptr inbounds %struct.Reg, %struct.Reg* %4813, i32 0, i32 0
  %RAX.i523 = bitcast %union.anon* %4814 to i64*
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4816 = getelementptr inbounds %struct.GPR, %struct.GPR* %4815, i32 0, i32 15
  %4817 = getelementptr inbounds %struct.Reg, %struct.Reg* %4816, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %4817 to i64*
  %4818 = load i64, i64* %RBP.i524
  %4819 = sub i64 %4818, 32
  %4820 = load i64, i64* %PC.i522
  %4821 = add i64 %4820, 4
  store i64 %4821, i64* %PC.i522
  %4822 = inttoptr i64 %4819 to i64*
  %4823 = load i64, i64* %4822
  store i64 %4823, i64* %RAX.i523, align 8
  store %struct.Memory* %loadMem_43b6e0, %struct.Memory** %MEMORY
  %loadMem_43b6e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4825 = getelementptr inbounds %struct.GPR, %struct.GPR* %4824, i32 0, i32 33
  %4826 = getelementptr inbounds %struct.Reg, %struct.Reg* %4825, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %4826 to i64*
  %4827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4828 = getelementptr inbounds %struct.GPR, %struct.GPR* %4827, i32 0, i32 1
  %4829 = getelementptr inbounds %struct.Reg, %struct.Reg* %4828, i32 0, i32 0
  %RAX.i521 = bitcast %union.anon* %4829 to i64*
  %4830 = load i64, i64* %RAX.i521
  %4831 = load i64, i64* %PC.i520
  %4832 = add i64 %4831, 3
  store i64 %4832, i64* %PC.i520
  %4833 = inttoptr i64 %4830 to i32*
  %4834 = load i32, i32* %4833
  %4835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4835, align 1
  %4836 = and i32 %4834, 255
  %4837 = call i32 @llvm.ctpop.i32(i32 %4836)
  %4838 = trunc i32 %4837 to i8
  %4839 = and i8 %4838, 1
  %4840 = xor i8 %4839, 1
  %4841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4840, i8* %4841, align 1
  %4842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4842, align 1
  %4843 = icmp eq i32 %4834, 0
  %4844 = zext i1 %4843 to i8
  %4845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4844, i8* %4845, align 1
  %4846 = lshr i32 %4834, 31
  %4847 = trunc i32 %4846 to i8
  %4848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4847, i8* %4848, align 1
  %4849 = lshr i32 %4834, 31
  %4850 = xor i32 %4846, %4849
  %4851 = add i32 %4850, %4849
  %4852 = icmp eq i32 %4851, 2
  %4853 = zext i1 %4852 to i8
  %4854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4853, i8* %4854, align 1
  store %struct.Memory* %loadMem_43b6e4, %struct.Memory** %MEMORY
  %loadMem_43b6e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4856 = getelementptr inbounds %struct.GPR, %struct.GPR* %4855, i32 0, i32 33
  %4857 = getelementptr inbounds %struct.Reg, %struct.Reg* %4856, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %4857 to i64*
  %4858 = load i64, i64* %PC.i519
  %4859 = add i64 %4858, 621
  %4860 = load i64, i64* %PC.i519
  %4861 = add i64 %4860, 6
  %4862 = load i64, i64* %PC.i519
  %4863 = add i64 %4862, 6
  store i64 %4863, i64* %PC.i519
  %4864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4865 = load i8, i8* %4864, align 1
  %4866 = icmp eq i8 %4865, 0
  %4867 = zext i1 %4866 to i8
  store i8 %4867, i8* %BRANCH_TAKEN, align 1
  %4868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4869 = select i1 %4866, i64 %4859, i64 %4861
  store i64 %4869, i64* %4868, align 8
  store %struct.Memory* %loadMem_43b6e7, %struct.Memory** %MEMORY
  %loadBr_43b6e7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b6e7 = icmp eq i8 %loadBr_43b6e7, 1
  br i1 %cmpBr_43b6e7, label %block_.L_43b954, label %block_43b6ed

block_43b6ed:                                     ; preds = %block_43b6e0
  %loadMem_43b6ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4871 = getelementptr inbounds %struct.GPR, %struct.GPR* %4870, i32 0, i32 33
  %4872 = getelementptr inbounds %struct.Reg, %struct.Reg* %4871, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %4872 to i64*
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4874 = getelementptr inbounds %struct.GPR, %struct.GPR* %4873, i32 0, i32 11
  %4875 = getelementptr inbounds %struct.Reg, %struct.Reg* %4874, i32 0, i32 0
  %RDI.i517 = bitcast %union.anon* %4875 to i64*
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4877 = getelementptr inbounds %struct.GPR, %struct.GPR* %4876, i32 0, i32 15
  %4878 = getelementptr inbounds %struct.Reg, %struct.Reg* %4877, i32 0, i32 0
  %RBP.i518 = bitcast %union.anon* %4878 to i64*
  %4879 = load i64, i64* %RBP.i518
  %4880 = sub i64 %4879, 16
  %4881 = load i64, i64* %PC.i516
  %4882 = add i64 %4881, 4
  store i64 %4882, i64* %PC.i516
  %4883 = inttoptr i64 %4880 to i64*
  %4884 = load i64, i64* %4883
  store i64 %4884, i64* %RDI.i517, align 8
  store %struct.Memory* %loadMem_43b6ed, %struct.Memory** %MEMORY
  %loadMem1_43b6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4886 = getelementptr inbounds %struct.GPR, %struct.GPR* %4885, i32 0, i32 33
  %4887 = getelementptr inbounds %struct.Reg, %struct.Reg* %4886, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %4887 to i64*
  %4888 = load i64, i64* %PC.i515
  %4889 = add i64 %4888, -1761
  %4890 = load i64, i64* %PC.i515
  %4891 = add i64 %4890, 5
  %4892 = load i64, i64* %PC.i515
  %4893 = add i64 %4892, 5
  store i64 %4893, i64* %PC.i515
  %4894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4895 = load i64, i64* %4894, align 8
  %4896 = add i64 %4895, -8
  %4897 = inttoptr i64 %4896 to i64*
  store i64 %4891, i64* %4897
  store i64 %4896, i64* %4894, align 8
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4889, i64* %4898, align 8
  store %struct.Memory* %loadMem1_43b6f1, %struct.Memory** %MEMORY
  %loadMem2_43b6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b6f1 = load i64, i64* %3
  %call2_43b6f1 = call %struct.Memory* @sub_43b010.max_eyes(%struct.State* %0, i64 %loadPC_43b6f1, %struct.Memory* %loadMem2_43b6f1)
  store %struct.Memory* %call2_43b6f1, %struct.Memory** %MEMORY
  %loadMem_43b6f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4900 = getelementptr inbounds %struct.GPR, %struct.GPR* %4899, i32 0, i32 33
  %4901 = getelementptr inbounds %struct.Reg, %struct.Reg* %4900, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %4901 to i64*
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4903 = getelementptr inbounds %struct.GPR, %struct.GPR* %4902, i32 0, i32 11
  %4904 = getelementptr inbounds %struct.Reg, %struct.Reg* %4903, i32 0, i32 0
  %RDI.i513 = bitcast %union.anon* %4904 to i64*
  %4905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4906 = getelementptr inbounds %struct.GPR, %struct.GPR* %4905, i32 0, i32 15
  %4907 = getelementptr inbounds %struct.Reg, %struct.Reg* %4906, i32 0, i32 0
  %RBP.i514 = bitcast %union.anon* %4907 to i64*
  %4908 = load i64, i64* %RBP.i514
  %4909 = sub i64 %4908, 24
  %4910 = load i64, i64* %PC.i512
  %4911 = add i64 %4910, 4
  store i64 %4911, i64* %PC.i512
  %4912 = inttoptr i64 %4909 to i64*
  %4913 = load i64, i64* %4912
  store i64 %4913, i64* %RDI.i513, align 8
  store %struct.Memory* %loadMem_43b6f6, %struct.Memory** %MEMORY
  %loadMem_43b6fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4915 = getelementptr inbounds %struct.GPR, %struct.GPR* %4914, i32 0, i32 33
  %4916 = getelementptr inbounds %struct.Reg, %struct.Reg* %4915, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %4916 to i64*
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4918 = getelementptr inbounds %struct.GPR, %struct.GPR* %4917, i32 0, i32 1
  %4919 = getelementptr inbounds %struct.Reg, %struct.Reg* %4918, i32 0, i32 0
  %EAX.i510 = bitcast %union.anon* %4919 to i32*
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4921 = getelementptr inbounds %struct.GPR, %struct.GPR* %4920, i32 0, i32 11
  %4922 = getelementptr inbounds %struct.Reg, %struct.Reg* %4921, i32 0, i32 0
  %RDI.i511 = bitcast %union.anon* %4922 to i64*
  %4923 = load i32, i32* %EAX.i510
  %4924 = zext i32 %4923 to i64
  %4925 = load i64, i64* %RDI.i511
  %4926 = load i64, i64* %PC.i509
  %4927 = add i64 %4926, 2
  store i64 %4927, i64* %PC.i509
  %4928 = inttoptr i64 %4925 to i32*
  %4929 = load i32, i32* %4928
  %4930 = sub i32 %4923, %4929
  %4931 = icmp ult i32 %4923, %4929
  %4932 = zext i1 %4931 to i8
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4932, i8* %4933, align 1
  %4934 = and i32 %4930, 255
  %4935 = call i32 @llvm.ctpop.i32(i32 %4934)
  %4936 = trunc i32 %4935 to i8
  %4937 = and i8 %4936, 1
  %4938 = xor i8 %4937, 1
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4938, i8* %4939, align 1
  %4940 = xor i32 %4929, %4923
  %4941 = xor i32 %4940, %4930
  %4942 = lshr i32 %4941, 4
  %4943 = trunc i32 %4942 to i8
  %4944 = and i8 %4943, 1
  %4945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4944, i8* %4945, align 1
  %4946 = icmp eq i32 %4930, 0
  %4947 = zext i1 %4946 to i8
  %4948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4947, i8* %4948, align 1
  %4949 = lshr i32 %4930, 31
  %4950 = trunc i32 %4949 to i8
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4950, i8* %4951, align 1
  %4952 = lshr i32 %4923, 31
  %4953 = lshr i32 %4929, 31
  %4954 = xor i32 %4953, %4952
  %4955 = xor i32 %4949, %4952
  %4956 = add i32 %4955, %4954
  %4957 = icmp eq i32 %4956, 2
  %4958 = zext i1 %4957 to i8
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4958, i8* %4959, align 1
  store %struct.Memory* %loadMem_43b6fa, %struct.Memory** %MEMORY
  %loadMem_43b6fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 33
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %4962 to i64*
  %4963 = load i64, i64* %PC.i508
  %4964 = add i64 %4963, 600
  %4965 = load i64, i64* %PC.i508
  %4966 = add i64 %4965, 6
  %4967 = load i64, i64* %PC.i508
  %4968 = add i64 %4967, 6
  store i64 %4968, i64* %PC.i508
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4970 = load i8, i8* %4969, align 1
  store i8 %4970, i8* %BRANCH_TAKEN, align 1
  %4971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4972 = icmp ne i8 %4970, 0
  %4973 = select i1 %4972, i64 %4964, i64 %4966
  store i64 %4973, i64* %4971, align 8
  store %struct.Memory* %loadMem_43b6fc, %struct.Memory** %MEMORY
  %loadBr_43b6fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b6fc = icmp eq i8 %loadBr_43b6fc, 1
  br i1 %cmpBr_43b6fc, label %block_.L_43b954, label %block_43b702

block_43b702:                                     ; preds = %block_43b6ed
  %loadMem_43b702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4975 = getelementptr inbounds %struct.GPR, %struct.GPR* %4974, i32 0, i32 33
  %4976 = getelementptr inbounds %struct.Reg, %struct.Reg* %4975, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %4976 to i64*
  %4977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4978 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4977, i64 0, i64 0
  %YMM0.i506 = bitcast %union.VectorReg* %4978 to %"class.std::bitset"*
  %4979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4980 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4979, i64 0, i64 0
  %XMM0.i507 = bitcast %union.VectorReg* %4980 to %union.vec128_t*
  %4981 = bitcast %"class.std::bitset"* %YMM0.i506 to i8*
  %4982 = bitcast %"class.std::bitset"* %YMM0.i506 to i8*
  %4983 = bitcast %union.vec128_t* %XMM0.i507 to i8*
  %4984 = load i64, i64* %PC.i505
  %4985 = add i64 %4984, 3
  store i64 %4985, i64* %PC.i505
  %4986 = bitcast i8* %4982 to i64*
  %4987 = load i64, i64* %4986, align 1
  %4988 = getelementptr inbounds i8, i8* %4982, i64 8
  %4989 = bitcast i8* %4988 to i64*
  %4990 = load i64, i64* %4989, align 1
  %4991 = bitcast i8* %4983 to i64*
  %4992 = load i64, i64* %4991, align 1
  %4993 = getelementptr inbounds i8, i8* %4983, i64 8
  %4994 = bitcast i8* %4993 to i64*
  %4995 = load i64, i64* %4994, align 1
  %4996 = xor i64 %4992, %4987
  %4997 = xor i64 %4995, %4990
  %4998 = trunc i64 %4996 to i32
  %4999 = lshr i64 %4996, 32
  %5000 = trunc i64 %4999 to i32
  %5001 = bitcast i8* %4981 to i32*
  store i32 %4998, i32* %5001, align 1
  %5002 = getelementptr inbounds i8, i8* %4981, i64 4
  %5003 = bitcast i8* %5002 to i32*
  store i32 %5000, i32* %5003, align 1
  %5004 = trunc i64 %4997 to i32
  %5005 = getelementptr inbounds i8, i8* %4981, i64 8
  %5006 = bitcast i8* %5005 to i32*
  store i32 %5004, i32* %5006, align 1
  %5007 = lshr i64 %4997, 32
  %5008 = trunc i64 %5007 to i32
  %5009 = getelementptr inbounds i8, i8* %4981, i64 12
  %5010 = bitcast i8* %5009 to i32*
  store i32 %5008, i32* %5010, align 1
  store %struct.Memory* %loadMem_43b702, %struct.Memory** %MEMORY
  %loadMem_43b705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5012 = getelementptr inbounds %struct.GPR, %struct.GPR* %5011, i32 0, i32 33
  %5013 = getelementptr inbounds %struct.Reg, %struct.Reg* %5012, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %5013 to i64*
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5015 = getelementptr inbounds %struct.GPR, %struct.GPR* %5014, i32 0, i32 15
  %5016 = getelementptr inbounds %struct.Reg, %struct.Reg* %5015, i32 0, i32 0
  %RBP.i504 = bitcast %union.anon* %5016 to i64*
  %5017 = load i64, i64* %RBP.i504
  %5018 = sub i64 %5017, 92
  %5019 = load i64, i64* %PC.i503
  %5020 = add i64 %5019, 7
  store i64 %5020, i64* %PC.i503
  %5021 = inttoptr i64 %5018 to i32*
  store i32 0, i32* %5021
  store %struct.Memory* %loadMem_43b705, %struct.Memory** %MEMORY
  %loadMem_43b70c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 33
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %5024 to i64*
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5026 = getelementptr inbounds %struct.GPR, %struct.GPR* %5025, i32 0, i32 15
  %5027 = getelementptr inbounds %struct.Reg, %struct.Reg* %5026, i32 0, i32 0
  %RBP.i502 = bitcast %union.anon* %5027 to i64*
  %5028 = load i64, i64* %RBP.i502
  %5029 = sub i64 %5028, 96
  %5030 = load i64, i64* %PC.i501
  %5031 = add i64 %5030, 7
  store i64 %5031, i64* %PC.i501
  %5032 = inttoptr i64 %5029 to i32*
  store i32 0, i32* %5032
  store %struct.Memory* %loadMem_43b70c, %struct.Memory** %MEMORY
  %loadMem_43b713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5034 = getelementptr inbounds %struct.GPR, %struct.GPR* %5033, i32 0, i32 33
  %5035 = getelementptr inbounds %struct.Reg, %struct.Reg* %5034, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %5035 to i64*
  %5036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5037 = getelementptr inbounds %struct.GPR, %struct.GPR* %5036, i32 0, i32 15
  %5038 = getelementptr inbounds %struct.Reg, %struct.Reg* %5037, i32 0, i32 0
  %RBP.i499 = bitcast %union.anon* %5038 to i64*
  %5039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5040 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5039, i64 0, i64 0
  %XMM0.i500 = bitcast %union.VectorReg* %5040 to %union.vec128_t*
  %5041 = load i64, i64* %RBP.i499
  %5042 = sub i64 %5041, 100
  %5043 = bitcast %union.vec128_t* %XMM0.i500 to i8*
  %5044 = load i64, i64* %PC.i498
  %5045 = add i64 %5044, 5
  store i64 %5045, i64* %PC.i498
  %5046 = bitcast i8* %5043 to <2 x float>*
  %5047 = load <2 x float>, <2 x float>* %5046, align 1
  %5048 = extractelement <2 x float> %5047, i32 0
  %5049 = inttoptr i64 %5042 to float*
  store float %5048, float* %5049
  store %struct.Memory* %loadMem_43b713, %struct.Memory** %MEMORY
  %loadMem_43b718 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5051 = getelementptr inbounds %struct.GPR, %struct.GPR* %5050, i32 0, i32 33
  %5052 = getelementptr inbounds %struct.Reg, %struct.Reg* %5051, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %5052 to i64*
  %5053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5054 = getelementptr inbounds %struct.GPR, %struct.GPR* %5053, i32 0, i32 15
  %5055 = getelementptr inbounds %struct.Reg, %struct.Reg* %5054, i32 0, i32 0
  %RBP.i497 = bitcast %union.anon* %5055 to i64*
  %5056 = load i64, i64* %RBP.i497
  %5057 = sub i64 %5056, 104
  %5058 = load i64, i64* %PC.i496
  %5059 = add i64 %5058, 7
  store i64 %5059, i64* %PC.i496
  %5060 = inttoptr i64 %5057 to i32*
  store i32 21, i32* %5060
  store %struct.Memory* %loadMem_43b718, %struct.Memory** %MEMORY
  br label %block_.L_43b71f

block_.L_43b71f:                                  ; preds = %block_.L_43b902, %block_43b702
  %loadMem_43b71f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5062 = getelementptr inbounds %struct.GPR, %struct.GPR* %5061, i32 0, i32 33
  %5063 = getelementptr inbounds %struct.Reg, %struct.Reg* %5062, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %5063 to i64*
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5065 = getelementptr inbounds %struct.GPR, %struct.GPR* %5064, i32 0, i32 15
  %5066 = getelementptr inbounds %struct.Reg, %struct.Reg* %5065, i32 0, i32 0
  %RBP.i495 = bitcast %union.anon* %5066 to i64*
  %5067 = load i64, i64* %RBP.i495
  %5068 = sub i64 %5067, 104
  %5069 = load i64, i64* %PC.i494
  %5070 = add i64 %5069, 7
  store i64 %5070, i64* %PC.i494
  %5071 = inttoptr i64 %5068 to i32*
  %5072 = load i32, i32* %5071
  %5073 = sub i32 %5072, 400
  %5074 = icmp ult i32 %5072, 400
  %5075 = zext i1 %5074 to i8
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5075, i8* %5076, align 1
  %5077 = and i32 %5073, 255
  %5078 = call i32 @llvm.ctpop.i32(i32 %5077)
  %5079 = trunc i32 %5078 to i8
  %5080 = and i8 %5079, 1
  %5081 = xor i8 %5080, 1
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5081, i8* %5082, align 1
  %5083 = xor i32 %5072, 400
  %5084 = xor i32 %5083, %5073
  %5085 = lshr i32 %5084, 4
  %5086 = trunc i32 %5085 to i8
  %5087 = and i8 %5086, 1
  %5088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5087, i8* %5088, align 1
  %5089 = icmp eq i32 %5073, 0
  %5090 = zext i1 %5089 to i8
  %5091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5090, i8* %5091, align 1
  %5092 = lshr i32 %5073, 31
  %5093 = trunc i32 %5092 to i8
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5093, i8* %5094, align 1
  %5095 = lshr i32 %5072, 31
  %5096 = xor i32 %5092, %5095
  %5097 = add i32 %5096, %5095
  %5098 = icmp eq i32 %5097, 2
  %5099 = zext i1 %5098 to i8
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5099, i8* %5100, align 1
  store %struct.Memory* %loadMem_43b71f, %struct.Memory** %MEMORY
  %loadMem_43b726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5102 = getelementptr inbounds %struct.GPR, %struct.GPR* %5101, i32 0, i32 33
  %5103 = getelementptr inbounds %struct.Reg, %struct.Reg* %5102, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %5103 to i64*
  %5104 = load i64, i64* %PC.i493
  %5105 = add i64 %5104, 490
  %5106 = load i64, i64* %PC.i493
  %5107 = add i64 %5106, 6
  %5108 = load i64, i64* %PC.i493
  %5109 = add i64 %5108, 6
  store i64 %5109, i64* %PC.i493
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5111 = load i8, i8* %5110, align 1
  %5112 = icmp ne i8 %5111, 0
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5114 = load i8, i8* %5113, align 1
  %5115 = icmp ne i8 %5114, 0
  %5116 = xor i1 %5112, %5115
  %5117 = xor i1 %5116, true
  %5118 = zext i1 %5117 to i8
  store i8 %5118, i8* %BRANCH_TAKEN, align 1
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5120 = select i1 %5116, i64 %5107, i64 %5105
  store i64 %5120, i64* %5119, align 8
  store %struct.Memory* %loadMem_43b726, %struct.Memory** %MEMORY
  %loadBr_43b726 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b726 = icmp eq i8 %loadBr_43b726, 1
  br i1 %cmpBr_43b726, label %block_.L_43b910, label %block_43b72c

block_43b72c:                                     ; preds = %block_.L_43b71f
  %loadMem_43b72c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5122 = getelementptr inbounds %struct.GPR, %struct.GPR* %5121, i32 0, i32 33
  %5123 = getelementptr inbounds %struct.Reg, %struct.Reg* %5122, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %5123 to i64*
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5125 = getelementptr inbounds %struct.GPR, %struct.GPR* %5124, i32 0, i32 1
  %5126 = getelementptr inbounds %struct.Reg, %struct.Reg* %5125, i32 0, i32 0
  %RAX.i491 = bitcast %union.anon* %5126 to i64*
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5128 = getelementptr inbounds %struct.GPR, %struct.GPR* %5127, i32 0, i32 15
  %5129 = getelementptr inbounds %struct.Reg, %struct.Reg* %5128, i32 0, i32 0
  %RBP.i492 = bitcast %union.anon* %5129 to i64*
  %5130 = load i64, i64* %RBP.i492
  %5131 = sub i64 %5130, 104
  %5132 = load i64, i64* %PC.i490
  %5133 = add i64 %5132, 4
  store i64 %5133, i64* %PC.i490
  %5134 = inttoptr i64 %5131 to i32*
  %5135 = load i32, i32* %5134
  %5136 = sext i32 %5135 to i64
  store i64 %5136, i64* %RAX.i491, align 8
  store %struct.Memory* %loadMem_43b72c, %struct.Memory** %MEMORY
  %loadMem_43b730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5138 = getelementptr inbounds %struct.GPR, %struct.GPR* %5137, i32 0, i32 33
  %5139 = getelementptr inbounds %struct.Reg, %struct.Reg* %5138, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %5139 to i64*
  %5140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5141 = getelementptr inbounds %struct.GPR, %struct.GPR* %5140, i32 0, i32 1
  %5142 = getelementptr inbounds %struct.Reg, %struct.Reg* %5141, i32 0, i32 0
  %RAX.i488 = bitcast %union.anon* %5142 to i64*
  %5143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5144 = getelementptr inbounds %struct.GPR, %struct.GPR* %5143, i32 0, i32 5
  %5145 = getelementptr inbounds %struct.Reg, %struct.Reg* %5144, i32 0, i32 0
  %RCX.i489 = bitcast %union.anon* %5145 to i64*
  %5146 = load i64, i64* %RAX.i488
  %5147 = add i64 %5146, 12099168
  %5148 = load i64, i64* %PC.i487
  %5149 = add i64 %5148, 8
  store i64 %5149, i64* %PC.i487
  %5150 = inttoptr i64 %5147 to i8*
  %5151 = load i8, i8* %5150
  %5152 = zext i8 %5151 to i64
  store i64 %5152, i64* %RCX.i489, align 8
  store %struct.Memory* %loadMem_43b730, %struct.Memory** %MEMORY
  %loadMem_43b738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 33
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %5155 to i64*
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5157 = getelementptr inbounds %struct.GPR, %struct.GPR* %5156, i32 0, i32 5
  %5158 = getelementptr inbounds %struct.Reg, %struct.Reg* %5157, i32 0, i32 0
  %ECX.i486 = bitcast %union.anon* %5158 to i32*
  %5159 = load i32, i32* %ECX.i486
  %5160 = zext i32 %5159 to i64
  %5161 = load i64, i64* %PC.i485
  %5162 = add i64 %5161, 3
  store i64 %5162, i64* %PC.i485
  %5163 = sub i32 %5159, 3
  %5164 = icmp ult i32 %5159, 3
  %5165 = zext i1 %5164 to i8
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5165, i8* %5166, align 1
  %5167 = and i32 %5163, 255
  %5168 = call i32 @llvm.ctpop.i32(i32 %5167)
  %5169 = trunc i32 %5168 to i8
  %5170 = and i8 %5169, 1
  %5171 = xor i8 %5170, 1
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5171, i8* %5172, align 1
  %5173 = xor i64 3, %5160
  %5174 = trunc i64 %5173 to i32
  %5175 = xor i32 %5174, %5163
  %5176 = lshr i32 %5175, 4
  %5177 = trunc i32 %5176 to i8
  %5178 = and i8 %5177, 1
  %5179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5178, i8* %5179, align 1
  %5180 = icmp eq i32 %5163, 0
  %5181 = zext i1 %5180 to i8
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5181, i8* %5182, align 1
  %5183 = lshr i32 %5163, 31
  %5184 = trunc i32 %5183 to i8
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5184, i8* %5185, align 1
  %5186 = lshr i32 %5159, 31
  %5187 = xor i32 %5183, %5186
  %5188 = add i32 %5187, %5186
  %5189 = icmp eq i32 %5188, 2
  %5190 = zext i1 %5189 to i8
  %5191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5190, i8* %5191, align 1
  store %struct.Memory* %loadMem_43b738, %struct.Memory** %MEMORY
  %loadMem_43b73b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5193 = getelementptr inbounds %struct.GPR, %struct.GPR* %5192, i32 0, i32 33
  %5194 = getelementptr inbounds %struct.Reg, %struct.Reg* %5193, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %5194 to i64*
  %5195 = load i64, i64* %PC.i484
  %5196 = add i64 %5195, 450
  %5197 = load i64, i64* %PC.i484
  %5198 = add i64 %5197, 6
  %5199 = load i64, i64* %PC.i484
  %5200 = add i64 %5199, 6
  store i64 %5200, i64* %PC.i484
  %5201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5202 = load i8, i8* %5201, align 1
  store i8 %5202, i8* %BRANCH_TAKEN, align 1
  %5203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5204 = icmp ne i8 %5202, 0
  %5205 = select i1 %5204, i64 %5196, i64 %5198
  store i64 %5205, i64* %5203, align 8
  store %struct.Memory* %loadMem_43b73b, %struct.Memory** %MEMORY
  %loadBr_43b73b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b73b = icmp eq i8 %loadBr_43b73b, 1
  br i1 %cmpBr_43b73b, label %block_.L_43b8fd, label %block_43b741

block_43b741:                                     ; preds = %block_43b72c
  %loadMem_43b741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5207 = getelementptr inbounds %struct.GPR, %struct.GPR* %5206, i32 0, i32 33
  %5208 = getelementptr inbounds %struct.Reg, %struct.Reg* %5207, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %5208 to i64*
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5210 = getelementptr inbounds %struct.GPR, %struct.GPR* %5209, i32 0, i32 1
  %5211 = getelementptr inbounds %struct.Reg, %struct.Reg* %5210, i32 0, i32 0
  %RAX.i482 = bitcast %union.anon* %5211 to i64*
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5213 = getelementptr inbounds %struct.GPR, %struct.GPR* %5212, i32 0, i32 15
  %5214 = getelementptr inbounds %struct.Reg, %struct.Reg* %5213, i32 0, i32 0
  %RBP.i483 = bitcast %union.anon* %5214 to i64*
  %5215 = load i64, i64* %RBP.i483
  %5216 = sub i64 %5215, 48
  %5217 = load i64, i64* %PC.i481
  %5218 = add i64 %5217, 4
  store i64 %5218, i64* %PC.i481
  %5219 = inttoptr i64 %5216 to i64*
  %5220 = load i64, i64* %5219
  store i64 %5220, i64* %RAX.i482, align 8
  store %struct.Memory* %loadMem_43b741, %struct.Memory** %MEMORY
  %loadMem_43b745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5222 = getelementptr inbounds %struct.GPR, %struct.GPR* %5221, i32 0, i32 33
  %5223 = getelementptr inbounds %struct.Reg, %struct.Reg* %5222, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %5223 to i64*
  %5224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5225 = getelementptr inbounds %struct.GPR, %struct.GPR* %5224, i32 0, i32 5
  %5226 = getelementptr inbounds %struct.Reg, %struct.Reg* %5225, i32 0, i32 0
  %RCX.i479 = bitcast %union.anon* %5226 to i64*
  %5227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5228 = getelementptr inbounds %struct.GPR, %struct.GPR* %5227, i32 0, i32 15
  %5229 = getelementptr inbounds %struct.Reg, %struct.Reg* %5228, i32 0, i32 0
  %RBP.i480 = bitcast %union.anon* %5229 to i64*
  %5230 = load i64, i64* %RBP.i480
  %5231 = sub i64 %5230, 104
  %5232 = load i64, i64* %PC.i478
  %5233 = add i64 %5232, 4
  store i64 %5233, i64* %PC.i478
  %5234 = inttoptr i64 %5231 to i32*
  %5235 = load i32, i32* %5234
  %5236 = sext i32 %5235 to i64
  store i64 %5236, i64* %RCX.i479, align 8
  store %struct.Memory* %loadMem_43b745, %struct.Memory** %MEMORY
  %loadMem_43b749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5238 = getelementptr inbounds %struct.GPR, %struct.GPR* %5237, i32 0, i32 33
  %5239 = getelementptr inbounds %struct.Reg, %struct.Reg* %5238, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %5239 to i64*
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5241 = getelementptr inbounds %struct.GPR, %struct.GPR* %5240, i32 0, i32 5
  %5242 = getelementptr inbounds %struct.Reg, %struct.Reg* %5241, i32 0, i32 0
  %RCX.i477 = bitcast %union.anon* %5242 to i64*
  %5243 = load i64, i64* %RCX.i477
  %5244 = load i64, i64* %PC.i476
  %5245 = add i64 %5244, 4
  store i64 %5245, i64* %PC.i476
  %5246 = sext i64 %5243 to i128
  %5247 = and i128 %5246, -18446744073709551616
  %5248 = zext i64 %5243 to i128
  %5249 = or i128 %5247, %5248
  %5250 = mul i128 36, %5249
  %5251 = trunc i128 %5250 to i64
  store i64 %5251, i64* %RCX.i477, align 8
  %5252 = sext i64 %5251 to i128
  %5253 = icmp ne i128 %5252, %5250
  %5254 = zext i1 %5253 to i8
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5254, i8* %5255, align 1
  %5256 = trunc i128 %5250 to i32
  %5257 = and i32 %5256, 255
  %5258 = call i32 @llvm.ctpop.i32(i32 %5257)
  %5259 = trunc i32 %5258 to i8
  %5260 = and i8 %5259, 1
  %5261 = xor i8 %5260, 1
  %5262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5261, i8* %5262, align 1
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5263, align 1
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5264, align 1
  %5265 = lshr i64 %5251, 63
  %5266 = trunc i64 %5265 to i8
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5266, i8* %5267, align 1
  %5268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5254, i8* %5268, align 1
  store %struct.Memory* %loadMem_43b749, %struct.Memory** %MEMORY
  %loadMem_43b74d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5270 = getelementptr inbounds %struct.GPR, %struct.GPR* %5269, i32 0, i32 33
  %5271 = getelementptr inbounds %struct.Reg, %struct.Reg* %5270, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %5271 to i64*
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5273 = getelementptr inbounds %struct.GPR, %struct.GPR* %5272, i32 0, i32 1
  %5274 = getelementptr inbounds %struct.Reg, %struct.Reg* %5273, i32 0, i32 0
  %RAX.i474 = bitcast %union.anon* %5274 to i64*
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5276 = getelementptr inbounds %struct.GPR, %struct.GPR* %5275, i32 0, i32 5
  %5277 = getelementptr inbounds %struct.Reg, %struct.Reg* %5276, i32 0, i32 0
  %RCX.i475 = bitcast %union.anon* %5277 to i64*
  %5278 = load i64, i64* %RAX.i474
  %5279 = load i64, i64* %RCX.i475
  %5280 = load i64, i64* %PC.i473
  %5281 = add i64 %5280, 3
  store i64 %5281, i64* %PC.i473
  %5282 = add i64 %5279, %5278
  store i64 %5282, i64* %RAX.i474, align 8
  %5283 = icmp ult i64 %5282, %5278
  %5284 = icmp ult i64 %5282, %5279
  %5285 = or i1 %5283, %5284
  %5286 = zext i1 %5285 to i8
  %5287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5286, i8* %5287, align 1
  %5288 = trunc i64 %5282 to i32
  %5289 = and i32 %5288, 255
  %5290 = call i32 @llvm.ctpop.i32(i32 %5289)
  %5291 = trunc i32 %5290 to i8
  %5292 = and i8 %5291, 1
  %5293 = xor i8 %5292, 1
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5293, i8* %5294, align 1
  %5295 = xor i64 %5279, %5278
  %5296 = xor i64 %5295, %5282
  %5297 = lshr i64 %5296, 4
  %5298 = trunc i64 %5297 to i8
  %5299 = and i8 %5298, 1
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5299, i8* %5300, align 1
  %5301 = icmp eq i64 %5282, 0
  %5302 = zext i1 %5301 to i8
  %5303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5302, i8* %5303, align 1
  %5304 = lshr i64 %5282, 63
  %5305 = trunc i64 %5304 to i8
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5305, i8* %5306, align 1
  %5307 = lshr i64 %5278, 63
  %5308 = lshr i64 %5279, 63
  %5309 = xor i64 %5304, %5307
  %5310 = xor i64 %5304, %5308
  %5311 = add i64 %5309, %5310
  %5312 = icmp eq i64 %5311, 2
  %5313 = zext i1 %5312 to i8
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5313, i8* %5314, align 1
  store %struct.Memory* %loadMem_43b74d, %struct.Memory** %MEMORY
  %loadMem_43b750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5316 = getelementptr inbounds %struct.GPR, %struct.GPR* %5315, i32 0, i32 33
  %5317 = getelementptr inbounds %struct.Reg, %struct.Reg* %5316, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %5317 to i64*
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5319 = getelementptr inbounds %struct.GPR, %struct.GPR* %5318, i32 0, i32 1
  %5320 = getelementptr inbounds %struct.Reg, %struct.Reg* %5319, i32 0, i32 0
  %RAX.i471 = bitcast %union.anon* %5320 to i64*
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5322 = getelementptr inbounds %struct.GPR, %struct.GPR* %5321, i32 0, i32 7
  %5323 = getelementptr inbounds %struct.Reg, %struct.Reg* %5322, i32 0, i32 0
  %RDX.i472 = bitcast %union.anon* %5323 to i64*
  %5324 = load i64, i64* %RAX.i471
  %5325 = add i64 %5324, 12
  %5326 = load i64, i64* %PC.i470
  %5327 = add i64 %5326, 3
  store i64 %5327, i64* %PC.i470
  %5328 = inttoptr i64 %5325 to i32*
  %5329 = load i32, i32* %5328
  %5330 = zext i32 %5329 to i64
  store i64 %5330, i64* %RDX.i472, align 8
  store %struct.Memory* %loadMem_43b750, %struct.Memory** %MEMORY
  %loadMem_43b753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5332 = getelementptr inbounds %struct.GPR, %struct.GPR* %5331, i32 0, i32 33
  %5333 = getelementptr inbounds %struct.Reg, %struct.Reg* %5332, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %5333 to i64*
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5335 = getelementptr inbounds %struct.GPR, %struct.GPR* %5334, i32 0, i32 7
  %5336 = getelementptr inbounds %struct.Reg, %struct.Reg* %5335, i32 0, i32 0
  %EDX.i468 = bitcast %union.anon* %5336 to i32*
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5338 = getelementptr inbounds %struct.GPR, %struct.GPR* %5337, i32 0, i32 15
  %5339 = getelementptr inbounds %struct.Reg, %struct.Reg* %5338, i32 0, i32 0
  %RBP.i469 = bitcast %union.anon* %5339 to i64*
  %5340 = load i32, i32* %EDX.i468
  %5341 = zext i32 %5340 to i64
  %5342 = load i64, i64* %RBP.i469
  %5343 = sub i64 %5342, 4
  %5344 = load i64, i64* %PC.i467
  %5345 = add i64 %5344, 3
  store i64 %5345, i64* %PC.i467
  %5346 = inttoptr i64 %5343 to i32*
  %5347 = load i32, i32* %5346
  %5348 = sub i32 %5340, %5347
  %5349 = icmp ult i32 %5340, %5347
  %5350 = zext i1 %5349 to i8
  %5351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5350, i8* %5351, align 1
  %5352 = and i32 %5348, 255
  %5353 = call i32 @llvm.ctpop.i32(i32 %5352)
  %5354 = trunc i32 %5353 to i8
  %5355 = and i8 %5354, 1
  %5356 = xor i8 %5355, 1
  %5357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5356, i8* %5357, align 1
  %5358 = xor i32 %5347, %5340
  %5359 = xor i32 %5358, %5348
  %5360 = lshr i32 %5359, 4
  %5361 = trunc i32 %5360 to i8
  %5362 = and i8 %5361, 1
  %5363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5362, i8* %5363, align 1
  %5364 = icmp eq i32 %5348, 0
  %5365 = zext i1 %5364 to i8
  %5366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5365, i8* %5366, align 1
  %5367 = lshr i32 %5348, 31
  %5368 = trunc i32 %5367 to i8
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5368, i8* %5369, align 1
  %5370 = lshr i32 %5340, 31
  %5371 = lshr i32 %5347, 31
  %5372 = xor i32 %5371, %5370
  %5373 = xor i32 %5367, %5370
  %5374 = add i32 %5373, %5372
  %5375 = icmp eq i32 %5374, 2
  %5376 = zext i1 %5375 to i8
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5376, i8* %5377, align 1
  store %struct.Memory* %loadMem_43b753, %struct.Memory** %MEMORY
  %loadMem_43b756 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5379 = getelementptr inbounds %struct.GPR, %struct.GPR* %5378, i32 0, i32 33
  %5380 = getelementptr inbounds %struct.Reg, %struct.Reg* %5379, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %5380 to i64*
  %5381 = load i64, i64* %PC.i466
  %5382 = add i64 %5381, 423
  %5383 = load i64, i64* %PC.i466
  %5384 = add i64 %5383, 6
  %5385 = load i64, i64* %PC.i466
  %5386 = add i64 %5385, 6
  store i64 %5386, i64* %PC.i466
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5388 = load i8, i8* %5387, align 1
  %5389 = icmp eq i8 %5388, 0
  %5390 = zext i1 %5389 to i8
  store i8 %5390, i8* %BRANCH_TAKEN, align 1
  %5391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5392 = select i1 %5389, i64 %5382, i64 %5384
  store i64 %5392, i64* %5391, align 8
  store %struct.Memory* %loadMem_43b756, %struct.Memory** %MEMORY
  %loadBr_43b756 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b756 = icmp eq i8 %loadBr_43b756, 1
  br i1 %cmpBr_43b756, label %block_.L_43b8fd, label %block_43b75c

block_43b75c:                                     ; preds = %block_43b741
  %loadMem_43b75c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5394 = getelementptr inbounds %struct.GPR, %struct.GPR* %5393, i32 0, i32 33
  %5395 = getelementptr inbounds %struct.Reg, %struct.Reg* %5394, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %5395 to i64*
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5397 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5396, i64 0, i64 0
  %YMM0.i464 = bitcast %union.VectorReg* %5397 to %"class.std::bitset"*
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5399 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5398, i64 0, i64 0
  %XMM0.i465 = bitcast %union.VectorReg* %5399 to %union.vec128_t*
  %5400 = bitcast %"class.std::bitset"* %YMM0.i464 to i8*
  %5401 = bitcast %"class.std::bitset"* %YMM0.i464 to i8*
  %5402 = bitcast %union.vec128_t* %XMM0.i465 to i8*
  %5403 = load i64, i64* %PC.i463
  %5404 = add i64 %5403, 3
  store i64 %5404, i64* %PC.i463
  %5405 = bitcast i8* %5401 to i64*
  %5406 = load i64, i64* %5405, align 1
  %5407 = getelementptr inbounds i8, i8* %5401, i64 8
  %5408 = bitcast i8* %5407 to i64*
  %5409 = load i64, i64* %5408, align 1
  %5410 = bitcast i8* %5402 to i64*
  %5411 = load i64, i64* %5410, align 1
  %5412 = getelementptr inbounds i8, i8* %5402, i64 8
  %5413 = bitcast i8* %5412 to i64*
  %5414 = load i64, i64* %5413, align 1
  %5415 = xor i64 %5411, %5406
  %5416 = xor i64 %5414, %5409
  %5417 = trunc i64 %5415 to i32
  %5418 = lshr i64 %5415, 32
  %5419 = trunc i64 %5418 to i32
  %5420 = bitcast i8* %5400 to i32*
  store i32 %5417, i32* %5420, align 1
  %5421 = getelementptr inbounds i8, i8* %5400, i64 4
  %5422 = bitcast i8* %5421 to i32*
  store i32 %5419, i32* %5422, align 1
  %5423 = trunc i64 %5416 to i32
  %5424 = getelementptr inbounds i8, i8* %5400, i64 8
  %5425 = bitcast i8* %5424 to i32*
  store i32 %5423, i32* %5425, align 1
  %5426 = lshr i64 %5416, 32
  %5427 = trunc i64 %5426 to i32
  %5428 = getelementptr inbounds i8, i8* %5400, i64 12
  %5429 = bitcast i8* %5428 to i32*
  store i32 %5427, i32* %5429, align 1
  store %struct.Memory* %loadMem_43b75c, %struct.Memory** %MEMORY
  %loadMem_43b75f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5431 = getelementptr inbounds %struct.GPR, %struct.GPR* %5430, i32 0, i32 33
  %5432 = getelementptr inbounds %struct.Reg, %struct.Reg* %5431, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %5432 to i64*
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5434 = getelementptr inbounds %struct.GPR, %struct.GPR* %5433, i32 0, i32 15
  %5435 = getelementptr inbounds %struct.Reg, %struct.Reg* %5434, i32 0, i32 0
  %RBP.i461 = bitcast %union.anon* %5435 to i64*
  %5436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5437 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5436, i64 0, i64 0
  %XMM0.i462 = bitcast %union.VectorReg* %5437 to %union.vec128_t*
  %5438 = load i64, i64* %RBP.i461
  %5439 = sub i64 %5438, 108
  %5440 = bitcast %union.vec128_t* %XMM0.i462 to i8*
  %5441 = load i64, i64* %PC.i460
  %5442 = add i64 %5441, 5
  store i64 %5442, i64* %PC.i460
  %5443 = bitcast i8* %5440 to <2 x float>*
  %5444 = load <2 x float>, <2 x float>* %5443, align 1
  %5445 = extractelement <2 x float> %5444, i32 0
  %5446 = inttoptr i64 %5439 to float*
  store float %5445, float* %5446
  store %struct.Memory* %loadMem_43b75f, %struct.Memory** %MEMORY
  %loadMem_43b764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5448 = getelementptr inbounds %struct.GPR, %struct.GPR* %5447, i32 0, i32 33
  %5449 = getelementptr inbounds %struct.Reg, %struct.Reg* %5448, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %5449 to i64*
  %5450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5451 = getelementptr inbounds %struct.GPR, %struct.GPR* %5450, i32 0, i32 15
  %5452 = getelementptr inbounds %struct.Reg, %struct.Reg* %5451, i32 0, i32 0
  %RBP.i459 = bitcast %union.anon* %5452 to i64*
  %5453 = load i64, i64* %RBP.i459
  %5454 = sub i64 %5453, 112
  %5455 = load i64, i64* %PC.i458
  %5456 = add i64 %5455, 7
  store i64 %5456, i64* %PC.i458
  %5457 = inttoptr i64 %5454 to i32*
  store i32 0, i32* %5457
  store %struct.Memory* %loadMem_43b764, %struct.Memory** %MEMORY
  %loadMem_43b76b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5459 = getelementptr inbounds %struct.GPR, %struct.GPR* %5458, i32 0, i32 33
  %5460 = getelementptr inbounds %struct.Reg, %struct.Reg* %5459, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %5460 to i64*
  %5461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5462 = getelementptr inbounds %struct.GPR, %struct.GPR* %5461, i32 0, i32 15
  %5463 = getelementptr inbounds %struct.Reg, %struct.Reg* %5462, i32 0, i32 0
  %RBP.i457 = bitcast %union.anon* %5463 to i64*
  %5464 = load i64, i64* %RBP.i457
  %5465 = sub i64 %5464, 116
  %5466 = load i64, i64* %PC.i456
  %5467 = add i64 %5466, 7
  store i64 %5467, i64* %PC.i456
  %5468 = inttoptr i64 %5465 to i32*
  store i32 0, i32* %5468
  store %struct.Memory* %loadMem_43b76b, %struct.Memory** %MEMORY
  %loadMem_43b772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5470 = getelementptr inbounds %struct.GPR, %struct.GPR* %5469, i32 0, i32 33
  %5471 = getelementptr inbounds %struct.Reg, %struct.Reg* %5470, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %5471 to i64*
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5473 = getelementptr inbounds %struct.GPR, %struct.GPR* %5472, i32 0, i32 1
  %5474 = getelementptr inbounds %struct.Reg, %struct.Reg* %5473, i32 0, i32 0
  %RAX.i454 = bitcast %union.anon* %5474 to i64*
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5476 = getelementptr inbounds %struct.GPR, %struct.GPR* %5475, i32 0, i32 15
  %5477 = getelementptr inbounds %struct.Reg, %struct.Reg* %5476, i32 0, i32 0
  %RBP.i455 = bitcast %union.anon* %5477 to i64*
  %5478 = load i64, i64* %RBP.i455
  %5479 = sub i64 %5478, 48
  %5480 = load i64, i64* %PC.i453
  %5481 = add i64 %5480, 4
  store i64 %5481, i64* %PC.i453
  %5482 = inttoptr i64 %5479 to i64*
  %5483 = load i64, i64* %5482
  store i64 %5483, i64* %RAX.i454, align 8
  store %struct.Memory* %loadMem_43b772, %struct.Memory** %MEMORY
  %loadMem_43b776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5485 = getelementptr inbounds %struct.GPR, %struct.GPR* %5484, i32 0, i32 33
  %5486 = getelementptr inbounds %struct.Reg, %struct.Reg* %5485, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %5486 to i64*
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5488 = getelementptr inbounds %struct.GPR, %struct.GPR* %5487, i32 0, i32 5
  %5489 = getelementptr inbounds %struct.Reg, %struct.Reg* %5488, i32 0, i32 0
  %RCX.i451 = bitcast %union.anon* %5489 to i64*
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5491 = getelementptr inbounds %struct.GPR, %struct.GPR* %5490, i32 0, i32 15
  %5492 = getelementptr inbounds %struct.Reg, %struct.Reg* %5491, i32 0, i32 0
  %RBP.i452 = bitcast %union.anon* %5492 to i64*
  %5493 = load i64, i64* %RBP.i452
  %5494 = sub i64 %5493, 104
  %5495 = load i64, i64* %PC.i450
  %5496 = add i64 %5495, 4
  store i64 %5496, i64* %PC.i450
  %5497 = inttoptr i64 %5494 to i32*
  %5498 = load i32, i32* %5497
  %5499 = sext i32 %5498 to i64
  store i64 %5499, i64* %RCX.i451, align 8
  store %struct.Memory* %loadMem_43b776, %struct.Memory** %MEMORY
  %loadMem_43b77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 33
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %5502 to i64*
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5504 = getelementptr inbounds %struct.GPR, %struct.GPR* %5503, i32 0, i32 5
  %5505 = getelementptr inbounds %struct.Reg, %struct.Reg* %5504, i32 0, i32 0
  %RCX.i449 = bitcast %union.anon* %5505 to i64*
  %5506 = load i64, i64* %RCX.i449
  %5507 = load i64, i64* %PC.i448
  %5508 = add i64 %5507, 4
  store i64 %5508, i64* %PC.i448
  %5509 = sext i64 %5506 to i128
  %5510 = and i128 %5509, -18446744073709551616
  %5511 = zext i64 %5506 to i128
  %5512 = or i128 %5510, %5511
  %5513 = mul i128 36, %5512
  %5514 = trunc i128 %5513 to i64
  store i64 %5514, i64* %RCX.i449, align 8
  %5515 = sext i64 %5514 to i128
  %5516 = icmp ne i128 %5515, %5513
  %5517 = zext i1 %5516 to i8
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5517, i8* %5518, align 1
  %5519 = trunc i128 %5513 to i32
  %5520 = and i32 %5519, 255
  %5521 = call i32 @llvm.ctpop.i32(i32 %5520)
  %5522 = trunc i32 %5521 to i8
  %5523 = and i8 %5522, 1
  %5524 = xor i8 %5523, 1
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5524, i8* %5525, align 1
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5526, align 1
  %5527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5527, align 1
  %5528 = lshr i64 %5514, 63
  %5529 = trunc i64 %5528 to i8
  %5530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5529, i8* %5530, align 1
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5517, i8* %5531, align 1
  store %struct.Memory* %loadMem_43b77a, %struct.Memory** %MEMORY
  %loadMem_43b77e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5533 = getelementptr inbounds %struct.GPR, %struct.GPR* %5532, i32 0, i32 33
  %5534 = getelementptr inbounds %struct.Reg, %struct.Reg* %5533, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %5534 to i64*
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5536 = getelementptr inbounds %struct.GPR, %struct.GPR* %5535, i32 0, i32 1
  %5537 = getelementptr inbounds %struct.Reg, %struct.Reg* %5536, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %5537 to i64*
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5539 = getelementptr inbounds %struct.GPR, %struct.GPR* %5538, i32 0, i32 5
  %5540 = getelementptr inbounds %struct.Reg, %struct.Reg* %5539, i32 0, i32 0
  %RCX.i447 = bitcast %union.anon* %5540 to i64*
  %5541 = load i64, i64* %RAX.i446
  %5542 = load i64, i64* %RCX.i447
  %5543 = load i64, i64* %PC.i445
  %5544 = add i64 %5543, 3
  store i64 %5544, i64* %PC.i445
  %5545 = add i64 %5542, %5541
  store i64 %5545, i64* %RAX.i446, align 8
  %5546 = icmp ult i64 %5545, %5541
  %5547 = icmp ult i64 %5545, %5542
  %5548 = or i1 %5546, %5547
  %5549 = zext i1 %5548 to i8
  %5550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5549, i8* %5550, align 1
  %5551 = trunc i64 %5545 to i32
  %5552 = and i32 %5551, 255
  %5553 = call i32 @llvm.ctpop.i32(i32 %5552)
  %5554 = trunc i32 %5553 to i8
  %5555 = and i8 %5554, 1
  %5556 = xor i8 %5555, 1
  %5557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5556, i8* %5557, align 1
  %5558 = xor i64 %5542, %5541
  %5559 = xor i64 %5558, %5545
  %5560 = lshr i64 %5559, 4
  %5561 = trunc i64 %5560 to i8
  %5562 = and i8 %5561, 1
  %5563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5562, i8* %5563, align 1
  %5564 = icmp eq i64 %5545, 0
  %5565 = zext i1 %5564 to i8
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5565, i8* %5566, align 1
  %5567 = lshr i64 %5545, 63
  %5568 = trunc i64 %5567 to i8
  %5569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5568, i8* %5569, align 1
  %5570 = lshr i64 %5541, 63
  %5571 = lshr i64 %5542, 63
  %5572 = xor i64 %5567, %5570
  %5573 = xor i64 %5567, %5571
  %5574 = add i64 %5572, %5573
  %5575 = icmp eq i64 %5574, 2
  %5576 = zext i1 %5575 to i8
  %5577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5576, i8* %5577, align 1
  store %struct.Memory* %loadMem_43b77e, %struct.Memory** %MEMORY
  %loadMem_43b781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5579 = getelementptr inbounds %struct.GPR, %struct.GPR* %5578, i32 0, i32 33
  %5580 = getelementptr inbounds %struct.Reg, %struct.Reg* %5579, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %5580 to i64*
  %5581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5582 = getelementptr inbounds %struct.GPR, %struct.GPR* %5581, i32 0, i32 1
  %5583 = getelementptr inbounds %struct.Reg, %struct.Reg* %5582, i32 0, i32 0
  %RAX.i443 = bitcast %union.anon* %5583 to i64*
  %5584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5585 = getelementptr inbounds %struct.GPR, %struct.GPR* %5584, i32 0, i32 7
  %5586 = getelementptr inbounds %struct.Reg, %struct.Reg* %5585, i32 0, i32 0
  %RDX.i444 = bitcast %union.anon* %5586 to i64*
  %5587 = load i64, i64* %RAX.i443
  %5588 = add i64 %5587, 28
  %5589 = load i64, i64* %PC.i442
  %5590 = add i64 %5589, 4
  store i64 %5590, i64* %PC.i442
  %5591 = inttoptr i64 %5588 to i8*
  %5592 = load i8, i8* %5591
  %5593 = sext i8 %5592 to i64
  %5594 = and i64 %5593, 4294967295
  store i64 %5594, i64* %RDX.i444, align 8
  store %struct.Memory* %loadMem_43b781, %struct.Memory** %MEMORY
  %loadMem_43b785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5596 = getelementptr inbounds %struct.GPR, %struct.GPR* %5595, i32 0, i32 33
  %5597 = getelementptr inbounds %struct.Reg, %struct.Reg* %5596, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %5597 to i64*
  %5598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5599 = getelementptr inbounds %struct.GPR, %struct.GPR* %5598, i32 0, i32 7
  %5600 = getelementptr inbounds %struct.Reg, %struct.Reg* %5599, i32 0, i32 0
  %EDX.i441 = bitcast %union.anon* %5600 to i32*
  %5601 = load i32, i32* %EDX.i441
  %5602 = zext i32 %5601 to i64
  %5603 = load i64, i64* %PC.i440
  %5604 = add i64 %5603, 3
  store i64 %5604, i64* %PC.i440
  %5605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5605, align 1
  %5606 = and i32 %5601, 255
  %5607 = call i32 @llvm.ctpop.i32(i32 %5606)
  %5608 = trunc i32 %5607 to i8
  %5609 = and i8 %5608, 1
  %5610 = xor i8 %5609, 1
  %5611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5610, i8* %5611, align 1
  %5612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5612, align 1
  %5613 = icmp eq i32 %5601, 0
  %5614 = zext i1 %5613 to i8
  %5615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5614, i8* %5615, align 1
  %5616 = lshr i32 %5601, 31
  %5617 = trunc i32 %5616 to i8
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5617, i8* %5618, align 1
  %5619 = lshr i32 %5601, 31
  %5620 = xor i32 %5616, %5619
  %5621 = add i32 %5620, %5619
  %5622 = icmp eq i32 %5621, 2
  %5623 = zext i1 %5622 to i8
  %5624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5623, i8* %5624, align 1
  store %struct.Memory* %loadMem_43b785, %struct.Memory** %MEMORY
  %loadMem_43b788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5626 = getelementptr inbounds %struct.GPR, %struct.GPR* %5625, i32 0, i32 33
  %5627 = getelementptr inbounds %struct.Reg, %struct.Reg* %5626, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %5627 to i64*
  %5628 = load i64, i64* %PC.i439
  %5629 = add i64 %5628, 199
  %5630 = load i64, i64* %PC.i439
  %5631 = add i64 %5630, 6
  %5632 = load i64, i64* %PC.i439
  %5633 = add i64 %5632, 6
  store i64 %5633, i64* %PC.i439
  %5634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5635 = load i8, i8* %5634, align 1
  store i8 %5635, i8* %BRANCH_TAKEN, align 1
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5637 = icmp ne i8 %5635, 0
  %5638 = select i1 %5637, i64 %5629, i64 %5631
  store i64 %5638, i64* %5636, align 8
  store %struct.Memory* %loadMem_43b788, %struct.Memory** %MEMORY
  %loadBr_43b788 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b788 = icmp eq i8 %loadBr_43b788, 1
  br i1 %cmpBr_43b788, label %block_.L_43b84f, label %block_43b78e

block_43b78e:                                     ; preds = %block_43b75c
  %loadMem_43b78e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5640 = getelementptr inbounds %struct.GPR, %struct.GPR* %5639, i32 0, i32 33
  %5641 = getelementptr inbounds %struct.Reg, %struct.Reg* %5640, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %5641 to i64*
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5643 = getelementptr inbounds %struct.GPR, %struct.GPR* %5642, i32 0, i32 1
  %5644 = getelementptr inbounds %struct.Reg, %struct.Reg* %5643, i32 0, i32 0
  %RAX.i437 = bitcast %union.anon* %5644 to i64*
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5646 = getelementptr inbounds %struct.GPR, %struct.GPR* %5645, i32 0, i32 15
  %5647 = getelementptr inbounds %struct.Reg, %struct.Reg* %5646, i32 0, i32 0
  %RBP.i438 = bitcast %union.anon* %5647 to i64*
  %5648 = load i64, i64* %RBP.i438
  %5649 = sub i64 %5648, 104
  %5650 = load i64, i64* %PC.i436
  %5651 = add i64 %5650, 4
  store i64 %5651, i64* %PC.i436
  %5652 = inttoptr i64 %5649 to i32*
  %5653 = load i32, i32* %5652
  %5654 = sext i32 %5653 to i64
  store i64 %5654, i64* %RAX.i437, align 8
  store %struct.Memory* %loadMem_43b78e, %struct.Memory** %MEMORY
  %loadMem_43b792 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5656 = getelementptr inbounds %struct.GPR, %struct.GPR* %5655, i32 0, i32 33
  %5657 = getelementptr inbounds %struct.Reg, %struct.Reg* %5656, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %5657 to i64*
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5659 = getelementptr inbounds %struct.GPR, %struct.GPR* %5658, i32 0, i32 1
  %5660 = getelementptr inbounds %struct.Reg, %struct.Reg* %5659, i32 0, i32 0
  %RAX.i434 = bitcast %union.anon* %5660 to i64*
  %5661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5662 = getelementptr inbounds %struct.GPR, %struct.GPR* %5661, i32 0, i32 5
  %5663 = getelementptr inbounds %struct.Reg, %struct.Reg* %5662, i32 0, i32 0
  %RCX.i435 = bitcast %union.anon* %5663 to i64*
  %5664 = load i64, i64* %RAX.i434
  %5665 = add i64 %5664, 12099168
  %5666 = load i64, i64* %PC.i433
  %5667 = add i64 %5666, 8
  store i64 %5667, i64* %PC.i433
  %5668 = inttoptr i64 %5665 to i8*
  %5669 = load i8, i8* %5668
  %5670 = zext i8 %5669 to i64
  store i64 %5670, i64* %RCX.i435, align 8
  store %struct.Memory* %loadMem_43b792, %struct.Memory** %MEMORY
  %loadMem_43b79a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5672 = getelementptr inbounds %struct.GPR, %struct.GPR* %5671, i32 0, i32 33
  %5673 = getelementptr inbounds %struct.Reg, %struct.Reg* %5672, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %5673 to i64*
  %5674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5675 = getelementptr inbounds %struct.GPR, %struct.GPR* %5674, i32 0, i32 5
  %5676 = getelementptr inbounds %struct.Reg, %struct.Reg* %5675, i32 0, i32 0
  %ECX.i432 = bitcast %union.anon* %5676 to i32*
  %5677 = load i32, i32* %ECX.i432
  %5678 = zext i32 %5677 to i64
  %5679 = load i64, i64* %PC.i431
  %5680 = add i64 %5679, 3
  store i64 %5680, i64* %PC.i431
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5681, align 1
  %5682 = and i32 %5677, 255
  %5683 = call i32 @llvm.ctpop.i32(i32 %5682)
  %5684 = trunc i32 %5683 to i8
  %5685 = and i8 %5684, 1
  %5686 = xor i8 %5685, 1
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5686, i8* %5687, align 1
  %5688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5688, align 1
  %5689 = icmp eq i32 %5677, 0
  %5690 = zext i1 %5689 to i8
  %5691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5690, i8* %5691, align 1
  %5692 = lshr i32 %5677, 31
  %5693 = trunc i32 %5692 to i8
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5693, i8* %5694, align 1
  %5695 = lshr i32 %5677, 31
  %5696 = xor i32 %5692, %5695
  %5697 = add i32 %5696, %5695
  %5698 = icmp eq i32 %5697, 2
  %5699 = zext i1 %5698 to i8
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5699, i8* %5700, align 1
  store %struct.Memory* %loadMem_43b79a, %struct.Memory** %MEMORY
  %loadMem_43b79d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5702 = getelementptr inbounds %struct.GPR, %struct.GPR* %5701, i32 0, i32 33
  %5703 = getelementptr inbounds %struct.Reg, %struct.Reg* %5702, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %5703 to i64*
  %5704 = load i64, i64* %PC.i430
  %5705 = add i64 %5704, 178
  %5706 = load i64, i64* %PC.i430
  %5707 = add i64 %5706, 6
  %5708 = load i64, i64* %PC.i430
  %5709 = add i64 %5708, 6
  store i64 %5709, i64* %PC.i430
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5711 = load i8, i8* %5710, align 1
  %5712 = icmp eq i8 %5711, 0
  %5713 = zext i1 %5712 to i8
  store i8 %5713, i8* %BRANCH_TAKEN, align 1
  %5714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5715 = select i1 %5712, i64 %5705, i64 %5707
  store i64 %5715, i64* %5714, align 8
  store %struct.Memory* %loadMem_43b79d, %struct.Memory** %MEMORY
  %loadBr_43b79d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b79d = icmp eq i8 %loadBr_43b79d, 1
  br i1 %cmpBr_43b79d, label %block_.L_43b84f, label %block_43b7a3

block_43b7a3:                                     ; preds = %block_43b78e
  %loadMem_43b7a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5717 = getelementptr inbounds %struct.GPR, %struct.GPR* %5716, i32 0, i32 33
  %5718 = getelementptr inbounds %struct.Reg, %struct.Reg* %5717, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %5718 to i64*
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5720 = getelementptr inbounds %struct.GPR, %struct.GPR* %5719, i32 0, i32 1
  %5721 = getelementptr inbounds %struct.Reg, %struct.Reg* %5720, i32 0, i32 0
  %RAX.i429 = bitcast %union.anon* %5721 to i64*
  %5722 = load i64, i64* %PC.i428
  %5723 = add i64 %5722, 5
  store i64 %5723, i64* %PC.i428
  store i64 1, i64* %RAX.i429, align 8
  store %struct.Memory* %loadMem_43b7a3, %struct.Memory** %MEMORY
  %loadMem_43b7a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5725 = getelementptr inbounds %struct.GPR, %struct.GPR* %5724, i32 0, i32 33
  %5726 = getelementptr inbounds %struct.Reg, %struct.Reg* %5725, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %5726 to i64*
  %5727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5728 = getelementptr inbounds %struct.GPR, %struct.GPR* %5727, i32 0, i32 5
  %5729 = getelementptr inbounds %struct.Reg, %struct.Reg* %5728, i32 0, i32 0
  %RCX.i427 = bitcast %union.anon* %5729 to i64*
  %5730 = load i64, i64* %PC.i426
  %5731 = add i64 %5730, 5
  store i64 %5731, i64* %PC.i426
  store i64 2, i64* %RCX.i427, align 8
  store %struct.Memory* %loadMem_43b7a8, %struct.Memory** %MEMORY
  %loadMem_43b7ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %5732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5733 = getelementptr inbounds %struct.GPR, %struct.GPR* %5732, i32 0, i32 33
  %5734 = getelementptr inbounds %struct.Reg, %struct.Reg* %5733, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %5734 to i64*
  %5735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5736 = getelementptr inbounds %struct.GPR, %struct.GPR* %5735, i32 0, i32 7
  %5737 = getelementptr inbounds %struct.Reg, %struct.Reg* %5736, i32 0, i32 0
  %RDX.i424 = bitcast %union.anon* %5737 to i64*
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5739 = getelementptr inbounds %struct.GPR, %struct.GPR* %5738, i32 0, i32 15
  %5740 = getelementptr inbounds %struct.Reg, %struct.Reg* %5739, i32 0, i32 0
  %RBP.i425 = bitcast %union.anon* %5740 to i64*
  %5741 = load i64, i64* %RBP.i425
  %5742 = sub i64 %5741, 48
  %5743 = load i64, i64* %PC.i423
  %5744 = add i64 %5743, 4
  store i64 %5744, i64* %PC.i423
  %5745 = inttoptr i64 %5742 to i64*
  %5746 = load i64, i64* %5745
  store i64 %5746, i64* %RDX.i424, align 8
  store %struct.Memory* %loadMem_43b7ad, %struct.Memory** %MEMORY
  %loadMem_43b7b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5748 = getelementptr inbounds %struct.GPR, %struct.GPR* %5747, i32 0, i32 33
  %5749 = getelementptr inbounds %struct.Reg, %struct.Reg* %5748, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %5749 to i64*
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 9
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %RSI.i421 = bitcast %union.anon* %5752 to i64*
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5754 = getelementptr inbounds %struct.GPR, %struct.GPR* %5753, i32 0, i32 15
  %5755 = getelementptr inbounds %struct.Reg, %struct.Reg* %5754, i32 0, i32 0
  %RBP.i422 = bitcast %union.anon* %5755 to i64*
  %5756 = load i64, i64* %RBP.i422
  %5757 = sub i64 %5756, 104
  %5758 = load i64, i64* %PC.i420
  %5759 = add i64 %5758, 4
  store i64 %5759, i64* %PC.i420
  %5760 = inttoptr i64 %5757 to i32*
  %5761 = load i32, i32* %5760
  %5762 = sext i32 %5761 to i64
  store i64 %5762, i64* %RSI.i421, align 8
  store %struct.Memory* %loadMem_43b7b1, %struct.Memory** %MEMORY
  %loadMem_43b7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5764 = getelementptr inbounds %struct.GPR, %struct.GPR* %5763, i32 0, i32 33
  %5765 = getelementptr inbounds %struct.Reg, %struct.Reg* %5764, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %5765 to i64*
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5767 = getelementptr inbounds %struct.GPR, %struct.GPR* %5766, i32 0, i32 9
  %5768 = getelementptr inbounds %struct.Reg, %struct.Reg* %5767, i32 0, i32 0
  %RSI.i419 = bitcast %union.anon* %5768 to i64*
  %5769 = load i64, i64* %RSI.i419
  %5770 = load i64, i64* %RSI.i419
  %5771 = mul i64 %5770, 8
  %5772 = add i64 %5771, %5769
  %5773 = load i64, i64* %PC.i418
  %5774 = add i64 %5773, 4
  store i64 %5774, i64* %PC.i418
  store i64 %5772, i64* %RSI.i419, align 8
  store %struct.Memory* %loadMem_43b7b5, %struct.Memory** %MEMORY
  %loadMem_43b7b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5776 = getelementptr inbounds %struct.GPR, %struct.GPR* %5775, i32 0, i32 33
  %5777 = getelementptr inbounds %struct.Reg, %struct.Reg* %5776, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %5777 to i64*
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5779 = getelementptr inbounds %struct.GPR, %struct.GPR* %5778, i32 0, i32 7
  %5780 = getelementptr inbounds %struct.Reg, %struct.Reg* %5779, i32 0, i32 0
  %RDX.i415 = bitcast %union.anon* %5780 to i64*
  %5781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5782 = getelementptr inbounds %struct.GPR, %struct.GPR* %5781, i32 0, i32 9
  %5783 = getelementptr inbounds %struct.Reg, %struct.Reg* %5782, i32 0, i32 0
  %RSI.i416 = bitcast %union.anon* %5783 to i64*
  %5784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5785 = getelementptr inbounds %struct.GPR, %struct.GPR* %5784, i32 0, i32 11
  %5786 = getelementptr inbounds %struct.Reg, %struct.Reg* %5785, i32 0, i32 0
  %RDI.i417 = bitcast %union.anon* %5786 to i64*
  %5787 = load i64, i64* %RDX.i415
  %5788 = load i64, i64* %RSI.i416
  %5789 = mul i64 %5788, 4
  %5790 = add i64 %5787, 30
  %5791 = add i64 %5790, %5789
  %5792 = load i64, i64* %PC.i414
  %5793 = add i64 %5792, 5
  store i64 %5793, i64* %PC.i414
  %5794 = inttoptr i64 %5791 to i8*
  %5795 = load i8, i8* %5794
  %5796 = sext i8 %5795 to i64
  %5797 = and i64 %5796, 4294967295
  store i64 %5797, i64* %RDI.i417, align 8
  store %struct.Memory* %loadMem_43b7b9, %struct.Memory** %MEMORY
  %loadMem_43b7be = load %struct.Memory*, %struct.Memory** %MEMORY
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5799 = getelementptr inbounds %struct.GPR, %struct.GPR* %5798, i32 0, i32 33
  %5800 = getelementptr inbounds %struct.Reg, %struct.Reg* %5799, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %5800 to i64*
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5802 = getelementptr inbounds %struct.GPR, %struct.GPR* %5801, i32 0, i32 11
  %5803 = getelementptr inbounds %struct.Reg, %struct.Reg* %5802, i32 0, i32 0
  %5804 = bitcast %union.anon* %5803 to %struct.anon.2*
  %DIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5804, i32 0, i32 0
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5806 = getelementptr inbounds %struct.GPR, %struct.GPR* %5805, i32 0, i32 17
  %5807 = getelementptr inbounds %struct.Reg, %struct.Reg* %5806, i32 0, i32 0
  %5808 = bitcast %union.anon* %5807 to %struct.anon.2*
  %R8B.i413 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5808, i32 0, i32 0
  %5809 = load i8, i8* %DIL.i
  %5810 = zext i8 %5809 to i64
  %5811 = load i64, i64* %PC.i412
  %5812 = add i64 %5811, 3
  store i64 %5812, i64* %PC.i412
  store i8 %5809, i8* %R8B.i413, align 1
  store %struct.Memory* %loadMem_43b7be, %struct.Memory** %MEMORY
  %loadMem_43b7c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5814 = getelementptr inbounds %struct.GPR, %struct.GPR* %5813, i32 0, i32 33
  %5815 = getelementptr inbounds %struct.Reg, %struct.Reg* %5814, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %5815 to i64*
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5817 = getelementptr inbounds %struct.GPR, %struct.GPR* %5816, i32 0, i32 11
  %5818 = getelementptr inbounds %struct.Reg, %struct.Reg* %5817, i32 0, i32 0
  %EDI.i410 = bitcast %union.anon* %5818 to i32*
  %5819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5820 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5819, i64 0, i64 0
  %YMM0.i411 = bitcast %union.VectorReg* %5820 to %"class.std::bitset"*
  %5821 = bitcast %"class.std::bitset"* %YMM0.i411 to i8*
  %5822 = load i32, i32* %EDI.i410
  %5823 = zext i32 %5822 to i64
  %5824 = load i64, i64* %PC.i409
  %5825 = add i64 %5824, 4
  store i64 %5825, i64* %PC.i409
  %5826 = bitcast i8* %5821 to <2 x i32>*
  %5827 = load <2 x i32>, <2 x i32>* %5826, align 1
  %5828 = getelementptr inbounds i8, i8* %5821, i64 8
  %5829 = bitcast i8* %5828 to <2 x i32>*
  %5830 = load <2 x i32>, <2 x i32>* %5829, align 1
  %5831 = sitofp i32 %5822 to float
  %5832 = bitcast i8* %5821 to float*
  store float %5831, float* %5832, align 1
  %5833 = extractelement <2 x i32> %5827, i32 1
  %5834 = getelementptr inbounds i8, i8* %5821, i64 4
  %5835 = bitcast i8* %5834 to i32*
  store i32 %5833, i32* %5835, align 1
  %5836 = extractelement <2 x i32> %5830, i32 0
  %5837 = bitcast i8* %5828 to i32*
  store i32 %5836, i32* %5837, align 1
  %5838 = extractelement <2 x i32> %5830, i32 1
  %5839 = getelementptr inbounds i8, i8* %5821, i64 12
  %5840 = bitcast i8* %5839 to i32*
  store i32 %5838, i32* %5840, align 1
  store %struct.Memory* %loadMem_43b7c1, %struct.Memory** %MEMORY
  %loadMem_43b7c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5842 = getelementptr inbounds %struct.GPR, %struct.GPR* %5841, i32 0, i32 33
  %5843 = getelementptr inbounds %struct.Reg, %struct.Reg* %5842, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %5843 to i64*
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5845 = getelementptr inbounds %struct.GPR, %struct.GPR* %5844, i32 0, i32 15
  %5846 = getelementptr inbounds %struct.Reg, %struct.Reg* %5845, i32 0, i32 0
  %RBP.i407 = bitcast %union.anon* %5846 to i64*
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5848 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5847, i64 0, i64 0
  %XMM0.i408 = bitcast %union.VectorReg* %5848 to %union.vec128_t*
  %5849 = load i64, i64* %RBP.i407
  %5850 = sub i64 %5849, 108
  %5851 = bitcast %union.vec128_t* %XMM0.i408 to i8*
  %5852 = load i64, i64* %PC.i406
  %5853 = add i64 %5852, 5
  store i64 %5853, i64* %PC.i406
  %5854 = bitcast i8* %5851 to <2 x float>*
  %5855 = load <2 x float>, <2 x float>* %5854, align 1
  %5856 = extractelement <2 x float> %5855, i32 0
  %5857 = inttoptr i64 %5850 to float*
  store float %5856, float* %5857
  store %struct.Memory* %loadMem_43b7c5, %struct.Memory** %MEMORY
  %loadMem_43b7ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5859 = getelementptr inbounds %struct.GPR, %struct.GPR* %5858, i32 0, i32 33
  %5860 = getelementptr inbounds %struct.Reg, %struct.Reg* %5859, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %5860 to i64*
  %5861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5862 = getelementptr inbounds %struct.GPR, %struct.GPR* %5861, i32 0, i32 11
  %5863 = getelementptr inbounds %struct.Reg, %struct.Reg* %5862, i32 0, i32 0
  %RDI.i404 = bitcast %union.anon* %5863 to i64*
  %5864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5865 = getelementptr inbounds %struct.GPR, %struct.GPR* %5864, i32 0, i32 15
  %5866 = getelementptr inbounds %struct.Reg, %struct.Reg* %5865, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %5866 to i64*
  %5867 = load i64, i64* %RBP.i405
  %5868 = sub i64 %5867, 104
  %5869 = load i64, i64* %PC.i403
  %5870 = add i64 %5869, 3
  store i64 %5870, i64* %PC.i403
  %5871 = inttoptr i64 %5868 to i32*
  %5872 = load i32, i32* %5871
  %5873 = zext i32 %5872 to i64
  store i64 %5873, i64* %RDI.i404, align 8
  store %struct.Memory* %loadMem_43b7ca, %struct.Memory** %MEMORY
  %loadMem_43b7cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5875 = getelementptr inbounds %struct.GPR, %struct.GPR* %5874, i32 0, i32 33
  %5876 = getelementptr inbounds %struct.Reg, %struct.Reg* %5875, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %5876 to i64*
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5878 = getelementptr inbounds %struct.GPR, %struct.GPR* %5877, i32 0, i32 11
  %5879 = getelementptr inbounds %struct.Reg, %struct.Reg* %5878, i32 0, i32 0
  %EDI.i401 = bitcast %union.anon* %5879 to i32*
  %5880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5881 = getelementptr inbounds %struct.GPR, %struct.GPR* %5880, i32 0, i32 15
  %5882 = getelementptr inbounds %struct.Reg, %struct.Reg* %5881, i32 0, i32 0
  %RBP.i402 = bitcast %union.anon* %5882 to i64*
  %5883 = load i64, i64* %RBP.i402
  %5884 = sub i64 %5883, 112
  %5885 = load i32, i32* %EDI.i401
  %5886 = zext i32 %5885 to i64
  %5887 = load i64, i64* %PC.i400
  %5888 = add i64 %5887, 3
  store i64 %5888, i64* %PC.i400
  %5889 = inttoptr i64 %5884 to i32*
  store i32 %5885, i32* %5889
  store %struct.Memory* %loadMem_43b7cd, %struct.Memory** %MEMORY
  %loadMem_43b7d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5891 = getelementptr inbounds %struct.GPR, %struct.GPR* %5890, i32 0, i32 33
  %5892 = getelementptr inbounds %struct.Reg, %struct.Reg* %5891, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %5892 to i64*
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5894 = getelementptr inbounds %struct.GPR, %struct.GPR* %5893, i32 0, i32 11
  %5895 = getelementptr inbounds %struct.Reg, %struct.Reg* %5894, i32 0, i32 0
  %RDI.i398 = bitcast %union.anon* %5895 to i64*
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5897 = getelementptr inbounds %struct.GPR, %struct.GPR* %5896, i32 0, i32 15
  %5898 = getelementptr inbounds %struct.Reg, %struct.Reg* %5897, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %5898 to i64*
  %5899 = load i64, i64* %RBP.i399
  %5900 = sub i64 %5899, 104
  %5901 = load i64, i64* %PC.i397
  %5902 = add i64 %5901, 3
  store i64 %5902, i64* %PC.i397
  %5903 = inttoptr i64 %5900 to i32*
  %5904 = load i32, i32* %5903
  %5905 = zext i32 %5904 to i64
  store i64 %5905, i64* %RDI.i398, align 8
  store %struct.Memory* %loadMem_43b7d0, %struct.Memory** %MEMORY
  %loadMem_43b7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5907 = getelementptr inbounds %struct.GPR, %struct.GPR* %5906, i32 0, i32 33
  %5908 = getelementptr inbounds %struct.Reg, %struct.Reg* %5907, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %5908 to i64*
  %5909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5910 = getelementptr inbounds %struct.GPR, %struct.GPR* %5909, i32 0, i32 11
  %5911 = getelementptr inbounds %struct.Reg, %struct.Reg* %5910, i32 0, i32 0
  %EDI.i395 = bitcast %union.anon* %5911 to i32*
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5913 = getelementptr inbounds %struct.GPR, %struct.GPR* %5912, i32 0, i32 15
  %5914 = getelementptr inbounds %struct.Reg, %struct.Reg* %5913, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %5914 to i64*
  %5915 = load i64, i64* %RBP.i396
  %5916 = sub i64 %5915, 116
  %5917 = load i32, i32* %EDI.i395
  %5918 = zext i32 %5917 to i64
  %5919 = load i64, i64* %PC.i394
  %5920 = add i64 %5919, 3
  store i64 %5920, i64* %PC.i394
  %5921 = inttoptr i64 %5916 to i32*
  store i32 %5917, i32* %5921
  store %struct.Memory* %loadMem_43b7d3, %struct.Memory** %MEMORY
  %loadMem_43b7d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5923 = getelementptr inbounds %struct.GPR, %struct.GPR* %5922, i32 0, i32 33
  %5924 = getelementptr inbounds %struct.Reg, %struct.Reg* %5923, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %5924 to i64*
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5926 = getelementptr inbounds %struct.GPR, %struct.GPR* %5925, i32 0, i32 11
  %5927 = getelementptr inbounds %struct.Reg, %struct.Reg* %5926, i32 0, i32 0
  %RDI.i392 = bitcast %union.anon* %5927 to i64*
  %5928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5929 = getelementptr inbounds %struct.GPR, %struct.GPR* %5928, i32 0, i32 15
  %5930 = getelementptr inbounds %struct.Reg, %struct.Reg* %5929, i32 0, i32 0
  %RBP.i393 = bitcast %union.anon* %5930 to i64*
  %5931 = load i64, i64* %RBP.i393
  %5932 = sub i64 %5931, 104
  %5933 = load i64, i64* %PC.i391
  %5934 = add i64 %5933, 3
  store i64 %5934, i64* %PC.i391
  %5935 = inttoptr i64 %5932 to i32*
  %5936 = load i32, i32* %5935
  %5937 = zext i32 %5936 to i64
  store i64 %5937, i64* %RDI.i392, align 8
  store %struct.Memory* %loadMem_43b7d6, %struct.Memory** %MEMORY
  %loadMem_43b7d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5939 = getelementptr inbounds %struct.GPR, %struct.GPR* %5938, i32 0, i32 33
  %5940 = getelementptr inbounds %struct.Reg, %struct.Reg* %5939, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %5940 to i64*
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5942 = getelementptr inbounds %struct.GPR, %struct.GPR* %5941, i32 0, i32 7
  %5943 = getelementptr inbounds %struct.Reg, %struct.Reg* %5942, i32 0, i32 0
  %RDX.i389 = bitcast %union.anon* %5943 to i64*
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5945 = getelementptr inbounds %struct.GPR, %struct.GPR* %5944, i32 0, i32 15
  %5946 = getelementptr inbounds %struct.Reg, %struct.Reg* %5945, i32 0, i32 0
  %RBP.i390 = bitcast %union.anon* %5946 to i64*
  %5947 = load i64, i64* %RBP.i390
  %5948 = sub i64 %5947, 48
  %5949 = load i64, i64* %PC.i388
  %5950 = add i64 %5949, 4
  store i64 %5950, i64* %PC.i388
  %5951 = inttoptr i64 %5948 to i64*
  %5952 = load i64, i64* %5951
  store i64 %5952, i64* %RDX.i389, align 8
  store %struct.Memory* %loadMem_43b7d9, %struct.Memory** %MEMORY
  %loadMem_43b7dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5954 = getelementptr inbounds %struct.GPR, %struct.GPR* %5953, i32 0, i32 33
  %5955 = getelementptr inbounds %struct.Reg, %struct.Reg* %5954, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %5955 to i64*
  %5956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5957 = getelementptr inbounds %struct.GPR, %struct.GPR* %5956, i32 0, i32 9
  %5958 = getelementptr inbounds %struct.Reg, %struct.Reg* %5957, i32 0, i32 0
  %RSI.i386 = bitcast %union.anon* %5958 to i64*
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5960 = getelementptr inbounds %struct.GPR, %struct.GPR* %5959, i32 0, i32 15
  %5961 = getelementptr inbounds %struct.Reg, %struct.Reg* %5960, i32 0, i32 0
  %RBP.i387 = bitcast %union.anon* %5961 to i64*
  %5962 = load i64, i64* %RBP.i387
  %5963 = sub i64 %5962, 4
  %5964 = load i64, i64* %PC.i385
  %5965 = add i64 %5964, 4
  store i64 %5965, i64* %PC.i385
  %5966 = inttoptr i64 %5963 to i32*
  %5967 = load i32, i32* %5966
  %5968 = sext i32 %5967 to i64
  store i64 %5968, i64* %RSI.i386, align 8
  store %struct.Memory* %loadMem_43b7dd, %struct.Memory** %MEMORY
  %loadMem_43b7e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5970 = getelementptr inbounds %struct.GPR, %struct.GPR* %5969, i32 0, i32 33
  %5971 = getelementptr inbounds %struct.Reg, %struct.Reg* %5970, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %5971 to i64*
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5973 = getelementptr inbounds %struct.GPR, %struct.GPR* %5972, i32 0, i32 9
  %5974 = getelementptr inbounds %struct.Reg, %struct.Reg* %5973, i32 0, i32 0
  %RSI.i384 = bitcast %union.anon* %5974 to i64*
  %5975 = load i64, i64* %RSI.i384
  %5976 = load i64, i64* %PC.i383
  %5977 = add i64 %5976, 4
  store i64 %5977, i64* %PC.i383
  %5978 = sext i64 %5975 to i128
  %5979 = and i128 %5978, -18446744073709551616
  %5980 = zext i64 %5975 to i128
  %5981 = or i128 %5979, %5980
  %5982 = mul i128 36, %5981
  %5983 = trunc i128 %5982 to i64
  store i64 %5983, i64* %RSI.i384, align 8
  %5984 = sext i64 %5983 to i128
  %5985 = icmp ne i128 %5984, %5982
  %5986 = zext i1 %5985 to i8
  %5987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5986, i8* %5987, align 1
  %5988 = trunc i128 %5982 to i32
  %5989 = and i32 %5988, 255
  %5990 = call i32 @llvm.ctpop.i32(i32 %5989)
  %5991 = trunc i32 %5990 to i8
  %5992 = and i8 %5991, 1
  %5993 = xor i8 %5992, 1
  %5994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5993, i8* %5994, align 1
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5995, align 1
  %5996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5996, align 1
  %5997 = lshr i64 %5983, 63
  %5998 = trunc i64 %5997 to i8
  %5999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5998, i8* %5999, align 1
  %6000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5986, i8* %6000, align 1
  store %struct.Memory* %loadMem_43b7e1, %struct.Memory** %MEMORY
  %loadMem_43b7e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6002 = getelementptr inbounds %struct.GPR, %struct.GPR* %6001, i32 0, i32 33
  %6003 = getelementptr inbounds %struct.Reg, %struct.Reg* %6002, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %6003 to i64*
  %6004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6005 = getelementptr inbounds %struct.GPR, %struct.GPR* %6004, i32 0, i32 7
  %6006 = getelementptr inbounds %struct.Reg, %struct.Reg* %6005, i32 0, i32 0
  %RDX.i381 = bitcast %union.anon* %6006 to i64*
  %6007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6008 = getelementptr inbounds %struct.GPR, %struct.GPR* %6007, i32 0, i32 9
  %6009 = getelementptr inbounds %struct.Reg, %struct.Reg* %6008, i32 0, i32 0
  %RSI.i382 = bitcast %union.anon* %6009 to i64*
  %6010 = load i64, i64* %RDX.i381
  %6011 = load i64, i64* %RSI.i382
  %6012 = load i64, i64* %PC.i380
  %6013 = add i64 %6012, 3
  store i64 %6013, i64* %PC.i380
  %6014 = add i64 %6011, %6010
  store i64 %6014, i64* %RDX.i381, align 8
  %6015 = icmp ult i64 %6014, %6010
  %6016 = icmp ult i64 %6014, %6011
  %6017 = or i1 %6015, %6016
  %6018 = zext i1 %6017 to i8
  %6019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6018, i8* %6019, align 1
  %6020 = trunc i64 %6014 to i32
  %6021 = and i32 %6020, 255
  %6022 = call i32 @llvm.ctpop.i32(i32 %6021)
  %6023 = trunc i32 %6022 to i8
  %6024 = and i8 %6023, 1
  %6025 = xor i8 %6024, 1
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6025, i8* %6026, align 1
  %6027 = xor i64 %6011, %6010
  %6028 = xor i64 %6027, %6014
  %6029 = lshr i64 %6028, 4
  %6030 = trunc i64 %6029 to i8
  %6031 = and i8 %6030, 1
  %6032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6031, i8* %6032, align 1
  %6033 = icmp eq i64 %6014, 0
  %6034 = zext i1 %6033 to i8
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6034, i8* %6035, align 1
  %6036 = lshr i64 %6014, 63
  %6037 = trunc i64 %6036 to i8
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6037, i8* %6038, align 1
  %6039 = lshr i64 %6010, 63
  %6040 = lshr i64 %6011, 63
  %6041 = xor i64 %6036, %6039
  %6042 = xor i64 %6036, %6040
  %6043 = add i64 %6041, %6042
  %6044 = icmp eq i64 %6043, 2
  %6045 = zext i1 %6044 to i8
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6045, i8* %6046, align 1
  store %struct.Memory* %loadMem_43b7e5, %struct.Memory** %MEMORY
  %loadMem_43b7e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6048 = getelementptr inbounds %struct.GPR, %struct.GPR* %6047, i32 0, i32 33
  %6049 = getelementptr inbounds %struct.Reg, %struct.Reg* %6048, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %6049 to i64*
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6051 = getelementptr inbounds %struct.GPR, %struct.GPR* %6050, i32 0, i32 7
  %6052 = getelementptr inbounds %struct.Reg, %struct.Reg* %6051, i32 0, i32 0
  %RDX.i379 = bitcast %union.anon* %6052 to i64*
  %6053 = load i64, i64* %RDX.i379
  %6054 = load i64, i64* %PC.i378
  %6055 = add i64 %6054, 3
  store i64 %6055, i64* %PC.i378
  %6056 = inttoptr i64 %6053 to i32*
  %6057 = load i32, i32* %6056
  %6058 = sub i32 %6057, 4
  %6059 = icmp ult i32 %6057, 4
  %6060 = zext i1 %6059 to i8
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6060, i8* %6061, align 1
  %6062 = and i32 %6058, 255
  %6063 = call i32 @llvm.ctpop.i32(i32 %6062)
  %6064 = trunc i32 %6063 to i8
  %6065 = and i8 %6064, 1
  %6066 = xor i8 %6065, 1
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6066, i8* %6067, align 1
  %6068 = xor i32 %6057, 4
  %6069 = xor i32 %6068, %6058
  %6070 = lshr i32 %6069, 4
  %6071 = trunc i32 %6070 to i8
  %6072 = and i8 %6071, 1
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6072, i8* %6073, align 1
  %6074 = icmp eq i32 %6058, 0
  %6075 = zext i1 %6074 to i8
  %6076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6075, i8* %6076, align 1
  %6077 = lshr i32 %6058, 31
  %6078 = trunc i32 %6077 to i8
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6078, i8* %6079, align 1
  %6080 = lshr i32 %6057, 31
  %6081 = xor i32 %6077, %6080
  %6082 = add i32 %6081, %6080
  %6083 = icmp eq i32 %6082, 2
  %6084 = zext i1 %6083 to i8
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6084, i8* %6085, align 1
  store %struct.Memory* %loadMem_43b7e8, %struct.Memory** %MEMORY
  %loadMem_43b7eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6087 = getelementptr inbounds %struct.GPR, %struct.GPR* %6086, i32 0, i32 33
  %6088 = getelementptr inbounds %struct.Reg, %struct.Reg* %6087, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %6088 to i64*
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6090 = getelementptr inbounds %struct.GPR, %struct.GPR* %6089, i32 0, i32 5
  %6091 = getelementptr inbounds %struct.Reg, %struct.Reg* %6090, i32 0, i32 0
  %ECX.i376 = bitcast %union.anon* %6091 to i32*
  %6092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6093 = getelementptr inbounds %struct.GPR, %struct.GPR* %6092, i32 0, i32 1
  %6094 = getelementptr inbounds %struct.Reg, %struct.Reg* %6093, i32 0, i32 0
  %RAX.i377 = bitcast %union.anon* %6094 to i64*
  %6095 = load i32, i32* %ECX.i376
  %6096 = zext i32 %6095 to i64
  %6097 = load i64, i64* %PC.i375
  %6098 = add i64 %6097, 3
  store i64 %6098, i64* %PC.i375
  %6099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6100 = load i8, i8* %6099, align 1
  %6101 = icmp ne i8 %6100, 0
  %6102 = load i64, i64* %RAX.i377, align 8
  %6103 = select i1 %6101, i64 %6096, i64 %6102
  %6104 = and i64 %6103, 4294967295
  store i64 %6104, i64* %RAX.i377, align 8
  store %struct.Memory* %loadMem_43b7eb, %struct.Memory** %MEMORY
  %loadMem_43b7ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %6105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6106 = getelementptr inbounds %struct.GPR, %struct.GPR* %6105, i32 0, i32 33
  %6107 = getelementptr inbounds %struct.Reg, %struct.Reg* %6106, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %6107 to i64*
  %6108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6109 = getelementptr inbounds %struct.GPR, %struct.GPR* %6108, i32 0, i32 1
  %6110 = getelementptr inbounds %struct.Reg, %struct.Reg* %6109, i32 0, i32 0
  %EAX.i373 = bitcast %union.anon* %6110 to i32*
  %6111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6112 = getelementptr inbounds %struct.GPR, %struct.GPR* %6111, i32 0, i32 9
  %6113 = getelementptr inbounds %struct.Reg, %struct.Reg* %6112, i32 0, i32 0
  %RSI.i374 = bitcast %union.anon* %6113 to i64*
  %6114 = load i32, i32* %EAX.i373
  %6115 = zext i32 %6114 to i64
  %6116 = load i64, i64* %PC.i372
  %6117 = add i64 %6116, 2
  store i64 %6117, i64* %PC.i372
  %6118 = and i64 %6115, 4294967295
  store i64 %6118, i64* %RSI.i374, align 8
  store %struct.Memory* %loadMem_43b7ee, %struct.Memory** %MEMORY
  %loadMem_43b7f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6120 = getelementptr inbounds %struct.GPR, %struct.GPR* %6119, i32 0, i32 33
  %6121 = getelementptr inbounds %struct.Reg, %struct.Reg* %6120, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %6121 to i64*
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6123 = getelementptr inbounds %struct.GPR, %struct.GPR* %6122, i32 0, i32 17
  %6124 = getelementptr inbounds %struct.Reg, %struct.Reg* %6123, i32 0, i32 0
  %6125 = bitcast %union.anon* %6124 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6125, i32 0, i32 0
  %6126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6127 = getelementptr inbounds %struct.GPR, %struct.GPR* %6126, i32 0, i32 15
  %6128 = getelementptr inbounds %struct.Reg, %struct.Reg* %6127, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %6128 to i64*
  %6129 = load i64, i64* %RBP.i371
  %6130 = sub i64 %6129, 141
  %6131 = load i8, i8* %R8B.i
  %6132 = zext i8 %6131 to i64
  %6133 = load i64, i64* %PC.i370
  %6134 = add i64 %6133, 7
  store i64 %6134, i64* %PC.i370
  %6135 = inttoptr i64 %6130 to i8*
  store i8 %6131, i8* %6135
  store %struct.Memory* %loadMem_43b7f0, %struct.Memory** %MEMORY
  %loadMem1_43b7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6137 = getelementptr inbounds %struct.GPR, %struct.GPR* %6136, i32 0, i32 33
  %6138 = getelementptr inbounds %struct.Reg, %struct.Reg* %6137, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %6138 to i64*
  %6139 = load i64, i64* %PC.i369
  %6140 = add i64 %6139, -161111
  %6141 = load i64, i64* %PC.i369
  %6142 = add i64 %6141, 5
  %6143 = load i64, i64* %PC.i369
  %6144 = add i64 %6143, 5
  store i64 %6144, i64* %PC.i369
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6146 = load i64, i64* %6145, align 8
  %6147 = add i64 %6146, -8
  %6148 = inttoptr i64 %6147 to i64*
  store i64 %6142, i64* %6148
  store i64 %6147, i64* %6145, align 8
  %6149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6140, i64* %6149, align 8
  store %struct.Memory* %loadMem1_43b7f7, %struct.Memory** %MEMORY
  %loadMem2_43b7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b7f7 = load i64, i64* %3
  %call2_43b7f7 = call %struct.Memory* @sub_4142a0.is_self_atari(%struct.State* %0, i64 %loadPC_43b7f7, %struct.Memory* %loadMem2_43b7f7)
  store %struct.Memory* %call2_43b7f7, %struct.Memory** %MEMORY
  %loadMem_43b7fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6151 = getelementptr inbounds %struct.GPR, %struct.GPR* %6150, i32 0, i32 33
  %6152 = getelementptr inbounds %struct.Reg, %struct.Reg* %6151, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %6152 to i64*
  %6153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6154 = getelementptr inbounds %struct.GPR, %struct.GPR* %6153, i32 0, i32 1
  %6155 = getelementptr inbounds %struct.Reg, %struct.Reg* %6154, i32 0, i32 0
  %EAX.i368 = bitcast %union.anon* %6155 to i32*
  %6156 = load i32, i32* %EAX.i368
  %6157 = zext i32 %6156 to i64
  %6158 = load i64, i64* %PC.i367
  %6159 = add i64 %6158, 3
  store i64 %6159, i64* %PC.i367
  %6160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6160, align 1
  %6161 = and i32 %6156, 255
  %6162 = call i32 @llvm.ctpop.i32(i32 %6161)
  %6163 = trunc i32 %6162 to i8
  %6164 = and i8 %6163, 1
  %6165 = xor i8 %6164, 1
  %6166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6165, i8* %6166, align 1
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6167, align 1
  %6168 = icmp eq i32 %6156, 0
  %6169 = zext i1 %6168 to i8
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6169, i8* %6170, align 1
  %6171 = lshr i32 %6156, 31
  %6172 = trunc i32 %6171 to i8
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6172, i8* %6173, align 1
  %6174 = lshr i32 %6156, 31
  %6175 = xor i32 %6171, %6174
  %6176 = add i32 %6175, %6174
  %6177 = icmp eq i32 %6176, 2
  %6178 = zext i1 %6177 to i8
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6178, i8* %6179, align 1
  store %struct.Memory* %loadMem_43b7fc, %struct.Memory** %MEMORY
  %loadMem_43b7ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %6180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6181 = getelementptr inbounds %struct.GPR, %struct.GPR* %6180, i32 0, i32 33
  %6182 = getelementptr inbounds %struct.Reg, %struct.Reg* %6181, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %6182 to i64*
  %6183 = load i64, i64* %PC.i366
  %6184 = add i64 %6183, 32
  %6185 = load i64, i64* %PC.i366
  %6186 = add i64 %6185, 6
  %6187 = load i64, i64* %PC.i366
  %6188 = add i64 %6187, 6
  store i64 %6188, i64* %PC.i366
  %6189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6190 = load i8, i8* %6189, align 1
  store i8 %6190, i8* %BRANCH_TAKEN, align 1
  %6191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6192 = icmp ne i8 %6190, 0
  %6193 = select i1 %6192, i64 %6184, i64 %6186
  store i64 %6193, i64* %6191, align 8
  store %struct.Memory* %loadMem_43b7ff, %struct.Memory** %MEMORY
  %loadBr_43b7ff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b7ff = icmp eq i8 %loadBr_43b7ff, 1
  br i1 %cmpBr_43b7ff, label %block_.L_43b81f, label %block_43b805

block_43b805:                                     ; preds = %block_43b7a3
  %loadMem_43b805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6195 = getelementptr inbounds %struct.GPR, %struct.GPR* %6194, i32 0, i32 33
  %6196 = getelementptr inbounds %struct.Reg, %struct.Reg* %6195, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %6196 to i64*
  %6197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6198 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6197, i64 0, i64 0
  %YMM0.i365 = bitcast %union.VectorReg* %6198 to %"class.std::bitset"*
  %6199 = bitcast %"class.std::bitset"* %YMM0.i365 to i8*
  %6200 = load i64, i64* %PC.i364
  %6201 = add i64 %6200, ptrtoint (%G_0xa777b__rip__type* @G_0xa777b__rip_ to i64)
  %6202 = load i64, i64* %PC.i364
  %6203 = add i64 %6202, 8
  store i64 %6203, i64* %PC.i364
  %6204 = inttoptr i64 %6201 to double*
  %6205 = load double, double* %6204
  %6206 = bitcast i8* %6199 to double*
  store double %6205, double* %6206, align 1
  %6207 = getelementptr inbounds i8, i8* %6199, i64 8
  %6208 = bitcast i8* %6207 to double*
  store double 0.000000e+00, double* %6208, align 1
  store %struct.Memory* %loadMem_43b805, %struct.Memory** %MEMORY
  %loadMem_43b80d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6210 = getelementptr inbounds %struct.GPR, %struct.GPR* %6209, i32 0, i32 33
  %6211 = getelementptr inbounds %struct.Reg, %struct.Reg* %6210, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %6211 to i64*
  %6212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6213 = getelementptr inbounds %struct.GPR, %struct.GPR* %6212, i32 0, i32 15
  %6214 = getelementptr inbounds %struct.Reg, %struct.Reg* %6213, i32 0, i32 0
  %RBP.i362 = bitcast %union.anon* %6214 to i64*
  %6215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6216 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6215, i64 0, i64 1
  %YMM1.i363 = bitcast %union.VectorReg* %6216 to %"class.std::bitset"*
  %6217 = bitcast %"class.std::bitset"* %YMM1.i363 to i8*
  %6218 = load i64, i64* %RBP.i362
  %6219 = sub i64 %6218, 108
  %6220 = load i64, i64* %PC.i361
  %6221 = add i64 %6220, 5
  store i64 %6221, i64* %PC.i361
  %6222 = inttoptr i64 %6219 to float*
  %6223 = load float, float* %6222
  %6224 = fpext float %6223 to double
  %6225 = bitcast i8* %6217 to double*
  store double %6224, double* %6225, align 1
  store %struct.Memory* %loadMem_43b80d, %struct.Memory** %MEMORY
  %loadMem_43b812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6227 = getelementptr inbounds %struct.GPR, %struct.GPR* %6226, i32 0, i32 33
  %6228 = getelementptr inbounds %struct.Reg, %struct.Reg* %6227, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %6228 to i64*
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6230 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6229, i64 0, i64 1
  %YMM1.i359 = bitcast %union.VectorReg* %6230 to %"class.std::bitset"*
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6232 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6231, i64 0, i64 0
  %XMM0.i360 = bitcast %union.VectorReg* %6232 to %union.vec128_t*
  %6233 = bitcast %"class.std::bitset"* %YMM1.i359 to i8*
  %6234 = bitcast %"class.std::bitset"* %YMM1.i359 to i8*
  %6235 = bitcast %union.vec128_t* %XMM0.i360 to i8*
  %6236 = load i64, i64* %PC.i358
  %6237 = add i64 %6236, 4
  store i64 %6237, i64* %PC.i358
  %6238 = bitcast i8* %6234 to double*
  %6239 = load double, double* %6238, align 1
  %6240 = getelementptr inbounds i8, i8* %6234, i64 8
  %6241 = bitcast i8* %6240 to i64*
  %6242 = load i64, i64* %6241, align 1
  %6243 = bitcast i8* %6235 to double*
  %6244 = load double, double* %6243, align 1
  %6245 = fsub double %6239, %6244
  %6246 = bitcast i8* %6233 to double*
  store double %6245, double* %6246, align 1
  %6247 = getelementptr inbounds i8, i8* %6233, i64 8
  %6248 = bitcast i8* %6247 to i64*
  store i64 %6242, i64* %6248, align 1
  store %struct.Memory* %loadMem_43b812, %struct.Memory** %MEMORY
  %loadMem_43b816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6250 = getelementptr inbounds %struct.GPR, %struct.GPR* %6249, i32 0, i32 33
  %6251 = getelementptr inbounds %struct.Reg, %struct.Reg* %6250, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %6251 to i64*
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6253 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6252, i64 0, i64 0
  %YMM0.i356 = bitcast %union.VectorReg* %6253 to %"class.std::bitset"*
  %6254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6255 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6254, i64 0, i64 1
  %XMM1.i357 = bitcast %union.VectorReg* %6255 to %union.vec128_t*
  %6256 = bitcast %"class.std::bitset"* %YMM0.i356 to i8*
  %6257 = bitcast %union.vec128_t* %XMM1.i357 to i8*
  %6258 = load i64, i64* %PC.i355
  %6259 = add i64 %6258, 4
  store i64 %6259, i64* %PC.i355
  %6260 = bitcast i8* %6256 to <2 x i32>*
  %6261 = load <2 x i32>, <2 x i32>* %6260, align 1
  %6262 = getelementptr inbounds i8, i8* %6256, i64 8
  %6263 = bitcast i8* %6262 to <2 x i32>*
  %6264 = load <2 x i32>, <2 x i32>* %6263, align 1
  %6265 = bitcast i8* %6257 to double*
  %6266 = load double, double* %6265, align 1
  %6267 = fptrunc double %6266 to float
  %6268 = bitcast i8* %6256 to float*
  store float %6267, float* %6268, align 1
  %6269 = extractelement <2 x i32> %6261, i32 1
  %6270 = getelementptr inbounds i8, i8* %6256, i64 4
  %6271 = bitcast i8* %6270 to i32*
  store i32 %6269, i32* %6271, align 1
  %6272 = extractelement <2 x i32> %6264, i32 0
  %6273 = bitcast i8* %6262 to i32*
  store i32 %6272, i32* %6273, align 1
  %6274 = extractelement <2 x i32> %6264, i32 1
  %6275 = getelementptr inbounds i8, i8* %6256, i64 12
  %6276 = bitcast i8* %6275 to i32*
  store i32 %6274, i32* %6276, align 1
  store %struct.Memory* %loadMem_43b816, %struct.Memory** %MEMORY
  %loadMem_43b81a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6278 = getelementptr inbounds %struct.GPR, %struct.GPR* %6277, i32 0, i32 33
  %6279 = getelementptr inbounds %struct.Reg, %struct.Reg* %6278, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %6279 to i64*
  %6280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6281 = getelementptr inbounds %struct.GPR, %struct.GPR* %6280, i32 0, i32 15
  %6282 = getelementptr inbounds %struct.Reg, %struct.Reg* %6281, i32 0, i32 0
  %RBP.i353 = bitcast %union.anon* %6282 to i64*
  %6283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6284 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6283, i64 0, i64 0
  %XMM0.i354 = bitcast %union.VectorReg* %6284 to %union.vec128_t*
  %6285 = load i64, i64* %RBP.i353
  %6286 = sub i64 %6285, 108
  %6287 = bitcast %union.vec128_t* %XMM0.i354 to i8*
  %6288 = load i64, i64* %PC.i352
  %6289 = add i64 %6288, 5
  store i64 %6289, i64* %PC.i352
  %6290 = bitcast i8* %6287 to <2 x float>*
  %6291 = load <2 x float>, <2 x float>* %6290, align 1
  %6292 = extractelement <2 x float> %6291, i32 0
  %6293 = inttoptr i64 %6286 to float*
  store float %6292, float* %6293
  store %struct.Memory* %loadMem_43b81a, %struct.Memory** %MEMORY
  br label %block_.L_43b81f

block_.L_43b81f:                                  ; preds = %block_43b805, %block_43b7a3
  %loadMem_43b81f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6295 = getelementptr inbounds %struct.GPR, %struct.GPR* %6294, i32 0, i32 33
  %6296 = getelementptr inbounds %struct.Reg, %struct.Reg* %6295, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %6296 to i64*
  %6297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6298 = getelementptr inbounds %struct.GPR, %struct.GPR* %6297, i32 0, i32 11
  %6299 = getelementptr inbounds %struct.Reg, %struct.Reg* %6298, i32 0, i32 0
  %RDI.i350 = bitcast %union.anon* %6299 to i64*
  %6300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6301 = getelementptr inbounds %struct.GPR, %struct.GPR* %6300, i32 0, i32 15
  %6302 = getelementptr inbounds %struct.Reg, %struct.Reg* %6301, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %6302 to i64*
  %6303 = load i64, i64* %RBP.i351
  %6304 = sub i64 %6303, 104
  %6305 = load i64, i64* %PC.i349
  %6306 = add i64 %6305, 3
  store i64 %6306, i64* %PC.i349
  %6307 = inttoptr i64 %6304 to i32*
  %6308 = load i32, i32* %6307
  %6309 = zext i32 %6308 to i64
  store i64 %6309, i64* %RDI.i350, align 8
  store %struct.Memory* %loadMem_43b81f, %struct.Memory** %MEMORY
  %loadMem1_43b822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6311 = getelementptr inbounds %struct.GPR, %struct.GPR* %6310, i32 0, i32 33
  %6312 = getelementptr inbounds %struct.Reg, %struct.Reg* %6311, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %6312 to i64*
  %6313 = load i64, i64* %PC.i348
  %6314 = add i64 %6313, -180626
  %6315 = load i64, i64* %PC.i348
  %6316 = add i64 %6315, 5
  %6317 = load i64, i64* %PC.i348
  %6318 = add i64 %6317, 5
  store i64 %6318, i64* %PC.i348
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6320 = load i64, i64* %6319, align 8
  %6321 = add i64 %6320, -8
  %6322 = inttoptr i64 %6321 to i64*
  store i64 %6316, i64* %6322
  store i64 %6321, i64* %6319, align 8
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6314, i64* %6323, align 8
  store %struct.Memory* %loadMem1_43b822, %struct.Memory** %MEMORY
  %loadMem2_43b822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b822 = load i64, i64* %3
  %call2_43b822 = call %struct.Memory* @sub_40f690.is_edge_vertex(%struct.State* %0, i64 %loadPC_43b822, %struct.Memory* %loadMem2_43b822)
  store %struct.Memory* %call2_43b822, %struct.Memory** %MEMORY
  %loadMem_43b827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6325 = getelementptr inbounds %struct.GPR, %struct.GPR* %6324, i32 0, i32 33
  %6326 = getelementptr inbounds %struct.Reg, %struct.Reg* %6325, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %6326 to i64*
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6328 = getelementptr inbounds %struct.GPR, %struct.GPR* %6327, i32 0, i32 1
  %6329 = getelementptr inbounds %struct.Reg, %struct.Reg* %6328, i32 0, i32 0
  %EAX.i347 = bitcast %union.anon* %6329 to i32*
  %6330 = load i32, i32* %EAX.i347
  %6331 = zext i32 %6330 to i64
  %6332 = load i64, i64* %PC.i346
  %6333 = add i64 %6332, 3
  store i64 %6333, i64* %PC.i346
  %6334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6334, align 1
  %6335 = and i32 %6330, 255
  %6336 = call i32 @llvm.ctpop.i32(i32 %6335)
  %6337 = trunc i32 %6336 to i8
  %6338 = and i8 %6337, 1
  %6339 = xor i8 %6338, 1
  %6340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6339, i8* %6340, align 1
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6341, align 1
  %6342 = icmp eq i32 %6330, 0
  %6343 = zext i1 %6342 to i8
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6343, i8* %6344, align 1
  %6345 = lshr i32 %6330, 31
  %6346 = trunc i32 %6345 to i8
  %6347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6346, i8* %6347, align 1
  %6348 = lshr i32 %6330, 31
  %6349 = xor i32 %6345, %6348
  %6350 = add i32 %6349, %6348
  %6351 = icmp eq i32 %6350, 2
  %6352 = zext i1 %6351 to i8
  %6353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6352, i8* %6353, align 1
  store %struct.Memory* %loadMem_43b827, %struct.Memory** %MEMORY
  %loadMem_43b82a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6355 = getelementptr inbounds %struct.GPR, %struct.GPR* %6354, i32 0, i32 33
  %6356 = getelementptr inbounds %struct.Reg, %struct.Reg* %6355, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %6356 to i64*
  %6357 = load i64, i64* %PC.i345
  %6358 = add i64 %6357, 32
  %6359 = load i64, i64* %PC.i345
  %6360 = add i64 %6359, 6
  %6361 = load i64, i64* %PC.i345
  %6362 = add i64 %6361, 6
  store i64 %6362, i64* %PC.i345
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6364 = load i8, i8* %6363, align 1
  store i8 %6364, i8* %BRANCH_TAKEN, align 1
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6366 = icmp ne i8 %6364, 0
  %6367 = select i1 %6366, i64 %6358, i64 %6360
  store i64 %6367, i64* %6365, align 8
  store %struct.Memory* %loadMem_43b82a, %struct.Memory** %MEMORY
  %loadBr_43b82a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b82a = icmp eq i8 %loadBr_43b82a, 1
  br i1 %cmpBr_43b82a, label %block_.L_43b84a, label %block_43b830

block_43b830:                                     ; preds = %block_.L_43b81f
  %loadMem_43b830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6369 = getelementptr inbounds %struct.GPR, %struct.GPR* %6368, i32 0, i32 33
  %6370 = getelementptr inbounds %struct.Reg, %struct.Reg* %6369, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %6370 to i64*
  %6371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6372 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6371, i64 0, i64 0
  %YMM0.i344 = bitcast %union.VectorReg* %6372 to %"class.std::bitset"*
  %6373 = bitcast %"class.std::bitset"* %YMM0.i344 to i8*
  %6374 = load i64, i64* %PC.i343
  %6375 = add i64 %6374, ptrtoint (%G_0xa7800__rip__type* @G_0xa7800__rip_ to i64)
  %6376 = load i64, i64* %PC.i343
  %6377 = add i64 %6376, 8
  store i64 %6377, i64* %PC.i343
  %6378 = inttoptr i64 %6375 to double*
  %6379 = load double, double* %6378
  %6380 = bitcast i8* %6373 to double*
  store double %6379, double* %6380, align 1
  %6381 = getelementptr inbounds i8, i8* %6373, i64 8
  %6382 = bitcast i8* %6381 to double*
  store double 0.000000e+00, double* %6382, align 1
  store %struct.Memory* %loadMem_43b830, %struct.Memory** %MEMORY
  %loadMem_43b838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6384 = getelementptr inbounds %struct.GPR, %struct.GPR* %6383, i32 0, i32 33
  %6385 = getelementptr inbounds %struct.Reg, %struct.Reg* %6384, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %6385 to i64*
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6387 = getelementptr inbounds %struct.GPR, %struct.GPR* %6386, i32 0, i32 15
  %6388 = getelementptr inbounds %struct.Reg, %struct.Reg* %6387, i32 0, i32 0
  %RBP.i341 = bitcast %union.anon* %6388 to i64*
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6390 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6389, i64 0, i64 1
  %YMM1.i342 = bitcast %union.VectorReg* %6390 to %"class.std::bitset"*
  %6391 = bitcast %"class.std::bitset"* %YMM1.i342 to i8*
  %6392 = load i64, i64* %RBP.i341
  %6393 = sub i64 %6392, 108
  %6394 = load i64, i64* %PC.i340
  %6395 = add i64 %6394, 5
  store i64 %6395, i64* %PC.i340
  %6396 = inttoptr i64 %6393 to float*
  %6397 = load float, float* %6396
  %6398 = fpext float %6397 to double
  %6399 = bitcast i8* %6391 to double*
  store double %6398, double* %6399, align 1
  store %struct.Memory* %loadMem_43b838, %struct.Memory** %MEMORY
  %loadMem_43b83d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6401 = getelementptr inbounds %struct.GPR, %struct.GPR* %6400, i32 0, i32 33
  %6402 = getelementptr inbounds %struct.Reg, %struct.Reg* %6401, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %6402 to i64*
  %6403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6404 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6403, i64 0, i64 1
  %YMM1.i338 = bitcast %union.VectorReg* %6404 to %"class.std::bitset"*
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6406 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6405, i64 0, i64 0
  %XMM0.i339 = bitcast %union.VectorReg* %6406 to %union.vec128_t*
  %6407 = bitcast %"class.std::bitset"* %YMM1.i338 to i8*
  %6408 = bitcast %"class.std::bitset"* %YMM1.i338 to i8*
  %6409 = bitcast %union.vec128_t* %XMM0.i339 to i8*
  %6410 = load i64, i64* %PC.i337
  %6411 = add i64 %6410, 4
  store i64 %6411, i64* %PC.i337
  %6412 = bitcast i8* %6408 to double*
  %6413 = load double, double* %6412, align 1
  %6414 = getelementptr inbounds i8, i8* %6408, i64 8
  %6415 = bitcast i8* %6414 to i64*
  %6416 = load i64, i64* %6415, align 1
  %6417 = bitcast i8* %6409 to double*
  %6418 = load double, double* %6417, align 1
  %6419 = fsub double %6413, %6418
  %6420 = bitcast i8* %6407 to double*
  store double %6419, double* %6420, align 1
  %6421 = getelementptr inbounds i8, i8* %6407, i64 8
  %6422 = bitcast i8* %6421 to i64*
  store i64 %6416, i64* %6422, align 1
  store %struct.Memory* %loadMem_43b83d, %struct.Memory** %MEMORY
  %loadMem_43b841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 33
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %6425 to i64*
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6427 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6426, i64 0, i64 0
  %YMM0.i335 = bitcast %union.VectorReg* %6427 to %"class.std::bitset"*
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6429 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6428, i64 0, i64 1
  %XMM1.i336 = bitcast %union.VectorReg* %6429 to %union.vec128_t*
  %6430 = bitcast %"class.std::bitset"* %YMM0.i335 to i8*
  %6431 = bitcast %union.vec128_t* %XMM1.i336 to i8*
  %6432 = load i64, i64* %PC.i334
  %6433 = add i64 %6432, 4
  store i64 %6433, i64* %PC.i334
  %6434 = bitcast i8* %6430 to <2 x i32>*
  %6435 = load <2 x i32>, <2 x i32>* %6434, align 1
  %6436 = getelementptr inbounds i8, i8* %6430, i64 8
  %6437 = bitcast i8* %6436 to <2 x i32>*
  %6438 = load <2 x i32>, <2 x i32>* %6437, align 1
  %6439 = bitcast i8* %6431 to double*
  %6440 = load double, double* %6439, align 1
  %6441 = fptrunc double %6440 to float
  %6442 = bitcast i8* %6430 to float*
  store float %6441, float* %6442, align 1
  %6443 = extractelement <2 x i32> %6435, i32 1
  %6444 = getelementptr inbounds i8, i8* %6430, i64 4
  %6445 = bitcast i8* %6444 to i32*
  store i32 %6443, i32* %6445, align 1
  %6446 = extractelement <2 x i32> %6438, i32 0
  %6447 = bitcast i8* %6436 to i32*
  store i32 %6446, i32* %6447, align 1
  %6448 = extractelement <2 x i32> %6438, i32 1
  %6449 = getelementptr inbounds i8, i8* %6430, i64 12
  %6450 = bitcast i8* %6449 to i32*
  store i32 %6448, i32* %6450, align 1
  store %struct.Memory* %loadMem_43b841, %struct.Memory** %MEMORY
  %loadMem_43b845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6452 = getelementptr inbounds %struct.GPR, %struct.GPR* %6451, i32 0, i32 33
  %6453 = getelementptr inbounds %struct.Reg, %struct.Reg* %6452, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %6453 to i64*
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6455 = getelementptr inbounds %struct.GPR, %struct.GPR* %6454, i32 0, i32 15
  %6456 = getelementptr inbounds %struct.Reg, %struct.Reg* %6455, i32 0, i32 0
  %RBP.i332 = bitcast %union.anon* %6456 to i64*
  %6457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6458 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6457, i64 0, i64 0
  %XMM0.i333 = bitcast %union.VectorReg* %6458 to %union.vec128_t*
  %6459 = load i64, i64* %RBP.i332
  %6460 = sub i64 %6459, 108
  %6461 = bitcast %union.vec128_t* %XMM0.i333 to i8*
  %6462 = load i64, i64* %PC.i331
  %6463 = add i64 %6462, 5
  store i64 %6463, i64* %PC.i331
  %6464 = bitcast i8* %6461 to <2 x float>*
  %6465 = load <2 x float>, <2 x float>* %6464, align 1
  %6466 = extractelement <2 x float> %6465, i32 0
  %6467 = inttoptr i64 %6460 to float*
  store float %6466, float* %6467
  store %struct.Memory* %loadMem_43b845, %struct.Memory** %MEMORY
  br label %block_.L_43b84a

block_.L_43b84a:                                  ; preds = %block_43b830, %block_.L_43b81f
  %loadMem_43b84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6469 = getelementptr inbounds %struct.GPR, %struct.GPR* %6468, i32 0, i32 33
  %6470 = getelementptr inbounds %struct.Reg, %struct.Reg* %6469, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %6470 to i64*
  %6471 = load i64, i64* %PC.i330
  %6472 = add i64 %6471, 96
  %6473 = load i64, i64* %PC.i330
  %6474 = add i64 %6473, 5
  store i64 %6474, i64* %PC.i330
  %6475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6472, i64* %6475, align 8
  store %struct.Memory* %loadMem_43b84a, %struct.Memory** %MEMORY
  br label %block_.L_43b8aa

block_.L_43b84f:                                  ; preds = %block_43b78e, %block_43b75c
  %loadMem_43b84f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6477 = getelementptr inbounds %struct.GPR, %struct.GPR* %6476, i32 0, i32 33
  %6478 = getelementptr inbounds %struct.Reg, %struct.Reg* %6477, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %6478 to i64*
  %6479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6480 = getelementptr inbounds %struct.GPR, %struct.GPR* %6479, i32 0, i32 11
  %6481 = getelementptr inbounds %struct.Reg, %struct.Reg* %6480, i32 0, i32 0
  %RDI.i328 = bitcast %union.anon* %6481 to i64*
  %6482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6483 = getelementptr inbounds %struct.GPR, %struct.GPR* %6482, i32 0, i32 15
  %6484 = getelementptr inbounds %struct.Reg, %struct.Reg* %6483, i32 0, i32 0
  %RBP.i329 = bitcast %union.anon* %6484 to i64*
  %6485 = load i64, i64* %RBP.i329
  %6486 = sub i64 %6485, 56
  %6487 = load i64, i64* %PC.i327
  %6488 = add i64 %6487, 4
  store i64 %6488, i64* %PC.i327
  %6489 = inttoptr i64 %6486 to i64*
  %6490 = load i64, i64* %6489
  store i64 %6490, i64* %RDI.i328, align 8
  store %struct.Memory* %loadMem_43b84f, %struct.Memory** %MEMORY
  %loadMem_43b853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6492 = getelementptr inbounds %struct.GPR, %struct.GPR* %6491, i32 0, i32 33
  %6493 = getelementptr inbounds %struct.Reg, %struct.Reg* %6492, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %6493 to i64*
  %6494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6495 = getelementptr inbounds %struct.GPR, %struct.GPR* %6494, i32 0, i32 9
  %6496 = getelementptr inbounds %struct.Reg, %struct.Reg* %6495, i32 0, i32 0
  %RSI.i325 = bitcast %union.anon* %6496 to i64*
  %6497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6498 = getelementptr inbounds %struct.GPR, %struct.GPR* %6497, i32 0, i32 15
  %6499 = getelementptr inbounds %struct.Reg, %struct.Reg* %6498, i32 0, i32 0
  %RBP.i326 = bitcast %union.anon* %6499 to i64*
  %6500 = load i64, i64* %RBP.i326
  %6501 = sub i64 %6500, 104
  %6502 = load i64, i64* %PC.i324
  %6503 = add i64 %6502, 3
  store i64 %6503, i64* %PC.i324
  %6504 = inttoptr i64 %6501 to i32*
  %6505 = load i32, i32* %6504
  %6506 = zext i32 %6505 to i64
  store i64 %6506, i64* %RSI.i325, align 8
  store %struct.Memory* %loadMem_43b853, %struct.Memory** %MEMORY
  %loadMem1_43b856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6508 = getelementptr inbounds %struct.GPR, %struct.GPR* %6507, i32 0, i32 33
  %6509 = getelementptr inbounds %struct.Reg, %struct.Reg* %6508, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %6509 to i64*
  %6510 = load i64, i64* %PC.i323
  %6511 = add i64 %6510, -2086
  %6512 = load i64, i64* %PC.i323
  %6513 = add i64 %6512, 5
  %6514 = load i64, i64* %PC.i323
  %6515 = add i64 %6514, 5
  store i64 %6515, i64* %PC.i323
  %6516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6517 = load i64, i64* %6516, align 8
  %6518 = add i64 %6517, -8
  %6519 = inttoptr i64 %6518 to i64*
  store i64 %6513, i64* %6519
  store i64 %6518, i64* %6516, align 8
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6511, i64* %6520, align 8
  store %struct.Memory* %loadMem1_43b856, %struct.Memory** %MEMORY
  %loadMem2_43b856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b856 = load i64, i64* %3
  %call2_43b856 = call %struct.Memory* @sub_43b030.is_halfeye(%struct.State* %0, i64 %loadPC_43b856, %struct.Memory* %loadMem2_43b856)
  store %struct.Memory* %call2_43b856, %struct.Memory** %MEMORY
  %loadMem_43b85b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6522 = getelementptr inbounds %struct.GPR, %struct.GPR* %6521, i32 0, i32 33
  %6523 = getelementptr inbounds %struct.Reg, %struct.Reg* %6522, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %6523 to i64*
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6525 = getelementptr inbounds %struct.GPR, %struct.GPR* %6524, i32 0, i32 1
  %6526 = getelementptr inbounds %struct.Reg, %struct.Reg* %6525, i32 0, i32 0
  %EAX.i322 = bitcast %union.anon* %6526 to i32*
  %6527 = load i32, i32* %EAX.i322
  %6528 = zext i32 %6527 to i64
  %6529 = load i64, i64* %PC.i321
  %6530 = add i64 %6529, 3
  store i64 %6530, i64* %PC.i321
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6531, align 1
  %6532 = and i32 %6527, 255
  %6533 = call i32 @llvm.ctpop.i32(i32 %6532)
  %6534 = trunc i32 %6533 to i8
  %6535 = and i8 %6534, 1
  %6536 = xor i8 %6535, 1
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6536, i8* %6537, align 1
  %6538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6538, align 1
  %6539 = icmp eq i32 %6527, 0
  %6540 = zext i1 %6539 to i8
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6540, i8* %6541, align 1
  %6542 = lshr i32 %6527, 31
  %6543 = trunc i32 %6542 to i8
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6543, i8* %6544, align 1
  %6545 = lshr i32 %6527, 31
  %6546 = xor i32 %6542, %6545
  %6547 = add i32 %6546, %6545
  %6548 = icmp eq i32 %6547, 2
  %6549 = zext i1 %6548 to i8
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6549, i8* %6550, align 1
  store %struct.Memory* %loadMem_43b85b, %struct.Memory** %MEMORY
  %loadMem_43b85e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6552 = getelementptr inbounds %struct.GPR, %struct.GPR* %6551, i32 0, i32 33
  %6553 = getelementptr inbounds %struct.Reg, %struct.Reg* %6552, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %6553 to i64*
  %6554 = load i64, i64* %PC.i320
  %6555 = add i64 %6554, 66
  %6556 = load i64, i64* %PC.i320
  %6557 = add i64 %6556, 6
  %6558 = load i64, i64* %PC.i320
  %6559 = add i64 %6558, 6
  store i64 %6559, i64* %PC.i320
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6561 = load i8, i8* %6560, align 1
  store i8 %6561, i8* %BRANCH_TAKEN, align 1
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6563 = icmp ne i8 %6561, 0
  %6564 = select i1 %6563, i64 %6555, i64 %6557
  store i64 %6564, i64* %6562, align 8
  store %struct.Memory* %loadMem_43b85e, %struct.Memory** %MEMORY
  %loadBr_43b85e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b85e = icmp eq i8 %loadBr_43b85e, 1
  br i1 %cmpBr_43b85e, label %block_.L_43b8a0, label %block_43b864

block_43b864:                                     ; preds = %block_.L_43b84f
  %loadMem_43b864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6566 = getelementptr inbounds %struct.GPR, %struct.GPR* %6565, i32 0, i32 33
  %6567 = getelementptr inbounds %struct.Reg, %struct.Reg* %6566, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %6567 to i64*
  %6568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6569 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6568, i64 0, i64 0
  %YMM0.i319 = bitcast %union.VectorReg* %6569 to %"class.std::bitset"*
  %6570 = bitcast %"class.std::bitset"* %YMM0.i319 to i8*
  %6571 = load i64, i64* %PC.i318
  %6572 = add i64 %6571, ptrtoint (%G_0xa78e0__rip__type* @G_0xa78e0__rip_ to i64)
  %6573 = load i64, i64* %PC.i318
  %6574 = add i64 %6573, 8
  store i64 %6574, i64* %PC.i318
  %6575 = inttoptr i64 %6572 to float*
  %6576 = load float, float* %6575
  %6577 = bitcast i8* %6570 to float*
  store float %6576, float* %6577, align 1
  %6578 = getelementptr inbounds i8, i8* %6570, i64 4
  %6579 = bitcast i8* %6578 to float*
  store float 0.000000e+00, float* %6579, align 1
  %6580 = getelementptr inbounds i8, i8* %6570, i64 8
  %6581 = bitcast i8* %6580 to float*
  store float 0.000000e+00, float* %6581, align 1
  %6582 = getelementptr inbounds i8, i8* %6570, i64 12
  %6583 = bitcast i8* %6582 to float*
  store float 0.000000e+00, float* %6583, align 1
  store %struct.Memory* %loadMem_43b864, %struct.Memory** %MEMORY
  %loadMem_43b86c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6585 = getelementptr inbounds %struct.GPR, %struct.GPR* %6584, i32 0, i32 33
  %6586 = getelementptr inbounds %struct.Reg, %struct.Reg* %6585, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %6586 to i64*
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6588 = getelementptr inbounds %struct.GPR, %struct.GPR* %6587, i32 0, i32 15
  %6589 = getelementptr inbounds %struct.Reg, %struct.Reg* %6588, i32 0, i32 0
  %RBP.i316 = bitcast %union.anon* %6589 to i64*
  %6590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6591 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6590, i64 0, i64 0
  %XMM0.i317 = bitcast %union.VectorReg* %6591 to %union.vec128_t*
  %6592 = load i64, i64* %RBP.i316
  %6593 = sub i64 %6592, 108
  %6594 = bitcast %union.vec128_t* %XMM0.i317 to i8*
  %6595 = load i64, i64* %PC.i315
  %6596 = add i64 %6595, 5
  store i64 %6596, i64* %PC.i315
  %6597 = bitcast i8* %6594 to <2 x float>*
  %6598 = load <2 x float>, <2 x float>* %6597, align 1
  %6599 = extractelement <2 x float> %6598, i32 0
  %6600 = inttoptr i64 %6593 to float*
  store float %6599, float* %6600
  store %struct.Memory* %loadMem_43b86c, %struct.Memory** %MEMORY
  %loadMem_43b871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6602 = getelementptr inbounds %struct.GPR, %struct.GPR* %6601, i32 0, i32 33
  %6603 = getelementptr inbounds %struct.Reg, %struct.Reg* %6602, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %6603 to i64*
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6605 = getelementptr inbounds %struct.GPR, %struct.GPR* %6604, i32 0, i32 1
  %6606 = getelementptr inbounds %struct.Reg, %struct.Reg* %6605, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %6606 to i64*
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6608 = getelementptr inbounds %struct.GPR, %struct.GPR* %6607, i32 0, i32 15
  %6609 = getelementptr inbounds %struct.Reg, %struct.Reg* %6608, i32 0, i32 0
  %RBP.i314 = bitcast %union.anon* %6609 to i64*
  %6610 = load i64, i64* %RBP.i314
  %6611 = sub i64 %6610, 56
  %6612 = load i64, i64* %PC.i312
  %6613 = add i64 %6612, 4
  store i64 %6613, i64* %PC.i312
  %6614 = inttoptr i64 %6611 to i64*
  %6615 = load i64, i64* %6614
  store i64 %6615, i64* %RAX.i313, align 8
  store %struct.Memory* %loadMem_43b871, %struct.Memory** %MEMORY
  %loadMem_43b875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6617 = getelementptr inbounds %struct.GPR, %struct.GPR* %6616, i32 0, i32 33
  %6618 = getelementptr inbounds %struct.Reg, %struct.Reg* %6617, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %6618 to i64*
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 5
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %RCX.i310 = bitcast %union.anon* %6621 to i64*
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 15
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %RBP.i311 = bitcast %union.anon* %6624 to i64*
  %6625 = load i64, i64* %RBP.i311
  %6626 = sub i64 %6625, 104
  %6627 = load i64, i64* %PC.i309
  %6628 = add i64 %6627, 4
  store i64 %6628, i64* %PC.i309
  %6629 = inttoptr i64 %6626 to i32*
  %6630 = load i32, i32* %6629
  %6631 = sext i32 %6630 to i64
  store i64 %6631, i64* %RCX.i310, align 8
  store %struct.Memory* %loadMem_43b875, %struct.Memory** %MEMORY
  %loadMem_43b879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6633 = getelementptr inbounds %struct.GPR, %struct.GPR* %6632, i32 0, i32 33
  %6634 = getelementptr inbounds %struct.Reg, %struct.Reg* %6633, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %6634 to i64*
  %6635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6636 = getelementptr inbounds %struct.GPR, %struct.GPR* %6635, i32 0, i32 5
  %6637 = getelementptr inbounds %struct.Reg, %struct.Reg* %6636, i32 0, i32 0
  %RCX.i308 = bitcast %union.anon* %6637 to i64*
  %6638 = load i64, i64* %RCX.i308
  %6639 = load i64, i64* %PC.i307
  %6640 = add i64 %6639, 4
  store i64 %6640, i64* %PC.i307
  %6641 = sext i64 %6638 to i128
  %6642 = and i128 %6641, -18446744073709551616
  %6643 = zext i64 %6638 to i128
  %6644 = or i128 %6642, %6643
  %6645 = mul i128 48, %6644
  %6646 = trunc i128 %6645 to i64
  store i64 %6646, i64* %RCX.i308, align 8
  %6647 = sext i64 %6646 to i128
  %6648 = icmp ne i128 %6647, %6645
  %6649 = zext i1 %6648 to i8
  %6650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6649, i8* %6650, align 1
  %6651 = trunc i128 %6645 to i32
  %6652 = and i32 %6651, 255
  %6653 = call i32 @llvm.ctpop.i32(i32 %6652)
  %6654 = trunc i32 %6653 to i8
  %6655 = and i8 %6654, 1
  %6656 = xor i8 %6655, 1
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6656, i8* %6657, align 1
  %6658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6658, align 1
  %6659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6659, align 1
  %6660 = lshr i64 %6646, 63
  %6661 = trunc i64 %6660 to i8
  %6662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6661, i8* %6662, align 1
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6649, i8* %6663, align 1
  store %struct.Memory* %loadMem_43b879, %struct.Memory** %MEMORY
  %loadMem_43b87d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6665 = getelementptr inbounds %struct.GPR, %struct.GPR* %6664, i32 0, i32 33
  %6666 = getelementptr inbounds %struct.Reg, %struct.Reg* %6665, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %6666 to i64*
  %6667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6668 = getelementptr inbounds %struct.GPR, %struct.GPR* %6667, i32 0, i32 1
  %6669 = getelementptr inbounds %struct.Reg, %struct.Reg* %6668, i32 0, i32 0
  %RAX.i305 = bitcast %union.anon* %6669 to i64*
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6671 = getelementptr inbounds %struct.GPR, %struct.GPR* %6670, i32 0, i32 5
  %6672 = getelementptr inbounds %struct.Reg, %struct.Reg* %6671, i32 0, i32 0
  %RCX.i306 = bitcast %union.anon* %6672 to i64*
  %6673 = load i64, i64* %RAX.i305
  %6674 = load i64, i64* %RCX.i306
  %6675 = load i64, i64* %PC.i304
  %6676 = add i64 %6675, 3
  store i64 %6676, i64* %PC.i304
  %6677 = add i64 %6674, %6673
  store i64 %6677, i64* %RAX.i305, align 8
  %6678 = icmp ult i64 %6677, %6673
  %6679 = icmp ult i64 %6677, %6674
  %6680 = or i1 %6678, %6679
  %6681 = zext i1 %6680 to i8
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6681, i8* %6682, align 1
  %6683 = trunc i64 %6677 to i32
  %6684 = and i32 %6683, 255
  %6685 = call i32 @llvm.ctpop.i32(i32 %6684)
  %6686 = trunc i32 %6685 to i8
  %6687 = and i8 %6686, 1
  %6688 = xor i8 %6687, 1
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6688, i8* %6689, align 1
  %6690 = xor i64 %6674, %6673
  %6691 = xor i64 %6690, %6677
  %6692 = lshr i64 %6691, 4
  %6693 = trunc i64 %6692 to i8
  %6694 = and i8 %6693, 1
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6694, i8* %6695, align 1
  %6696 = icmp eq i64 %6677, 0
  %6697 = zext i1 %6696 to i8
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6697, i8* %6698, align 1
  %6699 = lshr i64 %6677, 63
  %6700 = trunc i64 %6699 to i8
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6700, i8* %6701, align 1
  %6702 = lshr i64 %6673, 63
  %6703 = lshr i64 %6674, 63
  %6704 = xor i64 %6699, %6702
  %6705 = xor i64 %6699, %6703
  %6706 = add i64 %6704, %6705
  %6707 = icmp eq i64 %6706, 2
  %6708 = zext i1 %6707 to i8
  %6709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6708, i8* %6709, align 1
  store %struct.Memory* %loadMem_43b87d, %struct.Memory** %MEMORY
  %loadMem_43b880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6711 = getelementptr inbounds %struct.GPR, %struct.GPR* %6710, i32 0, i32 33
  %6712 = getelementptr inbounds %struct.Reg, %struct.Reg* %6711, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %6712 to i64*
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 1
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %RAX.i302 = bitcast %union.anon* %6715 to i64*
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6717 = getelementptr inbounds %struct.GPR, %struct.GPR* %6716, i32 0, i32 7
  %6718 = getelementptr inbounds %struct.Reg, %struct.Reg* %6717, i32 0, i32 0
  %RDX.i303 = bitcast %union.anon* %6718 to i64*
  %6719 = load i64, i64* %RAX.i302
  %6720 = add i64 %6719, 32
  %6721 = load i64, i64* %PC.i301
  %6722 = add i64 %6721, 3
  store i64 %6722, i64* %PC.i301
  %6723 = inttoptr i64 %6720 to i32*
  %6724 = load i32, i32* %6723
  %6725 = zext i32 %6724 to i64
  store i64 %6725, i64* %RDX.i303, align 8
  store %struct.Memory* %loadMem_43b880, %struct.Memory** %MEMORY
  %loadMem_43b883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6727 = getelementptr inbounds %struct.GPR, %struct.GPR* %6726, i32 0, i32 33
  %6728 = getelementptr inbounds %struct.Reg, %struct.Reg* %6727, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %6728 to i64*
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6730 = getelementptr inbounds %struct.GPR, %struct.GPR* %6729, i32 0, i32 7
  %6731 = getelementptr inbounds %struct.Reg, %struct.Reg* %6730, i32 0, i32 0
  %EDX.i299 = bitcast %union.anon* %6731 to i32*
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6733 = getelementptr inbounds %struct.GPR, %struct.GPR* %6732, i32 0, i32 15
  %6734 = getelementptr inbounds %struct.Reg, %struct.Reg* %6733, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %6734 to i64*
  %6735 = load i64, i64* %RBP.i300
  %6736 = sub i64 %6735, 116
  %6737 = load i32, i32* %EDX.i299
  %6738 = zext i32 %6737 to i64
  %6739 = load i64, i64* %PC.i298
  %6740 = add i64 %6739, 3
  store i64 %6740, i64* %PC.i298
  %6741 = inttoptr i64 %6736 to i32*
  store i32 %6737, i32* %6741
  store %struct.Memory* %loadMem_43b883, %struct.Memory** %MEMORY
  %loadMem_43b886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6743 = getelementptr inbounds %struct.GPR, %struct.GPR* %6742, i32 0, i32 33
  %6744 = getelementptr inbounds %struct.Reg, %struct.Reg* %6743, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %6744 to i64*
  %6745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6746 = getelementptr inbounds %struct.GPR, %struct.GPR* %6745, i32 0, i32 1
  %6747 = getelementptr inbounds %struct.Reg, %struct.Reg* %6746, i32 0, i32 0
  %RAX.i296 = bitcast %union.anon* %6747 to i64*
  %6748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6749 = getelementptr inbounds %struct.GPR, %struct.GPR* %6748, i32 0, i32 15
  %6750 = getelementptr inbounds %struct.Reg, %struct.Reg* %6749, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %6750 to i64*
  %6751 = load i64, i64* %RBP.i297
  %6752 = sub i64 %6751, 56
  %6753 = load i64, i64* %PC.i295
  %6754 = add i64 %6753, 4
  store i64 %6754, i64* %PC.i295
  %6755 = inttoptr i64 %6752 to i64*
  %6756 = load i64, i64* %6755
  store i64 %6756, i64* %RAX.i296, align 8
  store %struct.Memory* %loadMem_43b886, %struct.Memory** %MEMORY
  %loadMem_43b88a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6758 = getelementptr inbounds %struct.GPR, %struct.GPR* %6757, i32 0, i32 33
  %6759 = getelementptr inbounds %struct.Reg, %struct.Reg* %6758, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %6759 to i64*
  %6760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6761 = getelementptr inbounds %struct.GPR, %struct.GPR* %6760, i32 0, i32 5
  %6762 = getelementptr inbounds %struct.Reg, %struct.Reg* %6761, i32 0, i32 0
  %RCX.i293 = bitcast %union.anon* %6762 to i64*
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6764 = getelementptr inbounds %struct.GPR, %struct.GPR* %6763, i32 0, i32 15
  %6765 = getelementptr inbounds %struct.Reg, %struct.Reg* %6764, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %6765 to i64*
  %6766 = load i64, i64* %RBP.i294
  %6767 = sub i64 %6766, 104
  %6768 = load i64, i64* %PC.i292
  %6769 = add i64 %6768, 4
  store i64 %6769, i64* %PC.i292
  %6770 = inttoptr i64 %6767 to i32*
  %6771 = load i32, i32* %6770
  %6772 = sext i32 %6771 to i64
  store i64 %6772, i64* %RCX.i293, align 8
  store %struct.Memory* %loadMem_43b88a, %struct.Memory** %MEMORY
  %loadMem_43b88e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6774 = getelementptr inbounds %struct.GPR, %struct.GPR* %6773, i32 0, i32 33
  %6775 = getelementptr inbounds %struct.Reg, %struct.Reg* %6774, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %6775 to i64*
  %6776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6777 = getelementptr inbounds %struct.GPR, %struct.GPR* %6776, i32 0, i32 5
  %6778 = getelementptr inbounds %struct.Reg, %struct.Reg* %6777, i32 0, i32 0
  %RCX.i291 = bitcast %union.anon* %6778 to i64*
  %6779 = load i64, i64* %RCX.i291
  %6780 = load i64, i64* %PC.i290
  %6781 = add i64 %6780, 4
  store i64 %6781, i64* %PC.i290
  %6782 = sext i64 %6779 to i128
  %6783 = and i128 %6782, -18446744073709551616
  %6784 = zext i64 %6779 to i128
  %6785 = or i128 %6783, %6784
  %6786 = mul i128 48, %6785
  %6787 = trunc i128 %6786 to i64
  store i64 %6787, i64* %RCX.i291, align 8
  %6788 = sext i64 %6787 to i128
  %6789 = icmp ne i128 %6788, %6786
  %6790 = zext i1 %6789 to i8
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6790, i8* %6791, align 1
  %6792 = trunc i128 %6786 to i32
  %6793 = and i32 %6792, 255
  %6794 = call i32 @llvm.ctpop.i32(i32 %6793)
  %6795 = trunc i32 %6794 to i8
  %6796 = and i8 %6795, 1
  %6797 = xor i8 %6796, 1
  %6798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6797, i8* %6798, align 1
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6799, align 1
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6800, align 1
  %6801 = lshr i64 %6787, 63
  %6802 = trunc i64 %6801 to i8
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6802, i8* %6803, align 1
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6790, i8* %6804, align 1
  store %struct.Memory* %loadMem_43b88e, %struct.Memory** %MEMORY
  %loadMem_43b892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6806 = getelementptr inbounds %struct.GPR, %struct.GPR* %6805, i32 0, i32 33
  %6807 = getelementptr inbounds %struct.Reg, %struct.Reg* %6806, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %6807 to i64*
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6809 = getelementptr inbounds %struct.GPR, %struct.GPR* %6808, i32 0, i32 1
  %6810 = getelementptr inbounds %struct.Reg, %struct.Reg* %6809, i32 0, i32 0
  %RAX.i288 = bitcast %union.anon* %6810 to i64*
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6812 = getelementptr inbounds %struct.GPR, %struct.GPR* %6811, i32 0, i32 5
  %6813 = getelementptr inbounds %struct.Reg, %struct.Reg* %6812, i32 0, i32 0
  %RCX.i289 = bitcast %union.anon* %6813 to i64*
  %6814 = load i64, i64* %RAX.i288
  %6815 = load i64, i64* %RCX.i289
  %6816 = load i64, i64* %PC.i287
  %6817 = add i64 %6816, 3
  store i64 %6817, i64* %PC.i287
  %6818 = add i64 %6815, %6814
  store i64 %6818, i64* %RAX.i288, align 8
  %6819 = icmp ult i64 %6818, %6814
  %6820 = icmp ult i64 %6818, %6815
  %6821 = or i1 %6819, %6820
  %6822 = zext i1 %6821 to i8
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6822, i8* %6823, align 1
  %6824 = trunc i64 %6818 to i32
  %6825 = and i32 %6824, 255
  %6826 = call i32 @llvm.ctpop.i32(i32 %6825)
  %6827 = trunc i32 %6826 to i8
  %6828 = and i8 %6827, 1
  %6829 = xor i8 %6828, 1
  %6830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6829, i8* %6830, align 1
  %6831 = xor i64 %6815, %6814
  %6832 = xor i64 %6831, %6818
  %6833 = lshr i64 %6832, 4
  %6834 = trunc i64 %6833 to i8
  %6835 = and i8 %6834, 1
  %6836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6835, i8* %6836, align 1
  %6837 = icmp eq i64 %6818, 0
  %6838 = zext i1 %6837 to i8
  %6839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6838, i8* %6839, align 1
  %6840 = lshr i64 %6818, 63
  %6841 = trunc i64 %6840 to i8
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6841, i8* %6842, align 1
  %6843 = lshr i64 %6814, 63
  %6844 = lshr i64 %6815, 63
  %6845 = xor i64 %6840, %6843
  %6846 = xor i64 %6840, %6844
  %6847 = add i64 %6845, %6846
  %6848 = icmp eq i64 %6847, 2
  %6849 = zext i1 %6848 to i8
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6849, i8* %6850, align 1
  store %struct.Memory* %loadMem_43b892, %struct.Memory** %MEMORY
  %loadMem_43b895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6852 = getelementptr inbounds %struct.GPR, %struct.GPR* %6851, i32 0, i32 33
  %6853 = getelementptr inbounds %struct.Reg, %struct.Reg* %6852, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %6853 to i64*
  %6854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6855 = getelementptr inbounds %struct.GPR, %struct.GPR* %6854, i32 0, i32 1
  %6856 = getelementptr inbounds %struct.Reg, %struct.Reg* %6855, i32 0, i32 0
  %RAX.i285 = bitcast %union.anon* %6856 to i64*
  %6857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6858 = getelementptr inbounds %struct.GPR, %struct.GPR* %6857, i32 0, i32 7
  %6859 = getelementptr inbounds %struct.Reg, %struct.Reg* %6858, i32 0, i32 0
  %RDX.i286 = bitcast %union.anon* %6859 to i64*
  %6860 = load i64, i64* %RAX.i285
  %6861 = add i64 %6860, 12
  %6862 = load i64, i64* %PC.i284
  %6863 = add i64 %6862, 3
  store i64 %6863, i64* %PC.i284
  %6864 = inttoptr i64 %6861 to i32*
  %6865 = load i32, i32* %6864
  %6866 = zext i32 %6865 to i64
  store i64 %6866, i64* %RDX.i286, align 8
  store %struct.Memory* %loadMem_43b895, %struct.Memory** %MEMORY
  %loadMem_43b898 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6868 = getelementptr inbounds %struct.GPR, %struct.GPR* %6867, i32 0, i32 33
  %6869 = getelementptr inbounds %struct.Reg, %struct.Reg* %6868, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %6869 to i64*
  %6870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6871 = getelementptr inbounds %struct.GPR, %struct.GPR* %6870, i32 0, i32 7
  %6872 = getelementptr inbounds %struct.Reg, %struct.Reg* %6871, i32 0, i32 0
  %EDX.i282 = bitcast %union.anon* %6872 to i32*
  %6873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6874 = getelementptr inbounds %struct.GPR, %struct.GPR* %6873, i32 0, i32 15
  %6875 = getelementptr inbounds %struct.Reg, %struct.Reg* %6874, i32 0, i32 0
  %RBP.i283 = bitcast %union.anon* %6875 to i64*
  %6876 = load i64, i64* %RBP.i283
  %6877 = sub i64 %6876, 112
  %6878 = load i32, i32* %EDX.i282
  %6879 = zext i32 %6878 to i64
  %6880 = load i64, i64* %PC.i281
  %6881 = add i64 %6880, 3
  store i64 %6881, i64* %PC.i281
  %6882 = inttoptr i64 %6877 to i32*
  store i32 %6878, i32* %6882
  store %struct.Memory* %loadMem_43b898, %struct.Memory** %MEMORY
  %loadMem_43b89b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6884 = getelementptr inbounds %struct.GPR, %struct.GPR* %6883, i32 0, i32 33
  %6885 = getelementptr inbounds %struct.Reg, %struct.Reg* %6884, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %6885 to i64*
  %6886 = load i64, i64* %PC.i280
  %6887 = add i64 %6886, 10
  %6888 = load i64, i64* %PC.i280
  %6889 = add i64 %6888, 5
  store i64 %6889, i64* %PC.i280
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6887, i64* %6890, align 8
  store %struct.Memory* %loadMem_43b89b, %struct.Memory** %MEMORY
  br label %block_.L_43b8a5

block_.L_43b8a0:                                  ; preds = %block_.L_43b84f
  %loadMem_43b8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6892 = getelementptr inbounds %struct.GPR, %struct.GPR* %6891, i32 0, i32 33
  %6893 = getelementptr inbounds %struct.Reg, %struct.Reg* %6892, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %6893 to i64*
  %6894 = load i64, i64* %PC.i279
  %6895 = add i64 %6894, 98
  %6896 = load i64, i64* %PC.i279
  %6897 = add i64 %6896, 5
  store i64 %6897, i64* %PC.i279
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6895, i64* %6898, align 8
  store %struct.Memory* %loadMem_43b8a0, %struct.Memory** %MEMORY
  br label %block_.L_43b902

block_.L_43b8a5:                                  ; preds = %block_43b864
  %loadMem_43b8a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6900 = getelementptr inbounds %struct.GPR, %struct.GPR* %6899, i32 0, i32 33
  %6901 = getelementptr inbounds %struct.Reg, %struct.Reg* %6900, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %6901 to i64*
  %6902 = load i64, i64* %PC.i278
  %6903 = add i64 %6902, 5
  %6904 = load i64, i64* %PC.i278
  %6905 = add i64 %6904, 5
  store i64 %6905, i64* %PC.i278
  %6906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6903, i64* %6906, align 8
  store %struct.Memory* %loadMem_43b8a5, %struct.Memory** %MEMORY
  br label %block_.L_43b8aa

block_.L_43b8aa:                                  ; preds = %block_.L_43b8a5, %block_.L_43b84a
  %loadMem_43b8aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6908 = getelementptr inbounds %struct.GPR, %struct.GPR* %6907, i32 0, i32 33
  %6909 = getelementptr inbounds %struct.Reg, %struct.Reg* %6908, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %6909 to i64*
  %6910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6911 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6910, i64 0, i64 1
  %YMM1.i277 = bitcast %union.VectorReg* %6911 to %"class.std::bitset"*
  %6912 = bitcast %"class.std::bitset"* %YMM1.i277 to i8*
  %6913 = load i64, i64* %PC.i276
  %6914 = add i64 %6913, ptrtoint (%G_0xa789e__rip__type* @G_0xa789e__rip_ to i64)
  %6915 = load i64, i64* %PC.i276
  %6916 = add i64 %6915, 8
  store i64 %6916, i64* %PC.i276
  %6917 = inttoptr i64 %6914 to float*
  %6918 = load float, float* %6917
  %6919 = bitcast i8* %6912 to float*
  store float %6918, float* %6919, align 1
  %6920 = getelementptr inbounds i8, i8* %6912, i64 4
  %6921 = bitcast i8* %6920 to float*
  store float 0.000000e+00, float* %6921, align 1
  %6922 = getelementptr inbounds i8, i8* %6912, i64 8
  %6923 = bitcast i8* %6922 to float*
  store float 0.000000e+00, float* %6923, align 1
  %6924 = getelementptr inbounds i8, i8* %6912, i64 12
  %6925 = bitcast i8* %6924 to float*
  store float 0.000000e+00, float* %6925, align 1
  store %struct.Memory* %loadMem_43b8aa, %struct.Memory** %MEMORY
  %loadMem_43b8b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6927 = getelementptr inbounds %struct.GPR, %struct.GPR* %6926, i32 0, i32 33
  %6928 = getelementptr inbounds %struct.Reg, %struct.Reg* %6927, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %6928 to i64*
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6930 = getelementptr inbounds %struct.GPR, %struct.GPR* %6929, i32 0, i32 15
  %6931 = getelementptr inbounds %struct.Reg, %struct.Reg* %6930, i32 0, i32 0
  %RBP.i274 = bitcast %union.anon* %6931 to i64*
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6933 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6932, i64 0, i64 0
  %YMM0.i275 = bitcast %union.VectorReg* %6933 to %"class.std::bitset"*
  %6934 = bitcast %"class.std::bitset"* %YMM0.i275 to i8*
  %6935 = load i64, i64* %RBP.i274
  %6936 = sub i64 %6935, 108
  %6937 = load i64, i64* %PC.i273
  %6938 = add i64 %6937, 5
  store i64 %6938, i64* %PC.i273
  %6939 = inttoptr i64 %6936 to float*
  %6940 = load float, float* %6939
  %6941 = bitcast i8* %6934 to float*
  store float %6940, float* %6941, align 1
  %6942 = getelementptr inbounds i8, i8* %6934, i64 4
  %6943 = bitcast i8* %6942 to float*
  store float 0.000000e+00, float* %6943, align 1
  %6944 = getelementptr inbounds i8, i8* %6934, i64 8
  %6945 = bitcast i8* %6944 to float*
  store float 0.000000e+00, float* %6945, align 1
  %6946 = getelementptr inbounds i8, i8* %6934, i64 12
  %6947 = bitcast i8* %6946 to float*
  store float 0.000000e+00, float* %6947, align 1
  store %struct.Memory* %loadMem_43b8b2, %struct.Memory** %MEMORY
  %loadMem1_43b8b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6949 = getelementptr inbounds %struct.GPR, %struct.GPR* %6948, i32 0, i32 33
  %6950 = getelementptr inbounds %struct.Reg, %struct.Reg* %6949, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %6950 to i64*
  %6951 = load i64, i64* %PC.i272
  %6952 = add i64 %6951, 683545
  %6953 = load i64, i64* %PC.i272
  %6954 = add i64 %6953, 5
  %6955 = load i64, i64* %PC.i272
  %6956 = add i64 %6955, 5
  store i64 %6956, i64* %PC.i272
  %6957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6958 = load i64, i64* %6957, align 8
  %6959 = add i64 %6958, -8
  %6960 = inttoptr i64 %6959 to i64*
  store i64 %6954, i64* %6960
  store i64 %6959, i64* %6957, align 8
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6952, i64* %6961, align 8
  store %struct.Memory* %loadMem1_43b8b7, %struct.Memory** %MEMORY
  %loadMem2_43b8b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b8b7 = load i64, i64* %3
  %call2_43b8b7 = call %struct.Memory* @sub_4e26d0.gg_normalize_float2int(%struct.State* %0, i64 %loadPC_43b8b7, %struct.Memory* %loadMem2_43b8b7)
  store %struct.Memory* %call2_43b8b7, %struct.Memory** %MEMORY
  %loadMem_43b8bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6963 = getelementptr inbounds %struct.GPR, %struct.GPR* %6962, i32 0, i32 33
  %6964 = getelementptr inbounds %struct.Reg, %struct.Reg* %6963, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %6964 to i64*
  %6965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6966 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6965, i64 0, i64 1
  %YMM1.i271 = bitcast %union.VectorReg* %6966 to %"class.std::bitset"*
  %6967 = bitcast %"class.std::bitset"* %YMM1.i271 to i8*
  %6968 = load i64, i64* %PC.i270
  %6969 = add i64 %6968, ptrtoint (%G_0xa788c__rip__type* @G_0xa788c__rip_ to i64)
  %6970 = load i64, i64* %PC.i270
  %6971 = add i64 %6970, 8
  store i64 %6971, i64* %PC.i270
  %6972 = inttoptr i64 %6969 to float*
  %6973 = load float, float* %6972
  %6974 = bitcast i8* %6967 to float*
  store float %6973, float* %6974, align 1
  %6975 = getelementptr inbounds i8, i8* %6967, i64 4
  %6976 = bitcast i8* %6975 to float*
  store float 0.000000e+00, float* %6976, align 1
  %6977 = getelementptr inbounds i8, i8* %6967, i64 8
  %6978 = bitcast i8* %6977 to float*
  store float 0.000000e+00, float* %6978, align 1
  %6979 = getelementptr inbounds i8, i8* %6967, i64 12
  %6980 = bitcast i8* %6979 to float*
  store float 0.000000e+00, float* %6980, align 1
  store %struct.Memory* %loadMem_43b8bc, %struct.Memory** %MEMORY
  %loadMem_43b8c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6982 = getelementptr inbounds %struct.GPR, %struct.GPR* %6981, i32 0, i32 33
  %6983 = getelementptr inbounds %struct.Reg, %struct.Reg* %6982, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %6983 to i64*
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6985 = getelementptr inbounds %struct.GPR, %struct.GPR* %6984, i32 0, i32 15
  %6986 = getelementptr inbounds %struct.Reg, %struct.Reg* %6985, i32 0, i32 0
  %RBP.i268 = bitcast %union.anon* %6986 to i64*
  %6987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6988 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6987, i64 0, i64 0
  %YMM0.i269 = bitcast %union.VectorReg* %6988 to %"class.std::bitset"*
  %6989 = bitcast %"class.std::bitset"* %YMM0.i269 to i8*
  %6990 = load i64, i64* %RBP.i268
  %6991 = sub i64 %6990, 100
  %6992 = load i64, i64* %PC.i267
  %6993 = add i64 %6992, 5
  store i64 %6993, i64* %PC.i267
  %6994 = inttoptr i64 %6991 to float*
  %6995 = load float, float* %6994
  %6996 = bitcast i8* %6989 to float*
  store float %6995, float* %6996, align 1
  %6997 = getelementptr inbounds i8, i8* %6989, i64 4
  %6998 = bitcast i8* %6997 to float*
  store float 0.000000e+00, float* %6998, align 1
  %6999 = getelementptr inbounds i8, i8* %6989, i64 8
  %7000 = bitcast i8* %6999 to float*
  store float 0.000000e+00, float* %7000, align 1
  %7001 = getelementptr inbounds i8, i8* %6989, i64 12
  %7002 = bitcast i8* %7001 to float*
  store float 0.000000e+00, float* %7002, align 1
  store %struct.Memory* %loadMem_43b8c4, %struct.Memory** %MEMORY
  %loadMem_43b8c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7004 = getelementptr inbounds %struct.GPR, %struct.GPR* %7003, i32 0, i32 33
  %7005 = getelementptr inbounds %struct.Reg, %struct.Reg* %7004, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %7005 to i64*
  %7006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7007 = getelementptr inbounds %struct.GPR, %struct.GPR* %7006, i32 0, i32 1
  %7008 = getelementptr inbounds %struct.Reg, %struct.Reg* %7007, i32 0, i32 0
  %EAX.i265 = bitcast %union.anon* %7008 to i32*
  %7009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7010 = getelementptr inbounds %struct.GPR, %struct.GPR* %7009, i32 0, i32 15
  %7011 = getelementptr inbounds %struct.Reg, %struct.Reg* %7010, i32 0, i32 0
  %RBP.i266 = bitcast %union.anon* %7011 to i64*
  %7012 = load i64, i64* %RBP.i266
  %7013 = sub i64 %7012, 148
  %7014 = load i32, i32* %EAX.i265
  %7015 = zext i32 %7014 to i64
  %7016 = load i64, i64* %PC.i264
  %7017 = add i64 %7016, 6
  store i64 %7017, i64* %PC.i264
  %7018 = inttoptr i64 %7013 to i32*
  store i32 %7014, i32* %7018
  store %struct.Memory* %loadMem_43b8c9, %struct.Memory** %MEMORY
  %loadMem1_43b8cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7020 = getelementptr inbounds %struct.GPR, %struct.GPR* %7019, i32 0, i32 33
  %7021 = getelementptr inbounds %struct.Reg, %struct.Reg* %7020, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %7021 to i64*
  %7022 = load i64, i64* %PC.i263
  %7023 = add i64 %7022, 683521
  %7024 = load i64, i64* %PC.i263
  %7025 = add i64 %7024, 5
  %7026 = load i64, i64* %PC.i263
  %7027 = add i64 %7026, 5
  store i64 %7027, i64* %PC.i263
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7029 = load i64, i64* %7028, align 8
  %7030 = add i64 %7029, -8
  %7031 = inttoptr i64 %7030 to i64*
  store i64 %7025, i64* %7031
  store i64 %7030, i64* %7028, align 8
  %7032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7023, i64* %7032, align 8
  store %struct.Memory* %loadMem1_43b8cf, %struct.Memory** %MEMORY
  %loadMem2_43b8cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b8cf = load i64, i64* %3
  %call2_43b8cf = call %struct.Memory* @sub_4e26d0.gg_normalize_float2int(%struct.State* %0, i64 %loadPC_43b8cf, %struct.Memory* %loadMem2_43b8cf)
  store %struct.Memory* %call2_43b8cf, %struct.Memory** %MEMORY
  %loadMem_43b8d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7034 = getelementptr inbounds %struct.GPR, %struct.GPR* %7033, i32 0, i32 33
  %7035 = getelementptr inbounds %struct.Reg, %struct.Reg* %7034, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %7035 to i64*
  %7036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7037 = getelementptr inbounds %struct.GPR, %struct.GPR* %7036, i32 0, i32 5
  %7038 = getelementptr inbounds %struct.Reg, %struct.Reg* %7037, i32 0, i32 0
  %RCX.i261 = bitcast %union.anon* %7038 to i64*
  %7039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7040 = getelementptr inbounds %struct.GPR, %struct.GPR* %7039, i32 0, i32 15
  %7041 = getelementptr inbounds %struct.Reg, %struct.Reg* %7040, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %7041 to i64*
  %7042 = load i64, i64* %RBP.i262
  %7043 = sub i64 %7042, 148
  %7044 = load i64, i64* %PC.i260
  %7045 = add i64 %7044, 6
  store i64 %7045, i64* %PC.i260
  %7046 = inttoptr i64 %7043 to i32*
  %7047 = load i32, i32* %7046
  %7048 = zext i32 %7047 to i64
  store i64 %7048, i64* %RCX.i261, align 8
  store %struct.Memory* %loadMem_43b8d4, %struct.Memory** %MEMORY
  %loadMem_43b8da = load %struct.Memory*, %struct.Memory** %MEMORY
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7050 = getelementptr inbounds %struct.GPR, %struct.GPR* %7049, i32 0, i32 33
  %7051 = getelementptr inbounds %struct.Reg, %struct.Reg* %7050, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %7051 to i64*
  %7052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7053 = getelementptr inbounds %struct.GPR, %struct.GPR* %7052, i32 0, i32 1
  %7054 = getelementptr inbounds %struct.Reg, %struct.Reg* %7053, i32 0, i32 0
  %EAX.i258 = bitcast %union.anon* %7054 to i32*
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7056 = getelementptr inbounds %struct.GPR, %struct.GPR* %7055, i32 0, i32 5
  %7057 = getelementptr inbounds %struct.Reg, %struct.Reg* %7056, i32 0, i32 0
  %ECX.i259 = bitcast %union.anon* %7057 to i32*
  %7058 = load i32, i32* %ECX.i259
  %7059 = zext i32 %7058 to i64
  %7060 = load i32, i32* %EAX.i258
  %7061 = zext i32 %7060 to i64
  %7062 = load i64, i64* %PC.i257
  %7063 = add i64 %7062, 2
  store i64 %7063, i64* %PC.i257
  %7064 = sub i32 %7058, %7060
  %7065 = icmp ult i32 %7058, %7060
  %7066 = zext i1 %7065 to i8
  %7067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7066, i8* %7067, align 1
  %7068 = and i32 %7064, 255
  %7069 = call i32 @llvm.ctpop.i32(i32 %7068)
  %7070 = trunc i32 %7069 to i8
  %7071 = and i8 %7070, 1
  %7072 = xor i8 %7071, 1
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7072, i8* %7073, align 1
  %7074 = xor i64 %7061, %7059
  %7075 = trunc i64 %7074 to i32
  %7076 = xor i32 %7075, %7064
  %7077 = lshr i32 %7076, 4
  %7078 = trunc i32 %7077 to i8
  %7079 = and i8 %7078, 1
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7079, i8* %7080, align 1
  %7081 = icmp eq i32 %7064, 0
  %7082 = zext i1 %7081 to i8
  %7083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7082, i8* %7083, align 1
  %7084 = lshr i32 %7064, 31
  %7085 = trunc i32 %7084 to i8
  %7086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7085, i8* %7086, align 1
  %7087 = lshr i32 %7058, 31
  %7088 = lshr i32 %7060, 31
  %7089 = xor i32 %7088, %7087
  %7090 = xor i32 %7084, %7087
  %7091 = add i32 %7090, %7089
  %7092 = icmp eq i32 %7091, 2
  %7093 = zext i1 %7092 to i8
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7093, i8* %7094, align 1
  store %struct.Memory* %loadMem_43b8da, %struct.Memory** %MEMORY
  %loadMem_43b8dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7096 = getelementptr inbounds %struct.GPR, %struct.GPR* %7095, i32 0, i32 33
  %7097 = getelementptr inbounds %struct.Reg, %struct.Reg* %7096, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %7097 to i64*
  %7098 = load i64, i64* %PC.i256
  %7099 = add i64 %7098, 28
  %7100 = load i64, i64* %PC.i256
  %7101 = add i64 %7100, 6
  %7102 = load i64, i64* %PC.i256
  %7103 = add i64 %7102, 6
  store i64 %7103, i64* %PC.i256
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7105 = load i8, i8* %7104, align 1
  %7106 = icmp ne i8 %7105, 0
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7108 = load i8, i8* %7107, align 1
  %7109 = icmp ne i8 %7108, 0
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7111 = load i8, i8* %7110, align 1
  %7112 = icmp ne i8 %7111, 0
  %7113 = xor i1 %7109, %7112
  %7114 = or i1 %7106, %7113
  %7115 = zext i1 %7114 to i8
  store i8 %7115, i8* %BRANCH_TAKEN, align 1
  %7116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7117 = select i1 %7114, i64 %7099, i64 %7101
  store i64 %7117, i64* %7116, align 8
  store %struct.Memory* %loadMem_43b8dc, %struct.Memory** %MEMORY
  %loadBr_43b8dc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b8dc = icmp eq i8 %loadBr_43b8dc, 1
  br i1 %cmpBr_43b8dc, label %block_.L_43b8f8, label %block_43b8e2

block_43b8e2:                                     ; preds = %block_.L_43b8aa
  %loadMem_43b8e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7119 = getelementptr inbounds %struct.GPR, %struct.GPR* %7118, i32 0, i32 33
  %7120 = getelementptr inbounds %struct.Reg, %struct.Reg* %7119, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %7120 to i64*
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7122 = getelementptr inbounds %struct.GPR, %struct.GPR* %7121, i32 0, i32 1
  %7123 = getelementptr inbounds %struct.Reg, %struct.Reg* %7122, i32 0, i32 0
  %RAX.i254 = bitcast %union.anon* %7123 to i64*
  %7124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7125 = getelementptr inbounds %struct.GPR, %struct.GPR* %7124, i32 0, i32 15
  %7126 = getelementptr inbounds %struct.Reg, %struct.Reg* %7125, i32 0, i32 0
  %RBP.i255 = bitcast %union.anon* %7126 to i64*
  %7127 = load i64, i64* %RBP.i255
  %7128 = sub i64 %7127, 112
  %7129 = load i64, i64* %PC.i253
  %7130 = add i64 %7129, 3
  store i64 %7130, i64* %PC.i253
  %7131 = inttoptr i64 %7128 to i32*
  %7132 = load i32, i32* %7131
  %7133 = zext i32 %7132 to i64
  store i64 %7133, i64* %RAX.i254, align 8
  store %struct.Memory* %loadMem_43b8e2, %struct.Memory** %MEMORY
  %loadMem_43b8e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7135 = getelementptr inbounds %struct.GPR, %struct.GPR* %7134, i32 0, i32 33
  %7136 = getelementptr inbounds %struct.Reg, %struct.Reg* %7135, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %7136 to i64*
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7138 = getelementptr inbounds %struct.GPR, %struct.GPR* %7137, i32 0, i32 1
  %7139 = getelementptr inbounds %struct.Reg, %struct.Reg* %7138, i32 0, i32 0
  %EAX.i251 = bitcast %union.anon* %7139 to i32*
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7141 = getelementptr inbounds %struct.GPR, %struct.GPR* %7140, i32 0, i32 15
  %7142 = getelementptr inbounds %struct.Reg, %struct.Reg* %7141, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %7142 to i64*
  %7143 = load i64, i64* %RBP.i252
  %7144 = sub i64 %7143, 92
  %7145 = load i32, i32* %EAX.i251
  %7146 = zext i32 %7145 to i64
  %7147 = load i64, i64* %PC.i250
  %7148 = add i64 %7147, 3
  store i64 %7148, i64* %PC.i250
  %7149 = inttoptr i64 %7144 to i32*
  store i32 %7145, i32* %7149
  store %struct.Memory* %loadMem_43b8e5, %struct.Memory** %MEMORY
  %loadMem_43b8e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7151 = getelementptr inbounds %struct.GPR, %struct.GPR* %7150, i32 0, i32 33
  %7152 = getelementptr inbounds %struct.Reg, %struct.Reg* %7151, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %7152 to i64*
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7154 = getelementptr inbounds %struct.GPR, %struct.GPR* %7153, i32 0, i32 1
  %7155 = getelementptr inbounds %struct.Reg, %struct.Reg* %7154, i32 0, i32 0
  %RAX.i248 = bitcast %union.anon* %7155 to i64*
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7157 = getelementptr inbounds %struct.GPR, %struct.GPR* %7156, i32 0, i32 15
  %7158 = getelementptr inbounds %struct.Reg, %struct.Reg* %7157, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %7158 to i64*
  %7159 = load i64, i64* %RBP.i249
  %7160 = sub i64 %7159, 116
  %7161 = load i64, i64* %PC.i247
  %7162 = add i64 %7161, 3
  store i64 %7162, i64* %PC.i247
  %7163 = inttoptr i64 %7160 to i32*
  %7164 = load i32, i32* %7163
  %7165 = zext i32 %7164 to i64
  store i64 %7165, i64* %RAX.i248, align 8
  store %struct.Memory* %loadMem_43b8e8, %struct.Memory** %MEMORY
  %loadMem_43b8eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7167 = getelementptr inbounds %struct.GPR, %struct.GPR* %7166, i32 0, i32 33
  %7168 = getelementptr inbounds %struct.Reg, %struct.Reg* %7167, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %7168 to i64*
  %7169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7170 = getelementptr inbounds %struct.GPR, %struct.GPR* %7169, i32 0, i32 1
  %7171 = getelementptr inbounds %struct.Reg, %struct.Reg* %7170, i32 0, i32 0
  %EAX.i245 = bitcast %union.anon* %7171 to i32*
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7173 = getelementptr inbounds %struct.GPR, %struct.GPR* %7172, i32 0, i32 15
  %7174 = getelementptr inbounds %struct.Reg, %struct.Reg* %7173, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %7174 to i64*
  %7175 = load i64, i64* %RBP.i246
  %7176 = sub i64 %7175, 96
  %7177 = load i32, i32* %EAX.i245
  %7178 = zext i32 %7177 to i64
  %7179 = load i64, i64* %PC.i244
  %7180 = add i64 %7179, 3
  store i64 %7180, i64* %PC.i244
  %7181 = inttoptr i64 %7176 to i32*
  store i32 %7177, i32* %7181
  store %struct.Memory* %loadMem_43b8eb, %struct.Memory** %MEMORY
  %loadMem_43b8ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %7182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7183 = getelementptr inbounds %struct.GPR, %struct.GPR* %7182, i32 0, i32 33
  %7184 = getelementptr inbounds %struct.Reg, %struct.Reg* %7183, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %7184 to i64*
  %7185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7186 = getelementptr inbounds %struct.GPR, %struct.GPR* %7185, i32 0, i32 15
  %7187 = getelementptr inbounds %struct.Reg, %struct.Reg* %7186, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %7187 to i64*
  %7188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7189 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7188, i64 0, i64 0
  %YMM0.i243 = bitcast %union.VectorReg* %7189 to %"class.std::bitset"*
  %7190 = bitcast %"class.std::bitset"* %YMM0.i243 to i8*
  %7191 = load i64, i64* %RBP.i242
  %7192 = sub i64 %7191, 108
  %7193 = load i64, i64* %PC.i241
  %7194 = add i64 %7193, 5
  store i64 %7194, i64* %PC.i241
  %7195 = inttoptr i64 %7192 to float*
  %7196 = load float, float* %7195
  %7197 = bitcast i8* %7190 to float*
  store float %7196, float* %7197, align 1
  %7198 = getelementptr inbounds i8, i8* %7190, i64 4
  %7199 = bitcast i8* %7198 to float*
  store float 0.000000e+00, float* %7199, align 1
  %7200 = getelementptr inbounds i8, i8* %7190, i64 8
  %7201 = bitcast i8* %7200 to float*
  store float 0.000000e+00, float* %7201, align 1
  %7202 = getelementptr inbounds i8, i8* %7190, i64 12
  %7203 = bitcast i8* %7202 to float*
  store float 0.000000e+00, float* %7203, align 1
  store %struct.Memory* %loadMem_43b8ee, %struct.Memory** %MEMORY
  %loadMem_43b8f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7205 = getelementptr inbounds %struct.GPR, %struct.GPR* %7204, i32 0, i32 33
  %7206 = getelementptr inbounds %struct.Reg, %struct.Reg* %7205, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %7206 to i64*
  %7207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7208 = getelementptr inbounds %struct.GPR, %struct.GPR* %7207, i32 0, i32 15
  %7209 = getelementptr inbounds %struct.Reg, %struct.Reg* %7208, i32 0, i32 0
  %RBP.i239 = bitcast %union.anon* %7209 to i64*
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7211 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7210, i64 0, i64 0
  %XMM0.i240 = bitcast %union.VectorReg* %7211 to %union.vec128_t*
  %7212 = load i64, i64* %RBP.i239
  %7213 = sub i64 %7212, 100
  %7214 = bitcast %union.vec128_t* %XMM0.i240 to i8*
  %7215 = load i64, i64* %PC.i238
  %7216 = add i64 %7215, 5
  store i64 %7216, i64* %PC.i238
  %7217 = bitcast i8* %7214 to <2 x float>*
  %7218 = load <2 x float>, <2 x float>* %7217, align 1
  %7219 = extractelement <2 x float> %7218, i32 0
  %7220 = inttoptr i64 %7213 to float*
  store float %7219, float* %7220
  store %struct.Memory* %loadMem_43b8f3, %struct.Memory** %MEMORY
  br label %block_.L_43b8f8

block_.L_43b8f8:                                  ; preds = %block_43b8e2, %block_.L_43b8aa
  %loadMem_43b8f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7222 = getelementptr inbounds %struct.GPR, %struct.GPR* %7221, i32 0, i32 33
  %7223 = getelementptr inbounds %struct.Reg, %struct.Reg* %7222, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %7223 to i64*
  %7224 = load i64, i64* %PC.i237
  %7225 = add i64 %7224, 5
  %7226 = load i64, i64* %PC.i237
  %7227 = add i64 %7226, 5
  store i64 %7227, i64* %PC.i237
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7225, i64* %7228, align 8
  store %struct.Memory* %loadMem_43b8f8, %struct.Memory** %MEMORY
  br label %block_.L_43b8fd

block_.L_43b8fd:                                  ; preds = %block_.L_43b8f8, %block_43b741, %block_43b72c
  %loadMem_43b8fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7230 = getelementptr inbounds %struct.GPR, %struct.GPR* %7229, i32 0, i32 33
  %7231 = getelementptr inbounds %struct.Reg, %struct.Reg* %7230, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %7231 to i64*
  %7232 = load i64, i64* %PC.i236
  %7233 = add i64 %7232, 5
  %7234 = load i64, i64* %PC.i236
  %7235 = add i64 %7234, 5
  store i64 %7235, i64* %PC.i236
  %7236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7233, i64* %7236, align 8
  store %struct.Memory* %loadMem_43b8fd, %struct.Memory** %MEMORY
  br label %block_.L_43b902

block_.L_43b902:                                  ; preds = %block_.L_43b8fd, %block_.L_43b8a0
  %loadMem_43b902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7238 = getelementptr inbounds %struct.GPR, %struct.GPR* %7237, i32 0, i32 33
  %7239 = getelementptr inbounds %struct.Reg, %struct.Reg* %7238, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %7239 to i64*
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7241 = getelementptr inbounds %struct.GPR, %struct.GPR* %7240, i32 0, i32 1
  %7242 = getelementptr inbounds %struct.Reg, %struct.Reg* %7241, i32 0, i32 0
  %RAX.i234 = bitcast %union.anon* %7242 to i64*
  %7243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7244 = getelementptr inbounds %struct.GPR, %struct.GPR* %7243, i32 0, i32 15
  %7245 = getelementptr inbounds %struct.Reg, %struct.Reg* %7244, i32 0, i32 0
  %RBP.i235 = bitcast %union.anon* %7245 to i64*
  %7246 = load i64, i64* %RBP.i235
  %7247 = sub i64 %7246, 104
  %7248 = load i64, i64* %PC.i233
  %7249 = add i64 %7248, 3
  store i64 %7249, i64* %PC.i233
  %7250 = inttoptr i64 %7247 to i32*
  %7251 = load i32, i32* %7250
  %7252 = zext i32 %7251 to i64
  store i64 %7252, i64* %RAX.i234, align 8
  store %struct.Memory* %loadMem_43b902, %struct.Memory** %MEMORY
  %loadMem_43b905 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7254 = getelementptr inbounds %struct.GPR, %struct.GPR* %7253, i32 0, i32 33
  %7255 = getelementptr inbounds %struct.Reg, %struct.Reg* %7254, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %7255 to i64*
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7257 = getelementptr inbounds %struct.GPR, %struct.GPR* %7256, i32 0, i32 1
  %7258 = getelementptr inbounds %struct.Reg, %struct.Reg* %7257, i32 0, i32 0
  %RAX.i232 = bitcast %union.anon* %7258 to i64*
  %7259 = load i64, i64* %RAX.i232
  %7260 = load i64, i64* %PC.i231
  %7261 = add i64 %7260, 3
  store i64 %7261, i64* %PC.i231
  %7262 = trunc i64 %7259 to i32
  %7263 = add i32 1, %7262
  %7264 = zext i32 %7263 to i64
  store i64 %7264, i64* %RAX.i232, align 8
  %7265 = icmp ult i32 %7263, %7262
  %7266 = icmp ult i32 %7263, 1
  %7267 = or i1 %7265, %7266
  %7268 = zext i1 %7267 to i8
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7268, i8* %7269, align 1
  %7270 = and i32 %7263, 255
  %7271 = call i32 @llvm.ctpop.i32(i32 %7270)
  %7272 = trunc i32 %7271 to i8
  %7273 = and i8 %7272, 1
  %7274 = xor i8 %7273, 1
  %7275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7274, i8* %7275, align 1
  %7276 = xor i64 1, %7259
  %7277 = trunc i64 %7276 to i32
  %7278 = xor i32 %7277, %7263
  %7279 = lshr i32 %7278, 4
  %7280 = trunc i32 %7279 to i8
  %7281 = and i8 %7280, 1
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7281, i8* %7282, align 1
  %7283 = icmp eq i32 %7263, 0
  %7284 = zext i1 %7283 to i8
  %7285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7284, i8* %7285, align 1
  %7286 = lshr i32 %7263, 31
  %7287 = trunc i32 %7286 to i8
  %7288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7287, i8* %7288, align 1
  %7289 = lshr i32 %7262, 31
  %7290 = xor i32 %7286, %7289
  %7291 = add i32 %7290, %7286
  %7292 = icmp eq i32 %7291, 2
  %7293 = zext i1 %7292 to i8
  %7294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7293, i8* %7294, align 1
  store %struct.Memory* %loadMem_43b905, %struct.Memory** %MEMORY
  %loadMem_43b908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7296 = getelementptr inbounds %struct.GPR, %struct.GPR* %7295, i32 0, i32 33
  %7297 = getelementptr inbounds %struct.Reg, %struct.Reg* %7296, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %7297 to i64*
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7299 = getelementptr inbounds %struct.GPR, %struct.GPR* %7298, i32 0, i32 1
  %7300 = getelementptr inbounds %struct.Reg, %struct.Reg* %7299, i32 0, i32 0
  %EAX.i229 = bitcast %union.anon* %7300 to i32*
  %7301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7302 = getelementptr inbounds %struct.GPR, %struct.GPR* %7301, i32 0, i32 15
  %7303 = getelementptr inbounds %struct.Reg, %struct.Reg* %7302, i32 0, i32 0
  %RBP.i230 = bitcast %union.anon* %7303 to i64*
  %7304 = load i64, i64* %RBP.i230
  %7305 = sub i64 %7304, 104
  %7306 = load i32, i32* %EAX.i229
  %7307 = zext i32 %7306 to i64
  %7308 = load i64, i64* %PC.i228
  %7309 = add i64 %7308, 3
  store i64 %7309, i64* %PC.i228
  %7310 = inttoptr i64 %7305 to i32*
  store i32 %7306, i32* %7310
  store %struct.Memory* %loadMem_43b908, %struct.Memory** %MEMORY
  %loadMem_43b90b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7312 = getelementptr inbounds %struct.GPR, %struct.GPR* %7311, i32 0, i32 33
  %7313 = getelementptr inbounds %struct.Reg, %struct.Reg* %7312, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %7313 to i64*
  %7314 = load i64, i64* %PC.i227
  %7315 = add i64 %7314, -492
  %7316 = load i64, i64* %PC.i227
  %7317 = add i64 %7316, 5
  store i64 %7317, i64* %PC.i227
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7315, i64* %7318, align 8
  store %struct.Memory* %loadMem_43b90b, %struct.Memory** %MEMORY
  br label %block_.L_43b71f

block_.L_43b910:                                  ; preds = %block_.L_43b71f
  %loadMem_43b910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7320 = getelementptr inbounds %struct.GPR, %struct.GPR* %7319, i32 0, i32 33
  %7321 = getelementptr inbounds %struct.Reg, %struct.Reg* %7320, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %7321 to i64*
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7323 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7322, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %7323 to %"class.std::bitset"*
  %7324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7325 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7324, i64 0, i64 0
  %XMM0.i226 = bitcast %union.VectorReg* %7325 to %union.vec128_t*
  %7326 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %7327 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %7328 = bitcast %union.vec128_t* %XMM0.i226 to i8*
  %7329 = load i64, i64* %PC.i225
  %7330 = add i64 %7329, 3
  store i64 %7330, i64* %PC.i225
  %7331 = bitcast i8* %7327 to i64*
  %7332 = load i64, i64* %7331, align 1
  %7333 = getelementptr inbounds i8, i8* %7327, i64 8
  %7334 = bitcast i8* %7333 to i64*
  %7335 = load i64, i64* %7334, align 1
  %7336 = bitcast i8* %7328 to i64*
  %7337 = load i64, i64* %7336, align 1
  %7338 = getelementptr inbounds i8, i8* %7328, i64 8
  %7339 = bitcast i8* %7338 to i64*
  %7340 = load i64, i64* %7339, align 1
  %7341 = xor i64 %7337, %7332
  %7342 = xor i64 %7340, %7335
  %7343 = trunc i64 %7341 to i32
  %7344 = lshr i64 %7341, 32
  %7345 = trunc i64 %7344 to i32
  %7346 = bitcast i8* %7326 to i32*
  store i32 %7343, i32* %7346, align 1
  %7347 = getelementptr inbounds i8, i8* %7326, i64 4
  %7348 = bitcast i8* %7347 to i32*
  store i32 %7345, i32* %7348, align 1
  %7349 = trunc i64 %7342 to i32
  %7350 = getelementptr inbounds i8, i8* %7326, i64 8
  %7351 = bitcast i8* %7350 to i32*
  store i32 %7349, i32* %7351, align 1
  %7352 = lshr i64 %7342, 32
  %7353 = trunc i64 %7352 to i32
  %7354 = getelementptr inbounds i8, i8* %7326, i64 12
  %7355 = bitcast i8* %7354 to i32*
  store i32 %7353, i32* %7355, align 1
  store %struct.Memory* %loadMem_43b910, %struct.Memory** %MEMORY
  %loadMem_43b913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7357 = getelementptr inbounds %struct.GPR, %struct.GPR* %7356, i32 0, i32 33
  %7358 = getelementptr inbounds %struct.Reg, %struct.Reg* %7357, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %7358 to i64*
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7360 = getelementptr inbounds %struct.GPR, %struct.GPR* %7359, i32 0, i32 15
  %7361 = getelementptr inbounds %struct.Reg, %struct.Reg* %7360, i32 0, i32 0
  %RBP.i224 = bitcast %union.anon* %7361 to i64*
  %7362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7363 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7362, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %7363 to %"class.std::bitset"*
  %7364 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %7365 = load i64, i64* %RBP.i224
  %7366 = sub i64 %7365, 100
  %7367 = load i64, i64* %PC.i223
  %7368 = add i64 %7367, 5
  store i64 %7368, i64* %PC.i223
  %7369 = inttoptr i64 %7366 to float*
  %7370 = load float, float* %7369
  %7371 = fpext float %7370 to double
  %7372 = bitcast i8* %7364 to double*
  store double %7371, double* %7372, align 1
  store %struct.Memory* %loadMem_43b913, %struct.Memory** %MEMORY
  %loadMem_43b918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7374 = getelementptr inbounds %struct.GPR, %struct.GPR* %7373, i32 0, i32 33
  %7375 = getelementptr inbounds %struct.Reg, %struct.Reg* %7374, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %7375 to i64*
  %7376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7377 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7376, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %7377 to %union.vec128_t*
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7379 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7378, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %7379 to %union.vec128_t*
  %7380 = bitcast %union.vec128_t* %XMM1.i to i8*
  %7381 = bitcast %union.vec128_t* %XMM0.i to i8*
  %7382 = load i64, i64* %PC.i219
  %7383 = add i64 %7382, 4
  store i64 %7383, i64* %PC.i219
  %7384 = bitcast i8* %7380 to double*
  %7385 = load double, double* %7384, align 1
  %7386 = bitcast i8* %7381 to double*
  %7387 = load double, double* %7386, align 1
  %7388 = fcmp uno double %7385, %7387
  br i1 %7388, label %7389, label %7401

; <label>:7389:                                   ; preds = %block_.L_43b910
  %7390 = fadd double %7385, %7387
  %7391 = bitcast double %7390 to i64
  %7392 = and i64 %7391, 9221120237041090560
  %7393 = icmp eq i64 %7392, 9218868437227405312
  %7394 = and i64 %7391, 2251799813685247
  %7395 = icmp ne i64 %7394, 0
  %7396 = and i1 %7393, %7395
  br i1 %7396, label %7397, label %7407

; <label>:7397:                                   ; preds = %7389
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7399 = load i64, i64* %7398, align 8
  %7400 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7399, %struct.Memory* %loadMem_43b918)
  br label %routine_ucomisd__xmm0___xmm1.exit

; <label>:7401:                                   ; preds = %block_.L_43b910
  %7402 = fcmp ogt double %7385, %7387
  br i1 %7402, label %7407, label %7403

; <label>:7403:                                   ; preds = %7401
  %7404 = fcmp olt double %7385, %7387
  br i1 %7404, label %7407, label %7405

; <label>:7405:                                   ; preds = %7403
  %7406 = fcmp oeq double %7385, %7387
  br i1 %7406, label %7407, label %7414

; <label>:7407:                                   ; preds = %7405, %7403, %7401, %7389
  %7408 = phi i8 [ 0, %7401 ], [ 0, %7403 ], [ 1, %7405 ], [ 1, %7389 ]
  %7409 = phi i8 [ 0, %7401 ], [ 0, %7403 ], [ 0, %7405 ], [ 1, %7389 ]
  %7410 = phi i8 [ 0, %7401 ], [ 1, %7403 ], [ 0, %7405 ], [ 1, %7389 ]
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7408, i8* %7411, align 1
  %7412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7409, i8* %7412, align 1
  %7413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7410, i8* %7413, align 1
  br label %7414

; <label>:7414:                                   ; preds = %7407, %7405
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7415, align 1
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7416, align 1
  %7417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7417, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit

routine_ucomisd__xmm0___xmm1.exit:                ; preds = %7397, %7414
  %7418 = phi %struct.Memory* [ %7400, %7397 ], [ %loadMem_43b918, %7414 ]
  store %struct.Memory* %7418, %struct.Memory** %MEMORY
  %loadMem_43b91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7420 = getelementptr inbounds %struct.GPR, %struct.GPR* %7419, i32 0, i32 33
  %7421 = getelementptr inbounds %struct.Reg, %struct.Reg* %7420, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %7421 to i64*
  %7422 = load i64, i64* %PC.i218
  %7423 = add i64 %7422, 51
  %7424 = load i64, i64* %PC.i218
  %7425 = add i64 %7424, 6
  %7426 = load i64, i64* %PC.i218
  %7427 = add i64 %7426, 6
  store i64 %7427, i64* %PC.i218
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7429 = load i8, i8* %7428, align 1
  %7430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7431 = load i8, i8* %7430, align 1
  %7432 = or i8 %7431, %7429
  %7433 = icmp ne i8 %7432, 0
  %7434 = zext i1 %7433 to i8
  store i8 %7434, i8* %BRANCH_TAKEN, align 1
  %7435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7436 = select i1 %7433, i64 %7423, i64 %7425
  store i64 %7436, i64* %7435, align 8
  store %struct.Memory* %loadMem_43b91c, %struct.Memory** %MEMORY
  %loadBr_43b91c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b91c = icmp eq i8 %loadBr_43b91c, 1
  br i1 %cmpBr_43b91c, label %block_.L_43b94f, label %block_43b922

block_43b922:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_43b922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7438 = getelementptr inbounds %struct.GPR, %struct.GPR* %7437, i32 0, i32 33
  %7439 = getelementptr inbounds %struct.Reg, %struct.Reg* %7438, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %7439 to i64*
  %7440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7441 = getelementptr inbounds %struct.GPR, %struct.GPR* %7440, i32 0, i32 15
  %7442 = getelementptr inbounds %struct.Reg, %struct.Reg* %7441, i32 0, i32 0
  %RBP.i217 = bitcast %union.anon* %7442 to i64*
  %7443 = load i64, i64* %RBP.i217
  %7444 = sub i64 %7443, 40
  %7445 = load i64, i64* %PC.i216
  %7446 = add i64 %7445, 5
  store i64 %7446, i64* %PC.i216
  %7447 = inttoptr i64 %7444 to i64*
  %7448 = load i64, i64* %7447
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7449, align 1
  %7450 = trunc i64 %7448 to i32
  %7451 = and i32 %7450, 255
  %7452 = call i32 @llvm.ctpop.i32(i32 %7451)
  %7453 = trunc i32 %7452 to i8
  %7454 = and i8 %7453, 1
  %7455 = xor i8 %7454, 1
  %7456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7455, i8* %7456, align 1
  %7457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7457, align 1
  %7458 = icmp eq i64 %7448, 0
  %7459 = zext i1 %7458 to i8
  %7460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7459, i8* %7460, align 1
  %7461 = lshr i64 %7448, 63
  %7462 = trunc i64 %7461 to i8
  %7463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7462, i8* %7463, align 1
  %7464 = lshr i64 %7448, 63
  %7465 = xor i64 %7461, %7464
  %7466 = add i64 %7465, %7464
  %7467 = icmp eq i64 %7466, 2
  %7468 = zext i1 %7467 to i8
  %7469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7468, i8* %7469, align 1
  store %struct.Memory* %loadMem_43b922, %struct.Memory** %MEMORY
  %loadMem_43b927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7471 = getelementptr inbounds %struct.GPR, %struct.GPR* %7470, i32 0, i32 33
  %7472 = getelementptr inbounds %struct.Reg, %struct.Reg* %7471, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %7472 to i64*
  %7473 = load i64, i64* %PC.i215
  %7474 = add i64 %7473, 15
  %7475 = load i64, i64* %PC.i215
  %7476 = add i64 %7475, 6
  %7477 = load i64, i64* %PC.i215
  %7478 = add i64 %7477, 6
  store i64 %7478, i64* %PC.i215
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7480 = load i8, i8* %7479, align 1
  store i8 %7480, i8* %BRANCH_TAKEN, align 1
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7482 = icmp ne i8 %7480, 0
  %7483 = select i1 %7482, i64 %7474, i64 %7476
  store i64 %7483, i64* %7481, align 8
  store %struct.Memory* %loadMem_43b927, %struct.Memory** %MEMORY
  %loadBr_43b927 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b927 = icmp eq i8 %loadBr_43b927, 1
  br i1 %cmpBr_43b927, label %block_.L_43b936, label %block_43b92d

block_43b92d:                                     ; preds = %block_43b922
  %loadMem_43b92d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7485 = getelementptr inbounds %struct.GPR, %struct.GPR* %7484, i32 0, i32 33
  %7486 = getelementptr inbounds %struct.Reg, %struct.Reg* %7485, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %7486 to i64*
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7488 = getelementptr inbounds %struct.GPR, %struct.GPR* %7487, i32 0, i32 1
  %7489 = getelementptr inbounds %struct.Reg, %struct.Reg* %7488, i32 0, i32 0
  %RAX.i213 = bitcast %union.anon* %7489 to i64*
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7491 = getelementptr inbounds %struct.GPR, %struct.GPR* %7490, i32 0, i32 15
  %7492 = getelementptr inbounds %struct.Reg, %struct.Reg* %7491, i32 0, i32 0
  %RBP.i214 = bitcast %union.anon* %7492 to i64*
  %7493 = load i64, i64* %RBP.i214
  %7494 = sub i64 %7493, 96
  %7495 = load i64, i64* %PC.i212
  %7496 = add i64 %7495, 3
  store i64 %7496, i64* %PC.i212
  %7497 = inttoptr i64 %7494 to i32*
  %7498 = load i32, i32* %7497
  %7499 = zext i32 %7498 to i64
  store i64 %7499, i64* %RAX.i213, align 8
  store %struct.Memory* %loadMem_43b92d, %struct.Memory** %MEMORY
  %loadMem_43b930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7501 = getelementptr inbounds %struct.GPR, %struct.GPR* %7500, i32 0, i32 33
  %7502 = getelementptr inbounds %struct.Reg, %struct.Reg* %7501, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %7502 to i64*
  %7503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7504 = getelementptr inbounds %struct.GPR, %struct.GPR* %7503, i32 0, i32 5
  %7505 = getelementptr inbounds %struct.Reg, %struct.Reg* %7504, i32 0, i32 0
  %RCX.i210 = bitcast %union.anon* %7505 to i64*
  %7506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7507 = getelementptr inbounds %struct.GPR, %struct.GPR* %7506, i32 0, i32 15
  %7508 = getelementptr inbounds %struct.Reg, %struct.Reg* %7507, i32 0, i32 0
  %RBP.i211 = bitcast %union.anon* %7508 to i64*
  %7509 = load i64, i64* %RBP.i211
  %7510 = sub i64 %7509, 40
  %7511 = load i64, i64* %PC.i209
  %7512 = add i64 %7511, 4
  store i64 %7512, i64* %PC.i209
  %7513 = inttoptr i64 %7510 to i64*
  %7514 = load i64, i64* %7513
  store i64 %7514, i64* %RCX.i210, align 8
  store %struct.Memory* %loadMem_43b930, %struct.Memory** %MEMORY
  %loadMem_43b934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7516 = getelementptr inbounds %struct.GPR, %struct.GPR* %7515, i32 0, i32 33
  %7517 = getelementptr inbounds %struct.Reg, %struct.Reg* %7516, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %7517 to i64*
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7519 = getelementptr inbounds %struct.GPR, %struct.GPR* %7518, i32 0, i32 1
  %7520 = getelementptr inbounds %struct.Reg, %struct.Reg* %7519, i32 0, i32 0
  %EAX.i207 = bitcast %union.anon* %7520 to i32*
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7522 = getelementptr inbounds %struct.GPR, %struct.GPR* %7521, i32 0, i32 5
  %7523 = getelementptr inbounds %struct.Reg, %struct.Reg* %7522, i32 0, i32 0
  %RCX.i208 = bitcast %union.anon* %7523 to i64*
  %7524 = load i64, i64* %RCX.i208
  %7525 = load i32, i32* %EAX.i207
  %7526 = zext i32 %7525 to i64
  %7527 = load i64, i64* %PC.i206
  %7528 = add i64 %7527, 2
  store i64 %7528, i64* %PC.i206
  %7529 = inttoptr i64 %7524 to i32*
  store i32 %7525, i32* %7529
  store %struct.Memory* %loadMem_43b934, %struct.Memory** %MEMORY
  br label %block_.L_43b936

block_.L_43b936:                                  ; preds = %block_43b92d, %block_43b922
  %loadMem_43b936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7531 = getelementptr inbounds %struct.GPR, %struct.GPR* %7530, i32 0, i32 33
  %7532 = getelementptr inbounds %struct.Reg, %struct.Reg* %7531, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %7532 to i64*
  %7533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7534 = getelementptr inbounds %struct.GPR, %struct.GPR* %7533, i32 0, i32 15
  %7535 = getelementptr inbounds %struct.Reg, %struct.Reg* %7534, i32 0, i32 0
  %RBP.i205 = bitcast %union.anon* %7535 to i64*
  %7536 = load i64, i64* %RBP.i205
  %7537 = sub i64 %7536, 32
  %7538 = load i64, i64* %PC.i204
  %7539 = add i64 %7538, 5
  store i64 %7539, i64* %PC.i204
  %7540 = inttoptr i64 %7537 to i64*
  %7541 = load i64, i64* %7540
  %7542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7542, align 1
  %7543 = trunc i64 %7541 to i32
  %7544 = and i32 %7543, 255
  %7545 = call i32 @llvm.ctpop.i32(i32 %7544)
  %7546 = trunc i32 %7545 to i8
  %7547 = and i8 %7546, 1
  %7548 = xor i8 %7547, 1
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7548, i8* %7549, align 1
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7550, align 1
  %7551 = icmp eq i64 %7541, 0
  %7552 = zext i1 %7551 to i8
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7552, i8* %7553, align 1
  %7554 = lshr i64 %7541, 63
  %7555 = trunc i64 %7554 to i8
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7555, i8* %7556, align 1
  %7557 = lshr i64 %7541, 63
  %7558 = xor i64 %7554, %7557
  %7559 = add i64 %7558, %7557
  %7560 = icmp eq i64 %7559, 2
  %7561 = zext i1 %7560 to i8
  %7562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7561, i8* %7562, align 1
  store %struct.Memory* %loadMem_43b936, %struct.Memory** %MEMORY
  %loadMem_43b93b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7564 = getelementptr inbounds %struct.GPR, %struct.GPR* %7563, i32 0, i32 33
  %7565 = getelementptr inbounds %struct.Reg, %struct.Reg* %7564, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %7565 to i64*
  %7566 = load i64, i64* %PC.i203
  %7567 = add i64 %7566, 15
  %7568 = load i64, i64* %PC.i203
  %7569 = add i64 %7568, 6
  %7570 = load i64, i64* %PC.i203
  %7571 = add i64 %7570, 6
  store i64 %7571, i64* %PC.i203
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7573 = load i8, i8* %7572, align 1
  store i8 %7573, i8* %BRANCH_TAKEN, align 1
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7575 = icmp ne i8 %7573, 0
  %7576 = select i1 %7575, i64 %7567, i64 %7569
  store i64 %7576, i64* %7574, align 8
  store %struct.Memory* %loadMem_43b93b, %struct.Memory** %MEMORY
  %loadBr_43b93b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b93b = icmp eq i8 %loadBr_43b93b, 1
  br i1 %cmpBr_43b93b, label %block_.L_43b94a, label %block_43b941

block_43b941:                                     ; preds = %block_.L_43b936
  %loadMem_43b941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7578 = getelementptr inbounds %struct.GPR, %struct.GPR* %7577, i32 0, i32 33
  %7579 = getelementptr inbounds %struct.Reg, %struct.Reg* %7578, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %7579 to i64*
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7581 = getelementptr inbounds %struct.GPR, %struct.GPR* %7580, i32 0, i32 1
  %7582 = getelementptr inbounds %struct.Reg, %struct.Reg* %7581, i32 0, i32 0
  %RAX.i201 = bitcast %union.anon* %7582 to i64*
  %7583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7584 = getelementptr inbounds %struct.GPR, %struct.GPR* %7583, i32 0, i32 15
  %7585 = getelementptr inbounds %struct.Reg, %struct.Reg* %7584, i32 0, i32 0
  %RBP.i202 = bitcast %union.anon* %7585 to i64*
  %7586 = load i64, i64* %RBP.i202
  %7587 = sub i64 %7586, 92
  %7588 = load i64, i64* %PC.i200
  %7589 = add i64 %7588, 3
  store i64 %7589, i64* %PC.i200
  %7590 = inttoptr i64 %7587 to i32*
  %7591 = load i32, i32* %7590
  %7592 = zext i32 %7591 to i64
  store i64 %7592, i64* %RAX.i201, align 8
  store %struct.Memory* %loadMem_43b941, %struct.Memory** %MEMORY
  %loadMem_43b944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7594 = getelementptr inbounds %struct.GPR, %struct.GPR* %7593, i32 0, i32 33
  %7595 = getelementptr inbounds %struct.Reg, %struct.Reg* %7594, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %7595 to i64*
  %7596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7597 = getelementptr inbounds %struct.GPR, %struct.GPR* %7596, i32 0, i32 5
  %7598 = getelementptr inbounds %struct.Reg, %struct.Reg* %7597, i32 0, i32 0
  %RCX.i198 = bitcast %union.anon* %7598 to i64*
  %7599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7600 = getelementptr inbounds %struct.GPR, %struct.GPR* %7599, i32 0, i32 15
  %7601 = getelementptr inbounds %struct.Reg, %struct.Reg* %7600, i32 0, i32 0
  %RBP.i199 = bitcast %union.anon* %7601 to i64*
  %7602 = load i64, i64* %RBP.i199
  %7603 = sub i64 %7602, 32
  %7604 = load i64, i64* %PC.i197
  %7605 = add i64 %7604, 4
  store i64 %7605, i64* %PC.i197
  %7606 = inttoptr i64 %7603 to i64*
  %7607 = load i64, i64* %7606
  store i64 %7607, i64* %RCX.i198, align 8
  store %struct.Memory* %loadMem_43b944, %struct.Memory** %MEMORY
  %loadMem_43b948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7609 = getelementptr inbounds %struct.GPR, %struct.GPR* %7608, i32 0, i32 33
  %7610 = getelementptr inbounds %struct.Reg, %struct.Reg* %7609, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %7610 to i64*
  %7611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7612 = getelementptr inbounds %struct.GPR, %struct.GPR* %7611, i32 0, i32 1
  %7613 = getelementptr inbounds %struct.Reg, %struct.Reg* %7612, i32 0, i32 0
  %EAX.i195 = bitcast %union.anon* %7613 to i32*
  %7614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7615 = getelementptr inbounds %struct.GPR, %struct.GPR* %7614, i32 0, i32 5
  %7616 = getelementptr inbounds %struct.Reg, %struct.Reg* %7615, i32 0, i32 0
  %RCX.i196 = bitcast %union.anon* %7616 to i64*
  %7617 = load i64, i64* %RCX.i196
  %7618 = load i32, i32* %EAX.i195
  %7619 = zext i32 %7618 to i64
  %7620 = load i64, i64* %PC.i194
  %7621 = add i64 %7620, 2
  store i64 %7621, i64* %PC.i194
  %7622 = inttoptr i64 %7617 to i32*
  store i32 %7618, i32* %7622
  store %struct.Memory* %loadMem_43b948, %struct.Memory** %MEMORY
  br label %block_.L_43b94a

block_.L_43b94a:                                  ; preds = %block_43b941, %block_.L_43b936
  %loadMem_43b94a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7624 = getelementptr inbounds %struct.GPR, %struct.GPR* %7623, i32 0, i32 33
  %7625 = getelementptr inbounds %struct.Reg, %struct.Reg* %7624, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %7625 to i64*
  %7626 = load i64, i64* %PC.i193
  %7627 = add i64 %7626, 5
  %7628 = load i64, i64* %PC.i193
  %7629 = add i64 %7628, 5
  store i64 %7629, i64* %PC.i193
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7627, i64* %7630, align 8
  store %struct.Memory* %loadMem_43b94a, %struct.Memory** %MEMORY
  br label %block_.L_43b94f

block_.L_43b94f:                                  ; preds = %block_.L_43b94a, %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_43b94f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7632 = getelementptr inbounds %struct.GPR, %struct.GPR* %7631, i32 0, i32 33
  %7633 = getelementptr inbounds %struct.Reg, %struct.Reg* %7632, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %7633 to i64*
  %7634 = load i64, i64* %PC.i192
  %7635 = add i64 %7634, 5
  %7636 = load i64, i64* %PC.i192
  %7637 = add i64 %7636, 5
  store i64 %7637, i64* %PC.i192
  %7638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7635, i64* %7638, align 8
  store %struct.Memory* %loadMem_43b94f, %struct.Memory** %MEMORY
  br label %block_.L_43b954

block_.L_43b954:                                  ; preds = %block_.L_43b94f, %block_43b6ed, %block_43b6e0, %block_.L_43b6d5
  %loadMem_43b954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7640 = getelementptr inbounds %struct.GPR, %struct.GPR* %7639, i32 0, i32 33
  %7641 = getelementptr inbounds %struct.Reg, %struct.Reg* %7640, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %7641 to i64*
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7643 = getelementptr inbounds %struct.GPR, %struct.GPR* %7642, i32 0, i32 15
  %7644 = getelementptr inbounds %struct.Reg, %struct.Reg* %7643, i32 0, i32 0
  %RBP.i191 = bitcast %union.anon* %7644 to i64*
  %7645 = load i64, i64* %RBP.i191
  %7646 = sub i64 %7645, 40
  %7647 = load i64, i64* %PC.i190
  %7648 = add i64 %7647, 5
  store i64 %7648, i64* %PC.i190
  %7649 = inttoptr i64 %7646 to i64*
  %7650 = load i64, i64* %7649
  %7651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7651, align 1
  %7652 = trunc i64 %7650 to i32
  %7653 = and i32 %7652, 255
  %7654 = call i32 @llvm.ctpop.i32(i32 %7653)
  %7655 = trunc i32 %7654 to i8
  %7656 = and i8 %7655, 1
  %7657 = xor i8 %7656, 1
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7657, i8* %7658, align 1
  %7659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7659, align 1
  %7660 = icmp eq i64 %7650, 0
  %7661 = zext i1 %7660 to i8
  %7662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7661, i8* %7662, align 1
  %7663 = lshr i64 %7650, 63
  %7664 = trunc i64 %7663 to i8
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7664, i8* %7665, align 1
  %7666 = lshr i64 %7650, 63
  %7667 = xor i64 %7663, %7666
  %7668 = add i64 %7667, %7666
  %7669 = icmp eq i64 %7668, 2
  %7670 = zext i1 %7669 to i8
  %7671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7670, i8* %7671, align 1
  store %struct.Memory* %loadMem_43b954, %struct.Memory** %MEMORY
  %loadMem_43b959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7673 = getelementptr inbounds %struct.GPR, %struct.GPR* %7672, i32 0, i32 33
  %7674 = getelementptr inbounds %struct.Reg, %struct.Reg* %7673, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %7674 to i64*
  %7675 = load i64, i64* %PC.i189
  %7676 = add i64 %7675, 193
  %7677 = load i64, i64* %PC.i189
  %7678 = add i64 %7677, 6
  %7679 = load i64, i64* %PC.i189
  %7680 = add i64 %7679, 6
  store i64 %7680, i64* %PC.i189
  %7681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7682 = load i8, i8* %7681, align 1
  store i8 %7682, i8* %BRANCH_TAKEN, align 1
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7684 = icmp ne i8 %7682, 0
  %7685 = select i1 %7684, i64 %7676, i64 %7678
  store i64 %7685, i64* %7683, align 8
  store %struct.Memory* %loadMem_43b959, %struct.Memory** %MEMORY
  %loadBr_43b959 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b959 = icmp eq i8 %loadBr_43b959, 1
  br i1 %cmpBr_43b959, label %block_.L_43ba1a, label %block_43b95f

block_43b95f:                                     ; preds = %block_.L_43b954
  %loadMem_43b95f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7687 = getelementptr inbounds %struct.GPR, %struct.GPR* %7686, i32 0, i32 33
  %7688 = getelementptr inbounds %struct.Reg, %struct.Reg* %7687, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %7688 to i64*
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7690 = getelementptr inbounds %struct.GPR, %struct.GPR* %7689, i32 0, i32 1
  %7691 = getelementptr inbounds %struct.Reg, %struct.Reg* %7690, i32 0, i32 0
  %RAX.i187 = bitcast %union.anon* %7691 to i64*
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 15
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %7694 to i64*
  %7695 = load i64, i64* %RBP.i188
  %7696 = sub i64 %7695, 40
  %7697 = load i64, i64* %PC.i186
  %7698 = add i64 %7697, 4
  store i64 %7698, i64* %PC.i186
  %7699 = inttoptr i64 %7696 to i64*
  %7700 = load i64, i64* %7699
  store i64 %7700, i64* %RAX.i187, align 8
  store %struct.Memory* %loadMem_43b95f, %struct.Memory** %MEMORY
  %loadMem_43b963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7702 = getelementptr inbounds %struct.GPR, %struct.GPR* %7701, i32 0, i32 33
  %7703 = getelementptr inbounds %struct.Reg, %struct.Reg* %7702, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %7703 to i64*
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7705 = getelementptr inbounds %struct.GPR, %struct.GPR* %7704, i32 0, i32 1
  %7706 = getelementptr inbounds %struct.Reg, %struct.Reg* %7705, i32 0, i32 0
  %RAX.i185 = bitcast %union.anon* %7706 to i64*
  %7707 = load i64, i64* %RAX.i185
  %7708 = load i64, i64* %PC.i184
  %7709 = add i64 %7708, 3
  store i64 %7709, i64* %PC.i184
  %7710 = inttoptr i64 %7707 to i32*
  %7711 = load i32, i32* %7710
  %7712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7712, align 1
  %7713 = and i32 %7711, 255
  %7714 = call i32 @llvm.ctpop.i32(i32 %7713)
  %7715 = trunc i32 %7714 to i8
  %7716 = and i8 %7715, 1
  %7717 = xor i8 %7716, 1
  %7718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7717, i8* %7718, align 1
  %7719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7719, align 1
  %7720 = icmp eq i32 %7711, 0
  %7721 = zext i1 %7720 to i8
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7721, i8* %7722, align 1
  %7723 = lshr i32 %7711, 31
  %7724 = trunc i32 %7723 to i8
  %7725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7724, i8* %7725, align 1
  %7726 = lshr i32 %7711, 31
  %7727 = xor i32 %7723, %7726
  %7728 = add i32 %7727, %7726
  %7729 = icmp eq i32 %7728, 2
  %7730 = zext i1 %7729 to i8
  %7731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7730, i8* %7731, align 1
  store %struct.Memory* %loadMem_43b963, %struct.Memory** %MEMORY
  %loadMem_43b966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7733 = getelementptr inbounds %struct.GPR, %struct.GPR* %7732, i32 0, i32 33
  %7734 = getelementptr inbounds %struct.Reg, %struct.Reg* %7733, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %7734 to i64*
  %7735 = load i64, i64* %PC.i183
  %7736 = add i64 %7735, 180
  %7737 = load i64, i64* %PC.i183
  %7738 = add i64 %7737, 6
  %7739 = load i64, i64* %PC.i183
  %7740 = add i64 %7739, 6
  store i64 %7740, i64* %PC.i183
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7742 = load i8, i8* %7741, align 1
  store i8 %7742, i8* %BRANCH_TAKEN, align 1
  %7743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7744 = icmp ne i8 %7742, 0
  %7745 = select i1 %7744, i64 %7736, i64 %7738
  store i64 %7745, i64* %7743, align 8
  store %struct.Memory* %loadMem_43b966, %struct.Memory** %MEMORY
  %loadBr_43b966 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b966 = icmp eq i8 %loadBr_43b966, 1
  br i1 %cmpBr_43b966, label %block_.L_43ba1a, label %block_43b96c

block_43b96c:                                     ; preds = %block_43b95f
  %loadMem_43b96c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7747 = getelementptr inbounds %struct.GPR, %struct.GPR* %7746, i32 0, i32 33
  %7748 = getelementptr inbounds %struct.Reg, %struct.Reg* %7747, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %7748 to i64*
  %7749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7750 = getelementptr inbounds %struct.GPR, %struct.GPR* %7749, i32 0, i32 1
  %7751 = getelementptr inbounds %struct.Reg, %struct.Reg* %7750, i32 0, i32 0
  %RAX.i181 = bitcast %union.anon* %7751 to i64*
  %7752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7753 = getelementptr inbounds %struct.GPR, %struct.GPR* %7752, i32 0, i32 15
  %7754 = getelementptr inbounds %struct.Reg, %struct.Reg* %7753, i32 0, i32 0
  %RBP.i182 = bitcast %union.anon* %7754 to i64*
  %7755 = load i64, i64* %RBP.i182
  %7756 = sub i64 %7755, 40
  %7757 = load i64, i64* %PC.i180
  %7758 = add i64 %7757, 4
  store i64 %7758, i64* %PC.i180
  %7759 = inttoptr i64 %7756 to i64*
  %7760 = load i64, i64* %7759
  store i64 %7760, i64* %RAX.i181, align 8
  store %struct.Memory* %loadMem_43b96c, %struct.Memory** %MEMORY
  %loadMem_43b970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7762 = getelementptr inbounds %struct.GPR, %struct.GPR* %7761, i32 0, i32 33
  %7763 = getelementptr inbounds %struct.Reg, %struct.Reg* %7762, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %7763 to i64*
  %7764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7765 = getelementptr inbounds %struct.GPR, %struct.GPR* %7764, i32 0, i32 1
  %7766 = getelementptr inbounds %struct.Reg, %struct.Reg* %7765, i32 0, i32 0
  %RAX.i179 = bitcast %union.anon* %7766 to i64*
  %7767 = load i64, i64* %RAX.i179
  %7768 = load i64, i64* %PC.i178
  %7769 = add i64 %7768, 6
  store i64 %7769, i64* %PC.i178
  %7770 = inttoptr i64 %7767 to i32*
  %7771 = load i32, i32* %7770
  %7772 = sub i32 %7771, 421
  %7773 = icmp ult i32 %7771, 421
  %7774 = zext i1 %7773 to i8
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7774, i8* %7775, align 1
  %7776 = and i32 %7772, 255
  %7777 = call i32 @llvm.ctpop.i32(i32 %7776)
  %7778 = trunc i32 %7777 to i8
  %7779 = and i8 %7778, 1
  %7780 = xor i8 %7779, 1
  %7781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7780, i8* %7781, align 1
  %7782 = xor i32 %7771, 421
  %7783 = xor i32 %7782, %7772
  %7784 = lshr i32 %7783, 4
  %7785 = trunc i32 %7784 to i8
  %7786 = and i8 %7785, 1
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7786, i8* %7787, align 1
  %7788 = icmp eq i32 %7772, 0
  %7789 = zext i1 %7788 to i8
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7789, i8* %7790, align 1
  %7791 = lshr i32 %7772, 31
  %7792 = trunc i32 %7791 to i8
  %7793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7792, i8* %7793, align 1
  %7794 = lshr i32 %7771, 31
  %7795 = xor i32 %7791, %7794
  %7796 = add i32 %7795, %7794
  %7797 = icmp eq i32 %7796, 2
  %7798 = zext i1 %7797 to i8
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7798, i8* %7799, align 1
  store %struct.Memory* %loadMem_43b970, %struct.Memory** %MEMORY
  %loadMem_43b976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7801 = getelementptr inbounds %struct.GPR, %struct.GPR* %7800, i32 0, i32 33
  %7802 = getelementptr inbounds %struct.Reg, %struct.Reg* %7801, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %7802 to i64*
  %7803 = load i64, i64* %PC.i177
  %7804 = add i64 %7803, 35
  %7805 = load i64, i64* %PC.i177
  %7806 = add i64 %7805, 6
  %7807 = load i64, i64* %PC.i177
  %7808 = add i64 %7807, 6
  store i64 %7808, i64* %PC.i177
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7810 = load i8, i8* %7809, align 1
  %7811 = icmp eq i8 %7810, 0
  %7812 = zext i1 %7811 to i8
  store i8 %7812, i8* %BRANCH_TAKEN, align 1
  %7813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7814 = select i1 %7811, i64 %7804, i64 %7806
  store i64 %7814, i64* %7813, align 8
  store %struct.Memory* %loadMem_43b976, %struct.Memory** %MEMORY
  %loadBr_43b976 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b976 = icmp eq i8 %loadBr_43b976, 1
  br i1 %cmpBr_43b976, label %block_.L_43b999, label %block_43b97c

block_43b97c:                                     ; preds = %block_43b96c
  %loadMem_43b97c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7816 = getelementptr inbounds %struct.GPR, %struct.GPR* %7815, i32 0, i32 33
  %7817 = getelementptr inbounds %struct.Reg, %struct.Reg* %7816, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %7817 to i64*
  %7818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7819 = getelementptr inbounds %struct.GPR, %struct.GPR* %7818, i32 0, i32 1
  %7820 = getelementptr inbounds %struct.Reg, %struct.Reg* %7819, i32 0, i32 0
  %RAX.i175 = bitcast %union.anon* %7820 to i64*
  %7821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7822 = getelementptr inbounds %struct.GPR, %struct.GPR* %7821, i32 0, i32 15
  %7823 = getelementptr inbounds %struct.Reg, %struct.Reg* %7822, i32 0, i32 0
  %RBP.i176 = bitcast %union.anon* %7823 to i64*
  %7824 = load i64, i64* %RBP.i176
  %7825 = sub i64 %7824, 40
  %7826 = load i64, i64* %PC.i174
  %7827 = add i64 %7826, 4
  store i64 %7827, i64* %PC.i174
  %7828 = inttoptr i64 %7825 to i64*
  %7829 = load i64, i64* %7828
  store i64 %7829, i64* %RAX.i175, align 8
  store %struct.Memory* %loadMem_43b97c, %struct.Memory** %MEMORY
  %loadMem_43b980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7831 = getelementptr inbounds %struct.GPR, %struct.GPR* %7830, i32 0, i32 33
  %7832 = getelementptr inbounds %struct.Reg, %struct.Reg* %7831, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %7832 to i64*
  %7833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7834 = getelementptr inbounds %struct.GPR, %struct.GPR* %7833, i32 0, i32 1
  %7835 = getelementptr inbounds %struct.Reg, %struct.Reg* %7834, i32 0, i32 0
  %RAX.i173 = bitcast %union.anon* %7835 to i64*
  %7836 = load i64, i64* %RAX.i173
  %7837 = load i64, i64* %PC.i172
  %7838 = add i64 %7837, 3
  store i64 %7838, i64* %PC.i172
  %7839 = inttoptr i64 %7836 to i32*
  %7840 = load i32, i32* %7839
  %7841 = sext i32 %7840 to i64
  store i64 %7841, i64* %RAX.i173, align 8
  store %struct.Memory* %loadMem_43b980, %struct.Memory** %MEMORY
  %loadMem_43b983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7843 = getelementptr inbounds %struct.GPR, %struct.GPR* %7842, i32 0, i32 33
  %7844 = getelementptr inbounds %struct.Reg, %struct.Reg* %7843, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %7844 to i64*
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 1
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %RAX.i170 = bitcast %union.anon* %7847 to i64*
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 5
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %RCX.i171 = bitcast %union.anon* %7850 to i64*
  %7851 = load i64, i64* %RAX.i170
  %7852 = add i64 %7851, 12099168
  %7853 = load i64, i64* %PC.i169
  %7854 = add i64 %7853, 8
  store i64 %7854, i64* %PC.i169
  %7855 = inttoptr i64 %7852 to i8*
  %7856 = load i8, i8* %7855
  %7857 = zext i8 %7856 to i64
  store i64 %7857, i64* %RCX.i171, align 8
  store %struct.Memory* %loadMem_43b983, %struct.Memory** %MEMORY
  %loadMem_43b98b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7859 = getelementptr inbounds %struct.GPR, %struct.GPR* %7858, i32 0, i32 33
  %7860 = getelementptr inbounds %struct.Reg, %struct.Reg* %7859, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %7860 to i64*
  %7861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7862 = getelementptr inbounds %struct.GPR, %struct.GPR* %7861, i32 0, i32 5
  %7863 = getelementptr inbounds %struct.Reg, %struct.Reg* %7862, i32 0, i32 0
  %ECX.i168 = bitcast %union.anon* %7863 to i32*
  %7864 = load i32, i32* %ECX.i168
  %7865 = zext i32 %7864 to i64
  %7866 = load i64, i64* %PC.i167
  %7867 = add i64 %7866, 3
  store i64 %7867, i64* %PC.i167
  %7868 = sub i32 %7864, 3
  %7869 = icmp ult i32 %7864, 3
  %7870 = zext i1 %7869 to i8
  %7871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7870, i8* %7871, align 1
  %7872 = and i32 %7868, 255
  %7873 = call i32 @llvm.ctpop.i32(i32 %7872)
  %7874 = trunc i32 %7873 to i8
  %7875 = and i8 %7874, 1
  %7876 = xor i8 %7875, 1
  %7877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7876, i8* %7877, align 1
  %7878 = xor i64 3, %7865
  %7879 = trunc i64 %7878 to i32
  %7880 = xor i32 %7879, %7868
  %7881 = lshr i32 %7880, 4
  %7882 = trunc i32 %7881 to i8
  %7883 = and i8 %7882, 1
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7883, i8* %7884, align 1
  %7885 = icmp eq i32 %7868, 0
  %7886 = zext i1 %7885 to i8
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7886, i8* %7887, align 1
  %7888 = lshr i32 %7868, 31
  %7889 = trunc i32 %7888 to i8
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7889, i8* %7890, align 1
  %7891 = lshr i32 %7864, 31
  %7892 = xor i32 %7888, %7891
  %7893 = add i32 %7892, %7891
  %7894 = icmp eq i32 %7893, 2
  %7895 = zext i1 %7894 to i8
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7895, i8* %7896, align 1
  store %struct.Memory* %loadMem_43b98b, %struct.Memory** %MEMORY
  %loadMem_43b98e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7898 = getelementptr inbounds %struct.GPR, %struct.GPR* %7897, i32 0, i32 33
  %7899 = getelementptr inbounds %struct.Reg, %struct.Reg* %7898, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %7899 to i64*
  %7900 = load i64, i64* %PC.i166
  %7901 = add i64 %7900, 11
  %7902 = load i64, i64* %PC.i166
  %7903 = add i64 %7902, 6
  %7904 = load i64, i64* %PC.i166
  %7905 = add i64 %7904, 6
  store i64 %7905, i64* %PC.i166
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7907 = load i8, i8* %7906, align 1
  store i8 %7907, i8* %BRANCH_TAKEN, align 1
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7909 = icmp ne i8 %7907, 0
  %7910 = select i1 %7909, i64 %7901, i64 %7903
  store i64 %7910, i64* %7908, align 8
  store %struct.Memory* %loadMem_43b98e, %struct.Memory** %MEMORY
  %loadBr_43b98e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b98e = icmp eq i8 %loadBr_43b98e, 1
  br i1 %cmpBr_43b98e, label %block_.L_43b999, label %block_43b994

block_43b994:                                     ; preds = %block_43b97c
  %loadMem_43b994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7912 = getelementptr inbounds %struct.GPR, %struct.GPR* %7911, i32 0, i32 33
  %7913 = getelementptr inbounds %struct.Reg, %struct.Reg* %7912, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %7913 to i64*
  %7914 = load i64, i64* %PC.i165
  %7915 = add i64 %7914, 129
  %7916 = load i64, i64* %PC.i165
  %7917 = add i64 %7916, 5
  store i64 %7917, i64* %PC.i165
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7915, i64* %7918, align 8
  store %struct.Memory* %loadMem_43b994, %struct.Memory** %MEMORY
  br label %block_.L_43ba15

block_.L_43b999:                                  ; preds = %block_43b97c, %block_43b96c
  %loadMem_43b999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7920 = getelementptr inbounds %struct.GPR, %struct.GPR* %7919, i32 0, i32 33
  %7921 = getelementptr inbounds %struct.Reg, %struct.Reg* %7920, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %7921 to i64*
  %7922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7923 = getelementptr inbounds %struct.GPR, %struct.GPR* %7922, i32 0, i32 11
  %7924 = getelementptr inbounds %struct.Reg, %struct.Reg* %7923, i32 0, i32 0
  %RDI.i164 = bitcast %union.anon* %7924 to i64*
  %7925 = load i64, i64* %PC.i163
  %7926 = add i64 %7925, 10
  store i64 %7926, i64* %PC.i163
  store i64 ptrtoint (%G__0x57d7b6_type* @G__0x57d7b6 to i64), i64* %RDI.i164, align 8
  store %struct.Memory* %loadMem_43b999, %struct.Memory** %MEMORY
  %loadMem_43b9a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7928 = getelementptr inbounds %struct.GPR, %struct.GPR* %7927, i32 0, i32 33
  %7929 = getelementptr inbounds %struct.Reg, %struct.Reg* %7928, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %7929 to i64*
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7931 = getelementptr inbounds %struct.GPR, %struct.GPR* %7930, i32 0, i32 9
  %7932 = getelementptr inbounds %struct.Reg, %struct.Reg* %7931, i32 0, i32 0
  %RSI.i162 = bitcast %union.anon* %7932 to i64*
  %7933 = load i64, i64* %PC.i161
  %7934 = add i64 %7933, 5
  store i64 %7934, i64* %PC.i161
  store i64 953, i64* %RSI.i162, align 8
  store %struct.Memory* %loadMem_43b9a3, %struct.Memory** %MEMORY
  %loadMem_43b9a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7936 = getelementptr inbounds %struct.GPR, %struct.GPR* %7935, i32 0, i32 33
  %7937 = getelementptr inbounds %struct.Reg, %struct.Reg* %7936, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %7937 to i64*
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7939 = getelementptr inbounds %struct.GPR, %struct.GPR* %7938, i32 0, i32 7
  %7940 = getelementptr inbounds %struct.Reg, %struct.Reg* %7939, i32 0, i32 0
  %RDX.i160 = bitcast %union.anon* %7940 to i64*
  %7941 = load i64, i64* %PC.i159
  %7942 = add i64 %7941, 10
  store i64 %7942, i64* %PC.i159
  store i64 ptrtoint (%G__0x57dafd_type* @G__0x57dafd to i64), i64* %RDX.i160, align 8
  store %struct.Memory* %loadMem_43b9a8, %struct.Memory** %MEMORY
  %loadMem_43b9b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7944 = getelementptr inbounds %struct.GPR, %struct.GPR* %7943, i32 0, i32 33
  %7945 = getelementptr inbounds %struct.Reg, %struct.Reg* %7944, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %7945 to i64*
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7947 = getelementptr inbounds %struct.GPR, %struct.GPR* %7946, i32 0, i32 1
  %7948 = getelementptr inbounds %struct.Reg, %struct.Reg* %7947, i32 0, i32 0
  %RAX.i158 = bitcast %union.anon* %7948 to i64*
  %7949 = load i64, i64* %PC.i157
  %7950 = add i64 %7949, 5
  store i64 %7950, i64* %PC.i157
  store i64 20, i64* %RAX.i158, align 8
  store %struct.Memory* %loadMem_43b9b2, %struct.Memory** %MEMORY
  %loadMem_43b9b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7952 = getelementptr inbounds %struct.GPR, %struct.GPR* %7951, i32 0, i32 33
  %7953 = getelementptr inbounds %struct.Reg, %struct.Reg* %7952, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %7953 to i64*
  %7954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7955 = getelementptr inbounds %struct.GPR, %struct.GPR* %7954, i32 0, i32 5
  %7956 = getelementptr inbounds %struct.Reg, %struct.Reg* %7955, i32 0, i32 0
  %RCX.i155 = bitcast %union.anon* %7956 to i64*
  %7957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7958 = getelementptr inbounds %struct.GPR, %struct.GPR* %7957, i32 0, i32 15
  %7959 = getelementptr inbounds %struct.Reg, %struct.Reg* %7958, i32 0, i32 0
  %RBP.i156 = bitcast %union.anon* %7959 to i64*
  %7960 = load i64, i64* %RBP.i156
  %7961 = sub i64 %7960, 40
  %7962 = load i64, i64* %PC.i154
  %7963 = add i64 %7962, 4
  store i64 %7963, i64* %PC.i154
  %7964 = inttoptr i64 %7961 to i64*
  %7965 = load i64, i64* %7964
  store i64 %7965, i64* %RCX.i155, align 8
  store %struct.Memory* %loadMem_43b9b7, %struct.Memory** %MEMORY
  %loadMem_43b9bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7967 = getelementptr inbounds %struct.GPR, %struct.GPR* %7966, i32 0, i32 33
  %7968 = getelementptr inbounds %struct.Reg, %struct.Reg* %7967, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %7968 to i64*
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7970 = getelementptr inbounds %struct.GPR, %struct.GPR* %7969, i32 0, i32 17
  %7971 = getelementptr inbounds %struct.Reg, %struct.Reg* %7970, i32 0, i32 0
  %R8D.i152 = bitcast %union.anon* %7971 to i32*
  %7972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7973 = getelementptr inbounds %struct.GPR, %struct.GPR* %7972, i32 0, i32 5
  %7974 = getelementptr inbounds %struct.Reg, %struct.Reg* %7973, i32 0, i32 0
  %RCX.i153 = bitcast %union.anon* %7974 to i64*
  %7975 = bitcast i32* %R8D.i152 to i64*
  %7976 = load i64, i64* %RCX.i153
  %7977 = load i64, i64* %PC.i151
  %7978 = add i64 %7977, 3
  store i64 %7978, i64* %PC.i151
  %7979 = inttoptr i64 %7976 to i32*
  %7980 = load i32, i32* %7979
  %7981 = zext i32 %7980 to i64
  store i64 %7981, i64* %7975, align 8
  store %struct.Memory* %loadMem_43b9bb, %struct.Memory** %MEMORY
  %loadMem_43b9be = load %struct.Memory*, %struct.Memory** %MEMORY
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7983 = getelementptr inbounds %struct.GPR, %struct.GPR* %7982, i32 0, i32 33
  %7984 = getelementptr inbounds %struct.Reg, %struct.Reg* %7983, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %7984 to i64*
  %7985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7986 = getelementptr inbounds %struct.GPR, %struct.GPR* %7985, i32 0, i32 1
  %7987 = getelementptr inbounds %struct.Reg, %struct.Reg* %7986, i32 0, i32 0
  %EAX.i149 = bitcast %union.anon* %7987 to i32*
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7989 = getelementptr inbounds %struct.GPR, %struct.GPR* %7988, i32 0, i32 15
  %7990 = getelementptr inbounds %struct.Reg, %struct.Reg* %7989, i32 0, i32 0
  %RBP.i150 = bitcast %union.anon* %7990 to i64*
  %7991 = load i64, i64* %RBP.i150
  %7992 = sub i64 %7991, 152
  %7993 = load i32, i32* %EAX.i149
  %7994 = zext i32 %7993 to i64
  %7995 = load i64, i64* %PC.i148
  %7996 = add i64 %7995, 6
  store i64 %7996, i64* %PC.i148
  %7997 = inttoptr i64 %7992 to i32*
  store i32 %7993, i32* %7997
  store %struct.Memory* %loadMem_43b9be, %struct.Memory** %MEMORY
  %loadMem_43b9c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7999 = getelementptr inbounds %struct.GPR, %struct.GPR* %7998, i32 0, i32 33
  %8000 = getelementptr inbounds %struct.Reg, %struct.Reg* %7999, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %8000 to i64*
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8002 = getelementptr inbounds %struct.GPR, %struct.GPR* %8001, i32 0, i32 17
  %8003 = getelementptr inbounds %struct.Reg, %struct.Reg* %8002, i32 0, i32 0
  %R8D.i146 = bitcast %union.anon* %8003 to i32*
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8005 = getelementptr inbounds %struct.GPR, %struct.GPR* %8004, i32 0, i32 1
  %8006 = getelementptr inbounds %struct.Reg, %struct.Reg* %8005, i32 0, i32 0
  %RAX.i147 = bitcast %union.anon* %8006 to i64*
  %8007 = load i32, i32* %R8D.i146
  %8008 = zext i32 %8007 to i64
  %8009 = load i64, i64* %PC.i145
  %8010 = add i64 %8009, 3
  store i64 %8010, i64* %PC.i145
  %8011 = and i64 %8008, 4294967295
  store i64 %8011, i64* %RAX.i147, align 8
  store %struct.Memory* %loadMem_43b9c4, %struct.Memory** %MEMORY
  %loadMem_43b9c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8013 = getelementptr inbounds %struct.GPR, %struct.GPR* %8012, i32 0, i32 33
  %8014 = getelementptr inbounds %struct.Reg, %struct.Reg* %8013, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %8014 to i64*
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8016 = getelementptr inbounds %struct.GPR, %struct.GPR* %8015, i32 0, i32 7
  %8017 = getelementptr inbounds %struct.Reg, %struct.Reg* %8016, i32 0, i32 0
  %RDX.i143 = bitcast %union.anon* %8017 to i64*
  %8018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8019 = getelementptr inbounds %struct.GPR, %struct.GPR* %8018, i32 0, i32 15
  %8020 = getelementptr inbounds %struct.Reg, %struct.Reg* %8019, i32 0, i32 0
  %RBP.i144 = bitcast %union.anon* %8020 to i64*
  %8021 = load i64, i64* %RBP.i144
  %8022 = sub i64 %8021, 160
  %8023 = load i64, i64* %RDX.i143
  %8024 = load i64, i64* %PC.i142
  %8025 = add i64 %8024, 7
  store i64 %8025, i64* %PC.i142
  %8026 = inttoptr i64 %8022 to i64*
  store i64 %8023, i64* %8026
  store %struct.Memory* %loadMem_43b9c7, %struct.Memory** %MEMORY
  %loadMem_43b9ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %8027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8028 = getelementptr inbounds %struct.GPR, %struct.GPR* %8027, i32 0, i32 33
  %8029 = getelementptr inbounds %struct.Reg, %struct.Reg* %8028, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %8029 to i64*
  %8030 = load i64, i64* %PC.i141
  %8031 = add i64 %8030, 1
  store i64 %8031, i64* %PC.i141
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8034 = bitcast %union.anon* %8033 to i32*
  %8035 = load i32, i32* %8034, align 8
  %8036 = sext i32 %8035 to i64
  %8037 = lshr i64 %8036, 32
  store i64 %8037, i64* %8032, align 8
  store %struct.Memory* %loadMem_43b9ce, %struct.Memory** %MEMORY
  %loadMem_43b9cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8039 = getelementptr inbounds %struct.GPR, %struct.GPR* %8038, i32 0, i32 33
  %8040 = getelementptr inbounds %struct.Reg, %struct.Reg* %8039, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %8040 to i64*
  %8041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8042 = getelementptr inbounds %struct.GPR, %struct.GPR* %8041, i32 0, i32 17
  %8043 = getelementptr inbounds %struct.Reg, %struct.Reg* %8042, i32 0, i32 0
  %R8D.i139 = bitcast %union.anon* %8043 to i32*
  %8044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8045 = getelementptr inbounds %struct.GPR, %struct.GPR* %8044, i32 0, i32 15
  %8046 = getelementptr inbounds %struct.Reg, %struct.Reg* %8045, i32 0, i32 0
  %RBP.i140 = bitcast %union.anon* %8046 to i64*
  %8047 = bitcast i32* %R8D.i139 to i64*
  %8048 = load i64, i64* %RBP.i140
  %8049 = sub i64 %8048, 152
  %8050 = load i64, i64* %PC.i138
  %8051 = add i64 %8050, 7
  store i64 %8051, i64* %PC.i138
  %8052 = inttoptr i64 %8049 to i32*
  %8053 = load i32, i32* %8052
  %8054 = zext i32 %8053 to i64
  store i64 %8054, i64* %8047, align 8
  store %struct.Memory* %loadMem_43b9cf, %struct.Memory** %MEMORY
  %loadMem_43b9d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8056 = getelementptr inbounds %struct.GPR, %struct.GPR* %8055, i32 0, i32 33
  %8057 = getelementptr inbounds %struct.Reg, %struct.Reg* %8056, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %8057 to i64*
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8059 = getelementptr inbounds %struct.GPR, %struct.GPR* %8058, i32 0, i32 17
  %8060 = getelementptr inbounds %struct.Reg, %struct.Reg* %8059, i32 0, i32 0
  %R8D.i134 = bitcast %union.anon* %8060 to i32*
  %8061 = load i32, i32* %R8D.i134
  %8062 = zext i32 %8061 to i64
  %8063 = load i64, i64* %PC.i133
  %8064 = add i64 %8063, 3
  store i64 %8064, i64* %PC.i133
  %8065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8066 = bitcast %union.anon* %8065 to i32*
  %8067 = load i32, i32* %8066, align 8
  %8068 = zext i32 %8067 to i64
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8070 = bitcast %union.anon* %8069 to i32*
  %8071 = load i32, i32* %8070, align 8
  %8072 = zext i32 %8071 to i64
  %8073 = shl i64 %8062, 32
  %8074 = ashr exact i64 %8073, 32
  %8075 = shl i64 %8072, 32
  %8076 = or i64 %8075, %8068
  %8077 = sdiv i64 %8076, %8074
  %8078 = shl i64 %8077, 32
  %8079 = ashr exact i64 %8078, 32
  %8080 = icmp eq i64 %8077, %8079
  br i1 %8080, label %8085, label %8081

; <label>:8081:                                   ; preds = %block_.L_43b999
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8083 = load i64, i64* %8082, align 8
  %8084 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8083, %struct.Memory* %loadMem_43b9d6)
  br label %routine_idivl__r8d.exit135

; <label>:8085:                                   ; preds = %block_.L_43b999
  %8086 = srem i64 %8076, %8074
  %8087 = getelementptr inbounds %union.anon, %union.anon* %8065, i64 0, i32 0
  %8088 = and i64 %8077, 4294967295
  store i64 %8088, i64* %8087, align 8
  %8089 = getelementptr inbounds %union.anon, %union.anon* %8069, i64 0, i32 0
  %8090 = and i64 %8086, 4294967295
  store i64 %8090, i64* %8089, align 8
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8091, align 1
  %8092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8092, align 1
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8093, align 1
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8094, align 1
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8095, align 1
  %8096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8096, align 1
  br label %routine_idivl__r8d.exit135

routine_idivl__r8d.exit135:                       ; preds = %8081, %8085
  %8097 = phi %struct.Memory* [ %8084, %8081 ], [ %loadMem_43b9d6, %8085 ]
  store %struct.Memory* %8097, %struct.Memory** %MEMORY
  %loadMem_43b9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8099 = getelementptr inbounds %struct.GPR, %struct.GPR* %8098, i32 0, i32 33
  %8100 = getelementptr inbounds %struct.Reg, %struct.Reg* %8099, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %8100 to i64*
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8102 = getelementptr inbounds %struct.GPR, %struct.GPR* %8101, i32 0, i32 1
  %8103 = getelementptr inbounds %struct.Reg, %struct.Reg* %8102, i32 0, i32 0
  %RAX.i132 = bitcast %union.anon* %8103 to i64*
  %8104 = load i64, i64* %RAX.i132
  %8105 = load i64, i64* %PC.i131
  %8106 = add i64 %8105, 3
  store i64 %8106, i64* %PC.i131
  %8107 = trunc i64 %8104 to i32
  %8108 = sub i32 %8107, 1
  %8109 = zext i32 %8108 to i64
  store i64 %8109, i64* %RAX.i132, align 8
  %8110 = icmp ult i32 %8107, 1
  %8111 = zext i1 %8110 to i8
  %8112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8111, i8* %8112, align 1
  %8113 = and i32 %8108, 255
  %8114 = call i32 @llvm.ctpop.i32(i32 %8113)
  %8115 = trunc i32 %8114 to i8
  %8116 = and i8 %8115, 1
  %8117 = xor i8 %8116, 1
  %8118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8117, i8* %8118, align 1
  %8119 = xor i64 1, %8104
  %8120 = trunc i64 %8119 to i32
  %8121 = xor i32 %8120, %8108
  %8122 = lshr i32 %8121, 4
  %8123 = trunc i32 %8122 to i8
  %8124 = and i8 %8123, 1
  %8125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8124, i8* %8125, align 1
  %8126 = icmp eq i32 %8108, 0
  %8127 = zext i1 %8126 to i8
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8127, i8* %8128, align 1
  %8129 = lshr i32 %8108, 31
  %8130 = trunc i32 %8129 to i8
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8130, i8* %8131, align 1
  %8132 = lshr i32 %8107, 31
  %8133 = xor i32 %8129, %8132
  %8134 = add i32 %8133, %8132
  %8135 = icmp eq i32 %8134, 2
  %8136 = zext i1 %8135 to i8
  %8137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8136, i8* %8137, align 1
  store %struct.Memory* %loadMem_43b9d9, %struct.Memory** %MEMORY
  %loadMem_43b9dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8139 = getelementptr inbounds %struct.GPR, %struct.GPR* %8138, i32 0, i32 33
  %8140 = getelementptr inbounds %struct.Reg, %struct.Reg* %8139, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %8140 to i64*
  %8141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8142 = getelementptr inbounds %struct.GPR, %struct.GPR* %8141, i32 0, i32 5
  %8143 = getelementptr inbounds %struct.Reg, %struct.Reg* %8142, i32 0, i32 0
  %RCX.i129 = bitcast %union.anon* %8143 to i64*
  %8144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8145 = getelementptr inbounds %struct.GPR, %struct.GPR* %8144, i32 0, i32 15
  %8146 = getelementptr inbounds %struct.Reg, %struct.Reg* %8145, i32 0, i32 0
  %RBP.i130 = bitcast %union.anon* %8146 to i64*
  %8147 = load i64, i64* %RBP.i130
  %8148 = sub i64 %8147, 40
  %8149 = load i64, i64* %PC.i128
  %8150 = add i64 %8149, 4
  store i64 %8150, i64* %PC.i128
  %8151 = inttoptr i64 %8148 to i64*
  %8152 = load i64, i64* %8151
  store i64 %8152, i64* %RCX.i129, align 8
  store %struct.Memory* %loadMem_43b9dc, %struct.Memory** %MEMORY
  %loadMem_43b9e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8154 = getelementptr inbounds %struct.GPR, %struct.GPR* %8153, i32 0, i32 33
  %8155 = getelementptr inbounds %struct.Reg, %struct.Reg* %8154, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %8155 to i64*
  %8156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8157 = getelementptr inbounds %struct.GPR, %struct.GPR* %8156, i32 0, i32 19
  %8158 = getelementptr inbounds %struct.Reg, %struct.Reg* %8157, i32 0, i32 0
  %R9D.i126 = bitcast %union.anon* %8158 to i32*
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8160 = getelementptr inbounds %struct.GPR, %struct.GPR* %8159, i32 0, i32 5
  %8161 = getelementptr inbounds %struct.Reg, %struct.Reg* %8160, i32 0, i32 0
  %RCX.i127 = bitcast %union.anon* %8161 to i64*
  %8162 = bitcast i32* %R9D.i126 to i64*
  %8163 = load i64, i64* %RCX.i127
  %8164 = load i64, i64* %PC.i125
  %8165 = add i64 %8164, 3
  store i64 %8165, i64* %PC.i125
  %8166 = inttoptr i64 %8163 to i32*
  %8167 = load i32, i32* %8166
  %8168 = zext i32 %8167 to i64
  store i64 %8168, i64* %8162, align 8
  store %struct.Memory* %loadMem_43b9e0, %struct.Memory** %MEMORY
  %loadMem_43b9e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8170 = getelementptr inbounds %struct.GPR, %struct.GPR* %8169, i32 0, i32 33
  %8171 = getelementptr inbounds %struct.Reg, %struct.Reg* %8170, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %8171 to i64*
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8173 = getelementptr inbounds %struct.GPR, %struct.GPR* %8172, i32 0, i32 1
  %8174 = getelementptr inbounds %struct.Reg, %struct.Reg* %8173, i32 0, i32 0
  %EAX.i123 = bitcast %union.anon* %8174 to i32*
  %8175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8176 = getelementptr inbounds %struct.GPR, %struct.GPR* %8175, i32 0, i32 15
  %8177 = getelementptr inbounds %struct.Reg, %struct.Reg* %8176, i32 0, i32 0
  %RBP.i124 = bitcast %union.anon* %8177 to i64*
  %8178 = load i64, i64* %RBP.i124
  %8179 = sub i64 %8178, 164
  %8180 = load i32, i32* %EAX.i123
  %8181 = zext i32 %8180 to i64
  %8182 = load i64, i64* %PC.i122
  %8183 = add i64 %8182, 6
  store i64 %8183, i64* %PC.i122
  %8184 = inttoptr i64 %8179 to i32*
  store i32 %8180, i32* %8184
  store %struct.Memory* %loadMem_43b9e3, %struct.Memory** %MEMORY
  %loadMem_43b9e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8186 = getelementptr inbounds %struct.GPR, %struct.GPR* %8185, i32 0, i32 33
  %8187 = getelementptr inbounds %struct.Reg, %struct.Reg* %8186, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %8187 to i64*
  %8188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8189 = getelementptr inbounds %struct.GPR, %struct.GPR* %8188, i32 0, i32 19
  %8190 = getelementptr inbounds %struct.Reg, %struct.Reg* %8189, i32 0, i32 0
  %R9D.i120 = bitcast %union.anon* %8190 to i32*
  %8191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8192 = getelementptr inbounds %struct.GPR, %struct.GPR* %8191, i32 0, i32 1
  %8193 = getelementptr inbounds %struct.Reg, %struct.Reg* %8192, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %8193 to i64*
  %8194 = load i32, i32* %R9D.i120
  %8195 = zext i32 %8194 to i64
  %8196 = load i64, i64* %PC.i119
  %8197 = add i64 %8196, 3
  store i64 %8197, i64* %PC.i119
  %8198 = and i64 %8195, 4294967295
  store i64 %8198, i64* %RAX.i121, align 8
  store %struct.Memory* %loadMem_43b9e9, %struct.Memory** %MEMORY
  %loadMem_43b9ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %8199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8200 = getelementptr inbounds %struct.GPR, %struct.GPR* %8199, i32 0, i32 33
  %8201 = getelementptr inbounds %struct.Reg, %struct.Reg* %8200, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %8201 to i64*
  %8202 = load i64, i64* %PC.i118
  %8203 = add i64 %8202, 1
  store i64 %8203, i64* %PC.i118
  %8204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8206 = bitcast %union.anon* %8205 to i32*
  %8207 = load i32, i32* %8206, align 8
  %8208 = sext i32 %8207 to i64
  %8209 = lshr i64 %8208, 32
  store i64 %8209, i64* %8204, align 8
  store %struct.Memory* %loadMem_43b9ec, %struct.Memory** %MEMORY
  %loadMem_43b9ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8211 = getelementptr inbounds %struct.GPR, %struct.GPR* %8210, i32 0, i32 33
  %8212 = getelementptr inbounds %struct.Reg, %struct.Reg* %8211, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %8212 to i64*
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 17
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %R8D.i113 = bitcast %union.anon* %8215 to i32*
  %8216 = load i32, i32* %R8D.i113
  %8217 = zext i32 %8216 to i64
  %8218 = load i64, i64* %PC.i112
  %8219 = add i64 %8218, 3
  store i64 %8219, i64* %PC.i112
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8221 = bitcast %union.anon* %8220 to i32*
  %8222 = load i32, i32* %8221, align 8
  %8223 = zext i32 %8222 to i64
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8225 = bitcast %union.anon* %8224 to i32*
  %8226 = load i32, i32* %8225, align 8
  %8227 = zext i32 %8226 to i64
  %8228 = shl i64 %8217, 32
  %8229 = ashr exact i64 %8228, 32
  %8230 = shl i64 %8227, 32
  %8231 = or i64 %8230, %8223
  %8232 = sdiv i64 %8231, %8229
  %8233 = shl i64 %8232, 32
  %8234 = ashr exact i64 %8233, 32
  %8235 = icmp eq i64 %8232, %8234
  br i1 %8235, label %8240, label %8236

; <label>:8236:                                   ; preds = %routine_idivl__r8d.exit135
  %8237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8238 = load i64, i64* %8237, align 8
  %8239 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8238, %struct.Memory* %loadMem_43b9ed)
  br label %routine_idivl__r8d.exit114

; <label>:8240:                                   ; preds = %routine_idivl__r8d.exit135
  %8241 = srem i64 %8231, %8229
  %8242 = getelementptr inbounds %union.anon, %union.anon* %8220, i64 0, i32 0
  %8243 = and i64 %8232, 4294967295
  store i64 %8243, i64* %8242, align 8
  %8244 = getelementptr inbounds %union.anon, %union.anon* %8224, i64 0, i32 0
  %8245 = and i64 %8241, 4294967295
  store i64 %8245, i64* %8244, align 8
  %8246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8246, align 1
  %8247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8247, align 1
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8248, align 1
  %8249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8249, align 1
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8250, align 1
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8251, align 1
  br label %routine_idivl__r8d.exit114

routine_idivl__r8d.exit114:                       ; preds = %8236, %8240
  %8252 = phi %struct.Memory* [ %8239, %8236 ], [ %loadMem_43b9ed, %8240 ]
  store %struct.Memory* %8252, %struct.Memory** %MEMORY
  %loadMem_43b9f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8254 = getelementptr inbounds %struct.GPR, %struct.GPR* %8253, i32 0, i32 33
  %8255 = getelementptr inbounds %struct.Reg, %struct.Reg* %8254, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %8255 to i64*
  %8256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8257 = getelementptr inbounds %struct.GPR, %struct.GPR* %8256, i32 0, i32 7
  %8258 = getelementptr inbounds %struct.Reg, %struct.Reg* %8257, i32 0, i32 0
  %RDX.i111 = bitcast %union.anon* %8258 to i64*
  %8259 = load i64, i64* %RDX.i111
  %8260 = load i64, i64* %PC.i110
  %8261 = add i64 %8260, 3
  store i64 %8261, i64* %PC.i110
  %8262 = trunc i64 %8259 to i32
  %8263 = sub i32 %8262, 1
  %8264 = zext i32 %8263 to i64
  store i64 %8264, i64* %RDX.i111, align 8
  %8265 = icmp ult i32 %8262, 1
  %8266 = zext i1 %8265 to i8
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8266, i8* %8267, align 1
  %8268 = and i32 %8263, 255
  %8269 = call i32 @llvm.ctpop.i32(i32 %8268)
  %8270 = trunc i32 %8269 to i8
  %8271 = and i8 %8270, 1
  %8272 = xor i8 %8271, 1
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8272, i8* %8273, align 1
  %8274 = xor i64 1, %8259
  %8275 = trunc i64 %8274 to i32
  %8276 = xor i32 %8275, %8263
  %8277 = lshr i32 %8276, 4
  %8278 = trunc i32 %8277 to i8
  %8279 = and i8 %8278, 1
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8279, i8* %8280, align 1
  %8281 = icmp eq i32 %8263, 0
  %8282 = zext i1 %8281 to i8
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8282, i8* %8283, align 1
  %8284 = lshr i32 %8263, 31
  %8285 = trunc i32 %8284 to i8
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8285, i8* %8286, align 1
  %8287 = lshr i32 %8262, 31
  %8288 = xor i32 %8284, %8287
  %8289 = add i32 %8288, %8287
  %8290 = icmp eq i32 %8289, 2
  %8291 = zext i1 %8290 to i8
  %8292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8291, i8* %8292, align 1
  store %struct.Memory* %loadMem_43b9f0, %struct.Memory** %MEMORY
  %loadMem_43b9f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8294 = getelementptr inbounds %struct.GPR, %struct.GPR* %8293, i32 0, i32 33
  %8295 = getelementptr inbounds %struct.Reg, %struct.Reg* %8294, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %8295 to i64*
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8297 = getelementptr inbounds %struct.GPR, %struct.GPR* %8296, i32 0, i32 5
  %8298 = getelementptr inbounds %struct.Reg, %struct.Reg* %8297, i32 0, i32 0
  %RCX.i108 = bitcast %union.anon* %8298 to i64*
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8300 = getelementptr inbounds %struct.GPR, %struct.GPR* %8299, i32 0, i32 15
  %8301 = getelementptr inbounds %struct.Reg, %struct.Reg* %8300, i32 0, i32 0
  %RBP.i109 = bitcast %union.anon* %8301 to i64*
  %8302 = load i64, i64* %RBP.i109
  %8303 = sub i64 %8302, 160
  %8304 = load i64, i64* %PC.i107
  %8305 = add i64 %8304, 7
  store i64 %8305, i64* %PC.i107
  %8306 = inttoptr i64 %8303 to i64*
  %8307 = load i64, i64* %8306
  store i64 %8307, i64* %RCX.i108, align 8
  store %struct.Memory* %loadMem_43b9f3, %struct.Memory** %MEMORY
  %loadMem_43b9fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8309 = getelementptr inbounds %struct.GPR, %struct.GPR* %8308, i32 0, i32 33
  %8310 = getelementptr inbounds %struct.Reg, %struct.Reg* %8309, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %8310 to i64*
  %8311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8312 = getelementptr inbounds %struct.GPR, %struct.GPR* %8311, i32 0, i32 7
  %8313 = getelementptr inbounds %struct.Reg, %struct.Reg* %8312, i32 0, i32 0
  %EDX.i105 = bitcast %union.anon* %8313 to i32*
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8315 = getelementptr inbounds %struct.GPR, %struct.GPR* %8314, i32 0, i32 15
  %8316 = getelementptr inbounds %struct.Reg, %struct.Reg* %8315, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %8316 to i64*
  %8317 = load i64, i64* %RBP.i106
  %8318 = sub i64 %8317, 168
  %8319 = load i32, i32* %EDX.i105
  %8320 = zext i32 %8319 to i64
  %8321 = load i64, i64* %PC.i104
  %8322 = add i64 %8321, 6
  store i64 %8322, i64* %PC.i104
  %8323 = inttoptr i64 %8318 to i32*
  store i32 %8319, i32* %8323
  store %struct.Memory* %loadMem_43b9fa, %struct.Memory** %MEMORY
  %loadMem_43ba00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8325 = getelementptr inbounds %struct.GPR, %struct.GPR* %8324, i32 0, i32 33
  %8326 = getelementptr inbounds %struct.Reg, %struct.Reg* %8325, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %8326 to i64*
  %8327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8328 = getelementptr inbounds %struct.GPR, %struct.GPR* %8327, i32 0, i32 5
  %8329 = getelementptr inbounds %struct.Reg, %struct.Reg* %8328, i32 0, i32 0
  %RCX.i102 = bitcast %union.anon* %8329 to i64*
  %8330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8331 = getelementptr inbounds %struct.GPR, %struct.GPR* %8330, i32 0, i32 7
  %8332 = getelementptr inbounds %struct.Reg, %struct.Reg* %8331, i32 0, i32 0
  %RDX.i103 = bitcast %union.anon* %8332 to i64*
  %8333 = load i64, i64* %RCX.i102
  %8334 = load i64, i64* %PC.i101
  %8335 = add i64 %8334, 3
  store i64 %8335, i64* %PC.i101
  store i64 %8333, i64* %RDX.i103, align 8
  store %struct.Memory* %loadMem_43ba00, %struct.Memory** %MEMORY
  %loadMem_43ba03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8337 = getelementptr inbounds %struct.GPR, %struct.GPR* %8336, i32 0, i32 33
  %8338 = getelementptr inbounds %struct.Reg, %struct.Reg* %8337, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %8338 to i64*
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8340 = getelementptr inbounds %struct.GPR, %struct.GPR* %8339, i32 0, i32 5
  %8341 = getelementptr inbounds %struct.Reg, %struct.Reg* %8340, i32 0, i32 0
  %RCX.i99 = bitcast %union.anon* %8341 to i64*
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8343 = getelementptr inbounds %struct.GPR, %struct.GPR* %8342, i32 0, i32 15
  %8344 = getelementptr inbounds %struct.Reg, %struct.Reg* %8343, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %8344 to i64*
  %8345 = load i64, i64* %RBP.i100
  %8346 = sub i64 %8345, 164
  %8347 = load i64, i64* %PC.i98
  %8348 = add i64 %8347, 6
  store i64 %8348, i64* %PC.i98
  %8349 = inttoptr i64 %8346 to i32*
  %8350 = load i32, i32* %8349
  %8351 = zext i32 %8350 to i64
  store i64 %8351, i64* %RCX.i99, align 8
  store %struct.Memory* %loadMem_43ba03, %struct.Memory** %MEMORY
  %loadMem_43ba09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8353 = getelementptr inbounds %struct.GPR, %struct.GPR* %8352, i32 0, i32 33
  %8354 = getelementptr inbounds %struct.Reg, %struct.Reg* %8353, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %8354 to i64*
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8356 = getelementptr inbounds %struct.GPR, %struct.GPR* %8355, i32 0, i32 17
  %8357 = getelementptr inbounds %struct.Reg, %struct.Reg* %8356, i32 0, i32 0
  %R8D.i96 = bitcast %union.anon* %8357 to i32*
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8359 = getelementptr inbounds %struct.GPR, %struct.GPR* %8358, i32 0, i32 15
  %8360 = getelementptr inbounds %struct.Reg, %struct.Reg* %8359, i32 0, i32 0
  %RBP.i97 = bitcast %union.anon* %8360 to i64*
  %8361 = bitcast i32* %R8D.i96 to i64*
  %8362 = load i64, i64* %RBP.i97
  %8363 = sub i64 %8362, 168
  %8364 = load i64, i64* %PC.i95
  %8365 = add i64 %8364, 7
  store i64 %8365, i64* %PC.i95
  %8366 = inttoptr i64 %8363 to i32*
  %8367 = load i32, i32* %8366
  %8368 = zext i32 %8367 to i64
  store i64 %8368, i64* %8361, align 8
  store %struct.Memory* %loadMem_43ba09, %struct.Memory** %MEMORY
  %loadMem1_43ba10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8370 = getelementptr inbounds %struct.GPR, %struct.GPR* %8369, i32 0, i32 33
  %8371 = getelementptr inbounds %struct.Reg, %struct.Reg* %8370, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %8371 to i64*
  %8372 = load i64, i64* %PC.i94
  %8373 = add i64 %8372, 91776
  %8374 = load i64, i64* %PC.i94
  %8375 = add i64 %8374, 5
  %8376 = load i64, i64* %PC.i94
  %8377 = add i64 %8376, 5
  store i64 %8377, i64* %PC.i94
  %8378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8379 = load i64, i64* %8378, align 8
  %8380 = add i64 %8379, -8
  %8381 = inttoptr i64 %8380 to i64*
  store i64 %8375, i64* %8381
  store i64 %8380, i64* %8378, align 8
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8373, i64* %8382, align 8
  store %struct.Memory* %loadMem1_43ba10, %struct.Memory** %MEMORY
  %loadMem2_43ba10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ba10 = load i64, i64* %3
  %call2_43ba10 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_43ba10, %struct.Memory* %loadMem2_43ba10)
  store %struct.Memory* %call2_43ba10, %struct.Memory** %MEMORY
  br label %block_.L_43ba15

block_.L_43ba15:                                  ; preds = %routine_idivl__r8d.exit114, %block_43b994
  %loadMem_43ba15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8384 = getelementptr inbounds %struct.GPR, %struct.GPR* %8383, i32 0, i32 33
  %8385 = getelementptr inbounds %struct.Reg, %struct.Reg* %8384, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %8385 to i64*
  %8386 = load i64, i64* %PC.i93
  %8387 = add i64 %8386, 5
  %8388 = load i64, i64* %PC.i93
  %8389 = add i64 %8388, 5
  store i64 %8389, i64* %PC.i93
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8387, i64* %8390, align 8
  store %struct.Memory* %loadMem_43ba15, %struct.Memory** %MEMORY
  br label %block_.L_43ba1a

block_.L_43ba1a:                                  ; preds = %block_.L_43ba15, %block_43b95f, %block_.L_43b954
  %loadMem_43ba1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8392 = getelementptr inbounds %struct.GPR, %struct.GPR* %8391, i32 0, i32 33
  %8393 = getelementptr inbounds %struct.Reg, %struct.Reg* %8392, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %8393 to i64*
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8395 = getelementptr inbounds %struct.GPR, %struct.GPR* %8394, i32 0, i32 15
  %8396 = getelementptr inbounds %struct.Reg, %struct.Reg* %8395, i32 0, i32 0
  %RBP.i92 = bitcast %union.anon* %8396 to i64*
  %8397 = load i64, i64* %RBP.i92
  %8398 = sub i64 %8397, 32
  %8399 = load i64, i64* %PC.i91
  %8400 = add i64 %8399, 5
  store i64 %8400, i64* %PC.i91
  %8401 = inttoptr i64 %8398 to i64*
  %8402 = load i64, i64* %8401
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8403, align 1
  %8404 = trunc i64 %8402 to i32
  %8405 = and i32 %8404, 255
  %8406 = call i32 @llvm.ctpop.i32(i32 %8405)
  %8407 = trunc i32 %8406 to i8
  %8408 = and i8 %8407, 1
  %8409 = xor i8 %8408, 1
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8409, i8* %8410, align 1
  %8411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8411, align 1
  %8412 = icmp eq i64 %8402, 0
  %8413 = zext i1 %8412 to i8
  %8414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8413, i8* %8414, align 1
  %8415 = lshr i64 %8402, 63
  %8416 = trunc i64 %8415 to i8
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8416, i8* %8417, align 1
  %8418 = lshr i64 %8402, 63
  %8419 = xor i64 %8415, %8418
  %8420 = add i64 %8419, %8418
  %8421 = icmp eq i64 %8420, 2
  %8422 = zext i1 %8421 to i8
  %8423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8422, i8* %8423, align 1
  store %struct.Memory* %loadMem_43ba1a, %struct.Memory** %MEMORY
  %loadMem_43ba1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8425 = getelementptr inbounds %struct.GPR, %struct.GPR* %8424, i32 0, i32 33
  %8426 = getelementptr inbounds %struct.Reg, %struct.Reg* %8425, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %8426 to i64*
  %8427 = load i64, i64* %PC.i90
  %8428 = add i64 %8427, 193
  %8429 = load i64, i64* %PC.i90
  %8430 = add i64 %8429, 6
  %8431 = load i64, i64* %PC.i90
  %8432 = add i64 %8431, 6
  store i64 %8432, i64* %PC.i90
  %8433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8434 = load i8, i8* %8433, align 1
  store i8 %8434, i8* %BRANCH_TAKEN, align 1
  %8435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8436 = icmp ne i8 %8434, 0
  %8437 = select i1 %8436, i64 %8428, i64 %8430
  store i64 %8437, i64* %8435, align 8
  store %struct.Memory* %loadMem_43ba1f, %struct.Memory** %MEMORY
  %loadBr_43ba1f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ba1f = icmp eq i8 %loadBr_43ba1f, 1
  br i1 %cmpBr_43ba1f, label %block_.L_43bae0, label %block_43ba25

block_43ba25:                                     ; preds = %block_.L_43ba1a
  %loadMem_43ba25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8439 = getelementptr inbounds %struct.GPR, %struct.GPR* %8438, i32 0, i32 33
  %8440 = getelementptr inbounds %struct.Reg, %struct.Reg* %8439, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %8440 to i64*
  %8441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8442 = getelementptr inbounds %struct.GPR, %struct.GPR* %8441, i32 0, i32 1
  %8443 = getelementptr inbounds %struct.Reg, %struct.Reg* %8442, i32 0, i32 0
  %RAX.i88 = bitcast %union.anon* %8443 to i64*
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8445 = getelementptr inbounds %struct.GPR, %struct.GPR* %8444, i32 0, i32 15
  %8446 = getelementptr inbounds %struct.Reg, %struct.Reg* %8445, i32 0, i32 0
  %RBP.i89 = bitcast %union.anon* %8446 to i64*
  %8447 = load i64, i64* %RBP.i89
  %8448 = sub i64 %8447, 32
  %8449 = load i64, i64* %PC.i87
  %8450 = add i64 %8449, 4
  store i64 %8450, i64* %PC.i87
  %8451 = inttoptr i64 %8448 to i64*
  %8452 = load i64, i64* %8451
  store i64 %8452, i64* %RAX.i88, align 8
  store %struct.Memory* %loadMem_43ba25, %struct.Memory** %MEMORY
  %loadMem_43ba29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8454 = getelementptr inbounds %struct.GPR, %struct.GPR* %8453, i32 0, i32 33
  %8455 = getelementptr inbounds %struct.Reg, %struct.Reg* %8454, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %8455 to i64*
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8457 = getelementptr inbounds %struct.GPR, %struct.GPR* %8456, i32 0, i32 1
  %8458 = getelementptr inbounds %struct.Reg, %struct.Reg* %8457, i32 0, i32 0
  %RAX.i86 = bitcast %union.anon* %8458 to i64*
  %8459 = load i64, i64* %RAX.i86
  %8460 = load i64, i64* %PC.i85
  %8461 = add i64 %8460, 3
  store i64 %8461, i64* %PC.i85
  %8462 = inttoptr i64 %8459 to i32*
  %8463 = load i32, i32* %8462
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8464, align 1
  %8465 = and i32 %8463, 255
  %8466 = call i32 @llvm.ctpop.i32(i32 %8465)
  %8467 = trunc i32 %8466 to i8
  %8468 = and i8 %8467, 1
  %8469 = xor i8 %8468, 1
  %8470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8469, i8* %8470, align 1
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8471, align 1
  %8472 = icmp eq i32 %8463, 0
  %8473 = zext i1 %8472 to i8
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8473, i8* %8474, align 1
  %8475 = lshr i32 %8463, 31
  %8476 = trunc i32 %8475 to i8
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8476, i8* %8477, align 1
  %8478 = lshr i32 %8463, 31
  %8479 = xor i32 %8475, %8478
  %8480 = add i32 %8479, %8478
  %8481 = icmp eq i32 %8480, 2
  %8482 = zext i1 %8481 to i8
  %8483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8482, i8* %8483, align 1
  store %struct.Memory* %loadMem_43ba29, %struct.Memory** %MEMORY
  %loadMem_43ba2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8485 = getelementptr inbounds %struct.GPR, %struct.GPR* %8484, i32 0, i32 33
  %8486 = getelementptr inbounds %struct.Reg, %struct.Reg* %8485, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %8486 to i64*
  %8487 = load i64, i64* %PC.i84
  %8488 = add i64 %8487, 180
  %8489 = load i64, i64* %PC.i84
  %8490 = add i64 %8489, 6
  %8491 = load i64, i64* %PC.i84
  %8492 = add i64 %8491, 6
  store i64 %8492, i64* %PC.i84
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8494 = load i8, i8* %8493, align 1
  store i8 %8494, i8* %BRANCH_TAKEN, align 1
  %8495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8496 = icmp ne i8 %8494, 0
  %8497 = select i1 %8496, i64 %8488, i64 %8490
  store i64 %8497, i64* %8495, align 8
  store %struct.Memory* %loadMem_43ba2c, %struct.Memory** %MEMORY
  %loadBr_43ba2c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ba2c = icmp eq i8 %loadBr_43ba2c, 1
  br i1 %cmpBr_43ba2c, label %block_.L_43bae0, label %block_43ba32

block_43ba32:                                     ; preds = %block_43ba25
  %loadMem_43ba32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8499 = getelementptr inbounds %struct.GPR, %struct.GPR* %8498, i32 0, i32 33
  %8500 = getelementptr inbounds %struct.Reg, %struct.Reg* %8499, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %8500 to i64*
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8502 = getelementptr inbounds %struct.GPR, %struct.GPR* %8501, i32 0, i32 1
  %8503 = getelementptr inbounds %struct.Reg, %struct.Reg* %8502, i32 0, i32 0
  %RAX.i82 = bitcast %union.anon* %8503 to i64*
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8505 = getelementptr inbounds %struct.GPR, %struct.GPR* %8504, i32 0, i32 15
  %8506 = getelementptr inbounds %struct.Reg, %struct.Reg* %8505, i32 0, i32 0
  %RBP.i83 = bitcast %union.anon* %8506 to i64*
  %8507 = load i64, i64* %RBP.i83
  %8508 = sub i64 %8507, 32
  %8509 = load i64, i64* %PC.i81
  %8510 = add i64 %8509, 4
  store i64 %8510, i64* %PC.i81
  %8511 = inttoptr i64 %8508 to i64*
  %8512 = load i64, i64* %8511
  store i64 %8512, i64* %RAX.i82, align 8
  store %struct.Memory* %loadMem_43ba32, %struct.Memory** %MEMORY
  %loadMem_43ba36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8514 = getelementptr inbounds %struct.GPR, %struct.GPR* %8513, i32 0, i32 33
  %8515 = getelementptr inbounds %struct.Reg, %struct.Reg* %8514, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %8515 to i64*
  %8516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8517 = getelementptr inbounds %struct.GPR, %struct.GPR* %8516, i32 0, i32 1
  %8518 = getelementptr inbounds %struct.Reg, %struct.Reg* %8517, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %8518 to i64*
  %8519 = load i64, i64* %RAX.i80
  %8520 = load i64, i64* %PC.i79
  %8521 = add i64 %8520, 6
  store i64 %8521, i64* %PC.i79
  %8522 = inttoptr i64 %8519 to i32*
  %8523 = load i32, i32* %8522
  %8524 = sub i32 %8523, 421
  %8525 = icmp ult i32 %8523, 421
  %8526 = zext i1 %8525 to i8
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8526, i8* %8527, align 1
  %8528 = and i32 %8524, 255
  %8529 = call i32 @llvm.ctpop.i32(i32 %8528)
  %8530 = trunc i32 %8529 to i8
  %8531 = and i8 %8530, 1
  %8532 = xor i8 %8531, 1
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8532, i8* %8533, align 1
  %8534 = xor i32 %8523, 421
  %8535 = xor i32 %8534, %8524
  %8536 = lshr i32 %8535, 4
  %8537 = trunc i32 %8536 to i8
  %8538 = and i8 %8537, 1
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8538, i8* %8539, align 1
  %8540 = icmp eq i32 %8524, 0
  %8541 = zext i1 %8540 to i8
  %8542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8541, i8* %8542, align 1
  %8543 = lshr i32 %8524, 31
  %8544 = trunc i32 %8543 to i8
  %8545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8544, i8* %8545, align 1
  %8546 = lshr i32 %8523, 31
  %8547 = xor i32 %8543, %8546
  %8548 = add i32 %8547, %8546
  %8549 = icmp eq i32 %8548, 2
  %8550 = zext i1 %8549 to i8
  %8551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8550, i8* %8551, align 1
  store %struct.Memory* %loadMem_43ba36, %struct.Memory** %MEMORY
  %loadMem_43ba3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8553 = getelementptr inbounds %struct.GPR, %struct.GPR* %8552, i32 0, i32 33
  %8554 = getelementptr inbounds %struct.Reg, %struct.Reg* %8553, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %8554 to i64*
  %8555 = load i64, i64* %PC.i78
  %8556 = add i64 %8555, 35
  %8557 = load i64, i64* %PC.i78
  %8558 = add i64 %8557, 6
  %8559 = load i64, i64* %PC.i78
  %8560 = add i64 %8559, 6
  store i64 %8560, i64* %PC.i78
  %8561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8562 = load i8, i8* %8561, align 1
  %8563 = icmp eq i8 %8562, 0
  %8564 = zext i1 %8563 to i8
  store i8 %8564, i8* %BRANCH_TAKEN, align 1
  %8565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8566 = select i1 %8563, i64 %8556, i64 %8558
  store i64 %8566, i64* %8565, align 8
  store %struct.Memory* %loadMem_43ba3c, %struct.Memory** %MEMORY
  %loadBr_43ba3c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ba3c = icmp eq i8 %loadBr_43ba3c, 1
  br i1 %cmpBr_43ba3c, label %block_.L_43ba5f, label %block_43ba42

block_43ba42:                                     ; preds = %block_43ba32
  %loadMem_43ba42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8568 = getelementptr inbounds %struct.GPR, %struct.GPR* %8567, i32 0, i32 33
  %8569 = getelementptr inbounds %struct.Reg, %struct.Reg* %8568, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %8569 to i64*
  %8570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8571 = getelementptr inbounds %struct.GPR, %struct.GPR* %8570, i32 0, i32 1
  %8572 = getelementptr inbounds %struct.Reg, %struct.Reg* %8571, i32 0, i32 0
  %RAX.i76 = bitcast %union.anon* %8572 to i64*
  %8573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8574 = getelementptr inbounds %struct.GPR, %struct.GPR* %8573, i32 0, i32 15
  %8575 = getelementptr inbounds %struct.Reg, %struct.Reg* %8574, i32 0, i32 0
  %RBP.i77 = bitcast %union.anon* %8575 to i64*
  %8576 = load i64, i64* %RBP.i77
  %8577 = sub i64 %8576, 32
  %8578 = load i64, i64* %PC.i75
  %8579 = add i64 %8578, 4
  store i64 %8579, i64* %PC.i75
  %8580 = inttoptr i64 %8577 to i64*
  %8581 = load i64, i64* %8580
  store i64 %8581, i64* %RAX.i76, align 8
  store %struct.Memory* %loadMem_43ba42, %struct.Memory** %MEMORY
  %loadMem_43ba46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8583 = getelementptr inbounds %struct.GPR, %struct.GPR* %8582, i32 0, i32 33
  %8584 = getelementptr inbounds %struct.Reg, %struct.Reg* %8583, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %8584 to i64*
  %8585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8586 = getelementptr inbounds %struct.GPR, %struct.GPR* %8585, i32 0, i32 1
  %8587 = getelementptr inbounds %struct.Reg, %struct.Reg* %8586, i32 0, i32 0
  %RAX.i74 = bitcast %union.anon* %8587 to i64*
  %8588 = load i64, i64* %RAX.i74
  %8589 = load i64, i64* %PC.i73
  %8590 = add i64 %8589, 3
  store i64 %8590, i64* %PC.i73
  %8591 = inttoptr i64 %8588 to i32*
  %8592 = load i32, i32* %8591
  %8593 = sext i32 %8592 to i64
  store i64 %8593, i64* %RAX.i74, align 8
  store %struct.Memory* %loadMem_43ba46, %struct.Memory** %MEMORY
  %loadMem_43ba49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8595 = getelementptr inbounds %struct.GPR, %struct.GPR* %8594, i32 0, i32 33
  %8596 = getelementptr inbounds %struct.Reg, %struct.Reg* %8595, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %8596 to i64*
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8598 = getelementptr inbounds %struct.GPR, %struct.GPR* %8597, i32 0, i32 1
  %8599 = getelementptr inbounds %struct.Reg, %struct.Reg* %8598, i32 0, i32 0
  %RAX.i71 = bitcast %union.anon* %8599 to i64*
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8601 = getelementptr inbounds %struct.GPR, %struct.GPR* %8600, i32 0, i32 5
  %8602 = getelementptr inbounds %struct.Reg, %struct.Reg* %8601, i32 0, i32 0
  %RCX.i72 = bitcast %union.anon* %8602 to i64*
  %8603 = load i64, i64* %RAX.i71
  %8604 = add i64 %8603, 12099168
  %8605 = load i64, i64* %PC.i70
  %8606 = add i64 %8605, 8
  store i64 %8606, i64* %PC.i70
  %8607 = inttoptr i64 %8604 to i8*
  %8608 = load i8, i8* %8607
  %8609 = zext i8 %8608 to i64
  store i64 %8609, i64* %RCX.i72, align 8
  store %struct.Memory* %loadMem_43ba49, %struct.Memory** %MEMORY
  %loadMem_43ba51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8611 = getelementptr inbounds %struct.GPR, %struct.GPR* %8610, i32 0, i32 33
  %8612 = getelementptr inbounds %struct.Reg, %struct.Reg* %8611, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %8612 to i64*
  %8613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8614 = getelementptr inbounds %struct.GPR, %struct.GPR* %8613, i32 0, i32 5
  %8615 = getelementptr inbounds %struct.Reg, %struct.Reg* %8614, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %8615 to i32*
  %8616 = load i32, i32* %ECX.i
  %8617 = zext i32 %8616 to i64
  %8618 = load i64, i64* %PC.i69
  %8619 = add i64 %8618, 3
  store i64 %8619, i64* %PC.i69
  %8620 = sub i32 %8616, 3
  %8621 = icmp ult i32 %8616, 3
  %8622 = zext i1 %8621 to i8
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8622, i8* %8623, align 1
  %8624 = and i32 %8620, 255
  %8625 = call i32 @llvm.ctpop.i32(i32 %8624)
  %8626 = trunc i32 %8625 to i8
  %8627 = and i8 %8626, 1
  %8628 = xor i8 %8627, 1
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8628, i8* %8629, align 1
  %8630 = xor i64 3, %8617
  %8631 = trunc i64 %8630 to i32
  %8632 = xor i32 %8631, %8620
  %8633 = lshr i32 %8632, 4
  %8634 = trunc i32 %8633 to i8
  %8635 = and i8 %8634, 1
  %8636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8635, i8* %8636, align 1
  %8637 = icmp eq i32 %8620, 0
  %8638 = zext i1 %8637 to i8
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8638, i8* %8639, align 1
  %8640 = lshr i32 %8620, 31
  %8641 = trunc i32 %8640 to i8
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8641, i8* %8642, align 1
  %8643 = lshr i32 %8616, 31
  %8644 = xor i32 %8640, %8643
  %8645 = add i32 %8644, %8643
  %8646 = icmp eq i32 %8645, 2
  %8647 = zext i1 %8646 to i8
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8647, i8* %8648, align 1
  store %struct.Memory* %loadMem_43ba51, %struct.Memory** %MEMORY
  %loadMem_43ba54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8650 = getelementptr inbounds %struct.GPR, %struct.GPR* %8649, i32 0, i32 33
  %8651 = getelementptr inbounds %struct.Reg, %struct.Reg* %8650, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %8651 to i64*
  %8652 = load i64, i64* %PC.i68
  %8653 = add i64 %8652, 11
  %8654 = load i64, i64* %PC.i68
  %8655 = add i64 %8654, 6
  %8656 = load i64, i64* %PC.i68
  %8657 = add i64 %8656, 6
  store i64 %8657, i64* %PC.i68
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8659 = load i8, i8* %8658, align 1
  store i8 %8659, i8* %BRANCH_TAKEN, align 1
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8661 = icmp ne i8 %8659, 0
  %8662 = select i1 %8661, i64 %8653, i64 %8655
  store i64 %8662, i64* %8660, align 8
  store %struct.Memory* %loadMem_43ba54, %struct.Memory** %MEMORY
  %loadBr_43ba54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ba54 = icmp eq i8 %loadBr_43ba54, 1
  br i1 %cmpBr_43ba54, label %block_.L_43ba5f, label %block_43ba5a

block_43ba5a:                                     ; preds = %block_43ba42
  %loadMem_43ba5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8664 = getelementptr inbounds %struct.GPR, %struct.GPR* %8663, i32 0, i32 33
  %8665 = getelementptr inbounds %struct.Reg, %struct.Reg* %8664, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %8665 to i64*
  %8666 = load i64, i64* %PC.i67
  %8667 = add i64 %8666, 129
  %8668 = load i64, i64* %PC.i67
  %8669 = add i64 %8668, 5
  store i64 %8669, i64* %PC.i67
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8667, i64* %8670, align 8
  store %struct.Memory* %loadMem_43ba5a, %struct.Memory** %MEMORY
  br label %block_.L_43badb

block_.L_43ba5f:                                  ; preds = %block_43ba42, %block_43ba32
  %loadMem_43ba5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8672 = getelementptr inbounds %struct.GPR, %struct.GPR* %8671, i32 0, i32 33
  %8673 = getelementptr inbounds %struct.Reg, %struct.Reg* %8672, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %8673 to i64*
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8675 = getelementptr inbounds %struct.GPR, %struct.GPR* %8674, i32 0, i32 11
  %8676 = getelementptr inbounds %struct.Reg, %struct.Reg* %8675, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %8676 to i64*
  %8677 = load i64, i64* %PC.i66
  %8678 = add i64 %8677, 10
  store i64 %8678, i64* %PC.i66
  store i64 ptrtoint (%G__0x57d7b6_type* @G__0x57d7b6 to i64), i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_43ba5f, %struct.Memory** %MEMORY
  %loadMem_43ba69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8680 = getelementptr inbounds %struct.GPR, %struct.GPR* %8679, i32 0, i32 33
  %8681 = getelementptr inbounds %struct.Reg, %struct.Reg* %8680, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %8681 to i64*
  %8682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8683 = getelementptr inbounds %struct.GPR, %struct.GPR* %8682, i32 0, i32 9
  %8684 = getelementptr inbounds %struct.Reg, %struct.Reg* %8683, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %8684 to i64*
  %8685 = load i64, i64* %PC.i65
  %8686 = add i64 %8685, 5
  store i64 %8686, i64* %PC.i65
  store i64 956, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_43ba69, %struct.Memory** %MEMORY
  %loadMem_43ba6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8688 = getelementptr inbounds %struct.GPR, %struct.GPR* %8687, i32 0, i32 33
  %8689 = getelementptr inbounds %struct.Reg, %struct.Reg* %8688, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %8689 to i64*
  %8690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8691 = getelementptr inbounds %struct.GPR, %struct.GPR* %8690, i32 0, i32 7
  %8692 = getelementptr inbounds %struct.Reg, %struct.Reg* %8691, i32 0, i32 0
  %RDX.i64 = bitcast %union.anon* %8692 to i64*
  %8693 = load i64, i64* %PC.i63
  %8694 = add i64 %8693, 10
  store i64 %8694, i64* %PC.i63
  store i64 ptrtoint (%G__0x57db17_type* @G__0x57db17 to i64), i64* %RDX.i64, align 8
  store %struct.Memory* %loadMem_43ba6e, %struct.Memory** %MEMORY
  %loadMem_43ba78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8696 = getelementptr inbounds %struct.GPR, %struct.GPR* %8695, i32 0, i32 33
  %8697 = getelementptr inbounds %struct.Reg, %struct.Reg* %8696, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %8697 to i64*
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8699 = getelementptr inbounds %struct.GPR, %struct.GPR* %8698, i32 0, i32 1
  %8700 = getelementptr inbounds %struct.Reg, %struct.Reg* %8699, i32 0, i32 0
  %RAX.i62 = bitcast %union.anon* %8700 to i64*
  %8701 = load i64, i64* %PC.i61
  %8702 = add i64 %8701, 5
  store i64 %8702, i64* %PC.i61
  store i64 20, i64* %RAX.i62, align 8
  store %struct.Memory* %loadMem_43ba78, %struct.Memory** %MEMORY
  %loadMem_43ba7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8704 = getelementptr inbounds %struct.GPR, %struct.GPR* %8703, i32 0, i32 33
  %8705 = getelementptr inbounds %struct.Reg, %struct.Reg* %8704, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %8705 to i64*
  %8706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8707 = getelementptr inbounds %struct.GPR, %struct.GPR* %8706, i32 0, i32 5
  %8708 = getelementptr inbounds %struct.Reg, %struct.Reg* %8707, i32 0, i32 0
  %RCX.i59 = bitcast %union.anon* %8708 to i64*
  %8709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8710 = getelementptr inbounds %struct.GPR, %struct.GPR* %8709, i32 0, i32 15
  %8711 = getelementptr inbounds %struct.Reg, %struct.Reg* %8710, i32 0, i32 0
  %RBP.i60 = bitcast %union.anon* %8711 to i64*
  %8712 = load i64, i64* %RBP.i60
  %8713 = sub i64 %8712, 32
  %8714 = load i64, i64* %PC.i58
  %8715 = add i64 %8714, 4
  store i64 %8715, i64* %PC.i58
  %8716 = inttoptr i64 %8713 to i64*
  %8717 = load i64, i64* %8716
  store i64 %8717, i64* %RCX.i59, align 8
  store %struct.Memory* %loadMem_43ba7d, %struct.Memory** %MEMORY
  %loadMem_43ba81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8719 = getelementptr inbounds %struct.GPR, %struct.GPR* %8718, i32 0, i32 33
  %8720 = getelementptr inbounds %struct.Reg, %struct.Reg* %8719, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %8720 to i64*
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8722 = getelementptr inbounds %struct.GPR, %struct.GPR* %8721, i32 0, i32 17
  %8723 = getelementptr inbounds %struct.Reg, %struct.Reg* %8722, i32 0, i32 0
  %R8D.i56 = bitcast %union.anon* %8723 to i32*
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8725 = getelementptr inbounds %struct.GPR, %struct.GPR* %8724, i32 0, i32 5
  %8726 = getelementptr inbounds %struct.Reg, %struct.Reg* %8725, i32 0, i32 0
  %RCX.i57 = bitcast %union.anon* %8726 to i64*
  %8727 = bitcast i32* %R8D.i56 to i64*
  %8728 = load i64, i64* %RCX.i57
  %8729 = load i64, i64* %PC.i55
  %8730 = add i64 %8729, 3
  store i64 %8730, i64* %PC.i55
  %8731 = inttoptr i64 %8728 to i32*
  %8732 = load i32, i32* %8731
  %8733 = zext i32 %8732 to i64
  store i64 %8733, i64* %8727, align 8
  store %struct.Memory* %loadMem_43ba81, %struct.Memory** %MEMORY
  %loadMem_43ba84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8735 = getelementptr inbounds %struct.GPR, %struct.GPR* %8734, i32 0, i32 33
  %8736 = getelementptr inbounds %struct.Reg, %struct.Reg* %8735, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %8736 to i64*
  %8737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8738 = getelementptr inbounds %struct.GPR, %struct.GPR* %8737, i32 0, i32 1
  %8739 = getelementptr inbounds %struct.Reg, %struct.Reg* %8738, i32 0, i32 0
  %EAX.i53 = bitcast %union.anon* %8739 to i32*
  %8740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8741 = getelementptr inbounds %struct.GPR, %struct.GPR* %8740, i32 0, i32 15
  %8742 = getelementptr inbounds %struct.Reg, %struct.Reg* %8741, i32 0, i32 0
  %RBP.i54 = bitcast %union.anon* %8742 to i64*
  %8743 = load i64, i64* %RBP.i54
  %8744 = sub i64 %8743, 172
  %8745 = load i32, i32* %EAX.i53
  %8746 = zext i32 %8745 to i64
  %8747 = load i64, i64* %PC.i52
  %8748 = add i64 %8747, 6
  store i64 %8748, i64* %PC.i52
  %8749 = inttoptr i64 %8744 to i32*
  store i32 %8745, i32* %8749
  store %struct.Memory* %loadMem_43ba84, %struct.Memory** %MEMORY
  %loadMem_43ba8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8751 = getelementptr inbounds %struct.GPR, %struct.GPR* %8750, i32 0, i32 33
  %8752 = getelementptr inbounds %struct.Reg, %struct.Reg* %8751, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %8752 to i64*
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8754 = getelementptr inbounds %struct.GPR, %struct.GPR* %8753, i32 0, i32 17
  %8755 = getelementptr inbounds %struct.Reg, %struct.Reg* %8754, i32 0, i32 0
  %R8D.i50 = bitcast %union.anon* %8755 to i32*
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8757 = getelementptr inbounds %struct.GPR, %struct.GPR* %8756, i32 0, i32 1
  %8758 = getelementptr inbounds %struct.Reg, %struct.Reg* %8757, i32 0, i32 0
  %RAX.i51 = bitcast %union.anon* %8758 to i64*
  %8759 = load i32, i32* %R8D.i50
  %8760 = zext i32 %8759 to i64
  %8761 = load i64, i64* %PC.i49
  %8762 = add i64 %8761, 3
  store i64 %8762, i64* %PC.i49
  %8763 = and i64 %8760, 4294967295
  store i64 %8763, i64* %RAX.i51, align 8
  store %struct.Memory* %loadMem_43ba8a, %struct.Memory** %MEMORY
  %loadMem_43ba8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8765 = getelementptr inbounds %struct.GPR, %struct.GPR* %8764, i32 0, i32 33
  %8766 = getelementptr inbounds %struct.Reg, %struct.Reg* %8765, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %8766 to i64*
  %8767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8768 = getelementptr inbounds %struct.GPR, %struct.GPR* %8767, i32 0, i32 7
  %8769 = getelementptr inbounds %struct.Reg, %struct.Reg* %8768, i32 0, i32 0
  %RDX.i47 = bitcast %union.anon* %8769 to i64*
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8771 = getelementptr inbounds %struct.GPR, %struct.GPR* %8770, i32 0, i32 15
  %8772 = getelementptr inbounds %struct.Reg, %struct.Reg* %8771, i32 0, i32 0
  %RBP.i48 = bitcast %union.anon* %8772 to i64*
  %8773 = load i64, i64* %RBP.i48
  %8774 = sub i64 %8773, 184
  %8775 = load i64, i64* %RDX.i47
  %8776 = load i64, i64* %PC.i46
  %8777 = add i64 %8776, 7
  store i64 %8777, i64* %PC.i46
  %8778 = inttoptr i64 %8774 to i64*
  store i64 %8775, i64* %8778
  store %struct.Memory* %loadMem_43ba8d, %struct.Memory** %MEMORY
  %loadMem_43ba94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8780 = getelementptr inbounds %struct.GPR, %struct.GPR* %8779, i32 0, i32 33
  %8781 = getelementptr inbounds %struct.Reg, %struct.Reg* %8780, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %8781 to i64*
  %8782 = load i64, i64* %PC.i45
  %8783 = add i64 %8782, 1
  store i64 %8783, i64* %PC.i45
  %8784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8786 = bitcast %union.anon* %8785 to i32*
  %8787 = load i32, i32* %8786, align 8
  %8788 = sext i32 %8787 to i64
  %8789 = lshr i64 %8788, 32
  store i64 %8789, i64* %8784, align 8
  store %struct.Memory* %loadMem_43ba94, %struct.Memory** %MEMORY
  %loadMem_43ba95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8791 = getelementptr inbounds %struct.GPR, %struct.GPR* %8790, i32 0, i32 33
  %8792 = getelementptr inbounds %struct.Reg, %struct.Reg* %8791, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %8792 to i64*
  %8793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8794 = getelementptr inbounds %struct.GPR, %struct.GPR* %8793, i32 0, i32 17
  %8795 = getelementptr inbounds %struct.Reg, %struct.Reg* %8794, i32 0, i32 0
  %R8D.i43 = bitcast %union.anon* %8795 to i32*
  %8796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8797 = getelementptr inbounds %struct.GPR, %struct.GPR* %8796, i32 0, i32 15
  %8798 = getelementptr inbounds %struct.Reg, %struct.Reg* %8797, i32 0, i32 0
  %RBP.i44 = bitcast %union.anon* %8798 to i64*
  %8799 = bitcast i32* %R8D.i43 to i64*
  %8800 = load i64, i64* %RBP.i44
  %8801 = sub i64 %8800, 172
  %8802 = load i64, i64* %PC.i42
  %8803 = add i64 %8802, 7
  store i64 %8803, i64* %PC.i42
  %8804 = inttoptr i64 %8801 to i32*
  %8805 = load i32, i32* %8804
  %8806 = zext i32 %8805 to i64
  store i64 %8806, i64* %8799, align 8
  store %struct.Memory* %loadMem_43ba95, %struct.Memory** %MEMORY
  %loadMem_43ba9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8808 = getelementptr inbounds %struct.GPR, %struct.GPR* %8807, i32 0, i32 33
  %8809 = getelementptr inbounds %struct.Reg, %struct.Reg* %8808, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %8809 to i64*
  %8810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8811 = getelementptr inbounds %struct.GPR, %struct.GPR* %8810, i32 0, i32 17
  %8812 = getelementptr inbounds %struct.Reg, %struct.Reg* %8811, i32 0, i32 0
  %R8D.i38 = bitcast %union.anon* %8812 to i32*
  %8813 = load i32, i32* %R8D.i38
  %8814 = zext i32 %8813 to i64
  %8815 = load i64, i64* %PC.i37
  %8816 = add i64 %8815, 3
  store i64 %8816, i64* %PC.i37
  %8817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8818 = bitcast %union.anon* %8817 to i32*
  %8819 = load i32, i32* %8818, align 8
  %8820 = zext i32 %8819 to i64
  %8821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8822 = bitcast %union.anon* %8821 to i32*
  %8823 = load i32, i32* %8822, align 8
  %8824 = zext i32 %8823 to i64
  %8825 = shl i64 %8814, 32
  %8826 = ashr exact i64 %8825, 32
  %8827 = shl i64 %8824, 32
  %8828 = or i64 %8827, %8820
  %8829 = sdiv i64 %8828, %8826
  %8830 = shl i64 %8829, 32
  %8831 = ashr exact i64 %8830, 32
  %8832 = icmp eq i64 %8829, %8831
  br i1 %8832, label %8837, label %8833

; <label>:8833:                                   ; preds = %block_.L_43ba5f
  %8834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8835 = load i64, i64* %8834, align 8
  %8836 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8835, %struct.Memory* %loadMem_43ba9c)
  br label %routine_idivl__r8d.exit39

; <label>:8837:                                   ; preds = %block_.L_43ba5f
  %8838 = srem i64 %8828, %8826
  %8839 = getelementptr inbounds %union.anon, %union.anon* %8817, i64 0, i32 0
  %8840 = and i64 %8829, 4294967295
  store i64 %8840, i64* %8839, align 8
  %8841 = getelementptr inbounds %union.anon, %union.anon* %8821, i64 0, i32 0
  %8842 = and i64 %8838, 4294967295
  store i64 %8842, i64* %8841, align 8
  %8843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8843, align 1
  %8844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8844, align 1
  %8845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8845, align 1
  %8846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8846, align 1
  %8847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8847, align 1
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8848, align 1
  br label %routine_idivl__r8d.exit39

routine_idivl__r8d.exit39:                        ; preds = %8833, %8837
  %8849 = phi %struct.Memory* [ %8836, %8833 ], [ %loadMem_43ba9c, %8837 ]
  store %struct.Memory* %8849, %struct.Memory** %MEMORY
  %loadMem_43ba9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8851 = getelementptr inbounds %struct.GPR, %struct.GPR* %8850, i32 0, i32 33
  %8852 = getelementptr inbounds %struct.Reg, %struct.Reg* %8851, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %8852 to i64*
  %8853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8854 = getelementptr inbounds %struct.GPR, %struct.GPR* %8853, i32 0, i32 1
  %8855 = getelementptr inbounds %struct.Reg, %struct.Reg* %8854, i32 0, i32 0
  %RAX.i36 = bitcast %union.anon* %8855 to i64*
  %8856 = load i64, i64* %RAX.i36
  %8857 = load i64, i64* %PC.i35
  %8858 = add i64 %8857, 3
  store i64 %8858, i64* %PC.i35
  %8859 = trunc i64 %8856 to i32
  %8860 = sub i32 %8859, 1
  %8861 = zext i32 %8860 to i64
  store i64 %8861, i64* %RAX.i36, align 8
  %8862 = icmp ult i32 %8859, 1
  %8863 = zext i1 %8862 to i8
  %8864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8863, i8* %8864, align 1
  %8865 = and i32 %8860, 255
  %8866 = call i32 @llvm.ctpop.i32(i32 %8865)
  %8867 = trunc i32 %8866 to i8
  %8868 = and i8 %8867, 1
  %8869 = xor i8 %8868, 1
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8869, i8* %8870, align 1
  %8871 = xor i64 1, %8856
  %8872 = trunc i64 %8871 to i32
  %8873 = xor i32 %8872, %8860
  %8874 = lshr i32 %8873, 4
  %8875 = trunc i32 %8874 to i8
  %8876 = and i8 %8875, 1
  %8877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8876, i8* %8877, align 1
  %8878 = icmp eq i32 %8860, 0
  %8879 = zext i1 %8878 to i8
  %8880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8879, i8* %8880, align 1
  %8881 = lshr i32 %8860, 31
  %8882 = trunc i32 %8881 to i8
  %8883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8882, i8* %8883, align 1
  %8884 = lshr i32 %8859, 31
  %8885 = xor i32 %8881, %8884
  %8886 = add i32 %8885, %8884
  %8887 = icmp eq i32 %8886, 2
  %8888 = zext i1 %8887 to i8
  %8889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8888, i8* %8889, align 1
  store %struct.Memory* %loadMem_43ba9f, %struct.Memory** %MEMORY
  %loadMem_43baa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8891 = getelementptr inbounds %struct.GPR, %struct.GPR* %8890, i32 0, i32 33
  %8892 = getelementptr inbounds %struct.Reg, %struct.Reg* %8891, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %8892 to i64*
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8894 = getelementptr inbounds %struct.GPR, %struct.GPR* %8893, i32 0, i32 5
  %8895 = getelementptr inbounds %struct.Reg, %struct.Reg* %8894, i32 0, i32 0
  %RCX.i33 = bitcast %union.anon* %8895 to i64*
  %8896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8897 = getelementptr inbounds %struct.GPR, %struct.GPR* %8896, i32 0, i32 15
  %8898 = getelementptr inbounds %struct.Reg, %struct.Reg* %8897, i32 0, i32 0
  %RBP.i34 = bitcast %union.anon* %8898 to i64*
  %8899 = load i64, i64* %RBP.i34
  %8900 = sub i64 %8899, 32
  %8901 = load i64, i64* %PC.i32
  %8902 = add i64 %8901, 4
  store i64 %8902, i64* %PC.i32
  %8903 = inttoptr i64 %8900 to i64*
  %8904 = load i64, i64* %8903
  store i64 %8904, i64* %RCX.i33, align 8
  store %struct.Memory* %loadMem_43baa2, %struct.Memory** %MEMORY
  %loadMem_43baa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8906 = getelementptr inbounds %struct.GPR, %struct.GPR* %8905, i32 0, i32 33
  %8907 = getelementptr inbounds %struct.Reg, %struct.Reg* %8906, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %8907 to i64*
  %8908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8909 = getelementptr inbounds %struct.GPR, %struct.GPR* %8908, i32 0, i32 19
  %8910 = getelementptr inbounds %struct.Reg, %struct.Reg* %8909, i32 0, i32 0
  %R9D.i30 = bitcast %union.anon* %8910 to i32*
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8912 = getelementptr inbounds %struct.GPR, %struct.GPR* %8911, i32 0, i32 5
  %8913 = getelementptr inbounds %struct.Reg, %struct.Reg* %8912, i32 0, i32 0
  %RCX.i31 = bitcast %union.anon* %8913 to i64*
  %8914 = bitcast i32* %R9D.i30 to i64*
  %8915 = load i64, i64* %RCX.i31
  %8916 = load i64, i64* %PC.i29
  %8917 = add i64 %8916, 3
  store i64 %8917, i64* %PC.i29
  %8918 = inttoptr i64 %8915 to i32*
  %8919 = load i32, i32* %8918
  %8920 = zext i32 %8919 to i64
  store i64 %8920, i64* %8914, align 8
  store %struct.Memory* %loadMem_43baa6, %struct.Memory** %MEMORY
  %loadMem_43baa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8922 = getelementptr inbounds %struct.GPR, %struct.GPR* %8921, i32 0, i32 33
  %8923 = getelementptr inbounds %struct.Reg, %struct.Reg* %8922, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %8923 to i64*
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8925 = getelementptr inbounds %struct.GPR, %struct.GPR* %8924, i32 0, i32 1
  %8926 = getelementptr inbounds %struct.Reg, %struct.Reg* %8925, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %8926 to i32*
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8928 = getelementptr inbounds %struct.GPR, %struct.GPR* %8927, i32 0, i32 15
  %8929 = getelementptr inbounds %struct.Reg, %struct.Reg* %8928, i32 0, i32 0
  %RBP.i28 = bitcast %union.anon* %8929 to i64*
  %8930 = load i64, i64* %RBP.i28
  %8931 = sub i64 %8930, 188
  %8932 = load i32, i32* %EAX.i
  %8933 = zext i32 %8932 to i64
  %8934 = load i64, i64* %PC.i27
  %8935 = add i64 %8934, 6
  store i64 %8935, i64* %PC.i27
  %8936 = inttoptr i64 %8931 to i32*
  store i32 %8932, i32* %8936
  store %struct.Memory* %loadMem_43baa9, %struct.Memory** %MEMORY
  %loadMem_43baaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8938 = getelementptr inbounds %struct.GPR, %struct.GPR* %8937, i32 0, i32 33
  %8939 = getelementptr inbounds %struct.Reg, %struct.Reg* %8938, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %8939 to i64*
  %8940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8941 = getelementptr inbounds %struct.GPR, %struct.GPR* %8940, i32 0, i32 19
  %8942 = getelementptr inbounds %struct.Reg, %struct.Reg* %8941, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %8942 to i32*
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8944 = getelementptr inbounds %struct.GPR, %struct.GPR* %8943, i32 0, i32 1
  %8945 = getelementptr inbounds %struct.Reg, %struct.Reg* %8944, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %8945 to i64*
  %8946 = load i32, i32* %R9D.i
  %8947 = zext i32 %8946 to i64
  %8948 = load i64, i64* %PC.i26
  %8949 = add i64 %8948, 3
  store i64 %8949, i64* %PC.i26
  %8950 = and i64 %8947, 4294967295
  store i64 %8950, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_43baaf, %struct.Memory** %MEMORY
  %loadMem_43bab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8952 = getelementptr inbounds %struct.GPR, %struct.GPR* %8951, i32 0, i32 33
  %8953 = getelementptr inbounds %struct.Reg, %struct.Reg* %8952, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %8953 to i64*
  %8954 = load i64, i64* %PC.i25
  %8955 = add i64 %8954, 1
  store i64 %8955, i64* %PC.i25
  %8956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8958 = bitcast %union.anon* %8957 to i32*
  %8959 = load i32, i32* %8958, align 8
  %8960 = sext i32 %8959 to i64
  %8961 = lshr i64 %8960, 32
  store i64 %8961, i64* %8956, align 8
  store %struct.Memory* %loadMem_43bab2, %struct.Memory** %MEMORY
  %loadMem_43bab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8963 = getelementptr inbounds %struct.GPR, %struct.GPR* %8962, i32 0, i32 33
  %8964 = getelementptr inbounds %struct.Reg, %struct.Reg* %8963, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %8964 to i64*
  %8965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8966 = getelementptr inbounds %struct.GPR, %struct.GPR* %8965, i32 0, i32 17
  %8967 = getelementptr inbounds %struct.Reg, %struct.Reg* %8966, i32 0, i32 0
  %R8D.i21 = bitcast %union.anon* %8967 to i32*
  %8968 = load i32, i32* %R8D.i21
  %8969 = zext i32 %8968 to i64
  %8970 = load i64, i64* %PC.i20
  %8971 = add i64 %8970, 3
  store i64 %8971, i64* %PC.i20
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8973 = bitcast %union.anon* %8972 to i32*
  %8974 = load i32, i32* %8973, align 8
  %8975 = zext i32 %8974 to i64
  %8976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8977 = bitcast %union.anon* %8976 to i32*
  %8978 = load i32, i32* %8977, align 8
  %8979 = zext i32 %8978 to i64
  %8980 = shl i64 %8969, 32
  %8981 = ashr exact i64 %8980, 32
  %8982 = shl i64 %8979, 32
  %8983 = or i64 %8982, %8975
  %8984 = sdiv i64 %8983, %8981
  %8985 = shl i64 %8984, 32
  %8986 = ashr exact i64 %8985, 32
  %8987 = icmp eq i64 %8984, %8986
  br i1 %8987, label %8992, label %8988

; <label>:8988:                                   ; preds = %routine_idivl__r8d.exit39
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8990 = load i64, i64* %8989, align 8
  %8991 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8990, %struct.Memory* %loadMem_43bab3)
  br label %routine_idivl__r8d.exit

; <label>:8992:                                   ; preds = %routine_idivl__r8d.exit39
  %8993 = srem i64 %8983, %8981
  %8994 = getelementptr inbounds %union.anon, %union.anon* %8972, i64 0, i32 0
  %8995 = and i64 %8984, 4294967295
  store i64 %8995, i64* %8994, align 8
  %8996 = getelementptr inbounds %union.anon, %union.anon* %8976, i64 0, i32 0
  %8997 = and i64 %8993, 4294967295
  store i64 %8997, i64* %8996, align 8
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8998, align 1
  %8999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8999, align 1
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9000, align 1
  %9001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9001, align 1
  %9002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9002, align 1
  %9003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9003, align 1
  br label %routine_idivl__r8d.exit

routine_idivl__r8d.exit:                          ; preds = %8988, %8992
  %9004 = phi %struct.Memory* [ %8991, %8988 ], [ %loadMem_43bab3, %8992 ]
  store %struct.Memory* %9004, %struct.Memory** %MEMORY
  %loadMem_43bab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9006 = getelementptr inbounds %struct.GPR, %struct.GPR* %9005, i32 0, i32 33
  %9007 = getelementptr inbounds %struct.Reg, %struct.Reg* %9006, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %9007 to i64*
  %9008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9009 = getelementptr inbounds %struct.GPR, %struct.GPR* %9008, i32 0, i32 7
  %9010 = getelementptr inbounds %struct.Reg, %struct.Reg* %9009, i32 0, i32 0
  %RDX.i19 = bitcast %union.anon* %9010 to i64*
  %9011 = load i64, i64* %RDX.i19
  %9012 = load i64, i64* %PC.i18
  %9013 = add i64 %9012, 3
  store i64 %9013, i64* %PC.i18
  %9014 = trunc i64 %9011 to i32
  %9015 = sub i32 %9014, 1
  %9016 = zext i32 %9015 to i64
  store i64 %9016, i64* %RDX.i19, align 8
  %9017 = icmp ult i32 %9014, 1
  %9018 = zext i1 %9017 to i8
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9018, i8* %9019, align 1
  %9020 = and i32 %9015, 255
  %9021 = call i32 @llvm.ctpop.i32(i32 %9020)
  %9022 = trunc i32 %9021 to i8
  %9023 = and i8 %9022, 1
  %9024 = xor i8 %9023, 1
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9024, i8* %9025, align 1
  %9026 = xor i64 1, %9011
  %9027 = trunc i64 %9026 to i32
  %9028 = xor i32 %9027, %9015
  %9029 = lshr i32 %9028, 4
  %9030 = trunc i32 %9029 to i8
  %9031 = and i8 %9030, 1
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9031, i8* %9032, align 1
  %9033 = icmp eq i32 %9015, 0
  %9034 = zext i1 %9033 to i8
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9034, i8* %9035, align 1
  %9036 = lshr i32 %9015, 31
  %9037 = trunc i32 %9036 to i8
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9037, i8* %9038, align 1
  %9039 = lshr i32 %9014, 31
  %9040 = xor i32 %9036, %9039
  %9041 = add i32 %9040, %9039
  %9042 = icmp eq i32 %9041, 2
  %9043 = zext i1 %9042 to i8
  %9044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9043, i8* %9044, align 1
  store %struct.Memory* %loadMem_43bab6, %struct.Memory** %MEMORY
  %loadMem_43bab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9046 = getelementptr inbounds %struct.GPR, %struct.GPR* %9045, i32 0, i32 33
  %9047 = getelementptr inbounds %struct.Reg, %struct.Reg* %9046, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %9047 to i64*
  %9048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9049 = getelementptr inbounds %struct.GPR, %struct.GPR* %9048, i32 0, i32 5
  %9050 = getelementptr inbounds %struct.Reg, %struct.Reg* %9049, i32 0, i32 0
  %RCX.i16 = bitcast %union.anon* %9050 to i64*
  %9051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9052 = getelementptr inbounds %struct.GPR, %struct.GPR* %9051, i32 0, i32 15
  %9053 = getelementptr inbounds %struct.Reg, %struct.Reg* %9052, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %9053 to i64*
  %9054 = load i64, i64* %RBP.i17
  %9055 = sub i64 %9054, 184
  %9056 = load i64, i64* %PC.i15
  %9057 = add i64 %9056, 7
  store i64 %9057, i64* %PC.i15
  %9058 = inttoptr i64 %9055 to i64*
  %9059 = load i64, i64* %9058
  store i64 %9059, i64* %RCX.i16, align 8
  store %struct.Memory* %loadMem_43bab9, %struct.Memory** %MEMORY
  %loadMem_43bac0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9061 = getelementptr inbounds %struct.GPR, %struct.GPR* %9060, i32 0, i32 33
  %9062 = getelementptr inbounds %struct.Reg, %struct.Reg* %9061, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %9062 to i64*
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9064 = getelementptr inbounds %struct.GPR, %struct.GPR* %9063, i32 0, i32 7
  %9065 = getelementptr inbounds %struct.Reg, %struct.Reg* %9064, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %9065 to i32*
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9067 = getelementptr inbounds %struct.GPR, %struct.GPR* %9066, i32 0, i32 15
  %9068 = getelementptr inbounds %struct.Reg, %struct.Reg* %9067, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %9068 to i64*
  %9069 = load i64, i64* %RBP.i14
  %9070 = sub i64 %9069, 192
  %9071 = load i32, i32* %EDX.i
  %9072 = zext i32 %9071 to i64
  %9073 = load i64, i64* %PC.i13
  %9074 = add i64 %9073, 6
  store i64 %9074, i64* %PC.i13
  %9075 = inttoptr i64 %9070 to i32*
  store i32 %9071, i32* %9075
  store %struct.Memory* %loadMem_43bac0, %struct.Memory** %MEMORY
  %loadMem_43bac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9077 = getelementptr inbounds %struct.GPR, %struct.GPR* %9076, i32 0, i32 33
  %9078 = getelementptr inbounds %struct.Reg, %struct.Reg* %9077, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %9078 to i64*
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9080 = getelementptr inbounds %struct.GPR, %struct.GPR* %9079, i32 0, i32 5
  %9081 = getelementptr inbounds %struct.Reg, %struct.Reg* %9080, i32 0, i32 0
  %RCX.i12 = bitcast %union.anon* %9081 to i64*
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9083 = getelementptr inbounds %struct.GPR, %struct.GPR* %9082, i32 0, i32 7
  %9084 = getelementptr inbounds %struct.Reg, %struct.Reg* %9083, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %9084 to i64*
  %9085 = load i64, i64* %RCX.i12
  %9086 = load i64, i64* %PC.i11
  %9087 = add i64 %9086, 3
  store i64 %9087, i64* %PC.i11
  store i64 %9085, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_43bac6, %struct.Memory** %MEMORY
  %loadMem_43bac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9089 = getelementptr inbounds %struct.GPR, %struct.GPR* %9088, i32 0, i32 33
  %9090 = getelementptr inbounds %struct.Reg, %struct.Reg* %9089, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %9090 to i64*
  %9091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9092 = getelementptr inbounds %struct.GPR, %struct.GPR* %9091, i32 0, i32 5
  %9093 = getelementptr inbounds %struct.Reg, %struct.Reg* %9092, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %9093 to i64*
  %9094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9095 = getelementptr inbounds %struct.GPR, %struct.GPR* %9094, i32 0, i32 15
  %9096 = getelementptr inbounds %struct.Reg, %struct.Reg* %9095, i32 0, i32 0
  %RBP.i10 = bitcast %union.anon* %9096 to i64*
  %9097 = load i64, i64* %RBP.i10
  %9098 = sub i64 %9097, 188
  %9099 = load i64, i64* %PC.i9
  %9100 = add i64 %9099, 6
  store i64 %9100, i64* %PC.i9
  %9101 = inttoptr i64 %9098 to i32*
  %9102 = load i32, i32* %9101
  %9103 = zext i32 %9102 to i64
  store i64 %9103, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_43bac9, %struct.Memory** %MEMORY
  %loadMem_43bacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9105 = getelementptr inbounds %struct.GPR, %struct.GPR* %9104, i32 0, i32 33
  %9106 = getelementptr inbounds %struct.Reg, %struct.Reg* %9105, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %9106 to i64*
  %9107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9108 = getelementptr inbounds %struct.GPR, %struct.GPR* %9107, i32 0, i32 17
  %9109 = getelementptr inbounds %struct.Reg, %struct.Reg* %9108, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %9109 to i32*
  %9110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9111 = getelementptr inbounds %struct.GPR, %struct.GPR* %9110, i32 0, i32 15
  %9112 = getelementptr inbounds %struct.Reg, %struct.Reg* %9111, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %9112 to i64*
  %9113 = bitcast i32* %R8D.i to i64*
  %9114 = load i64, i64* %RBP.i8
  %9115 = sub i64 %9114, 192
  %9116 = load i64, i64* %PC.i7
  %9117 = add i64 %9116, 7
  store i64 %9117, i64* %PC.i7
  %9118 = inttoptr i64 %9115 to i32*
  %9119 = load i32, i32* %9118
  %9120 = zext i32 %9119 to i64
  store i64 %9120, i64* %9113, align 8
  store %struct.Memory* %loadMem_43bacf, %struct.Memory** %MEMORY
  %loadMem1_43bad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9122 = getelementptr inbounds %struct.GPR, %struct.GPR* %9121, i32 0, i32 33
  %9123 = getelementptr inbounds %struct.Reg, %struct.Reg* %9122, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %9123 to i64*
  %9124 = load i64, i64* %PC.i6
  %9125 = add i64 %9124, 91578
  %9126 = load i64, i64* %PC.i6
  %9127 = add i64 %9126, 5
  %9128 = load i64, i64* %PC.i6
  %9129 = add i64 %9128, 5
  store i64 %9129, i64* %PC.i6
  %9130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9131 = load i64, i64* %9130, align 8
  %9132 = add i64 %9131, -8
  %9133 = inttoptr i64 %9132 to i64*
  store i64 %9127, i64* %9133
  store i64 %9132, i64* %9130, align 8
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9125, i64* %9134, align 8
  store %struct.Memory* %loadMem1_43bad6, %struct.Memory** %MEMORY
  %loadMem2_43bad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43bad6 = load i64, i64* %3
  %call2_43bad6 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_43bad6, %struct.Memory* %loadMem2_43bad6)
  store %struct.Memory* %call2_43bad6, %struct.Memory** %MEMORY
  br label %block_.L_43badb

block_.L_43badb:                                  ; preds = %routine_idivl__r8d.exit, %block_43ba5a
  %loadMem_43badb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9136 = getelementptr inbounds %struct.GPR, %struct.GPR* %9135, i32 0, i32 33
  %9137 = getelementptr inbounds %struct.Reg, %struct.Reg* %9136, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %9137 to i64*
  %9138 = load i64, i64* %PC.i5
  %9139 = add i64 %9138, 5
  %9140 = load i64, i64* %PC.i5
  %9141 = add i64 %9140, 5
  store i64 %9141, i64* %PC.i5
  %9142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9139, i64* %9142, align 8
  store %struct.Memory* %loadMem_43badb, %struct.Memory** %MEMORY
  br label %block_.L_43bae0

block_.L_43bae0:                                  ; preds = %block_.L_43badb, %block_43ba25, %block_.L_43ba1a
  %loadMem_43bae0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9144 = getelementptr inbounds %struct.GPR, %struct.GPR* %9143, i32 0, i32 33
  %9145 = getelementptr inbounds %struct.Reg, %struct.Reg* %9144, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %9145 to i64*
  %9146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9147 = getelementptr inbounds %struct.GPR, %struct.GPR* %9146, i32 0, i32 13
  %9148 = getelementptr inbounds %struct.Reg, %struct.Reg* %9147, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %9148 to i64*
  %9149 = load i64, i64* %RSP.i
  %9150 = load i64, i64* %PC.i4
  %9151 = add i64 %9150, 7
  store i64 %9151, i64* %PC.i4
  %9152 = add i64 208, %9149
  store i64 %9152, i64* %RSP.i, align 8
  %9153 = icmp ult i64 %9152, %9149
  %9154 = icmp ult i64 %9152, 208
  %9155 = or i1 %9153, %9154
  %9156 = zext i1 %9155 to i8
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9156, i8* %9157, align 1
  %9158 = trunc i64 %9152 to i32
  %9159 = and i32 %9158, 255
  %9160 = call i32 @llvm.ctpop.i32(i32 %9159)
  %9161 = trunc i32 %9160 to i8
  %9162 = and i8 %9161, 1
  %9163 = xor i8 %9162, 1
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9163, i8* %9164, align 1
  %9165 = xor i64 208, %9149
  %9166 = xor i64 %9165, %9152
  %9167 = lshr i64 %9166, 4
  %9168 = trunc i64 %9167 to i8
  %9169 = and i8 %9168, 1
  %9170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9169, i8* %9170, align 1
  %9171 = icmp eq i64 %9152, 0
  %9172 = zext i1 %9171 to i8
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9172, i8* %9173, align 1
  %9174 = lshr i64 %9152, 63
  %9175 = trunc i64 %9174 to i8
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9175, i8* %9176, align 1
  %9177 = lshr i64 %9149, 63
  %9178 = xor i64 %9174, %9177
  %9179 = add i64 %9178, %9174
  %9180 = icmp eq i64 %9179, 2
  %9181 = zext i1 %9180 to i8
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9181, i8* %9182, align 1
  store %struct.Memory* %loadMem_43bae0, %struct.Memory** %MEMORY
  %loadMem_43bae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9184 = getelementptr inbounds %struct.GPR, %struct.GPR* %9183, i32 0, i32 33
  %9185 = getelementptr inbounds %struct.Reg, %struct.Reg* %9184, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %9185 to i64*
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9187 = getelementptr inbounds %struct.GPR, %struct.GPR* %9186, i32 0, i32 15
  %9188 = getelementptr inbounds %struct.Reg, %struct.Reg* %9187, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %9188 to i64*
  %9189 = load i64, i64* %PC.i2
  %9190 = add i64 %9189, 1
  store i64 %9190, i64* %PC.i2
  %9191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9192 = load i64, i64* %9191, align 8
  %9193 = add i64 %9192, 8
  %9194 = inttoptr i64 %9192 to i64*
  %9195 = load i64, i64* %9194
  store i64 %9195, i64* %RBP.i3, align 8
  store i64 %9193, i64* %9191, align 8
  store %struct.Memory* %loadMem_43bae7, %struct.Memory** %MEMORY
  %loadMem_43bae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9197 = getelementptr inbounds %struct.GPR, %struct.GPR* %9196, i32 0, i32 33
  %9198 = getelementptr inbounds %struct.Reg, %struct.Reg* %9197, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %9198 to i64*
  %9199 = load i64, i64* %PC.i1
  %9200 = add i64 %9199, 1
  store i64 %9200, i64* %PC.i1
  %9201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9203 = load i64, i64* %9202, align 8
  %9204 = inttoptr i64 %9203 to i64*
  %9205 = load i64, i64* %9204
  store i64 %9205, i64* %9201, align 8
  %9206 = add i64 %9203, 8
  store i64 %9206, i64* %9202, align 8
  store %struct.Memory* %loadMem_43bae8, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_43bae8
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0xd0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 208
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 208
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 208, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r9__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %R9
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b44d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b43a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x14__MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 20
  %20 = trunc i64 %19 to i32
  %21 = and i64 %19, 4294967295
  store i64 %21, i64* %RAX, align 8
  %22 = shl i64 %19, 32
  %23 = ashr exact i64 %22, 32
  %24 = icmp ne i64 %23, %19
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x15___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 21, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 21
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 21, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x58__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x24___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 36, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 4
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b351(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b42c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x58__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 36, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_0x1c__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = sext i8 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b382(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.is_halfeye(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b3ef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_0x1c__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = sext i8 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b3cc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_0x1f__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 31
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = sext i8 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43b3cc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b3ea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b427(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x58__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1
  %14 = icmp ult i32 %9, 1
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b419(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 2
  %14 = icmp ult i32 %9, 2
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b422(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b314(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b43f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b2fd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x48__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x4c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = trunc i64 %14 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = icmp eq i64 %14, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %14, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %14, 63
  %31 = xor i64 %27, %30
  %32 = add i64 %31, %30
  %33 = icmp eq i64 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b485(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 0, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = trunc i64 %14 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = icmp eq i64 %14, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %14, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %14, 63
  %31 = xor i64 %27, %30
  %32 = add i64 %31, %30
  %33 = icmp eq i64 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b49a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 2, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RAX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b4ee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.print_eye(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xab0f24___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x2___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 2, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RDX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b4d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b4e9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x586073___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x586073_type* @G__0x586073 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.gprintf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b4ee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 0, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.read_eye(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b5d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.min_eyes(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 68
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x4__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b592(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x24___r8___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 36, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R8, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 4
  %15 = icmp ult i32 %13, 4
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 4
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovel__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp ne i8 %17, 0
  %19 = load i64, i64* %RAX, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.is_ko(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b592(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b5aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b5d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.eyevalue_to_string(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57da5a___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57da5a_type* @G__0x57da5a to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b635(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.guess_eye_space(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b607(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b630(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57da85___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57da85_type* @G__0x57da85 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %13, 31
  %29 = xor i32 %25, %28
  %30 = add i32 %29, %28
  %31 = icmp eq i32 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b680(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xab0f24___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 2, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RCX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b664(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b67b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57daab___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57daab_type* @G__0x57daab to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b680(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 1
  %15 = icmp ult i32 %13, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 1
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b6d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_43b6d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 1, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b6b9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b6d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57dacb___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57dacb_type* @G__0x57dacb to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b6d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b954(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b954(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.max_eyes(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl___rdi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = sub i32 %12, %18
  %20 = icmp ult i32 %12, %18
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %19, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i32 %18, %12
  %30 = xor i32 %29, %19
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %19, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %19, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %18, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %12, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = xor i64 %21, %16
  %26 = xor i64 %24, %19
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i8* %10 to i32*
  store i32 %27, i32* %30, align 1
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 1
  %33 = trunc i64 %26 to i32
  %34 = getelementptr inbounds i8, i8* %10, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  %36 = lshr i64 %26, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 100
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 400
  %16 = icmp ult i32 %14, 400
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 400
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b910(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x68__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b8fd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 4
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b8fd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 108
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 116
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b84f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b84f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x68__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq___rsi__rsi_8____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %RSI
  %11 = mul i64 %10, 8
  %12 = add i64 %11, %9
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_0x1e__rdx__rsi_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 30
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i8*
  %23 = load i8, i8* %22
  %24 = sext i8 %23 to i64
  %25 = and i64 %24, 4294967295
  store i64 %25, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__dil___r8b(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 17
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %DIL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  store i8 %14, i8* %R8B, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl__edi___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = sitofp i32 %12 to float
  %22 = bitcast i8* %11 to float*
  store float %21, float* %22, align 1
  %23 = extractelement <2 x i32> %17, i32 1
  %24 = getelementptr inbounds i8, i8* %11, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  %26 = extractelement <2 x i32> %20, i32 0
  %27 = bitcast i8* %18 to i32*
  store i32 %26, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x24___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 36, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 4
  %15 = icmp ult i32 %13, 4
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 4
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__r8b__MINUS0x8d__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 141
  %15 = load i8, i8* %R8B
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.is_self_atari(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b81f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xa777b__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xa777b__rip__type* @G_0xa777b__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x6c__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fsub double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsd2ss__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %10, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = bitcast i8* %11 to double*
  %20 = load double, double* %19, align 1
  %21 = fptrunc double %20 to float
  %22 = bitcast i8* %10 to float*
  store float %21, float* %22, align 1
  %23 = extractelement <2 x i32> %15, i32 1
  %24 = getelementptr inbounds i8, i8* %10, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  %26 = extractelement <2 x i32> %18, i32 0
  %27 = bitcast i8* %16 to i32*
  store i32 %26, i32* %27, align 1
  %28 = extractelement <2 x i32> %18, i32 1
  %29 = getelementptr inbounds i8, i8* %10, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.is_edge_vertex(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b84a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xa7800__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xa7800__rip__type* @G_0xa7800__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b8aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b8a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0xa78e0__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xa78e0__rip__type* @G_0xa78e0__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x30___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 48, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x20__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b8a5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b902(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0xa789e__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xa789e__rip__type* @G_0xa789e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x6c__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.gg_normalize_float2int(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0xa788c__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xa788c__rip__type* @G_0xa788c__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x64__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43b8f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b8fd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b71f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x64__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jbe_.L_43b94f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b936(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b94a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b94f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b954(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43ba1a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1a5____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 421
  %15 = icmp ult i32 %13, 421
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 421
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jae_.L_43b999(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b999(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ba15(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57d7b6___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57d7b6_type* @G__0x57d7b6 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3b9___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 953, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57dafd___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57dafd_type* @G__0x57dafd to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R8D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xa0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa8__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 168
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abortgo(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ba1a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43bae0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jae_.L_43ba5f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43ba5f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43badb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3bc___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 956, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57db17___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57db17_type* @G__0x57db17 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 172
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xb8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc0__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 192
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43bae0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xd0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 208, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 208
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 208, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
