; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x99da04_type = type <{ [4 x i8] }>
%G_0x99da08_type = type <{ [4 x i8] }>
%G__0x57a16e_type = type <{ [8 x i8] }>
%G__0x57a4be_type = type <{ [8 x i8] }>
%G__0x57a4f4_type = type <{ [8 x i8] }>
%G__0xa7f430_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x99da04 = global %G_0x99da04_type zeroinitializer
@G_0x99da08 = global %G_0x99da08_type zeroinitializer
@G__0x57a16e = global %G__0x57a16e_type zeroinitializer
@G__0x57a4be = global %G__0x57a4be_type zeroinitializer
@G__0x57a4f4 = global %G__0x57a4f4_type zeroinitializer
@G__0xa7f430 = global %G__0xa7f430_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_452090.abortgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40fc80.fastlib(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @accuratelib(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_412080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_412080, %struct.Memory** %MEMORY
  %loadMem_412081 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1210 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1211 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1210
  %27 = load i64, i64* %PC.i1209
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1209
  store i64 %26, i64* %RBP.i1211, align 8
  store %struct.Memory* %loadMem_412081, %struct.Memory** %MEMORY
  %loadMem_412084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1227 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1228 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1228
  %36 = load i64, i64* %PC.i1227
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1227
  %38 = sub i64 %35, 144
  store i64 %38, i64* %RSP.i1228, align 8
  %39 = icmp ult i64 %35, 144
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 144, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_412084, %struct.Memory** %MEMORY
  %loadMem_41208b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1281 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i1282 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i1282
  %77 = sub i64 %76, 8
  %78 = load i32, i32* %EDI.i
  %79 = zext i32 %78 to i64
  %80 = load i64, i64* %PC.i1281
  %81 = add i64 %80, 3
  store i64 %81, i64* %PC.i1281
  %82 = inttoptr i64 %77 to i32*
  store i32 %78, i32* %82
  store %struct.Memory* %loadMem_41208b, %struct.Memory** %MEMORY
  %loadMem_41208e = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 9
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %88 to i32*
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %90 = getelementptr inbounds %struct.GPR, %struct.GPR* %89, i32 0, i32 15
  %91 = getelementptr inbounds %struct.Reg, %struct.Reg* %90, i32 0, i32 0
  %RBP.i1299 = bitcast %union.anon* %91 to i64*
  %92 = load i64, i64* %RBP.i1299
  %93 = sub i64 %92, 12
  %94 = load i32, i32* %ESI.i
  %95 = zext i32 %94 to i64
  %96 = load i64, i64* %PC.i1298
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC.i1298
  %98 = inttoptr i64 %93 to i32*
  store i32 %94, i32* %98
  store %struct.Memory* %loadMem_41208e, %struct.Memory** %MEMORY
  %loadMem_412091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i1341 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 7
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %EDX.i1342 = bitcast %union.anon* %104 to i32*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 15
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %RBP.i1343 = bitcast %union.anon* %107 to i64*
  %108 = load i64, i64* %RBP.i1343
  %109 = sub i64 %108, 16
  %110 = load i32, i32* %EDX.i1342
  %111 = zext i32 %110 to i64
  %112 = load i64, i64* %PC.i1341
  %113 = add i64 %112, 3
  store i64 %113, i64* %PC.i1341
  %114 = inttoptr i64 %109 to i32*
  store i32 %110, i32* %114
  store %struct.Memory* %loadMem_412091, %struct.Memory** %MEMORY
  %loadMem_412094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %116 = getelementptr inbounds %struct.GPR, %struct.GPR* %115, i32 0, i32 33
  %117 = getelementptr inbounds %struct.Reg, %struct.Reg* %116, i32 0, i32 0
  %PC.i1338 = bitcast %union.anon* %117 to i64*
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %119 = getelementptr inbounds %struct.GPR, %struct.GPR* %118, i32 0, i32 5
  %120 = getelementptr inbounds %struct.Reg, %struct.Reg* %119, i32 0, i32 0
  %RCX.i1339 = bitcast %union.anon* %120 to i64*
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.GPR, %struct.GPR* %121, i32 0, i32 15
  %123 = getelementptr inbounds %struct.Reg, %struct.Reg* %122, i32 0, i32 0
  %RBP.i1340 = bitcast %union.anon* %123 to i64*
  %124 = load i64, i64* %RBP.i1340
  %125 = sub i64 %124, 24
  %126 = load i64, i64* %RCX.i1339
  %127 = load i64, i64* %PC.i1338
  %128 = add i64 %127, 4
  store i64 %128, i64* %PC.i1338
  %129 = inttoptr i64 %125 to i64*
  store i64 %126, i64* %129
  store %struct.Memory* %loadMem_412094, %struct.Memory** %MEMORY
  %loadMem_412098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %131 = getelementptr inbounds %struct.GPR, %struct.GPR* %130, i32 0, i32 33
  %132 = getelementptr inbounds %struct.Reg, %struct.Reg* %131, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %132 to i64*
  %133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %134 = getelementptr inbounds %struct.GPR, %struct.GPR* %133, i32 0, i32 15
  %135 = getelementptr inbounds %struct.Reg, %struct.Reg* %134, i32 0, i32 0
  %RBP.i1337 = bitcast %union.anon* %135 to i64*
  %136 = load i64, i64* %RBP.i1337
  %137 = sub i64 %136, 36
  %138 = load i64, i64* %PC.i1336
  %139 = add i64 %138, 7
  store i64 %139, i64* %PC.i1336
  %140 = inttoptr i64 %137 to i32*
  store i32 0, i32* %140
  store %struct.Memory* %loadMem_412098, %struct.Memory** %MEMORY
  %loadMem_41209f = load %struct.Memory*, %struct.Memory** %MEMORY
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 33
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %PC.i1334 = bitcast %union.anon* %143 to i64*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 15
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %RBP.i1335 = bitcast %union.anon* %146 to i64*
  %147 = load i64, i64* %RBP.i1335
  %148 = sub i64 %147, 68
  %149 = load i64, i64* %PC.i1334
  %150 = add i64 %149, 7
  store i64 %150, i64* %PC.i1334
  %151 = inttoptr i64 %148 to i32*
  store i32 0, i32* %151
  store %struct.Memory* %loadMem_41209f, %struct.Memory** %MEMORY
  %loadMem_4120a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %153 = getelementptr inbounds %struct.GPR, %struct.GPR* %152, i32 0, i32 33
  %154 = getelementptr inbounds %struct.Reg, %struct.Reg* %153, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %154 to i64*
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %156 = getelementptr inbounds %struct.GPR, %struct.GPR* %155, i32 0, i32 5
  %157 = getelementptr inbounds %struct.Reg, %struct.Reg* %156, i32 0, i32 0
  %RCX.i1332 = bitcast %union.anon* %157 to i64*
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 15
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %RBP.i1333 = bitcast %union.anon* %160 to i64*
  %161 = load i64, i64* %RBP.i1333
  %162 = sub i64 %161, 8
  %163 = load i64, i64* %PC.i1331
  %164 = add i64 %163, 4
  store i64 %164, i64* %PC.i1331
  %165 = inttoptr i64 %162 to i32*
  %166 = load i32, i32* %165
  %167 = sext i32 %166 to i64
  store i64 %167, i64* %RCX.i1332, align 8
  store %struct.Memory* %loadMem_4120a6, %struct.Memory** %MEMORY
  %loadMem_4120aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 33
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %PC.i1328 = bitcast %union.anon* %170 to i64*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 5
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %RCX.i1329 = bitcast %union.anon* %173 to i64*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 7
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %RDX.i1330 = bitcast %union.anon* %176 to i64*
  %177 = load i64, i64* %RCX.i1329
  %178 = add i64 %177, 12099168
  %179 = load i64, i64* %PC.i1328
  %180 = add i64 %179, 8
  store i64 %180, i64* %PC.i1328
  %181 = inttoptr i64 %178 to i8*
  %182 = load i8, i8* %181
  %183 = zext i8 %182 to i64
  store i64 %183, i64* %RDX.i1330, align 8
  store %struct.Memory* %loadMem_4120aa, %struct.Memory** %MEMORY
  %loadMem_4120b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %185 = getelementptr inbounds %struct.GPR, %struct.GPR* %184, i32 0, i32 33
  %186 = getelementptr inbounds %struct.Reg, %struct.Reg* %185, i32 0, i32 0
  %PC.i1326 = bitcast %union.anon* %186 to i64*
  %187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %188 = getelementptr inbounds %struct.GPR, %struct.GPR* %187, i32 0, i32 7
  %189 = getelementptr inbounds %struct.Reg, %struct.Reg* %188, i32 0, i32 0
  %EDX.i1327 = bitcast %union.anon* %189 to i32*
  %190 = load i32, i32* %EDX.i1327
  %191 = zext i32 %190 to i64
  %192 = load i64, i64* %PC.i1326
  %193 = add i64 %192, 3
  store i64 %193, i64* %PC.i1326
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %194, align 1
  %195 = and i32 %190, 255
  %196 = call i32 @llvm.ctpop.i32(i32 %195)
  %197 = trunc i32 %196 to i8
  %198 = and i8 %197, 1
  %199 = xor i8 %198, 1
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %199, i8* %200, align 1
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %201, align 1
  %202 = icmp eq i32 %190, 0
  %203 = zext i1 %202 to i8
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %203, i8* %204, align 1
  %205 = lshr i32 %190, 31
  %206 = trunc i32 %205 to i8
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %206, i8* %207, align 1
  %208 = lshr i32 %190, 31
  %209 = xor i32 %205, %208
  %210 = add i32 %209, %208
  %211 = icmp eq i32 %210, 2
  %212 = zext i1 %211 to i8
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %212, i8* %213, align 1
  store %struct.Memory* %loadMem_4120b2, %struct.Memory** %MEMORY
  %loadMem_4120b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %215 = getelementptr inbounds %struct.GPR, %struct.GPR* %214, i32 0, i32 33
  %216 = getelementptr inbounds %struct.Reg, %struct.Reg* %215, i32 0, i32 0
  %PC.i1325 = bitcast %union.anon* %216 to i64*
  %217 = load i64, i64* %PC.i1325
  %218 = add i64 %217, 11
  %219 = load i64, i64* %PC.i1325
  %220 = add i64 %219, 6
  %221 = load i64, i64* %PC.i1325
  %222 = add i64 %221, 6
  store i64 %222, i64* %PC.i1325
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %224 = load i8, i8* %223, align 1
  %225 = icmp eq i8 %224, 0
  %226 = zext i1 %225 to i8
  store i8 %226, i8* %BRANCH_TAKEN, align 1
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %228 = select i1 %225, i64 %218, i64 %220
  store i64 %228, i64* %227, align 8
  store %struct.Memory* %loadMem_4120b5, %struct.Memory** %MEMORY
  %loadBr_4120b5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4120b5 = icmp eq i8 %loadBr_4120b5, 1
  br i1 %cmpBr_4120b5, label %block_.L_4120c0, label %block_4120bb

block_4120bb:                                     ; preds = %entry
  %loadMem_4120bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %230 = getelementptr inbounds %struct.GPR, %struct.GPR* %229, i32 0, i32 33
  %231 = getelementptr inbounds %struct.Reg, %struct.Reg* %230, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %231 to i64*
  %232 = load i64, i64* %PC.i1324
  %233 = add i64 %232, 94
  %234 = load i64, i64* %PC.i1324
  %235 = add i64 %234, 5
  store i64 %235, i64* %PC.i1324
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %233, i64* %236, align 8
  store %struct.Memory* %loadMem_4120bb, %struct.Memory** %MEMORY
  br label %block_.L_412119

block_.L_4120c0:                                  ; preds = %entry
  %loadMem_4120c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %PC.i1322 = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %241 = getelementptr inbounds %struct.GPR, %struct.GPR* %240, i32 0, i32 11
  %242 = getelementptr inbounds %struct.Reg, %struct.Reg* %241, i32 0, i32 0
  %RDI.i1323 = bitcast %union.anon* %242 to i64*
  %243 = load i64, i64* %PC.i1322
  %244 = add i64 %243, 10
  store i64 %244, i64* %PC.i1322
  store i64 ptrtoint (%G__0x57a16e_type* @G__0x57a16e to i64), i64* %RDI.i1323, align 8
  store %struct.Memory* %loadMem_4120c0, %struct.Memory** %MEMORY
  %loadMem_4120ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %246 = getelementptr inbounds %struct.GPR, %struct.GPR* %245, i32 0, i32 33
  %247 = getelementptr inbounds %struct.Reg, %struct.Reg* %246, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %247 to i64*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %249 = getelementptr inbounds %struct.GPR, %struct.GPR* %248, i32 0, i32 9
  %250 = getelementptr inbounds %struct.Reg, %struct.Reg* %249, i32 0, i32 0
  %RSI.i1321 = bitcast %union.anon* %250 to i64*
  %251 = load i64, i64* %PC.i1320
  %252 = add i64 %251, 5
  store i64 %252, i64* %PC.i1320
  store i64 1745, i64* %RSI.i1321, align 8
  store %struct.Memory* %loadMem_4120ca, %struct.Memory** %MEMORY
  %loadMem_4120cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %254 = getelementptr inbounds %struct.GPR, %struct.GPR* %253, i32 0, i32 33
  %255 = getelementptr inbounds %struct.Reg, %struct.Reg* %254, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %255 to i64*
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %257 = getelementptr inbounds %struct.GPR, %struct.GPR* %256, i32 0, i32 7
  %258 = getelementptr inbounds %struct.Reg, %struct.Reg* %257, i32 0, i32 0
  %RDX.i1319 = bitcast %union.anon* %258 to i64*
  %259 = load i64, i64* %PC.i1318
  %260 = add i64 %259, 10
  store i64 %260, i64* %PC.i1318
  store i64 ptrtoint (%G__0x57a4be_type* @G__0x57a4be to i64), i64* %RDX.i1319, align 8
  store %struct.Memory* %loadMem_4120cf, %struct.Memory** %MEMORY
  %loadMem_4120d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %262 = getelementptr inbounds %struct.GPR, %struct.GPR* %261, i32 0, i32 33
  %263 = getelementptr inbounds %struct.Reg, %struct.Reg* %262, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %263 to i64*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %265 = getelementptr inbounds %struct.GPR, %struct.GPR* %264, i32 0, i32 1
  %266 = getelementptr inbounds %struct.Reg, %struct.Reg* %265, i32 0, i32 0
  %RAX.i1317 = bitcast %union.anon* %266 to i64*
  %267 = load i64, i64* %PC.i1316
  %268 = add i64 %267, 5
  store i64 %268, i64* %PC.i1316
  store i64 20, i64* %RAX.i1317, align 8
  store %struct.Memory* %loadMem_4120d9, %struct.Memory** %MEMORY
  %loadMem_4120de = load %struct.Memory*, %struct.Memory** %MEMORY
  %269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %270 = getelementptr inbounds %struct.GPR, %struct.GPR* %269, i32 0, i32 33
  %271 = getelementptr inbounds %struct.Reg, %struct.Reg* %270, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %271 to i64*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %273 = getelementptr inbounds %struct.GPR, %struct.GPR* %272, i32 0, i32 5
  %274 = getelementptr inbounds %struct.Reg, %struct.Reg* %273, i32 0, i32 0
  %RCX.i1314 = bitcast %union.anon* %274 to i64*
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 15
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %RBP.i1315 = bitcast %union.anon* %277 to i64*
  %278 = load i64, i64* %RBP.i1315
  %279 = sub i64 %278, 8
  %280 = load i64, i64* %PC.i1313
  %281 = add i64 %280, 3
  store i64 %281, i64* %PC.i1313
  %282 = inttoptr i64 %279 to i32*
  %283 = load i32, i32* %282
  %284 = zext i32 %283 to i64
  store i64 %284, i64* %RCX.i1314, align 8
  store %struct.Memory* %loadMem_4120de, %struct.Memory** %MEMORY
  %loadMem_4120e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %286 = getelementptr inbounds %struct.GPR, %struct.GPR* %285, i32 0, i32 33
  %287 = getelementptr inbounds %struct.Reg, %struct.Reg* %286, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %287 to i64*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %289 = getelementptr inbounds %struct.GPR, %struct.GPR* %288, i32 0, i32 1
  %290 = getelementptr inbounds %struct.Reg, %struct.Reg* %289, i32 0, i32 0
  %EAX.i1311 = bitcast %union.anon* %290 to i32*
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %292 = getelementptr inbounds %struct.GPR, %struct.GPR* %291, i32 0, i32 15
  %293 = getelementptr inbounds %struct.Reg, %struct.Reg* %292, i32 0, i32 0
  %RBP.i1312 = bitcast %union.anon* %293 to i64*
  %294 = load i64, i64* %RBP.i1312
  %295 = sub i64 %294, 96
  %296 = load i32, i32* %EAX.i1311
  %297 = zext i32 %296 to i64
  %298 = load i64, i64* %PC.i1310
  %299 = add i64 %298, 3
  store i64 %299, i64* %PC.i1310
  %300 = inttoptr i64 %295 to i32*
  store i32 %296, i32* %300
  store %struct.Memory* %loadMem_4120e1, %struct.Memory** %MEMORY
  %loadMem_4120e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %302 = getelementptr inbounds %struct.GPR, %struct.GPR* %301, i32 0, i32 33
  %303 = getelementptr inbounds %struct.Reg, %struct.Reg* %302, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %303 to i64*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %305 = getelementptr inbounds %struct.GPR, %struct.GPR* %304, i32 0, i32 5
  %306 = getelementptr inbounds %struct.Reg, %struct.Reg* %305, i32 0, i32 0
  %ECX.i1308 = bitcast %union.anon* %306 to i32*
  %307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %308 = getelementptr inbounds %struct.GPR, %struct.GPR* %307, i32 0, i32 1
  %309 = getelementptr inbounds %struct.Reg, %struct.Reg* %308, i32 0, i32 0
  %RAX.i1309 = bitcast %union.anon* %309 to i64*
  %310 = load i32, i32* %ECX.i1308
  %311 = zext i32 %310 to i64
  %312 = load i64, i64* %PC.i1307
  %313 = add i64 %312, 2
  store i64 %313, i64* %PC.i1307
  %314 = and i64 %311, 4294967295
  store i64 %314, i64* %RAX.i1309, align 8
  store %struct.Memory* %loadMem_4120e4, %struct.Memory** %MEMORY
  %loadMem_4120e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %316 = getelementptr inbounds %struct.GPR, %struct.GPR* %315, i32 0, i32 33
  %317 = getelementptr inbounds %struct.Reg, %struct.Reg* %316, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %317 to i64*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %319 = getelementptr inbounds %struct.GPR, %struct.GPR* %318, i32 0, i32 7
  %320 = getelementptr inbounds %struct.Reg, %struct.Reg* %319, i32 0, i32 0
  %RDX.i1305 = bitcast %union.anon* %320 to i64*
  %321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %322 = getelementptr inbounds %struct.GPR, %struct.GPR* %321, i32 0, i32 15
  %323 = getelementptr inbounds %struct.Reg, %struct.Reg* %322, i32 0, i32 0
  %RBP.i1306 = bitcast %union.anon* %323 to i64*
  %324 = load i64, i64* %RBP.i1306
  %325 = sub i64 %324, 104
  %326 = load i64, i64* %RDX.i1305
  %327 = load i64, i64* %PC.i1304
  %328 = add i64 %327, 4
  store i64 %328, i64* %PC.i1304
  %329 = inttoptr i64 %325 to i64*
  store i64 %326, i64* %329
  store %struct.Memory* %loadMem_4120e6, %struct.Memory** %MEMORY
  %loadMem_4120ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %331 = getelementptr inbounds %struct.GPR, %struct.GPR* %330, i32 0, i32 33
  %332 = getelementptr inbounds %struct.Reg, %struct.Reg* %331, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %332 to i64*
  %333 = load i64, i64* %PC.i1303
  %334 = add i64 %333, 1
  store i64 %334, i64* %PC.i1303
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %337 = bitcast %union.anon* %336 to i32*
  %338 = load i32, i32* %337, align 8
  %339 = sext i32 %338 to i64
  %340 = lshr i64 %339, 32
  store i64 %340, i64* %335, align 8
  store %struct.Memory* %loadMem_4120ea, %struct.Memory** %MEMORY
  %loadMem_4120eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %342 = getelementptr inbounds %struct.GPR, %struct.GPR* %341, i32 0, i32 33
  %343 = getelementptr inbounds %struct.Reg, %struct.Reg* %342, i32 0, i32 0
  %PC.i1300 = bitcast %union.anon* %343 to i64*
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %345 = getelementptr inbounds %struct.GPR, %struct.GPR* %344, i32 0, i32 5
  %346 = getelementptr inbounds %struct.Reg, %struct.Reg* %345, i32 0, i32 0
  %RCX.i1301 = bitcast %union.anon* %346 to i64*
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %348 = getelementptr inbounds %struct.GPR, %struct.GPR* %347, i32 0, i32 15
  %349 = getelementptr inbounds %struct.Reg, %struct.Reg* %348, i32 0, i32 0
  %RBP.i1302 = bitcast %union.anon* %349 to i64*
  %350 = load i64, i64* %RBP.i1302
  %351 = sub i64 %350, 96
  %352 = load i64, i64* %PC.i1300
  %353 = add i64 %352, 3
  store i64 %353, i64* %PC.i1300
  %354 = inttoptr i64 %351 to i32*
  %355 = load i32, i32* %354
  %356 = zext i32 %355 to i64
  store i64 %356, i64* %RCX.i1301, align 8
  store %struct.Memory* %loadMem_4120eb, %struct.Memory** %MEMORY
  %loadMem_4120ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %358 = getelementptr inbounds %struct.GPR, %struct.GPR* %357, i32 0, i32 33
  %359 = getelementptr inbounds %struct.Reg, %struct.Reg* %358, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %359 to i64*
  %360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %361 = getelementptr inbounds %struct.GPR, %struct.GPR* %360, i32 0, i32 5
  %362 = getelementptr inbounds %struct.Reg, %struct.Reg* %361, i32 0, i32 0
  %ECX.i1296 = bitcast %union.anon* %362 to i32*
  %363 = load i32, i32* %ECX.i1296
  %364 = zext i32 %363 to i64
  %365 = load i64, i64* %PC.i1295
  %366 = add i64 %365, 2
  store i64 %366, i64* %PC.i1295
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %368 = bitcast %union.anon* %367 to i32*
  %369 = load i32, i32* %368, align 8
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %372 = bitcast %union.anon* %371 to i32*
  %373 = load i32, i32* %372, align 8
  %374 = zext i32 %373 to i64
  %375 = shl i64 %364, 32
  %376 = ashr exact i64 %375, 32
  %377 = shl i64 %374, 32
  %378 = or i64 %377, %370
  %379 = sdiv i64 %378, %376
  %380 = shl i64 %379, 32
  %381 = ashr exact i64 %380, 32
  %382 = icmp eq i64 %379, %381
  br i1 %382, label %387, label %383

; <label>:383:                                    ; preds = %block_.L_4120c0
  %384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %385 = load i64, i64* %384, align 8
  %386 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %385, %struct.Memory* %loadMem_4120ee)
  br label %routine_idivl__ecx.exit1297

; <label>:387:                                    ; preds = %block_.L_4120c0
  %388 = srem i64 %378, %376
  %389 = getelementptr inbounds %union.anon, %union.anon* %367, i64 0, i32 0
  %390 = and i64 %379, 4294967295
  store i64 %390, i64* %389, align 8
  %391 = getelementptr inbounds %union.anon, %union.anon* %371, i64 0, i32 0
  %392 = and i64 %388, 4294967295
  store i64 %392, i64* %391, align 8
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %393, align 1
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %394, align 1
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %395, align 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %396, align 1
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %397, align 1
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %398, align 1
  br label %routine_idivl__ecx.exit1297

routine_idivl__ecx.exit1297:                      ; preds = %383, %387
  %399 = phi %struct.Memory* [ %386, %383 ], [ %loadMem_4120ee, %387 ]
  store %struct.Memory* %399, %struct.Memory** %MEMORY
  %loadMem_4120f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %401 = getelementptr inbounds %struct.GPR, %struct.GPR* %400, i32 0, i32 33
  %402 = getelementptr inbounds %struct.Reg, %struct.Reg* %401, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %402 to i64*
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %404 = getelementptr inbounds %struct.GPR, %struct.GPR* %403, i32 0, i32 1
  %405 = getelementptr inbounds %struct.Reg, %struct.Reg* %404, i32 0, i32 0
  %RAX.i1294 = bitcast %union.anon* %405 to i64*
  %406 = load i64, i64* %RAX.i1294
  %407 = load i64, i64* %PC.i1293
  %408 = add i64 %407, 3
  store i64 %408, i64* %PC.i1293
  %409 = trunc i64 %406 to i32
  %410 = sub i32 %409, 1
  %411 = zext i32 %410 to i64
  store i64 %411, i64* %RAX.i1294, align 8
  %412 = icmp ult i32 %409, 1
  %413 = zext i1 %412 to i8
  %414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %413, i8* %414, align 1
  %415 = and i32 %410, 255
  %416 = call i32 @llvm.ctpop.i32(i32 %415)
  %417 = trunc i32 %416 to i8
  %418 = and i8 %417, 1
  %419 = xor i8 %418, 1
  %420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %419, i8* %420, align 1
  %421 = xor i64 1, %406
  %422 = trunc i64 %421 to i32
  %423 = xor i32 %422, %410
  %424 = lshr i32 %423, 4
  %425 = trunc i32 %424 to i8
  %426 = and i8 %425, 1
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %426, i8* %427, align 1
  %428 = icmp eq i32 %410, 0
  %429 = zext i1 %428 to i8
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %429, i8* %430, align 1
  %431 = lshr i32 %410, 31
  %432 = trunc i32 %431 to i8
  %433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %432, i8* %433, align 1
  %434 = lshr i32 %409, 31
  %435 = xor i32 %431, %434
  %436 = add i32 %435, %434
  %437 = icmp eq i32 %436, 2
  %438 = zext i1 %437 to i8
  %439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %438, i8* %439, align 1
  store %struct.Memory* %loadMem_4120f0, %struct.Memory** %MEMORY
  %loadMem_4120f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %441 = getelementptr inbounds %struct.GPR, %struct.GPR* %440, i32 0, i32 33
  %442 = getelementptr inbounds %struct.Reg, %struct.Reg* %441, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %442 to i64*
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %444 = getelementptr inbounds %struct.GPR, %struct.GPR* %443, i32 0, i32 17
  %445 = getelementptr inbounds %struct.Reg, %struct.Reg* %444, i32 0, i32 0
  %R8D.i1291 = bitcast %union.anon* %445 to i32*
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %447 = getelementptr inbounds %struct.GPR, %struct.GPR* %446, i32 0, i32 15
  %448 = getelementptr inbounds %struct.Reg, %struct.Reg* %447, i32 0, i32 0
  %RBP.i1292 = bitcast %union.anon* %448 to i64*
  %449 = bitcast i32* %R8D.i1291 to i64*
  %450 = load i64, i64* %RBP.i1292
  %451 = sub i64 %450, 8
  %452 = load i64, i64* %PC.i1290
  %453 = add i64 %452, 4
  store i64 %453, i64* %PC.i1290
  %454 = inttoptr i64 %451 to i32*
  %455 = load i32, i32* %454
  %456 = zext i32 %455 to i64
  store i64 %456, i64* %449, align 8
  store %struct.Memory* %loadMem_4120f3, %struct.Memory** %MEMORY
  %loadMem_4120f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %458 = getelementptr inbounds %struct.GPR, %struct.GPR* %457, i32 0, i32 33
  %459 = getelementptr inbounds %struct.Reg, %struct.Reg* %458, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %459 to i64*
  %460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %461 = getelementptr inbounds %struct.GPR, %struct.GPR* %460, i32 0, i32 1
  %462 = getelementptr inbounds %struct.Reg, %struct.Reg* %461, i32 0, i32 0
  %EAX.i1288 = bitcast %union.anon* %462 to i32*
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %464 = getelementptr inbounds %struct.GPR, %struct.GPR* %463, i32 0, i32 15
  %465 = getelementptr inbounds %struct.Reg, %struct.Reg* %464, i32 0, i32 0
  %RBP.i1289 = bitcast %union.anon* %465 to i64*
  %466 = load i64, i64* %RBP.i1289
  %467 = sub i64 %466, 108
  %468 = load i32, i32* %EAX.i1288
  %469 = zext i32 %468 to i64
  %470 = load i64, i64* %PC.i1287
  %471 = add i64 %470, 3
  store i64 %471, i64* %PC.i1287
  %472 = inttoptr i64 %467 to i32*
  store i32 %468, i32* %472
  store %struct.Memory* %loadMem_4120f7, %struct.Memory** %MEMORY
  %loadMem_4120fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %474 = getelementptr inbounds %struct.GPR, %struct.GPR* %473, i32 0, i32 33
  %475 = getelementptr inbounds %struct.Reg, %struct.Reg* %474, i32 0, i32 0
  %PC.i1284 = bitcast %union.anon* %475 to i64*
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %477 = getelementptr inbounds %struct.GPR, %struct.GPR* %476, i32 0, i32 17
  %478 = getelementptr inbounds %struct.Reg, %struct.Reg* %477, i32 0, i32 0
  %R8D.i1285 = bitcast %union.anon* %478 to i32*
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %480 = getelementptr inbounds %struct.GPR, %struct.GPR* %479, i32 0, i32 1
  %481 = getelementptr inbounds %struct.Reg, %struct.Reg* %480, i32 0, i32 0
  %RAX.i1286 = bitcast %union.anon* %481 to i64*
  %482 = load i32, i32* %R8D.i1285
  %483 = zext i32 %482 to i64
  %484 = load i64, i64* %PC.i1284
  %485 = add i64 %484, 3
  store i64 %485, i64* %PC.i1284
  %486 = and i64 %483, 4294967295
  store i64 %486, i64* %RAX.i1286, align 8
  store %struct.Memory* %loadMem_4120fa, %struct.Memory** %MEMORY
  %loadMem_4120fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %488 = getelementptr inbounds %struct.GPR, %struct.GPR* %487, i32 0, i32 33
  %489 = getelementptr inbounds %struct.Reg, %struct.Reg* %488, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %489 to i64*
  %490 = load i64, i64* %PC.i1283
  %491 = add i64 %490, 1
  store i64 %491, i64* %PC.i1283
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %494 = bitcast %union.anon* %493 to i32*
  %495 = load i32, i32* %494, align 8
  %496 = sext i32 %495 to i64
  %497 = lshr i64 %496, 32
  store i64 %497, i64* %492, align 8
  store %struct.Memory* %loadMem_4120fd, %struct.Memory** %MEMORY
  %loadMem_4120fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %499 = getelementptr inbounds %struct.GPR, %struct.GPR* %498, i32 0, i32 33
  %500 = getelementptr inbounds %struct.Reg, %struct.Reg* %499, i32 0, i32 0
  %PC.i1278 = bitcast %union.anon* %500 to i64*
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %502 = getelementptr inbounds %struct.GPR, %struct.GPR* %501, i32 0, i32 5
  %503 = getelementptr inbounds %struct.Reg, %struct.Reg* %502, i32 0, i32 0
  %ECX.i1279 = bitcast %union.anon* %503 to i32*
  %504 = load i32, i32* %ECX.i1279
  %505 = zext i32 %504 to i64
  %506 = load i64, i64* %PC.i1278
  %507 = add i64 %506, 2
  store i64 %507, i64* %PC.i1278
  %508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %509 = bitcast %union.anon* %508 to i32*
  %510 = load i32, i32* %509, align 8
  %511 = zext i32 %510 to i64
  %512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %513 = bitcast %union.anon* %512 to i32*
  %514 = load i32, i32* %513, align 8
  %515 = zext i32 %514 to i64
  %516 = shl i64 %505, 32
  %517 = ashr exact i64 %516, 32
  %518 = shl i64 %515, 32
  %519 = or i64 %518, %511
  %520 = sdiv i64 %519, %517
  %521 = shl i64 %520, 32
  %522 = ashr exact i64 %521, 32
  %523 = icmp eq i64 %520, %522
  br i1 %523, label %528, label %524

; <label>:524:                                    ; preds = %routine_idivl__ecx.exit1297
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %526 = load i64, i64* %525, align 8
  %527 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %526, %struct.Memory* %loadMem_4120fe)
  br label %routine_idivl__ecx.exit1280

; <label>:528:                                    ; preds = %routine_idivl__ecx.exit1297
  %529 = srem i64 %519, %517
  %530 = getelementptr inbounds %union.anon, %union.anon* %508, i64 0, i32 0
  %531 = and i64 %520, 4294967295
  store i64 %531, i64* %530, align 8
  %532 = getelementptr inbounds %union.anon, %union.anon* %512, i64 0, i32 0
  %533 = and i64 %529, 4294967295
  store i64 %533, i64* %532, align 8
  %534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %534, align 1
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %535, align 1
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %536, align 1
  %537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %537, align 1
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %538, align 1
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %539, align 1
  br label %routine_idivl__ecx.exit1280

routine_idivl__ecx.exit1280:                      ; preds = %524, %528
  %540 = phi %struct.Memory* [ %527, %524 ], [ %loadMem_4120fe, %528 ]
  store %struct.Memory* %540, %struct.Memory** %MEMORY
  %loadMem_412100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %542 = getelementptr inbounds %struct.GPR, %struct.GPR* %541, i32 0, i32 33
  %543 = getelementptr inbounds %struct.Reg, %struct.Reg* %542, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %543 to i64*
  %544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %545 = getelementptr inbounds %struct.GPR, %struct.GPR* %544, i32 0, i32 7
  %546 = getelementptr inbounds %struct.Reg, %struct.Reg* %545, i32 0, i32 0
  %RDX.i1277 = bitcast %union.anon* %546 to i64*
  %547 = load i64, i64* %RDX.i1277
  %548 = load i64, i64* %PC.i1276
  %549 = add i64 %548, 3
  store i64 %549, i64* %PC.i1276
  %550 = trunc i64 %547 to i32
  %551 = sub i32 %550, 1
  %552 = zext i32 %551 to i64
  store i64 %552, i64* %RDX.i1277, align 8
  %553 = icmp ult i32 %550, 1
  %554 = zext i1 %553 to i8
  %555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %554, i8* %555, align 1
  %556 = and i32 %551, 255
  %557 = call i32 @llvm.ctpop.i32(i32 %556)
  %558 = trunc i32 %557 to i8
  %559 = and i8 %558, 1
  %560 = xor i8 %559, 1
  %561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %560, i8* %561, align 1
  %562 = xor i64 1, %547
  %563 = trunc i64 %562 to i32
  %564 = xor i32 %563, %551
  %565 = lshr i32 %564, 4
  %566 = trunc i32 %565 to i8
  %567 = and i8 %566, 1
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %567, i8* %568, align 1
  %569 = icmp eq i32 %551, 0
  %570 = zext i1 %569 to i8
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %570, i8* %571, align 1
  %572 = lshr i32 %551, 31
  %573 = trunc i32 %572 to i8
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %573, i8* %574, align 1
  %575 = lshr i32 %550, 31
  %576 = xor i32 %572, %575
  %577 = add i32 %576, %575
  %578 = icmp eq i32 %577, 2
  %579 = zext i1 %578 to i8
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %579, i8* %580, align 1
  store %struct.Memory* %loadMem_412100, %struct.Memory** %MEMORY
  %loadMem_412103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %582 = getelementptr inbounds %struct.GPR, %struct.GPR* %581, i32 0, i32 33
  %583 = getelementptr inbounds %struct.Reg, %struct.Reg* %582, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %583 to i64*
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %585 = getelementptr inbounds %struct.GPR, %struct.GPR* %584, i32 0, i32 15
  %586 = getelementptr inbounds %struct.Reg, %struct.Reg* %585, i32 0, i32 0
  %RBP.i1274 = bitcast %union.anon* %586 to i64*
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %588 = getelementptr inbounds %struct.GPR, %struct.GPR* %587, i32 0, i32 19
  %589 = getelementptr inbounds %struct.Reg, %struct.Reg* %588, i32 0, i32 0
  %R9.i1275 = bitcast %union.anon* %589 to i64*
  %590 = load i64, i64* %RBP.i1274
  %591 = sub i64 %590, 104
  %592 = load i64, i64* %PC.i1273
  %593 = add i64 %592, 4
  store i64 %593, i64* %PC.i1273
  %594 = inttoptr i64 %591 to i64*
  %595 = load i64, i64* %594
  store i64 %595, i64* %R9.i1275, align 8
  store %struct.Memory* %loadMem_412103, %struct.Memory** %MEMORY
  %loadMem_412107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %597 = getelementptr inbounds %struct.GPR, %struct.GPR* %596, i32 0, i32 33
  %598 = getelementptr inbounds %struct.Reg, %struct.Reg* %597, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %598 to i64*
  %599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %600 = getelementptr inbounds %struct.GPR, %struct.GPR* %599, i32 0, i32 7
  %601 = getelementptr inbounds %struct.Reg, %struct.Reg* %600, i32 0, i32 0
  %EDX.i1271 = bitcast %union.anon* %601 to i32*
  %602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %603 = getelementptr inbounds %struct.GPR, %struct.GPR* %602, i32 0, i32 15
  %604 = getelementptr inbounds %struct.Reg, %struct.Reg* %603, i32 0, i32 0
  %RBP.i1272 = bitcast %union.anon* %604 to i64*
  %605 = load i64, i64* %RBP.i1272
  %606 = sub i64 %605, 112
  %607 = load i32, i32* %EDX.i1271
  %608 = zext i32 %607 to i64
  %609 = load i64, i64* %PC.i1270
  %610 = add i64 %609, 3
  store i64 %610, i64* %PC.i1270
  %611 = inttoptr i64 %606 to i32*
  store i32 %607, i32* %611
  store %struct.Memory* %loadMem_412107, %struct.Memory** %MEMORY
  %loadMem_41210a = load %struct.Memory*, %struct.Memory** %MEMORY
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %613 = getelementptr inbounds %struct.GPR, %struct.GPR* %612, i32 0, i32 33
  %614 = getelementptr inbounds %struct.Reg, %struct.Reg* %613, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %614 to i64*
  %615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %616 = getelementptr inbounds %struct.GPR, %struct.GPR* %615, i32 0, i32 7
  %617 = getelementptr inbounds %struct.Reg, %struct.Reg* %616, i32 0, i32 0
  %RDX.i1268 = bitcast %union.anon* %617 to i64*
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %619 = getelementptr inbounds %struct.GPR, %struct.GPR* %618, i32 0, i32 19
  %620 = getelementptr inbounds %struct.Reg, %struct.Reg* %619, i32 0, i32 0
  %R9.i1269 = bitcast %union.anon* %620 to i64*
  %621 = load i64, i64* %R9.i1269
  %622 = load i64, i64* %PC.i1267
  %623 = add i64 %622, 3
  store i64 %623, i64* %PC.i1267
  store i64 %621, i64* %RDX.i1268, align 8
  store %struct.Memory* %loadMem_41210a, %struct.Memory** %MEMORY
  %loadMem_41210d = load %struct.Memory*, %struct.Memory** %MEMORY
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %625 = getelementptr inbounds %struct.GPR, %struct.GPR* %624, i32 0, i32 33
  %626 = getelementptr inbounds %struct.Reg, %struct.Reg* %625, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %626 to i64*
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %628 = getelementptr inbounds %struct.GPR, %struct.GPR* %627, i32 0, i32 5
  %629 = getelementptr inbounds %struct.Reg, %struct.Reg* %628, i32 0, i32 0
  %RCX.i1265 = bitcast %union.anon* %629 to i64*
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %631 = getelementptr inbounds %struct.GPR, %struct.GPR* %630, i32 0, i32 15
  %632 = getelementptr inbounds %struct.Reg, %struct.Reg* %631, i32 0, i32 0
  %RBP.i1266 = bitcast %union.anon* %632 to i64*
  %633 = load i64, i64* %RBP.i1266
  %634 = sub i64 %633, 108
  %635 = load i64, i64* %PC.i1264
  %636 = add i64 %635, 3
  store i64 %636, i64* %PC.i1264
  %637 = inttoptr i64 %634 to i32*
  %638 = load i32, i32* %637
  %639 = zext i32 %638 to i64
  store i64 %639, i64* %RCX.i1265, align 8
  store %struct.Memory* %loadMem_41210d, %struct.Memory** %MEMORY
  %loadMem_412110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %641 = getelementptr inbounds %struct.GPR, %struct.GPR* %640, i32 0, i32 33
  %642 = getelementptr inbounds %struct.Reg, %struct.Reg* %641, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %642 to i64*
  %643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %644 = getelementptr inbounds %struct.GPR, %struct.GPR* %643, i32 0, i32 17
  %645 = getelementptr inbounds %struct.Reg, %struct.Reg* %644, i32 0, i32 0
  %R8D.i1262 = bitcast %union.anon* %645 to i32*
  %646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %647 = getelementptr inbounds %struct.GPR, %struct.GPR* %646, i32 0, i32 15
  %648 = getelementptr inbounds %struct.Reg, %struct.Reg* %647, i32 0, i32 0
  %RBP.i1263 = bitcast %union.anon* %648 to i64*
  %649 = bitcast i32* %R8D.i1262 to i64*
  %650 = load i64, i64* %RBP.i1263
  %651 = sub i64 %650, 112
  %652 = load i64, i64* %PC.i1261
  %653 = add i64 %652, 4
  store i64 %653, i64* %PC.i1261
  %654 = inttoptr i64 %651 to i32*
  %655 = load i32, i32* %654
  %656 = zext i32 %655 to i64
  store i64 %656, i64* %649, align 8
  store %struct.Memory* %loadMem_412110, %struct.Memory** %MEMORY
  %loadMem1_412114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %658 = getelementptr inbounds %struct.GPR, %struct.GPR* %657, i32 0, i32 33
  %659 = getelementptr inbounds %struct.Reg, %struct.Reg* %658, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %659 to i64*
  %660 = load i64, i64* %PC.i1260
  %661 = add i64 %660, 262012
  %662 = load i64, i64* %PC.i1260
  %663 = add i64 %662, 5
  %664 = load i64, i64* %PC.i1260
  %665 = add i64 %664, 5
  store i64 %665, i64* %PC.i1260
  %666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %667 = load i64, i64* %666, align 8
  %668 = add i64 %667, -8
  %669 = inttoptr i64 %668 to i64*
  store i64 %663, i64* %669
  store i64 %668, i64* %666, align 8
  %670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %661, i64* %670, align 8
  store %struct.Memory* %loadMem1_412114, %struct.Memory** %MEMORY
  %loadMem2_412114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_412114 = load i64, i64* %3
  %call2_412114 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_412114, %struct.Memory* %loadMem2_412114)
  store %struct.Memory* %call2_412114, %struct.Memory** %MEMORY
  br label %block_.L_412119

block_.L_412119:                                  ; preds = %routine_idivl__ecx.exit1280, %block_4120bb
  %loadMem_412119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %672 = getelementptr inbounds %struct.GPR, %struct.GPR* %671, i32 0, i32 33
  %673 = getelementptr inbounds %struct.Reg, %struct.Reg* %672, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %673 to i64*
  %674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %675 = getelementptr inbounds %struct.GPR, %struct.GPR* %674, i32 0, i32 15
  %676 = getelementptr inbounds %struct.Reg, %struct.Reg* %675, i32 0, i32 0
  %RBP.i1259 = bitcast %union.anon* %676 to i64*
  %677 = load i64, i64* %RBP.i1259
  %678 = sub i64 %677, 12
  %679 = load i64, i64* %PC.i1258
  %680 = add i64 %679, 4
  store i64 %680, i64* %PC.i1258
  %681 = inttoptr i64 %678 to i32*
  %682 = load i32, i32* %681
  %683 = sub i32 %682, 1
  %684 = icmp ult i32 %682, 1
  %685 = zext i1 %684 to i8
  %686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %685, i8* %686, align 1
  %687 = and i32 %683, 255
  %688 = call i32 @llvm.ctpop.i32(i32 %687)
  %689 = trunc i32 %688 to i8
  %690 = and i8 %689, 1
  %691 = xor i8 %690, 1
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %691, i8* %692, align 1
  %693 = xor i32 %682, 1
  %694 = xor i32 %693, %683
  %695 = lshr i32 %694, 4
  %696 = trunc i32 %695 to i8
  %697 = and i8 %696, 1
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %697, i8* %698, align 1
  %699 = icmp eq i32 %683, 0
  %700 = zext i1 %699 to i8
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %700, i8* %701, align 1
  %702 = lshr i32 %683, 31
  %703 = trunc i32 %702 to i8
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %703, i8* %704, align 1
  %705 = lshr i32 %682, 31
  %706 = xor i32 %702, %705
  %707 = add i32 %706, %705
  %708 = icmp eq i32 %707, 2
  %709 = zext i1 %708 to i8
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %709, i8* %710, align 1
  store %struct.Memory* %loadMem_412119, %struct.Memory** %MEMORY
  %loadMem_41211d = load %struct.Memory*, %struct.Memory** %MEMORY
  %711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %712 = getelementptr inbounds %struct.GPR, %struct.GPR* %711, i32 0, i32 33
  %713 = getelementptr inbounds %struct.Reg, %struct.Reg* %712, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %713 to i64*
  %714 = load i64, i64* %PC.i1257
  %715 = add i64 %714, 16
  %716 = load i64, i64* %PC.i1257
  %717 = add i64 %716, 6
  %718 = load i64, i64* %PC.i1257
  %719 = add i64 %718, 6
  store i64 %719, i64* %PC.i1257
  %720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %721 = load i8, i8* %720, align 1
  store i8 %721, i8* %BRANCH_TAKEN, align 1
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %723 = icmp ne i8 %721, 0
  %724 = select i1 %723, i64 %715, i64 %717
  store i64 %724, i64* %722, align 8
  store %struct.Memory* %loadMem_41211d, %struct.Memory** %MEMORY
  %loadBr_41211d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41211d = icmp eq i8 %loadBr_41211d, 1
  br i1 %cmpBr_41211d, label %block_.L_41212d, label %block_412123

block_412123:                                     ; preds = %block_.L_412119
  %loadMem_412123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 33
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %727 to i64*
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %729 = getelementptr inbounds %struct.GPR, %struct.GPR* %728, i32 0, i32 15
  %730 = getelementptr inbounds %struct.Reg, %struct.Reg* %729, i32 0, i32 0
  %RBP.i1256 = bitcast %union.anon* %730 to i64*
  %731 = load i64, i64* %RBP.i1256
  %732 = sub i64 %731, 12
  %733 = load i64, i64* %PC.i1255
  %734 = add i64 %733, 4
  store i64 %734, i64* %PC.i1255
  %735 = inttoptr i64 %732 to i32*
  %736 = load i32, i32* %735
  %737 = sub i32 %736, 2
  %738 = icmp ult i32 %736, 2
  %739 = zext i1 %738 to i8
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %739, i8* %740, align 1
  %741 = and i32 %737, 255
  %742 = call i32 @llvm.ctpop.i32(i32 %741)
  %743 = trunc i32 %742 to i8
  %744 = and i8 %743, 1
  %745 = xor i8 %744, 1
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %745, i8* %746, align 1
  %747 = xor i32 %736, 2
  %748 = xor i32 %747, %737
  %749 = lshr i32 %748, 4
  %750 = trunc i32 %749 to i8
  %751 = and i8 %750, 1
  %752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %751, i8* %752, align 1
  %753 = icmp eq i32 %737, 0
  %754 = zext i1 %753 to i8
  %755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %754, i8* %755, align 1
  %756 = lshr i32 %737, 31
  %757 = trunc i32 %756 to i8
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %757, i8* %758, align 1
  %759 = lshr i32 %736, 31
  %760 = xor i32 %756, %759
  %761 = add i32 %760, %759
  %762 = icmp eq i32 %761, 2
  %763 = zext i1 %762 to i8
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %763, i8* %764, align 1
  store %struct.Memory* %loadMem_412123, %struct.Memory** %MEMORY
  %loadMem_412127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %766 = getelementptr inbounds %struct.GPR, %struct.GPR* %765, i32 0, i32 33
  %767 = getelementptr inbounds %struct.Reg, %struct.Reg* %766, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %767 to i64*
  %768 = load i64, i64* %PC.i1254
  %769 = add i64 %768, 11
  %770 = load i64, i64* %PC.i1254
  %771 = add i64 %770, 6
  %772 = load i64, i64* %PC.i1254
  %773 = add i64 %772, 6
  store i64 %773, i64* %PC.i1254
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %775 = load i8, i8* %774, align 1
  %776 = icmp eq i8 %775, 0
  %777 = zext i1 %776 to i8
  store i8 %777, i8* %BRANCH_TAKEN, align 1
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %779 = select i1 %776, i64 %769, i64 %771
  store i64 %779, i64* %778, align 8
  store %struct.Memory* %loadMem_412127, %struct.Memory** %MEMORY
  %loadBr_412127 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412127 = icmp eq i8 %loadBr_412127, 1
  br i1 %cmpBr_412127, label %block_.L_412132, label %block_.L_41212d

block_.L_41212d:                                  ; preds = %block_412123, %block_.L_412119
  %loadMem_41212d = load %struct.Memory*, %struct.Memory** %MEMORY
  %780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %781 = getelementptr inbounds %struct.GPR, %struct.GPR* %780, i32 0, i32 33
  %782 = getelementptr inbounds %struct.Reg, %struct.Reg* %781, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %782 to i64*
  %783 = load i64, i64* %PC.i1253
  %784 = add i64 %783, 106
  %785 = load i64, i64* %PC.i1253
  %786 = add i64 %785, 5
  store i64 %786, i64* %PC.i1253
  %787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %784, i64* %787, align 8
  store %struct.Memory* %loadMem_41212d, %struct.Memory** %MEMORY
  br label %block_.L_412197

block_.L_412132:                                  ; preds = %block_412123
  %loadMem_412132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %789 = getelementptr inbounds %struct.GPR, %struct.GPR* %788, i32 0, i32 33
  %790 = getelementptr inbounds %struct.Reg, %struct.Reg* %789, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %790 to i64*
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %792 = getelementptr inbounds %struct.GPR, %struct.GPR* %791, i32 0, i32 11
  %793 = getelementptr inbounds %struct.Reg, %struct.Reg* %792, i32 0, i32 0
  %RDI.i1252 = bitcast %union.anon* %793 to i64*
  %794 = load i64, i64* %PC.i1251
  %795 = add i64 %794, 10
  store i64 %795, i64* %PC.i1251
  store i64 ptrtoint (%G__0x57a16e_type* @G__0x57a16e to i64), i64* %RDI.i1252, align 8
  store %struct.Memory* %loadMem_412132, %struct.Memory** %MEMORY
  %loadMem_41213c = load %struct.Memory*, %struct.Memory** %MEMORY
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %797 = getelementptr inbounds %struct.GPR, %struct.GPR* %796, i32 0, i32 33
  %798 = getelementptr inbounds %struct.Reg, %struct.Reg* %797, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %798 to i64*
  %799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %800 = getelementptr inbounds %struct.GPR, %struct.GPR* %799, i32 0, i32 9
  %801 = getelementptr inbounds %struct.Reg, %struct.Reg* %800, i32 0, i32 0
  %RSI.i1250 = bitcast %union.anon* %801 to i64*
  %802 = load i64, i64* %PC.i1249
  %803 = add i64 %802, 5
  store i64 %803, i64* %PC.i1249
  store i64 1746, i64* %RSI.i1250, align 8
  store %struct.Memory* %loadMem_41213c, %struct.Memory** %MEMORY
  %loadMem_412141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %805 = getelementptr inbounds %struct.GPR, %struct.GPR* %804, i32 0, i32 33
  %806 = getelementptr inbounds %struct.Reg, %struct.Reg* %805, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %806 to i64*
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %808 = getelementptr inbounds %struct.GPR, %struct.GPR* %807, i32 0, i32 7
  %809 = getelementptr inbounds %struct.Reg, %struct.Reg* %808, i32 0, i32 0
  %RDX.i1248 = bitcast %union.anon* %809 to i64*
  %810 = load i64, i64* %PC.i1247
  %811 = add i64 %810, 10
  store i64 %811, i64* %PC.i1247
  store i64 ptrtoint (%G__0x57a4f4_type* @G__0x57a4f4 to i64), i64* %RDX.i1248, align 8
  store %struct.Memory* %loadMem_412141, %struct.Memory** %MEMORY
  %loadMem_41214b = load %struct.Memory*, %struct.Memory** %MEMORY
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 33
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %814 to i64*
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 1
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %RAX.i1246 = bitcast %union.anon* %817 to i64*
  %818 = load i64, i64* %PC.i1245
  %819 = add i64 %818, 5
  store i64 %819, i64* %PC.i1245
  store i64 20, i64* %RAX.i1246, align 8
  store %struct.Memory* %loadMem_41214b, %struct.Memory** %MEMORY
  %loadMem_412150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %821 = getelementptr inbounds %struct.GPR, %struct.GPR* %820, i32 0, i32 33
  %822 = getelementptr inbounds %struct.Reg, %struct.Reg* %821, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %822 to i64*
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %824 = getelementptr inbounds %struct.GPR, %struct.GPR* %823, i32 0, i32 5
  %825 = getelementptr inbounds %struct.Reg, %struct.Reg* %824, i32 0, i32 0
  %RCX.i1243 = bitcast %union.anon* %825 to i64*
  %826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %827 = getelementptr inbounds %struct.GPR, %struct.GPR* %826, i32 0, i32 15
  %828 = getelementptr inbounds %struct.Reg, %struct.Reg* %827, i32 0, i32 0
  %RBP.i1244 = bitcast %union.anon* %828 to i64*
  %829 = load i64, i64* %RBP.i1244
  %830 = sub i64 %829, 8
  %831 = load i64, i64* %PC.i1242
  %832 = add i64 %831, 3
  store i64 %832, i64* %PC.i1242
  %833 = inttoptr i64 %830 to i32*
  %834 = load i32, i32* %833
  %835 = zext i32 %834 to i64
  store i64 %835, i64* %RCX.i1243, align 8
  store %struct.Memory* %loadMem_412150, %struct.Memory** %MEMORY
  %loadMem_412153 = load %struct.Memory*, %struct.Memory** %MEMORY
  %836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %837 = getelementptr inbounds %struct.GPR, %struct.GPR* %836, i32 0, i32 33
  %838 = getelementptr inbounds %struct.Reg, %struct.Reg* %837, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %838 to i64*
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %840 = getelementptr inbounds %struct.GPR, %struct.GPR* %839, i32 0, i32 1
  %841 = getelementptr inbounds %struct.Reg, %struct.Reg* %840, i32 0, i32 0
  %EAX.i1240 = bitcast %union.anon* %841 to i32*
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %843 = getelementptr inbounds %struct.GPR, %struct.GPR* %842, i32 0, i32 15
  %844 = getelementptr inbounds %struct.Reg, %struct.Reg* %843, i32 0, i32 0
  %RBP.i1241 = bitcast %union.anon* %844 to i64*
  %845 = load i64, i64* %RBP.i1241
  %846 = sub i64 %845, 116
  %847 = load i32, i32* %EAX.i1240
  %848 = zext i32 %847 to i64
  %849 = load i64, i64* %PC.i1239
  %850 = add i64 %849, 3
  store i64 %850, i64* %PC.i1239
  %851 = inttoptr i64 %846 to i32*
  store i32 %847, i32* %851
  store %struct.Memory* %loadMem_412153, %struct.Memory** %MEMORY
  %loadMem_412156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 33
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %854 to i64*
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 5
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %ECX.i1237 = bitcast %union.anon* %857 to i32*
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 1
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %RAX.i1238 = bitcast %union.anon* %860 to i64*
  %861 = load i32, i32* %ECX.i1237
  %862 = zext i32 %861 to i64
  %863 = load i64, i64* %PC.i1236
  %864 = add i64 %863, 2
  store i64 %864, i64* %PC.i1236
  %865 = and i64 %862, 4294967295
  store i64 %865, i64* %RAX.i1238, align 8
  store %struct.Memory* %loadMem_412156, %struct.Memory** %MEMORY
  %loadMem_412158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %867 = getelementptr inbounds %struct.GPR, %struct.GPR* %866, i32 0, i32 33
  %868 = getelementptr inbounds %struct.Reg, %struct.Reg* %867, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %868 to i64*
  %869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %870 = getelementptr inbounds %struct.GPR, %struct.GPR* %869, i32 0, i32 7
  %871 = getelementptr inbounds %struct.Reg, %struct.Reg* %870, i32 0, i32 0
  %RDX.i1234 = bitcast %union.anon* %871 to i64*
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %873 = getelementptr inbounds %struct.GPR, %struct.GPR* %872, i32 0, i32 15
  %874 = getelementptr inbounds %struct.Reg, %struct.Reg* %873, i32 0, i32 0
  %RBP.i1235 = bitcast %union.anon* %874 to i64*
  %875 = load i64, i64* %RBP.i1235
  %876 = sub i64 %875, 128
  %877 = load i64, i64* %RDX.i1234
  %878 = load i64, i64* %PC.i1233
  %879 = add i64 %878, 4
  store i64 %879, i64* %PC.i1233
  %880 = inttoptr i64 %876 to i64*
  store i64 %877, i64* %880
  store %struct.Memory* %loadMem_412158, %struct.Memory** %MEMORY
  %loadMem_41215c = load %struct.Memory*, %struct.Memory** %MEMORY
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %882 = getelementptr inbounds %struct.GPR, %struct.GPR* %881, i32 0, i32 33
  %883 = getelementptr inbounds %struct.Reg, %struct.Reg* %882, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %883 to i64*
  %884 = load i64, i64* %PC.i1232
  %885 = add i64 %884, 1
  store i64 %885, i64* %PC.i1232
  %886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %888 = bitcast %union.anon* %887 to i32*
  %889 = load i32, i32* %888, align 8
  %890 = sext i32 %889 to i64
  %891 = lshr i64 %890, 32
  store i64 %891, i64* %886, align 8
  store %struct.Memory* %loadMem_41215c, %struct.Memory** %MEMORY
  %loadMem_41215d = load %struct.Memory*, %struct.Memory** %MEMORY
  %892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %893 = getelementptr inbounds %struct.GPR, %struct.GPR* %892, i32 0, i32 33
  %894 = getelementptr inbounds %struct.Reg, %struct.Reg* %893, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %894 to i64*
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %896 = getelementptr inbounds %struct.GPR, %struct.GPR* %895, i32 0, i32 5
  %897 = getelementptr inbounds %struct.Reg, %struct.Reg* %896, i32 0, i32 0
  %RCX.i1230 = bitcast %union.anon* %897 to i64*
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %899 = getelementptr inbounds %struct.GPR, %struct.GPR* %898, i32 0, i32 15
  %900 = getelementptr inbounds %struct.Reg, %struct.Reg* %899, i32 0, i32 0
  %RBP.i1231 = bitcast %union.anon* %900 to i64*
  %901 = load i64, i64* %RBP.i1231
  %902 = sub i64 %901, 116
  %903 = load i64, i64* %PC.i1229
  %904 = add i64 %903, 3
  store i64 %904, i64* %PC.i1229
  %905 = inttoptr i64 %902 to i32*
  %906 = load i32, i32* %905
  %907 = zext i32 %906 to i64
  store i64 %907, i64* %RCX.i1230, align 8
  store %struct.Memory* %loadMem_41215d, %struct.Memory** %MEMORY
  %loadMem_412160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 33
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %910 to i64*
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %912 = getelementptr inbounds %struct.GPR, %struct.GPR* %911, i32 0, i32 5
  %913 = getelementptr inbounds %struct.Reg, %struct.Reg* %912, i32 0, i32 0
  %ECX.i1225 = bitcast %union.anon* %913 to i32*
  %914 = load i32, i32* %ECX.i1225
  %915 = zext i32 %914 to i64
  %916 = load i64, i64* %PC.i1224
  %917 = add i64 %916, 2
  store i64 %917, i64* %PC.i1224
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %919 = bitcast %union.anon* %918 to i32*
  %920 = load i32, i32* %919, align 8
  %921 = zext i32 %920 to i64
  %922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %923 = bitcast %union.anon* %922 to i32*
  %924 = load i32, i32* %923, align 8
  %925 = zext i32 %924 to i64
  %926 = shl i64 %915, 32
  %927 = ashr exact i64 %926, 32
  %928 = shl i64 %925, 32
  %929 = or i64 %928, %921
  %930 = sdiv i64 %929, %927
  %931 = shl i64 %930, 32
  %932 = ashr exact i64 %931, 32
  %933 = icmp eq i64 %930, %932
  br i1 %933, label %938, label %934

; <label>:934:                                    ; preds = %block_.L_412132
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %936 = load i64, i64* %935, align 8
  %937 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %936, %struct.Memory* %loadMem_412160)
  br label %routine_idivl__ecx.exit1226

; <label>:938:                                    ; preds = %block_.L_412132
  %939 = srem i64 %929, %927
  %940 = getelementptr inbounds %union.anon, %union.anon* %918, i64 0, i32 0
  %941 = and i64 %930, 4294967295
  store i64 %941, i64* %940, align 8
  %942 = getelementptr inbounds %union.anon, %union.anon* %922, i64 0, i32 0
  %943 = and i64 %939, 4294967295
  store i64 %943, i64* %942, align 8
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %944, align 1
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %945, align 1
  %946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %946, align 1
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %947, align 1
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %948, align 1
  %949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %949, align 1
  br label %routine_idivl__ecx.exit1226

routine_idivl__ecx.exit1226:                      ; preds = %934, %938
  %950 = phi %struct.Memory* [ %937, %934 ], [ %loadMem_412160, %938 ]
  store %struct.Memory* %950, %struct.Memory** %MEMORY
  %loadMem_412162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %952 = getelementptr inbounds %struct.GPR, %struct.GPR* %951, i32 0, i32 33
  %953 = getelementptr inbounds %struct.Reg, %struct.Reg* %952, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %953 to i64*
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %955 = getelementptr inbounds %struct.GPR, %struct.GPR* %954, i32 0, i32 1
  %956 = getelementptr inbounds %struct.Reg, %struct.Reg* %955, i32 0, i32 0
  %RAX.i1223 = bitcast %union.anon* %956 to i64*
  %957 = load i64, i64* %RAX.i1223
  %958 = load i64, i64* %PC.i1222
  %959 = add i64 %958, 3
  store i64 %959, i64* %PC.i1222
  %960 = trunc i64 %957 to i32
  %961 = sub i32 %960, 1
  %962 = zext i32 %961 to i64
  store i64 %962, i64* %RAX.i1223, align 8
  %963 = icmp ult i32 %960, 1
  %964 = zext i1 %963 to i8
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %964, i8* %965, align 1
  %966 = and i32 %961, 255
  %967 = call i32 @llvm.ctpop.i32(i32 %966)
  %968 = trunc i32 %967 to i8
  %969 = and i8 %968, 1
  %970 = xor i8 %969, 1
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %970, i8* %971, align 1
  %972 = xor i64 1, %957
  %973 = trunc i64 %972 to i32
  %974 = xor i32 %973, %961
  %975 = lshr i32 %974, 4
  %976 = trunc i32 %975 to i8
  %977 = and i8 %976, 1
  %978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %977, i8* %978, align 1
  %979 = icmp eq i32 %961, 0
  %980 = zext i1 %979 to i8
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %980, i8* %981, align 1
  %982 = lshr i32 %961, 31
  %983 = trunc i32 %982 to i8
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %983, i8* %984, align 1
  %985 = lshr i32 %960, 31
  %986 = xor i32 %982, %985
  %987 = add i32 %986, %985
  %988 = icmp eq i32 %987, 2
  %989 = zext i1 %988 to i8
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %989, i8* %990, align 1
  store %struct.Memory* %loadMem_412162, %struct.Memory** %MEMORY
  %loadMem_412165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %992 = getelementptr inbounds %struct.GPR, %struct.GPR* %991, i32 0, i32 33
  %993 = getelementptr inbounds %struct.Reg, %struct.Reg* %992, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %993 to i64*
  %994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %995 = getelementptr inbounds %struct.GPR, %struct.GPR* %994, i32 0, i32 17
  %996 = getelementptr inbounds %struct.Reg, %struct.Reg* %995, i32 0, i32 0
  %R8D.i1220 = bitcast %union.anon* %996 to i32*
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %998 = getelementptr inbounds %struct.GPR, %struct.GPR* %997, i32 0, i32 15
  %999 = getelementptr inbounds %struct.Reg, %struct.Reg* %998, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %999 to i64*
  %1000 = bitcast i32* %R8D.i1220 to i64*
  %1001 = load i64, i64* %RBP.i1221
  %1002 = sub i64 %1001, 8
  %1003 = load i64, i64* %PC.i1219
  %1004 = add i64 %1003, 4
  store i64 %1004, i64* %PC.i1219
  %1005 = inttoptr i64 %1002 to i32*
  %1006 = load i32, i32* %1005
  %1007 = zext i32 %1006 to i64
  store i64 %1007, i64* %1000, align 8
  store %struct.Memory* %loadMem_412165, %struct.Memory** %MEMORY
  %loadMem_412169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1009 = getelementptr inbounds %struct.GPR, %struct.GPR* %1008, i32 0, i32 33
  %1010 = getelementptr inbounds %struct.Reg, %struct.Reg* %1009, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %1010 to i64*
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1012 = getelementptr inbounds %struct.GPR, %struct.GPR* %1011, i32 0, i32 1
  %1013 = getelementptr inbounds %struct.Reg, %struct.Reg* %1012, i32 0, i32 0
  %EAX.i1217 = bitcast %union.anon* %1013 to i32*
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1015 = getelementptr inbounds %struct.GPR, %struct.GPR* %1014, i32 0, i32 15
  %1016 = getelementptr inbounds %struct.Reg, %struct.Reg* %1015, i32 0, i32 0
  %RBP.i1218 = bitcast %union.anon* %1016 to i64*
  %1017 = load i64, i64* %RBP.i1218
  %1018 = sub i64 %1017, 132
  %1019 = load i32, i32* %EAX.i1217
  %1020 = zext i32 %1019 to i64
  %1021 = load i64, i64* %PC.i1216
  %1022 = add i64 %1021, 6
  store i64 %1022, i64* %PC.i1216
  %1023 = inttoptr i64 %1018 to i32*
  store i32 %1019, i32* %1023
  store %struct.Memory* %loadMem_412169, %struct.Memory** %MEMORY
  %loadMem_41216f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1025 = getelementptr inbounds %struct.GPR, %struct.GPR* %1024, i32 0, i32 33
  %1026 = getelementptr inbounds %struct.Reg, %struct.Reg* %1025, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %1026 to i64*
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1028 = getelementptr inbounds %struct.GPR, %struct.GPR* %1027, i32 0, i32 17
  %1029 = getelementptr inbounds %struct.Reg, %struct.Reg* %1028, i32 0, i32 0
  %R8D.i1214 = bitcast %union.anon* %1029 to i32*
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1031 = getelementptr inbounds %struct.GPR, %struct.GPR* %1030, i32 0, i32 1
  %1032 = getelementptr inbounds %struct.Reg, %struct.Reg* %1031, i32 0, i32 0
  %RAX.i1215 = bitcast %union.anon* %1032 to i64*
  %1033 = load i32, i32* %R8D.i1214
  %1034 = zext i32 %1033 to i64
  %1035 = load i64, i64* %PC.i1213
  %1036 = add i64 %1035, 3
  store i64 %1036, i64* %PC.i1213
  %1037 = and i64 %1034, 4294967295
  store i64 %1037, i64* %RAX.i1215, align 8
  store %struct.Memory* %loadMem_41216f, %struct.Memory** %MEMORY
  %loadMem_412172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1039 = getelementptr inbounds %struct.GPR, %struct.GPR* %1038, i32 0, i32 33
  %1040 = getelementptr inbounds %struct.Reg, %struct.Reg* %1039, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %1040 to i64*
  %1041 = load i64, i64* %PC.i1212
  %1042 = add i64 %1041, 1
  store i64 %1042, i64* %PC.i1212
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1045 = bitcast %union.anon* %1044 to i32*
  %1046 = load i32, i32* %1045, align 8
  %1047 = sext i32 %1046 to i64
  %1048 = lshr i64 %1047, 32
  store i64 %1048, i64* %1043, align 8
  store %struct.Memory* %loadMem_412172, %struct.Memory** %MEMORY
  %loadMem_412173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1050 = getelementptr inbounds %struct.GPR, %struct.GPR* %1049, i32 0, i32 33
  %1051 = getelementptr inbounds %struct.Reg, %struct.Reg* %1050, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %1051 to i64*
  %1052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1053 = getelementptr inbounds %struct.GPR, %struct.GPR* %1052, i32 0, i32 5
  %1054 = getelementptr inbounds %struct.Reg, %struct.Reg* %1053, i32 0, i32 0
  %ECX.i1208 = bitcast %union.anon* %1054 to i32*
  %1055 = load i32, i32* %ECX.i1208
  %1056 = zext i32 %1055 to i64
  %1057 = load i64, i64* %PC.i1207
  %1058 = add i64 %1057, 2
  store i64 %1058, i64* %PC.i1207
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1060 = bitcast %union.anon* %1059 to i32*
  %1061 = load i32, i32* %1060, align 8
  %1062 = zext i32 %1061 to i64
  %1063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1064 = bitcast %union.anon* %1063 to i32*
  %1065 = load i32, i32* %1064, align 8
  %1066 = zext i32 %1065 to i64
  %1067 = shl i64 %1056, 32
  %1068 = ashr exact i64 %1067, 32
  %1069 = shl i64 %1066, 32
  %1070 = or i64 %1069, %1062
  %1071 = sdiv i64 %1070, %1068
  %1072 = shl i64 %1071, 32
  %1073 = ashr exact i64 %1072, 32
  %1074 = icmp eq i64 %1071, %1073
  br i1 %1074, label %1079, label %1075

; <label>:1075:                                   ; preds = %routine_idivl__ecx.exit1226
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1077 = load i64, i64* %1076, align 8
  %1078 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1077, %struct.Memory* %loadMem_412173)
  br label %routine_idivl__ecx.exit

; <label>:1079:                                   ; preds = %routine_idivl__ecx.exit1226
  %1080 = srem i64 %1070, %1068
  %1081 = getelementptr inbounds %union.anon, %union.anon* %1059, i64 0, i32 0
  %1082 = and i64 %1071, 4294967295
  store i64 %1082, i64* %1081, align 8
  %1083 = getelementptr inbounds %union.anon, %union.anon* %1063, i64 0, i32 0
  %1084 = and i64 %1080, 4294967295
  store i64 %1084, i64* %1083, align 8
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1085, align 1
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1086, align 1
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1087, align 1
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1088, align 1
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1089, align 1
  %1090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1090, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %1075, %1079
  %1091 = phi %struct.Memory* [ %1078, %1075 ], [ %loadMem_412173, %1079 ]
  store %struct.Memory* %1091, %struct.Memory** %MEMORY
  %loadMem_412175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 33
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %1094 to i64*
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1096 = getelementptr inbounds %struct.GPR, %struct.GPR* %1095, i32 0, i32 7
  %1097 = getelementptr inbounds %struct.Reg, %struct.Reg* %1096, i32 0, i32 0
  %RDX.i1206 = bitcast %union.anon* %1097 to i64*
  %1098 = load i64, i64* %RDX.i1206
  %1099 = load i64, i64* %PC.i1205
  %1100 = add i64 %1099, 3
  store i64 %1100, i64* %PC.i1205
  %1101 = trunc i64 %1098 to i32
  %1102 = sub i32 %1101, 1
  %1103 = zext i32 %1102 to i64
  store i64 %1103, i64* %RDX.i1206, align 8
  %1104 = icmp ult i32 %1101, 1
  %1105 = zext i1 %1104 to i8
  %1106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1105, i8* %1106, align 1
  %1107 = and i32 %1102, 255
  %1108 = call i32 @llvm.ctpop.i32(i32 %1107)
  %1109 = trunc i32 %1108 to i8
  %1110 = and i8 %1109, 1
  %1111 = xor i8 %1110, 1
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1111, i8* %1112, align 1
  %1113 = xor i64 1, %1098
  %1114 = trunc i64 %1113 to i32
  %1115 = xor i32 %1114, %1102
  %1116 = lshr i32 %1115, 4
  %1117 = trunc i32 %1116 to i8
  %1118 = and i8 %1117, 1
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1118, i8* %1119, align 1
  %1120 = icmp eq i32 %1102, 0
  %1121 = zext i1 %1120 to i8
  %1122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1121, i8* %1122, align 1
  %1123 = lshr i32 %1102, 31
  %1124 = trunc i32 %1123 to i8
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1124, i8* %1125, align 1
  %1126 = lshr i32 %1101, 31
  %1127 = xor i32 %1123, %1126
  %1128 = add i32 %1127, %1126
  %1129 = icmp eq i32 %1128, 2
  %1130 = zext i1 %1129 to i8
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1130, i8* %1131, align 1
  store %struct.Memory* %loadMem_412175, %struct.Memory** %MEMORY
  %loadMem_412178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1133 = getelementptr inbounds %struct.GPR, %struct.GPR* %1132, i32 0, i32 33
  %1134 = getelementptr inbounds %struct.Reg, %struct.Reg* %1133, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %1134 to i64*
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 15
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %RBP.i1203 = bitcast %union.anon* %1137 to i64*
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1139 = getelementptr inbounds %struct.GPR, %struct.GPR* %1138, i32 0, i32 19
  %1140 = getelementptr inbounds %struct.Reg, %struct.Reg* %1139, i32 0, i32 0
  %R9.i1204 = bitcast %union.anon* %1140 to i64*
  %1141 = load i64, i64* %RBP.i1203
  %1142 = sub i64 %1141, 128
  %1143 = load i64, i64* %PC.i1202
  %1144 = add i64 %1143, 4
  store i64 %1144, i64* %PC.i1202
  %1145 = inttoptr i64 %1142 to i64*
  %1146 = load i64, i64* %1145
  store i64 %1146, i64* %R9.i1204, align 8
  store %struct.Memory* %loadMem_412178, %struct.Memory** %MEMORY
  %loadMem_41217c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1148 = getelementptr inbounds %struct.GPR, %struct.GPR* %1147, i32 0, i32 33
  %1149 = getelementptr inbounds %struct.Reg, %struct.Reg* %1148, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %1149 to i64*
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1151 = getelementptr inbounds %struct.GPR, %struct.GPR* %1150, i32 0, i32 7
  %1152 = getelementptr inbounds %struct.Reg, %struct.Reg* %1151, i32 0, i32 0
  %EDX.i1200 = bitcast %union.anon* %1152 to i32*
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1154 = getelementptr inbounds %struct.GPR, %struct.GPR* %1153, i32 0, i32 15
  %1155 = getelementptr inbounds %struct.Reg, %struct.Reg* %1154, i32 0, i32 0
  %RBP.i1201 = bitcast %union.anon* %1155 to i64*
  %1156 = load i64, i64* %RBP.i1201
  %1157 = sub i64 %1156, 136
  %1158 = load i32, i32* %EDX.i1200
  %1159 = zext i32 %1158 to i64
  %1160 = load i64, i64* %PC.i1199
  %1161 = add i64 %1160, 6
  store i64 %1161, i64* %PC.i1199
  %1162 = inttoptr i64 %1157 to i32*
  store i32 %1158, i32* %1162
  store %struct.Memory* %loadMem_41217c, %struct.Memory** %MEMORY
  %loadMem_412182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1164 = getelementptr inbounds %struct.GPR, %struct.GPR* %1163, i32 0, i32 33
  %1165 = getelementptr inbounds %struct.Reg, %struct.Reg* %1164, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %1165 to i64*
  %1166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1167 = getelementptr inbounds %struct.GPR, %struct.GPR* %1166, i32 0, i32 7
  %1168 = getelementptr inbounds %struct.Reg, %struct.Reg* %1167, i32 0, i32 0
  %RDX.i1198 = bitcast %union.anon* %1168 to i64*
  %1169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1170 = getelementptr inbounds %struct.GPR, %struct.GPR* %1169, i32 0, i32 19
  %1171 = getelementptr inbounds %struct.Reg, %struct.Reg* %1170, i32 0, i32 0
  %R9.i = bitcast %union.anon* %1171 to i64*
  %1172 = load i64, i64* %R9.i
  %1173 = load i64, i64* %PC.i1197
  %1174 = add i64 %1173, 3
  store i64 %1174, i64* %PC.i1197
  store i64 %1172, i64* %RDX.i1198, align 8
  store %struct.Memory* %loadMem_412182, %struct.Memory** %MEMORY
  %loadMem_412185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1176 = getelementptr inbounds %struct.GPR, %struct.GPR* %1175, i32 0, i32 33
  %1177 = getelementptr inbounds %struct.Reg, %struct.Reg* %1176, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %1177 to i64*
  %1178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1179 = getelementptr inbounds %struct.GPR, %struct.GPR* %1178, i32 0, i32 5
  %1180 = getelementptr inbounds %struct.Reg, %struct.Reg* %1179, i32 0, i32 0
  %RCX.i1195 = bitcast %union.anon* %1180 to i64*
  %1181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1182 = getelementptr inbounds %struct.GPR, %struct.GPR* %1181, i32 0, i32 15
  %1183 = getelementptr inbounds %struct.Reg, %struct.Reg* %1182, i32 0, i32 0
  %RBP.i1196 = bitcast %union.anon* %1183 to i64*
  %1184 = load i64, i64* %RBP.i1196
  %1185 = sub i64 %1184, 132
  %1186 = load i64, i64* %PC.i1194
  %1187 = add i64 %1186, 6
  store i64 %1187, i64* %PC.i1194
  %1188 = inttoptr i64 %1185 to i32*
  %1189 = load i32, i32* %1188
  %1190 = zext i32 %1189 to i64
  store i64 %1190, i64* %RCX.i1195, align 8
  store %struct.Memory* %loadMem_412185, %struct.Memory** %MEMORY
  %loadMem_41218b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1192 = getelementptr inbounds %struct.GPR, %struct.GPR* %1191, i32 0, i32 33
  %1193 = getelementptr inbounds %struct.Reg, %struct.Reg* %1192, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %1193 to i64*
  %1194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1195 = getelementptr inbounds %struct.GPR, %struct.GPR* %1194, i32 0, i32 17
  %1196 = getelementptr inbounds %struct.Reg, %struct.Reg* %1195, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %1196 to i32*
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1198 = getelementptr inbounds %struct.GPR, %struct.GPR* %1197, i32 0, i32 15
  %1199 = getelementptr inbounds %struct.Reg, %struct.Reg* %1198, i32 0, i32 0
  %RBP.i1193 = bitcast %union.anon* %1199 to i64*
  %1200 = bitcast i32* %R8D.i to i64*
  %1201 = load i64, i64* %RBP.i1193
  %1202 = sub i64 %1201, 136
  %1203 = load i64, i64* %PC.i1192
  %1204 = add i64 %1203, 7
  store i64 %1204, i64* %PC.i1192
  %1205 = inttoptr i64 %1202 to i32*
  %1206 = load i32, i32* %1205
  %1207 = zext i32 %1206 to i64
  store i64 %1207, i64* %1200, align 8
  store %struct.Memory* %loadMem_41218b, %struct.Memory** %MEMORY
  %loadMem1_412192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1209 = getelementptr inbounds %struct.GPR, %struct.GPR* %1208, i32 0, i32 33
  %1210 = getelementptr inbounds %struct.Reg, %struct.Reg* %1209, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %1210 to i64*
  %1211 = load i64, i64* %PC.i1191
  %1212 = add i64 %1211, 261886
  %1213 = load i64, i64* %PC.i1191
  %1214 = add i64 %1213, 5
  %1215 = load i64, i64* %PC.i1191
  %1216 = add i64 %1215, 5
  store i64 %1216, i64* %PC.i1191
  %1217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1218 = load i64, i64* %1217, align 8
  %1219 = add i64 %1218, -8
  %1220 = inttoptr i64 %1219 to i64*
  store i64 %1214, i64* %1220
  store i64 %1219, i64* %1217, align 8
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1212, i64* %1221, align 8
  store %struct.Memory* %loadMem1_412192, %struct.Memory** %MEMORY
  %loadMem2_412192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_412192 = load i64, i64* %3
  %call2_412192 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_412192, %struct.Memory* %loadMem2_412192)
  store %struct.Memory* %call2_412192, %struct.Memory** %MEMORY
  br label %block_.L_412197

block_.L_412197:                                  ; preds = %routine_idivl__ecx.exit, %block_.L_41212d
  %loadMem_412197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1223 = getelementptr inbounds %struct.GPR, %struct.GPR* %1222, i32 0, i32 33
  %1224 = getelementptr inbounds %struct.Reg, %struct.Reg* %1223, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %1224 to i64*
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1226 = getelementptr inbounds %struct.GPR, %struct.GPR* %1225, i32 0, i32 15
  %1227 = getelementptr inbounds %struct.Reg, %struct.Reg* %1226, i32 0, i32 0
  %RBP.i1190 = bitcast %union.anon* %1227 to i64*
  %1228 = load i64, i64* %RBP.i1190
  %1229 = sub i64 %1228, 24
  %1230 = load i64, i64* %PC.i1189
  %1231 = add i64 %1230, 5
  store i64 %1231, i64* %PC.i1189
  %1232 = inttoptr i64 %1229 to i64*
  %1233 = load i64, i64* %1232
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1234, align 1
  %1235 = trunc i64 %1233 to i32
  %1236 = and i32 %1235, 255
  %1237 = call i32 @llvm.ctpop.i32(i32 %1236)
  %1238 = trunc i32 %1237 to i8
  %1239 = and i8 %1238, 1
  %1240 = xor i8 %1239, 1
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1240, i8* %1241, align 1
  %1242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1242, align 1
  %1243 = icmp eq i64 %1233, 0
  %1244 = zext i1 %1243 to i8
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1244, i8* %1245, align 1
  %1246 = lshr i64 %1233, 63
  %1247 = trunc i64 %1246 to i8
  %1248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1247, i8* %1248, align 1
  %1249 = lshr i64 %1233, 63
  %1250 = xor i64 %1246, %1249
  %1251 = add i64 %1250, %1249
  %1252 = icmp eq i64 %1251, 2
  %1253 = zext i1 %1252 to i8
  %1254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1253, i8* %1254, align 1
  store %struct.Memory* %loadMem_412197, %struct.Memory** %MEMORY
  %loadMem_41219c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 33
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %1257 to i64*
  %1258 = load i64, i64* %PC.i1188
  %1259 = add i64 %1258, 48
  %1260 = load i64, i64* %PC.i1188
  %1261 = add i64 %1260, 6
  %1262 = load i64, i64* %PC.i1188
  %1263 = add i64 %1262, 6
  store i64 %1263, i64* %PC.i1188
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1265 = load i8, i8* %1264, align 1
  %1266 = icmp eq i8 %1265, 0
  %1267 = zext i1 %1266 to i8
  store i8 %1267, i8* %BRANCH_TAKEN, align 1
  %1268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1269 = select i1 %1266, i64 %1259, i64 %1261
  store i64 %1269, i64* %1268, align 8
  store %struct.Memory* %loadMem_41219c, %struct.Memory** %MEMORY
  %loadBr_41219c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41219c = icmp eq i8 %loadBr_41219c, 1
  br i1 %cmpBr_41219c, label %block_.L_4121cc, label %block_4121a2

block_4121a2:                                     ; preds = %block_.L_412197
  %loadMem_4121a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1271 = getelementptr inbounds %struct.GPR, %struct.GPR* %1270, i32 0, i32 33
  %1272 = getelementptr inbounds %struct.Reg, %struct.Reg* %1271, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %1272 to i64*
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1274 = getelementptr inbounds %struct.GPR, %struct.GPR* %1273, i32 0, i32 7
  %1275 = getelementptr inbounds %struct.Reg, %struct.Reg* %1274, i32 0, i32 0
  %EDX.i1186 = bitcast %union.anon* %1275 to i32*
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1277 = getelementptr inbounds %struct.GPR, %struct.GPR* %1276, i32 0, i32 7
  %1278 = getelementptr inbounds %struct.Reg, %struct.Reg* %1277, i32 0, i32 0
  %RDX.i1187 = bitcast %union.anon* %1278 to i64*
  %1279 = load i64, i64* %RDX.i1187
  %1280 = load i32, i32* %EDX.i1186
  %1281 = zext i32 %1280 to i64
  %1282 = load i64, i64* %PC.i1185
  %1283 = add i64 %1282, 2
  store i64 %1283, i64* %PC.i1185
  %1284 = xor i64 %1281, %1279
  %1285 = trunc i64 %1284 to i32
  %1286 = and i64 %1284, 4294967295
  store i64 %1286, i64* %RDX.i1187, align 8
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1287, align 1
  %1288 = and i32 %1285, 255
  %1289 = call i32 @llvm.ctpop.i32(i32 %1288)
  %1290 = trunc i32 %1289 to i8
  %1291 = and i8 %1290, 1
  %1292 = xor i8 %1291, 1
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1292, i8* %1293, align 1
  %1294 = icmp eq i32 %1285, 0
  %1295 = zext i1 %1294 to i8
  %1296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1295, i8* %1296, align 1
  %1297 = lshr i32 %1285, 31
  %1298 = trunc i32 %1297 to i8
  %1299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1298, i8* %1299, align 1
  %1300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1300, align 1
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1301, align 1
  store %struct.Memory* %loadMem_4121a2, %struct.Memory** %MEMORY
  %loadMem_4121a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1303 = getelementptr inbounds %struct.GPR, %struct.GPR* %1302, i32 0, i32 33
  %1304 = getelementptr inbounds %struct.Reg, %struct.Reg* %1303, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %1304 to i64*
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1306 = getelementptr inbounds %struct.GPR, %struct.GPR* %1305, i32 0, i32 11
  %1307 = getelementptr inbounds %struct.Reg, %struct.Reg* %1306, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %1307 to i64*
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1309 = getelementptr inbounds %struct.GPR, %struct.GPR* %1308, i32 0, i32 15
  %1310 = getelementptr inbounds %struct.Reg, %struct.Reg* %1309, i32 0, i32 0
  %RBP.i1184 = bitcast %union.anon* %1310 to i64*
  %1311 = load i64, i64* %RBP.i1184
  %1312 = sub i64 %1311, 8
  %1313 = load i64, i64* %PC.i1183
  %1314 = add i64 %1313, 3
  store i64 %1314, i64* %PC.i1183
  %1315 = inttoptr i64 %1312 to i32*
  %1316 = load i32, i32* %1315
  %1317 = zext i32 %1316 to i64
  store i64 %1317, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_4121a4, %struct.Memory** %MEMORY
  %loadMem_4121a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1319 = getelementptr inbounds %struct.GPR, %struct.GPR* %1318, i32 0, i32 33
  %1320 = getelementptr inbounds %struct.Reg, %struct.Reg* %1319, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %1320 to i64*
  %1321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1322 = getelementptr inbounds %struct.GPR, %struct.GPR* %1321, i32 0, i32 9
  %1323 = getelementptr inbounds %struct.Reg, %struct.Reg* %1322, i32 0, i32 0
  %RSI.i1181 = bitcast %union.anon* %1323 to i64*
  %1324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1325 = getelementptr inbounds %struct.GPR, %struct.GPR* %1324, i32 0, i32 15
  %1326 = getelementptr inbounds %struct.Reg, %struct.Reg* %1325, i32 0, i32 0
  %RBP.i1182 = bitcast %union.anon* %1326 to i64*
  %1327 = load i64, i64* %RBP.i1182
  %1328 = sub i64 %1327, 12
  %1329 = load i64, i64* %PC.i1180
  %1330 = add i64 %1329, 3
  store i64 %1330, i64* %PC.i1180
  %1331 = inttoptr i64 %1328 to i32*
  %1332 = load i32, i32* %1331
  %1333 = zext i32 %1332 to i64
  store i64 %1333, i64* %RSI.i1181, align 8
  store %struct.Memory* %loadMem_4121a7, %struct.Memory** %MEMORY
  %loadMem1_4121aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1335 = getelementptr inbounds %struct.GPR, %struct.GPR* %1334, i32 0, i32 33
  %1336 = getelementptr inbounds %struct.Reg, %struct.Reg* %1335, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %1336 to i64*
  %1337 = load i64, i64* %PC.i1179
  %1338 = add i64 %1337, -9514
  %1339 = load i64, i64* %PC.i1179
  %1340 = add i64 %1339, 5
  %1341 = load i64, i64* %PC.i1179
  %1342 = add i64 %1341, 5
  store i64 %1342, i64* %PC.i1179
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1344 = load i64, i64* %1343, align 8
  %1345 = add i64 %1344, -8
  %1346 = inttoptr i64 %1345 to i64*
  store i64 %1340, i64* %1346
  store i64 %1345, i64* %1343, align 8
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1338, i64* %1347, align 8
  store %struct.Memory* %loadMem1_4121aa, %struct.Memory** %MEMORY
  %loadMem2_4121aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4121aa = load i64, i64* %3
  %call2_4121aa = call %struct.Memory* @sub_40fc80.fastlib(%struct.State* %0, i64 %loadPC_4121aa, %struct.Memory* %loadMem2_4121aa)
  store %struct.Memory* %call2_4121aa, %struct.Memory** %MEMORY
  %loadMem_4121af = load %struct.Memory*, %struct.Memory** %MEMORY
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1349 = getelementptr inbounds %struct.GPR, %struct.GPR* %1348, i32 0, i32 33
  %1350 = getelementptr inbounds %struct.Reg, %struct.Reg* %1349, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %1350 to i64*
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1352 = getelementptr inbounds %struct.GPR, %struct.GPR* %1351, i32 0, i32 1
  %1353 = getelementptr inbounds %struct.Reg, %struct.Reg* %1352, i32 0, i32 0
  %EAX.i1177 = bitcast %union.anon* %1353 to i32*
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1355 = getelementptr inbounds %struct.GPR, %struct.GPR* %1354, i32 0, i32 15
  %1356 = getelementptr inbounds %struct.Reg, %struct.Reg* %1355, i32 0, i32 0
  %RBP.i1178 = bitcast %union.anon* %1356 to i64*
  %1357 = load i64, i64* %RBP.i1178
  %1358 = sub i64 %1357, 72
  %1359 = load i32, i32* %EAX.i1177
  %1360 = zext i32 %1359 to i64
  %1361 = load i64, i64* %PC.i1176
  %1362 = add i64 %1361, 3
  store i64 %1362, i64* %PC.i1176
  %1363 = inttoptr i64 %1358 to i32*
  store i32 %1359, i32* %1363
  store %struct.Memory* %loadMem_4121af, %struct.Memory** %MEMORY
  %loadMem_4121b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1365 = getelementptr inbounds %struct.GPR, %struct.GPR* %1364, i32 0, i32 33
  %1366 = getelementptr inbounds %struct.Reg, %struct.Reg* %1365, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %1366 to i64*
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1368 = getelementptr inbounds %struct.GPR, %struct.GPR* %1367, i32 0, i32 15
  %1369 = getelementptr inbounds %struct.Reg, %struct.Reg* %1368, i32 0, i32 0
  %RBP.i1175 = bitcast %union.anon* %1369 to i64*
  %1370 = load i64, i64* %RBP.i1175
  %1371 = sub i64 %1370, 72
  %1372 = load i64, i64* %PC.i1174
  %1373 = add i64 %1372, 4
  store i64 %1373, i64* %PC.i1174
  %1374 = inttoptr i64 %1371 to i32*
  %1375 = load i32, i32* %1374
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1376, align 1
  %1377 = and i32 %1375, 255
  %1378 = call i32 @llvm.ctpop.i32(i32 %1377)
  %1379 = trunc i32 %1378 to i8
  %1380 = and i8 %1379, 1
  %1381 = xor i8 %1380, 1
  %1382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1381, i8* %1382, align 1
  %1383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1383, align 1
  %1384 = icmp eq i32 %1375, 0
  %1385 = zext i1 %1384 to i8
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1385, i8* %1386, align 1
  %1387 = lshr i32 %1375, 31
  %1388 = trunc i32 %1387 to i8
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1388, i8* %1389, align 1
  %1390 = lshr i32 %1375, 31
  %1391 = xor i32 %1387, %1390
  %1392 = add i32 %1391, %1390
  %1393 = icmp eq i32 %1392, 2
  %1394 = zext i1 %1393 to i8
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1394, i8* %1395, align 1
  store %struct.Memory* %loadMem_4121b2, %struct.Memory** %MEMORY
  %loadMem_4121b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1397 = getelementptr inbounds %struct.GPR, %struct.GPR* %1396, i32 0, i32 33
  %1398 = getelementptr inbounds %struct.Reg, %struct.Reg* %1397, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %1398 to i64*
  %1399 = load i64, i64* %PC.i1173
  %1400 = add i64 %1399, 17
  %1401 = load i64, i64* %PC.i1173
  %1402 = add i64 %1401, 6
  %1403 = load i64, i64* %PC.i1173
  %1404 = add i64 %1403, 6
  store i64 %1404, i64* %PC.i1173
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1406 = load i8, i8* %1405, align 1
  %1407 = icmp ne i8 %1406, 0
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1409 = load i8, i8* %1408, align 1
  %1410 = icmp ne i8 %1409, 0
  %1411 = xor i1 %1407, %1410
  %1412 = zext i1 %1411 to i8
  store i8 %1412, i8* %BRANCH_TAKEN, align 1
  %1413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1414 = select i1 %1411, i64 %1400, i64 %1402
  store i64 %1414, i64* %1413, align 8
  store %struct.Memory* %loadMem_4121b6, %struct.Memory** %MEMORY
  %loadBr_4121b6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4121b6 = icmp eq i8 %loadBr_4121b6, 1
  br i1 %cmpBr_4121b6, label %block_.L_4121c7, label %block_4121bc

block_4121bc:                                     ; preds = %block_4121a2
  %loadMem_4121bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1416 = getelementptr inbounds %struct.GPR, %struct.GPR* %1415, i32 0, i32 33
  %1417 = getelementptr inbounds %struct.Reg, %struct.Reg* %1416, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %1417 to i64*
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1419 = getelementptr inbounds %struct.GPR, %struct.GPR* %1418, i32 0, i32 1
  %1420 = getelementptr inbounds %struct.Reg, %struct.Reg* %1419, i32 0, i32 0
  %RAX.i1171 = bitcast %union.anon* %1420 to i64*
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1422 = getelementptr inbounds %struct.GPR, %struct.GPR* %1421, i32 0, i32 15
  %1423 = getelementptr inbounds %struct.Reg, %struct.Reg* %1422, i32 0, i32 0
  %RBP.i1172 = bitcast %union.anon* %1423 to i64*
  %1424 = load i64, i64* %RBP.i1172
  %1425 = sub i64 %1424, 72
  %1426 = load i64, i64* %PC.i1170
  %1427 = add i64 %1426, 3
  store i64 %1427, i64* %PC.i1170
  %1428 = inttoptr i64 %1425 to i32*
  %1429 = load i32, i32* %1428
  %1430 = zext i32 %1429 to i64
  store i64 %1430, i64* %RAX.i1171, align 8
  store %struct.Memory* %loadMem_4121bc, %struct.Memory** %MEMORY
  %loadMem_4121bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1432 = getelementptr inbounds %struct.GPR, %struct.GPR* %1431, i32 0, i32 33
  %1433 = getelementptr inbounds %struct.Reg, %struct.Reg* %1432, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %1433 to i64*
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1435 = getelementptr inbounds %struct.GPR, %struct.GPR* %1434, i32 0, i32 1
  %1436 = getelementptr inbounds %struct.Reg, %struct.Reg* %1435, i32 0, i32 0
  %EAX.i1168 = bitcast %union.anon* %1436 to i32*
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1438 = getelementptr inbounds %struct.GPR, %struct.GPR* %1437, i32 0, i32 15
  %1439 = getelementptr inbounds %struct.Reg, %struct.Reg* %1438, i32 0, i32 0
  %RBP.i1169 = bitcast %union.anon* %1439 to i64*
  %1440 = load i64, i64* %RBP.i1169
  %1441 = sub i64 %1440, 4
  %1442 = load i32, i32* %EAX.i1168
  %1443 = zext i32 %1442 to i64
  %1444 = load i64, i64* %PC.i1167
  %1445 = add i64 %1444, 3
  store i64 %1445, i64* %PC.i1167
  %1446 = inttoptr i64 %1441 to i32*
  store i32 %1442, i32* %1446
  store %struct.Memory* %loadMem_4121bf, %struct.Memory** %MEMORY
  %loadMem_4121c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1448 = getelementptr inbounds %struct.GPR, %struct.GPR* %1447, i32 0, i32 33
  %1449 = getelementptr inbounds %struct.Reg, %struct.Reg* %1448, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %1449 to i64*
  %1450 = load i64, i64* %PC.i1166
  %1451 = add i64 %1450, 2258
  %1452 = load i64, i64* %PC.i1166
  %1453 = add i64 %1452, 5
  store i64 %1453, i64* %PC.i1166
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1451, i64* %1454, align 8
  store %struct.Memory* %loadMem_4121c2, %struct.Memory** %MEMORY
  br label %block_.L_412a94

block_.L_4121c7:                                  ; preds = %block_4121a2
  %loadMem_4121c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1456 = getelementptr inbounds %struct.GPR, %struct.GPR* %1455, i32 0, i32 33
  %1457 = getelementptr inbounds %struct.Reg, %struct.Reg* %1456, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %1457 to i64*
  %1458 = load i64, i64* %PC.i1165
  %1459 = add i64 %1458, 5
  %1460 = load i64, i64* %PC.i1165
  %1461 = add i64 %1460, 5
  store i64 %1461, i64* %PC.i1165
  %1462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1459, i64* %1462, align 8
  store %struct.Memory* %loadMem_4121c7, %struct.Memory** %MEMORY
  br label %block_.L_4121cc

block_.L_4121cc:                                  ; preds = %block_.L_4121c7, %block_.L_412197
  %loadMem_4121cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1464 = getelementptr inbounds %struct.GPR, %struct.GPR* %1463, i32 0, i32 33
  %1465 = getelementptr inbounds %struct.Reg, %struct.Reg* %1464, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %1465 to i64*
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1467 = getelementptr inbounds %struct.GPR, %struct.GPR* %1466, i32 0, i32 1
  %1468 = getelementptr inbounds %struct.Reg, %struct.Reg* %1467, i32 0, i32 0
  %RAX.i1164 = bitcast %union.anon* %1468 to i64*
  %1469 = load i64, i64* %PC.i1163
  %1470 = add i64 %1469, 7
  store i64 %1470, i64* %PC.i1163
  %1471 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %1472 = zext i32 %1471 to i64
  store i64 %1472, i64* %RAX.i1164, align 8
  store %struct.Memory* %loadMem_4121cc, %struct.Memory** %MEMORY
  %loadMem_4121d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1474 = getelementptr inbounds %struct.GPR, %struct.GPR* %1473, i32 0, i32 33
  %1475 = getelementptr inbounds %struct.Reg, %struct.Reg* %1474, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %1475 to i64*
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1477 = getelementptr inbounds %struct.GPR, %struct.GPR* %1476, i32 0, i32 1
  %1478 = getelementptr inbounds %struct.Reg, %struct.Reg* %1477, i32 0, i32 0
  %RAX.i1162 = bitcast %union.anon* %1478 to i64*
  %1479 = load i64, i64* %RAX.i1162
  %1480 = load i64, i64* %PC.i1161
  %1481 = add i64 %1480, 3
  store i64 %1481, i64* %PC.i1161
  %1482 = trunc i64 %1479 to i32
  %1483 = add i32 1, %1482
  %1484 = zext i32 %1483 to i64
  store i64 %1484, i64* %RAX.i1162, align 8
  %1485 = icmp ult i32 %1483, %1482
  %1486 = icmp ult i32 %1483, 1
  %1487 = or i1 %1485, %1486
  %1488 = zext i1 %1487 to i8
  %1489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1488, i8* %1489, align 1
  %1490 = and i32 %1483, 255
  %1491 = call i32 @llvm.ctpop.i32(i32 %1490)
  %1492 = trunc i32 %1491 to i8
  %1493 = and i8 %1492, 1
  %1494 = xor i8 %1493, 1
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1494, i8* %1495, align 1
  %1496 = xor i64 1, %1479
  %1497 = trunc i64 %1496 to i32
  %1498 = xor i32 %1497, %1483
  %1499 = lshr i32 %1498, 4
  %1500 = trunc i32 %1499 to i8
  %1501 = and i8 %1500, 1
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1501, i8* %1502, align 1
  %1503 = icmp eq i32 %1483, 0
  %1504 = zext i1 %1503 to i8
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1504, i8* %1505, align 1
  %1506 = lshr i32 %1483, 31
  %1507 = trunc i32 %1506 to i8
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1507, i8* %1508, align 1
  %1509 = lshr i32 %1482, 31
  %1510 = xor i32 %1506, %1509
  %1511 = add i32 %1510, %1506
  %1512 = icmp eq i32 %1511, 2
  %1513 = zext i1 %1512 to i8
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1513, i8* %1514, align 1
  store %struct.Memory* %loadMem_4121d3, %struct.Memory** %MEMORY
  %loadMem_4121d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1516 = getelementptr inbounds %struct.GPR, %struct.GPR* %1515, i32 0, i32 33
  %1517 = getelementptr inbounds %struct.Reg, %struct.Reg* %1516, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %1517 to i64*
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1519 = getelementptr inbounds %struct.GPR, %struct.GPR* %1518, i32 0, i32 1
  %1520 = getelementptr inbounds %struct.Reg, %struct.Reg* %1519, i32 0, i32 0
  %EAX.i1160 = bitcast %union.anon* %1520 to i32*
  %1521 = load i32, i32* %EAX.i1160
  %1522 = zext i32 %1521 to i64
  %1523 = load i64, i64* %PC.i1159
  %1524 = add i64 %1523, 7
  store i64 %1524, i64* %PC.i1159
  store i32 %1521, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  store %struct.Memory* %loadMem_4121d6, %struct.Memory** %MEMORY
  %loadMem_4121dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1526 = getelementptr inbounds %struct.GPR, %struct.GPR* %1525, i32 0, i32 33
  %1527 = getelementptr inbounds %struct.Reg, %struct.Reg* %1526, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %1527 to i64*
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1529 = getelementptr inbounds %struct.GPR, %struct.GPR* %1528, i32 0, i32 1
  %1530 = getelementptr inbounds %struct.Reg, %struct.Reg* %1529, i32 0, i32 0
  %RAX.i1158 = bitcast %union.anon* %1530 to i64*
  %1531 = load i64, i64* %PC.i1157
  %1532 = add i64 %1531, 7
  store i64 %1532, i64* %PC.i1157
  %1533 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %1534 = zext i32 %1533 to i64
  store i64 %1534, i64* %RAX.i1158, align 8
  store %struct.Memory* %loadMem_4121dd, %struct.Memory** %MEMORY
  %loadMem_4121e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1536 = getelementptr inbounds %struct.GPR, %struct.GPR* %1535, i32 0, i32 33
  %1537 = getelementptr inbounds %struct.Reg, %struct.Reg* %1536, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %1537 to i64*
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1539 = getelementptr inbounds %struct.GPR, %struct.GPR* %1538, i32 0, i32 1
  %1540 = getelementptr inbounds %struct.Reg, %struct.Reg* %1539, i32 0, i32 0
  %RAX.i1156 = bitcast %union.anon* %1540 to i64*
  %1541 = load i64, i64* %RAX.i1156
  %1542 = load i64, i64* %PC.i1155
  %1543 = add i64 %1542, 3
  store i64 %1543, i64* %PC.i1155
  %1544 = trunc i64 %1541 to i32
  %1545 = add i32 1, %1544
  %1546 = zext i32 %1545 to i64
  store i64 %1546, i64* %RAX.i1156, align 8
  %1547 = icmp ult i32 %1545, %1544
  %1548 = icmp ult i32 %1545, 1
  %1549 = or i1 %1547, %1548
  %1550 = zext i1 %1549 to i8
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1550, i8* %1551, align 1
  %1552 = and i32 %1545, 255
  %1553 = call i32 @llvm.ctpop.i32(i32 %1552)
  %1554 = trunc i32 %1553 to i8
  %1555 = and i8 %1554, 1
  %1556 = xor i8 %1555, 1
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1556, i8* %1557, align 1
  %1558 = xor i64 1, %1541
  %1559 = trunc i64 %1558 to i32
  %1560 = xor i32 %1559, %1545
  %1561 = lshr i32 %1560, 4
  %1562 = trunc i32 %1561 to i8
  %1563 = and i8 %1562, 1
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1563, i8* %1564, align 1
  %1565 = icmp eq i32 %1545, 0
  %1566 = zext i1 %1565 to i8
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1566, i8* %1567, align 1
  %1568 = lshr i32 %1545, 31
  %1569 = trunc i32 %1568 to i8
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1569, i8* %1570, align 1
  %1571 = lshr i32 %1544, 31
  %1572 = xor i32 %1568, %1571
  %1573 = add i32 %1572, %1568
  %1574 = icmp eq i32 %1573, 2
  %1575 = zext i1 %1574 to i8
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1575, i8* %1576, align 1
  store %struct.Memory* %loadMem_4121e4, %struct.Memory** %MEMORY
  %loadMem_4121e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1578 = getelementptr inbounds %struct.GPR, %struct.GPR* %1577, i32 0, i32 33
  %1579 = getelementptr inbounds %struct.Reg, %struct.Reg* %1578, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %1579 to i64*
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1581 = getelementptr inbounds %struct.GPR, %struct.GPR* %1580, i32 0, i32 1
  %1582 = getelementptr inbounds %struct.Reg, %struct.Reg* %1581, i32 0, i32 0
  %EAX.i1154 = bitcast %union.anon* %1582 to i32*
  %1583 = load i32, i32* %EAX.i1154
  %1584 = zext i32 %1583 to i64
  %1585 = load i64, i64* %PC.i1153
  %1586 = add i64 %1585, 7
  store i64 %1586, i64* %PC.i1153
  store i32 %1583, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  store %struct.Memory* %loadMem_4121e7, %struct.Memory** %MEMORY
  %loadMem_4121ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1588 = getelementptr inbounds %struct.GPR, %struct.GPR* %1587, i32 0, i32 33
  %1589 = getelementptr inbounds %struct.Reg, %struct.Reg* %1588, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %1589 to i64*
  %1590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1591 = getelementptr inbounds %struct.GPR, %struct.GPR* %1590, i32 0, i32 1
  %1592 = getelementptr inbounds %struct.Reg, %struct.Reg* %1591, i32 0, i32 0
  %RAX.i1152 = bitcast %union.anon* %1592 to i64*
  %1593 = load i64, i64* %PC.i1151
  %1594 = add i64 %1593, 7
  store i64 %1594, i64* %PC.i1151
  %1595 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %1596 = zext i32 %1595 to i64
  store i64 %1596, i64* %RAX.i1152, align 8
  store %struct.Memory* %loadMem_4121ee, %struct.Memory** %MEMORY
  %loadMem_4121f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1598 = getelementptr inbounds %struct.GPR, %struct.GPR* %1597, i32 0, i32 33
  %1599 = getelementptr inbounds %struct.Reg, %struct.Reg* %1598, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %1599 to i64*
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1601 = getelementptr inbounds %struct.GPR, %struct.GPR* %1600, i32 0, i32 5
  %1602 = getelementptr inbounds %struct.Reg, %struct.Reg* %1601, i32 0, i32 0
  %RCX.i1149 = bitcast %union.anon* %1602 to i64*
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1604 = getelementptr inbounds %struct.GPR, %struct.GPR* %1603, i32 0, i32 15
  %1605 = getelementptr inbounds %struct.Reg, %struct.Reg* %1604, i32 0, i32 0
  %RBP.i1150 = bitcast %union.anon* %1605 to i64*
  %1606 = load i64, i64* %RBP.i1150
  %1607 = sub i64 %1606, 8
  %1608 = load i64, i64* %PC.i1148
  %1609 = add i64 %1608, 4
  store i64 %1609, i64* %PC.i1148
  %1610 = inttoptr i64 %1607 to i32*
  %1611 = load i32, i32* %1610
  %1612 = sext i32 %1611 to i64
  store i64 %1612, i64* %RCX.i1149, align 8
  store %struct.Memory* %loadMem_4121f5, %struct.Memory** %MEMORY
  %loadMem_4121f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1614 = getelementptr inbounds %struct.GPR, %struct.GPR* %1613, i32 0, i32 33
  %1615 = getelementptr inbounds %struct.Reg, %struct.Reg* %1614, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %1615 to i64*
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1617 = getelementptr inbounds %struct.GPR, %struct.GPR* %1616, i32 0, i32 1
  %1618 = getelementptr inbounds %struct.Reg, %struct.Reg* %1617, i32 0, i32 0
  %EAX.i1146 = bitcast %union.anon* %1618 to i32*
  %1619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1620 = getelementptr inbounds %struct.GPR, %struct.GPR* %1619, i32 0, i32 5
  %1621 = getelementptr inbounds %struct.Reg, %struct.Reg* %1620, i32 0, i32 0
  %RCX.i1147 = bitcast %union.anon* %1621 to i64*
  %1622 = load i64, i64* %RCX.i1147
  %1623 = mul i64 %1622, 4
  %1624 = add i64 %1623, 11185584
  %1625 = load i32, i32* %EAX.i1146
  %1626 = zext i32 %1625 to i64
  %1627 = load i64, i64* %PC.i1145
  %1628 = add i64 %1627, 7
  store i64 %1628, i64* %PC.i1145
  %1629 = inttoptr i64 %1624 to i32*
  store i32 %1625, i32* %1629
  store %struct.Memory* %loadMem_4121f9, %struct.Memory** %MEMORY
  %loadMem_412200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1631 = getelementptr inbounds %struct.GPR, %struct.GPR* %1630, i32 0, i32 33
  %1632 = getelementptr inbounds %struct.Reg, %struct.Reg* %1631, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %1632 to i64*
  %1633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1634 = getelementptr inbounds %struct.GPR, %struct.GPR* %1633, i32 0, i32 15
  %1635 = getelementptr inbounds %struct.Reg, %struct.Reg* %1634, i32 0, i32 0
  %RBP.i1144 = bitcast %union.anon* %1635 to i64*
  %1636 = load i64, i64* %RBP.i1144
  %1637 = sub i64 %1636, 28
  %1638 = load i64, i64* %PC.i1143
  %1639 = add i64 %1638, 7
  store i64 %1639, i64* %PC.i1143
  %1640 = inttoptr i64 %1637 to i32*
  store i32 0, i32* %1640
  store %struct.Memory* %loadMem_412200, %struct.Memory** %MEMORY
  br label %block_.L_412207

block_.L_412207:                                  ; preds = %block_.L_4126c2, %block_.L_4121cc
  %loadMem_412207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1642 = getelementptr inbounds %struct.GPR, %struct.GPR* %1641, i32 0, i32 33
  %1643 = getelementptr inbounds %struct.Reg, %struct.Reg* %1642, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %1643 to i64*
  %1644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1645 = getelementptr inbounds %struct.GPR, %struct.GPR* %1644, i32 0, i32 15
  %1646 = getelementptr inbounds %struct.Reg, %struct.Reg* %1645, i32 0, i32 0
  %RBP.i1142 = bitcast %union.anon* %1646 to i64*
  %1647 = load i64, i64* %RBP.i1142
  %1648 = sub i64 %1647, 28
  %1649 = load i64, i64* %PC.i1141
  %1650 = add i64 %1649, 4
  store i64 %1650, i64* %PC.i1141
  %1651 = inttoptr i64 %1648 to i32*
  %1652 = load i32, i32* %1651
  %1653 = sub i32 %1652, 4
  %1654 = icmp ult i32 %1652, 4
  %1655 = zext i1 %1654 to i8
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1655, i8* %1656, align 1
  %1657 = and i32 %1653, 255
  %1658 = call i32 @llvm.ctpop.i32(i32 %1657)
  %1659 = trunc i32 %1658 to i8
  %1660 = and i8 %1659, 1
  %1661 = xor i8 %1660, 1
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1661, i8* %1662, align 1
  %1663 = xor i32 %1652, 4
  %1664 = xor i32 %1663, %1653
  %1665 = lshr i32 %1664, 4
  %1666 = trunc i32 %1665 to i8
  %1667 = and i8 %1666, 1
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1667, i8* %1668, align 1
  %1669 = icmp eq i32 %1653, 0
  %1670 = zext i1 %1669 to i8
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1670, i8* %1671, align 1
  %1672 = lshr i32 %1653, 31
  %1673 = trunc i32 %1672 to i8
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1673, i8* %1674, align 1
  %1675 = lshr i32 %1652, 31
  %1676 = xor i32 %1672, %1675
  %1677 = add i32 %1676, %1675
  %1678 = icmp eq i32 %1677, 2
  %1679 = zext i1 %1678 to i8
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1679, i8* %1680, align 1
  store %struct.Memory* %loadMem_412207, %struct.Memory** %MEMORY
  %loadMem_41220b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1682 = getelementptr inbounds %struct.GPR, %struct.GPR* %1681, i32 0, i32 33
  %1683 = getelementptr inbounds %struct.Reg, %struct.Reg* %1682, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %1683 to i64*
  %1684 = load i64, i64* %PC.i1140
  %1685 = add i64 %1684, 1221
  %1686 = load i64, i64* %PC.i1140
  %1687 = add i64 %1686, 6
  %1688 = load i64, i64* %PC.i1140
  %1689 = add i64 %1688, 6
  store i64 %1689, i64* %PC.i1140
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1691 = load i8, i8* %1690, align 1
  %1692 = icmp ne i8 %1691, 0
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1694 = load i8, i8* %1693, align 1
  %1695 = icmp ne i8 %1694, 0
  %1696 = xor i1 %1692, %1695
  %1697 = xor i1 %1696, true
  %1698 = zext i1 %1697 to i8
  store i8 %1698, i8* %BRANCH_TAKEN, align 1
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1700 = select i1 %1696, i64 %1687, i64 %1685
  store i64 %1700, i64* %1699, align 8
  store %struct.Memory* %loadMem_41220b, %struct.Memory** %MEMORY
  %loadBr_41220b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41220b = icmp eq i8 %loadBr_41220b, 1
  br i1 %cmpBr_41220b, label %block_.L_4126d0, label %block_412211

block_412211:                                     ; preds = %block_.L_412207
  %loadMem_412211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1702 = getelementptr inbounds %struct.GPR, %struct.GPR* %1701, i32 0, i32 33
  %1703 = getelementptr inbounds %struct.Reg, %struct.Reg* %1702, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %1703 to i64*
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1705 = getelementptr inbounds %struct.GPR, %struct.GPR* %1704, i32 0, i32 1
  %1706 = getelementptr inbounds %struct.Reg, %struct.Reg* %1705, i32 0, i32 0
  %RAX.i1138 = bitcast %union.anon* %1706 to i64*
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1708 = getelementptr inbounds %struct.GPR, %struct.GPR* %1707, i32 0, i32 15
  %1709 = getelementptr inbounds %struct.Reg, %struct.Reg* %1708, i32 0, i32 0
  %RBP.i1139 = bitcast %union.anon* %1709 to i64*
  %1710 = load i64, i64* %RBP.i1139
  %1711 = sub i64 %1710, 8
  %1712 = load i64, i64* %PC.i1137
  %1713 = add i64 %1712, 3
  store i64 %1713, i64* %PC.i1137
  %1714 = inttoptr i64 %1711 to i32*
  %1715 = load i32, i32* %1714
  %1716 = zext i32 %1715 to i64
  store i64 %1716, i64* %RAX.i1138, align 8
  store %struct.Memory* %loadMem_412211, %struct.Memory** %MEMORY
  %loadMem_412214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1718 = getelementptr inbounds %struct.GPR, %struct.GPR* %1717, i32 0, i32 33
  %1719 = getelementptr inbounds %struct.Reg, %struct.Reg* %1718, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %1719 to i64*
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1721 = getelementptr inbounds %struct.GPR, %struct.GPR* %1720, i32 0, i32 5
  %1722 = getelementptr inbounds %struct.Reg, %struct.Reg* %1721, i32 0, i32 0
  %RCX.i1135 = bitcast %union.anon* %1722 to i64*
  %1723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1724 = getelementptr inbounds %struct.GPR, %struct.GPR* %1723, i32 0, i32 15
  %1725 = getelementptr inbounds %struct.Reg, %struct.Reg* %1724, i32 0, i32 0
  %RBP.i1136 = bitcast %union.anon* %1725 to i64*
  %1726 = load i64, i64* %RBP.i1136
  %1727 = sub i64 %1726, 28
  %1728 = load i64, i64* %PC.i1134
  %1729 = add i64 %1728, 4
  store i64 %1729, i64* %PC.i1134
  %1730 = inttoptr i64 %1727 to i32*
  %1731 = load i32, i32* %1730
  %1732 = sext i32 %1731 to i64
  store i64 %1732, i64* %RCX.i1135, align 8
  store %struct.Memory* %loadMem_412214, %struct.Memory** %MEMORY
  %loadMem_412218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1734 = getelementptr inbounds %struct.GPR, %struct.GPR* %1733, i32 0, i32 33
  %1735 = getelementptr inbounds %struct.Reg, %struct.Reg* %1734, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %1735 to i64*
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1737 = getelementptr inbounds %struct.GPR, %struct.GPR* %1736, i32 0, i32 1
  %1738 = getelementptr inbounds %struct.Reg, %struct.Reg* %1737, i32 0, i32 0
  %RAX.i1132 = bitcast %union.anon* %1738 to i64*
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1740 = getelementptr inbounds %struct.GPR, %struct.GPR* %1739, i32 0, i32 5
  %1741 = getelementptr inbounds %struct.Reg, %struct.Reg* %1740, i32 0, i32 0
  %RCX.i1133 = bitcast %union.anon* %1741 to i64*
  %1742 = load i64, i64* %RAX.i1132
  %1743 = load i64, i64* %RCX.i1133
  %1744 = mul i64 %1743, 4
  %1745 = add i64 %1744, 8053168
  %1746 = load i64, i64* %PC.i1131
  %1747 = add i64 %1746, 7
  store i64 %1747, i64* %PC.i1131
  %1748 = trunc i64 %1742 to i32
  %1749 = inttoptr i64 %1745 to i32*
  %1750 = load i32, i32* %1749
  %1751 = add i32 %1750, %1748
  %1752 = zext i32 %1751 to i64
  store i64 %1752, i64* %RAX.i1132, align 8
  %1753 = icmp ult i32 %1751, %1748
  %1754 = icmp ult i32 %1751, %1750
  %1755 = or i1 %1753, %1754
  %1756 = zext i1 %1755 to i8
  %1757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1756, i8* %1757, align 1
  %1758 = and i32 %1751, 255
  %1759 = call i32 @llvm.ctpop.i32(i32 %1758)
  %1760 = trunc i32 %1759 to i8
  %1761 = and i8 %1760, 1
  %1762 = xor i8 %1761, 1
  %1763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1762, i8* %1763, align 1
  %1764 = xor i32 %1750, %1748
  %1765 = xor i32 %1764, %1751
  %1766 = lshr i32 %1765, 4
  %1767 = trunc i32 %1766 to i8
  %1768 = and i8 %1767, 1
  %1769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1768, i8* %1769, align 1
  %1770 = icmp eq i32 %1751, 0
  %1771 = zext i1 %1770 to i8
  %1772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1771, i8* %1772, align 1
  %1773 = lshr i32 %1751, 31
  %1774 = trunc i32 %1773 to i8
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1774, i8* %1775, align 1
  %1776 = lshr i32 %1748, 31
  %1777 = lshr i32 %1750, 31
  %1778 = xor i32 %1773, %1776
  %1779 = xor i32 %1773, %1777
  %1780 = add i32 %1778, %1779
  %1781 = icmp eq i32 %1780, 2
  %1782 = zext i1 %1781 to i8
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1782, i8* %1783, align 1
  store %struct.Memory* %loadMem_412218, %struct.Memory** %MEMORY
  %loadMem_41221f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1785 = getelementptr inbounds %struct.GPR, %struct.GPR* %1784, i32 0, i32 33
  %1786 = getelementptr inbounds %struct.Reg, %struct.Reg* %1785, i32 0, i32 0
  %PC.i1128 = bitcast %union.anon* %1786 to i64*
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1788 = getelementptr inbounds %struct.GPR, %struct.GPR* %1787, i32 0, i32 1
  %1789 = getelementptr inbounds %struct.Reg, %struct.Reg* %1788, i32 0, i32 0
  %EAX.i1129 = bitcast %union.anon* %1789 to i32*
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1791 = getelementptr inbounds %struct.GPR, %struct.GPR* %1790, i32 0, i32 15
  %1792 = getelementptr inbounds %struct.Reg, %struct.Reg* %1791, i32 0, i32 0
  %RBP.i1130 = bitcast %union.anon* %1792 to i64*
  %1793 = load i64, i64* %RBP.i1130
  %1794 = sub i64 %1793, 76
  %1795 = load i32, i32* %EAX.i1129
  %1796 = zext i32 %1795 to i64
  %1797 = load i64, i64* %PC.i1128
  %1798 = add i64 %1797, 3
  store i64 %1798, i64* %PC.i1128
  %1799 = inttoptr i64 %1794 to i32*
  store i32 %1795, i32* %1799
  store %struct.Memory* %loadMem_41221f, %struct.Memory** %MEMORY
  %loadMem_412222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1801 = getelementptr inbounds %struct.GPR, %struct.GPR* %1800, i32 0, i32 33
  %1802 = getelementptr inbounds %struct.Reg, %struct.Reg* %1801, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %1802 to i64*
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1804 = getelementptr inbounds %struct.GPR, %struct.GPR* %1803, i32 0, i32 5
  %1805 = getelementptr inbounds %struct.Reg, %struct.Reg* %1804, i32 0, i32 0
  %RCX.i1126 = bitcast %union.anon* %1805 to i64*
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1807 = getelementptr inbounds %struct.GPR, %struct.GPR* %1806, i32 0, i32 15
  %1808 = getelementptr inbounds %struct.Reg, %struct.Reg* %1807, i32 0, i32 0
  %RBP.i1127 = bitcast %union.anon* %1808 to i64*
  %1809 = load i64, i64* %RBP.i1127
  %1810 = sub i64 %1809, 76
  %1811 = load i64, i64* %PC.i1125
  %1812 = add i64 %1811, 4
  store i64 %1812, i64* %PC.i1125
  %1813 = inttoptr i64 %1810 to i32*
  %1814 = load i32, i32* %1813
  %1815 = sext i32 %1814 to i64
  store i64 %1815, i64* %RCX.i1126, align 8
  store %struct.Memory* %loadMem_412222, %struct.Memory** %MEMORY
  %loadMem_412226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1817 = getelementptr inbounds %struct.GPR, %struct.GPR* %1816, i32 0, i32 33
  %1818 = getelementptr inbounds %struct.Reg, %struct.Reg* %1817, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %1818 to i64*
  %1819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1820 = getelementptr inbounds %struct.GPR, %struct.GPR* %1819, i32 0, i32 1
  %1821 = getelementptr inbounds %struct.Reg, %struct.Reg* %1820, i32 0, i32 0
  %RAX.i1123 = bitcast %union.anon* %1821 to i64*
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1823 = getelementptr inbounds %struct.GPR, %struct.GPR* %1822, i32 0, i32 5
  %1824 = getelementptr inbounds %struct.Reg, %struct.Reg* %1823, i32 0, i32 0
  %RCX.i1124 = bitcast %union.anon* %1824 to i64*
  %1825 = load i64, i64* %RCX.i1124
  %1826 = add i64 %1825, 12099168
  %1827 = load i64, i64* %PC.i1122
  %1828 = add i64 %1827, 8
  store i64 %1828, i64* %PC.i1122
  %1829 = inttoptr i64 %1826 to i8*
  %1830 = load i8, i8* %1829
  %1831 = zext i8 %1830 to i64
  store i64 %1831, i64* %RAX.i1123, align 8
  store %struct.Memory* %loadMem_412226, %struct.Memory** %MEMORY
  %loadMem_41222e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1833 = getelementptr inbounds %struct.GPR, %struct.GPR* %1832, i32 0, i32 33
  %1834 = getelementptr inbounds %struct.Reg, %struct.Reg* %1833, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %1834 to i64*
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1836 = getelementptr inbounds %struct.GPR, %struct.GPR* %1835, i32 0, i32 1
  %1837 = getelementptr inbounds %struct.Reg, %struct.Reg* %1836, i32 0, i32 0
  %EAX.i1121 = bitcast %union.anon* %1837 to i32*
  %1838 = load i32, i32* %EAX.i1121
  %1839 = zext i32 %1838 to i64
  %1840 = load i64, i64* %PC.i1120
  %1841 = add i64 %1840, 3
  store i64 %1841, i64* %PC.i1120
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1842, align 1
  %1843 = and i32 %1838, 255
  %1844 = call i32 @llvm.ctpop.i32(i32 %1843)
  %1845 = trunc i32 %1844 to i8
  %1846 = and i8 %1845, 1
  %1847 = xor i8 %1846, 1
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1847, i8* %1848, align 1
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1849, align 1
  %1850 = icmp eq i32 %1838, 0
  %1851 = zext i1 %1850 to i8
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1851, i8* %1852, align 1
  %1853 = lshr i32 %1838, 31
  %1854 = trunc i32 %1853 to i8
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1854, i8* %1855, align 1
  %1856 = lshr i32 %1838, 31
  %1857 = xor i32 %1853, %1856
  %1858 = add i32 %1857, %1856
  %1859 = icmp eq i32 %1858, 2
  %1860 = zext i1 %1859 to i8
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1860, i8* %1861, align 1
  store %struct.Memory* %loadMem_41222e, %struct.Memory** %MEMORY
  %loadMem_412231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1863 = getelementptr inbounds %struct.GPR, %struct.GPR* %1862, i32 0, i32 33
  %1864 = getelementptr inbounds %struct.Reg, %struct.Reg* %1863, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %1864 to i64*
  %1865 = load i64, i64* %PC.i1119
  %1866 = add i64 %1865, 110
  %1867 = load i64, i64* %PC.i1119
  %1868 = add i64 %1867, 6
  %1869 = load i64, i64* %PC.i1119
  %1870 = add i64 %1869, 6
  store i64 %1870, i64* %PC.i1119
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1872 = load i8, i8* %1871, align 1
  %1873 = icmp eq i8 %1872, 0
  %1874 = zext i1 %1873 to i8
  store i8 %1874, i8* %BRANCH_TAKEN, align 1
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1876 = select i1 %1873, i64 %1866, i64 %1868
  store i64 %1876, i64* %1875, align 8
  store %struct.Memory* %loadMem_412231, %struct.Memory** %MEMORY
  %loadBr_412231 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412231 = icmp eq i8 %loadBr_412231, 1
  br i1 %cmpBr_412231, label %block_.L_41229f, label %block_412237

block_412237:                                     ; preds = %block_412211
  %loadMem_412237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1878 = getelementptr inbounds %struct.GPR, %struct.GPR* %1877, i32 0, i32 33
  %1879 = getelementptr inbounds %struct.Reg, %struct.Reg* %1878, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %1879 to i64*
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1881 = getelementptr inbounds %struct.GPR, %struct.GPR* %1880, i32 0, i32 1
  %1882 = getelementptr inbounds %struct.Reg, %struct.Reg* %1881, i32 0, i32 0
  %RAX.i1117 = bitcast %union.anon* %1882 to i64*
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1884 = getelementptr inbounds %struct.GPR, %struct.GPR* %1883, i32 0, i32 15
  %1885 = getelementptr inbounds %struct.Reg, %struct.Reg* %1884, i32 0, i32 0
  %RBP.i1118 = bitcast %union.anon* %1885 to i64*
  %1886 = load i64, i64* %RBP.i1118
  %1887 = sub i64 %1886, 76
  %1888 = load i64, i64* %PC.i1116
  %1889 = add i64 %1888, 4
  store i64 %1889, i64* %PC.i1116
  %1890 = inttoptr i64 %1887 to i32*
  %1891 = load i32, i32* %1890
  %1892 = sext i32 %1891 to i64
  store i64 %1892, i64* %RAX.i1117, align 8
  store %struct.Memory* %loadMem_412237, %struct.Memory** %MEMORY
  %loadMem_41223b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1894 = getelementptr inbounds %struct.GPR, %struct.GPR* %1893, i32 0, i32 33
  %1895 = getelementptr inbounds %struct.Reg, %struct.Reg* %1894, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %1895 to i64*
  %1896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1897 = getelementptr inbounds %struct.GPR, %struct.GPR* %1896, i32 0, i32 1
  %1898 = getelementptr inbounds %struct.Reg, %struct.Reg* %1897, i32 0, i32 0
  %RAX.i1114 = bitcast %union.anon* %1898 to i64*
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1900 = getelementptr inbounds %struct.GPR, %struct.GPR* %1899, i32 0, i32 5
  %1901 = getelementptr inbounds %struct.Reg, %struct.Reg* %1900, i32 0, i32 0
  %RCX.i1115 = bitcast %union.anon* %1901 to i64*
  %1902 = load i64, i64* %RAX.i1114
  %1903 = mul i64 %1902, 4
  %1904 = add i64 %1903, 11185584
  %1905 = load i64, i64* %PC.i1113
  %1906 = add i64 %1905, 7
  store i64 %1906, i64* %PC.i1113
  %1907 = inttoptr i64 %1904 to i32*
  %1908 = load i32, i32* %1907
  %1909 = zext i32 %1908 to i64
  store i64 %1909, i64* %RCX.i1115, align 8
  store %struct.Memory* %loadMem_41223b, %struct.Memory** %MEMORY
  %loadMem_412242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1911 = getelementptr inbounds %struct.GPR, %struct.GPR* %1910, i32 0, i32 33
  %1912 = getelementptr inbounds %struct.Reg, %struct.Reg* %1911, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %1912 to i64*
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1914 = getelementptr inbounds %struct.GPR, %struct.GPR* %1913, i32 0, i32 5
  %1915 = getelementptr inbounds %struct.Reg, %struct.Reg* %1914, i32 0, i32 0
  %ECX.i1112 = bitcast %union.anon* %1915 to i32*
  %1916 = load i32, i32* %ECX.i1112
  %1917 = zext i32 %1916 to i64
  %1918 = load i64, i64* %PC.i1111
  %1919 = add i64 %1918, 7
  store i64 %1919, i64* %PC.i1111
  %1920 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %1921 = sub i32 %1916, %1920
  %1922 = icmp ult i32 %1916, %1920
  %1923 = zext i1 %1922 to i8
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1923, i8* %1924, align 1
  %1925 = and i32 %1921, 255
  %1926 = call i32 @llvm.ctpop.i32(i32 %1925)
  %1927 = trunc i32 %1926 to i8
  %1928 = and i8 %1927, 1
  %1929 = xor i8 %1928, 1
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1929, i8* %1930, align 1
  %1931 = xor i32 %1920, %1916
  %1932 = xor i32 %1931, %1921
  %1933 = lshr i32 %1932, 4
  %1934 = trunc i32 %1933 to i8
  %1935 = and i8 %1934, 1
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1935, i8* %1936, align 1
  %1937 = icmp eq i32 %1921, 0
  %1938 = zext i1 %1937 to i8
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1938, i8* %1939, align 1
  %1940 = lshr i32 %1921, 31
  %1941 = trunc i32 %1940 to i8
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1941, i8* %1942, align 1
  %1943 = lshr i32 %1916, 31
  %1944 = lshr i32 %1920, 31
  %1945 = xor i32 %1944, %1943
  %1946 = xor i32 %1940, %1943
  %1947 = add i32 %1946, %1945
  %1948 = icmp eq i32 %1947, 2
  %1949 = zext i1 %1948 to i8
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1949, i8* %1950, align 1
  store %struct.Memory* %loadMem_412242, %struct.Memory** %MEMORY
  %loadMem_412249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1952 = getelementptr inbounds %struct.GPR, %struct.GPR* %1951, i32 0, i32 33
  %1953 = getelementptr inbounds %struct.Reg, %struct.Reg* %1952, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %1953 to i64*
  %1954 = load i64, i64* %PC.i1110
  %1955 = add i64 %1954, 86
  %1956 = load i64, i64* %PC.i1110
  %1957 = add i64 %1956, 6
  %1958 = load i64, i64* %PC.i1110
  %1959 = add i64 %1958, 6
  store i64 %1959, i64* %PC.i1110
  %1960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1961 = load i8, i8* %1960, align 1
  store i8 %1961, i8* %BRANCH_TAKEN, align 1
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1963 = icmp ne i8 %1961, 0
  %1964 = select i1 %1963, i64 %1955, i64 %1957
  store i64 %1964, i64* %1962, align 8
  store %struct.Memory* %loadMem_412249, %struct.Memory** %MEMORY
  %loadBr_412249 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412249 = icmp eq i8 %loadBr_412249, 1
  br i1 %cmpBr_412249, label %block_.L_41229f, label %block_41224f

block_41224f:                                     ; preds = %block_412237
  %loadMem_41224f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1966 = getelementptr inbounds %struct.GPR, %struct.GPR* %1965, i32 0, i32 33
  %1967 = getelementptr inbounds %struct.Reg, %struct.Reg* %1966, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %1967 to i64*
  %1968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1969 = getelementptr inbounds %struct.GPR, %struct.GPR* %1968, i32 0, i32 15
  %1970 = getelementptr inbounds %struct.Reg, %struct.Reg* %1969, i32 0, i32 0
  %RBP.i1109 = bitcast %union.anon* %1970 to i64*
  %1971 = load i64, i64* %RBP.i1109
  %1972 = sub i64 %1971, 24
  %1973 = load i64, i64* %PC.i1108
  %1974 = add i64 %1973, 5
  store i64 %1974, i64* %PC.i1108
  %1975 = inttoptr i64 %1972 to i64*
  %1976 = load i64, i64* %1975
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1977, align 1
  %1978 = trunc i64 %1976 to i32
  %1979 = and i32 %1978, 255
  %1980 = call i32 @llvm.ctpop.i32(i32 %1979)
  %1981 = trunc i32 %1980 to i8
  %1982 = and i8 %1981, 1
  %1983 = xor i8 %1982, 1
  %1984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1983, i8* %1984, align 1
  %1985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1985, align 1
  %1986 = icmp eq i64 %1976, 0
  %1987 = zext i1 %1986 to i8
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1987, i8* %1988, align 1
  %1989 = lshr i64 %1976, 63
  %1990 = trunc i64 %1989 to i8
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1990, i8* %1991, align 1
  %1992 = lshr i64 %1976, 63
  %1993 = xor i64 %1989, %1992
  %1994 = add i64 %1993, %1992
  %1995 = icmp eq i64 %1994, 2
  %1996 = zext i1 %1995 to i8
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1996, i8* %1997, align 1
  store %struct.Memory* %loadMem_41224f, %struct.Memory** %MEMORY
  %loadMem_412254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1999 = getelementptr inbounds %struct.GPR, %struct.GPR* %1998, i32 0, i32 33
  %2000 = getelementptr inbounds %struct.Reg, %struct.Reg* %1999, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %2000 to i64*
  %2001 = load i64, i64* %PC.i1107
  %2002 = add i64 %2001, 20
  %2003 = load i64, i64* %PC.i1107
  %2004 = add i64 %2003, 6
  %2005 = load i64, i64* %PC.i1107
  %2006 = add i64 %2005, 6
  store i64 %2006, i64* %PC.i1107
  %2007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2008 = load i8, i8* %2007, align 1
  store i8 %2008, i8* %BRANCH_TAKEN, align 1
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2010 = icmp ne i8 %2008, 0
  %2011 = select i1 %2010, i64 %2002, i64 %2004
  store i64 %2011, i64* %2009, align 8
  store %struct.Memory* %loadMem_412254, %struct.Memory** %MEMORY
  %loadBr_412254 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412254 = icmp eq i8 %loadBr_412254, 1
  br i1 %cmpBr_412254, label %block_.L_412268, label %block_41225a

block_41225a:                                     ; preds = %block_41224f
  %loadMem_41225a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2013 = getelementptr inbounds %struct.GPR, %struct.GPR* %2012, i32 0, i32 33
  %2014 = getelementptr inbounds %struct.Reg, %struct.Reg* %2013, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %2014 to i64*
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2016 = getelementptr inbounds %struct.GPR, %struct.GPR* %2015, i32 0, i32 1
  %2017 = getelementptr inbounds %struct.Reg, %struct.Reg* %2016, i32 0, i32 0
  %RAX.i1105 = bitcast %union.anon* %2017 to i64*
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2019 = getelementptr inbounds %struct.GPR, %struct.GPR* %2018, i32 0, i32 15
  %2020 = getelementptr inbounds %struct.Reg, %struct.Reg* %2019, i32 0, i32 0
  %RBP.i1106 = bitcast %union.anon* %2020 to i64*
  %2021 = load i64, i64* %RBP.i1106
  %2022 = sub i64 %2021, 76
  %2023 = load i64, i64* %PC.i1104
  %2024 = add i64 %2023, 3
  store i64 %2024, i64* %PC.i1104
  %2025 = inttoptr i64 %2022 to i32*
  %2026 = load i32, i32* %2025
  %2027 = zext i32 %2026 to i64
  store i64 %2027, i64* %RAX.i1105, align 8
  store %struct.Memory* %loadMem_41225a, %struct.Memory** %MEMORY
  %loadMem_41225d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2029 = getelementptr inbounds %struct.GPR, %struct.GPR* %2028, i32 0, i32 33
  %2030 = getelementptr inbounds %struct.Reg, %struct.Reg* %2029, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %2030 to i64*
  %2031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2032 = getelementptr inbounds %struct.GPR, %struct.GPR* %2031, i32 0, i32 5
  %2033 = getelementptr inbounds %struct.Reg, %struct.Reg* %2032, i32 0, i32 0
  %RCX.i1102 = bitcast %union.anon* %2033 to i64*
  %2034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2035 = getelementptr inbounds %struct.GPR, %struct.GPR* %2034, i32 0, i32 15
  %2036 = getelementptr inbounds %struct.Reg, %struct.Reg* %2035, i32 0, i32 0
  %RBP.i1103 = bitcast %union.anon* %2036 to i64*
  %2037 = load i64, i64* %RBP.i1103
  %2038 = sub i64 %2037, 24
  %2039 = load i64, i64* %PC.i1101
  %2040 = add i64 %2039, 4
  store i64 %2040, i64* %PC.i1101
  %2041 = inttoptr i64 %2038 to i64*
  %2042 = load i64, i64* %2041
  store i64 %2042, i64* %RCX.i1102, align 8
  store %struct.Memory* %loadMem_41225d, %struct.Memory** %MEMORY
  %loadMem_412261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2044 = getelementptr inbounds %struct.GPR, %struct.GPR* %2043, i32 0, i32 33
  %2045 = getelementptr inbounds %struct.Reg, %struct.Reg* %2044, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %2045 to i64*
  %2046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2047 = getelementptr inbounds %struct.GPR, %struct.GPR* %2046, i32 0, i32 7
  %2048 = getelementptr inbounds %struct.Reg, %struct.Reg* %2047, i32 0, i32 0
  %RDX.i1099 = bitcast %union.anon* %2048 to i64*
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2050 = getelementptr inbounds %struct.GPR, %struct.GPR* %2049, i32 0, i32 15
  %2051 = getelementptr inbounds %struct.Reg, %struct.Reg* %2050, i32 0, i32 0
  %RBP.i1100 = bitcast %union.anon* %2051 to i64*
  %2052 = load i64, i64* %RBP.i1100
  %2053 = sub i64 %2052, 36
  %2054 = load i64, i64* %PC.i1098
  %2055 = add i64 %2054, 4
  store i64 %2055, i64* %PC.i1098
  %2056 = inttoptr i64 %2053 to i32*
  %2057 = load i32, i32* %2056
  %2058 = sext i32 %2057 to i64
  store i64 %2058, i64* %RDX.i1099, align 8
  store %struct.Memory* %loadMem_412261, %struct.Memory** %MEMORY
  %loadMem_412265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2060 = getelementptr inbounds %struct.GPR, %struct.GPR* %2059, i32 0, i32 33
  %2061 = getelementptr inbounds %struct.Reg, %struct.Reg* %2060, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %2061 to i64*
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2063 = getelementptr inbounds %struct.GPR, %struct.GPR* %2062, i32 0, i32 1
  %2064 = getelementptr inbounds %struct.Reg, %struct.Reg* %2063, i32 0, i32 0
  %EAX.i1095 = bitcast %union.anon* %2064 to i32*
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2066 = getelementptr inbounds %struct.GPR, %struct.GPR* %2065, i32 0, i32 5
  %2067 = getelementptr inbounds %struct.Reg, %struct.Reg* %2066, i32 0, i32 0
  %RCX.i1096 = bitcast %union.anon* %2067 to i64*
  %2068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2069 = getelementptr inbounds %struct.GPR, %struct.GPR* %2068, i32 0, i32 7
  %2070 = getelementptr inbounds %struct.Reg, %struct.Reg* %2069, i32 0, i32 0
  %RDX.i1097 = bitcast %union.anon* %2070 to i64*
  %2071 = load i64, i64* %RCX.i1096
  %2072 = load i64, i64* %RDX.i1097
  %2073 = mul i64 %2072, 4
  %2074 = add i64 %2073, %2071
  %2075 = load i32, i32* %EAX.i1095
  %2076 = zext i32 %2075 to i64
  %2077 = load i64, i64* %PC.i1094
  %2078 = add i64 %2077, 3
  store i64 %2078, i64* %PC.i1094
  %2079 = inttoptr i64 %2074 to i32*
  store i32 %2075, i32* %2079
  store %struct.Memory* %loadMem_412265, %struct.Memory** %MEMORY
  br label %block_.L_412268

block_.L_412268:                                  ; preds = %block_41225a, %block_41224f
  %loadMem_412268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2081 = getelementptr inbounds %struct.GPR, %struct.GPR* %2080, i32 0, i32 33
  %2082 = getelementptr inbounds %struct.Reg, %struct.Reg* %2081, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %2082 to i64*
  %2083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2084 = getelementptr inbounds %struct.GPR, %struct.GPR* %2083, i32 0, i32 1
  %2085 = getelementptr inbounds %struct.Reg, %struct.Reg* %2084, i32 0, i32 0
  %RAX.i1092 = bitcast %union.anon* %2085 to i64*
  %2086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2087 = getelementptr inbounds %struct.GPR, %struct.GPR* %2086, i32 0, i32 15
  %2088 = getelementptr inbounds %struct.Reg, %struct.Reg* %2087, i32 0, i32 0
  %RBP.i1093 = bitcast %union.anon* %2088 to i64*
  %2089 = load i64, i64* %RBP.i1093
  %2090 = sub i64 %2089, 36
  %2091 = load i64, i64* %PC.i1091
  %2092 = add i64 %2091, 3
  store i64 %2092, i64* %PC.i1091
  %2093 = inttoptr i64 %2090 to i32*
  %2094 = load i32, i32* %2093
  %2095 = zext i32 %2094 to i64
  store i64 %2095, i64* %RAX.i1092, align 8
  store %struct.Memory* %loadMem_412268, %struct.Memory** %MEMORY
  %loadMem_41226b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2097 = getelementptr inbounds %struct.GPR, %struct.GPR* %2096, i32 0, i32 33
  %2098 = getelementptr inbounds %struct.Reg, %struct.Reg* %2097, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %2098 to i64*
  %2099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2100 = getelementptr inbounds %struct.GPR, %struct.GPR* %2099, i32 0, i32 1
  %2101 = getelementptr inbounds %struct.Reg, %struct.Reg* %2100, i32 0, i32 0
  %RAX.i1090 = bitcast %union.anon* %2101 to i64*
  %2102 = load i64, i64* %RAX.i1090
  %2103 = load i64, i64* %PC.i1089
  %2104 = add i64 %2103, 3
  store i64 %2104, i64* %PC.i1089
  %2105 = trunc i64 %2102 to i32
  %2106 = add i32 1, %2105
  %2107 = zext i32 %2106 to i64
  store i64 %2107, i64* %RAX.i1090, align 8
  %2108 = icmp ult i32 %2106, %2105
  %2109 = icmp ult i32 %2106, 1
  %2110 = or i1 %2108, %2109
  %2111 = zext i1 %2110 to i8
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2111, i8* %2112, align 1
  %2113 = and i32 %2106, 255
  %2114 = call i32 @llvm.ctpop.i32(i32 %2113)
  %2115 = trunc i32 %2114 to i8
  %2116 = and i8 %2115, 1
  %2117 = xor i8 %2116, 1
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2117, i8* %2118, align 1
  %2119 = xor i64 1, %2102
  %2120 = trunc i64 %2119 to i32
  %2121 = xor i32 %2120, %2106
  %2122 = lshr i32 %2121, 4
  %2123 = trunc i32 %2122 to i8
  %2124 = and i8 %2123, 1
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2124, i8* %2125, align 1
  %2126 = icmp eq i32 %2106, 0
  %2127 = zext i1 %2126 to i8
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2127, i8* %2128, align 1
  %2129 = lshr i32 %2106, 31
  %2130 = trunc i32 %2129 to i8
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2130, i8* %2131, align 1
  %2132 = lshr i32 %2105, 31
  %2133 = xor i32 %2129, %2132
  %2134 = add i32 %2133, %2129
  %2135 = icmp eq i32 %2134, 2
  %2136 = zext i1 %2135 to i8
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2136, i8* %2137, align 1
  store %struct.Memory* %loadMem_41226b, %struct.Memory** %MEMORY
  %loadMem_41226e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2139 = getelementptr inbounds %struct.GPR, %struct.GPR* %2138, i32 0, i32 33
  %2140 = getelementptr inbounds %struct.Reg, %struct.Reg* %2139, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %2140 to i64*
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2142 = getelementptr inbounds %struct.GPR, %struct.GPR* %2141, i32 0, i32 1
  %2143 = getelementptr inbounds %struct.Reg, %struct.Reg* %2142, i32 0, i32 0
  %EAX.i1087 = bitcast %union.anon* %2143 to i32*
  %2144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2145 = getelementptr inbounds %struct.GPR, %struct.GPR* %2144, i32 0, i32 15
  %2146 = getelementptr inbounds %struct.Reg, %struct.Reg* %2145, i32 0, i32 0
  %RBP.i1088 = bitcast %union.anon* %2146 to i64*
  %2147 = load i64, i64* %RBP.i1088
  %2148 = sub i64 %2147, 36
  %2149 = load i32, i32* %EAX.i1087
  %2150 = zext i32 %2149 to i64
  %2151 = load i64, i64* %PC.i1086
  %2152 = add i64 %2151, 3
  store i64 %2152, i64* %PC.i1086
  %2153 = inttoptr i64 %2148 to i32*
  store i32 %2149, i32* %2153
  store %struct.Memory* %loadMem_41226e, %struct.Memory** %MEMORY
  %loadMem_412271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2155 = getelementptr inbounds %struct.GPR, %struct.GPR* %2154, i32 0, i32 33
  %2156 = getelementptr inbounds %struct.Reg, %struct.Reg* %2155, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %2156 to i64*
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2158 = getelementptr inbounds %struct.GPR, %struct.GPR* %2157, i32 0, i32 1
  %2159 = getelementptr inbounds %struct.Reg, %struct.Reg* %2158, i32 0, i32 0
  %RAX.i1084 = bitcast %union.anon* %2159 to i64*
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2161 = getelementptr inbounds %struct.GPR, %struct.GPR* %2160, i32 0, i32 15
  %2162 = getelementptr inbounds %struct.Reg, %struct.Reg* %2161, i32 0, i32 0
  %RBP.i1085 = bitcast %union.anon* %2162 to i64*
  %2163 = load i64, i64* %RBP.i1085
  %2164 = sub i64 %2163, 36
  %2165 = load i64, i64* %PC.i1083
  %2166 = add i64 %2165, 3
  store i64 %2166, i64* %PC.i1083
  %2167 = inttoptr i64 %2164 to i32*
  %2168 = load i32, i32* %2167
  %2169 = zext i32 %2168 to i64
  store i64 %2169, i64* %RAX.i1084, align 8
  store %struct.Memory* %loadMem_412271, %struct.Memory** %MEMORY
  %loadMem_412274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2171 = getelementptr inbounds %struct.GPR, %struct.GPR* %2170, i32 0, i32 33
  %2172 = getelementptr inbounds %struct.Reg, %struct.Reg* %2171, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %2172 to i64*
  %2173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2174 = getelementptr inbounds %struct.GPR, %struct.GPR* %2173, i32 0, i32 1
  %2175 = getelementptr inbounds %struct.Reg, %struct.Reg* %2174, i32 0, i32 0
  %EAX.i1081 = bitcast %union.anon* %2175 to i32*
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2177 = getelementptr inbounds %struct.GPR, %struct.GPR* %2176, i32 0, i32 15
  %2178 = getelementptr inbounds %struct.Reg, %struct.Reg* %2177, i32 0, i32 0
  %RBP.i1082 = bitcast %union.anon* %2178 to i64*
  %2179 = load i32, i32* %EAX.i1081
  %2180 = zext i32 %2179 to i64
  %2181 = load i64, i64* %RBP.i1082
  %2182 = sub i64 %2181, 16
  %2183 = load i64, i64* %PC.i1080
  %2184 = add i64 %2183, 3
  store i64 %2184, i64* %PC.i1080
  %2185 = inttoptr i64 %2182 to i32*
  %2186 = load i32, i32* %2185
  %2187 = sub i32 %2179, %2186
  %2188 = icmp ult i32 %2179, %2186
  %2189 = zext i1 %2188 to i8
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2189, i8* %2190, align 1
  %2191 = and i32 %2187, 255
  %2192 = call i32 @llvm.ctpop.i32(i32 %2191)
  %2193 = trunc i32 %2192 to i8
  %2194 = and i8 %2193, 1
  %2195 = xor i8 %2194, 1
  %2196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2195, i8* %2196, align 1
  %2197 = xor i32 %2186, %2179
  %2198 = xor i32 %2197, %2187
  %2199 = lshr i32 %2198, 4
  %2200 = trunc i32 %2199 to i8
  %2201 = and i8 %2200, 1
  %2202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2201, i8* %2202, align 1
  %2203 = icmp eq i32 %2187, 0
  %2204 = zext i1 %2203 to i8
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2204, i8* %2205, align 1
  %2206 = lshr i32 %2187, 31
  %2207 = trunc i32 %2206 to i8
  %2208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2207, i8* %2208, align 1
  %2209 = lshr i32 %2179, 31
  %2210 = lshr i32 %2186, 31
  %2211 = xor i32 %2210, %2209
  %2212 = xor i32 %2206, %2209
  %2213 = add i32 %2212, %2211
  %2214 = icmp eq i32 %2213, 2
  %2215 = zext i1 %2214 to i8
  %2216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2215, i8* %2216, align 1
  store %struct.Memory* %loadMem_412274, %struct.Memory** %MEMORY
  %loadMem_412277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2218 = getelementptr inbounds %struct.GPR, %struct.GPR* %2217, i32 0, i32 33
  %2219 = getelementptr inbounds %struct.Reg, %struct.Reg* %2218, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %2219 to i64*
  %2220 = load i64, i64* %PC.i1079
  %2221 = add i64 %2220, 17
  %2222 = load i64, i64* %PC.i1079
  %2223 = add i64 %2222, 6
  %2224 = load i64, i64* %PC.i1079
  %2225 = add i64 %2224, 6
  store i64 %2225, i64* %PC.i1079
  %2226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2227 = load i8, i8* %2226, align 1
  %2228 = icmp ne i8 %2227, 0
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2230 = load i8, i8* %2229, align 1
  %2231 = icmp ne i8 %2230, 0
  %2232 = xor i1 %2228, %2231
  %2233 = zext i1 %2232 to i8
  store i8 %2233, i8* %BRANCH_TAKEN, align 1
  %2234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2235 = select i1 %2232, i64 %2221, i64 %2223
  store i64 %2235, i64* %2234, align 8
  store %struct.Memory* %loadMem_412277, %struct.Memory** %MEMORY
  %loadBr_412277 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412277 = icmp eq i8 %loadBr_412277, 1
  br i1 %cmpBr_412277, label %block_.L_412288, label %block_41227d

block_41227d:                                     ; preds = %block_.L_412268
  %loadMem_41227d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2237 = getelementptr inbounds %struct.GPR, %struct.GPR* %2236, i32 0, i32 33
  %2238 = getelementptr inbounds %struct.Reg, %struct.Reg* %2237, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %2238 to i64*
  %2239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2240 = getelementptr inbounds %struct.GPR, %struct.GPR* %2239, i32 0, i32 1
  %2241 = getelementptr inbounds %struct.Reg, %struct.Reg* %2240, i32 0, i32 0
  %RAX.i1077 = bitcast %union.anon* %2241 to i64*
  %2242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2243 = getelementptr inbounds %struct.GPR, %struct.GPR* %2242, i32 0, i32 15
  %2244 = getelementptr inbounds %struct.Reg, %struct.Reg* %2243, i32 0, i32 0
  %RBP.i1078 = bitcast %union.anon* %2244 to i64*
  %2245 = load i64, i64* %RBP.i1078
  %2246 = sub i64 %2245, 36
  %2247 = load i64, i64* %PC.i1076
  %2248 = add i64 %2247, 3
  store i64 %2248, i64* %PC.i1076
  %2249 = inttoptr i64 %2246 to i32*
  %2250 = load i32, i32* %2249
  %2251 = zext i32 %2250 to i64
  store i64 %2251, i64* %RAX.i1077, align 8
  store %struct.Memory* %loadMem_41227d, %struct.Memory** %MEMORY
  %loadMem_412280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2253 = getelementptr inbounds %struct.GPR, %struct.GPR* %2252, i32 0, i32 33
  %2254 = getelementptr inbounds %struct.Reg, %struct.Reg* %2253, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %2254 to i64*
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2256 = getelementptr inbounds %struct.GPR, %struct.GPR* %2255, i32 0, i32 1
  %2257 = getelementptr inbounds %struct.Reg, %struct.Reg* %2256, i32 0, i32 0
  %EAX.i1074 = bitcast %union.anon* %2257 to i32*
  %2258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2259 = getelementptr inbounds %struct.GPR, %struct.GPR* %2258, i32 0, i32 15
  %2260 = getelementptr inbounds %struct.Reg, %struct.Reg* %2259, i32 0, i32 0
  %RBP.i1075 = bitcast %union.anon* %2260 to i64*
  %2261 = load i64, i64* %RBP.i1075
  %2262 = sub i64 %2261, 4
  %2263 = load i32, i32* %EAX.i1074
  %2264 = zext i32 %2263 to i64
  %2265 = load i64, i64* %PC.i1073
  %2266 = add i64 %2265, 3
  store i64 %2266, i64* %PC.i1073
  %2267 = inttoptr i64 %2262 to i32*
  store i32 %2263, i32* %2267
  store %struct.Memory* %loadMem_412280, %struct.Memory** %MEMORY
  %loadMem_412283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2269 = getelementptr inbounds %struct.GPR, %struct.GPR* %2268, i32 0, i32 33
  %2270 = getelementptr inbounds %struct.Reg, %struct.Reg* %2269, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %2270 to i64*
  %2271 = load i64, i64* %PC.i1072
  %2272 = add i64 %2271, 2065
  %2273 = load i64, i64* %PC.i1072
  %2274 = add i64 %2273, 5
  store i64 %2274, i64* %PC.i1072
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2272, i64* %2275, align 8
  store %struct.Memory* %loadMem_412283, %struct.Memory** %MEMORY
  br label %block_.L_412a94

block_.L_412288:                                  ; preds = %block_.L_412268
  %loadMem_412288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2277 = getelementptr inbounds %struct.GPR, %struct.GPR* %2276, i32 0, i32 33
  %2278 = getelementptr inbounds %struct.Reg, %struct.Reg* %2277, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %2278 to i64*
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2280 = getelementptr inbounds %struct.GPR, %struct.GPR* %2279, i32 0, i32 1
  %2281 = getelementptr inbounds %struct.Reg, %struct.Reg* %2280, i32 0, i32 0
  %RAX.i1071 = bitcast %union.anon* %2281 to i64*
  %2282 = load i64, i64* %PC.i1070
  %2283 = add i64 %2282, 7
  store i64 %2283, i64* %PC.i1070
  %2284 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %2285 = zext i32 %2284 to i64
  store i64 %2285, i64* %RAX.i1071, align 8
  store %struct.Memory* %loadMem_412288, %struct.Memory** %MEMORY
  %loadMem_41228f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2287 = getelementptr inbounds %struct.GPR, %struct.GPR* %2286, i32 0, i32 33
  %2288 = getelementptr inbounds %struct.Reg, %struct.Reg* %2287, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %2288 to i64*
  %2289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2290 = getelementptr inbounds %struct.GPR, %struct.GPR* %2289, i32 0, i32 5
  %2291 = getelementptr inbounds %struct.Reg, %struct.Reg* %2290, i32 0, i32 0
  %RCX.i1068 = bitcast %union.anon* %2291 to i64*
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2293 = getelementptr inbounds %struct.GPR, %struct.GPR* %2292, i32 0, i32 15
  %2294 = getelementptr inbounds %struct.Reg, %struct.Reg* %2293, i32 0, i32 0
  %RBP.i1069 = bitcast %union.anon* %2294 to i64*
  %2295 = load i64, i64* %RBP.i1069
  %2296 = sub i64 %2295, 76
  %2297 = load i64, i64* %PC.i1067
  %2298 = add i64 %2297, 4
  store i64 %2298, i64* %PC.i1067
  %2299 = inttoptr i64 %2296 to i32*
  %2300 = load i32, i32* %2299
  %2301 = sext i32 %2300 to i64
  store i64 %2301, i64* %RCX.i1068, align 8
  store %struct.Memory* %loadMem_41228f, %struct.Memory** %MEMORY
  %loadMem_412293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2303 = getelementptr inbounds %struct.GPR, %struct.GPR* %2302, i32 0, i32 33
  %2304 = getelementptr inbounds %struct.Reg, %struct.Reg* %2303, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %2304 to i64*
  %2305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2306 = getelementptr inbounds %struct.GPR, %struct.GPR* %2305, i32 0, i32 1
  %2307 = getelementptr inbounds %struct.Reg, %struct.Reg* %2306, i32 0, i32 0
  %EAX.i1065 = bitcast %union.anon* %2307 to i32*
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2309 = getelementptr inbounds %struct.GPR, %struct.GPR* %2308, i32 0, i32 5
  %2310 = getelementptr inbounds %struct.Reg, %struct.Reg* %2309, i32 0, i32 0
  %RCX.i1066 = bitcast %union.anon* %2310 to i64*
  %2311 = load i64, i64* %RCX.i1066
  %2312 = mul i64 %2311, 4
  %2313 = add i64 %2312, 11185584
  %2314 = load i32, i32* %EAX.i1065
  %2315 = zext i32 %2314 to i64
  %2316 = load i64, i64* %PC.i1064
  %2317 = add i64 %2316, 7
  store i64 %2317, i64* %PC.i1064
  %2318 = inttoptr i64 %2313 to i32*
  store i32 %2314, i32* %2318
  store %struct.Memory* %loadMem_412293, %struct.Memory** %MEMORY
  %loadMem_41229a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2320 = getelementptr inbounds %struct.GPR, %struct.GPR* %2319, i32 0, i32 33
  %2321 = getelementptr inbounds %struct.Reg, %struct.Reg* %2320, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %2321 to i64*
  %2322 = load i64, i64* %PC.i1063
  %2323 = add i64 %2322, 1059
  %2324 = load i64, i64* %PC.i1063
  %2325 = add i64 %2324, 5
  store i64 %2325, i64* %PC.i1063
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2323, i64* %2326, align 8
  store %struct.Memory* %loadMem_41229a, %struct.Memory** %MEMORY
  br label %block_.L_4126bd

block_.L_41229f:                                  ; preds = %block_412237, %block_412211
  %loadMem_41229f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2328 = getelementptr inbounds %struct.GPR, %struct.GPR* %2327, i32 0, i32 33
  %2329 = getelementptr inbounds %struct.Reg, %struct.Reg* %2328, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %2329 to i64*
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2331 = getelementptr inbounds %struct.GPR, %struct.GPR* %2330, i32 0, i32 1
  %2332 = getelementptr inbounds %struct.Reg, %struct.Reg* %2331, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %2332 to i64*
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2334 = getelementptr inbounds %struct.GPR, %struct.GPR* %2333, i32 0, i32 15
  %2335 = getelementptr inbounds %struct.Reg, %struct.Reg* %2334, i32 0, i32 0
  %RBP.i1062 = bitcast %union.anon* %2335 to i64*
  %2336 = load i64, i64* %RBP.i1062
  %2337 = sub i64 %2336, 76
  %2338 = load i64, i64* %PC.i1060
  %2339 = add i64 %2338, 4
  store i64 %2339, i64* %PC.i1060
  %2340 = inttoptr i64 %2337 to i32*
  %2341 = load i32, i32* %2340
  %2342 = sext i32 %2341 to i64
  store i64 %2342, i64* %RAX.i1061, align 8
  store %struct.Memory* %loadMem_41229f, %struct.Memory** %MEMORY
  %loadMem_4122a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2344 = getelementptr inbounds %struct.GPR, %struct.GPR* %2343, i32 0, i32 33
  %2345 = getelementptr inbounds %struct.Reg, %struct.Reg* %2344, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %2345 to i64*
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2347 = getelementptr inbounds %struct.GPR, %struct.GPR* %2346, i32 0, i32 1
  %2348 = getelementptr inbounds %struct.Reg, %struct.Reg* %2347, i32 0, i32 0
  %RAX.i1058 = bitcast %union.anon* %2348 to i64*
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2350 = getelementptr inbounds %struct.GPR, %struct.GPR* %2349, i32 0, i32 5
  %2351 = getelementptr inbounds %struct.Reg, %struct.Reg* %2350, i32 0, i32 0
  %RCX.i1059 = bitcast %union.anon* %2351 to i64*
  %2352 = load i64, i64* %RAX.i1058
  %2353 = add i64 %2352, 12099168
  %2354 = load i64, i64* %PC.i1057
  %2355 = add i64 %2354, 8
  store i64 %2355, i64* %PC.i1057
  %2356 = inttoptr i64 %2353 to i8*
  %2357 = load i8, i8* %2356
  %2358 = zext i8 %2357 to i64
  store i64 %2358, i64* %RCX.i1059, align 8
  store %struct.Memory* %loadMem_4122a3, %struct.Memory** %MEMORY
  %loadMem_4122ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2360 = getelementptr inbounds %struct.GPR, %struct.GPR* %2359, i32 0, i32 33
  %2361 = getelementptr inbounds %struct.Reg, %struct.Reg* %2360, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %2361 to i64*
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2363 = getelementptr inbounds %struct.GPR, %struct.GPR* %2362, i32 0, i32 5
  %2364 = getelementptr inbounds %struct.Reg, %struct.Reg* %2363, i32 0, i32 0
  %ECX.i1055 = bitcast %union.anon* %2364 to i32*
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2366 = getelementptr inbounds %struct.GPR, %struct.GPR* %2365, i32 0, i32 15
  %2367 = getelementptr inbounds %struct.Reg, %struct.Reg* %2366, i32 0, i32 0
  %RBP.i1056 = bitcast %union.anon* %2367 to i64*
  %2368 = load i32, i32* %ECX.i1055
  %2369 = zext i32 %2368 to i64
  %2370 = load i64, i64* %RBP.i1056
  %2371 = sub i64 %2370, 12
  %2372 = load i64, i64* %PC.i1054
  %2373 = add i64 %2372, 3
  store i64 %2373, i64* %PC.i1054
  %2374 = inttoptr i64 %2371 to i32*
  %2375 = load i32, i32* %2374
  %2376 = sub i32 %2368, %2375
  %2377 = icmp ult i32 %2368, %2375
  %2378 = zext i1 %2377 to i8
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2378, i8* %2379, align 1
  %2380 = and i32 %2376, 255
  %2381 = call i32 @llvm.ctpop.i32(i32 %2380)
  %2382 = trunc i32 %2381 to i8
  %2383 = and i8 %2382, 1
  %2384 = xor i8 %2383, 1
  %2385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2384, i8* %2385, align 1
  %2386 = xor i32 %2375, %2368
  %2387 = xor i32 %2386, %2376
  %2388 = lshr i32 %2387, 4
  %2389 = trunc i32 %2388 to i8
  %2390 = and i8 %2389, 1
  %2391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2390, i8* %2391, align 1
  %2392 = icmp eq i32 %2376, 0
  %2393 = zext i1 %2392 to i8
  %2394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2393, i8* %2394, align 1
  %2395 = lshr i32 %2376, 31
  %2396 = trunc i32 %2395 to i8
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2396, i8* %2397, align 1
  %2398 = lshr i32 %2368, 31
  %2399 = lshr i32 %2375, 31
  %2400 = xor i32 %2399, %2398
  %2401 = xor i32 %2395, %2398
  %2402 = add i32 %2401, %2400
  %2403 = icmp eq i32 %2402, 2
  %2404 = zext i1 %2403 to i8
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2404, i8* %2405, align 1
  store %struct.Memory* %loadMem_4122ab, %struct.Memory** %MEMORY
  %loadMem_4122ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %2406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2407 = getelementptr inbounds %struct.GPR, %struct.GPR* %2406, i32 0, i32 33
  %2408 = getelementptr inbounds %struct.Reg, %struct.Reg* %2407, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %2408 to i64*
  %2409 = load i64, i64* %PC.i1053
  %2410 = add i64 %2409, 938
  %2411 = load i64, i64* %PC.i1053
  %2412 = add i64 %2411, 6
  %2413 = load i64, i64* %PC.i1053
  %2414 = add i64 %2413, 6
  store i64 %2414, i64* %PC.i1053
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2416 = load i8, i8* %2415, align 1
  %2417 = icmp eq i8 %2416, 0
  %2418 = zext i1 %2417 to i8
  store i8 %2418, i8* %BRANCH_TAKEN, align 1
  %2419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2420 = select i1 %2417, i64 %2410, i64 %2412
  store i64 %2420, i64* %2419, align 8
  store %struct.Memory* %loadMem_4122ae, %struct.Memory** %MEMORY
  %loadBr_4122ae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4122ae = icmp eq i8 %loadBr_4122ae, 1
  br i1 %cmpBr_4122ae, label %block_.L_412658, label %block_4122b4

block_4122b4:                                     ; preds = %block_.L_41229f
  %loadMem_4122b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2422 = getelementptr inbounds %struct.GPR, %struct.GPR* %2421, i32 0, i32 33
  %2423 = getelementptr inbounds %struct.Reg, %struct.Reg* %2422, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %2423 to i64*
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2425 = getelementptr inbounds %struct.GPR, %struct.GPR* %2424, i32 0, i32 1
  %2426 = getelementptr inbounds %struct.Reg, %struct.Reg* %2425, i32 0, i32 0
  %RAX.i1052 = bitcast %union.anon* %2426 to i64*
  %2427 = load i64, i64* %PC.i1051
  %2428 = add i64 %2427, 10
  store i64 %2428, i64* %PC.i1051
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1052, align 8
  store %struct.Memory* %loadMem_4122b4, %struct.Memory** %MEMORY
  %loadMem_4122be = load %struct.Memory*, %struct.Memory** %MEMORY
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2430 = getelementptr inbounds %struct.GPR, %struct.GPR* %2429, i32 0, i32 33
  %2431 = getelementptr inbounds %struct.Reg, %struct.Reg* %2430, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %2431 to i64*
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2433 = getelementptr inbounds %struct.GPR, %struct.GPR* %2432, i32 0, i32 5
  %2434 = getelementptr inbounds %struct.Reg, %struct.Reg* %2433, i32 0, i32 0
  %RCX.i1049 = bitcast %union.anon* %2434 to i64*
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2436 = getelementptr inbounds %struct.GPR, %struct.GPR* %2435, i32 0, i32 15
  %2437 = getelementptr inbounds %struct.Reg, %struct.Reg* %2436, i32 0, i32 0
  %RBP.i1050 = bitcast %union.anon* %2437 to i64*
  %2438 = load i64, i64* %RBP.i1050
  %2439 = sub i64 %2438, 76
  %2440 = load i64, i64* %PC.i1048
  %2441 = add i64 %2440, 4
  store i64 %2441, i64* %PC.i1048
  %2442 = inttoptr i64 %2439 to i32*
  %2443 = load i32, i32* %2442
  %2444 = sext i32 %2443 to i64
  store i64 %2444, i64* %RCX.i1049, align 8
  store %struct.Memory* %loadMem_4122be, %struct.Memory** %MEMORY
  %loadMem_4122c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2446 = getelementptr inbounds %struct.GPR, %struct.GPR* %2445, i32 0, i32 33
  %2447 = getelementptr inbounds %struct.Reg, %struct.Reg* %2446, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %2447 to i64*
  %2448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2449 = getelementptr inbounds %struct.GPR, %struct.GPR* %2448, i32 0, i32 5
  %2450 = getelementptr inbounds %struct.Reg, %struct.Reg* %2449, i32 0, i32 0
  %RCX.i1047 = bitcast %union.anon* %2450 to i64*
  %2451 = load i64, i64* %RCX.i1047
  %2452 = mul i64 %2451, 4
  %2453 = add i64 %2452, 11187184
  %2454 = load i64, i64* %PC.i1046
  %2455 = add i64 %2454, 8
  store i64 %2455, i64* %PC.i1046
  %2456 = inttoptr i64 %2453 to i32*
  %2457 = load i32, i32* %2456
  %2458 = sext i32 %2457 to i64
  store i64 %2458, i64* %RCX.i1047, align 8
  store %struct.Memory* %loadMem_4122c2, %struct.Memory** %MEMORY
  %loadMem_4122ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2460 = getelementptr inbounds %struct.GPR, %struct.GPR* %2459, i32 0, i32 33
  %2461 = getelementptr inbounds %struct.Reg, %struct.Reg* %2460, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %2461 to i64*
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2463 = getelementptr inbounds %struct.GPR, %struct.GPR* %2462, i32 0, i32 5
  %2464 = getelementptr inbounds %struct.Reg, %struct.Reg* %2463, i32 0, i32 0
  %RCX.i1045 = bitcast %union.anon* %2464 to i64*
  %2465 = load i64, i64* %RCX.i1045
  %2466 = load i64, i64* %PC.i1044
  %2467 = add i64 %2466, 7
  store i64 %2467, i64* %PC.i1044
  %2468 = sext i64 %2465 to i128
  %2469 = and i128 %2468, -18446744073709551616
  %2470 = zext i64 %2465 to i128
  %2471 = or i128 %2469, %2470
  %2472 = mul i128 744, %2471
  %2473 = trunc i128 %2472 to i64
  store i64 %2473, i64* %RCX.i1045, align 8
  %2474 = sext i64 %2473 to i128
  %2475 = icmp ne i128 %2474, %2472
  %2476 = zext i1 %2475 to i8
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2476, i8* %2477, align 1
  %2478 = trunc i128 %2472 to i32
  %2479 = and i32 %2478, 255
  %2480 = call i32 @llvm.ctpop.i32(i32 %2479)
  %2481 = trunc i32 %2480 to i8
  %2482 = and i8 %2481, 1
  %2483 = xor i8 %2482, 1
  %2484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2483, i8* %2484, align 1
  %2485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2485, align 1
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2486, align 1
  %2487 = lshr i64 %2473, 63
  %2488 = trunc i64 %2487 to i8
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2488, i8* %2489, align 1
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2476, i8* %2490, align 1
  store %struct.Memory* %loadMem_4122ca, %struct.Memory** %MEMORY
  %loadMem_4122d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2492 = getelementptr inbounds %struct.GPR, %struct.GPR* %2491, i32 0, i32 33
  %2493 = getelementptr inbounds %struct.Reg, %struct.Reg* %2492, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %2493 to i64*
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2495 = getelementptr inbounds %struct.GPR, %struct.GPR* %2494, i32 0, i32 1
  %2496 = getelementptr inbounds %struct.Reg, %struct.Reg* %2495, i32 0, i32 0
  %RAX.i1042 = bitcast %union.anon* %2496 to i64*
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2498 = getelementptr inbounds %struct.GPR, %struct.GPR* %2497, i32 0, i32 5
  %2499 = getelementptr inbounds %struct.Reg, %struct.Reg* %2498, i32 0, i32 0
  %RCX.i1043 = bitcast %union.anon* %2499 to i64*
  %2500 = load i64, i64* %RAX.i1042
  %2501 = load i64, i64* %RCX.i1043
  %2502 = load i64, i64* %PC.i1041
  %2503 = add i64 %2502, 3
  store i64 %2503, i64* %PC.i1041
  %2504 = add i64 %2501, %2500
  store i64 %2504, i64* %RAX.i1042, align 8
  %2505 = icmp ult i64 %2504, %2500
  %2506 = icmp ult i64 %2504, %2501
  %2507 = or i1 %2505, %2506
  %2508 = zext i1 %2507 to i8
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2508, i8* %2509, align 1
  %2510 = trunc i64 %2504 to i32
  %2511 = and i32 %2510, 255
  %2512 = call i32 @llvm.ctpop.i32(i32 %2511)
  %2513 = trunc i32 %2512 to i8
  %2514 = and i8 %2513, 1
  %2515 = xor i8 %2514, 1
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2515, i8* %2516, align 1
  %2517 = xor i64 %2501, %2500
  %2518 = xor i64 %2517, %2504
  %2519 = lshr i64 %2518, 4
  %2520 = trunc i64 %2519 to i8
  %2521 = and i8 %2520, 1
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2521, i8* %2522, align 1
  %2523 = icmp eq i64 %2504, 0
  %2524 = zext i1 %2523 to i8
  %2525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2524, i8* %2525, align 1
  %2526 = lshr i64 %2504, 63
  %2527 = trunc i64 %2526 to i8
  %2528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2527, i8* %2528, align 1
  %2529 = lshr i64 %2500, 63
  %2530 = lshr i64 %2501, 63
  %2531 = xor i64 %2526, %2529
  %2532 = xor i64 %2526, %2530
  %2533 = add i64 %2531, %2532
  %2534 = icmp eq i64 %2533, 2
  %2535 = zext i1 %2534 to i8
  %2536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2535, i8* %2536, align 1
  store %struct.Memory* %loadMem_4122d1, %struct.Memory** %MEMORY
  %loadMem_4122d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2538 = getelementptr inbounds %struct.GPR, %struct.GPR* %2537, i32 0, i32 33
  %2539 = getelementptr inbounds %struct.Reg, %struct.Reg* %2538, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %2539 to i64*
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2541 = getelementptr inbounds %struct.GPR, %struct.GPR* %2540, i32 0, i32 1
  %2542 = getelementptr inbounds %struct.Reg, %struct.Reg* %2541, i32 0, i32 0
  %RAX.i1039 = bitcast %union.anon* %2542 to i64*
  %2543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2544 = getelementptr inbounds %struct.GPR, %struct.GPR* %2543, i32 0, i32 7
  %2545 = getelementptr inbounds %struct.Reg, %struct.Reg* %2544, i32 0, i32 0
  %RDX.i1040 = bitcast %union.anon* %2545 to i64*
  %2546 = load i64, i64* %RAX.i1039
  %2547 = add i64 %2546, 740
  %2548 = load i64, i64* %PC.i1038
  %2549 = add i64 %2548, 6
  store i64 %2549, i64* %PC.i1038
  %2550 = inttoptr i64 %2547 to i32*
  %2551 = load i32, i32* %2550
  %2552 = zext i32 %2551 to i64
  store i64 %2552, i64* %RDX.i1040, align 8
  store %struct.Memory* %loadMem_4122d4, %struct.Memory** %MEMORY
  %loadMem_4122da = load %struct.Memory*, %struct.Memory** %MEMORY
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2554 = getelementptr inbounds %struct.GPR, %struct.GPR* %2553, i32 0, i32 33
  %2555 = getelementptr inbounds %struct.Reg, %struct.Reg* %2554, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %2555 to i64*
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2557 = getelementptr inbounds %struct.GPR, %struct.GPR* %2556, i32 0, i32 7
  %2558 = getelementptr inbounds %struct.Reg, %struct.Reg* %2557, i32 0, i32 0
  %EDX.i1037 = bitcast %union.anon* %2558 to i32*
  %2559 = load i32, i32* %EDX.i1037
  %2560 = zext i32 %2559 to i64
  %2561 = load i64, i64* %PC.i1036
  %2562 = add i64 %2561, 7
  store i64 %2562, i64* %PC.i1036
  %2563 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %2564 = sub i32 %2559, %2563
  %2565 = icmp ult i32 %2559, %2563
  %2566 = zext i1 %2565 to i8
  %2567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2566, i8* %2567, align 1
  %2568 = and i32 %2564, 255
  %2569 = call i32 @llvm.ctpop.i32(i32 %2568)
  %2570 = trunc i32 %2569 to i8
  %2571 = and i8 %2570, 1
  %2572 = xor i8 %2571, 1
  %2573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2572, i8* %2573, align 1
  %2574 = xor i32 %2563, %2559
  %2575 = xor i32 %2574, %2564
  %2576 = lshr i32 %2575, 4
  %2577 = trunc i32 %2576 to i8
  %2578 = and i8 %2577, 1
  %2579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2578, i8* %2579, align 1
  %2580 = icmp eq i32 %2564, 0
  %2581 = zext i1 %2580 to i8
  %2582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2581, i8* %2582, align 1
  %2583 = lshr i32 %2564, 31
  %2584 = trunc i32 %2583 to i8
  %2585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2584, i8* %2585, align 1
  %2586 = lshr i32 %2559, 31
  %2587 = lshr i32 %2563, 31
  %2588 = xor i32 %2587, %2586
  %2589 = xor i32 %2583, %2586
  %2590 = add i32 %2589, %2588
  %2591 = icmp eq i32 %2590, 2
  %2592 = zext i1 %2591 to i8
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2592, i8* %2593, align 1
  store %struct.Memory* %loadMem_4122da, %struct.Memory** %MEMORY
  %loadMem_4122e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2595 = getelementptr inbounds %struct.GPR, %struct.GPR* %2594, i32 0, i32 33
  %2596 = getelementptr inbounds %struct.Reg, %struct.Reg* %2595, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %2596 to i64*
  %2597 = load i64, i64* %PC.i1035
  %2598 = add i64 %2597, 887
  %2599 = load i64, i64* %PC.i1035
  %2600 = add i64 %2599, 6
  %2601 = load i64, i64* %PC.i1035
  %2602 = add i64 %2601, 6
  store i64 %2602, i64* %PC.i1035
  %2603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2604 = load i8, i8* %2603, align 1
  store i8 %2604, i8* %BRANCH_TAKEN, align 1
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2606 = icmp ne i8 %2604, 0
  %2607 = select i1 %2606, i64 %2598, i64 %2600
  store i64 %2607, i64* %2605, align 8
  store %struct.Memory* %loadMem_4122e1, %struct.Memory** %MEMORY
  %loadBr_4122e1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4122e1 = icmp eq i8 %loadBr_4122e1, 1
  br i1 %cmpBr_4122e1, label %block_.L_412658, label %block_4122e7

block_4122e7:                                     ; preds = %block_4122b4
  %loadMem_4122e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2609 = getelementptr inbounds %struct.GPR, %struct.GPR* %2608, i32 0, i32 33
  %2610 = getelementptr inbounds %struct.Reg, %struct.Reg* %2609, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %2610 to i64*
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2612 = getelementptr inbounds %struct.GPR, %struct.GPR* %2611, i32 0, i32 1
  %2613 = getelementptr inbounds %struct.Reg, %struct.Reg* %2612, i32 0, i32 0
  %RAX.i1034 = bitcast %union.anon* %2613 to i64*
  %2614 = load i64, i64* %PC.i1033
  %2615 = add i64 %2614, 10
  store i64 %2615, i64* %PC.i1033
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1034, align 8
  store %struct.Memory* %loadMem_4122e7, %struct.Memory** %MEMORY
  %loadMem_4122f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2617 = getelementptr inbounds %struct.GPR, %struct.GPR* %2616, i32 0, i32 33
  %2618 = getelementptr inbounds %struct.Reg, %struct.Reg* %2617, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %2618 to i64*
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2620 = getelementptr inbounds %struct.GPR, %struct.GPR* %2619, i32 0, i32 5
  %2621 = getelementptr inbounds %struct.Reg, %struct.Reg* %2620, i32 0, i32 0
  %RCX.i1031 = bitcast %union.anon* %2621 to i64*
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2623 = getelementptr inbounds %struct.GPR, %struct.GPR* %2622, i32 0, i32 15
  %2624 = getelementptr inbounds %struct.Reg, %struct.Reg* %2623, i32 0, i32 0
  %RBP.i1032 = bitcast %union.anon* %2624 to i64*
  %2625 = load i64, i64* %RBP.i1032
  %2626 = sub i64 %2625, 76
  %2627 = load i64, i64* %PC.i1030
  %2628 = add i64 %2627, 4
  store i64 %2628, i64* %PC.i1030
  %2629 = inttoptr i64 %2626 to i32*
  %2630 = load i32, i32* %2629
  %2631 = sext i32 %2630 to i64
  store i64 %2631, i64* %RCX.i1031, align 8
  store %struct.Memory* %loadMem_4122f1, %struct.Memory** %MEMORY
  %loadMem_4122f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2633 = getelementptr inbounds %struct.GPR, %struct.GPR* %2632, i32 0, i32 33
  %2634 = getelementptr inbounds %struct.Reg, %struct.Reg* %2633, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %2634 to i64*
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2636 = getelementptr inbounds %struct.GPR, %struct.GPR* %2635, i32 0, i32 5
  %2637 = getelementptr inbounds %struct.Reg, %struct.Reg* %2636, i32 0, i32 0
  %RCX.i1029 = bitcast %union.anon* %2637 to i64*
  %2638 = load i64, i64* %RCX.i1029
  %2639 = mul i64 %2638, 4
  %2640 = add i64 %2639, 11187184
  %2641 = load i64, i64* %PC.i1028
  %2642 = add i64 %2641, 8
  store i64 %2642, i64* %PC.i1028
  %2643 = inttoptr i64 %2640 to i32*
  %2644 = load i32, i32* %2643
  %2645 = sext i32 %2644 to i64
  store i64 %2645, i64* %RCX.i1029, align 8
  store %struct.Memory* %loadMem_4122f5, %struct.Memory** %MEMORY
  %loadMem_4122fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2647 = getelementptr inbounds %struct.GPR, %struct.GPR* %2646, i32 0, i32 33
  %2648 = getelementptr inbounds %struct.Reg, %struct.Reg* %2647, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %2648 to i64*
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2650 = getelementptr inbounds %struct.GPR, %struct.GPR* %2649, i32 0, i32 5
  %2651 = getelementptr inbounds %struct.Reg, %struct.Reg* %2650, i32 0, i32 0
  %RCX.i1027 = bitcast %union.anon* %2651 to i64*
  %2652 = load i64, i64* %RCX.i1027
  %2653 = load i64, i64* %PC.i1026
  %2654 = add i64 %2653, 7
  store i64 %2654, i64* %PC.i1026
  %2655 = sext i64 %2652 to i128
  %2656 = and i128 %2655, -18446744073709551616
  %2657 = zext i64 %2652 to i128
  %2658 = or i128 %2656, %2657
  %2659 = mul i128 744, %2658
  %2660 = trunc i128 %2659 to i64
  store i64 %2660, i64* %RCX.i1027, align 8
  %2661 = sext i64 %2660 to i128
  %2662 = icmp ne i128 %2661, %2659
  %2663 = zext i1 %2662 to i8
  %2664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2663, i8* %2664, align 1
  %2665 = trunc i128 %2659 to i32
  %2666 = and i32 %2665, 255
  %2667 = call i32 @llvm.ctpop.i32(i32 %2666)
  %2668 = trunc i32 %2667 to i8
  %2669 = and i8 %2668, 1
  %2670 = xor i8 %2669, 1
  %2671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2670, i8* %2671, align 1
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2672, align 1
  %2673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2673, align 1
  %2674 = lshr i64 %2660, 63
  %2675 = trunc i64 %2674 to i8
  %2676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2675, i8* %2676, align 1
  %2677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2663, i8* %2677, align 1
  store %struct.Memory* %loadMem_4122fd, %struct.Memory** %MEMORY
  %loadMem_412304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2679 = getelementptr inbounds %struct.GPR, %struct.GPR* %2678, i32 0, i32 33
  %2680 = getelementptr inbounds %struct.Reg, %struct.Reg* %2679, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %2680 to i64*
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2682 = getelementptr inbounds %struct.GPR, %struct.GPR* %2681, i32 0, i32 1
  %2683 = getelementptr inbounds %struct.Reg, %struct.Reg* %2682, i32 0, i32 0
  %RAX.i1024 = bitcast %union.anon* %2683 to i64*
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2685 = getelementptr inbounds %struct.GPR, %struct.GPR* %2684, i32 0, i32 5
  %2686 = getelementptr inbounds %struct.Reg, %struct.Reg* %2685, i32 0, i32 0
  %RCX.i1025 = bitcast %union.anon* %2686 to i64*
  %2687 = load i64, i64* %RAX.i1024
  %2688 = load i64, i64* %RCX.i1025
  %2689 = load i64, i64* %PC.i1023
  %2690 = add i64 %2689, 3
  store i64 %2690, i64* %PC.i1023
  %2691 = add i64 %2688, %2687
  store i64 %2691, i64* %RAX.i1024, align 8
  %2692 = icmp ult i64 %2691, %2687
  %2693 = icmp ult i64 %2691, %2688
  %2694 = or i1 %2692, %2693
  %2695 = zext i1 %2694 to i8
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2695, i8* %2696, align 1
  %2697 = trunc i64 %2691 to i32
  %2698 = and i32 %2697, 255
  %2699 = call i32 @llvm.ctpop.i32(i32 %2698)
  %2700 = trunc i32 %2699 to i8
  %2701 = and i8 %2700, 1
  %2702 = xor i8 %2701, 1
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2702, i8* %2703, align 1
  %2704 = xor i64 %2688, %2687
  %2705 = xor i64 %2704, %2691
  %2706 = lshr i64 %2705, 4
  %2707 = trunc i64 %2706 to i8
  %2708 = and i8 %2707, 1
  %2709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2708, i8* %2709, align 1
  %2710 = icmp eq i64 %2691, 0
  %2711 = zext i1 %2710 to i8
  %2712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2711, i8* %2712, align 1
  %2713 = lshr i64 %2691, 63
  %2714 = trunc i64 %2713 to i8
  %2715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2714, i8* %2715, align 1
  %2716 = lshr i64 %2687, 63
  %2717 = lshr i64 %2688, 63
  %2718 = xor i64 %2713, %2716
  %2719 = xor i64 %2713, %2717
  %2720 = add i64 %2718, %2719
  %2721 = icmp eq i64 %2720, 2
  %2722 = zext i1 %2721 to i8
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2722, i8* %2723, align 1
  store %struct.Memory* %loadMem_412304, %struct.Memory** %MEMORY
  %loadMem_412307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2725 = getelementptr inbounds %struct.GPR, %struct.GPR* %2724, i32 0, i32 33
  %2726 = getelementptr inbounds %struct.Reg, %struct.Reg* %2725, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %2726 to i64*
  %2727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2728 = getelementptr inbounds %struct.GPR, %struct.GPR* %2727, i32 0, i32 1
  %2729 = getelementptr inbounds %struct.Reg, %struct.Reg* %2728, i32 0, i32 0
  %RAX.i1021 = bitcast %union.anon* %2729 to i64*
  %2730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2731 = getelementptr inbounds %struct.GPR, %struct.GPR* %2730, i32 0, i32 15
  %2732 = getelementptr inbounds %struct.Reg, %struct.Reg* %2731, i32 0, i32 0
  %RBP.i1022 = bitcast %union.anon* %2732 to i64*
  %2733 = load i64, i64* %RBP.i1022
  %2734 = sub i64 %2733, 88
  %2735 = load i64, i64* %RAX.i1021
  %2736 = load i64, i64* %PC.i1020
  %2737 = add i64 %2736, 4
  store i64 %2737, i64* %PC.i1020
  %2738 = inttoptr i64 %2734 to i64*
  store i64 %2735, i64* %2738
  store %struct.Memory* %loadMem_412307, %struct.Memory** %MEMORY
  %loadMem_41230b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2740 = getelementptr inbounds %struct.GPR, %struct.GPR* %2739, i32 0, i32 33
  %2741 = getelementptr inbounds %struct.Reg, %struct.Reg* %2740, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %2741 to i64*
  %2742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2743 = getelementptr inbounds %struct.GPR, %struct.GPR* %2742, i32 0, i32 1
  %2744 = getelementptr inbounds %struct.Reg, %struct.Reg* %2743, i32 0, i32 0
  %RAX.i1018 = bitcast %union.anon* %2744 to i64*
  %2745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2746 = getelementptr inbounds %struct.GPR, %struct.GPR* %2745, i32 0, i32 15
  %2747 = getelementptr inbounds %struct.Reg, %struct.Reg* %2746, i32 0, i32 0
  %RBP.i1019 = bitcast %union.anon* %2747 to i64*
  %2748 = load i64, i64* %RBP.i1019
  %2749 = sub i64 %2748, 88
  %2750 = load i64, i64* %PC.i1017
  %2751 = add i64 %2750, 4
  store i64 %2751, i64* %PC.i1017
  %2752 = inttoptr i64 %2749 to i64*
  %2753 = load i64, i64* %2752
  store i64 %2753, i64* %RAX.i1018, align 8
  store %struct.Memory* %loadMem_41230b, %struct.Memory** %MEMORY
  %loadMem_41230f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2755 = getelementptr inbounds %struct.GPR, %struct.GPR* %2754, i32 0, i32 33
  %2756 = getelementptr inbounds %struct.Reg, %struct.Reg* %2755, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %2756 to i64*
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2758 = getelementptr inbounds %struct.GPR, %struct.GPR* %2757, i32 0, i32 1
  %2759 = getelementptr inbounds %struct.Reg, %struct.Reg* %2758, i32 0, i32 0
  %RAX.i1016 = bitcast %union.anon* %2759 to i64*
  %2760 = load i64, i64* %RAX.i1016
  %2761 = add i64 %2760, 12
  %2762 = load i64, i64* %PC.i1015
  %2763 = add i64 %2762, 4
  store i64 %2763, i64* %PC.i1015
  %2764 = inttoptr i64 %2761 to i32*
  %2765 = load i32, i32* %2764
  %2766 = sub i32 %2765, 20
  %2767 = icmp ult i32 %2765, 20
  %2768 = zext i1 %2767 to i8
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2768, i8* %2769, align 1
  %2770 = and i32 %2766, 255
  %2771 = call i32 @llvm.ctpop.i32(i32 %2770)
  %2772 = trunc i32 %2771 to i8
  %2773 = and i8 %2772, 1
  %2774 = xor i8 %2773, 1
  %2775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2774, i8* %2775, align 1
  %2776 = xor i32 %2765, 20
  %2777 = xor i32 %2776, %2766
  %2778 = lshr i32 %2777, 4
  %2779 = trunc i32 %2778 to i8
  %2780 = and i8 %2779, 1
  %2781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2780, i8* %2781, align 1
  %2782 = icmp eq i32 %2766, 0
  %2783 = zext i1 %2782 to i8
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2783, i8* %2784, align 1
  %2785 = lshr i32 %2766, 31
  %2786 = trunc i32 %2785 to i8
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2786, i8* %2787, align 1
  %2788 = lshr i32 %2765, 31
  %2789 = xor i32 %2785, %2788
  %2790 = add i32 %2789, %2788
  %2791 = icmp eq i32 %2790, 2
  %2792 = zext i1 %2791 to i8
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2792, i8* %2793, align 1
  store %struct.Memory* %loadMem_41230f, %struct.Memory** %MEMORY
  %loadMem_412313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2795 = getelementptr inbounds %struct.GPR, %struct.GPR* %2794, i32 0, i32 33
  %2796 = getelementptr inbounds %struct.Reg, %struct.Reg* %2795, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %2796 to i64*
  %2797 = load i64, i64* %PC.i1014
  %2798 = add i64 %2797, 16
  %2799 = load i64, i64* %PC.i1014
  %2800 = add i64 %2799, 6
  %2801 = load i64, i64* %PC.i1014
  %2802 = add i64 %2801, 6
  store i64 %2802, i64* %PC.i1014
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2804 = load i8, i8* %2803, align 1
  %2805 = icmp ne i8 %2804, 0
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2807 = load i8, i8* %2806, align 1
  %2808 = icmp ne i8 %2807, 0
  %2809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2810 = load i8, i8* %2809, align 1
  %2811 = icmp ne i8 %2810, 0
  %2812 = xor i1 %2808, %2811
  %2813 = or i1 %2805, %2812
  %2814 = zext i1 %2813 to i8
  store i8 %2814, i8* %BRANCH_TAKEN, align 1
  %2815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2816 = select i1 %2813, i64 %2798, i64 %2800
  store i64 %2816, i64* %2815, align 8
  store %struct.Memory* %loadMem_412313, %struct.Memory** %MEMORY
  %loadBr_412313 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412313 = icmp eq i8 %loadBr_412313, 1
  br i1 %cmpBr_412313, label %block_.L_412323, label %block_412319

block_412319:                                     ; preds = %block_4122e7
  %loadMem_412319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2818 = getelementptr inbounds %struct.GPR, %struct.GPR* %2817, i32 0, i32 33
  %2819 = getelementptr inbounds %struct.Reg, %struct.Reg* %2818, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %2819 to i64*
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2821 = getelementptr inbounds %struct.GPR, %struct.GPR* %2820, i32 0, i32 15
  %2822 = getelementptr inbounds %struct.Reg, %struct.Reg* %2821, i32 0, i32 0
  %RBP.i1013 = bitcast %union.anon* %2822 to i64*
  %2823 = load i64, i64* %RBP.i1013
  %2824 = sub i64 %2823, 16
  %2825 = load i64, i64* %PC.i1012
  %2826 = add i64 %2825, 4
  store i64 %2826, i64* %PC.i1012
  %2827 = inttoptr i64 %2824 to i32*
  %2828 = load i32, i32* %2827
  %2829 = sub i32 %2828, 19
  %2830 = icmp ult i32 %2828, 19
  %2831 = zext i1 %2830 to i8
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2831, i8* %2832, align 1
  %2833 = and i32 %2829, 255
  %2834 = call i32 @llvm.ctpop.i32(i32 %2833)
  %2835 = trunc i32 %2834 to i8
  %2836 = and i8 %2835, 1
  %2837 = xor i8 %2836, 1
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2837, i8* %2838, align 1
  %2839 = xor i32 %2828, 19
  %2840 = xor i32 %2839, %2829
  %2841 = lshr i32 %2840, 4
  %2842 = trunc i32 %2841 to i8
  %2843 = and i8 %2842, 1
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2843, i8* %2844, align 1
  %2845 = icmp eq i32 %2829, 0
  %2846 = zext i1 %2845 to i8
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2846, i8* %2847, align 1
  %2848 = lshr i32 %2829, 31
  %2849 = trunc i32 %2848 to i8
  %2850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2849, i8* %2850, align 1
  %2851 = lshr i32 %2828, 31
  %2852 = xor i32 %2848, %2851
  %2853 = add i32 %2852, %2851
  %2854 = icmp eq i32 %2853, 2
  %2855 = zext i1 %2854 to i8
  %2856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2855, i8* %2856, align 1
  store %struct.Memory* %loadMem_412319, %struct.Memory** %MEMORY
  %loadMem_41231d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2858 = getelementptr inbounds %struct.GPR, %struct.GPR* %2857, i32 0, i32 33
  %2859 = getelementptr inbounds %struct.Reg, %struct.Reg* %2858, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %2859 to i64*
  %2860 = load i64, i64* %PC.i1011
  %2861 = add i64 %2860, 188
  %2862 = load i64, i64* %PC.i1011
  %2863 = add i64 %2862, 6
  %2864 = load i64, i64* %PC.i1011
  %2865 = add i64 %2864, 6
  store i64 %2865, i64* %PC.i1011
  %2866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2867 = load i8, i8* %2866, align 1
  %2868 = icmp eq i8 %2867, 0
  %2869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2870 = load i8, i8* %2869, align 1
  %2871 = icmp ne i8 %2870, 0
  %2872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2873 = load i8, i8* %2872, align 1
  %2874 = icmp ne i8 %2873, 0
  %2875 = xor i1 %2871, %2874
  %2876 = xor i1 %2875, true
  %2877 = and i1 %2868, %2876
  %2878 = zext i1 %2877 to i8
  store i8 %2878, i8* %BRANCH_TAKEN, align 1
  %2879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2880 = select i1 %2877, i64 %2861, i64 %2863
  store i64 %2880, i64* %2879, align 8
  store %struct.Memory* %loadMem_41231d, %struct.Memory** %MEMORY
  %loadBr_41231d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41231d = icmp eq i8 %loadBr_41231d, 1
  br i1 %cmpBr_41231d, label %block_.L_4123d9, label %block_.L_412323

block_.L_412323:                                  ; preds = %block_412319, %block_4122e7
  %loadMem_412323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2882 = getelementptr inbounds %struct.GPR, %struct.GPR* %2881, i32 0, i32 33
  %2883 = getelementptr inbounds %struct.Reg, %struct.Reg* %2882, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %2883 to i64*
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2885 = getelementptr inbounds %struct.GPR, %struct.GPR* %2884, i32 0, i32 15
  %2886 = getelementptr inbounds %struct.Reg, %struct.Reg* %2885, i32 0, i32 0
  %RBP.i1010 = bitcast %union.anon* %2886 to i64*
  %2887 = load i64, i64* %RBP.i1010
  %2888 = sub i64 %2887, 32
  %2889 = load i64, i64* %PC.i1009
  %2890 = add i64 %2889, 7
  store i64 %2890, i64* %PC.i1009
  %2891 = inttoptr i64 %2888 to i32*
  store i32 0, i32* %2891
  store %struct.Memory* %loadMem_412323, %struct.Memory** %MEMORY
  br label %block_.L_41232a

block_.L_41232a:                                  ; preds = %block_.L_4123c6, %block_.L_412323
  %loadMem_41232a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2893 = getelementptr inbounds %struct.GPR, %struct.GPR* %2892, i32 0, i32 33
  %2894 = getelementptr inbounds %struct.Reg, %struct.Reg* %2893, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %2894 to i64*
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2896 = getelementptr inbounds %struct.GPR, %struct.GPR* %2895, i32 0, i32 1
  %2897 = getelementptr inbounds %struct.Reg, %struct.Reg* %2896, i32 0, i32 0
  %RAX.i1007 = bitcast %union.anon* %2897 to i64*
  %2898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2899 = getelementptr inbounds %struct.GPR, %struct.GPR* %2898, i32 0, i32 15
  %2900 = getelementptr inbounds %struct.Reg, %struct.Reg* %2899, i32 0, i32 0
  %RBP.i1008 = bitcast %union.anon* %2900 to i64*
  %2901 = load i64, i64* %RBP.i1008
  %2902 = sub i64 %2901, 32
  %2903 = load i64, i64* %PC.i1006
  %2904 = add i64 %2903, 3
  store i64 %2904, i64* %PC.i1006
  %2905 = inttoptr i64 %2902 to i32*
  %2906 = load i32, i32* %2905
  %2907 = zext i32 %2906 to i64
  store i64 %2907, i64* %RAX.i1007, align 8
  store %struct.Memory* %loadMem_41232a, %struct.Memory** %MEMORY
  %loadMem_41232d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2909 = getelementptr inbounds %struct.GPR, %struct.GPR* %2908, i32 0, i32 33
  %2910 = getelementptr inbounds %struct.Reg, %struct.Reg* %2909, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %2910 to i64*
  %2911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2912 = getelementptr inbounds %struct.GPR, %struct.GPR* %2911, i32 0, i32 5
  %2913 = getelementptr inbounds %struct.Reg, %struct.Reg* %2912, i32 0, i32 0
  %RCX.i1004 = bitcast %union.anon* %2913 to i64*
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 15
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %RBP.i1005 = bitcast %union.anon* %2916 to i64*
  %2917 = load i64, i64* %RBP.i1005
  %2918 = sub i64 %2917, 88
  %2919 = load i64, i64* %PC.i1003
  %2920 = add i64 %2919, 4
  store i64 %2920, i64* %PC.i1003
  %2921 = inttoptr i64 %2918 to i64*
  %2922 = load i64, i64* %2921
  store i64 %2922, i64* %RCX.i1004, align 8
  store %struct.Memory* %loadMem_41232d, %struct.Memory** %MEMORY
  %loadMem_412331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2924 = getelementptr inbounds %struct.GPR, %struct.GPR* %2923, i32 0, i32 33
  %2925 = getelementptr inbounds %struct.Reg, %struct.Reg* %2924, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %2925 to i64*
  %2926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2927 = getelementptr inbounds %struct.GPR, %struct.GPR* %2926, i32 0, i32 1
  %2928 = getelementptr inbounds %struct.Reg, %struct.Reg* %2927, i32 0, i32 0
  %EAX.i1001 = bitcast %union.anon* %2928 to i32*
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2930 = getelementptr inbounds %struct.GPR, %struct.GPR* %2929, i32 0, i32 5
  %2931 = getelementptr inbounds %struct.Reg, %struct.Reg* %2930, i32 0, i32 0
  %RCX.i1002 = bitcast %union.anon* %2931 to i64*
  %2932 = load i32, i32* %EAX.i1001
  %2933 = zext i32 %2932 to i64
  %2934 = load i64, i64* %RCX.i1002
  %2935 = add i64 %2934, 12
  %2936 = load i64, i64* %PC.i1000
  %2937 = add i64 %2936, 3
  store i64 %2937, i64* %PC.i1000
  %2938 = inttoptr i64 %2935 to i32*
  %2939 = load i32, i32* %2938
  %2940 = sub i32 %2932, %2939
  %2941 = icmp ult i32 %2932, %2939
  %2942 = zext i1 %2941 to i8
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2942, i8* %2943, align 1
  %2944 = and i32 %2940, 255
  %2945 = call i32 @llvm.ctpop.i32(i32 %2944)
  %2946 = trunc i32 %2945 to i8
  %2947 = and i8 %2946, 1
  %2948 = xor i8 %2947, 1
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2948, i8* %2949, align 1
  %2950 = xor i32 %2939, %2932
  %2951 = xor i32 %2950, %2940
  %2952 = lshr i32 %2951, 4
  %2953 = trunc i32 %2952 to i8
  %2954 = and i8 %2953, 1
  %2955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2954, i8* %2955, align 1
  %2956 = icmp eq i32 %2940, 0
  %2957 = zext i1 %2956 to i8
  %2958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2957, i8* %2958, align 1
  %2959 = lshr i32 %2940, 31
  %2960 = trunc i32 %2959 to i8
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2960, i8* %2961, align 1
  %2962 = lshr i32 %2932, 31
  %2963 = lshr i32 %2939, 31
  %2964 = xor i32 %2963, %2962
  %2965 = xor i32 %2959, %2962
  %2966 = add i32 %2965, %2964
  %2967 = icmp eq i32 %2966, 2
  %2968 = zext i1 %2967 to i8
  %2969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2968, i8* %2969, align 1
  store %struct.Memory* %loadMem_412331, %struct.Memory** %MEMORY
  %loadMem_412334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2971 = getelementptr inbounds %struct.GPR, %struct.GPR* %2970, i32 0, i32 33
  %2972 = getelementptr inbounds %struct.Reg, %struct.Reg* %2971, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %2972 to i64*
  %2973 = load i64, i64* %PC.i999
  %2974 = add i64 %2973, 160
  %2975 = load i64, i64* %PC.i999
  %2976 = add i64 %2975, 6
  %2977 = load i64, i64* %PC.i999
  %2978 = add i64 %2977, 6
  store i64 %2978, i64* %PC.i999
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2980 = load i8, i8* %2979, align 1
  %2981 = icmp ne i8 %2980, 0
  %2982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2983 = load i8, i8* %2982, align 1
  %2984 = icmp ne i8 %2983, 0
  %2985 = xor i1 %2981, %2984
  %2986 = xor i1 %2985, true
  %2987 = zext i1 %2986 to i8
  store i8 %2987, i8* %BRANCH_TAKEN, align 1
  %2988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2989 = select i1 %2985, i64 %2976, i64 %2974
  store i64 %2989, i64* %2988, align 8
  store %struct.Memory* %loadMem_412334, %struct.Memory** %MEMORY
  %loadBr_412334 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412334 = icmp eq i8 %loadBr_412334, 1
  br i1 %cmpBr_412334, label %block_.L_4123d4, label %block_41233a

block_41233a:                                     ; preds = %block_.L_41232a
  %loadMem_41233a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2991 = getelementptr inbounds %struct.GPR, %struct.GPR* %2990, i32 0, i32 33
  %2992 = getelementptr inbounds %struct.Reg, %struct.Reg* %2991, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %2992 to i64*
  %2993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2994 = getelementptr inbounds %struct.GPR, %struct.GPR* %2993, i32 0, i32 1
  %2995 = getelementptr inbounds %struct.Reg, %struct.Reg* %2994, i32 0, i32 0
  %RAX.i997 = bitcast %union.anon* %2995 to i64*
  %2996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2997 = getelementptr inbounds %struct.GPR, %struct.GPR* %2996, i32 0, i32 15
  %2998 = getelementptr inbounds %struct.Reg, %struct.Reg* %2997, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %2998 to i64*
  %2999 = load i64, i64* %RBP.i998
  %3000 = sub i64 %2999, 88
  %3001 = load i64, i64* %PC.i996
  %3002 = add i64 %3001, 4
  store i64 %3002, i64* %PC.i996
  %3003 = inttoptr i64 %3000 to i64*
  %3004 = load i64, i64* %3003
  store i64 %3004, i64* %RAX.i997, align 8
  store %struct.Memory* %loadMem_41233a, %struct.Memory** %MEMORY
  %loadMem_41233e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3006 = getelementptr inbounds %struct.GPR, %struct.GPR* %3005, i32 0, i32 33
  %3007 = getelementptr inbounds %struct.Reg, %struct.Reg* %3006, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %3007 to i64*
  %3008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3009 = getelementptr inbounds %struct.GPR, %struct.GPR* %3008, i32 0, i32 5
  %3010 = getelementptr inbounds %struct.Reg, %struct.Reg* %3009, i32 0, i32 0
  %RCX.i994 = bitcast %union.anon* %3010 to i64*
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3012 = getelementptr inbounds %struct.GPR, %struct.GPR* %3011, i32 0, i32 15
  %3013 = getelementptr inbounds %struct.Reg, %struct.Reg* %3012, i32 0, i32 0
  %RBP.i995 = bitcast %union.anon* %3013 to i64*
  %3014 = load i64, i64* %RBP.i995
  %3015 = sub i64 %3014, 32
  %3016 = load i64, i64* %PC.i993
  %3017 = add i64 %3016, 4
  store i64 %3017, i64* %PC.i993
  %3018 = inttoptr i64 %3015 to i32*
  %3019 = load i32, i32* %3018
  %3020 = sext i32 %3019 to i64
  store i64 %3020, i64* %RCX.i994, align 8
  store %struct.Memory* %loadMem_41233e, %struct.Memory** %MEMORY
  %loadMem_412342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3022 = getelementptr inbounds %struct.GPR, %struct.GPR* %3021, i32 0, i32 33
  %3023 = getelementptr inbounds %struct.Reg, %struct.Reg* %3022, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %3023 to i64*
  %3024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3025 = getelementptr inbounds %struct.GPR, %struct.GPR* %3024, i32 0, i32 1
  %3026 = getelementptr inbounds %struct.Reg, %struct.Reg* %3025, i32 0, i32 0
  %RAX.i990 = bitcast %union.anon* %3026 to i64*
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3028 = getelementptr inbounds %struct.GPR, %struct.GPR* %3027, i32 0, i32 5
  %3029 = getelementptr inbounds %struct.Reg, %struct.Reg* %3028, i32 0, i32 0
  %RCX.i991 = bitcast %union.anon* %3029 to i64*
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3031 = getelementptr inbounds %struct.GPR, %struct.GPR* %3030, i32 0, i32 7
  %3032 = getelementptr inbounds %struct.Reg, %struct.Reg* %3031, i32 0, i32 0
  %RDX.i992 = bitcast %union.anon* %3032 to i64*
  %3033 = load i64, i64* %RAX.i990
  %3034 = load i64, i64* %RCX.i991
  %3035 = mul i64 %3034, 4
  %3036 = add i64 %3033, 16
  %3037 = add i64 %3036, %3035
  %3038 = load i64, i64* %PC.i989
  %3039 = add i64 %3038, 4
  store i64 %3039, i64* %PC.i989
  %3040 = inttoptr i64 %3037 to i32*
  %3041 = load i32, i32* %3040
  %3042 = zext i32 %3041 to i64
  store i64 %3042, i64* %RDX.i992, align 8
  store %struct.Memory* %loadMem_412342, %struct.Memory** %MEMORY
  %loadMem_412346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3044 = getelementptr inbounds %struct.GPR, %struct.GPR* %3043, i32 0, i32 33
  %3045 = getelementptr inbounds %struct.Reg, %struct.Reg* %3044, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %3045 to i64*
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3047 = getelementptr inbounds %struct.GPR, %struct.GPR* %3046, i32 0, i32 7
  %3048 = getelementptr inbounds %struct.Reg, %struct.Reg* %3047, i32 0, i32 0
  %EDX.i987 = bitcast %union.anon* %3048 to i32*
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3050 = getelementptr inbounds %struct.GPR, %struct.GPR* %3049, i32 0, i32 15
  %3051 = getelementptr inbounds %struct.Reg, %struct.Reg* %3050, i32 0, i32 0
  %RBP.i988 = bitcast %union.anon* %3051 to i64*
  %3052 = load i64, i64* %RBP.i988
  %3053 = sub i64 %3052, 40
  %3054 = load i32, i32* %EDX.i987
  %3055 = zext i32 %3054 to i64
  %3056 = load i64, i64* %PC.i986
  %3057 = add i64 %3056, 3
  store i64 %3057, i64* %PC.i986
  %3058 = inttoptr i64 %3053 to i32*
  store i32 %3054, i32* %3058
  store %struct.Memory* %loadMem_412346, %struct.Memory** %MEMORY
  %loadMem_412349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3060 = getelementptr inbounds %struct.GPR, %struct.GPR* %3059, i32 0, i32 33
  %3061 = getelementptr inbounds %struct.Reg, %struct.Reg* %3060, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %3061 to i64*
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3063 = getelementptr inbounds %struct.GPR, %struct.GPR* %3062, i32 0, i32 1
  %3064 = getelementptr inbounds %struct.Reg, %struct.Reg* %3063, i32 0, i32 0
  %RAX.i984 = bitcast %union.anon* %3064 to i64*
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3066 = getelementptr inbounds %struct.GPR, %struct.GPR* %3065, i32 0, i32 15
  %3067 = getelementptr inbounds %struct.Reg, %struct.Reg* %3066, i32 0, i32 0
  %RBP.i985 = bitcast %union.anon* %3067 to i64*
  %3068 = load i64, i64* %RBP.i985
  %3069 = sub i64 %3068, 40
  %3070 = load i64, i64* %PC.i983
  %3071 = add i64 %3070, 4
  store i64 %3071, i64* %PC.i983
  %3072 = inttoptr i64 %3069 to i32*
  %3073 = load i32, i32* %3072
  %3074 = sext i32 %3073 to i64
  store i64 %3074, i64* %RAX.i984, align 8
  store %struct.Memory* %loadMem_412349, %struct.Memory** %MEMORY
  %loadMem_41234d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3076 = getelementptr inbounds %struct.GPR, %struct.GPR* %3075, i32 0, i32 33
  %3077 = getelementptr inbounds %struct.Reg, %struct.Reg* %3076, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %3077 to i64*
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3079 = getelementptr inbounds %struct.GPR, %struct.GPR* %3078, i32 0, i32 1
  %3080 = getelementptr inbounds %struct.Reg, %struct.Reg* %3079, i32 0, i32 0
  %RAX.i981 = bitcast %union.anon* %3080 to i64*
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3082 = getelementptr inbounds %struct.GPR, %struct.GPR* %3081, i32 0, i32 7
  %3083 = getelementptr inbounds %struct.Reg, %struct.Reg* %3082, i32 0, i32 0
  %RDX.i982 = bitcast %union.anon* %3083 to i64*
  %3084 = load i64, i64* %RAX.i981
  %3085 = add i64 %3084, 12099168
  %3086 = load i64, i64* %PC.i980
  %3087 = add i64 %3086, 8
  store i64 %3087, i64* %PC.i980
  %3088 = inttoptr i64 %3085 to i8*
  %3089 = load i8, i8* %3088
  %3090 = zext i8 %3089 to i64
  store i64 %3090, i64* %RDX.i982, align 8
  store %struct.Memory* %loadMem_41234d, %struct.Memory** %MEMORY
  %loadMem_412355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3092 = getelementptr inbounds %struct.GPR, %struct.GPR* %3091, i32 0, i32 33
  %3093 = getelementptr inbounds %struct.Reg, %struct.Reg* %3092, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %3093 to i64*
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3095 = getelementptr inbounds %struct.GPR, %struct.GPR* %3094, i32 0, i32 7
  %3096 = getelementptr inbounds %struct.Reg, %struct.Reg* %3095, i32 0, i32 0
  %EDX.i979 = bitcast %union.anon* %3096 to i32*
  %3097 = load i32, i32* %EDX.i979
  %3098 = zext i32 %3097 to i64
  %3099 = load i64, i64* %PC.i978
  %3100 = add i64 %3099, 3
  store i64 %3100, i64* %PC.i978
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3101, align 1
  %3102 = and i32 %3097, 255
  %3103 = call i32 @llvm.ctpop.i32(i32 %3102)
  %3104 = trunc i32 %3103 to i8
  %3105 = and i8 %3104, 1
  %3106 = xor i8 %3105, 1
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3106, i8* %3107, align 1
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3108, align 1
  %3109 = icmp eq i32 %3097, 0
  %3110 = zext i1 %3109 to i8
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3110, i8* %3111, align 1
  %3112 = lshr i32 %3097, 31
  %3113 = trunc i32 %3112 to i8
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3113, i8* %3114, align 1
  %3115 = lshr i32 %3097, 31
  %3116 = xor i32 %3112, %3115
  %3117 = add i32 %3116, %3115
  %3118 = icmp eq i32 %3117, 2
  %3119 = zext i1 %3118 to i8
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3119, i8* %3120, align 1
  store %struct.Memory* %loadMem_412355, %struct.Memory** %MEMORY
  %loadMem_412358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3122 = getelementptr inbounds %struct.GPR, %struct.GPR* %3121, i32 0, i32 33
  %3123 = getelementptr inbounds %struct.Reg, %struct.Reg* %3122, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %3123 to i64*
  %3124 = load i64, i64* %PC.i977
  %3125 = add i64 %3124, 105
  %3126 = load i64, i64* %PC.i977
  %3127 = add i64 %3126, 6
  %3128 = load i64, i64* %PC.i977
  %3129 = add i64 %3128, 6
  store i64 %3129, i64* %PC.i977
  %3130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3131 = load i8, i8* %3130, align 1
  %3132 = icmp eq i8 %3131, 0
  %3133 = zext i1 %3132 to i8
  store i8 %3133, i8* %BRANCH_TAKEN, align 1
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3135 = select i1 %3132, i64 %3125, i64 %3127
  store i64 %3135, i64* %3134, align 8
  store %struct.Memory* %loadMem_412358, %struct.Memory** %MEMORY
  %loadBr_412358 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412358 = icmp eq i8 %loadBr_412358, 1
  br i1 %cmpBr_412358, label %block_.L_4123c1, label %block_41235e

block_41235e:                                     ; preds = %block_41233a
  %loadMem_41235e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3137 = getelementptr inbounds %struct.GPR, %struct.GPR* %3136, i32 0, i32 33
  %3138 = getelementptr inbounds %struct.Reg, %struct.Reg* %3137, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %3138 to i64*
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 1
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %RAX.i975 = bitcast %union.anon* %3141 to i64*
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3143 = getelementptr inbounds %struct.GPR, %struct.GPR* %3142, i32 0, i32 15
  %3144 = getelementptr inbounds %struct.Reg, %struct.Reg* %3143, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %3144 to i64*
  %3145 = load i64, i64* %RBP.i976
  %3146 = sub i64 %3145, 40
  %3147 = load i64, i64* %PC.i974
  %3148 = add i64 %3147, 4
  store i64 %3148, i64* %PC.i974
  %3149 = inttoptr i64 %3146 to i32*
  %3150 = load i32, i32* %3149
  %3151 = sext i32 %3150 to i64
  store i64 %3151, i64* %RAX.i975, align 8
  store %struct.Memory* %loadMem_41235e, %struct.Memory** %MEMORY
  %loadMem_412362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3153 = getelementptr inbounds %struct.GPR, %struct.GPR* %3152, i32 0, i32 33
  %3154 = getelementptr inbounds %struct.Reg, %struct.Reg* %3153, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %3154 to i64*
  %3155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3156 = getelementptr inbounds %struct.GPR, %struct.GPR* %3155, i32 0, i32 1
  %3157 = getelementptr inbounds %struct.Reg, %struct.Reg* %3156, i32 0, i32 0
  %RAX.i972 = bitcast %union.anon* %3157 to i64*
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3159 = getelementptr inbounds %struct.GPR, %struct.GPR* %3158, i32 0, i32 5
  %3160 = getelementptr inbounds %struct.Reg, %struct.Reg* %3159, i32 0, i32 0
  %RCX.i973 = bitcast %union.anon* %3160 to i64*
  %3161 = load i64, i64* %RAX.i972
  %3162 = mul i64 %3161, 4
  %3163 = add i64 %3162, 11185584
  %3164 = load i64, i64* %PC.i971
  %3165 = add i64 %3164, 7
  store i64 %3165, i64* %PC.i971
  %3166 = inttoptr i64 %3163 to i32*
  %3167 = load i32, i32* %3166
  %3168 = zext i32 %3167 to i64
  store i64 %3168, i64* %RCX.i973, align 8
  store %struct.Memory* %loadMem_412362, %struct.Memory** %MEMORY
  %loadMem_412369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 33
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %3171 to i64*
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3173 = getelementptr inbounds %struct.GPR, %struct.GPR* %3172, i32 0, i32 5
  %3174 = getelementptr inbounds %struct.Reg, %struct.Reg* %3173, i32 0, i32 0
  %ECX.i970 = bitcast %union.anon* %3174 to i32*
  %3175 = load i32, i32* %ECX.i970
  %3176 = zext i32 %3175 to i64
  %3177 = load i64, i64* %PC.i969
  %3178 = add i64 %3177, 7
  store i64 %3178, i64* %PC.i969
  %3179 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %3180 = sub i32 %3175, %3179
  %3181 = icmp ult i32 %3175, %3179
  %3182 = zext i1 %3181 to i8
  %3183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3182, i8* %3183, align 1
  %3184 = and i32 %3180, 255
  %3185 = call i32 @llvm.ctpop.i32(i32 %3184)
  %3186 = trunc i32 %3185 to i8
  %3187 = and i8 %3186, 1
  %3188 = xor i8 %3187, 1
  %3189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3188, i8* %3189, align 1
  %3190 = xor i32 %3179, %3175
  %3191 = xor i32 %3190, %3180
  %3192 = lshr i32 %3191, 4
  %3193 = trunc i32 %3192 to i8
  %3194 = and i8 %3193, 1
  %3195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3194, i8* %3195, align 1
  %3196 = icmp eq i32 %3180, 0
  %3197 = zext i1 %3196 to i8
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3197, i8* %3198, align 1
  %3199 = lshr i32 %3180, 31
  %3200 = trunc i32 %3199 to i8
  %3201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3200, i8* %3201, align 1
  %3202 = lshr i32 %3175, 31
  %3203 = lshr i32 %3179, 31
  %3204 = xor i32 %3203, %3202
  %3205 = xor i32 %3199, %3202
  %3206 = add i32 %3205, %3204
  %3207 = icmp eq i32 %3206, 2
  %3208 = zext i1 %3207 to i8
  %3209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3208, i8* %3209, align 1
  store %struct.Memory* %loadMem_412369, %struct.Memory** %MEMORY
  %loadMem_412370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3211 = getelementptr inbounds %struct.GPR, %struct.GPR* %3210, i32 0, i32 33
  %3212 = getelementptr inbounds %struct.Reg, %struct.Reg* %3211, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %3212 to i64*
  %3213 = load i64, i64* %PC.i968
  %3214 = add i64 %3213, 81
  %3215 = load i64, i64* %PC.i968
  %3216 = add i64 %3215, 6
  %3217 = load i64, i64* %PC.i968
  %3218 = add i64 %3217, 6
  store i64 %3218, i64* %PC.i968
  %3219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3220 = load i8, i8* %3219, align 1
  store i8 %3220, i8* %BRANCH_TAKEN, align 1
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3222 = icmp ne i8 %3220, 0
  %3223 = select i1 %3222, i64 %3214, i64 %3216
  store i64 %3223, i64* %3221, align 8
  store %struct.Memory* %loadMem_412370, %struct.Memory** %MEMORY
  %loadBr_412370 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412370 = icmp eq i8 %loadBr_412370, 1
  br i1 %cmpBr_412370, label %block_.L_4123c1, label %block_412376

block_412376:                                     ; preds = %block_41235e
  %loadMem_412376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3225 = getelementptr inbounds %struct.GPR, %struct.GPR* %3224, i32 0, i32 33
  %3226 = getelementptr inbounds %struct.Reg, %struct.Reg* %3225, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %3226 to i64*
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3228 = getelementptr inbounds %struct.GPR, %struct.GPR* %3227, i32 0, i32 15
  %3229 = getelementptr inbounds %struct.Reg, %struct.Reg* %3228, i32 0, i32 0
  %RBP.i967 = bitcast %union.anon* %3229 to i64*
  %3230 = load i64, i64* %RBP.i967
  %3231 = sub i64 %3230, 24
  %3232 = load i64, i64* %PC.i966
  %3233 = add i64 %3232, 5
  store i64 %3233, i64* %PC.i966
  %3234 = inttoptr i64 %3231 to i64*
  %3235 = load i64, i64* %3234
  %3236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3236, align 1
  %3237 = trunc i64 %3235 to i32
  %3238 = and i32 %3237, 255
  %3239 = call i32 @llvm.ctpop.i32(i32 %3238)
  %3240 = trunc i32 %3239 to i8
  %3241 = and i8 %3240, 1
  %3242 = xor i8 %3241, 1
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3242, i8* %3243, align 1
  %3244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3244, align 1
  %3245 = icmp eq i64 %3235, 0
  %3246 = zext i1 %3245 to i8
  %3247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3246, i8* %3247, align 1
  %3248 = lshr i64 %3235, 63
  %3249 = trunc i64 %3248 to i8
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3249, i8* %3250, align 1
  %3251 = lshr i64 %3235, 63
  %3252 = xor i64 %3248, %3251
  %3253 = add i64 %3252, %3251
  %3254 = icmp eq i64 %3253, 2
  %3255 = zext i1 %3254 to i8
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3255, i8* %3256, align 1
  store %struct.Memory* %loadMem_412376, %struct.Memory** %MEMORY
  %loadMem_41237b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3258 = getelementptr inbounds %struct.GPR, %struct.GPR* %3257, i32 0, i32 33
  %3259 = getelementptr inbounds %struct.Reg, %struct.Reg* %3258, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %3259 to i64*
  %3260 = load i64, i64* %PC.i965
  %3261 = add i64 %3260, 20
  %3262 = load i64, i64* %PC.i965
  %3263 = add i64 %3262, 6
  %3264 = load i64, i64* %PC.i965
  %3265 = add i64 %3264, 6
  store i64 %3265, i64* %PC.i965
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3267 = load i8, i8* %3266, align 1
  store i8 %3267, i8* %BRANCH_TAKEN, align 1
  %3268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3269 = icmp ne i8 %3267, 0
  %3270 = select i1 %3269, i64 %3261, i64 %3263
  store i64 %3270, i64* %3268, align 8
  store %struct.Memory* %loadMem_41237b, %struct.Memory** %MEMORY
  %loadBr_41237b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41237b = icmp eq i8 %loadBr_41237b, 1
  br i1 %cmpBr_41237b, label %block_.L_41238f, label %block_412381

block_412381:                                     ; preds = %block_412376
  %loadMem_412381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3272 = getelementptr inbounds %struct.GPR, %struct.GPR* %3271, i32 0, i32 33
  %3273 = getelementptr inbounds %struct.Reg, %struct.Reg* %3272, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %3273 to i64*
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3275 = getelementptr inbounds %struct.GPR, %struct.GPR* %3274, i32 0, i32 1
  %3276 = getelementptr inbounds %struct.Reg, %struct.Reg* %3275, i32 0, i32 0
  %RAX.i963 = bitcast %union.anon* %3276 to i64*
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3278 = getelementptr inbounds %struct.GPR, %struct.GPR* %3277, i32 0, i32 15
  %3279 = getelementptr inbounds %struct.Reg, %struct.Reg* %3278, i32 0, i32 0
  %RBP.i964 = bitcast %union.anon* %3279 to i64*
  %3280 = load i64, i64* %RBP.i964
  %3281 = sub i64 %3280, 40
  %3282 = load i64, i64* %PC.i962
  %3283 = add i64 %3282, 3
  store i64 %3283, i64* %PC.i962
  %3284 = inttoptr i64 %3281 to i32*
  %3285 = load i32, i32* %3284
  %3286 = zext i32 %3285 to i64
  store i64 %3286, i64* %RAX.i963, align 8
  store %struct.Memory* %loadMem_412381, %struct.Memory** %MEMORY
  %loadMem_412384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3288 = getelementptr inbounds %struct.GPR, %struct.GPR* %3287, i32 0, i32 33
  %3289 = getelementptr inbounds %struct.Reg, %struct.Reg* %3288, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %3289 to i64*
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3291 = getelementptr inbounds %struct.GPR, %struct.GPR* %3290, i32 0, i32 5
  %3292 = getelementptr inbounds %struct.Reg, %struct.Reg* %3291, i32 0, i32 0
  %RCX.i960 = bitcast %union.anon* %3292 to i64*
  %3293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3294 = getelementptr inbounds %struct.GPR, %struct.GPR* %3293, i32 0, i32 15
  %3295 = getelementptr inbounds %struct.Reg, %struct.Reg* %3294, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %3295 to i64*
  %3296 = load i64, i64* %RBP.i961
  %3297 = sub i64 %3296, 24
  %3298 = load i64, i64* %PC.i959
  %3299 = add i64 %3298, 4
  store i64 %3299, i64* %PC.i959
  %3300 = inttoptr i64 %3297 to i64*
  %3301 = load i64, i64* %3300
  store i64 %3301, i64* %RCX.i960, align 8
  store %struct.Memory* %loadMem_412384, %struct.Memory** %MEMORY
  %loadMem_412388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3303 = getelementptr inbounds %struct.GPR, %struct.GPR* %3302, i32 0, i32 33
  %3304 = getelementptr inbounds %struct.Reg, %struct.Reg* %3303, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %3304 to i64*
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3306 = getelementptr inbounds %struct.GPR, %struct.GPR* %3305, i32 0, i32 7
  %3307 = getelementptr inbounds %struct.Reg, %struct.Reg* %3306, i32 0, i32 0
  %RDX.i957 = bitcast %union.anon* %3307 to i64*
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3309 = getelementptr inbounds %struct.GPR, %struct.GPR* %3308, i32 0, i32 15
  %3310 = getelementptr inbounds %struct.Reg, %struct.Reg* %3309, i32 0, i32 0
  %RBP.i958 = bitcast %union.anon* %3310 to i64*
  %3311 = load i64, i64* %RBP.i958
  %3312 = sub i64 %3311, 36
  %3313 = load i64, i64* %PC.i956
  %3314 = add i64 %3313, 4
  store i64 %3314, i64* %PC.i956
  %3315 = inttoptr i64 %3312 to i32*
  %3316 = load i32, i32* %3315
  %3317 = sext i32 %3316 to i64
  store i64 %3317, i64* %RDX.i957, align 8
  store %struct.Memory* %loadMem_412388, %struct.Memory** %MEMORY
  %loadMem_41238c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3319 = getelementptr inbounds %struct.GPR, %struct.GPR* %3318, i32 0, i32 33
  %3320 = getelementptr inbounds %struct.Reg, %struct.Reg* %3319, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %3320 to i64*
  %3321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3322 = getelementptr inbounds %struct.GPR, %struct.GPR* %3321, i32 0, i32 1
  %3323 = getelementptr inbounds %struct.Reg, %struct.Reg* %3322, i32 0, i32 0
  %EAX.i953 = bitcast %union.anon* %3323 to i32*
  %3324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3325 = getelementptr inbounds %struct.GPR, %struct.GPR* %3324, i32 0, i32 5
  %3326 = getelementptr inbounds %struct.Reg, %struct.Reg* %3325, i32 0, i32 0
  %RCX.i954 = bitcast %union.anon* %3326 to i64*
  %3327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3328 = getelementptr inbounds %struct.GPR, %struct.GPR* %3327, i32 0, i32 7
  %3329 = getelementptr inbounds %struct.Reg, %struct.Reg* %3328, i32 0, i32 0
  %RDX.i955 = bitcast %union.anon* %3329 to i64*
  %3330 = load i64, i64* %RCX.i954
  %3331 = load i64, i64* %RDX.i955
  %3332 = mul i64 %3331, 4
  %3333 = add i64 %3332, %3330
  %3334 = load i32, i32* %EAX.i953
  %3335 = zext i32 %3334 to i64
  %3336 = load i64, i64* %PC.i952
  %3337 = add i64 %3336, 3
  store i64 %3337, i64* %PC.i952
  %3338 = inttoptr i64 %3333 to i32*
  store i32 %3334, i32* %3338
  store %struct.Memory* %loadMem_41238c, %struct.Memory** %MEMORY
  br label %block_.L_41238f

block_.L_41238f:                                  ; preds = %block_412381, %block_412376
  %loadMem_41238f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 33
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %3341 to i64*
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3343 = getelementptr inbounds %struct.GPR, %struct.GPR* %3342, i32 0, i32 1
  %3344 = getelementptr inbounds %struct.Reg, %struct.Reg* %3343, i32 0, i32 0
  %RAX.i950 = bitcast %union.anon* %3344 to i64*
  %3345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3346 = getelementptr inbounds %struct.GPR, %struct.GPR* %3345, i32 0, i32 15
  %3347 = getelementptr inbounds %struct.Reg, %struct.Reg* %3346, i32 0, i32 0
  %RBP.i951 = bitcast %union.anon* %3347 to i64*
  %3348 = load i64, i64* %RBP.i951
  %3349 = sub i64 %3348, 36
  %3350 = load i64, i64* %PC.i949
  %3351 = add i64 %3350, 3
  store i64 %3351, i64* %PC.i949
  %3352 = inttoptr i64 %3349 to i32*
  %3353 = load i32, i32* %3352
  %3354 = zext i32 %3353 to i64
  store i64 %3354, i64* %RAX.i950, align 8
  store %struct.Memory* %loadMem_41238f, %struct.Memory** %MEMORY
  %loadMem_412392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3356 = getelementptr inbounds %struct.GPR, %struct.GPR* %3355, i32 0, i32 33
  %3357 = getelementptr inbounds %struct.Reg, %struct.Reg* %3356, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %3357 to i64*
  %3358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3359 = getelementptr inbounds %struct.GPR, %struct.GPR* %3358, i32 0, i32 1
  %3360 = getelementptr inbounds %struct.Reg, %struct.Reg* %3359, i32 0, i32 0
  %RAX.i948 = bitcast %union.anon* %3360 to i64*
  %3361 = load i64, i64* %RAX.i948
  %3362 = load i64, i64* %PC.i947
  %3363 = add i64 %3362, 3
  store i64 %3363, i64* %PC.i947
  %3364 = trunc i64 %3361 to i32
  %3365 = add i32 1, %3364
  %3366 = zext i32 %3365 to i64
  store i64 %3366, i64* %RAX.i948, align 8
  %3367 = icmp ult i32 %3365, %3364
  %3368 = icmp ult i32 %3365, 1
  %3369 = or i1 %3367, %3368
  %3370 = zext i1 %3369 to i8
  %3371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3370, i8* %3371, align 1
  %3372 = and i32 %3365, 255
  %3373 = call i32 @llvm.ctpop.i32(i32 %3372)
  %3374 = trunc i32 %3373 to i8
  %3375 = and i8 %3374, 1
  %3376 = xor i8 %3375, 1
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3376, i8* %3377, align 1
  %3378 = xor i64 1, %3361
  %3379 = trunc i64 %3378 to i32
  %3380 = xor i32 %3379, %3365
  %3381 = lshr i32 %3380, 4
  %3382 = trunc i32 %3381 to i8
  %3383 = and i8 %3382, 1
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3383, i8* %3384, align 1
  %3385 = icmp eq i32 %3365, 0
  %3386 = zext i1 %3385 to i8
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3386, i8* %3387, align 1
  %3388 = lshr i32 %3365, 31
  %3389 = trunc i32 %3388 to i8
  %3390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3389, i8* %3390, align 1
  %3391 = lshr i32 %3364, 31
  %3392 = xor i32 %3388, %3391
  %3393 = add i32 %3392, %3388
  %3394 = icmp eq i32 %3393, 2
  %3395 = zext i1 %3394 to i8
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3395, i8* %3396, align 1
  store %struct.Memory* %loadMem_412392, %struct.Memory** %MEMORY
  %loadMem_412395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3398 = getelementptr inbounds %struct.GPR, %struct.GPR* %3397, i32 0, i32 33
  %3399 = getelementptr inbounds %struct.Reg, %struct.Reg* %3398, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %3399 to i64*
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3401 = getelementptr inbounds %struct.GPR, %struct.GPR* %3400, i32 0, i32 1
  %3402 = getelementptr inbounds %struct.Reg, %struct.Reg* %3401, i32 0, i32 0
  %EAX.i945 = bitcast %union.anon* %3402 to i32*
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3404 = getelementptr inbounds %struct.GPR, %struct.GPR* %3403, i32 0, i32 15
  %3405 = getelementptr inbounds %struct.Reg, %struct.Reg* %3404, i32 0, i32 0
  %RBP.i946 = bitcast %union.anon* %3405 to i64*
  %3406 = load i64, i64* %RBP.i946
  %3407 = sub i64 %3406, 36
  %3408 = load i32, i32* %EAX.i945
  %3409 = zext i32 %3408 to i64
  %3410 = load i64, i64* %PC.i944
  %3411 = add i64 %3410, 3
  store i64 %3411, i64* %PC.i944
  %3412 = inttoptr i64 %3407 to i32*
  store i32 %3408, i32* %3412
  store %struct.Memory* %loadMem_412395, %struct.Memory** %MEMORY
  %loadMem_412398 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3414 = getelementptr inbounds %struct.GPR, %struct.GPR* %3413, i32 0, i32 33
  %3415 = getelementptr inbounds %struct.Reg, %struct.Reg* %3414, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %3415 to i64*
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3417 = getelementptr inbounds %struct.GPR, %struct.GPR* %3416, i32 0, i32 1
  %3418 = getelementptr inbounds %struct.Reg, %struct.Reg* %3417, i32 0, i32 0
  %RAX.i942 = bitcast %union.anon* %3418 to i64*
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3420 = getelementptr inbounds %struct.GPR, %struct.GPR* %3419, i32 0, i32 15
  %3421 = getelementptr inbounds %struct.Reg, %struct.Reg* %3420, i32 0, i32 0
  %RBP.i943 = bitcast %union.anon* %3421 to i64*
  %3422 = load i64, i64* %RBP.i943
  %3423 = sub i64 %3422, 36
  %3424 = load i64, i64* %PC.i941
  %3425 = add i64 %3424, 3
  store i64 %3425, i64* %PC.i941
  %3426 = inttoptr i64 %3423 to i32*
  %3427 = load i32, i32* %3426
  %3428 = zext i32 %3427 to i64
  store i64 %3428, i64* %RAX.i942, align 8
  store %struct.Memory* %loadMem_412398, %struct.Memory** %MEMORY
  %loadMem_41239b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3430 = getelementptr inbounds %struct.GPR, %struct.GPR* %3429, i32 0, i32 33
  %3431 = getelementptr inbounds %struct.Reg, %struct.Reg* %3430, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %3431 to i64*
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3433 = getelementptr inbounds %struct.GPR, %struct.GPR* %3432, i32 0, i32 1
  %3434 = getelementptr inbounds %struct.Reg, %struct.Reg* %3433, i32 0, i32 0
  %EAX.i939 = bitcast %union.anon* %3434 to i32*
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3436 = getelementptr inbounds %struct.GPR, %struct.GPR* %3435, i32 0, i32 15
  %3437 = getelementptr inbounds %struct.Reg, %struct.Reg* %3436, i32 0, i32 0
  %RBP.i940 = bitcast %union.anon* %3437 to i64*
  %3438 = load i32, i32* %EAX.i939
  %3439 = zext i32 %3438 to i64
  %3440 = load i64, i64* %RBP.i940
  %3441 = sub i64 %3440, 16
  %3442 = load i64, i64* %PC.i938
  %3443 = add i64 %3442, 3
  store i64 %3443, i64* %PC.i938
  %3444 = inttoptr i64 %3441 to i32*
  %3445 = load i32, i32* %3444
  %3446 = sub i32 %3438, %3445
  %3447 = icmp ult i32 %3438, %3445
  %3448 = zext i1 %3447 to i8
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3448, i8* %3449, align 1
  %3450 = and i32 %3446, 255
  %3451 = call i32 @llvm.ctpop.i32(i32 %3450)
  %3452 = trunc i32 %3451 to i8
  %3453 = and i8 %3452, 1
  %3454 = xor i8 %3453, 1
  %3455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3454, i8* %3455, align 1
  %3456 = xor i32 %3445, %3438
  %3457 = xor i32 %3456, %3446
  %3458 = lshr i32 %3457, 4
  %3459 = trunc i32 %3458 to i8
  %3460 = and i8 %3459, 1
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3460, i8* %3461, align 1
  %3462 = icmp eq i32 %3446, 0
  %3463 = zext i1 %3462 to i8
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3463, i8* %3464, align 1
  %3465 = lshr i32 %3446, 31
  %3466 = trunc i32 %3465 to i8
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3466, i8* %3467, align 1
  %3468 = lshr i32 %3438, 31
  %3469 = lshr i32 %3445, 31
  %3470 = xor i32 %3469, %3468
  %3471 = xor i32 %3465, %3468
  %3472 = add i32 %3471, %3470
  %3473 = icmp eq i32 %3472, 2
  %3474 = zext i1 %3473 to i8
  %3475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3474, i8* %3475, align 1
  store %struct.Memory* %loadMem_41239b, %struct.Memory** %MEMORY
  %loadMem_41239e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3477 = getelementptr inbounds %struct.GPR, %struct.GPR* %3476, i32 0, i32 33
  %3478 = getelementptr inbounds %struct.Reg, %struct.Reg* %3477, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %3478 to i64*
  %3479 = load i64, i64* %PC.i937
  %3480 = add i64 %3479, 17
  %3481 = load i64, i64* %PC.i937
  %3482 = add i64 %3481, 6
  %3483 = load i64, i64* %PC.i937
  %3484 = add i64 %3483, 6
  store i64 %3484, i64* %PC.i937
  %3485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3486 = load i8, i8* %3485, align 1
  %3487 = icmp ne i8 %3486, 0
  %3488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3489 = load i8, i8* %3488, align 1
  %3490 = icmp ne i8 %3489, 0
  %3491 = xor i1 %3487, %3490
  %3492 = zext i1 %3491 to i8
  store i8 %3492, i8* %BRANCH_TAKEN, align 1
  %3493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3494 = select i1 %3491, i64 %3480, i64 %3482
  store i64 %3494, i64* %3493, align 8
  store %struct.Memory* %loadMem_41239e, %struct.Memory** %MEMORY
  %loadBr_41239e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41239e = icmp eq i8 %loadBr_41239e, 1
  br i1 %cmpBr_41239e, label %block_.L_4123af, label %block_4123a4

block_4123a4:                                     ; preds = %block_.L_41238f
  %loadMem_4123a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 33
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %3497 to i64*
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 1
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %RAX.i935 = bitcast %union.anon* %3500 to i64*
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3502 = getelementptr inbounds %struct.GPR, %struct.GPR* %3501, i32 0, i32 15
  %3503 = getelementptr inbounds %struct.Reg, %struct.Reg* %3502, i32 0, i32 0
  %RBP.i936 = bitcast %union.anon* %3503 to i64*
  %3504 = load i64, i64* %RBP.i936
  %3505 = sub i64 %3504, 36
  %3506 = load i64, i64* %PC.i934
  %3507 = add i64 %3506, 3
  store i64 %3507, i64* %PC.i934
  %3508 = inttoptr i64 %3505 to i32*
  %3509 = load i32, i32* %3508
  %3510 = zext i32 %3509 to i64
  store i64 %3510, i64* %RAX.i935, align 8
  store %struct.Memory* %loadMem_4123a4, %struct.Memory** %MEMORY
  %loadMem_4123a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3512 = getelementptr inbounds %struct.GPR, %struct.GPR* %3511, i32 0, i32 33
  %3513 = getelementptr inbounds %struct.Reg, %struct.Reg* %3512, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %3513 to i64*
  %3514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3515 = getelementptr inbounds %struct.GPR, %struct.GPR* %3514, i32 0, i32 1
  %3516 = getelementptr inbounds %struct.Reg, %struct.Reg* %3515, i32 0, i32 0
  %EAX.i932 = bitcast %union.anon* %3516 to i32*
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3518 = getelementptr inbounds %struct.GPR, %struct.GPR* %3517, i32 0, i32 15
  %3519 = getelementptr inbounds %struct.Reg, %struct.Reg* %3518, i32 0, i32 0
  %RBP.i933 = bitcast %union.anon* %3519 to i64*
  %3520 = load i64, i64* %RBP.i933
  %3521 = sub i64 %3520, 4
  %3522 = load i32, i32* %EAX.i932
  %3523 = zext i32 %3522 to i64
  %3524 = load i64, i64* %PC.i931
  %3525 = add i64 %3524, 3
  store i64 %3525, i64* %PC.i931
  %3526 = inttoptr i64 %3521 to i32*
  store i32 %3522, i32* %3526
  store %struct.Memory* %loadMem_4123a7, %struct.Memory** %MEMORY
  %loadMem_4123aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3528 = getelementptr inbounds %struct.GPR, %struct.GPR* %3527, i32 0, i32 33
  %3529 = getelementptr inbounds %struct.Reg, %struct.Reg* %3528, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %3529 to i64*
  %3530 = load i64, i64* %PC.i930
  %3531 = add i64 %3530, 1770
  %3532 = load i64, i64* %PC.i930
  %3533 = add i64 %3532, 5
  store i64 %3533, i64* %PC.i930
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3531, i64* %3534, align 8
  store %struct.Memory* %loadMem_4123aa, %struct.Memory** %MEMORY
  br label %block_.L_412a94

block_.L_4123af:                                  ; preds = %block_.L_41238f
  %loadMem_4123af = load %struct.Memory*, %struct.Memory** %MEMORY
  %3535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3536 = getelementptr inbounds %struct.GPR, %struct.GPR* %3535, i32 0, i32 33
  %3537 = getelementptr inbounds %struct.Reg, %struct.Reg* %3536, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %3537 to i64*
  %3538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3539 = getelementptr inbounds %struct.GPR, %struct.GPR* %3538, i32 0, i32 1
  %3540 = getelementptr inbounds %struct.Reg, %struct.Reg* %3539, i32 0, i32 0
  %RAX.i929 = bitcast %union.anon* %3540 to i64*
  %3541 = load i64, i64* %PC.i928
  %3542 = add i64 %3541, 7
  store i64 %3542, i64* %PC.i928
  %3543 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %3544 = zext i32 %3543 to i64
  store i64 %3544, i64* %RAX.i929, align 8
  store %struct.Memory* %loadMem_4123af, %struct.Memory** %MEMORY
  %loadMem_4123b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3546 = getelementptr inbounds %struct.GPR, %struct.GPR* %3545, i32 0, i32 33
  %3547 = getelementptr inbounds %struct.Reg, %struct.Reg* %3546, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %3547 to i64*
  %3548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3549 = getelementptr inbounds %struct.GPR, %struct.GPR* %3548, i32 0, i32 5
  %3550 = getelementptr inbounds %struct.Reg, %struct.Reg* %3549, i32 0, i32 0
  %RCX.i926 = bitcast %union.anon* %3550 to i64*
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3552 = getelementptr inbounds %struct.GPR, %struct.GPR* %3551, i32 0, i32 15
  %3553 = getelementptr inbounds %struct.Reg, %struct.Reg* %3552, i32 0, i32 0
  %RBP.i927 = bitcast %union.anon* %3553 to i64*
  %3554 = load i64, i64* %RBP.i927
  %3555 = sub i64 %3554, 40
  %3556 = load i64, i64* %PC.i925
  %3557 = add i64 %3556, 4
  store i64 %3557, i64* %PC.i925
  %3558 = inttoptr i64 %3555 to i32*
  %3559 = load i32, i32* %3558
  %3560 = sext i32 %3559 to i64
  store i64 %3560, i64* %RCX.i926, align 8
  store %struct.Memory* %loadMem_4123b6, %struct.Memory** %MEMORY
  %loadMem_4123ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3562 = getelementptr inbounds %struct.GPR, %struct.GPR* %3561, i32 0, i32 33
  %3563 = getelementptr inbounds %struct.Reg, %struct.Reg* %3562, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %3563 to i64*
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3565 = getelementptr inbounds %struct.GPR, %struct.GPR* %3564, i32 0, i32 1
  %3566 = getelementptr inbounds %struct.Reg, %struct.Reg* %3565, i32 0, i32 0
  %EAX.i923 = bitcast %union.anon* %3566 to i32*
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3568 = getelementptr inbounds %struct.GPR, %struct.GPR* %3567, i32 0, i32 5
  %3569 = getelementptr inbounds %struct.Reg, %struct.Reg* %3568, i32 0, i32 0
  %RCX.i924 = bitcast %union.anon* %3569 to i64*
  %3570 = load i64, i64* %RCX.i924
  %3571 = mul i64 %3570, 4
  %3572 = add i64 %3571, 11185584
  %3573 = load i32, i32* %EAX.i923
  %3574 = zext i32 %3573 to i64
  %3575 = load i64, i64* %PC.i922
  %3576 = add i64 %3575, 7
  store i64 %3576, i64* %PC.i922
  %3577 = inttoptr i64 %3572 to i32*
  store i32 %3573, i32* %3577
  store %struct.Memory* %loadMem_4123ba, %struct.Memory** %MEMORY
  br label %block_.L_4123c1

block_.L_4123c1:                                  ; preds = %block_.L_4123af, %block_41235e, %block_41233a
  %loadMem_4123c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3579 = getelementptr inbounds %struct.GPR, %struct.GPR* %3578, i32 0, i32 33
  %3580 = getelementptr inbounds %struct.Reg, %struct.Reg* %3579, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %3580 to i64*
  %3581 = load i64, i64* %PC.i921
  %3582 = add i64 %3581, 5
  %3583 = load i64, i64* %PC.i921
  %3584 = add i64 %3583, 5
  store i64 %3584, i64* %PC.i921
  %3585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3582, i64* %3585, align 8
  store %struct.Memory* %loadMem_4123c1, %struct.Memory** %MEMORY
  br label %block_.L_4123c6

block_.L_4123c6:                                  ; preds = %block_.L_4123c1
  %loadMem_4123c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3587 = getelementptr inbounds %struct.GPR, %struct.GPR* %3586, i32 0, i32 33
  %3588 = getelementptr inbounds %struct.Reg, %struct.Reg* %3587, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %3588 to i64*
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3590 = getelementptr inbounds %struct.GPR, %struct.GPR* %3589, i32 0, i32 1
  %3591 = getelementptr inbounds %struct.Reg, %struct.Reg* %3590, i32 0, i32 0
  %RAX.i919 = bitcast %union.anon* %3591 to i64*
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3593 = getelementptr inbounds %struct.GPR, %struct.GPR* %3592, i32 0, i32 15
  %3594 = getelementptr inbounds %struct.Reg, %struct.Reg* %3593, i32 0, i32 0
  %RBP.i920 = bitcast %union.anon* %3594 to i64*
  %3595 = load i64, i64* %RBP.i920
  %3596 = sub i64 %3595, 32
  %3597 = load i64, i64* %PC.i918
  %3598 = add i64 %3597, 3
  store i64 %3598, i64* %PC.i918
  %3599 = inttoptr i64 %3596 to i32*
  %3600 = load i32, i32* %3599
  %3601 = zext i32 %3600 to i64
  store i64 %3601, i64* %RAX.i919, align 8
  store %struct.Memory* %loadMem_4123c6, %struct.Memory** %MEMORY
  %loadMem_4123c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3603 = getelementptr inbounds %struct.GPR, %struct.GPR* %3602, i32 0, i32 33
  %3604 = getelementptr inbounds %struct.Reg, %struct.Reg* %3603, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %3604 to i64*
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3606 = getelementptr inbounds %struct.GPR, %struct.GPR* %3605, i32 0, i32 1
  %3607 = getelementptr inbounds %struct.Reg, %struct.Reg* %3606, i32 0, i32 0
  %RAX.i917 = bitcast %union.anon* %3607 to i64*
  %3608 = load i64, i64* %RAX.i917
  %3609 = load i64, i64* %PC.i916
  %3610 = add i64 %3609, 3
  store i64 %3610, i64* %PC.i916
  %3611 = trunc i64 %3608 to i32
  %3612 = add i32 1, %3611
  %3613 = zext i32 %3612 to i64
  store i64 %3613, i64* %RAX.i917, align 8
  %3614 = icmp ult i32 %3612, %3611
  %3615 = icmp ult i32 %3612, 1
  %3616 = or i1 %3614, %3615
  %3617 = zext i1 %3616 to i8
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3617, i8* %3618, align 1
  %3619 = and i32 %3612, 255
  %3620 = call i32 @llvm.ctpop.i32(i32 %3619)
  %3621 = trunc i32 %3620 to i8
  %3622 = and i8 %3621, 1
  %3623 = xor i8 %3622, 1
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3623, i8* %3624, align 1
  %3625 = xor i64 1, %3608
  %3626 = trunc i64 %3625 to i32
  %3627 = xor i32 %3626, %3612
  %3628 = lshr i32 %3627, 4
  %3629 = trunc i32 %3628 to i8
  %3630 = and i8 %3629, 1
  %3631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3630, i8* %3631, align 1
  %3632 = icmp eq i32 %3612, 0
  %3633 = zext i1 %3632 to i8
  %3634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3633, i8* %3634, align 1
  %3635 = lshr i32 %3612, 31
  %3636 = trunc i32 %3635 to i8
  %3637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3636, i8* %3637, align 1
  %3638 = lshr i32 %3611, 31
  %3639 = xor i32 %3635, %3638
  %3640 = add i32 %3639, %3635
  %3641 = icmp eq i32 %3640, 2
  %3642 = zext i1 %3641 to i8
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3642, i8* %3643, align 1
  store %struct.Memory* %loadMem_4123c9, %struct.Memory** %MEMORY
  %loadMem_4123cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3645 = getelementptr inbounds %struct.GPR, %struct.GPR* %3644, i32 0, i32 33
  %3646 = getelementptr inbounds %struct.Reg, %struct.Reg* %3645, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %3646 to i64*
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3648 = getelementptr inbounds %struct.GPR, %struct.GPR* %3647, i32 0, i32 1
  %3649 = getelementptr inbounds %struct.Reg, %struct.Reg* %3648, i32 0, i32 0
  %EAX.i914 = bitcast %union.anon* %3649 to i32*
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3651 = getelementptr inbounds %struct.GPR, %struct.GPR* %3650, i32 0, i32 15
  %3652 = getelementptr inbounds %struct.Reg, %struct.Reg* %3651, i32 0, i32 0
  %RBP.i915 = bitcast %union.anon* %3652 to i64*
  %3653 = load i64, i64* %RBP.i915
  %3654 = sub i64 %3653, 32
  %3655 = load i32, i32* %EAX.i914
  %3656 = zext i32 %3655 to i64
  %3657 = load i64, i64* %PC.i913
  %3658 = add i64 %3657, 3
  store i64 %3658, i64* %PC.i913
  %3659 = inttoptr i64 %3654 to i32*
  store i32 %3655, i32* %3659
  store %struct.Memory* %loadMem_4123cc, %struct.Memory** %MEMORY
  %loadMem_4123cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3661 = getelementptr inbounds %struct.GPR, %struct.GPR* %3660, i32 0, i32 33
  %3662 = getelementptr inbounds %struct.Reg, %struct.Reg* %3661, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %3662 to i64*
  %3663 = load i64, i64* %PC.i912
  %3664 = add i64 %3663, -165
  %3665 = load i64, i64* %PC.i912
  %3666 = add i64 %3665, 5
  store i64 %3666, i64* %PC.i912
  %3667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3664, i64* %3667, align 8
  store %struct.Memory* %loadMem_4123cf, %struct.Memory** %MEMORY
  br label %block_.L_41232a

block_.L_4123d4:                                  ; preds = %block_.L_41232a
  %loadMem_4123d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3669 = getelementptr inbounds %struct.GPR, %struct.GPR* %3668, i32 0, i32 33
  %3670 = getelementptr inbounds %struct.Reg, %struct.Reg* %3669, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %3670 to i64*
  %3671 = load i64, i64* %PC.i911
  %3672 = add i64 %3671, 594
  %3673 = load i64, i64* %PC.i911
  %3674 = add i64 %3673, 5
  store i64 %3674, i64* %PC.i911
  %3675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3672, i64* %3675, align 8
  store %struct.Memory* %loadMem_4123d4, %struct.Memory** %MEMORY
  br label %block_.L_412626

block_.L_4123d9:                                  ; preds = %block_412319
  %loadMem_4123d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3677 = getelementptr inbounds %struct.GPR, %struct.GPR* %3676, i32 0, i32 33
  %3678 = getelementptr inbounds %struct.Reg, %struct.Reg* %3677, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %3678 to i64*
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3680 = getelementptr inbounds %struct.GPR, %struct.GPR* %3679, i32 0, i32 1
  %3681 = getelementptr inbounds %struct.Reg, %struct.Reg* %3680, i32 0, i32 0
  %RAX.i909 = bitcast %union.anon* %3681 to i64*
  %3682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3683 = getelementptr inbounds %struct.GPR, %struct.GPR* %3682, i32 0, i32 15
  %3684 = getelementptr inbounds %struct.Reg, %struct.Reg* %3683, i32 0, i32 0
  %RBP.i910 = bitcast %union.anon* %3684 to i64*
  %3685 = load i64, i64* %RBP.i910
  %3686 = sub i64 %3685, 76
  %3687 = load i64, i64* %PC.i908
  %3688 = add i64 %3687, 3
  store i64 %3688, i64* %PC.i908
  %3689 = inttoptr i64 %3686 to i32*
  %3690 = load i32, i32* %3689
  %3691 = zext i32 %3690 to i64
  store i64 %3691, i64* %RAX.i909, align 8
  store %struct.Memory* %loadMem_4123d9, %struct.Memory** %MEMORY
  %loadMem_4123dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3693 = getelementptr inbounds %struct.GPR, %struct.GPR* %3692, i32 0, i32 33
  %3694 = getelementptr inbounds %struct.Reg, %struct.Reg* %3693, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %3694 to i64*
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3696 = getelementptr inbounds %struct.GPR, %struct.GPR* %3695, i32 0, i32 1
  %3697 = getelementptr inbounds %struct.Reg, %struct.Reg* %3696, i32 0, i32 0
  %EAX.i906 = bitcast %union.anon* %3697 to i32*
  %3698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3699 = getelementptr inbounds %struct.GPR, %struct.GPR* %3698, i32 0, i32 15
  %3700 = getelementptr inbounds %struct.Reg, %struct.Reg* %3699, i32 0, i32 0
  %RBP.i907 = bitcast %union.anon* %3700 to i64*
  %3701 = load i64, i64* %RBP.i907
  %3702 = sub i64 %3701, 92
  %3703 = load i32, i32* %EAX.i906
  %3704 = zext i32 %3703 to i64
  %3705 = load i64, i64* %PC.i905
  %3706 = add i64 %3705, 3
  store i64 %3706, i64* %PC.i905
  %3707 = inttoptr i64 %3702 to i32*
  store i32 %3703, i32* %3707
  store %struct.Memory* %loadMem_4123dc, %struct.Memory** %MEMORY
  br label %block_.L_4123df

block_.L_4123df:                                  ; preds = %block_.L_412607, %block_.L_4123d9
  %loadMem_4123df = load %struct.Memory*, %struct.Memory** %MEMORY
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3709 = getelementptr inbounds %struct.GPR, %struct.GPR* %3708, i32 0, i32 33
  %3710 = getelementptr inbounds %struct.Reg, %struct.Reg* %3709, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %3710 to i64*
  %3711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3712 = getelementptr inbounds %struct.GPR, %struct.GPR* %3711, i32 0, i32 1
  %3713 = getelementptr inbounds %struct.Reg, %struct.Reg* %3712, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %3713 to i64*
  %3714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3715 = getelementptr inbounds %struct.GPR, %struct.GPR* %3714, i32 0, i32 15
  %3716 = getelementptr inbounds %struct.Reg, %struct.Reg* %3715, i32 0, i32 0
  %RBP.i904 = bitcast %union.anon* %3716 to i64*
  %3717 = load i64, i64* %RBP.i904
  %3718 = sub i64 %3717, 92
  %3719 = load i64, i64* %PC.i902
  %3720 = add i64 %3719, 3
  store i64 %3720, i64* %PC.i902
  %3721 = inttoptr i64 %3718 to i32*
  %3722 = load i32, i32* %3721
  %3723 = zext i32 %3722 to i64
  store i64 %3723, i64* %RAX.i903, align 8
  store %struct.Memory* %loadMem_4123df, %struct.Memory** %MEMORY
  %loadMem_4123e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3725 = getelementptr inbounds %struct.GPR, %struct.GPR* %3724, i32 0, i32 33
  %3726 = getelementptr inbounds %struct.Reg, %struct.Reg* %3725, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %3726 to i64*
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3728 = getelementptr inbounds %struct.GPR, %struct.GPR* %3727, i32 0, i32 1
  %3729 = getelementptr inbounds %struct.Reg, %struct.Reg* %3728, i32 0, i32 0
  %RAX.i901 = bitcast %union.anon* %3729 to i64*
  %3730 = load i64, i64* %RAX.i901
  %3731 = load i64, i64* %PC.i900
  %3732 = add i64 %3731, 3
  store i64 %3732, i64* %PC.i900
  %3733 = trunc i64 %3730 to i32
  %3734 = add i32 20, %3733
  %3735 = zext i32 %3734 to i64
  store i64 %3735, i64* %RAX.i901, align 8
  %3736 = icmp ult i32 %3734, %3733
  %3737 = icmp ult i32 %3734, 20
  %3738 = or i1 %3736, %3737
  %3739 = zext i1 %3738 to i8
  %3740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3739, i8* %3740, align 1
  %3741 = and i32 %3734, 255
  %3742 = call i32 @llvm.ctpop.i32(i32 %3741)
  %3743 = trunc i32 %3742 to i8
  %3744 = and i8 %3743, 1
  %3745 = xor i8 %3744, 1
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3745, i8* %3746, align 1
  %3747 = xor i64 20, %3730
  %3748 = trunc i64 %3747 to i32
  %3749 = xor i32 %3748, %3734
  %3750 = lshr i32 %3749, 4
  %3751 = trunc i32 %3750 to i8
  %3752 = and i8 %3751, 1
  %3753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3752, i8* %3753, align 1
  %3754 = icmp eq i32 %3734, 0
  %3755 = zext i1 %3754 to i8
  %3756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3755, i8* %3756, align 1
  %3757 = lshr i32 %3734, 31
  %3758 = trunc i32 %3757 to i8
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3758, i8* %3759, align 1
  %3760 = lshr i32 %3733, 31
  %3761 = xor i32 %3757, %3760
  %3762 = add i32 %3761, %3757
  %3763 = icmp eq i32 %3762, 2
  %3764 = zext i1 %3763 to i8
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3764, i8* %3765, align 1
  store %struct.Memory* %loadMem_4123e2, %struct.Memory** %MEMORY
  %loadMem_4123e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3767 = getelementptr inbounds %struct.GPR, %struct.GPR* %3766, i32 0, i32 33
  %3768 = getelementptr inbounds %struct.Reg, %struct.Reg* %3767, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %3768 to i64*
  %3769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3770 = getelementptr inbounds %struct.GPR, %struct.GPR* %3769, i32 0, i32 1
  %3771 = getelementptr inbounds %struct.Reg, %struct.Reg* %3770, i32 0, i32 0
  %EAX.i898 = bitcast %union.anon* %3771 to i32*
  %3772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3773 = getelementptr inbounds %struct.GPR, %struct.GPR* %3772, i32 0, i32 5
  %3774 = getelementptr inbounds %struct.Reg, %struct.Reg* %3773, i32 0, i32 0
  %RCX.i899 = bitcast %union.anon* %3774 to i64*
  %3775 = load i32, i32* %EAX.i898
  %3776 = zext i32 %3775 to i64
  %3777 = load i64, i64* %PC.i897
  %3778 = add i64 %3777, 3
  store i64 %3778, i64* %PC.i897
  %3779 = shl i64 %3776, 32
  %3780 = ashr exact i64 %3779, 32
  store i64 %3780, i64* %RCX.i899, align 8
  store %struct.Memory* %loadMem_4123e5, %struct.Memory** %MEMORY
  %loadMem_4123e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 33
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %3783 to i64*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 1
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %RAX.i895 = bitcast %union.anon* %3786 to i64*
  %3787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3788 = getelementptr inbounds %struct.GPR, %struct.GPR* %3787, i32 0, i32 5
  %3789 = getelementptr inbounds %struct.Reg, %struct.Reg* %3788, i32 0, i32 0
  %RCX.i896 = bitcast %union.anon* %3789 to i64*
  %3790 = load i64, i64* %RCX.i896
  %3791 = add i64 %3790, 12099168
  %3792 = load i64, i64* %PC.i894
  %3793 = add i64 %3792, 8
  store i64 %3793, i64* %PC.i894
  %3794 = inttoptr i64 %3791 to i8*
  %3795 = load i8, i8* %3794
  %3796 = zext i8 %3795 to i64
  store i64 %3796, i64* %RAX.i895, align 8
  store %struct.Memory* %loadMem_4123e8, %struct.Memory** %MEMORY
  %loadMem_4123f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3798 = getelementptr inbounds %struct.GPR, %struct.GPR* %3797, i32 0, i32 33
  %3799 = getelementptr inbounds %struct.Reg, %struct.Reg* %3798, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %3799 to i64*
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3801 = getelementptr inbounds %struct.GPR, %struct.GPR* %3800, i32 0, i32 1
  %3802 = getelementptr inbounds %struct.Reg, %struct.Reg* %3801, i32 0, i32 0
  %EAX.i893 = bitcast %union.anon* %3802 to i32*
  %3803 = load i32, i32* %EAX.i893
  %3804 = zext i32 %3803 to i64
  %3805 = load i64, i64* %PC.i892
  %3806 = add i64 %3805, 3
  store i64 %3806, i64* %PC.i892
  %3807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3807, align 1
  %3808 = and i32 %3803, 255
  %3809 = call i32 @llvm.ctpop.i32(i32 %3808)
  %3810 = trunc i32 %3809 to i8
  %3811 = and i8 %3810, 1
  %3812 = xor i8 %3811, 1
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3812, i8* %3813, align 1
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3814, align 1
  %3815 = icmp eq i32 %3803, 0
  %3816 = zext i1 %3815 to i8
  %3817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3816, i8* %3817, align 1
  %3818 = lshr i32 %3803, 31
  %3819 = trunc i32 %3818 to i8
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3819, i8* %3820, align 1
  %3821 = lshr i32 %3803, 31
  %3822 = xor i32 %3818, %3821
  %3823 = add i32 %3822, %3821
  %3824 = icmp eq i32 %3823, 2
  %3825 = zext i1 %3824 to i8
  %3826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3825, i8* %3826, align 1
  store %struct.Memory* %loadMem_4123f0, %struct.Memory** %MEMORY
  %loadMem_4123f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3828 = getelementptr inbounds %struct.GPR, %struct.GPR* %3827, i32 0, i32 33
  %3829 = getelementptr inbounds %struct.Reg, %struct.Reg* %3828, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %3829 to i64*
  %3830 = load i64, i64* %PC.i891
  %3831 = add i64 %3830, 118
  %3832 = load i64, i64* %PC.i891
  %3833 = add i64 %3832, 6
  %3834 = load i64, i64* %PC.i891
  %3835 = add i64 %3834, 6
  store i64 %3835, i64* %PC.i891
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3837 = load i8, i8* %3836, align 1
  %3838 = icmp eq i8 %3837, 0
  %3839 = zext i1 %3838 to i8
  store i8 %3839, i8* %BRANCH_TAKEN, align 1
  %3840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3841 = select i1 %3838, i64 %3831, i64 %3833
  store i64 %3841, i64* %3840, align 8
  store %struct.Memory* %loadMem_4123f3, %struct.Memory** %MEMORY
  %loadBr_4123f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4123f3 = icmp eq i8 %loadBr_4123f3, 1
  br i1 %cmpBr_4123f3, label %block_.L_412469, label %block_4123f9

block_4123f9:                                     ; preds = %block_.L_4123df
  %loadMem_4123f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3843 = getelementptr inbounds %struct.GPR, %struct.GPR* %3842, i32 0, i32 33
  %3844 = getelementptr inbounds %struct.Reg, %struct.Reg* %3843, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %3844 to i64*
  %3845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3846 = getelementptr inbounds %struct.GPR, %struct.GPR* %3845, i32 0, i32 1
  %3847 = getelementptr inbounds %struct.Reg, %struct.Reg* %3846, i32 0, i32 0
  %RAX.i889 = bitcast %union.anon* %3847 to i64*
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3849 = getelementptr inbounds %struct.GPR, %struct.GPR* %3848, i32 0, i32 15
  %3850 = getelementptr inbounds %struct.Reg, %struct.Reg* %3849, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %3850 to i64*
  %3851 = load i64, i64* %RBP.i890
  %3852 = sub i64 %3851, 92
  %3853 = load i64, i64* %PC.i888
  %3854 = add i64 %3853, 3
  store i64 %3854, i64* %PC.i888
  %3855 = inttoptr i64 %3852 to i32*
  %3856 = load i32, i32* %3855
  %3857 = zext i32 %3856 to i64
  store i64 %3857, i64* %RAX.i889, align 8
  store %struct.Memory* %loadMem_4123f9, %struct.Memory** %MEMORY
  %loadMem_4123fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3859 = getelementptr inbounds %struct.GPR, %struct.GPR* %3858, i32 0, i32 33
  %3860 = getelementptr inbounds %struct.Reg, %struct.Reg* %3859, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %3860 to i64*
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3862 = getelementptr inbounds %struct.GPR, %struct.GPR* %3861, i32 0, i32 1
  %3863 = getelementptr inbounds %struct.Reg, %struct.Reg* %3862, i32 0, i32 0
  %RAX.i887 = bitcast %union.anon* %3863 to i64*
  %3864 = load i64, i64* %RAX.i887
  %3865 = load i64, i64* %PC.i886
  %3866 = add i64 %3865, 3
  store i64 %3866, i64* %PC.i886
  %3867 = trunc i64 %3864 to i32
  %3868 = add i32 20, %3867
  %3869 = zext i32 %3868 to i64
  store i64 %3869, i64* %RAX.i887, align 8
  %3870 = icmp ult i32 %3868, %3867
  %3871 = icmp ult i32 %3868, 20
  %3872 = or i1 %3870, %3871
  %3873 = zext i1 %3872 to i8
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3873, i8* %3874, align 1
  %3875 = and i32 %3868, 255
  %3876 = call i32 @llvm.ctpop.i32(i32 %3875)
  %3877 = trunc i32 %3876 to i8
  %3878 = and i8 %3877, 1
  %3879 = xor i8 %3878, 1
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3879, i8* %3880, align 1
  %3881 = xor i64 20, %3864
  %3882 = trunc i64 %3881 to i32
  %3883 = xor i32 %3882, %3868
  %3884 = lshr i32 %3883, 4
  %3885 = trunc i32 %3884 to i8
  %3886 = and i8 %3885, 1
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3886, i8* %3887, align 1
  %3888 = icmp eq i32 %3868, 0
  %3889 = zext i1 %3888 to i8
  %3890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3889, i8* %3890, align 1
  %3891 = lshr i32 %3868, 31
  %3892 = trunc i32 %3891 to i8
  %3893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3892, i8* %3893, align 1
  %3894 = lshr i32 %3867, 31
  %3895 = xor i32 %3891, %3894
  %3896 = add i32 %3895, %3891
  %3897 = icmp eq i32 %3896, 2
  %3898 = zext i1 %3897 to i8
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3898, i8* %3899, align 1
  store %struct.Memory* %loadMem_4123fc, %struct.Memory** %MEMORY
  %loadMem_4123ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3901 = getelementptr inbounds %struct.GPR, %struct.GPR* %3900, i32 0, i32 33
  %3902 = getelementptr inbounds %struct.Reg, %struct.Reg* %3901, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %3902 to i64*
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3904 = getelementptr inbounds %struct.GPR, %struct.GPR* %3903, i32 0, i32 1
  %3905 = getelementptr inbounds %struct.Reg, %struct.Reg* %3904, i32 0, i32 0
  %EAX.i884 = bitcast %union.anon* %3905 to i32*
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3907 = getelementptr inbounds %struct.GPR, %struct.GPR* %3906, i32 0, i32 5
  %3908 = getelementptr inbounds %struct.Reg, %struct.Reg* %3907, i32 0, i32 0
  %RCX.i885 = bitcast %union.anon* %3908 to i64*
  %3909 = load i32, i32* %EAX.i884
  %3910 = zext i32 %3909 to i64
  %3911 = load i64, i64* %PC.i883
  %3912 = add i64 %3911, 3
  store i64 %3912, i64* %PC.i883
  %3913 = shl i64 %3910, 32
  %3914 = ashr exact i64 %3913, 32
  store i64 %3914, i64* %RCX.i885, align 8
  store %struct.Memory* %loadMem_4123ff, %struct.Memory** %MEMORY
  %loadMem_412402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3916 = getelementptr inbounds %struct.GPR, %struct.GPR* %3915, i32 0, i32 33
  %3917 = getelementptr inbounds %struct.Reg, %struct.Reg* %3916, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %3917 to i64*
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3919 = getelementptr inbounds %struct.GPR, %struct.GPR* %3918, i32 0, i32 1
  %3920 = getelementptr inbounds %struct.Reg, %struct.Reg* %3919, i32 0, i32 0
  %RAX.i881 = bitcast %union.anon* %3920 to i64*
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3922 = getelementptr inbounds %struct.GPR, %struct.GPR* %3921, i32 0, i32 5
  %3923 = getelementptr inbounds %struct.Reg, %struct.Reg* %3922, i32 0, i32 0
  %RCX.i882 = bitcast %union.anon* %3923 to i64*
  %3924 = load i64, i64* %RCX.i882
  %3925 = mul i64 %3924, 4
  %3926 = add i64 %3925, 11185584
  %3927 = load i64, i64* %PC.i880
  %3928 = add i64 %3927, 7
  store i64 %3928, i64* %PC.i880
  %3929 = inttoptr i64 %3926 to i32*
  %3930 = load i32, i32* %3929
  %3931 = zext i32 %3930 to i64
  store i64 %3931, i64* %RAX.i881, align 8
  store %struct.Memory* %loadMem_412402, %struct.Memory** %MEMORY
  %loadMem_412409 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3933 = getelementptr inbounds %struct.GPR, %struct.GPR* %3932, i32 0, i32 33
  %3934 = getelementptr inbounds %struct.Reg, %struct.Reg* %3933, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %3934 to i64*
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3936 = getelementptr inbounds %struct.GPR, %struct.GPR* %3935, i32 0, i32 1
  %3937 = getelementptr inbounds %struct.Reg, %struct.Reg* %3936, i32 0, i32 0
  %EAX.i879 = bitcast %union.anon* %3937 to i32*
  %3938 = load i32, i32* %EAX.i879
  %3939 = zext i32 %3938 to i64
  %3940 = load i64, i64* %PC.i878
  %3941 = add i64 %3940, 7
  store i64 %3941, i64* %PC.i878
  %3942 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %3943 = sub i32 %3938, %3942
  %3944 = icmp ult i32 %3938, %3942
  %3945 = zext i1 %3944 to i8
  %3946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3945, i8* %3946, align 1
  %3947 = and i32 %3943, 255
  %3948 = call i32 @llvm.ctpop.i32(i32 %3947)
  %3949 = trunc i32 %3948 to i8
  %3950 = and i8 %3949, 1
  %3951 = xor i8 %3950, 1
  %3952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3951, i8* %3952, align 1
  %3953 = xor i32 %3942, %3938
  %3954 = xor i32 %3953, %3943
  %3955 = lshr i32 %3954, 4
  %3956 = trunc i32 %3955 to i8
  %3957 = and i8 %3956, 1
  %3958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3957, i8* %3958, align 1
  %3959 = icmp eq i32 %3943, 0
  %3960 = zext i1 %3959 to i8
  %3961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3960, i8* %3961, align 1
  %3962 = lshr i32 %3943, 31
  %3963 = trunc i32 %3962 to i8
  %3964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3963, i8* %3964, align 1
  %3965 = lshr i32 %3938, 31
  %3966 = lshr i32 %3942, 31
  %3967 = xor i32 %3966, %3965
  %3968 = xor i32 %3962, %3965
  %3969 = add i32 %3968, %3967
  %3970 = icmp eq i32 %3969, 2
  %3971 = zext i1 %3970 to i8
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3971, i8* %3972, align 1
  store %struct.Memory* %loadMem_412409, %struct.Memory** %MEMORY
  %loadMem_412410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3974 = getelementptr inbounds %struct.GPR, %struct.GPR* %3973, i32 0, i32 33
  %3975 = getelementptr inbounds %struct.Reg, %struct.Reg* %3974, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %3975 to i64*
  %3976 = load i64, i64* %PC.i877
  %3977 = add i64 %3976, 89
  %3978 = load i64, i64* %PC.i877
  %3979 = add i64 %3978, 6
  %3980 = load i64, i64* %PC.i877
  %3981 = add i64 %3980, 6
  store i64 %3981, i64* %PC.i877
  %3982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3983 = load i8, i8* %3982, align 1
  store i8 %3983, i8* %BRANCH_TAKEN, align 1
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3985 = icmp ne i8 %3983, 0
  %3986 = select i1 %3985, i64 %3977, i64 %3979
  store i64 %3986, i64* %3984, align 8
  store %struct.Memory* %loadMem_412410, %struct.Memory** %MEMORY
  %loadBr_412410 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412410 = icmp eq i8 %loadBr_412410, 1
  br i1 %cmpBr_412410, label %block_.L_412469, label %block_412416

block_412416:                                     ; preds = %block_4123f9
  %loadMem_412416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3988 = getelementptr inbounds %struct.GPR, %struct.GPR* %3987, i32 0, i32 33
  %3989 = getelementptr inbounds %struct.Reg, %struct.Reg* %3988, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %3989 to i64*
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3991 = getelementptr inbounds %struct.GPR, %struct.GPR* %3990, i32 0, i32 15
  %3992 = getelementptr inbounds %struct.Reg, %struct.Reg* %3991, i32 0, i32 0
  %RBP.i876 = bitcast %union.anon* %3992 to i64*
  %3993 = load i64, i64* %RBP.i876
  %3994 = sub i64 %3993, 24
  %3995 = load i64, i64* %PC.i875
  %3996 = add i64 %3995, 5
  store i64 %3996, i64* %PC.i875
  %3997 = inttoptr i64 %3994 to i64*
  %3998 = load i64, i64* %3997
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3999, align 1
  %4000 = trunc i64 %3998 to i32
  %4001 = and i32 %4000, 255
  %4002 = call i32 @llvm.ctpop.i32(i32 %4001)
  %4003 = trunc i32 %4002 to i8
  %4004 = and i8 %4003, 1
  %4005 = xor i8 %4004, 1
  %4006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4005, i8* %4006, align 1
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4007, align 1
  %4008 = icmp eq i64 %3998, 0
  %4009 = zext i1 %4008 to i8
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4009, i8* %4010, align 1
  %4011 = lshr i64 %3998, 63
  %4012 = trunc i64 %4011 to i8
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4012, i8* %4013, align 1
  %4014 = lshr i64 %3998, 63
  %4015 = xor i64 %4011, %4014
  %4016 = add i64 %4015, %4014
  %4017 = icmp eq i64 %4016, 2
  %4018 = zext i1 %4017 to i8
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4018, i8* %4019, align 1
  store %struct.Memory* %loadMem_412416, %struct.Memory** %MEMORY
  %loadMem_41241b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4021 = getelementptr inbounds %struct.GPR, %struct.GPR* %4020, i32 0, i32 33
  %4022 = getelementptr inbounds %struct.Reg, %struct.Reg* %4021, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %4022 to i64*
  %4023 = load i64, i64* %PC.i874
  %4024 = add i64 %4023, 23
  %4025 = load i64, i64* %PC.i874
  %4026 = add i64 %4025, 6
  %4027 = load i64, i64* %PC.i874
  %4028 = add i64 %4027, 6
  store i64 %4028, i64* %PC.i874
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4030 = load i8, i8* %4029, align 1
  store i8 %4030, i8* %BRANCH_TAKEN, align 1
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4032 = icmp ne i8 %4030, 0
  %4033 = select i1 %4032, i64 %4024, i64 %4026
  store i64 %4033, i64* %4031, align 8
  store %struct.Memory* %loadMem_41241b, %struct.Memory** %MEMORY
  %loadBr_41241b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41241b = icmp eq i8 %loadBr_41241b, 1
  br i1 %cmpBr_41241b, label %block_.L_412432, label %block_412421

block_412421:                                     ; preds = %block_412416
  %loadMem_412421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4035 = getelementptr inbounds %struct.GPR, %struct.GPR* %4034, i32 0, i32 33
  %4036 = getelementptr inbounds %struct.Reg, %struct.Reg* %4035, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %4036 to i64*
  %4037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4038 = getelementptr inbounds %struct.GPR, %struct.GPR* %4037, i32 0, i32 1
  %4039 = getelementptr inbounds %struct.Reg, %struct.Reg* %4038, i32 0, i32 0
  %RAX.i872 = bitcast %union.anon* %4039 to i64*
  %4040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4041 = getelementptr inbounds %struct.GPR, %struct.GPR* %4040, i32 0, i32 15
  %4042 = getelementptr inbounds %struct.Reg, %struct.Reg* %4041, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %4042 to i64*
  %4043 = load i64, i64* %RBP.i873
  %4044 = sub i64 %4043, 92
  %4045 = load i64, i64* %PC.i871
  %4046 = add i64 %4045, 3
  store i64 %4046, i64* %PC.i871
  %4047 = inttoptr i64 %4044 to i32*
  %4048 = load i32, i32* %4047
  %4049 = zext i32 %4048 to i64
  store i64 %4049, i64* %RAX.i872, align 8
  store %struct.Memory* %loadMem_412421, %struct.Memory** %MEMORY
  %loadMem_412424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4051 = getelementptr inbounds %struct.GPR, %struct.GPR* %4050, i32 0, i32 33
  %4052 = getelementptr inbounds %struct.Reg, %struct.Reg* %4051, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %4052 to i64*
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4054 = getelementptr inbounds %struct.GPR, %struct.GPR* %4053, i32 0, i32 1
  %4055 = getelementptr inbounds %struct.Reg, %struct.Reg* %4054, i32 0, i32 0
  %RAX.i870 = bitcast %union.anon* %4055 to i64*
  %4056 = load i64, i64* %RAX.i870
  %4057 = load i64, i64* %PC.i869
  %4058 = add i64 %4057, 3
  store i64 %4058, i64* %PC.i869
  %4059 = trunc i64 %4056 to i32
  %4060 = add i32 20, %4059
  %4061 = zext i32 %4060 to i64
  store i64 %4061, i64* %RAX.i870, align 8
  %4062 = icmp ult i32 %4060, %4059
  %4063 = icmp ult i32 %4060, 20
  %4064 = or i1 %4062, %4063
  %4065 = zext i1 %4064 to i8
  %4066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4065, i8* %4066, align 1
  %4067 = and i32 %4060, 255
  %4068 = call i32 @llvm.ctpop.i32(i32 %4067)
  %4069 = trunc i32 %4068 to i8
  %4070 = and i8 %4069, 1
  %4071 = xor i8 %4070, 1
  %4072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4071, i8* %4072, align 1
  %4073 = xor i64 20, %4056
  %4074 = trunc i64 %4073 to i32
  %4075 = xor i32 %4074, %4060
  %4076 = lshr i32 %4075, 4
  %4077 = trunc i32 %4076 to i8
  %4078 = and i8 %4077, 1
  %4079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4078, i8* %4079, align 1
  %4080 = icmp eq i32 %4060, 0
  %4081 = zext i1 %4080 to i8
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4081, i8* %4082, align 1
  %4083 = lshr i32 %4060, 31
  %4084 = trunc i32 %4083 to i8
  %4085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4084, i8* %4085, align 1
  %4086 = lshr i32 %4059, 31
  %4087 = xor i32 %4083, %4086
  %4088 = add i32 %4087, %4083
  %4089 = icmp eq i32 %4088, 2
  %4090 = zext i1 %4089 to i8
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4090, i8* %4091, align 1
  store %struct.Memory* %loadMem_412424, %struct.Memory** %MEMORY
  %loadMem_412427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4093 = getelementptr inbounds %struct.GPR, %struct.GPR* %4092, i32 0, i32 33
  %4094 = getelementptr inbounds %struct.Reg, %struct.Reg* %4093, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %4094 to i64*
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4096 = getelementptr inbounds %struct.GPR, %struct.GPR* %4095, i32 0, i32 5
  %4097 = getelementptr inbounds %struct.Reg, %struct.Reg* %4096, i32 0, i32 0
  %RCX.i867 = bitcast %union.anon* %4097 to i64*
  %4098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4099 = getelementptr inbounds %struct.GPR, %struct.GPR* %4098, i32 0, i32 15
  %4100 = getelementptr inbounds %struct.Reg, %struct.Reg* %4099, i32 0, i32 0
  %RBP.i868 = bitcast %union.anon* %4100 to i64*
  %4101 = load i64, i64* %RBP.i868
  %4102 = sub i64 %4101, 24
  %4103 = load i64, i64* %PC.i866
  %4104 = add i64 %4103, 4
  store i64 %4104, i64* %PC.i866
  %4105 = inttoptr i64 %4102 to i64*
  %4106 = load i64, i64* %4105
  store i64 %4106, i64* %RCX.i867, align 8
  store %struct.Memory* %loadMem_412427, %struct.Memory** %MEMORY
  %loadMem_41242b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4108 = getelementptr inbounds %struct.GPR, %struct.GPR* %4107, i32 0, i32 33
  %4109 = getelementptr inbounds %struct.Reg, %struct.Reg* %4108, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %4109 to i64*
  %4110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4111 = getelementptr inbounds %struct.GPR, %struct.GPR* %4110, i32 0, i32 7
  %4112 = getelementptr inbounds %struct.Reg, %struct.Reg* %4111, i32 0, i32 0
  %RDX.i864 = bitcast %union.anon* %4112 to i64*
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4114 = getelementptr inbounds %struct.GPR, %struct.GPR* %4113, i32 0, i32 15
  %4115 = getelementptr inbounds %struct.Reg, %struct.Reg* %4114, i32 0, i32 0
  %RBP.i865 = bitcast %union.anon* %4115 to i64*
  %4116 = load i64, i64* %RBP.i865
  %4117 = sub i64 %4116, 36
  %4118 = load i64, i64* %PC.i863
  %4119 = add i64 %4118, 4
  store i64 %4119, i64* %PC.i863
  %4120 = inttoptr i64 %4117 to i32*
  %4121 = load i32, i32* %4120
  %4122 = sext i32 %4121 to i64
  store i64 %4122, i64* %RDX.i864, align 8
  store %struct.Memory* %loadMem_41242b, %struct.Memory** %MEMORY
  %loadMem_41242f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4124 = getelementptr inbounds %struct.GPR, %struct.GPR* %4123, i32 0, i32 33
  %4125 = getelementptr inbounds %struct.Reg, %struct.Reg* %4124, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %4125 to i64*
  %4126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4127 = getelementptr inbounds %struct.GPR, %struct.GPR* %4126, i32 0, i32 1
  %4128 = getelementptr inbounds %struct.Reg, %struct.Reg* %4127, i32 0, i32 0
  %EAX.i860 = bitcast %union.anon* %4128 to i32*
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4130 = getelementptr inbounds %struct.GPR, %struct.GPR* %4129, i32 0, i32 5
  %4131 = getelementptr inbounds %struct.Reg, %struct.Reg* %4130, i32 0, i32 0
  %RCX.i861 = bitcast %union.anon* %4131 to i64*
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4133 = getelementptr inbounds %struct.GPR, %struct.GPR* %4132, i32 0, i32 7
  %4134 = getelementptr inbounds %struct.Reg, %struct.Reg* %4133, i32 0, i32 0
  %RDX.i862 = bitcast %union.anon* %4134 to i64*
  %4135 = load i64, i64* %RCX.i861
  %4136 = load i64, i64* %RDX.i862
  %4137 = mul i64 %4136, 4
  %4138 = add i64 %4137, %4135
  %4139 = load i32, i32* %EAX.i860
  %4140 = zext i32 %4139 to i64
  %4141 = load i64, i64* %PC.i859
  %4142 = add i64 %4141, 3
  store i64 %4142, i64* %PC.i859
  %4143 = inttoptr i64 %4138 to i32*
  store i32 %4139, i32* %4143
  store %struct.Memory* %loadMem_41242f, %struct.Memory** %MEMORY
  br label %block_.L_412432

block_.L_412432:                                  ; preds = %block_412421, %block_412416
  %loadMem_412432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4145 = getelementptr inbounds %struct.GPR, %struct.GPR* %4144, i32 0, i32 33
  %4146 = getelementptr inbounds %struct.Reg, %struct.Reg* %4145, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %4146 to i64*
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4148 = getelementptr inbounds %struct.GPR, %struct.GPR* %4147, i32 0, i32 1
  %4149 = getelementptr inbounds %struct.Reg, %struct.Reg* %4148, i32 0, i32 0
  %RAX.i857 = bitcast %union.anon* %4149 to i64*
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4151 = getelementptr inbounds %struct.GPR, %struct.GPR* %4150, i32 0, i32 15
  %4152 = getelementptr inbounds %struct.Reg, %struct.Reg* %4151, i32 0, i32 0
  %RBP.i858 = bitcast %union.anon* %4152 to i64*
  %4153 = load i64, i64* %RBP.i858
  %4154 = sub i64 %4153, 36
  %4155 = load i64, i64* %PC.i856
  %4156 = add i64 %4155, 3
  store i64 %4156, i64* %PC.i856
  %4157 = inttoptr i64 %4154 to i32*
  %4158 = load i32, i32* %4157
  %4159 = zext i32 %4158 to i64
  store i64 %4159, i64* %RAX.i857, align 8
  store %struct.Memory* %loadMem_412432, %struct.Memory** %MEMORY
  %loadMem_412435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4161 = getelementptr inbounds %struct.GPR, %struct.GPR* %4160, i32 0, i32 33
  %4162 = getelementptr inbounds %struct.Reg, %struct.Reg* %4161, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %4162 to i64*
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4164 = getelementptr inbounds %struct.GPR, %struct.GPR* %4163, i32 0, i32 1
  %4165 = getelementptr inbounds %struct.Reg, %struct.Reg* %4164, i32 0, i32 0
  %RAX.i855 = bitcast %union.anon* %4165 to i64*
  %4166 = load i64, i64* %RAX.i855
  %4167 = load i64, i64* %PC.i854
  %4168 = add i64 %4167, 3
  store i64 %4168, i64* %PC.i854
  %4169 = trunc i64 %4166 to i32
  %4170 = add i32 1, %4169
  %4171 = zext i32 %4170 to i64
  store i64 %4171, i64* %RAX.i855, align 8
  %4172 = icmp ult i32 %4170, %4169
  %4173 = icmp ult i32 %4170, 1
  %4174 = or i1 %4172, %4173
  %4175 = zext i1 %4174 to i8
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4175, i8* %4176, align 1
  %4177 = and i32 %4170, 255
  %4178 = call i32 @llvm.ctpop.i32(i32 %4177)
  %4179 = trunc i32 %4178 to i8
  %4180 = and i8 %4179, 1
  %4181 = xor i8 %4180, 1
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4181, i8* %4182, align 1
  %4183 = xor i64 1, %4166
  %4184 = trunc i64 %4183 to i32
  %4185 = xor i32 %4184, %4170
  %4186 = lshr i32 %4185, 4
  %4187 = trunc i32 %4186 to i8
  %4188 = and i8 %4187, 1
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4188, i8* %4189, align 1
  %4190 = icmp eq i32 %4170, 0
  %4191 = zext i1 %4190 to i8
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4191, i8* %4192, align 1
  %4193 = lshr i32 %4170, 31
  %4194 = trunc i32 %4193 to i8
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4194, i8* %4195, align 1
  %4196 = lshr i32 %4169, 31
  %4197 = xor i32 %4193, %4196
  %4198 = add i32 %4197, %4193
  %4199 = icmp eq i32 %4198, 2
  %4200 = zext i1 %4199 to i8
  %4201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4200, i8* %4201, align 1
  store %struct.Memory* %loadMem_412435, %struct.Memory** %MEMORY
  %loadMem_412438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4203 = getelementptr inbounds %struct.GPR, %struct.GPR* %4202, i32 0, i32 33
  %4204 = getelementptr inbounds %struct.Reg, %struct.Reg* %4203, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %4204 to i64*
  %4205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4206 = getelementptr inbounds %struct.GPR, %struct.GPR* %4205, i32 0, i32 1
  %4207 = getelementptr inbounds %struct.Reg, %struct.Reg* %4206, i32 0, i32 0
  %EAX.i852 = bitcast %union.anon* %4207 to i32*
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4209 = getelementptr inbounds %struct.GPR, %struct.GPR* %4208, i32 0, i32 15
  %4210 = getelementptr inbounds %struct.Reg, %struct.Reg* %4209, i32 0, i32 0
  %RBP.i853 = bitcast %union.anon* %4210 to i64*
  %4211 = load i64, i64* %RBP.i853
  %4212 = sub i64 %4211, 36
  %4213 = load i32, i32* %EAX.i852
  %4214 = zext i32 %4213 to i64
  %4215 = load i64, i64* %PC.i851
  %4216 = add i64 %4215, 3
  store i64 %4216, i64* %PC.i851
  %4217 = inttoptr i64 %4212 to i32*
  store i32 %4213, i32* %4217
  store %struct.Memory* %loadMem_412438, %struct.Memory** %MEMORY
  %loadMem_41243b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4219 = getelementptr inbounds %struct.GPR, %struct.GPR* %4218, i32 0, i32 33
  %4220 = getelementptr inbounds %struct.Reg, %struct.Reg* %4219, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %4220 to i64*
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4222 = getelementptr inbounds %struct.GPR, %struct.GPR* %4221, i32 0, i32 1
  %4223 = getelementptr inbounds %struct.Reg, %struct.Reg* %4222, i32 0, i32 0
  %RAX.i849 = bitcast %union.anon* %4223 to i64*
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4225 = getelementptr inbounds %struct.GPR, %struct.GPR* %4224, i32 0, i32 15
  %4226 = getelementptr inbounds %struct.Reg, %struct.Reg* %4225, i32 0, i32 0
  %RBP.i850 = bitcast %union.anon* %4226 to i64*
  %4227 = load i64, i64* %RBP.i850
  %4228 = sub i64 %4227, 36
  %4229 = load i64, i64* %PC.i848
  %4230 = add i64 %4229, 3
  store i64 %4230, i64* %PC.i848
  %4231 = inttoptr i64 %4228 to i32*
  %4232 = load i32, i32* %4231
  %4233 = zext i32 %4232 to i64
  store i64 %4233, i64* %RAX.i849, align 8
  store %struct.Memory* %loadMem_41243b, %struct.Memory** %MEMORY
  %loadMem_41243e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4235 = getelementptr inbounds %struct.GPR, %struct.GPR* %4234, i32 0, i32 33
  %4236 = getelementptr inbounds %struct.Reg, %struct.Reg* %4235, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %4236 to i64*
  %4237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4238 = getelementptr inbounds %struct.GPR, %struct.GPR* %4237, i32 0, i32 1
  %4239 = getelementptr inbounds %struct.Reg, %struct.Reg* %4238, i32 0, i32 0
  %EAX.i846 = bitcast %union.anon* %4239 to i32*
  %4240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4241 = getelementptr inbounds %struct.GPR, %struct.GPR* %4240, i32 0, i32 15
  %4242 = getelementptr inbounds %struct.Reg, %struct.Reg* %4241, i32 0, i32 0
  %RBP.i847 = bitcast %union.anon* %4242 to i64*
  %4243 = load i32, i32* %EAX.i846
  %4244 = zext i32 %4243 to i64
  %4245 = load i64, i64* %RBP.i847
  %4246 = sub i64 %4245, 16
  %4247 = load i64, i64* %PC.i845
  %4248 = add i64 %4247, 3
  store i64 %4248, i64* %PC.i845
  %4249 = inttoptr i64 %4246 to i32*
  %4250 = load i32, i32* %4249
  %4251 = sub i32 %4243, %4250
  %4252 = icmp ult i32 %4243, %4250
  %4253 = zext i1 %4252 to i8
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4253, i8* %4254, align 1
  %4255 = and i32 %4251, 255
  %4256 = call i32 @llvm.ctpop.i32(i32 %4255)
  %4257 = trunc i32 %4256 to i8
  %4258 = and i8 %4257, 1
  %4259 = xor i8 %4258, 1
  %4260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4259, i8* %4260, align 1
  %4261 = xor i32 %4250, %4243
  %4262 = xor i32 %4261, %4251
  %4263 = lshr i32 %4262, 4
  %4264 = trunc i32 %4263 to i8
  %4265 = and i8 %4264, 1
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4265, i8* %4266, align 1
  %4267 = icmp eq i32 %4251, 0
  %4268 = zext i1 %4267 to i8
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4268, i8* %4269, align 1
  %4270 = lshr i32 %4251, 31
  %4271 = trunc i32 %4270 to i8
  %4272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4271, i8* %4272, align 1
  %4273 = lshr i32 %4243, 31
  %4274 = lshr i32 %4250, 31
  %4275 = xor i32 %4274, %4273
  %4276 = xor i32 %4270, %4273
  %4277 = add i32 %4276, %4275
  %4278 = icmp eq i32 %4277, 2
  %4279 = zext i1 %4278 to i8
  %4280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4279, i8* %4280, align 1
  store %struct.Memory* %loadMem_41243e, %struct.Memory** %MEMORY
  %loadMem_412441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4282 = getelementptr inbounds %struct.GPR, %struct.GPR* %4281, i32 0, i32 33
  %4283 = getelementptr inbounds %struct.Reg, %struct.Reg* %4282, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %4283 to i64*
  %4284 = load i64, i64* %PC.i844
  %4285 = add i64 %4284, 17
  %4286 = load i64, i64* %PC.i844
  %4287 = add i64 %4286, 6
  %4288 = load i64, i64* %PC.i844
  %4289 = add i64 %4288, 6
  store i64 %4289, i64* %PC.i844
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4291 = load i8, i8* %4290, align 1
  %4292 = icmp ne i8 %4291, 0
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4294 = load i8, i8* %4293, align 1
  %4295 = icmp ne i8 %4294, 0
  %4296 = xor i1 %4292, %4295
  %4297 = zext i1 %4296 to i8
  store i8 %4297, i8* %BRANCH_TAKEN, align 1
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4299 = select i1 %4296, i64 %4285, i64 %4287
  store i64 %4299, i64* %4298, align 8
  store %struct.Memory* %loadMem_412441, %struct.Memory** %MEMORY
  %loadBr_412441 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412441 = icmp eq i8 %loadBr_412441, 1
  br i1 %cmpBr_412441, label %block_.L_412452, label %block_412447

block_412447:                                     ; preds = %block_.L_412432
  %loadMem_412447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4301 = getelementptr inbounds %struct.GPR, %struct.GPR* %4300, i32 0, i32 33
  %4302 = getelementptr inbounds %struct.Reg, %struct.Reg* %4301, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %4302 to i64*
  %4303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4304 = getelementptr inbounds %struct.GPR, %struct.GPR* %4303, i32 0, i32 1
  %4305 = getelementptr inbounds %struct.Reg, %struct.Reg* %4304, i32 0, i32 0
  %RAX.i842 = bitcast %union.anon* %4305 to i64*
  %4306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4307 = getelementptr inbounds %struct.GPR, %struct.GPR* %4306, i32 0, i32 15
  %4308 = getelementptr inbounds %struct.Reg, %struct.Reg* %4307, i32 0, i32 0
  %RBP.i843 = bitcast %union.anon* %4308 to i64*
  %4309 = load i64, i64* %RBP.i843
  %4310 = sub i64 %4309, 36
  %4311 = load i64, i64* %PC.i841
  %4312 = add i64 %4311, 3
  store i64 %4312, i64* %PC.i841
  %4313 = inttoptr i64 %4310 to i32*
  %4314 = load i32, i32* %4313
  %4315 = zext i32 %4314 to i64
  store i64 %4315, i64* %RAX.i842, align 8
  store %struct.Memory* %loadMem_412447, %struct.Memory** %MEMORY
  %loadMem_41244a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4317 = getelementptr inbounds %struct.GPR, %struct.GPR* %4316, i32 0, i32 33
  %4318 = getelementptr inbounds %struct.Reg, %struct.Reg* %4317, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %4318 to i64*
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4320 = getelementptr inbounds %struct.GPR, %struct.GPR* %4319, i32 0, i32 1
  %4321 = getelementptr inbounds %struct.Reg, %struct.Reg* %4320, i32 0, i32 0
  %EAX.i839 = bitcast %union.anon* %4321 to i32*
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4323 = getelementptr inbounds %struct.GPR, %struct.GPR* %4322, i32 0, i32 15
  %4324 = getelementptr inbounds %struct.Reg, %struct.Reg* %4323, i32 0, i32 0
  %RBP.i840 = bitcast %union.anon* %4324 to i64*
  %4325 = load i64, i64* %RBP.i840
  %4326 = sub i64 %4325, 4
  %4327 = load i32, i32* %EAX.i839
  %4328 = zext i32 %4327 to i64
  %4329 = load i64, i64* %PC.i838
  %4330 = add i64 %4329, 3
  store i64 %4330, i64* %PC.i838
  %4331 = inttoptr i64 %4326 to i32*
  store i32 %4327, i32* %4331
  store %struct.Memory* %loadMem_41244a, %struct.Memory** %MEMORY
  %loadMem_41244d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4333 = getelementptr inbounds %struct.GPR, %struct.GPR* %4332, i32 0, i32 33
  %4334 = getelementptr inbounds %struct.Reg, %struct.Reg* %4333, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %4334 to i64*
  %4335 = load i64, i64* %PC.i837
  %4336 = add i64 %4335, 1607
  %4337 = load i64, i64* %PC.i837
  %4338 = add i64 %4337, 5
  store i64 %4338, i64* %PC.i837
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4336, i64* %4339, align 8
  store %struct.Memory* %loadMem_41244d, %struct.Memory** %MEMORY
  br label %block_.L_412a94

block_.L_412452:                                  ; preds = %block_.L_412432
  %loadMem_412452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4341 = getelementptr inbounds %struct.GPR, %struct.GPR* %4340, i32 0, i32 33
  %4342 = getelementptr inbounds %struct.Reg, %struct.Reg* %4341, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %4342 to i64*
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4344 = getelementptr inbounds %struct.GPR, %struct.GPR* %4343, i32 0, i32 1
  %4345 = getelementptr inbounds %struct.Reg, %struct.Reg* %4344, i32 0, i32 0
  %RAX.i836 = bitcast %union.anon* %4345 to i64*
  %4346 = load i64, i64* %PC.i835
  %4347 = add i64 %4346, 7
  store i64 %4347, i64* %PC.i835
  %4348 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %4349 = zext i32 %4348 to i64
  store i64 %4349, i64* %RAX.i836, align 8
  store %struct.Memory* %loadMem_412452, %struct.Memory** %MEMORY
  %loadMem_412459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4351 = getelementptr inbounds %struct.GPR, %struct.GPR* %4350, i32 0, i32 33
  %4352 = getelementptr inbounds %struct.Reg, %struct.Reg* %4351, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %4352 to i64*
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4354 = getelementptr inbounds %struct.GPR, %struct.GPR* %4353, i32 0, i32 5
  %4355 = getelementptr inbounds %struct.Reg, %struct.Reg* %4354, i32 0, i32 0
  %RCX.i833 = bitcast %union.anon* %4355 to i64*
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4357 = getelementptr inbounds %struct.GPR, %struct.GPR* %4356, i32 0, i32 15
  %4358 = getelementptr inbounds %struct.Reg, %struct.Reg* %4357, i32 0, i32 0
  %RBP.i834 = bitcast %union.anon* %4358 to i64*
  %4359 = load i64, i64* %RBP.i834
  %4360 = sub i64 %4359, 92
  %4361 = load i64, i64* %PC.i832
  %4362 = add i64 %4361, 3
  store i64 %4362, i64* %PC.i832
  %4363 = inttoptr i64 %4360 to i32*
  %4364 = load i32, i32* %4363
  %4365 = zext i32 %4364 to i64
  store i64 %4365, i64* %RCX.i833, align 8
  store %struct.Memory* %loadMem_412459, %struct.Memory** %MEMORY
  %loadMem_41245c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4367 = getelementptr inbounds %struct.GPR, %struct.GPR* %4366, i32 0, i32 33
  %4368 = getelementptr inbounds %struct.Reg, %struct.Reg* %4367, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %4368 to i64*
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4370 = getelementptr inbounds %struct.GPR, %struct.GPR* %4369, i32 0, i32 5
  %4371 = getelementptr inbounds %struct.Reg, %struct.Reg* %4370, i32 0, i32 0
  %RCX.i831 = bitcast %union.anon* %4371 to i64*
  %4372 = load i64, i64* %RCX.i831
  %4373 = load i64, i64* %PC.i830
  %4374 = add i64 %4373, 3
  store i64 %4374, i64* %PC.i830
  %4375 = trunc i64 %4372 to i32
  %4376 = add i32 20, %4375
  %4377 = zext i32 %4376 to i64
  store i64 %4377, i64* %RCX.i831, align 8
  %4378 = icmp ult i32 %4376, %4375
  %4379 = icmp ult i32 %4376, 20
  %4380 = or i1 %4378, %4379
  %4381 = zext i1 %4380 to i8
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4381, i8* %4382, align 1
  %4383 = and i32 %4376, 255
  %4384 = call i32 @llvm.ctpop.i32(i32 %4383)
  %4385 = trunc i32 %4384 to i8
  %4386 = and i8 %4385, 1
  %4387 = xor i8 %4386, 1
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4387, i8* %4388, align 1
  %4389 = xor i64 20, %4372
  %4390 = trunc i64 %4389 to i32
  %4391 = xor i32 %4390, %4376
  %4392 = lshr i32 %4391, 4
  %4393 = trunc i32 %4392 to i8
  %4394 = and i8 %4393, 1
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4394, i8* %4395, align 1
  %4396 = icmp eq i32 %4376, 0
  %4397 = zext i1 %4396 to i8
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4397, i8* %4398, align 1
  %4399 = lshr i32 %4376, 31
  %4400 = trunc i32 %4399 to i8
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4400, i8* %4401, align 1
  %4402 = lshr i32 %4375, 31
  %4403 = xor i32 %4399, %4402
  %4404 = add i32 %4403, %4399
  %4405 = icmp eq i32 %4404, 2
  %4406 = zext i1 %4405 to i8
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4406, i8* %4407, align 1
  store %struct.Memory* %loadMem_41245c, %struct.Memory** %MEMORY
  %loadMem_41245f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4409 = getelementptr inbounds %struct.GPR, %struct.GPR* %4408, i32 0, i32 33
  %4410 = getelementptr inbounds %struct.Reg, %struct.Reg* %4409, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %4410 to i64*
  %4411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4412 = getelementptr inbounds %struct.GPR, %struct.GPR* %4411, i32 0, i32 5
  %4413 = getelementptr inbounds %struct.Reg, %struct.Reg* %4412, i32 0, i32 0
  %ECX.i828 = bitcast %union.anon* %4413 to i32*
  %4414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4415 = getelementptr inbounds %struct.GPR, %struct.GPR* %4414, i32 0, i32 7
  %4416 = getelementptr inbounds %struct.Reg, %struct.Reg* %4415, i32 0, i32 0
  %RDX.i829 = bitcast %union.anon* %4416 to i64*
  %4417 = load i32, i32* %ECX.i828
  %4418 = zext i32 %4417 to i64
  %4419 = load i64, i64* %PC.i827
  %4420 = add i64 %4419, 3
  store i64 %4420, i64* %PC.i827
  %4421 = shl i64 %4418, 32
  %4422 = ashr exact i64 %4421, 32
  store i64 %4422, i64* %RDX.i829, align 8
  store %struct.Memory* %loadMem_41245f, %struct.Memory** %MEMORY
  %loadMem_412462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4424 = getelementptr inbounds %struct.GPR, %struct.GPR* %4423, i32 0, i32 33
  %4425 = getelementptr inbounds %struct.Reg, %struct.Reg* %4424, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %4425 to i64*
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4427 = getelementptr inbounds %struct.GPR, %struct.GPR* %4426, i32 0, i32 1
  %4428 = getelementptr inbounds %struct.Reg, %struct.Reg* %4427, i32 0, i32 0
  %EAX.i825 = bitcast %union.anon* %4428 to i32*
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4430 = getelementptr inbounds %struct.GPR, %struct.GPR* %4429, i32 0, i32 7
  %4431 = getelementptr inbounds %struct.Reg, %struct.Reg* %4430, i32 0, i32 0
  %RDX.i826 = bitcast %union.anon* %4431 to i64*
  %4432 = load i64, i64* %RDX.i826
  %4433 = mul i64 %4432, 4
  %4434 = add i64 %4433, 11185584
  %4435 = load i32, i32* %EAX.i825
  %4436 = zext i32 %4435 to i64
  %4437 = load i64, i64* %PC.i824
  %4438 = add i64 %4437, 7
  store i64 %4438, i64* %PC.i824
  %4439 = inttoptr i64 %4434 to i32*
  store i32 %4435, i32* %4439
  store %struct.Memory* %loadMem_412462, %struct.Memory** %MEMORY
  br label %block_.L_412469

block_.L_412469:                                  ; preds = %block_.L_412452, %block_4123f9, %block_.L_4123df
  %loadMem_412469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4441 = getelementptr inbounds %struct.GPR, %struct.GPR* %4440, i32 0, i32 33
  %4442 = getelementptr inbounds %struct.Reg, %struct.Reg* %4441, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %4442 to i64*
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4444 = getelementptr inbounds %struct.GPR, %struct.GPR* %4443, i32 0, i32 1
  %4445 = getelementptr inbounds %struct.Reg, %struct.Reg* %4444, i32 0, i32 0
  %RAX.i822 = bitcast %union.anon* %4445 to i64*
  %4446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4447 = getelementptr inbounds %struct.GPR, %struct.GPR* %4446, i32 0, i32 15
  %4448 = getelementptr inbounds %struct.Reg, %struct.Reg* %4447, i32 0, i32 0
  %RBP.i823 = bitcast %union.anon* %4448 to i64*
  %4449 = load i64, i64* %RBP.i823
  %4450 = sub i64 %4449, 92
  %4451 = load i64, i64* %PC.i821
  %4452 = add i64 %4451, 3
  store i64 %4452, i64* %PC.i821
  %4453 = inttoptr i64 %4450 to i32*
  %4454 = load i32, i32* %4453
  %4455 = zext i32 %4454 to i64
  store i64 %4455, i64* %RAX.i822, align 8
  store %struct.Memory* %loadMem_412469, %struct.Memory** %MEMORY
  %loadMem_41246c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4457 = getelementptr inbounds %struct.GPR, %struct.GPR* %4456, i32 0, i32 33
  %4458 = getelementptr inbounds %struct.Reg, %struct.Reg* %4457, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %4458 to i64*
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4460 = getelementptr inbounds %struct.GPR, %struct.GPR* %4459, i32 0, i32 1
  %4461 = getelementptr inbounds %struct.Reg, %struct.Reg* %4460, i32 0, i32 0
  %RAX.i820 = bitcast %union.anon* %4461 to i64*
  %4462 = load i64, i64* %RAX.i820
  %4463 = load i64, i64* %PC.i819
  %4464 = add i64 %4463, 3
  store i64 %4464, i64* %PC.i819
  %4465 = trunc i64 %4462 to i32
  %4466 = sub i32 %4465, 1
  %4467 = zext i32 %4466 to i64
  store i64 %4467, i64* %RAX.i820, align 8
  %4468 = icmp ult i32 %4465, 1
  %4469 = zext i1 %4468 to i8
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4469, i8* %4470, align 1
  %4471 = and i32 %4466, 255
  %4472 = call i32 @llvm.ctpop.i32(i32 %4471)
  %4473 = trunc i32 %4472 to i8
  %4474 = and i8 %4473, 1
  %4475 = xor i8 %4474, 1
  %4476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4475, i8* %4476, align 1
  %4477 = xor i64 1, %4462
  %4478 = trunc i64 %4477 to i32
  %4479 = xor i32 %4478, %4466
  %4480 = lshr i32 %4479, 4
  %4481 = trunc i32 %4480 to i8
  %4482 = and i8 %4481, 1
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4482, i8* %4483, align 1
  %4484 = icmp eq i32 %4466, 0
  %4485 = zext i1 %4484 to i8
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4485, i8* %4486, align 1
  %4487 = lshr i32 %4466, 31
  %4488 = trunc i32 %4487 to i8
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4488, i8* %4489, align 1
  %4490 = lshr i32 %4465, 31
  %4491 = xor i32 %4487, %4490
  %4492 = add i32 %4491, %4490
  %4493 = icmp eq i32 %4492, 2
  %4494 = zext i1 %4493 to i8
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4494, i8* %4495, align 1
  store %struct.Memory* %loadMem_41246c, %struct.Memory** %MEMORY
  %loadMem_41246f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4497 = getelementptr inbounds %struct.GPR, %struct.GPR* %4496, i32 0, i32 33
  %4498 = getelementptr inbounds %struct.Reg, %struct.Reg* %4497, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %4498 to i64*
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4500 = getelementptr inbounds %struct.GPR, %struct.GPR* %4499, i32 0, i32 1
  %4501 = getelementptr inbounds %struct.Reg, %struct.Reg* %4500, i32 0, i32 0
  %EAX.i817 = bitcast %union.anon* %4501 to i32*
  %4502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4503 = getelementptr inbounds %struct.GPR, %struct.GPR* %4502, i32 0, i32 5
  %4504 = getelementptr inbounds %struct.Reg, %struct.Reg* %4503, i32 0, i32 0
  %RCX.i818 = bitcast %union.anon* %4504 to i64*
  %4505 = load i32, i32* %EAX.i817
  %4506 = zext i32 %4505 to i64
  %4507 = load i64, i64* %PC.i816
  %4508 = add i64 %4507, 3
  store i64 %4508, i64* %PC.i816
  %4509 = shl i64 %4506, 32
  %4510 = ashr exact i64 %4509, 32
  store i64 %4510, i64* %RCX.i818, align 8
  store %struct.Memory* %loadMem_41246f, %struct.Memory** %MEMORY
  %loadMem_412472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4512 = getelementptr inbounds %struct.GPR, %struct.GPR* %4511, i32 0, i32 33
  %4513 = getelementptr inbounds %struct.Reg, %struct.Reg* %4512, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %4513 to i64*
  %4514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4515 = getelementptr inbounds %struct.GPR, %struct.GPR* %4514, i32 0, i32 1
  %4516 = getelementptr inbounds %struct.Reg, %struct.Reg* %4515, i32 0, i32 0
  %RAX.i814 = bitcast %union.anon* %4516 to i64*
  %4517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4518 = getelementptr inbounds %struct.GPR, %struct.GPR* %4517, i32 0, i32 5
  %4519 = getelementptr inbounds %struct.Reg, %struct.Reg* %4518, i32 0, i32 0
  %RCX.i815 = bitcast %union.anon* %4519 to i64*
  %4520 = load i64, i64* %RCX.i815
  %4521 = add i64 %4520, 12099168
  %4522 = load i64, i64* %PC.i813
  %4523 = add i64 %4522, 8
  store i64 %4523, i64* %PC.i813
  %4524 = inttoptr i64 %4521 to i8*
  %4525 = load i8, i8* %4524
  %4526 = zext i8 %4525 to i64
  store i64 %4526, i64* %RAX.i814, align 8
  store %struct.Memory* %loadMem_412472, %struct.Memory** %MEMORY
  %loadMem_41247a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4528 = getelementptr inbounds %struct.GPR, %struct.GPR* %4527, i32 0, i32 33
  %4529 = getelementptr inbounds %struct.Reg, %struct.Reg* %4528, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %4529 to i64*
  %4530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4531 = getelementptr inbounds %struct.GPR, %struct.GPR* %4530, i32 0, i32 1
  %4532 = getelementptr inbounds %struct.Reg, %struct.Reg* %4531, i32 0, i32 0
  %EAX.i812 = bitcast %union.anon* %4532 to i32*
  %4533 = load i32, i32* %EAX.i812
  %4534 = zext i32 %4533 to i64
  %4535 = load i64, i64* %PC.i811
  %4536 = add i64 %4535, 3
  store i64 %4536, i64* %PC.i811
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4537, align 1
  %4538 = and i32 %4533, 255
  %4539 = call i32 @llvm.ctpop.i32(i32 %4538)
  %4540 = trunc i32 %4539 to i8
  %4541 = and i8 %4540, 1
  %4542 = xor i8 %4541, 1
  %4543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4542, i8* %4543, align 1
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4544, align 1
  %4545 = icmp eq i32 %4533, 0
  %4546 = zext i1 %4545 to i8
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4546, i8* %4547, align 1
  %4548 = lshr i32 %4533, 31
  %4549 = trunc i32 %4548 to i8
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4549, i8* %4550, align 1
  %4551 = lshr i32 %4533, 31
  %4552 = xor i32 %4548, %4551
  %4553 = add i32 %4552, %4551
  %4554 = icmp eq i32 %4553, 2
  %4555 = zext i1 %4554 to i8
  %4556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4555, i8* %4556, align 1
  store %struct.Memory* %loadMem_41247a, %struct.Memory** %MEMORY
  %loadMem_41247d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4558 = getelementptr inbounds %struct.GPR, %struct.GPR* %4557, i32 0, i32 33
  %4559 = getelementptr inbounds %struct.Reg, %struct.Reg* %4558, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %4559 to i64*
  %4560 = load i64, i64* %PC.i810
  %4561 = add i64 %4560, 118
  %4562 = load i64, i64* %PC.i810
  %4563 = add i64 %4562, 6
  %4564 = load i64, i64* %PC.i810
  %4565 = add i64 %4564, 6
  store i64 %4565, i64* %PC.i810
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4567 = load i8, i8* %4566, align 1
  %4568 = icmp eq i8 %4567, 0
  %4569 = zext i1 %4568 to i8
  store i8 %4569, i8* %BRANCH_TAKEN, align 1
  %4570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4571 = select i1 %4568, i64 %4561, i64 %4563
  store i64 %4571, i64* %4570, align 8
  store %struct.Memory* %loadMem_41247d, %struct.Memory** %MEMORY
  %loadBr_41247d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41247d = icmp eq i8 %loadBr_41247d, 1
  br i1 %cmpBr_41247d, label %block_.L_4124f3, label %block_412483

block_412483:                                     ; preds = %block_.L_412469
  %loadMem_412483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4573 = getelementptr inbounds %struct.GPR, %struct.GPR* %4572, i32 0, i32 33
  %4574 = getelementptr inbounds %struct.Reg, %struct.Reg* %4573, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %4574 to i64*
  %4575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4576 = getelementptr inbounds %struct.GPR, %struct.GPR* %4575, i32 0, i32 1
  %4577 = getelementptr inbounds %struct.Reg, %struct.Reg* %4576, i32 0, i32 0
  %RAX.i808 = bitcast %union.anon* %4577 to i64*
  %4578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4579 = getelementptr inbounds %struct.GPR, %struct.GPR* %4578, i32 0, i32 15
  %4580 = getelementptr inbounds %struct.Reg, %struct.Reg* %4579, i32 0, i32 0
  %RBP.i809 = bitcast %union.anon* %4580 to i64*
  %4581 = load i64, i64* %RBP.i809
  %4582 = sub i64 %4581, 92
  %4583 = load i64, i64* %PC.i807
  %4584 = add i64 %4583, 3
  store i64 %4584, i64* %PC.i807
  %4585 = inttoptr i64 %4582 to i32*
  %4586 = load i32, i32* %4585
  %4587 = zext i32 %4586 to i64
  store i64 %4587, i64* %RAX.i808, align 8
  store %struct.Memory* %loadMem_412483, %struct.Memory** %MEMORY
  %loadMem_412486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4589 = getelementptr inbounds %struct.GPR, %struct.GPR* %4588, i32 0, i32 33
  %4590 = getelementptr inbounds %struct.Reg, %struct.Reg* %4589, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %4590 to i64*
  %4591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4592 = getelementptr inbounds %struct.GPR, %struct.GPR* %4591, i32 0, i32 1
  %4593 = getelementptr inbounds %struct.Reg, %struct.Reg* %4592, i32 0, i32 0
  %RAX.i806 = bitcast %union.anon* %4593 to i64*
  %4594 = load i64, i64* %RAX.i806
  %4595 = load i64, i64* %PC.i805
  %4596 = add i64 %4595, 3
  store i64 %4596, i64* %PC.i805
  %4597 = trunc i64 %4594 to i32
  %4598 = sub i32 %4597, 1
  %4599 = zext i32 %4598 to i64
  store i64 %4599, i64* %RAX.i806, align 8
  %4600 = icmp ult i32 %4597, 1
  %4601 = zext i1 %4600 to i8
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4601, i8* %4602, align 1
  %4603 = and i32 %4598, 255
  %4604 = call i32 @llvm.ctpop.i32(i32 %4603)
  %4605 = trunc i32 %4604 to i8
  %4606 = and i8 %4605, 1
  %4607 = xor i8 %4606, 1
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4607, i8* %4608, align 1
  %4609 = xor i64 1, %4594
  %4610 = trunc i64 %4609 to i32
  %4611 = xor i32 %4610, %4598
  %4612 = lshr i32 %4611, 4
  %4613 = trunc i32 %4612 to i8
  %4614 = and i8 %4613, 1
  %4615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4614, i8* %4615, align 1
  %4616 = icmp eq i32 %4598, 0
  %4617 = zext i1 %4616 to i8
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4617, i8* %4618, align 1
  %4619 = lshr i32 %4598, 31
  %4620 = trunc i32 %4619 to i8
  %4621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4620, i8* %4621, align 1
  %4622 = lshr i32 %4597, 31
  %4623 = xor i32 %4619, %4622
  %4624 = add i32 %4623, %4622
  %4625 = icmp eq i32 %4624, 2
  %4626 = zext i1 %4625 to i8
  %4627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4626, i8* %4627, align 1
  store %struct.Memory* %loadMem_412486, %struct.Memory** %MEMORY
  %loadMem_412489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4629 = getelementptr inbounds %struct.GPR, %struct.GPR* %4628, i32 0, i32 33
  %4630 = getelementptr inbounds %struct.Reg, %struct.Reg* %4629, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %4630 to i64*
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4632 = getelementptr inbounds %struct.GPR, %struct.GPR* %4631, i32 0, i32 1
  %4633 = getelementptr inbounds %struct.Reg, %struct.Reg* %4632, i32 0, i32 0
  %EAX.i803 = bitcast %union.anon* %4633 to i32*
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4635 = getelementptr inbounds %struct.GPR, %struct.GPR* %4634, i32 0, i32 5
  %4636 = getelementptr inbounds %struct.Reg, %struct.Reg* %4635, i32 0, i32 0
  %RCX.i804 = bitcast %union.anon* %4636 to i64*
  %4637 = load i32, i32* %EAX.i803
  %4638 = zext i32 %4637 to i64
  %4639 = load i64, i64* %PC.i802
  %4640 = add i64 %4639, 3
  store i64 %4640, i64* %PC.i802
  %4641 = shl i64 %4638, 32
  %4642 = ashr exact i64 %4641, 32
  store i64 %4642, i64* %RCX.i804, align 8
  store %struct.Memory* %loadMem_412489, %struct.Memory** %MEMORY
  %loadMem_41248c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4644 = getelementptr inbounds %struct.GPR, %struct.GPR* %4643, i32 0, i32 33
  %4645 = getelementptr inbounds %struct.Reg, %struct.Reg* %4644, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %4645 to i64*
  %4646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4647 = getelementptr inbounds %struct.GPR, %struct.GPR* %4646, i32 0, i32 1
  %4648 = getelementptr inbounds %struct.Reg, %struct.Reg* %4647, i32 0, i32 0
  %RAX.i800 = bitcast %union.anon* %4648 to i64*
  %4649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4650 = getelementptr inbounds %struct.GPR, %struct.GPR* %4649, i32 0, i32 5
  %4651 = getelementptr inbounds %struct.Reg, %struct.Reg* %4650, i32 0, i32 0
  %RCX.i801 = bitcast %union.anon* %4651 to i64*
  %4652 = load i64, i64* %RCX.i801
  %4653 = mul i64 %4652, 4
  %4654 = add i64 %4653, 11185584
  %4655 = load i64, i64* %PC.i799
  %4656 = add i64 %4655, 7
  store i64 %4656, i64* %PC.i799
  %4657 = inttoptr i64 %4654 to i32*
  %4658 = load i32, i32* %4657
  %4659 = zext i32 %4658 to i64
  store i64 %4659, i64* %RAX.i800, align 8
  store %struct.Memory* %loadMem_41248c, %struct.Memory** %MEMORY
  %loadMem_412493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4661 = getelementptr inbounds %struct.GPR, %struct.GPR* %4660, i32 0, i32 33
  %4662 = getelementptr inbounds %struct.Reg, %struct.Reg* %4661, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %4662 to i64*
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4664 = getelementptr inbounds %struct.GPR, %struct.GPR* %4663, i32 0, i32 1
  %4665 = getelementptr inbounds %struct.Reg, %struct.Reg* %4664, i32 0, i32 0
  %EAX.i798 = bitcast %union.anon* %4665 to i32*
  %4666 = load i32, i32* %EAX.i798
  %4667 = zext i32 %4666 to i64
  %4668 = load i64, i64* %PC.i797
  %4669 = add i64 %4668, 7
  store i64 %4669, i64* %PC.i797
  %4670 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %4671 = sub i32 %4666, %4670
  %4672 = icmp ult i32 %4666, %4670
  %4673 = zext i1 %4672 to i8
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4673, i8* %4674, align 1
  %4675 = and i32 %4671, 255
  %4676 = call i32 @llvm.ctpop.i32(i32 %4675)
  %4677 = trunc i32 %4676 to i8
  %4678 = and i8 %4677, 1
  %4679 = xor i8 %4678, 1
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4679, i8* %4680, align 1
  %4681 = xor i32 %4670, %4666
  %4682 = xor i32 %4681, %4671
  %4683 = lshr i32 %4682, 4
  %4684 = trunc i32 %4683 to i8
  %4685 = and i8 %4684, 1
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4685, i8* %4686, align 1
  %4687 = icmp eq i32 %4671, 0
  %4688 = zext i1 %4687 to i8
  %4689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4688, i8* %4689, align 1
  %4690 = lshr i32 %4671, 31
  %4691 = trunc i32 %4690 to i8
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4691, i8* %4692, align 1
  %4693 = lshr i32 %4666, 31
  %4694 = lshr i32 %4670, 31
  %4695 = xor i32 %4694, %4693
  %4696 = xor i32 %4690, %4693
  %4697 = add i32 %4696, %4695
  %4698 = icmp eq i32 %4697, 2
  %4699 = zext i1 %4698 to i8
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4699, i8* %4700, align 1
  store %struct.Memory* %loadMem_412493, %struct.Memory** %MEMORY
  %loadMem_41249a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4702 = getelementptr inbounds %struct.GPR, %struct.GPR* %4701, i32 0, i32 33
  %4703 = getelementptr inbounds %struct.Reg, %struct.Reg* %4702, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %4703 to i64*
  %4704 = load i64, i64* %PC.i796
  %4705 = add i64 %4704, 89
  %4706 = load i64, i64* %PC.i796
  %4707 = add i64 %4706, 6
  %4708 = load i64, i64* %PC.i796
  %4709 = add i64 %4708, 6
  store i64 %4709, i64* %PC.i796
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4711 = load i8, i8* %4710, align 1
  store i8 %4711, i8* %BRANCH_TAKEN, align 1
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4713 = icmp ne i8 %4711, 0
  %4714 = select i1 %4713, i64 %4705, i64 %4707
  store i64 %4714, i64* %4712, align 8
  store %struct.Memory* %loadMem_41249a, %struct.Memory** %MEMORY
  %loadBr_41249a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41249a = icmp eq i8 %loadBr_41249a, 1
  br i1 %cmpBr_41249a, label %block_.L_4124f3, label %block_4124a0

block_4124a0:                                     ; preds = %block_412483
  %loadMem_4124a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4716 = getelementptr inbounds %struct.GPR, %struct.GPR* %4715, i32 0, i32 33
  %4717 = getelementptr inbounds %struct.Reg, %struct.Reg* %4716, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %4717 to i64*
  %4718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4719 = getelementptr inbounds %struct.GPR, %struct.GPR* %4718, i32 0, i32 15
  %4720 = getelementptr inbounds %struct.Reg, %struct.Reg* %4719, i32 0, i32 0
  %RBP.i795 = bitcast %union.anon* %4720 to i64*
  %4721 = load i64, i64* %RBP.i795
  %4722 = sub i64 %4721, 24
  %4723 = load i64, i64* %PC.i794
  %4724 = add i64 %4723, 5
  store i64 %4724, i64* %PC.i794
  %4725 = inttoptr i64 %4722 to i64*
  %4726 = load i64, i64* %4725
  %4727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4727, align 1
  %4728 = trunc i64 %4726 to i32
  %4729 = and i32 %4728, 255
  %4730 = call i32 @llvm.ctpop.i32(i32 %4729)
  %4731 = trunc i32 %4730 to i8
  %4732 = and i8 %4731, 1
  %4733 = xor i8 %4732, 1
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4733, i8* %4734, align 1
  %4735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4735, align 1
  %4736 = icmp eq i64 %4726, 0
  %4737 = zext i1 %4736 to i8
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4737, i8* %4738, align 1
  %4739 = lshr i64 %4726, 63
  %4740 = trunc i64 %4739 to i8
  %4741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4740, i8* %4741, align 1
  %4742 = lshr i64 %4726, 63
  %4743 = xor i64 %4739, %4742
  %4744 = add i64 %4743, %4742
  %4745 = icmp eq i64 %4744, 2
  %4746 = zext i1 %4745 to i8
  %4747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4746, i8* %4747, align 1
  store %struct.Memory* %loadMem_4124a0, %struct.Memory** %MEMORY
  %loadMem_4124a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4749 = getelementptr inbounds %struct.GPR, %struct.GPR* %4748, i32 0, i32 33
  %4750 = getelementptr inbounds %struct.Reg, %struct.Reg* %4749, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %4750 to i64*
  %4751 = load i64, i64* %PC.i793
  %4752 = add i64 %4751, 23
  %4753 = load i64, i64* %PC.i793
  %4754 = add i64 %4753, 6
  %4755 = load i64, i64* %PC.i793
  %4756 = add i64 %4755, 6
  store i64 %4756, i64* %PC.i793
  %4757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4758 = load i8, i8* %4757, align 1
  store i8 %4758, i8* %BRANCH_TAKEN, align 1
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4760 = icmp ne i8 %4758, 0
  %4761 = select i1 %4760, i64 %4752, i64 %4754
  store i64 %4761, i64* %4759, align 8
  store %struct.Memory* %loadMem_4124a5, %struct.Memory** %MEMORY
  %loadBr_4124a5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4124a5 = icmp eq i8 %loadBr_4124a5, 1
  br i1 %cmpBr_4124a5, label %block_.L_4124bc, label %block_4124ab

block_4124ab:                                     ; preds = %block_4124a0
  %loadMem_4124ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %4762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4763 = getelementptr inbounds %struct.GPR, %struct.GPR* %4762, i32 0, i32 33
  %4764 = getelementptr inbounds %struct.Reg, %struct.Reg* %4763, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %4764 to i64*
  %4765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4766 = getelementptr inbounds %struct.GPR, %struct.GPR* %4765, i32 0, i32 1
  %4767 = getelementptr inbounds %struct.Reg, %struct.Reg* %4766, i32 0, i32 0
  %RAX.i791 = bitcast %union.anon* %4767 to i64*
  %4768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4769 = getelementptr inbounds %struct.GPR, %struct.GPR* %4768, i32 0, i32 15
  %4770 = getelementptr inbounds %struct.Reg, %struct.Reg* %4769, i32 0, i32 0
  %RBP.i792 = bitcast %union.anon* %4770 to i64*
  %4771 = load i64, i64* %RBP.i792
  %4772 = sub i64 %4771, 92
  %4773 = load i64, i64* %PC.i790
  %4774 = add i64 %4773, 3
  store i64 %4774, i64* %PC.i790
  %4775 = inttoptr i64 %4772 to i32*
  %4776 = load i32, i32* %4775
  %4777 = zext i32 %4776 to i64
  store i64 %4777, i64* %RAX.i791, align 8
  store %struct.Memory* %loadMem_4124ab, %struct.Memory** %MEMORY
  %loadMem_4124ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4779 = getelementptr inbounds %struct.GPR, %struct.GPR* %4778, i32 0, i32 33
  %4780 = getelementptr inbounds %struct.Reg, %struct.Reg* %4779, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %4780 to i64*
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4782 = getelementptr inbounds %struct.GPR, %struct.GPR* %4781, i32 0, i32 1
  %4783 = getelementptr inbounds %struct.Reg, %struct.Reg* %4782, i32 0, i32 0
  %RAX.i789 = bitcast %union.anon* %4783 to i64*
  %4784 = load i64, i64* %RAX.i789
  %4785 = load i64, i64* %PC.i788
  %4786 = add i64 %4785, 3
  store i64 %4786, i64* %PC.i788
  %4787 = trunc i64 %4784 to i32
  %4788 = sub i32 %4787, 1
  %4789 = zext i32 %4788 to i64
  store i64 %4789, i64* %RAX.i789, align 8
  %4790 = icmp ult i32 %4787, 1
  %4791 = zext i1 %4790 to i8
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4791, i8* %4792, align 1
  %4793 = and i32 %4788, 255
  %4794 = call i32 @llvm.ctpop.i32(i32 %4793)
  %4795 = trunc i32 %4794 to i8
  %4796 = and i8 %4795, 1
  %4797 = xor i8 %4796, 1
  %4798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4797, i8* %4798, align 1
  %4799 = xor i64 1, %4784
  %4800 = trunc i64 %4799 to i32
  %4801 = xor i32 %4800, %4788
  %4802 = lshr i32 %4801, 4
  %4803 = trunc i32 %4802 to i8
  %4804 = and i8 %4803, 1
  %4805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4804, i8* %4805, align 1
  %4806 = icmp eq i32 %4788, 0
  %4807 = zext i1 %4806 to i8
  %4808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4807, i8* %4808, align 1
  %4809 = lshr i32 %4788, 31
  %4810 = trunc i32 %4809 to i8
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4810, i8* %4811, align 1
  %4812 = lshr i32 %4787, 31
  %4813 = xor i32 %4809, %4812
  %4814 = add i32 %4813, %4812
  %4815 = icmp eq i32 %4814, 2
  %4816 = zext i1 %4815 to i8
  %4817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4816, i8* %4817, align 1
  store %struct.Memory* %loadMem_4124ae, %struct.Memory** %MEMORY
  %loadMem_4124b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4819 = getelementptr inbounds %struct.GPR, %struct.GPR* %4818, i32 0, i32 33
  %4820 = getelementptr inbounds %struct.Reg, %struct.Reg* %4819, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %4820 to i64*
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4822 = getelementptr inbounds %struct.GPR, %struct.GPR* %4821, i32 0, i32 5
  %4823 = getelementptr inbounds %struct.Reg, %struct.Reg* %4822, i32 0, i32 0
  %RCX.i786 = bitcast %union.anon* %4823 to i64*
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4825 = getelementptr inbounds %struct.GPR, %struct.GPR* %4824, i32 0, i32 15
  %4826 = getelementptr inbounds %struct.Reg, %struct.Reg* %4825, i32 0, i32 0
  %RBP.i787 = bitcast %union.anon* %4826 to i64*
  %4827 = load i64, i64* %RBP.i787
  %4828 = sub i64 %4827, 24
  %4829 = load i64, i64* %PC.i785
  %4830 = add i64 %4829, 4
  store i64 %4830, i64* %PC.i785
  %4831 = inttoptr i64 %4828 to i64*
  %4832 = load i64, i64* %4831
  store i64 %4832, i64* %RCX.i786, align 8
  store %struct.Memory* %loadMem_4124b1, %struct.Memory** %MEMORY
  %loadMem_4124b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4834 = getelementptr inbounds %struct.GPR, %struct.GPR* %4833, i32 0, i32 33
  %4835 = getelementptr inbounds %struct.Reg, %struct.Reg* %4834, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %4835 to i64*
  %4836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4837 = getelementptr inbounds %struct.GPR, %struct.GPR* %4836, i32 0, i32 7
  %4838 = getelementptr inbounds %struct.Reg, %struct.Reg* %4837, i32 0, i32 0
  %RDX.i783 = bitcast %union.anon* %4838 to i64*
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4840 = getelementptr inbounds %struct.GPR, %struct.GPR* %4839, i32 0, i32 15
  %4841 = getelementptr inbounds %struct.Reg, %struct.Reg* %4840, i32 0, i32 0
  %RBP.i784 = bitcast %union.anon* %4841 to i64*
  %4842 = load i64, i64* %RBP.i784
  %4843 = sub i64 %4842, 36
  %4844 = load i64, i64* %PC.i782
  %4845 = add i64 %4844, 4
  store i64 %4845, i64* %PC.i782
  %4846 = inttoptr i64 %4843 to i32*
  %4847 = load i32, i32* %4846
  %4848 = sext i32 %4847 to i64
  store i64 %4848, i64* %RDX.i783, align 8
  store %struct.Memory* %loadMem_4124b5, %struct.Memory** %MEMORY
  %loadMem_4124b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4850 = getelementptr inbounds %struct.GPR, %struct.GPR* %4849, i32 0, i32 33
  %4851 = getelementptr inbounds %struct.Reg, %struct.Reg* %4850, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %4851 to i64*
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4853 = getelementptr inbounds %struct.GPR, %struct.GPR* %4852, i32 0, i32 1
  %4854 = getelementptr inbounds %struct.Reg, %struct.Reg* %4853, i32 0, i32 0
  %EAX.i779 = bitcast %union.anon* %4854 to i32*
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4856 = getelementptr inbounds %struct.GPR, %struct.GPR* %4855, i32 0, i32 5
  %4857 = getelementptr inbounds %struct.Reg, %struct.Reg* %4856, i32 0, i32 0
  %RCX.i780 = bitcast %union.anon* %4857 to i64*
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4859 = getelementptr inbounds %struct.GPR, %struct.GPR* %4858, i32 0, i32 7
  %4860 = getelementptr inbounds %struct.Reg, %struct.Reg* %4859, i32 0, i32 0
  %RDX.i781 = bitcast %union.anon* %4860 to i64*
  %4861 = load i64, i64* %RCX.i780
  %4862 = load i64, i64* %RDX.i781
  %4863 = mul i64 %4862, 4
  %4864 = add i64 %4863, %4861
  %4865 = load i32, i32* %EAX.i779
  %4866 = zext i32 %4865 to i64
  %4867 = load i64, i64* %PC.i778
  %4868 = add i64 %4867, 3
  store i64 %4868, i64* %PC.i778
  %4869 = inttoptr i64 %4864 to i32*
  store i32 %4865, i32* %4869
  store %struct.Memory* %loadMem_4124b9, %struct.Memory** %MEMORY
  br label %block_.L_4124bc

block_.L_4124bc:                                  ; preds = %block_4124ab, %block_4124a0
  %loadMem_4124bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4871 = getelementptr inbounds %struct.GPR, %struct.GPR* %4870, i32 0, i32 33
  %4872 = getelementptr inbounds %struct.Reg, %struct.Reg* %4871, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %4872 to i64*
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4874 = getelementptr inbounds %struct.GPR, %struct.GPR* %4873, i32 0, i32 1
  %4875 = getelementptr inbounds %struct.Reg, %struct.Reg* %4874, i32 0, i32 0
  %RAX.i776 = bitcast %union.anon* %4875 to i64*
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4877 = getelementptr inbounds %struct.GPR, %struct.GPR* %4876, i32 0, i32 15
  %4878 = getelementptr inbounds %struct.Reg, %struct.Reg* %4877, i32 0, i32 0
  %RBP.i777 = bitcast %union.anon* %4878 to i64*
  %4879 = load i64, i64* %RBP.i777
  %4880 = sub i64 %4879, 36
  %4881 = load i64, i64* %PC.i775
  %4882 = add i64 %4881, 3
  store i64 %4882, i64* %PC.i775
  %4883 = inttoptr i64 %4880 to i32*
  %4884 = load i32, i32* %4883
  %4885 = zext i32 %4884 to i64
  store i64 %4885, i64* %RAX.i776, align 8
  store %struct.Memory* %loadMem_4124bc, %struct.Memory** %MEMORY
  %loadMem_4124bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4887 = getelementptr inbounds %struct.GPR, %struct.GPR* %4886, i32 0, i32 33
  %4888 = getelementptr inbounds %struct.Reg, %struct.Reg* %4887, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %4888 to i64*
  %4889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4890 = getelementptr inbounds %struct.GPR, %struct.GPR* %4889, i32 0, i32 1
  %4891 = getelementptr inbounds %struct.Reg, %struct.Reg* %4890, i32 0, i32 0
  %RAX.i774 = bitcast %union.anon* %4891 to i64*
  %4892 = load i64, i64* %RAX.i774
  %4893 = load i64, i64* %PC.i773
  %4894 = add i64 %4893, 3
  store i64 %4894, i64* %PC.i773
  %4895 = trunc i64 %4892 to i32
  %4896 = add i32 1, %4895
  %4897 = zext i32 %4896 to i64
  store i64 %4897, i64* %RAX.i774, align 8
  %4898 = icmp ult i32 %4896, %4895
  %4899 = icmp ult i32 %4896, 1
  %4900 = or i1 %4898, %4899
  %4901 = zext i1 %4900 to i8
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4901, i8* %4902, align 1
  %4903 = and i32 %4896, 255
  %4904 = call i32 @llvm.ctpop.i32(i32 %4903)
  %4905 = trunc i32 %4904 to i8
  %4906 = and i8 %4905, 1
  %4907 = xor i8 %4906, 1
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4907, i8* %4908, align 1
  %4909 = xor i64 1, %4892
  %4910 = trunc i64 %4909 to i32
  %4911 = xor i32 %4910, %4896
  %4912 = lshr i32 %4911, 4
  %4913 = trunc i32 %4912 to i8
  %4914 = and i8 %4913, 1
  %4915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4914, i8* %4915, align 1
  %4916 = icmp eq i32 %4896, 0
  %4917 = zext i1 %4916 to i8
  %4918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4917, i8* %4918, align 1
  %4919 = lshr i32 %4896, 31
  %4920 = trunc i32 %4919 to i8
  %4921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4920, i8* %4921, align 1
  %4922 = lshr i32 %4895, 31
  %4923 = xor i32 %4919, %4922
  %4924 = add i32 %4923, %4919
  %4925 = icmp eq i32 %4924, 2
  %4926 = zext i1 %4925 to i8
  %4927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4926, i8* %4927, align 1
  store %struct.Memory* %loadMem_4124bf, %struct.Memory** %MEMORY
  %loadMem_4124c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4929 = getelementptr inbounds %struct.GPR, %struct.GPR* %4928, i32 0, i32 33
  %4930 = getelementptr inbounds %struct.Reg, %struct.Reg* %4929, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %4930 to i64*
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4932 = getelementptr inbounds %struct.GPR, %struct.GPR* %4931, i32 0, i32 1
  %4933 = getelementptr inbounds %struct.Reg, %struct.Reg* %4932, i32 0, i32 0
  %EAX.i771 = bitcast %union.anon* %4933 to i32*
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4935 = getelementptr inbounds %struct.GPR, %struct.GPR* %4934, i32 0, i32 15
  %4936 = getelementptr inbounds %struct.Reg, %struct.Reg* %4935, i32 0, i32 0
  %RBP.i772 = bitcast %union.anon* %4936 to i64*
  %4937 = load i64, i64* %RBP.i772
  %4938 = sub i64 %4937, 36
  %4939 = load i32, i32* %EAX.i771
  %4940 = zext i32 %4939 to i64
  %4941 = load i64, i64* %PC.i770
  %4942 = add i64 %4941, 3
  store i64 %4942, i64* %PC.i770
  %4943 = inttoptr i64 %4938 to i32*
  store i32 %4939, i32* %4943
  store %struct.Memory* %loadMem_4124c2, %struct.Memory** %MEMORY
  %loadMem_4124c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4945 = getelementptr inbounds %struct.GPR, %struct.GPR* %4944, i32 0, i32 33
  %4946 = getelementptr inbounds %struct.Reg, %struct.Reg* %4945, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %4946 to i64*
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4948 = getelementptr inbounds %struct.GPR, %struct.GPR* %4947, i32 0, i32 1
  %4949 = getelementptr inbounds %struct.Reg, %struct.Reg* %4948, i32 0, i32 0
  %RAX.i768 = bitcast %union.anon* %4949 to i64*
  %4950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4951 = getelementptr inbounds %struct.GPR, %struct.GPR* %4950, i32 0, i32 15
  %4952 = getelementptr inbounds %struct.Reg, %struct.Reg* %4951, i32 0, i32 0
  %RBP.i769 = bitcast %union.anon* %4952 to i64*
  %4953 = load i64, i64* %RBP.i769
  %4954 = sub i64 %4953, 36
  %4955 = load i64, i64* %PC.i767
  %4956 = add i64 %4955, 3
  store i64 %4956, i64* %PC.i767
  %4957 = inttoptr i64 %4954 to i32*
  %4958 = load i32, i32* %4957
  %4959 = zext i32 %4958 to i64
  store i64 %4959, i64* %RAX.i768, align 8
  store %struct.Memory* %loadMem_4124c5, %struct.Memory** %MEMORY
  %loadMem_4124c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 33
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %4962 to i64*
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 1
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %EAX.i765 = bitcast %union.anon* %4965 to i32*
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4967 = getelementptr inbounds %struct.GPR, %struct.GPR* %4966, i32 0, i32 15
  %4968 = getelementptr inbounds %struct.Reg, %struct.Reg* %4967, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %4968 to i64*
  %4969 = load i32, i32* %EAX.i765
  %4970 = zext i32 %4969 to i64
  %4971 = load i64, i64* %RBP.i766
  %4972 = sub i64 %4971, 16
  %4973 = load i64, i64* %PC.i764
  %4974 = add i64 %4973, 3
  store i64 %4974, i64* %PC.i764
  %4975 = inttoptr i64 %4972 to i32*
  %4976 = load i32, i32* %4975
  %4977 = sub i32 %4969, %4976
  %4978 = icmp ult i32 %4969, %4976
  %4979 = zext i1 %4978 to i8
  %4980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4979, i8* %4980, align 1
  %4981 = and i32 %4977, 255
  %4982 = call i32 @llvm.ctpop.i32(i32 %4981)
  %4983 = trunc i32 %4982 to i8
  %4984 = and i8 %4983, 1
  %4985 = xor i8 %4984, 1
  %4986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4985, i8* %4986, align 1
  %4987 = xor i32 %4976, %4969
  %4988 = xor i32 %4987, %4977
  %4989 = lshr i32 %4988, 4
  %4990 = trunc i32 %4989 to i8
  %4991 = and i8 %4990, 1
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4991, i8* %4992, align 1
  %4993 = icmp eq i32 %4977, 0
  %4994 = zext i1 %4993 to i8
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4994, i8* %4995, align 1
  %4996 = lshr i32 %4977, 31
  %4997 = trunc i32 %4996 to i8
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4997, i8* %4998, align 1
  %4999 = lshr i32 %4969, 31
  %5000 = lshr i32 %4976, 31
  %5001 = xor i32 %5000, %4999
  %5002 = xor i32 %4996, %4999
  %5003 = add i32 %5002, %5001
  %5004 = icmp eq i32 %5003, 2
  %5005 = zext i1 %5004 to i8
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5005, i8* %5006, align 1
  store %struct.Memory* %loadMem_4124c8, %struct.Memory** %MEMORY
  %loadMem_4124cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5008 = getelementptr inbounds %struct.GPR, %struct.GPR* %5007, i32 0, i32 33
  %5009 = getelementptr inbounds %struct.Reg, %struct.Reg* %5008, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %5009 to i64*
  %5010 = load i64, i64* %PC.i763
  %5011 = add i64 %5010, 17
  %5012 = load i64, i64* %PC.i763
  %5013 = add i64 %5012, 6
  %5014 = load i64, i64* %PC.i763
  %5015 = add i64 %5014, 6
  store i64 %5015, i64* %PC.i763
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5017 = load i8, i8* %5016, align 1
  %5018 = icmp ne i8 %5017, 0
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5020 = load i8, i8* %5019, align 1
  %5021 = icmp ne i8 %5020, 0
  %5022 = xor i1 %5018, %5021
  %5023 = zext i1 %5022 to i8
  store i8 %5023, i8* %BRANCH_TAKEN, align 1
  %5024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5025 = select i1 %5022, i64 %5011, i64 %5013
  store i64 %5025, i64* %5024, align 8
  store %struct.Memory* %loadMem_4124cb, %struct.Memory** %MEMORY
  %loadBr_4124cb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4124cb = icmp eq i8 %loadBr_4124cb, 1
  br i1 %cmpBr_4124cb, label %block_.L_4124dc, label %block_4124d1

block_4124d1:                                     ; preds = %block_.L_4124bc
  %loadMem_4124d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5027 = getelementptr inbounds %struct.GPR, %struct.GPR* %5026, i32 0, i32 33
  %5028 = getelementptr inbounds %struct.Reg, %struct.Reg* %5027, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %5028 to i64*
  %5029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5030 = getelementptr inbounds %struct.GPR, %struct.GPR* %5029, i32 0, i32 1
  %5031 = getelementptr inbounds %struct.Reg, %struct.Reg* %5030, i32 0, i32 0
  %RAX.i761 = bitcast %union.anon* %5031 to i64*
  %5032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5033 = getelementptr inbounds %struct.GPR, %struct.GPR* %5032, i32 0, i32 15
  %5034 = getelementptr inbounds %struct.Reg, %struct.Reg* %5033, i32 0, i32 0
  %RBP.i762 = bitcast %union.anon* %5034 to i64*
  %5035 = load i64, i64* %RBP.i762
  %5036 = sub i64 %5035, 36
  %5037 = load i64, i64* %PC.i760
  %5038 = add i64 %5037, 3
  store i64 %5038, i64* %PC.i760
  %5039 = inttoptr i64 %5036 to i32*
  %5040 = load i32, i32* %5039
  %5041 = zext i32 %5040 to i64
  store i64 %5041, i64* %RAX.i761, align 8
  store %struct.Memory* %loadMem_4124d1, %struct.Memory** %MEMORY
  %loadMem_4124d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5043 = getelementptr inbounds %struct.GPR, %struct.GPR* %5042, i32 0, i32 33
  %5044 = getelementptr inbounds %struct.Reg, %struct.Reg* %5043, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %5044 to i64*
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5046 = getelementptr inbounds %struct.GPR, %struct.GPR* %5045, i32 0, i32 1
  %5047 = getelementptr inbounds %struct.Reg, %struct.Reg* %5046, i32 0, i32 0
  %EAX.i758 = bitcast %union.anon* %5047 to i32*
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5049 = getelementptr inbounds %struct.GPR, %struct.GPR* %5048, i32 0, i32 15
  %5050 = getelementptr inbounds %struct.Reg, %struct.Reg* %5049, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %5050 to i64*
  %5051 = load i64, i64* %RBP.i759
  %5052 = sub i64 %5051, 4
  %5053 = load i32, i32* %EAX.i758
  %5054 = zext i32 %5053 to i64
  %5055 = load i64, i64* %PC.i757
  %5056 = add i64 %5055, 3
  store i64 %5056, i64* %PC.i757
  %5057 = inttoptr i64 %5052 to i32*
  store i32 %5053, i32* %5057
  store %struct.Memory* %loadMem_4124d4, %struct.Memory** %MEMORY
  %loadMem_4124d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5059 = getelementptr inbounds %struct.GPR, %struct.GPR* %5058, i32 0, i32 33
  %5060 = getelementptr inbounds %struct.Reg, %struct.Reg* %5059, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %5060 to i64*
  %5061 = load i64, i64* %PC.i756
  %5062 = add i64 %5061, 1469
  %5063 = load i64, i64* %PC.i756
  %5064 = add i64 %5063, 5
  store i64 %5064, i64* %PC.i756
  %5065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5062, i64* %5065, align 8
  store %struct.Memory* %loadMem_4124d7, %struct.Memory** %MEMORY
  br label %block_.L_412a94

block_.L_4124dc:                                  ; preds = %block_.L_4124bc
  %loadMem_4124dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5067 = getelementptr inbounds %struct.GPR, %struct.GPR* %5066, i32 0, i32 33
  %5068 = getelementptr inbounds %struct.Reg, %struct.Reg* %5067, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %5068 to i64*
  %5069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5070 = getelementptr inbounds %struct.GPR, %struct.GPR* %5069, i32 0, i32 1
  %5071 = getelementptr inbounds %struct.Reg, %struct.Reg* %5070, i32 0, i32 0
  %RAX.i755 = bitcast %union.anon* %5071 to i64*
  %5072 = load i64, i64* %PC.i754
  %5073 = add i64 %5072, 7
  store i64 %5073, i64* %PC.i754
  %5074 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %5075 = zext i32 %5074 to i64
  store i64 %5075, i64* %RAX.i755, align 8
  store %struct.Memory* %loadMem_4124dc, %struct.Memory** %MEMORY
  %loadMem_4124e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5077 = getelementptr inbounds %struct.GPR, %struct.GPR* %5076, i32 0, i32 33
  %5078 = getelementptr inbounds %struct.Reg, %struct.Reg* %5077, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %5078 to i64*
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5080 = getelementptr inbounds %struct.GPR, %struct.GPR* %5079, i32 0, i32 5
  %5081 = getelementptr inbounds %struct.Reg, %struct.Reg* %5080, i32 0, i32 0
  %RCX.i752 = bitcast %union.anon* %5081 to i64*
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5083 = getelementptr inbounds %struct.GPR, %struct.GPR* %5082, i32 0, i32 15
  %5084 = getelementptr inbounds %struct.Reg, %struct.Reg* %5083, i32 0, i32 0
  %RBP.i753 = bitcast %union.anon* %5084 to i64*
  %5085 = load i64, i64* %RBP.i753
  %5086 = sub i64 %5085, 92
  %5087 = load i64, i64* %PC.i751
  %5088 = add i64 %5087, 3
  store i64 %5088, i64* %PC.i751
  %5089 = inttoptr i64 %5086 to i32*
  %5090 = load i32, i32* %5089
  %5091 = zext i32 %5090 to i64
  store i64 %5091, i64* %RCX.i752, align 8
  store %struct.Memory* %loadMem_4124e3, %struct.Memory** %MEMORY
  %loadMem_4124e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5093 = getelementptr inbounds %struct.GPR, %struct.GPR* %5092, i32 0, i32 33
  %5094 = getelementptr inbounds %struct.Reg, %struct.Reg* %5093, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %5094 to i64*
  %5095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5096 = getelementptr inbounds %struct.GPR, %struct.GPR* %5095, i32 0, i32 5
  %5097 = getelementptr inbounds %struct.Reg, %struct.Reg* %5096, i32 0, i32 0
  %RCX.i750 = bitcast %union.anon* %5097 to i64*
  %5098 = load i64, i64* %RCX.i750
  %5099 = load i64, i64* %PC.i749
  %5100 = add i64 %5099, 3
  store i64 %5100, i64* %PC.i749
  %5101 = trunc i64 %5098 to i32
  %5102 = sub i32 %5101, 1
  %5103 = zext i32 %5102 to i64
  store i64 %5103, i64* %RCX.i750, align 8
  %5104 = icmp ult i32 %5101, 1
  %5105 = zext i1 %5104 to i8
  %5106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5105, i8* %5106, align 1
  %5107 = and i32 %5102, 255
  %5108 = call i32 @llvm.ctpop.i32(i32 %5107)
  %5109 = trunc i32 %5108 to i8
  %5110 = and i8 %5109, 1
  %5111 = xor i8 %5110, 1
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5111, i8* %5112, align 1
  %5113 = xor i64 1, %5098
  %5114 = trunc i64 %5113 to i32
  %5115 = xor i32 %5114, %5102
  %5116 = lshr i32 %5115, 4
  %5117 = trunc i32 %5116 to i8
  %5118 = and i8 %5117, 1
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5118, i8* %5119, align 1
  %5120 = icmp eq i32 %5102, 0
  %5121 = zext i1 %5120 to i8
  %5122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5121, i8* %5122, align 1
  %5123 = lshr i32 %5102, 31
  %5124 = trunc i32 %5123 to i8
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5124, i8* %5125, align 1
  %5126 = lshr i32 %5101, 31
  %5127 = xor i32 %5123, %5126
  %5128 = add i32 %5127, %5126
  %5129 = icmp eq i32 %5128, 2
  %5130 = zext i1 %5129 to i8
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5130, i8* %5131, align 1
  store %struct.Memory* %loadMem_4124e6, %struct.Memory** %MEMORY
  %loadMem_4124e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5133 = getelementptr inbounds %struct.GPR, %struct.GPR* %5132, i32 0, i32 33
  %5134 = getelementptr inbounds %struct.Reg, %struct.Reg* %5133, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %5134 to i64*
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5136 = getelementptr inbounds %struct.GPR, %struct.GPR* %5135, i32 0, i32 5
  %5137 = getelementptr inbounds %struct.Reg, %struct.Reg* %5136, i32 0, i32 0
  %ECX.i747 = bitcast %union.anon* %5137 to i32*
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5139 = getelementptr inbounds %struct.GPR, %struct.GPR* %5138, i32 0, i32 7
  %5140 = getelementptr inbounds %struct.Reg, %struct.Reg* %5139, i32 0, i32 0
  %RDX.i748 = bitcast %union.anon* %5140 to i64*
  %5141 = load i32, i32* %ECX.i747
  %5142 = zext i32 %5141 to i64
  %5143 = load i64, i64* %PC.i746
  %5144 = add i64 %5143, 3
  store i64 %5144, i64* %PC.i746
  %5145 = shl i64 %5142, 32
  %5146 = ashr exact i64 %5145, 32
  store i64 %5146, i64* %RDX.i748, align 8
  store %struct.Memory* %loadMem_4124e9, %struct.Memory** %MEMORY
  %loadMem_4124ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5148 = getelementptr inbounds %struct.GPR, %struct.GPR* %5147, i32 0, i32 33
  %5149 = getelementptr inbounds %struct.Reg, %struct.Reg* %5148, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %5149 to i64*
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5151 = getelementptr inbounds %struct.GPR, %struct.GPR* %5150, i32 0, i32 1
  %5152 = getelementptr inbounds %struct.Reg, %struct.Reg* %5151, i32 0, i32 0
  %EAX.i744 = bitcast %union.anon* %5152 to i32*
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 7
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %RDX.i745 = bitcast %union.anon* %5155 to i64*
  %5156 = load i64, i64* %RDX.i745
  %5157 = mul i64 %5156, 4
  %5158 = add i64 %5157, 11185584
  %5159 = load i32, i32* %EAX.i744
  %5160 = zext i32 %5159 to i64
  %5161 = load i64, i64* %PC.i743
  %5162 = add i64 %5161, 7
  store i64 %5162, i64* %PC.i743
  %5163 = inttoptr i64 %5158 to i32*
  store i32 %5159, i32* %5163
  store %struct.Memory* %loadMem_4124ec, %struct.Memory** %MEMORY
  br label %block_.L_4124f3

block_.L_4124f3:                                  ; preds = %block_.L_4124dc, %block_412483, %block_.L_412469
  %loadMem_4124f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5165 = getelementptr inbounds %struct.GPR, %struct.GPR* %5164, i32 0, i32 33
  %5166 = getelementptr inbounds %struct.Reg, %struct.Reg* %5165, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %5166 to i64*
  %5167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5168 = getelementptr inbounds %struct.GPR, %struct.GPR* %5167, i32 0, i32 1
  %5169 = getelementptr inbounds %struct.Reg, %struct.Reg* %5168, i32 0, i32 0
  %RAX.i741 = bitcast %union.anon* %5169 to i64*
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5171 = getelementptr inbounds %struct.GPR, %struct.GPR* %5170, i32 0, i32 15
  %5172 = getelementptr inbounds %struct.Reg, %struct.Reg* %5171, i32 0, i32 0
  %RBP.i742 = bitcast %union.anon* %5172 to i64*
  %5173 = load i64, i64* %RBP.i742
  %5174 = sub i64 %5173, 92
  %5175 = load i64, i64* %PC.i740
  %5176 = add i64 %5175, 3
  store i64 %5176, i64* %PC.i740
  %5177 = inttoptr i64 %5174 to i32*
  %5178 = load i32, i32* %5177
  %5179 = zext i32 %5178 to i64
  store i64 %5179, i64* %RAX.i741, align 8
  store %struct.Memory* %loadMem_4124f3, %struct.Memory** %MEMORY
  %loadMem_4124f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5181 = getelementptr inbounds %struct.GPR, %struct.GPR* %5180, i32 0, i32 33
  %5182 = getelementptr inbounds %struct.Reg, %struct.Reg* %5181, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %5182 to i64*
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5184 = getelementptr inbounds %struct.GPR, %struct.GPR* %5183, i32 0, i32 1
  %5185 = getelementptr inbounds %struct.Reg, %struct.Reg* %5184, i32 0, i32 0
  %RAX.i739 = bitcast %union.anon* %5185 to i64*
  %5186 = load i64, i64* %RAX.i739
  %5187 = load i64, i64* %PC.i738
  %5188 = add i64 %5187, 3
  store i64 %5188, i64* %PC.i738
  %5189 = trunc i64 %5186 to i32
  %5190 = sub i32 %5189, 20
  %5191 = zext i32 %5190 to i64
  store i64 %5191, i64* %RAX.i739, align 8
  %5192 = icmp ult i32 %5189, 20
  %5193 = zext i1 %5192 to i8
  %5194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5193, i8* %5194, align 1
  %5195 = and i32 %5190, 255
  %5196 = call i32 @llvm.ctpop.i32(i32 %5195)
  %5197 = trunc i32 %5196 to i8
  %5198 = and i8 %5197, 1
  %5199 = xor i8 %5198, 1
  %5200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5199, i8* %5200, align 1
  %5201 = xor i64 20, %5186
  %5202 = trunc i64 %5201 to i32
  %5203 = xor i32 %5202, %5190
  %5204 = lshr i32 %5203, 4
  %5205 = trunc i32 %5204 to i8
  %5206 = and i8 %5205, 1
  %5207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5206, i8* %5207, align 1
  %5208 = icmp eq i32 %5190, 0
  %5209 = zext i1 %5208 to i8
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5209, i8* %5210, align 1
  %5211 = lshr i32 %5190, 31
  %5212 = trunc i32 %5211 to i8
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5212, i8* %5213, align 1
  %5214 = lshr i32 %5189, 31
  %5215 = xor i32 %5211, %5214
  %5216 = add i32 %5215, %5214
  %5217 = icmp eq i32 %5216, 2
  %5218 = zext i1 %5217 to i8
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5218, i8* %5219, align 1
  store %struct.Memory* %loadMem_4124f6, %struct.Memory** %MEMORY
  %loadMem_4124f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5221 = getelementptr inbounds %struct.GPR, %struct.GPR* %5220, i32 0, i32 33
  %5222 = getelementptr inbounds %struct.Reg, %struct.Reg* %5221, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %5222 to i64*
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5224 = getelementptr inbounds %struct.GPR, %struct.GPR* %5223, i32 0, i32 1
  %5225 = getelementptr inbounds %struct.Reg, %struct.Reg* %5224, i32 0, i32 0
  %EAX.i736 = bitcast %union.anon* %5225 to i32*
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5227 = getelementptr inbounds %struct.GPR, %struct.GPR* %5226, i32 0, i32 5
  %5228 = getelementptr inbounds %struct.Reg, %struct.Reg* %5227, i32 0, i32 0
  %RCX.i737 = bitcast %union.anon* %5228 to i64*
  %5229 = load i32, i32* %EAX.i736
  %5230 = zext i32 %5229 to i64
  %5231 = load i64, i64* %PC.i735
  %5232 = add i64 %5231, 3
  store i64 %5232, i64* %PC.i735
  %5233 = shl i64 %5230, 32
  %5234 = ashr exact i64 %5233, 32
  store i64 %5234, i64* %RCX.i737, align 8
  store %struct.Memory* %loadMem_4124f9, %struct.Memory** %MEMORY
  %loadMem_4124fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 33
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %5237 to i64*
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5239 = getelementptr inbounds %struct.GPR, %struct.GPR* %5238, i32 0, i32 1
  %5240 = getelementptr inbounds %struct.Reg, %struct.Reg* %5239, i32 0, i32 0
  %RAX.i733 = bitcast %union.anon* %5240 to i64*
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5242 = getelementptr inbounds %struct.GPR, %struct.GPR* %5241, i32 0, i32 5
  %5243 = getelementptr inbounds %struct.Reg, %struct.Reg* %5242, i32 0, i32 0
  %RCX.i734 = bitcast %union.anon* %5243 to i64*
  %5244 = load i64, i64* %RCX.i734
  %5245 = add i64 %5244, 12099168
  %5246 = load i64, i64* %PC.i732
  %5247 = add i64 %5246, 8
  store i64 %5247, i64* %PC.i732
  %5248 = inttoptr i64 %5245 to i8*
  %5249 = load i8, i8* %5248
  %5250 = zext i8 %5249 to i64
  store i64 %5250, i64* %RAX.i733, align 8
  store %struct.Memory* %loadMem_4124fc, %struct.Memory** %MEMORY
  %loadMem_412504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5252 = getelementptr inbounds %struct.GPR, %struct.GPR* %5251, i32 0, i32 33
  %5253 = getelementptr inbounds %struct.Reg, %struct.Reg* %5252, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %5253 to i64*
  %5254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5255 = getelementptr inbounds %struct.GPR, %struct.GPR* %5254, i32 0, i32 1
  %5256 = getelementptr inbounds %struct.Reg, %struct.Reg* %5255, i32 0, i32 0
  %EAX.i731 = bitcast %union.anon* %5256 to i32*
  %5257 = load i32, i32* %EAX.i731
  %5258 = zext i32 %5257 to i64
  %5259 = load i64, i64* %PC.i730
  %5260 = add i64 %5259, 3
  store i64 %5260, i64* %PC.i730
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5261, align 1
  %5262 = and i32 %5257, 255
  %5263 = call i32 @llvm.ctpop.i32(i32 %5262)
  %5264 = trunc i32 %5263 to i8
  %5265 = and i8 %5264, 1
  %5266 = xor i8 %5265, 1
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5266, i8* %5267, align 1
  %5268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5268, align 1
  %5269 = icmp eq i32 %5257, 0
  %5270 = zext i1 %5269 to i8
  %5271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5270, i8* %5271, align 1
  %5272 = lshr i32 %5257, 31
  %5273 = trunc i32 %5272 to i8
  %5274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5273, i8* %5274, align 1
  %5275 = lshr i32 %5257, 31
  %5276 = xor i32 %5272, %5275
  %5277 = add i32 %5276, %5275
  %5278 = icmp eq i32 %5277, 2
  %5279 = zext i1 %5278 to i8
  %5280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5279, i8* %5280, align 1
  store %struct.Memory* %loadMem_412504, %struct.Memory** %MEMORY
  %loadMem_412507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5282 = getelementptr inbounds %struct.GPR, %struct.GPR* %5281, i32 0, i32 33
  %5283 = getelementptr inbounds %struct.Reg, %struct.Reg* %5282, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %5283 to i64*
  %5284 = load i64, i64* %PC.i729
  %5285 = add i64 %5284, 118
  %5286 = load i64, i64* %PC.i729
  %5287 = add i64 %5286, 6
  %5288 = load i64, i64* %PC.i729
  %5289 = add i64 %5288, 6
  store i64 %5289, i64* %PC.i729
  %5290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5291 = load i8, i8* %5290, align 1
  %5292 = icmp eq i8 %5291, 0
  %5293 = zext i1 %5292 to i8
  store i8 %5293, i8* %BRANCH_TAKEN, align 1
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5295 = select i1 %5292, i64 %5285, i64 %5287
  store i64 %5295, i64* %5294, align 8
  store %struct.Memory* %loadMem_412507, %struct.Memory** %MEMORY
  %loadBr_412507 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412507 = icmp eq i8 %loadBr_412507, 1
  br i1 %cmpBr_412507, label %block_.L_41257d, label %block_41250d

block_41250d:                                     ; preds = %block_.L_4124f3
  %loadMem_41250d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5297 = getelementptr inbounds %struct.GPR, %struct.GPR* %5296, i32 0, i32 33
  %5298 = getelementptr inbounds %struct.Reg, %struct.Reg* %5297, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %5298 to i64*
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5300 = getelementptr inbounds %struct.GPR, %struct.GPR* %5299, i32 0, i32 1
  %5301 = getelementptr inbounds %struct.Reg, %struct.Reg* %5300, i32 0, i32 0
  %RAX.i727 = bitcast %union.anon* %5301 to i64*
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5303 = getelementptr inbounds %struct.GPR, %struct.GPR* %5302, i32 0, i32 15
  %5304 = getelementptr inbounds %struct.Reg, %struct.Reg* %5303, i32 0, i32 0
  %RBP.i728 = bitcast %union.anon* %5304 to i64*
  %5305 = load i64, i64* %RBP.i728
  %5306 = sub i64 %5305, 92
  %5307 = load i64, i64* %PC.i726
  %5308 = add i64 %5307, 3
  store i64 %5308, i64* %PC.i726
  %5309 = inttoptr i64 %5306 to i32*
  %5310 = load i32, i32* %5309
  %5311 = zext i32 %5310 to i64
  store i64 %5311, i64* %RAX.i727, align 8
  store %struct.Memory* %loadMem_41250d, %struct.Memory** %MEMORY
  %loadMem_412510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5313 = getelementptr inbounds %struct.GPR, %struct.GPR* %5312, i32 0, i32 33
  %5314 = getelementptr inbounds %struct.Reg, %struct.Reg* %5313, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %5314 to i64*
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5316 = getelementptr inbounds %struct.GPR, %struct.GPR* %5315, i32 0, i32 1
  %5317 = getelementptr inbounds %struct.Reg, %struct.Reg* %5316, i32 0, i32 0
  %RAX.i725 = bitcast %union.anon* %5317 to i64*
  %5318 = load i64, i64* %RAX.i725
  %5319 = load i64, i64* %PC.i724
  %5320 = add i64 %5319, 3
  store i64 %5320, i64* %PC.i724
  %5321 = trunc i64 %5318 to i32
  %5322 = sub i32 %5321, 20
  %5323 = zext i32 %5322 to i64
  store i64 %5323, i64* %RAX.i725, align 8
  %5324 = icmp ult i32 %5321, 20
  %5325 = zext i1 %5324 to i8
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5325, i8* %5326, align 1
  %5327 = and i32 %5322, 255
  %5328 = call i32 @llvm.ctpop.i32(i32 %5327)
  %5329 = trunc i32 %5328 to i8
  %5330 = and i8 %5329, 1
  %5331 = xor i8 %5330, 1
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5331, i8* %5332, align 1
  %5333 = xor i64 20, %5318
  %5334 = trunc i64 %5333 to i32
  %5335 = xor i32 %5334, %5322
  %5336 = lshr i32 %5335, 4
  %5337 = trunc i32 %5336 to i8
  %5338 = and i8 %5337, 1
  %5339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5338, i8* %5339, align 1
  %5340 = icmp eq i32 %5322, 0
  %5341 = zext i1 %5340 to i8
  %5342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5341, i8* %5342, align 1
  %5343 = lshr i32 %5322, 31
  %5344 = trunc i32 %5343 to i8
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5344, i8* %5345, align 1
  %5346 = lshr i32 %5321, 31
  %5347 = xor i32 %5343, %5346
  %5348 = add i32 %5347, %5346
  %5349 = icmp eq i32 %5348, 2
  %5350 = zext i1 %5349 to i8
  %5351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5350, i8* %5351, align 1
  store %struct.Memory* %loadMem_412510, %struct.Memory** %MEMORY
  %loadMem_412513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5353 = getelementptr inbounds %struct.GPR, %struct.GPR* %5352, i32 0, i32 33
  %5354 = getelementptr inbounds %struct.Reg, %struct.Reg* %5353, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %5354 to i64*
  %5355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5356 = getelementptr inbounds %struct.GPR, %struct.GPR* %5355, i32 0, i32 1
  %5357 = getelementptr inbounds %struct.Reg, %struct.Reg* %5356, i32 0, i32 0
  %EAX.i722 = bitcast %union.anon* %5357 to i32*
  %5358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5359 = getelementptr inbounds %struct.GPR, %struct.GPR* %5358, i32 0, i32 5
  %5360 = getelementptr inbounds %struct.Reg, %struct.Reg* %5359, i32 0, i32 0
  %RCX.i723 = bitcast %union.anon* %5360 to i64*
  %5361 = load i32, i32* %EAX.i722
  %5362 = zext i32 %5361 to i64
  %5363 = load i64, i64* %PC.i721
  %5364 = add i64 %5363, 3
  store i64 %5364, i64* %PC.i721
  %5365 = shl i64 %5362, 32
  %5366 = ashr exact i64 %5365, 32
  store i64 %5366, i64* %RCX.i723, align 8
  store %struct.Memory* %loadMem_412513, %struct.Memory** %MEMORY
  %loadMem_412516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5368 = getelementptr inbounds %struct.GPR, %struct.GPR* %5367, i32 0, i32 33
  %5369 = getelementptr inbounds %struct.Reg, %struct.Reg* %5368, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %5369 to i64*
  %5370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5371 = getelementptr inbounds %struct.GPR, %struct.GPR* %5370, i32 0, i32 1
  %5372 = getelementptr inbounds %struct.Reg, %struct.Reg* %5371, i32 0, i32 0
  %RAX.i719 = bitcast %union.anon* %5372 to i64*
  %5373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5374 = getelementptr inbounds %struct.GPR, %struct.GPR* %5373, i32 0, i32 5
  %5375 = getelementptr inbounds %struct.Reg, %struct.Reg* %5374, i32 0, i32 0
  %RCX.i720 = bitcast %union.anon* %5375 to i64*
  %5376 = load i64, i64* %RCX.i720
  %5377 = mul i64 %5376, 4
  %5378 = add i64 %5377, 11185584
  %5379 = load i64, i64* %PC.i718
  %5380 = add i64 %5379, 7
  store i64 %5380, i64* %PC.i718
  %5381 = inttoptr i64 %5378 to i32*
  %5382 = load i32, i32* %5381
  %5383 = zext i32 %5382 to i64
  store i64 %5383, i64* %RAX.i719, align 8
  store %struct.Memory* %loadMem_412516, %struct.Memory** %MEMORY
  %loadMem_41251d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 33
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %5386 to i64*
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 1
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %EAX.i717 = bitcast %union.anon* %5389 to i32*
  %5390 = load i32, i32* %EAX.i717
  %5391 = zext i32 %5390 to i64
  %5392 = load i64, i64* %PC.i716
  %5393 = add i64 %5392, 7
  store i64 %5393, i64* %PC.i716
  %5394 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %5395 = sub i32 %5390, %5394
  %5396 = icmp ult i32 %5390, %5394
  %5397 = zext i1 %5396 to i8
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5397, i8* %5398, align 1
  %5399 = and i32 %5395, 255
  %5400 = call i32 @llvm.ctpop.i32(i32 %5399)
  %5401 = trunc i32 %5400 to i8
  %5402 = and i8 %5401, 1
  %5403 = xor i8 %5402, 1
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5403, i8* %5404, align 1
  %5405 = xor i32 %5394, %5390
  %5406 = xor i32 %5405, %5395
  %5407 = lshr i32 %5406, 4
  %5408 = trunc i32 %5407 to i8
  %5409 = and i8 %5408, 1
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5409, i8* %5410, align 1
  %5411 = icmp eq i32 %5395, 0
  %5412 = zext i1 %5411 to i8
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5412, i8* %5413, align 1
  %5414 = lshr i32 %5395, 31
  %5415 = trunc i32 %5414 to i8
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5415, i8* %5416, align 1
  %5417 = lshr i32 %5390, 31
  %5418 = lshr i32 %5394, 31
  %5419 = xor i32 %5418, %5417
  %5420 = xor i32 %5414, %5417
  %5421 = add i32 %5420, %5419
  %5422 = icmp eq i32 %5421, 2
  %5423 = zext i1 %5422 to i8
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5423, i8* %5424, align 1
  store %struct.Memory* %loadMem_41251d, %struct.Memory** %MEMORY
  %loadMem_412524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5426 = getelementptr inbounds %struct.GPR, %struct.GPR* %5425, i32 0, i32 33
  %5427 = getelementptr inbounds %struct.Reg, %struct.Reg* %5426, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %5427 to i64*
  %5428 = load i64, i64* %PC.i715
  %5429 = add i64 %5428, 89
  %5430 = load i64, i64* %PC.i715
  %5431 = add i64 %5430, 6
  %5432 = load i64, i64* %PC.i715
  %5433 = add i64 %5432, 6
  store i64 %5433, i64* %PC.i715
  %5434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5435 = load i8, i8* %5434, align 1
  store i8 %5435, i8* %BRANCH_TAKEN, align 1
  %5436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5437 = icmp ne i8 %5435, 0
  %5438 = select i1 %5437, i64 %5429, i64 %5431
  store i64 %5438, i64* %5436, align 8
  store %struct.Memory* %loadMem_412524, %struct.Memory** %MEMORY
  %loadBr_412524 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412524 = icmp eq i8 %loadBr_412524, 1
  br i1 %cmpBr_412524, label %block_.L_41257d, label %block_41252a

block_41252a:                                     ; preds = %block_41250d
  %loadMem_41252a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5440 = getelementptr inbounds %struct.GPR, %struct.GPR* %5439, i32 0, i32 33
  %5441 = getelementptr inbounds %struct.Reg, %struct.Reg* %5440, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %5441 to i64*
  %5442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5443 = getelementptr inbounds %struct.GPR, %struct.GPR* %5442, i32 0, i32 15
  %5444 = getelementptr inbounds %struct.Reg, %struct.Reg* %5443, i32 0, i32 0
  %RBP.i714 = bitcast %union.anon* %5444 to i64*
  %5445 = load i64, i64* %RBP.i714
  %5446 = sub i64 %5445, 24
  %5447 = load i64, i64* %PC.i713
  %5448 = add i64 %5447, 5
  store i64 %5448, i64* %PC.i713
  %5449 = inttoptr i64 %5446 to i64*
  %5450 = load i64, i64* %5449
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5451, align 1
  %5452 = trunc i64 %5450 to i32
  %5453 = and i32 %5452, 255
  %5454 = call i32 @llvm.ctpop.i32(i32 %5453)
  %5455 = trunc i32 %5454 to i8
  %5456 = and i8 %5455, 1
  %5457 = xor i8 %5456, 1
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5457, i8* %5458, align 1
  %5459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5459, align 1
  %5460 = icmp eq i64 %5450, 0
  %5461 = zext i1 %5460 to i8
  %5462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5461, i8* %5462, align 1
  %5463 = lshr i64 %5450, 63
  %5464 = trunc i64 %5463 to i8
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5464, i8* %5465, align 1
  %5466 = lshr i64 %5450, 63
  %5467 = xor i64 %5463, %5466
  %5468 = add i64 %5467, %5466
  %5469 = icmp eq i64 %5468, 2
  %5470 = zext i1 %5469 to i8
  %5471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5470, i8* %5471, align 1
  store %struct.Memory* %loadMem_41252a, %struct.Memory** %MEMORY
  %loadMem_41252f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5473 = getelementptr inbounds %struct.GPR, %struct.GPR* %5472, i32 0, i32 33
  %5474 = getelementptr inbounds %struct.Reg, %struct.Reg* %5473, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %5474 to i64*
  %5475 = load i64, i64* %PC.i712
  %5476 = add i64 %5475, 23
  %5477 = load i64, i64* %PC.i712
  %5478 = add i64 %5477, 6
  %5479 = load i64, i64* %PC.i712
  %5480 = add i64 %5479, 6
  store i64 %5480, i64* %PC.i712
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5482 = load i8, i8* %5481, align 1
  store i8 %5482, i8* %BRANCH_TAKEN, align 1
  %5483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5484 = icmp ne i8 %5482, 0
  %5485 = select i1 %5484, i64 %5476, i64 %5478
  store i64 %5485, i64* %5483, align 8
  store %struct.Memory* %loadMem_41252f, %struct.Memory** %MEMORY
  %loadBr_41252f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41252f = icmp eq i8 %loadBr_41252f, 1
  br i1 %cmpBr_41252f, label %block_.L_412546, label %block_412535

block_412535:                                     ; preds = %block_41252a
  %loadMem_412535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5487 = getelementptr inbounds %struct.GPR, %struct.GPR* %5486, i32 0, i32 33
  %5488 = getelementptr inbounds %struct.Reg, %struct.Reg* %5487, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %5488 to i64*
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5490 = getelementptr inbounds %struct.GPR, %struct.GPR* %5489, i32 0, i32 1
  %5491 = getelementptr inbounds %struct.Reg, %struct.Reg* %5490, i32 0, i32 0
  %RAX.i710 = bitcast %union.anon* %5491 to i64*
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5493 = getelementptr inbounds %struct.GPR, %struct.GPR* %5492, i32 0, i32 15
  %5494 = getelementptr inbounds %struct.Reg, %struct.Reg* %5493, i32 0, i32 0
  %RBP.i711 = bitcast %union.anon* %5494 to i64*
  %5495 = load i64, i64* %RBP.i711
  %5496 = sub i64 %5495, 92
  %5497 = load i64, i64* %PC.i709
  %5498 = add i64 %5497, 3
  store i64 %5498, i64* %PC.i709
  %5499 = inttoptr i64 %5496 to i32*
  %5500 = load i32, i32* %5499
  %5501 = zext i32 %5500 to i64
  store i64 %5501, i64* %RAX.i710, align 8
  store %struct.Memory* %loadMem_412535, %struct.Memory** %MEMORY
  %loadMem_412538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5503 = getelementptr inbounds %struct.GPR, %struct.GPR* %5502, i32 0, i32 33
  %5504 = getelementptr inbounds %struct.Reg, %struct.Reg* %5503, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %5504 to i64*
  %5505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5506 = getelementptr inbounds %struct.GPR, %struct.GPR* %5505, i32 0, i32 1
  %5507 = getelementptr inbounds %struct.Reg, %struct.Reg* %5506, i32 0, i32 0
  %RAX.i708 = bitcast %union.anon* %5507 to i64*
  %5508 = load i64, i64* %RAX.i708
  %5509 = load i64, i64* %PC.i707
  %5510 = add i64 %5509, 3
  store i64 %5510, i64* %PC.i707
  %5511 = trunc i64 %5508 to i32
  %5512 = sub i32 %5511, 20
  %5513 = zext i32 %5512 to i64
  store i64 %5513, i64* %RAX.i708, align 8
  %5514 = icmp ult i32 %5511, 20
  %5515 = zext i1 %5514 to i8
  %5516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5515, i8* %5516, align 1
  %5517 = and i32 %5512, 255
  %5518 = call i32 @llvm.ctpop.i32(i32 %5517)
  %5519 = trunc i32 %5518 to i8
  %5520 = and i8 %5519, 1
  %5521 = xor i8 %5520, 1
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5521, i8* %5522, align 1
  %5523 = xor i64 20, %5508
  %5524 = trunc i64 %5523 to i32
  %5525 = xor i32 %5524, %5512
  %5526 = lshr i32 %5525, 4
  %5527 = trunc i32 %5526 to i8
  %5528 = and i8 %5527, 1
  %5529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5528, i8* %5529, align 1
  %5530 = icmp eq i32 %5512, 0
  %5531 = zext i1 %5530 to i8
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5531, i8* %5532, align 1
  %5533 = lshr i32 %5512, 31
  %5534 = trunc i32 %5533 to i8
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5534, i8* %5535, align 1
  %5536 = lshr i32 %5511, 31
  %5537 = xor i32 %5533, %5536
  %5538 = add i32 %5537, %5536
  %5539 = icmp eq i32 %5538, 2
  %5540 = zext i1 %5539 to i8
  %5541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5540, i8* %5541, align 1
  store %struct.Memory* %loadMem_412538, %struct.Memory** %MEMORY
  %loadMem_41253b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5543 = getelementptr inbounds %struct.GPR, %struct.GPR* %5542, i32 0, i32 33
  %5544 = getelementptr inbounds %struct.Reg, %struct.Reg* %5543, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %5544 to i64*
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5546 = getelementptr inbounds %struct.GPR, %struct.GPR* %5545, i32 0, i32 5
  %5547 = getelementptr inbounds %struct.Reg, %struct.Reg* %5546, i32 0, i32 0
  %RCX.i705 = bitcast %union.anon* %5547 to i64*
  %5548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5549 = getelementptr inbounds %struct.GPR, %struct.GPR* %5548, i32 0, i32 15
  %5550 = getelementptr inbounds %struct.Reg, %struct.Reg* %5549, i32 0, i32 0
  %RBP.i706 = bitcast %union.anon* %5550 to i64*
  %5551 = load i64, i64* %RBP.i706
  %5552 = sub i64 %5551, 24
  %5553 = load i64, i64* %PC.i704
  %5554 = add i64 %5553, 4
  store i64 %5554, i64* %PC.i704
  %5555 = inttoptr i64 %5552 to i64*
  %5556 = load i64, i64* %5555
  store i64 %5556, i64* %RCX.i705, align 8
  store %struct.Memory* %loadMem_41253b, %struct.Memory** %MEMORY
  %loadMem_41253f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5558 = getelementptr inbounds %struct.GPR, %struct.GPR* %5557, i32 0, i32 33
  %5559 = getelementptr inbounds %struct.Reg, %struct.Reg* %5558, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %5559 to i64*
  %5560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5561 = getelementptr inbounds %struct.GPR, %struct.GPR* %5560, i32 0, i32 7
  %5562 = getelementptr inbounds %struct.Reg, %struct.Reg* %5561, i32 0, i32 0
  %RDX.i702 = bitcast %union.anon* %5562 to i64*
  %5563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5564 = getelementptr inbounds %struct.GPR, %struct.GPR* %5563, i32 0, i32 15
  %5565 = getelementptr inbounds %struct.Reg, %struct.Reg* %5564, i32 0, i32 0
  %RBP.i703 = bitcast %union.anon* %5565 to i64*
  %5566 = load i64, i64* %RBP.i703
  %5567 = sub i64 %5566, 36
  %5568 = load i64, i64* %PC.i701
  %5569 = add i64 %5568, 4
  store i64 %5569, i64* %PC.i701
  %5570 = inttoptr i64 %5567 to i32*
  %5571 = load i32, i32* %5570
  %5572 = sext i32 %5571 to i64
  store i64 %5572, i64* %RDX.i702, align 8
  store %struct.Memory* %loadMem_41253f, %struct.Memory** %MEMORY
  %loadMem_412543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5574 = getelementptr inbounds %struct.GPR, %struct.GPR* %5573, i32 0, i32 33
  %5575 = getelementptr inbounds %struct.Reg, %struct.Reg* %5574, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %5575 to i64*
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5577 = getelementptr inbounds %struct.GPR, %struct.GPR* %5576, i32 0, i32 1
  %5578 = getelementptr inbounds %struct.Reg, %struct.Reg* %5577, i32 0, i32 0
  %EAX.i698 = bitcast %union.anon* %5578 to i32*
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5580 = getelementptr inbounds %struct.GPR, %struct.GPR* %5579, i32 0, i32 5
  %5581 = getelementptr inbounds %struct.Reg, %struct.Reg* %5580, i32 0, i32 0
  %RCX.i699 = bitcast %union.anon* %5581 to i64*
  %5582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5583 = getelementptr inbounds %struct.GPR, %struct.GPR* %5582, i32 0, i32 7
  %5584 = getelementptr inbounds %struct.Reg, %struct.Reg* %5583, i32 0, i32 0
  %RDX.i700 = bitcast %union.anon* %5584 to i64*
  %5585 = load i64, i64* %RCX.i699
  %5586 = load i64, i64* %RDX.i700
  %5587 = mul i64 %5586, 4
  %5588 = add i64 %5587, %5585
  %5589 = load i32, i32* %EAX.i698
  %5590 = zext i32 %5589 to i64
  %5591 = load i64, i64* %PC.i697
  %5592 = add i64 %5591, 3
  store i64 %5592, i64* %PC.i697
  %5593 = inttoptr i64 %5588 to i32*
  store i32 %5589, i32* %5593
  store %struct.Memory* %loadMem_412543, %struct.Memory** %MEMORY
  br label %block_.L_412546

block_.L_412546:                                  ; preds = %block_412535, %block_41252a
  %loadMem_412546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5595 = getelementptr inbounds %struct.GPR, %struct.GPR* %5594, i32 0, i32 33
  %5596 = getelementptr inbounds %struct.Reg, %struct.Reg* %5595, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %5596 to i64*
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5598 = getelementptr inbounds %struct.GPR, %struct.GPR* %5597, i32 0, i32 1
  %5599 = getelementptr inbounds %struct.Reg, %struct.Reg* %5598, i32 0, i32 0
  %RAX.i695 = bitcast %union.anon* %5599 to i64*
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5601 = getelementptr inbounds %struct.GPR, %struct.GPR* %5600, i32 0, i32 15
  %5602 = getelementptr inbounds %struct.Reg, %struct.Reg* %5601, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %5602 to i64*
  %5603 = load i64, i64* %RBP.i696
  %5604 = sub i64 %5603, 36
  %5605 = load i64, i64* %PC.i694
  %5606 = add i64 %5605, 3
  store i64 %5606, i64* %PC.i694
  %5607 = inttoptr i64 %5604 to i32*
  %5608 = load i32, i32* %5607
  %5609 = zext i32 %5608 to i64
  store i64 %5609, i64* %RAX.i695, align 8
  store %struct.Memory* %loadMem_412546, %struct.Memory** %MEMORY
  %loadMem_412549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5611 = getelementptr inbounds %struct.GPR, %struct.GPR* %5610, i32 0, i32 33
  %5612 = getelementptr inbounds %struct.Reg, %struct.Reg* %5611, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %5612 to i64*
  %5613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5614 = getelementptr inbounds %struct.GPR, %struct.GPR* %5613, i32 0, i32 1
  %5615 = getelementptr inbounds %struct.Reg, %struct.Reg* %5614, i32 0, i32 0
  %RAX.i693 = bitcast %union.anon* %5615 to i64*
  %5616 = load i64, i64* %RAX.i693
  %5617 = load i64, i64* %PC.i692
  %5618 = add i64 %5617, 3
  store i64 %5618, i64* %PC.i692
  %5619 = trunc i64 %5616 to i32
  %5620 = add i32 1, %5619
  %5621 = zext i32 %5620 to i64
  store i64 %5621, i64* %RAX.i693, align 8
  %5622 = icmp ult i32 %5620, %5619
  %5623 = icmp ult i32 %5620, 1
  %5624 = or i1 %5622, %5623
  %5625 = zext i1 %5624 to i8
  %5626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5625, i8* %5626, align 1
  %5627 = and i32 %5620, 255
  %5628 = call i32 @llvm.ctpop.i32(i32 %5627)
  %5629 = trunc i32 %5628 to i8
  %5630 = and i8 %5629, 1
  %5631 = xor i8 %5630, 1
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5631, i8* %5632, align 1
  %5633 = xor i64 1, %5616
  %5634 = trunc i64 %5633 to i32
  %5635 = xor i32 %5634, %5620
  %5636 = lshr i32 %5635, 4
  %5637 = trunc i32 %5636 to i8
  %5638 = and i8 %5637, 1
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5638, i8* %5639, align 1
  %5640 = icmp eq i32 %5620, 0
  %5641 = zext i1 %5640 to i8
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5641, i8* %5642, align 1
  %5643 = lshr i32 %5620, 31
  %5644 = trunc i32 %5643 to i8
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5644, i8* %5645, align 1
  %5646 = lshr i32 %5619, 31
  %5647 = xor i32 %5643, %5646
  %5648 = add i32 %5647, %5643
  %5649 = icmp eq i32 %5648, 2
  %5650 = zext i1 %5649 to i8
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5650, i8* %5651, align 1
  store %struct.Memory* %loadMem_412549, %struct.Memory** %MEMORY
  %loadMem_41254c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5653 = getelementptr inbounds %struct.GPR, %struct.GPR* %5652, i32 0, i32 33
  %5654 = getelementptr inbounds %struct.Reg, %struct.Reg* %5653, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %5654 to i64*
  %5655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5656 = getelementptr inbounds %struct.GPR, %struct.GPR* %5655, i32 0, i32 1
  %5657 = getelementptr inbounds %struct.Reg, %struct.Reg* %5656, i32 0, i32 0
  %EAX.i690 = bitcast %union.anon* %5657 to i32*
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5659 = getelementptr inbounds %struct.GPR, %struct.GPR* %5658, i32 0, i32 15
  %5660 = getelementptr inbounds %struct.Reg, %struct.Reg* %5659, i32 0, i32 0
  %RBP.i691 = bitcast %union.anon* %5660 to i64*
  %5661 = load i64, i64* %RBP.i691
  %5662 = sub i64 %5661, 36
  %5663 = load i32, i32* %EAX.i690
  %5664 = zext i32 %5663 to i64
  %5665 = load i64, i64* %PC.i689
  %5666 = add i64 %5665, 3
  store i64 %5666, i64* %PC.i689
  %5667 = inttoptr i64 %5662 to i32*
  store i32 %5663, i32* %5667
  store %struct.Memory* %loadMem_41254c, %struct.Memory** %MEMORY
  %loadMem_41254f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5669 = getelementptr inbounds %struct.GPR, %struct.GPR* %5668, i32 0, i32 33
  %5670 = getelementptr inbounds %struct.Reg, %struct.Reg* %5669, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %5670 to i64*
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5672 = getelementptr inbounds %struct.GPR, %struct.GPR* %5671, i32 0, i32 1
  %5673 = getelementptr inbounds %struct.Reg, %struct.Reg* %5672, i32 0, i32 0
  %RAX.i687 = bitcast %union.anon* %5673 to i64*
  %5674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5675 = getelementptr inbounds %struct.GPR, %struct.GPR* %5674, i32 0, i32 15
  %5676 = getelementptr inbounds %struct.Reg, %struct.Reg* %5675, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %5676 to i64*
  %5677 = load i64, i64* %RBP.i688
  %5678 = sub i64 %5677, 36
  %5679 = load i64, i64* %PC.i686
  %5680 = add i64 %5679, 3
  store i64 %5680, i64* %PC.i686
  %5681 = inttoptr i64 %5678 to i32*
  %5682 = load i32, i32* %5681
  %5683 = zext i32 %5682 to i64
  store i64 %5683, i64* %RAX.i687, align 8
  store %struct.Memory* %loadMem_41254f, %struct.Memory** %MEMORY
  %loadMem_412552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5685 = getelementptr inbounds %struct.GPR, %struct.GPR* %5684, i32 0, i32 33
  %5686 = getelementptr inbounds %struct.Reg, %struct.Reg* %5685, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %5686 to i64*
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5688 = getelementptr inbounds %struct.GPR, %struct.GPR* %5687, i32 0, i32 1
  %5689 = getelementptr inbounds %struct.Reg, %struct.Reg* %5688, i32 0, i32 0
  %EAX.i684 = bitcast %union.anon* %5689 to i32*
  %5690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5691 = getelementptr inbounds %struct.GPR, %struct.GPR* %5690, i32 0, i32 15
  %5692 = getelementptr inbounds %struct.Reg, %struct.Reg* %5691, i32 0, i32 0
  %RBP.i685 = bitcast %union.anon* %5692 to i64*
  %5693 = load i32, i32* %EAX.i684
  %5694 = zext i32 %5693 to i64
  %5695 = load i64, i64* %RBP.i685
  %5696 = sub i64 %5695, 16
  %5697 = load i64, i64* %PC.i683
  %5698 = add i64 %5697, 3
  store i64 %5698, i64* %PC.i683
  %5699 = inttoptr i64 %5696 to i32*
  %5700 = load i32, i32* %5699
  %5701 = sub i32 %5693, %5700
  %5702 = icmp ult i32 %5693, %5700
  %5703 = zext i1 %5702 to i8
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5703, i8* %5704, align 1
  %5705 = and i32 %5701, 255
  %5706 = call i32 @llvm.ctpop.i32(i32 %5705)
  %5707 = trunc i32 %5706 to i8
  %5708 = and i8 %5707, 1
  %5709 = xor i8 %5708, 1
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5709, i8* %5710, align 1
  %5711 = xor i32 %5700, %5693
  %5712 = xor i32 %5711, %5701
  %5713 = lshr i32 %5712, 4
  %5714 = trunc i32 %5713 to i8
  %5715 = and i8 %5714, 1
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5715, i8* %5716, align 1
  %5717 = icmp eq i32 %5701, 0
  %5718 = zext i1 %5717 to i8
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5718, i8* %5719, align 1
  %5720 = lshr i32 %5701, 31
  %5721 = trunc i32 %5720 to i8
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5721, i8* %5722, align 1
  %5723 = lshr i32 %5693, 31
  %5724 = lshr i32 %5700, 31
  %5725 = xor i32 %5724, %5723
  %5726 = xor i32 %5720, %5723
  %5727 = add i32 %5726, %5725
  %5728 = icmp eq i32 %5727, 2
  %5729 = zext i1 %5728 to i8
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5729, i8* %5730, align 1
  store %struct.Memory* %loadMem_412552, %struct.Memory** %MEMORY
  %loadMem_412555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5732 = getelementptr inbounds %struct.GPR, %struct.GPR* %5731, i32 0, i32 33
  %5733 = getelementptr inbounds %struct.Reg, %struct.Reg* %5732, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %5733 to i64*
  %5734 = load i64, i64* %PC.i682
  %5735 = add i64 %5734, 17
  %5736 = load i64, i64* %PC.i682
  %5737 = add i64 %5736, 6
  %5738 = load i64, i64* %PC.i682
  %5739 = add i64 %5738, 6
  store i64 %5739, i64* %PC.i682
  %5740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5741 = load i8, i8* %5740, align 1
  %5742 = icmp ne i8 %5741, 0
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5744 = load i8, i8* %5743, align 1
  %5745 = icmp ne i8 %5744, 0
  %5746 = xor i1 %5742, %5745
  %5747 = zext i1 %5746 to i8
  store i8 %5747, i8* %BRANCH_TAKEN, align 1
  %5748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5749 = select i1 %5746, i64 %5735, i64 %5737
  store i64 %5749, i64* %5748, align 8
  store %struct.Memory* %loadMem_412555, %struct.Memory** %MEMORY
  %loadBr_412555 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412555 = icmp eq i8 %loadBr_412555, 1
  br i1 %cmpBr_412555, label %block_.L_412566, label %block_41255b

block_41255b:                                     ; preds = %block_.L_412546
  %loadMem_41255b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 33
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %5752 to i64*
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5754 = getelementptr inbounds %struct.GPR, %struct.GPR* %5753, i32 0, i32 1
  %5755 = getelementptr inbounds %struct.Reg, %struct.Reg* %5754, i32 0, i32 0
  %RAX.i680 = bitcast %union.anon* %5755 to i64*
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5757 = getelementptr inbounds %struct.GPR, %struct.GPR* %5756, i32 0, i32 15
  %5758 = getelementptr inbounds %struct.Reg, %struct.Reg* %5757, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %5758 to i64*
  %5759 = load i64, i64* %RBP.i681
  %5760 = sub i64 %5759, 36
  %5761 = load i64, i64* %PC.i679
  %5762 = add i64 %5761, 3
  store i64 %5762, i64* %PC.i679
  %5763 = inttoptr i64 %5760 to i32*
  %5764 = load i32, i32* %5763
  %5765 = zext i32 %5764 to i64
  store i64 %5765, i64* %RAX.i680, align 8
  store %struct.Memory* %loadMem_41255b, %struct.Memory** %MEMORY
  %loadMem_41255e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5767 = getelementptr inbounds %struct.GPR, %struct.GPR* %5766, i32 0, i32 33
  %5768 = getelementptr inbounds %struct.Reg, %struct.Reg* %5767, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %5768 to i64*
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5770 = getelementptr inbounds %struct.GPR, %struct.GPR* %5769, i32 0, i32 1
  %5771 = getelementptr inbounds %struct.Reg, %struct.Reg* %5770, i32 0, i32 0
  %EAX.i677 = bitcast %union.anon* %5771 to i32*
  %5772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5773 = getelementptr inbounds %struct.GPR, %struct.GPR* %5772, i32 0, i32 15
  %5774 = getelementptr inbounds %struct.Reg, %struct.Reg* %5773, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %5774 to i64*
  %5775 = load i64, i64* %RBP.i678
  %5776 = sub i64 %5775, 4
  %5777 = load i32, i32* %EAX.i677
  %5778 = zext i32 %5777 to i64
  %5779 = load i64, i64* %PC.i676
  %5780 = add i64 %5779, 3
  store i64 %5780, i64* %PC.i676
  %5781 = inttoptr i64 %5776 to i32*
  store i32 %5777, i32* %5781
  store %struct.Memory* %loadMem_41255e, %struct.Memory** %MEMORY
  %loadMem_412561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5783 = getelementptr inbounds %struct.GPR, %struct.GPR* %5782, i32 0, i32 33
  %5784 = getelementptr inbounds %struct.Reg, %struct.Reg* %5783, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %5784 to i64*
  %5785 = load i64, i64* %PC.i675
  %5786 = add i64 %5785, 1331
  %5787 = load i64, i64* %PC.i675
  %5788 = add i64 %5787, 5
  store i64 %5788, i64* %PC.i675
  %5789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5786, i64* %5789, align 8
  store %struct.Memory* %loadMem_412561, %struct.Memory** %MEMORY
  br label %block_.L_412a94

block_.L_412566:                                  ; preds = %block_.L_412546
  %loadMem_412566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5791 = getelementptr inbounds %struct.GPR, %struct.GPR* %5790, i32 0, i32 33
  %5792 = getelementptr inbounds %struct.Reg, %struct.Reg* %5791, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %5792 to i64*
  %5793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5794 = getelementptr inbounds %struct.GPR, %struct.GPR* %5793, i32 0, i32 1
  %5795 = getelementptr inbounds %struct.Reg, %struct.Reg* %5794, i32 0, i32 0
  %RAX.i674 = bitcast %union.anon* %5795 to i64*
  %5796 = load i64, i64* %PC.i673
  %5797 = add i64 %5796, 7
  store i64 %5797, i64* %PC.i673
  %5798 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %5799 = zext i32 %5798 to i64
  store i64 %5799, i64* %RAX.i674, align 8
  store %struct.Memory* %loadMem_412566, %struct.Memory** %MEMORY
  %loadMem_41256d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5801 = getelementptr inbounds %struct.GPR, %struct.GPR* %5800, i32 0, i32 33
  %5802 = getelementptr inbounds %struct.Reg, %struct.Reg* %5801, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %5802 to i64*
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5804 = getelementptr inbounds %struct.GPR, %struct.GPR* %5803, i32 0, i32 5
  %5805 = getelementptr inbounds %struct.Reg, %struct.Reg* %5804, i32 0, i32 0
  %RCX.i671 = bitcast %union.anon* %5805 to i64*
  %5806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5807 = getelementptr inbounds %struct.GPR, %struct.GPR* %5806, i32 0, i32 15
  %5808 = getelementptr inbounds %struct.Reg, %struct.Reg* %5807, i32 0, i32 0
  %RBP.i672 = bitcast %union.anon* %5808 to i64*
  %5809 = load i64, i64* %RBP.i672
  %5810 = sub i64 %5809, 92
  %5811 = load i64, i64* %PC.i670
  %5812 = add i64 %5811, 3
  store i64 %5812, i64* %PC.i670
  %5813 = inttoptr i64 %5810 to i32*
  %5814 = load i32, i32* %5813
  %5815 = zext i32 %5814 to i64
  store i64 %5815, i64* %RCX.i671, align 8
  store %struct.Memory* %loadMem_41256d, %struct.Memory** %MEMORY
  %loadMem_412570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5817 = getelementptr inbounds %struct.GPR, %struct.GPR* %5816, i32 0, i32 33
  %5818 = getelementptr inbounds %struct.Reg, %struct.Reg* %5817, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %5818 to i64*
  %5819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5820 = getelementptr inbounds %struct.GPR, %struct.GPR* %5819, i32 0, i32 5
  %5821 = getelementptr inbounds %struct.Reg, %struct.Reg* %5820, i32 0, i32 0
  %RCX.i669 = bitcast %union.anon* %5821 to i64*
  %5822 = load i64, i64* %RCX.i669
  %5823 = load i64, i64* %PC.i668
  %5824 = add i64 %5823, 3
  store i64 %5824, i64* %PC.i668
  %5825 = trunc i64 %5822 to i32
  %5826 = sub i32 %5825, 20
  %5827 = zext i32 %5826 to i64
  store i64 %5827, i64* %RCX.i669, align 8
  %5828 = icmp ult i32 %5825, 20
  %5829 = zext i1 %5828 to i8
  %5830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5829, i8* %5830, align 1
  %5831 = and i32 %5826, 255
  %5832 = call i32 @llvm.ctpop.i32(i32 %5831)
  %5833 = trunc i32 %5832 to i8
  %5834 = and i8 %5833, 1
  %5835 = xor i8 %5834, 1
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5835, i8* %5836, align 1
  %5837 = xor i64 20, %5822
  %5838 = trunc i64 %5837 to i32
  %5839 = xor i32 %5838, %5826
  %5840 = lshr i32 %5839, 4
  %5841 = trunc i32 %5840 to i8
  %5842 = and i8 %5841, 1
  %5843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5842, i8* %5843, align 1
  %5844 = icmp eq i32 %5826, 0
  %5845 = zext i1 %5844 to i8
  %5846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5845, i8* %5846, align 1
  %5847 = lshr i32 %5826, 31
  %5848 = trunc i32 %5847 to i8
  %5849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5848, i8* %5849, align 1
  %5850 = lshr i32 %5825, 31
  %5851 = xor i32 %5847, %5850
  %5852 = add i32 %5851, %5850
  %5853 = icmp eq i32 %5852, 2
  %5854 = zext i1 %5853 to i8
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5854, i8* %5855, align 1
  store %struct.Memory* %loadMem_412570, %struct.Memory** %MEMORY
  %loadMem_412573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5857 = getelementptr inbounds %struct.GPR, %struct.GPR* %5856, i32 0, i32 33
  %5858 = getelementptr inbounds %struct.Reg, %struct.Reg* %5857, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %5858 to i64*
  %5859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5860 = getelementptr inbounds %struct.GPR, %struct.GPR* %5859, i32 0, i32 5
  %5861 = getelementptr inbounds %struct.Reg, %struct.Reg* %5860, i32 0, i32 0
  %ECX.i666 = bitcast %union.anon* %5861 to i32*
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5863 = getelementptr inbounds %struct.GPR, %struct.GPR* %5862, i32 0, i32 7
  %5864 = getelementptr inbounds %struct.Reg, %struct.Reg* %5863, i32 0, i32 0
  %RDX.i667 = bitcast %union.anon* %5864 to i64*
  %5865 = load i32, i32* %ECX.i666
  %5866 = zext i32 %5865 to i64
  %5867 = load i64, i64* %PC.i665
  %5868 = add i64 %5867, 3
  store i64 %5868, i64* %PC.i665
  %5869 = shl i64 %5866, 32
  %5870 = ashr exact i64 %5869, 32
  store i64 %5870, i64* %RDX.i667, align 8
  store %struct.Memory* %loadMem_412573, %struct.Memory** %MEMORY
  %loadMem_412576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5872 = getelementptr inbounds %struct.GPR, %struct.GPR* %5871, i32 0, i32 33
  %5873 = getelementptr inbounds %struct.Reg, %struct.Reg* %5872, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %5873 to i64*
  %5874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5875 = getelementptr inbounds %struct.GPR, %struct.GPR* %5874, i32 0, i32 1
  %5876 = getelementptr inbounds %struct.Reg, %struct.Reg* %5875, i32 0, i32 0
  %EAX.i663 = bitcast %union.anon* %5876 to i32*
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5878 = getelementptr inbounds %struct.GPR, %struct.GPR* %5877, i32 0, i32 7
  %5879 = getelementptr inbounds %struct.Reg, %struct.Reg* %5878, i32 0, i32 0
  %RDX.i664 = bitcast %union.anon* %5879 to i64*
  %5880 = load i64, i64* %RDX.i664
  %5881 = mul i64 %5880, 4
  %5882 = add i64 %5881, 11185584
  %5883 = load i32, i32* %EAX.i663
  %5884 = zext i32 %5883 to i64
  %5885 = load i64, i64* %PC.i662
  %5886 = add i64 %5885, 7
  store i64 %5886, i64* %PC.i662
  %5887 = inttoptr i64 %5882 to i32*
  store i32 %5883, i32* %5887
  store %struct.Memory* %loadMem_412576, %struct.Memory** %MEMORY
  br label %block_.L_41257d

block_.L_41257d:                                  ; preds = %block_.L_412566, %block_41250d, %block_.L_4124f3
  %loadMem_41257d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5889 = getelementptr inbounds %struct.GPR, %struct.GPR* %5888, i32 0, i32 33
  %5890 = getelementptr inbounds %struct.Reg, %struct.Reg* %5889, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %5890 to i64*
  %5891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5892 = getelementptr inbounds %struct.GPR, %struct.GPR* %5891, i32 0, i32 1
  %5893 = getelementptr inbounds %struct.Reg, %struct.Reg* %5892, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %5893 to i64*
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5895 = getelementptr inbounds %struct.GPR, %struct.GPR* %5894, i32 0, i32 15
  %5896 = getelementptr inbounds %struct.Reg, %struct.Reg* %5895, i32 0, i32 0
  %RBP.i661 = bitcast %union.anon* %5896 to i64*
  %5897 = load i64, i64* %RBP.i661
  %5898 = sub i64 %5897, 92
  %5899 = load i64, i64* %PC.i659
  %5900 = add i64 %5899, 3
  store i64 %5900, i64* %PC.i659
  %5901 = inttoptr i64 %5898 to i32*
  %5902 = load i32, i32* %5901
  %5903 = zext i32 %5902 to i64
  store i64 %5903, i64* %RAX.i660, align 8
  store %struct.Memory* %loadMem_41257d, %struct.Memory** %MEMORY
  %loadMem_412580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5905 = getelementptr inbounds %struct.GPR, %struct.GPR* %5904, i32 0, i32 33
  %5906 = getelementptr inbounds %struct.Reg, %struct.Reg* %5905, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %5906 to i64*
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5908 = getelementptr inbounds %struct.GPR, %struct.GPR* %5907, i32 0, i32 1
  %5909 = getelementptr inbounds %struct.Reg, %struct.Reg* %5908, i32 0, i32 0
  %RAX.i658 = bitcast %union.anon* %5909 to i64*
  %5910 = load i64, i64* %RAX.i658
  %5911 = load i64, i64* %PC.i657
  %5912 = add i64 %5911, 3
  store i64 %5912, i64* %PC.i657
  %5913 = trunc i64 %5910 to i32
  %5914 = add i32 1, %5913
  %5915 = zext i32 %5914 to i64
  store i64 %5915, i64* %RAX.i658, align 8
  %5916 = icmp ult i32 %5914, %5913
  %5917 = icmp ult i32 %5914, 1
  %5918 = or i1 %5916, %5917
  %5919 = zext i1 %5918 to i8
  %5920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5919, i8* %5920, align 1
  %5921 = and i32 %5914, 255
  %5922 = call i32 @llvm.ctpop.i32(i32 %5921)
  %5923 = trunc i32 %5922 to i8
  %5924 = and i8 %5923, 1
  %5925 = xor i8 %5924, 1
  %5926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5925, i8* %5926, align 1
  %5927 = xor i64 1, %5910
  %5928 = trunc i64 %5927 to i32
  %5929 = xor i32 %5928, %5914
  %5930 = lshr i32 %5929, 4
  %5931 = trunc i32 %5930 to i8
  %5932 = and i8 %5931, 1
  %5933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5932, i8* %5933, align 1
  %5934 = icmp eq i32 %5914, 0
  %5935 = zext i1 %5934 to i8
  %5936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5935, i8* %5936, align 1
  %5937 = lshr i32 %5914, 31
  %5938 = trunc i32 %5937 to i8
  %5939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5938, i8* %5939, align 1
  %5940 = lshr i32 %5913, 31
  %5941 = xor i32 %5937, %5940
  %5942 = add i32 %5941, %5937
  %5943 = icmp eq i32 %5942, 2
  %5944 = zext i1 %5943 to i8
  %5945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5944, i8* %5945, align 1
  store %struct.Memory* %loadMem_412580, %struct.Memory** %MEMORY
  %loadMem_412583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5947 = getelementptr inbounds %struct.GPR, %struct.GPR* %5946, i32 0, i32 33
  %5948 = getelementptr inbounds %struct.Reg, %struct.Reg* %5947, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %5948 to i64*
  %5949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5950 = getelementptr inbounds %struct.GPR, %struct.GPR* %5949, i32 0, i32 1
  %5951 = getelementptr inbounds %struct.Reg, %struct.Reg* %5950, i32 0, i32 0
  %EAX.i655 = bitcast %union.anon* %5951 to i32*
  %5952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5953 = getelementptr inbounds %struct.GPR, %struct.GPR* %5952, i32 0, i32 5
  %5954 = getelementptr inbounds %struct.Reg, %struct.Reg* %5953, i32 0, i32 0
  %RCX.i656 = bitcast %union.anon* %5954 to i64*
  %5955 = load i32, i32* %EAX.i655
  %5956 = zext i32 %5955 to i64
  %5957 = load i64, i64* %PC.i654
  %5958 = add i64 %5957, 3
  store i64 %5958, i64* %PC.i654
  %5959 = shl i64 %5956, 32
  %5960 = ashr exact i64 %5959, 32
  store i64 %5960, i64* %RCX.i656, align 8
  store %struct.Memory* %loadMem_412583, %struct.Memory** %MEMORY
  %loadMem_412586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5962 = getelementptr inbounds %struct.GPR, %struct.GPR* %5961, i32 0, i32 33
  %5963 = getelementptr inbounds %struct.Reg, %struct.Reg* %5962, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %5963 to i64*
  %5964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5965 = getelementptr inbounds %struct.GPR, %struct.GPR* %5964, i32 0, i32 1
  %5966 = getelementptr inbounds %struct.Reg, %struct.Reg* %5965, i32 0, i32 0
  %RAX.i652 = bitcast %union.anon* %5966 to i64*
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5968 = getelementptr inbounds %struct.GPR, %struct.GPR* %5967, i32 0, i32 5
  %5969 = getelementptr inbounds %struct.Reg, %struct.Reg* %5968, i32 0, i32 0
  %RCX.i653 = bitcast %union.anon* %5969 to i64*
  %5970 = load i64, i64* %RCX.i653
  %5971 = add i64 %5970, 12099168
  %5972 = load i64, i64* %PC.i651
  %5973 = add i64 %5972, 8
  store i64 %5973, i64* %PC.i651
  %5974 = inttoptr i64 %5971 to i8*
  %5975 = load i8, i8* %5974
  %5976 = zext i8 %5975 to i64
  store i64 %5976, i64* %RAX.i652, align 8
  store %struct.Memory* %loadMem_412586, %struct.Memory** %MEMORY
  %loadMem_41258e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5978 = getelementptr inbounds %struct.GPR, %struct.GPR* %5977, i32 0, i32 33
  %5979 = getelementptr inbounds %struct.Reg, %struct.Reg* %5978, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %5979 to i64*
  %5980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5981 = getelementptr inbounds %struct.GPR, %struct.GPR* %5980, i32 0, i32 1
  %5982 = getelementptr inbounds %struct.Reg, %struct.Reg* %5981, i32 0, i32 0
  %EAX.i650 = bitcast %union.anon* %5982 to i32*
  %5983 = load i32, i32* %EAX.i650
  %5984 = zext i32 %5983 to i64
  %5985 = load i64, i64* %PC.i649
  %5986 = add i64 %5985, 3
  store i64 %5986, i64* %PC.i649
  %5987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5987, align 1
  %5988 = and i32 %5983, 255
  %5989 = call i32 @llvm.ctpop.i32(i32 %5988)
  %5990 = trunc i32 %5989 to i8
  %5991 = and i8 %5990, 1
  %5992 = xor i8 %5991, 1
  %5993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5992, i8* %5993, align 1
  %5994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5994, align 1
  %5995 = icmp eq i32 %5983, 0
  %5996 = zext i1 %5995 to i8
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5996, i8* %5997, align 1
  %5998 = lshr i32 %5983, 31
  %5999 = trunc i32 %5998 to i8
  %6000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5999, i8* %6000, align 1
  %6001 = lshr i32 %5983, 31
  %6002 = xor i32 %5998, %6001
  %6003 = add i32 %6002, %6001
  %6004 = icmp eq i32 %6003, 2
  %6005 = zext i1 %6004 to i8
  %6006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6005, i8* %6006, align 1
  store %struct.Memory* %loadMem_41258e, %struct.Memory** %MEMORY
  %loadMem_412591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6008 = getelementptr inbounds %struct.GPR, %struct.GPR* %6007, i32 0, i32 33
  %6009 = getelementptr inbounds %struct.Reg, %struct.Reg* %6008, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %6009 to i64*
  %6010 = load i64, i64* %PC.i648
  %6011 = add i64 %6010, 118
  %6012 = load i64, i64* %PC.i648
  %6013 = add i64 %6012, 6
  %6014 = load i64, i64* %PC.i648
  %6015 = add i64 %6014, 6
  store i64 %6015, i64* %PC.i648
  %6016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6017 = load i8, i8* %6016, align 1
  %6018 = icmp eq i8 %6017, 0
  %6019 = zext i1 %6018 to i8
  store i8 %6019, i8* %BRANCH_TAKEN, align 1
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6021 = select i1 %6018, i64 %6011, i64 %6013
  store i64 %6021, i64* %6020, align 8
  store %struct.Memory* %loadMem_412591, %struct.Memory** %MEMORY
  %loadBr_412591 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412591 = icmp eq i8 %loadBr_412591, 1
  br i1 %cmpBr_412591, label %block_.L_412607, label %block_412597

block_412597:                                     ; preds = %block_.L_41257d
  %loadMem_412597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6023 = getelementptr inbounds %struct.GPR, %struct.GPR* %6022, i32 0, i32 33
  %6024 = getelementptr inbounds %struct.Reg, %struct.Reg* %6023, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %6024 to i64*
  %6025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6026 = getelementptr inbounds %struct.GPR, %struct.GPR* %6025, i32 0, i32 1
  %6027 = getelementptr inbounds %struct.Reg, %struct.Reg* %6026, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %6027 to i64*
  %6028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6029 = getelementptr inbounds %struct.GPR, %struct.GPR* %6028, i32 0, i32 15
  %6030 = getelementptr inbounds %struct.Reg, %struct.Reg* %6029, i32 0, i32 0
  %RBP.i647 = bitcast %union.anon* %6030 to i64*
  %6031 = load i64, i64* %RBP.i647
  %6032 = sub i64 %6031, 92
  %6033 = load i64, i64* %PC.i645
  %6034 = add i64 %6033, 3
  store i64 %6034, i64* %PC.i645
  %6035 = inttoptr i64 %6032 to i32*
  %6036 = load i32, i32* %6035
  %6037 = zext i32 %6036 to i64
  store i64 %6037, i64* %RAX.i646, align 8
  store %struct.Memory* %loadMem_412597, %struct.Memory** %MEMORY
  %loadMem_41259a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6039 = getelementptr inbounds %struct.GPR, %struct.GPR* %6038, i32 0, i32 33
  %6040 = getelementptr inbounds %struct.Reg, %struct.Reg* %6039, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %6040 to i64*
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6042 = getelementptr inbounds %struct.GPR, %struct.GPR* %6041, i32 0, i32 1
  %6043 = getelementptr inbounds %struct.Reg, %struct.Reg* %6042, i32 0, i32 0
  %RAX.i644 = bitcast %union.anon* %6043 to i64*
  %6044 = load i64, i64* %RAX.i644
  %6045 = load i64, i64* %PC.i643
  %6046 = add i64 %6045, 3
  store i64 %6046, i64* %PC.i643
  %6047 = trunc i64 %6044 to i32
  %6048 = add i32 1, %6047
  %6049 = zext i32 %6048 to i64
  store i64 %6049, i64* %RAX.i644, align 8
  %6050 = icmp ult i32 %6048, %6047
  %6051 = icmp ult i32 %6048, 1
  %6052 = or i1 %6050, %6051
  %6053 = zext i1 %6052 to i8
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6053, i8* %6054, align 1
  %6055 = and i32 %6048, 255
  %6056 = call i32 @llvm.ctpop.i32(i32 %6055)
  %6057 = trunc i32 %6056 to i8
  %6058 = and i8 %6057, 1
  %6059 = xor i8 %6058, 1
  %6060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6059, i8* %6060, align 1
  %6061 = xor i64 1, %6044
  %6062 = trunc i64 %6061 to i32
  %6063 = xor i32 %6062, %6048
  %6064 = lshr i32 %6063, 4
  %6065 = trunc i32 %6064 to i8
  %6066 = and i8 %6065, 1
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6066, i8* %6067, align 1
  %6068 = icmp eq i32 %6048, 0
  %6069 = zext i1 %6068 to i8
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6069, i8* %6070, align 1
  %6071 = lshr i32 %6048, 31
  %6072 = trunc i32 %6071 to i8
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6072, i8* %6073, align 1
  %6074 = lshr i32 %6047, 31
  %6075 = xor i32 %6071, %6074
  %6076 = add i32 %6075, %6071
  %6077 = icmp eq i32 %6076, 2
  %6078 = zext i1 %6077 to i8
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6078, i8* %6079, align 1
  store %struct.Memory* %loadMem_41259a, %struct.Memory** %MEMORY
  %loadMem_41259d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6081 = getelementptr inbounds %struct.GPR, %struct.GPR* %6080, i32 0, i32 33
  %6082 = getelementptr inbounds %struct.Reg, %struct.Reg* %6081, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %6082 to i64*
  %6083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6084 = getelementptr inbounds %struct.GPR, %struct.GPR* %6083, i32 0, i32 1
  %6085 = getelementptr inbounds %struct.Reg, %struct.Reg* %6084, i32 0, i32 0
  %EAX.i641 = bitcast %union.anon* %6085 to i32*
  %6086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6087 = getelementptr inbounds %struct.GPR, %struct.GPR* %6086, i32 0, i32 5
  %6088 = getelementptr inbounds %struct.Reg, %struct.Reg* %6087, i32 0, i32 0
  %RCX.i642 = bitcast %union.anon* %6088 to i64*
  %6089 = load i32, i32* %EAX.i641
  %6090 = zext i32 %6089 to i64
  %6091 = load i64, i64* %PC.i640
  %6092 = add i64 %6091, 3
  store i64 %6092, i64* %PC.i640
  %6093 = shl i64 %6090, 32
  %6094 = ashr exact i64 %6093, 32
  store i64 %6094, i64* %RCX.i642, align 8
  store %struct.Memory* %loadMem_41259d, %struct.Memory** %MEMORY
  %loadMem_4125a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6096 = getelementptr inbounds %struct.GPR, %struct.GPR* %6095, i32 0, i32 33
  %6097 = getelementptr inbounds %struct.Reg, %struct.Reg* %6096, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %6097 to i64*
  %6098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6099 = getelementptr inbounds %struct.GPR, %struct.GPR* %6098, i32 0, i32 1
  %6100 = getelementptr inbounds %struct.Reg, %struct.Reg* %6099, i32 0, i32 0
  %RAX.i638 = bitcast %union.anon* %6100 to i64*
  %6101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6102 = getelementptr inbounds %struct.GPR, %struct.GPR* %6101, i32 0, i32 5
  %6103 = getelementptr inbounds %struct.Reg, %struct.Reg* %6102, i32 0, i32 0
  %RCX.i639 = bitcast %union.anon* %6103 to i64*
  %6104 = load i64, i64* %RCX.i639
  %6105 = mul i64 %6104, 4
  %6106 = add i64 %6105, 11185584
  %6107 = load i64, i64* %PC.i637
  %6108 = add i64 %6107, 7
  store i64 %6108, i64* %PC.i637
  %6109 = inttoptr i64 %6106 to i32*
  %6110 = load i32, i32* %6109
  %6111 = zext i32 %6110 to i64
  store i64 %6111, i64* %RAX.i638, align 8
  store %struct.Memory* %loadMem_4125a0, %struct.Memory** %MEMORY
  %loadMem_4125a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6113 = getelementptr inbounds %struct.GPR, %struct.GPR* %6112, i32 0, i32 33
  %6114 = getelementptr inbounds %struct.Reg, %struct.Reg* %6113, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %6114 to i64*
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6116 = getelementptr inbounds %struct.GPR, %struct.GPR* %6115, i32 0, i32 1
  %6117 = getelementptr inbounds %struct.Reg, %struct.Reg* %6116, i32 0, i32 0
  %EAX.i636 = bitcast %union.anon* %6117 to i32*
  %6118 = load i32, i32* %EAX.i636
  %6119 = zext i32 %6118 to i64
  %6120 = load i64, i64* %PC.i635
  %6121 = add i64 %6120, 7
  store i64 %6121, i64* %PC.i635
  %6122 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %6123 = sub i32 %6118, %6122
  %6124 = icmp ult i32 %6118, %6122
  %6125 = zext i1 %6124 to i8
  %6126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6125, i8* %6126, align 1
  %6127 = and i32 %6123, 255
  %6128 = call i32 @llvm.ctpop.i32(i32 %6127)
  %6129 = trunc i32 %6128 to i8
  %6130 = and i8 %6129, 1
  %6131 = xor i8 %6130, 1
  %6132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6131, i8* %6132, align 1
  %6133 = xor i32 %6122, %6118
  %6134 = xor i32 %6133, %6123
  %6135 = lshr i32 %6134, 4
  %6136 = trunc i32 %6135 to i8
  %6137 = and i8 %6136, 1
  %6138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6137, i8* %6138, align 1
  %6139 = icmp eq i32 %6123, 0
  %6140 = zext i1 %6139 to i8
  %6141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6140, i8* %6141, align 1
  %6142 = lshr i32 %6123, 31
  %6143 = trunc i32 %6142 to i8
  %6144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6143, i8* %6144, align 1
  %6145 = lshr i32 %6118, 31
  %6146 = lshr i32 %6122, 31
  %6147 = xor i32 %6146, %6145
  %6148 = xor i32 %6142, %6145
  %6149 = add i32 %6148, %6147
  %6150 = icmp eq i32 %6149, 2
  %6151 = zext i1 %6150 to i8
  %6152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6151, i8* %6152, align 1
  store %struct.Memory* %loadMem_4125a7, %struct.Memory** %MEMORY
  %loadMem_4125ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6154 = getelementptr inbounds %struct.GPR, %struct.GPR* %6153, i32 0, i32 33
  %6155 = getelementptr inbounds %struct.Reg, %struct.Reg* %6154, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %6155 to i64*
  %6156 = load i64, i64* %PC.i634
  %6157 = add i64 %6156, 89
  %6158 = load i64, i64* %PC.i634
  %6159 = add i64 %6158, 6
  %6160 = load i64, i64* %PC.i634
  %6161 = add i64 %6160, 6
  store i64 %6161, i64* %PC.i634
  %6162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6163 = load i8, i8* %6162, align 1
  store i8 %6163, i8* %BRANCH_TAKEN, align 1
  %6164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6165 = icmp ne i8 %6163, 0
  %6166 = select i1 %6165, i64 %6157, i64 %6159
  store i64 %6166, i64* %6164, align 8
  store %struct.Memory* %loadMem_4125ae, %struct.Memory** %MEMORY
  %loadBr_4125ae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4125ae = icmp eq i8 %loadBr_4125ae, 1
  br i1 %cmpBr_4125ae, label %block_.L_412607, label %block_4125b4

block_4125b4:                                     ; preds = %block_412597
  %loadMem_4125b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6168 = getelementptr inbounds %struct.GPR, %struct.GPR* %6167, i32 0, i32 33
  %6169 = getelementptr inbounds %struct.Reg, %struct.Reg* %6168, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %6169 to i64*
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6171 = getelementptr inbounds %struct.GPR, %struct.GPR* %6170, i32 0, i32 15
  %6172 = getelementptr inbounds %struct.Reg, %struct.Reg* %6171, i32 0, i32 0
  %RBP.i633 = bitcast %union.anon* %6172 to i64*
  %6173 = load i64, i64* %RBP.i633
  %6174 = sub i64 %6173, 24
  %6175 = load i64, i64* %PC.i632
  %6176 = add i64 %6175, 5
  store i64 %6176, i64* %PC.i632
  %6177 = inttoptr i64 %6174 to i64*
  %6178 = load i64, i64* %6177
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6179, align 1
  %6180 = trunc i64 %6178 to i32
  %6181 = and i32 %6180, 255
  %6182 = call i32 @llvm.ctpop.i32(i32 %6181)
  %6183 = trunc i32 %6182 to i8
  %6184 = and i8 %6183, 1
  %6185 = xor i8 %6184, 1
  %6186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6185, i8* %6186, align 1
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6187, align 1
  %6188 = icmp eq i64 %6178, 0
  %6189 = zext i1 %6188 to i8
  %6190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6189, i8* %6190, align 1
  %6191 = lshr i64 %6178, 63
  %6192 = trunc i64 %6191 to i8
  %6193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6192, i8* %6193, align 1
  %6194 = lshr i64 %6178, 63
  %6195 = xor i64 %6191, %6194
  %6196 = add i64 %6195, %6194
  %6197 = icmp eq i64 %6196, 2
  %6198 = zext i1 %6197 to i8
  %6199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6198, i8* %6199, align 1
  store %struct.Memory* %loadMem_4125b4, %struct.Memory** %MEMORY
  %loadMem_4125b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6201 = getelementptr inbounds %struct.GPR, %struct.GPR* %6200, i32 0, i32 33
  %6202 = getelementptr inbounds %struct.Reg, %struct.Reg* %6201, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %6202 to i64*
  %6203 = load i64, i64* %PC.i631
  %6204 = add i64 %6203, 23
  %6205 = load i64, i64* %PC.i631
  %6206 = add i64 %6205, 6
  %6207 = load i64, i64* %PC.i631
  %6208 = add i64 %6207, 6
  store i64 %6208, i64* %PC.i631
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6210 = load i8, i8* %6209, align 1
  store i8 %6210, i8* %BRANCH_TAKEN, align 1
  %6211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6212 = icmp ne i8 %6210, 0
  %6213 = select i1 %6212, i64 %6204, i64 %6206
  store i64 %6213, i64* %6211, align 8
  store %struct.Memory* %loadMem_4125b9, %struct.Memory** %MEMORY
  %loadBr_4125b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4125b9 = icmp eq i8 %loadBr_4125b9, 1
  br i1 %cmpBr_4125b9, label %block_.L_4125d0, label %block_4125bf

block_4125bf:                                     ; preds = %block_4125b4
  %loadMem_4125bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6215 = getelementptr inbounds %struct.GPR, %struct.GPR* %6214, i32 0, i32 33
  %6216 = getelementptr inbounds %struct.Reg, %struct.Reg* %6215, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %6216 to i64*
  %6217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6218 = getelementptr inbounds %struct.GPR, %struct.GPR* %6217, i32 0, i32 1
  %6219 = getelementptr inbounds %struct.Reg, %struct.Reg* %6218, i32 0, i32 0
  %RAX.i629 = bitcast %union.anon* %6219 to i64*
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6221 = getelementptr inbounds %struct.GPR, %struct.GPR* %6220, i32 0, i32 15
  %6222 = getelementptr inbounds %struct.Reg, %struct.Reg* %6221, i32 0, i32 0
  %RBP.i630 = bitcast %union.anon* %6222 to i64*
  %6223 = load i64, i64* %RBP.i630
  %6224 = sub i64 %6223, 92
  %6225 = load i64, i64* %PC.i628
  %6226 = add i64 %6225, 3
  store i64 %6226, i64* %PC.i628
  %6227 = inttoptr i64 %6224 to i32*
  %6228 = load i32, i32* %6227
  %6229 = zext i32 %6228 to i64
  store i64 %6229, i64* %RAX.i629, align 8
  store %struct.Memory* %loadMem_4125bf, %struct.Memory** %MEMORY
  %loadMem_4125c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6231 = getelementptr inbounds %struct.GPR, %struct.GPR* %6230, i32 0, i32 33
  %6232 = getelementptr inbounds %struct.Reg, %struct.Reg* %6231, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %6232 to i64*
  %6233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6234 = getelementptr inbounds %struct.GPR, %struct.GPR* %6233, i32 0, i32 1
  %6235 = getelementptr inbounds %struct.Reg, %struct.Reg* %6234, i32 0, i32 0
  %RAX.i627 = bitcast %union.anon* %6235 to i64*
  %6236 = load i64, i64* %RAX.i627
  %6237 = load i64, i64* %PC.i626
  %6238 = add i64 %6237, 3
  store i64 %6238, i64* %PC.i626
  %6239 = trunc i64 %6236 to i32
  %6240 = add i32 1, %6239
  %6241 = zext i32 %6240 to i64
  store i64 %6241, i64* %RAX.i627, align 8
  %6242 = icmp ult i32 %6240, %6239
  %6243 = icmp ult i32 %6240, 1
  %6244 = or i1 %6242, %6243
  %6245 = zext i1 %6244 to i8
  %6246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6245, i8* %6246, align 1
  %6247 = and i32 %6240, 255
  %6248 = call i32 @llvm.ctpop.i32(i32 %6247)
  %6249 = trunc i32 %6248 to i8
  %6250 = and i8 %6249, 1
  %6251 = xor i8 %6250, 1
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6251, i8* %6252, align 1
  %6253 = xor i64 1, %6236
  %6254 = trunc i64 %6253 to i32
  %6255 = xor i32 %6254, %6240
  %6256 = lshr i32 %6255, 4
  %6257 = trunc i32 %6256 to i8
  %6258 = and i8 %6257, 1
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6258, i8* %6259, align 1
  %6260 = icmp eq i32 %6240, 0
  %6261 = zext i1 %6260 to i8
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6261, i8* %6262, align 1
  %6263 = lshr i32 %6240, 31
  %6264 = trunc i32 %6263 to i8
  %6265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6264, i8* %6265, align 1
  %6266 = lshr i32 %6239, 31
  %6267 = xor i32 %6263, %6266
  %6268 = add i32 %6267, %6263
  %6269 = icmp eq i32 %6268, 2
  %6270 = zext i1 %6269 to i8
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6270, i8* %6271, align 1
  store %struct.Memory* %loadMem_4125c2, %struct.Memory** %MEMORY
  %loadMem_4125c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6273 = getelementptr inbounds %struct.GPR, %struct.GPR* %6272, i32 0, i32 33
  %6274 = getelementptr inbounds %struct.Reg, %struct.Reg* %6273, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %6274 to i64*
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6276 = getelementptr inbounds %struct.GPR, %struct.GPR* %6275, i32 0, i32 5
  %6277 = getelementptr inbounds %struct.Reg, %struct.Reg* %6276, i32 0, i32 0
  %RCX.i624 = bitcast %union.anon* %6277 to i64*
  %6278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6279 = getelementptr inbounds %struct.GPR, %struct.GPR* %6278, i32 0, i32 15
  %6280 = getelementptr inbounds %struct.Reg, %struct.Reg* %6279, i32 0, i32 0
  %RBP.i625 = bitcast %union.anon* %6280 to i64*
  %6281 = load i64, i64* %RBP.i625
  %6282 = sub i64 %6281, 24
  %6283 = load i64, i64* %PC.i623
  %6284 = add i64 %6283, 4
  store i64 %6284, i64* %PC.i623
  %6285 = inttoptr i64 %6282 to i64*
  %6286 = load i64, i64* %6285
  store i64 %6286, i64* %RCX.i624, align 8
  store %struct.Memory* %loadMem_4125c5, %struct.Memory** %MEMORY
  %loadMem_4125c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6288 = getelementptr inbounds %struct.GPR, %struct.GPR* %6287, i32 0, i32 33
  %6289 = getelementptr inbounds %struct.Reg, %struct.Reg* %6288, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %6289 to i64*
  %6290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6291 = getelementptr inbounds %struct.GPR, %struct.GPR* %6290, i32 0, i32 7
  %6292 = getelementptr inbounds %struct.Reg, %struct.Reg* %6291, i32 0, i32 0
  %RDX.i621 = bitcast %union.anon* %6292 to i64*
  %6293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6294 = getelementptr inbounds %struct.GPR, %struct.GPR* %6293, i32 0, i32 15
  %6295 = getelementptr inbounds %struct.Reg, %struct.Reg* %6294, i32 0, i32 0
  %RBP.i622 = bitcast %union.anon* %6295 to i64*
  %6296 = load i64, i64* %RBP.i622
  %6297 = sub i64 %6296, 36
  %6298 = load i64, i64* %PC.i620
  %6299 = add i64 %6298, 4
  store i64 %6299, i64* %PC.i620
  %6300 = inttoptr i64 %6297 to i32*
  %6301 = load i32, i32* %6300
  %6302 = sext i32 %6301 to i64
  store i64 %6302, i64* %RDX.i621, align 8
  store %struct.Memory* %loadMem_4125c9, %struct.Memory** %MEMORY
  %loadMem_4125cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6304 = getelementptr inbounds %struct.GPR, %struct.GPR* %6303, i32 0, i32 33
  %6305 = getelementptr inbounds %struct.Reg, %struct.Reg* %6304, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %6305 to i64*
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6307 = getelementptr inbounds %struct.GPR, %struct.GPR* %6306, i32 0, i32 1
  %6308 = getelementptr inbounds %struct.Reg, %struct.Reg* %6307, i32 0, i32 0
  %EAX.i617 = bitcast %union.anon* %6308 to i32*
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6310 = getelementptr inbounds %struct.GPR, %struct.GPR* %6309, i32 0, i32 5
  %6311 = getelementptr inbounds %struct.Reg, %struct.Reg* %6310, i32 0, i32 0
  %RCX.i618 = bitcast %union.anon* %6311 to i64*
  %6312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6313 = getelementptr inbounds %struct.GPR, %struct.GPR* %6312, i32 0, i32 7
  %6314 = getelementptr inbounds %struct.Reg, %struct.Reg* %6313, i32 0, i32 0
  %RDX.i619 = bitcast %union.anon* %6314 to i64*
  %6315 = load i64, i64* %RCX.i618
  %6316 = load i64, i64* %RDX.i619
  %6317 = mul i64 %6316, 4
  %6318 = add i64 %6317, %6315
  %6319 = load i32, i32* %EAX.i617
  %6320 = zext i32 %6319 to i64
  %6321 = load i64, i64* %PC.i616
  %6322 = add i64 %6321, 3
  store i64 %6322, i64* %PC.i616
  %6323 = inttoptr i64 %6318 to i32*
  store i32 %6319, i32* %6323
  store %struct.Memory* %loadMem_4125cd, %struct.Memory** %MEMORY
  br label %block_.L_4125d0

block_.L_4125d0:                                  ; preds = %block_4125bf, %block_4125b4
  %loadMem_4125d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6325 = getelementptr inbounds %struct.GPR, %struct.GPR* %6324, i32 0, i32 33
  %6326 = getelementptr inbounds %struct.Reg, %struct.Reg* %6325, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %6326 to i64*
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6328 = getelementptr inbounds %struct.GPR, %struct.GPR* %6327, i32 0, i32 1
  %6329 = getelementptr inbounds %struct.Reg, %struct.Reg* %6328, i32 0, i32 0
  %RAX.i614 = bitcast %union.anon* %6329 to i64*
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 15
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %RBP.i615 = bitcast %union.anon* %6332 to i64*
  %6333 = load i64, i64* %RBP.i615
  %6334 = sub i64 %6333, 36
  %6335 = load i64, i64* %PC.i613
  %6336 = add i64 %6335, 3
  store i64 %6336, i64* %PC.i613
  %6337 = inttoptr i64 %6334 to i32*
  %6338 = load i32, i32* %6337
  %6339 = zext i32 %6338 to i64
  store i64 %6339, i64* %RAX.i614, align 8
  store %struct.Memory* %loadMem_4125d0, %struct.Memory** %MEMORY
  %loadMem_4125d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6341 = getelementptr inbounds %struct.GPR, %struct.GPR* %6340, i32 0, i32 33
  %6342 = getelementptr inbounds %struct.Reg, %struct.Reg* %6341, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %6342 to i64*
  %6343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6344 = getelementptr inbounds %struct.GPR, %struct.GPR* %6343, i32 0, i32 1
  %6345 = getelementptr inbounds %struct.Reg, %struct.Reg* %6344, i32 0, i32 0
  %RAX.i612 = bitcast %union.anon* %6345 to i64*
  %6346 = load i64, i64* %RAX.i612
  %6347 = load i64, i64* %PC.i611
  %6348 = add i64 %6347, 3
  store i64 %6348, i64* %PC.i611
  %6349 = trunc i64 %6346 to i32
  %6350 = add i32 1, %6349
  %6351 = zext i32 %6350 to i64
  store i64 %6351, i64* %RAX.i612, align 8
  %6352 = icmp ult i32 %6350, %6349
  %6353 = icmp ult i32 %6350, 1
  %6354 = or i1 %6352, %6353
  %6355 = zext i1 %6354 to i8
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6355, i8* %6356, align 1
  %6357 = and i32 %6350, 255
  %6358 = call i32 @llvm.ctpop.i32(i32 %6357)
  %6359 = trunc i32 %6358 to i8
  %6360 = and i8 %6359, 1
  %6361 = xor i8 %6360, 1
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6361, i8* %6362, align 1
  %6363 = xor i64 1, %6346
  %6364 = trunc i64 %6363 to i32
  %6365 = xor i32 %6364, %6350
  %6366 = lshr i32 %6365, 4
  %6367 = trunc i32 %6366 to i8
  %6368 = and i8 %6367, 1
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6368, i8* %6369, align 1
  %6370 = icmp eq i32 %6350, 0
  %6371 = zext i1 %6370 to i8
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6371, i8* %6372, align 1
  %6373 = lshr i32 %6350, 31
  %6374 = trunc i32 %6373 to i8
  %6375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6374, i8* %6375, align 1
  %6376 = lshr i32 %6349, 31
  %6377 = xor i32 %6373, %6376
  %6378 = add i32 %6377, %6373
  %6379 = icmp eq i32 %6378, 2
  %6380 = zext i1 %6379 to i8
  %6381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6380, i8* %6381, align 1
  store %struct.Memory* %loadMem_4125d3, %struct.Memory** %MEMORY
  %loadMem_4125d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6383 = getelementptr inbounds %struct.GPR, %struct.GPR* %6382, i32 0, i32 33
  %6384 = getelementptr inbounds %struct.Reg, %struct.Reg* %6383, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %6384 to i64*
  %6385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6386 = getelementptr inbounds %struct.GPR, %struct.GPR* %6385, i32 0, i32 1
  %6387 = getelementptr inbounds %struct.Reg, %struct.Reg* %6386, i32 0, i32 0
  %EAX.i609 = bitcast %union.anon* %6387 to i32*
  %6388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6389 = getelementptr inbounds %struct.GPR, %struct.GPR* %6388, i32 0, i32 15
  %6390 = getelementptr inbounds %struct.Reg, %struct.Reg* %6389, i32 0, i32 0
  %RBP.i610 = bitcast %union.anon* %6390 to i64*
  %6391 = load i64, i64* %RBP.i610
  %6392 = sub i64 %6391, 36
  %6393 = load i32, i32* %EAX.i609
  %6394 = zext i32 %6393 to i64
  %6395 = load i64, i64* %PC.i608
  %6396 = add i64 %6395, 3
  store i64 %6396, i64* %PC.i608
  %6397 = inttoptr i64 %6392 to i32*
  store i32 %6393, i32* %6397
  store %struct.Memory* %loadMem_4125d6, %struct.Memory** %MEMORY
  %loadMem_4125d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6399 = getelementptr inbounds %struct.GPR, %struct.GPR* %6398, i32 0, i32 33
  %6400 = getelementptr inbounds %struct.Reg, %struct.Reg* %6399, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %6400 to i64*
  %6401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6402 = getelementptr inbounds %struct.GPR, %struct.GPR* %6401, i32 0, i32 1
  %6403 = getelementptr inbounds %struct.Reg, %struct.Reg* %6402, i32 0, i32 0
  %RAX.i606 = bitcast %union.anon* %6403 to i64*
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6405 = getelementptr inbounds %struct.GPR, %struct.GPR* %6404, i32 0, i32 15
  %6406 = getelementptr inbounds %struct.Reg, %struct.Reg* %6405, i32 0, i32 0
  %RBP.i607 = bitcast %union.anon* %6406 to i64*
  %6407 = load i64, i64* %RBP.i607
  %6408 = sub i64 %6407, 36
  %6409 = load i64, i64* %PC.i605
  %6410 = add i64 %6409, 3
  store i64 %6410, i64* %PC.i605
  %6411 = inttoptr i64 %6408 to i32*
  %6412 = load i32, i32* %6411
  %6413 = zext i32 %6412 to i64
  store i64 %6413, i64* %RAX.i606, align 8
  store %struct.Memory* %loadMem_4125d9, %struct.Memory** %MEMORY
  %loadMem_4125dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6415 = getelementptr inbounds %struct.GPR, %struct.GPR* %6414, i32 0, i32 33
  %6416 = getelementptr inbounds %struct.Reg, %struct.Reg* %6415, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %6416 to i64*
  %6417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6418 = getelementptr inbounds %struct.GPR, %struct.GPR* %6417, i32 0, i32 1
  %6419 = getelementptr inbounds %struct.Reg, %struct.Reg* %6418, i32 0, i32 0
  %EAX.i603 = bitcast %union.anon* %6419 to i32*
  %6420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6421 = getelementptr inbounds %struct.GPR, %struct.GPR* %6420, i32 0, i32 15
  %6422 = getelementptr inbounds %struct.Reg, %struct.Reg* %6421, i32 0, i32 0
  %RBP.i604 = bitcast %union.anon* %6422 to i64*
  %6423 = load i32, i32* %EAX.i603
  %6424 = zext i32 %6423 to i64
  %6425 = load i64, i64* %RBP.i604
  %6426 = sub i64 %6425, 16
  %6427 = load i64, i64* %PC.i602
  %6428 = add i64 %6427, 3
  store i64 %6428, i64* %PC.i602
  %6429 = inttoptr i64 %6426 to i32*
  %6430 = load i32, i32* %6429
  %6431 = sub i32 %6423, %6430
  %6432 = icmp ult i32 %6423, %6430
  %6433 = zext i1 %6432 to i8
  %6434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6433, i8* %6434, align 1
  %6435 = and i32 %6431, 255
  %6436 = call i32 @llvm.ctpop.i32(i32 %6435)
  %6437 = trunc i32 %6436 to i8
  %6438 = and i8 %6437, 1
  %6439 = xor i8 %6438, 1
  %6440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6439, i8* %6440, align 1
  %6441 = xor i32 %6430, %6423
  %6442 = xor i32 %6441, %6431
  %6443 = lshr i32 %6442, 4
  %6444 = trunc i32 %6443 to i8
  %6445 = and i8 %6444, 1
  %6446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6445, i8* %6446, align 1
  %6447 = icmp eq i32 %6431, 0
  %6448 = zext i1 %6447 to i8
  %6449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6448, i8* %6449, align 1
  %6450 = lshr i32 %6431, 31
  %6451 = trunc i32 %6450 to i8
  %6452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6451, i8* %6452, align 1
  %6453 = lshr i32 %6423, 31
  %6454 = lshr i32 %6430, 31
  %6455 = xor i32 %6454, %6453
  %6456 = xor i32 %6450, %6453
  %6457 = add i32 %6456, %6455
  %6458 = icmp eq i32 %6457, 2
  %6459 = zext i1 %6458 to i8
  %6460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6459, i8* %6460, align 1
  store %struct.Memory* %loadMem_4125dc, %struct.Memory** %MEMORY
  %loadMem_4125df = load %struct.Memory*, %struct.Memory** %MEMORY
  %6461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6462 = getelementptr inbounds %struct.GPR, %struct.GPR* %6461, i32 0, i32 33
  %6463 = getelementptr inbounds %struct.Reg, %struct.Reg* %6462, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %6463 to i64*
  %6464 = load i64, i64* %PC.i601
  %6465 = add i64 %6464, 17
  %6466 = load i64, i64* %PC.i601
  %6467 = add i64 %6466, 6
  %6468 = load i64, i64* %PC.i601
  %6469 = add i64 %6468, 6
  store i64 %6469, i64* %PC.i601
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6471 = load i8, i8* %6470, align 1
  %6472 = icmp ne i8 %6471, 0
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6474 = load i8, i8* %6473, align 1
  %6475 = icmp ne i8 %6474, 0
  %6476 = xor i1 %6472, %6475
  %6477 = zext i1 %6476 to i8
  store i8 %6477, i8* %BRANCH_TAKEN, align 1
  %6478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6479 = select i1 %6476, i64 %6465, i64 %6467
  store i64 %6479, i64* %6478, align 8
  store %struct.Memory* %loadMem_4125df, %struct.Memory** %MEMORY
  %loadBr_4125df = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4125df = icmp eq i8 %loadBr_4125df, 1
  br i1 %cmpBr_4125df, label %block_.L_4125f0, label %block_4125e5

block_4125e5:                                     ; preds = %block_.L_4125d0
  %loadMem_4125e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6481 = getelementptr inbounds %struct.GPR, %struct.GPR* %6480, i32 0, i32 33
  %6482 = getelementptr inbounds %struct.Reg, %struct.Reg* %6481, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %6482 to i64*
  %6483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6484 = getelementptr inbounds %struct.GPR, %struct.GPR* %6483, i32 0, i32 1
  %6485 = getelementptr inbounds %struct.Reg, %struct.Reg* %6484, i32 0, i32 0
  %RAX.i599 = bitcast %union.anon* %6485 to i64*
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6487 = getelementptr inbounds %struct.GPR, %struct.GPR* %6486, i32 0, i32 15
  %6488 = getelementptr inbounds %struct.Reg, %struct.Reg* %6487, i32 0, i32 0
  %RBP.i600 = bitcast %union.anon* %6488 to i64*
  %6489 = load i64, i64* %RBP.i600
  %6490 = sub i64 %6489, 36
  %6491 = load i64, i64* %PC.i598
  %6492 = add i64 %6491, 3
  store i64 %6492, i64* %PC.i598
  %6493 = inttoptr i64 %6490 to i32*
  %6494 = load i32, i32* %6493
  %6495 = zext i32 %6494 to i64
  store i64 %6495, i64* %RAX.i599, align 8
  store %struct.Memory* %loadMem_4125e5, %struct.Memory** %MEMORY
  %loadMem_4125e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6497 = getelementptr inbounds %struct.GPR, %struct.GPR* %6496, i32 0, i32 33
  %6498 = getelementptr inbounds %struct.Reg, %struct.Reg* %6497, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %6498 to i64*
  %6499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6500 = getelementptr inbounds %struct.GPR, %struct.GPR* %6499, i32 0, i32 1
  %6501 = getelementptr inbounds %struct.Reg, %struct.Reg* %6500, i32 0, i32 0
  %EAX.i596 = bitcast %union.anon* %6501 to i32*
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6503 = getelementptr inbounds %struct.GPR, %struct.GPR* %6502, i32 0, i32 15
  %6504 = getelementptr inbounds %struct.Reg, %struct.Reg* %6503, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %6504 to i64*
  %6505 = load i64, i64* %RBP.i597
  %6506 = sub i64 %6505, 4
  %6507 = load i32, i32* %EAX.i596
  %6508 = zext i32 %6507 to i64
  %6509 = load i64, i64* %PC.i595
  %6510 = add i64 %6509, 3
  store i64 %6510, i64* %PC.i595
  %6511 = inttoptr i64 %6506 to i32*
  store i32 %6507, i32* %6511
  store %struct.Memory* %loadMem_4125e8, %struct.Memory** %MEMORY
  %loadMem_4125eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6513 = getelementptr inbounds %struct.GPR, %struct.GPR* %6512, i32 0, i32 33
  %6514 = getelementptr inbounds %struct.Reg, %struct.Reg* %6513, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %6514 to i64*
  %6515 = load i64, i64* %PC.i594
  %6516 = add i64 %6515, 1193
  %6517 = load i64, i64* %PC.i594
  %6518 = add i64 %6517, 5
  store i64 %6518, i64* %PC.i594
  %6519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6516, i64* %6519, align 8
  store %struct.Memory* %loadMem_4125eb, %struct.Memory** %MEMORY
  br label %block_.L_412a94

block_.L_4125f0:                                  ; preds = %block_.L_4125d0
  %loadMem_4125f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6521 = getelementptr inbounds %struct.GPR, %struct.GPR* %6520, i32 0, i32 33
  %6522 = getelementptr inbounds %struct.Reg, %struct.Reg* %6521, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %6522 to i64*
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6524 = getelementptr inbounds %struct.GPR, %struct.GPR* %6523, i32 0, i32 1
  %6525 = getelementptr inbounds %struct.Reg, %struct.Reg* %6524, i32 0, i32 0
  %RAX.i593 = bitcast %union.anon* %6525 to i64*
  %6526 = load i64, i64* %PC.i592
  %6527 = add i64 %6526, 7
  store i64 %6527, i64* %PC.i592
  %6528 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %6529 = zext i32 %6528 to i64
  store i64 %6529, i64* %RAX.i593, align 8
  store %struct.Memory* %loadMem_4125f0, %struct.Memory** %MEMORY
  %loadMem_4125f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6531 = getelementptr inbounds %struct.GPR, %struct.GPR* %6530, i32 0, i32 33
  %6532 = getelementptr inbounds %struct.Reg, %struct.Reg* %6531, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %6532 to i64*
  %6533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6534 = getelementptr inbounds %struct.GPR, %struct.GPR* %6533, i32 0, i32 5
  %6535 = getelementptr inbounds %struct.Reg, %struct.Reg* %6534, i32 0, i32 0
  %RCX.i590 = bitcast %union.anon* %6535 to i64*
  %6536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6537 = getelementptr inbounds %struct.GPR, %struct.GPR* %6536, i32 0, i32 15
  %6538 = getelementptr inbounds %struct.Reg, %struct.Reg* %6537, i32 0, i32 0
  %RBP.i591 = bitcast %union.anon* %6538 to i64*
  %6539 = load i64, i64* %RBP.i591
  %6540 = sub i64 %6539, 92
  %6541 = load i64, i64* %PC.i589
  %6542 = add i64 %6541, 3
  store i64 %6542, i64* %PC.i589
  %6543 = inttoptr i64 %6540 to i32*
  %6544 = load i32, i32* %6543
  %6545 = zext i32 %6544 to i64
  store i64 %6545, i64* %RCX.i590, align 8
  store %struct.Memory* %loadMem_4125f7, %struct.Memory** %MEMORY
  %loadMem_4125fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6547 = getelementptr inbounds %struct.GPR, %struct.GPR* %6546, i32 0, i32 33
  %6548 = getelementptr inbounds %struct.Reg, %struct.Reg* %6547, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %6548 to i64*
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6550 = getelementptr inbounds %struct.GPR, %struct.GPR* %6549, i32 0, i32 5
  %6551 = getelementptr inbounds %struct.Reg, %struct.Reg* %6550, i32 0, i32 0
  %RCX.i588 = bitcast %union.anon* %6551 to i64*
  %6552 = load i64, i64* %RCX.i588
  %6553 = load i64, i64* %PC.i587
  %6554 = add i64 %6553, 3
  store i64 %6554, i64* %PC.i587
  %6555 = trunc i64 %6552 to i32
  %6556 = add i32 1, %6555
  %6557 = zext i32 %6556 to i64
  store i64 %6557, i64* %RCX.i588, align 8
  %6558 = icmp ult i32 %6556, %6555
  %6559 = icmp ult i32 %6556, 1
  %6560 = or i1 %6558, %6559
  %6561 = zext i1 %6560 to i8
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6561, i8* %6562, align 1
  %6563 = and i32 %6556, 255
  %6564 = call i32 @llvm.ctpop.i32(i32 %6563)
  %6565 = trunc i32 %6564 to i8
  %6566 = and i8 %6565, 1
  %6567 = xor i8 %6566, 1
  %6568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6567, i8* %6568, align 1
  %6569 = xor i64 1, %6552
  %6570 = trunc i64 %6569 to i32
  %6571 = xor i32 %6570, %6556
  %6572 = lshr i32 %6571, 4
  %6573 = trunc i32 %6572 to i8
  %6574 = and i8 %6573, 1
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6574, i8* %6575, align 1
  %6576 = icmp eq i32 %6556, 0
  %6577 = zext i1 %6576 to i8
  %6578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6577, i8* %6578, align 1
  %6579 = lshr i32 %6556, 31
  %6580 = trunc i32 %6579 to i8
  %6581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6580, i8* %6581, align 1
  %6582 = lshr i32 %6555, 31
  %6583 = xor i32 %6579, %6582
  %6584 = add i32 %6583, %6579
  %6585 = icmp eq i32 %6584, 2
  %6586 = zext i1 %6585 to i8
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6586, i8* %6587, align 1
  store %struct.Memory* %loadMem_4125fa, %struct.Memory** %MEMORY
  %loadMem_4125fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6589 = getelementptr inbounds %struct.GPR, %struct.GPR* %6588, i32 0, i32 33
  %6590 = getelementptr inbounds %struct.Reg, %struct.Reg* %6589, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %6590 to i64*
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6592 = getelementptr inbounds %struct.GPR, %struct.GPR* %6591, i32 0, i32 5
  %6593 = getelementptr inbounds %struct.Reg, %struct.Reg* %6592, i32 0, i32 0
  %ECX.i585 = bitcast %union.anon* %6593 to i32*
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6595 = getelementptr inbounds %struct.GPR, %struct.GPR* %6594, i32 0, i32 7
  %6596 = getelementptr inbounds %struct.Reg, %struct.Reg* %6595, i32 0, i32 0
  %RDX.i586 = bitcast %union.anon* %6596 to i64*
  %6597 = load i32, i32* %ECX.i585
  %6598 = zext i32 %6597 to i64
  %6599 = load i64, i64* %PC.i584
  %6600 = add i64 %6599, 3
  store i64 %6600, i64* %PC.i584
  %6601 = shl i64 %6598, 32
  %6602 = ashr exact i64 %6601, 32
  store i64 %6602, i64* %RDX.i586, align 8
  store %struct.Memory* %loadMem_4125fd, %struct.Memory** %MEMORY
  %loadMem_412600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6604 = getelementptr inbounds %struct.GPR, %struct.GPR* %6603, i32 0, i32 33
  %6605 = getelementptr inbounds %struct.Reg, %struct.Reg* %6604, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %6605 to i64*
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6607 = getelementptr inbounds %struct.GPR, %struct.GPR* %6606, i32 0, i32 1
  %6608 = getelementptr inbounds %struct.Reg, %struct.Reg* %6607, i32 0, i32 0
  %EAX.i582 = bitcast %union.anon* %6608 to i32*
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6610 = getelementptr inbounds %struct.GPR, %struct.GPR* %6609, i32 0, i32 7
  %6611 = getelementptr inbounds %struct.Reg, %struct.Reg* %6610, i32 0, i32 0
  %RDX.i583 = bitcast %union.anon* %6611 to i64*
  %6612 = load i64, i64* %RDX.i583
  %6613 = mul i64 %6612, 4
  %6614 = add i64 %6613, 11185584
  %6615 = load i32, i32* %EAX.i582
  %6616 = zext i32 %6615 to i64
  %6617 = load i64, i64* %PC.i581
  %6618 = add i64 %6617, 7
  store i64 %6618, i64* %PC.i581
  %6619 = inttoptr i64 %6614 to i32*
  store i32 %6615, i32* %6619
  store %struct.Memory* %loadMem_412600, %struct.Memory** %MEMORY
  br label %block_.L_412607

block_.L_412607:                                  ; preds = %block_.L_4125f0, %block_412597, %block_.L_41257d
  %loadMem_412607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6621 = getelementptr inbounds %struct.GPR, %struct.GPR* %6620, i32 0, i32 33
  %6622 = getelementptr inbounds %struct.Reg, %struct.Reg* %6621, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %6622 to i64*
  %6623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6624 = getelementptr inbounds %struct.GPR, %struct.GPR* %6623, i32 0, i32 1
  %6625 = getelementptr inbounds %struct.Reg, %struct.Reg* %6624, i32 0, i32 0
  %RAX.i579 = bitcast %union.anon* %6625 to i64*
  %6626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6627 = getelementptr inbounds %struct.GPR, %struct.GPR* %6626, i32 0, i32 15
  %6628 = getelementptr inbounds %struct.Reg, %struct.Reg* %6627, i32 0, i32 0
  %RBP.i580 = bitcast %union.anon* %6628 to i64*
  %6629 = load i64, i64* %RBP.i580
  %6630 = sub i64 %6629, 92
  %6631 = load i64, i64* %PC.i578
  %6632 = add i64 %6631, 4
  store i64 %6632, i64* %PC.i578
  %6633 = inttoptr i64 %6630 to i32*
  %6634 = load i32, i32* %6633
  %6635 = sext i32 %6634 to i64
  store i64 %6635, i64* %RAX.i579, align 8
  store %struct.Memory* %loadMem_412607, %struct.Memory** %MEMORY
  %loadMem_41260b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6637 = getelementptr inbounds %struct.GPR, %struct.GPR* %6636, i32 0, i32 33
  %6638 = getelementptr inbounds %struct.Reg, %struct.Reg* %6637, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %6638 to i64*
  %6639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6640 = getelementptr inbounds %struct.GPR, %struct.GPR* %6639, i32 0, i32 1
  %6641 = getelementptr inbounds %struct.Reg, %struct.Reg* %6640, i32 0, i32 0
  %RAX.i576 = bitcast %union.anon* %6641 to i64*
  %6642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6643 = getelementptr inbounds %struct.GPR, %struct.GPR* %6642, i32 0, i32 5
  %6644 = getelementptr inbounds %struct.Reg, %struct.Reg* %6643, i32 0, i32 0
  %RCX.i577 = bitcast %union.anon* %6644 to i64*
  %6645 = load i64, i64* %RAX.i576
  %6646 = mul i64 %6645, 4
  %6647 = add i64 %6646, 11188784
  %6648 = load i64, i64* %PC.i575
  %6649 = add i64 %6648, 7
  store i64 %6649, i64* %PC.i575
  %6650 = inttoptr i64 %6647 to i32*
  %6651 = load i32, i32* %6650
  %6652 = zext i32 %6651 to i64
  store i64 %6652, i64* %RCX.i577, align 8
  store %struct.Memory* %loadMem_41260b, %struct.Memory** %MEMORY
  %loadMem_412612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6654 = getelementptr inbounds %struct.GPR, %struct.GPR* %6653, i32 0, i32 33
  %6655 = getelementptr inbounds %struct.Reg, %struct.Reg* %6654, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %6655 to i64*
  %6656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6657 = getelementptr inbounds %struct.GPR, %struct.GPR* %6656, i32 0, i32 5
  %6658 = getelementptr inbounds %struct.Reg, %struct.Reg* %6657, i32 0, i32 0
  %ECX.i573 = bitcast %union.anon* %6658 to i32*
  %6659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6660 = getelementptr inbounds %struct.GPR, %struct.GPR* %6659, i32 0, i32 15
  %6661 = getelementptr inbounds %struct.Reg, %struct.Reg* %6660, i32 0, i32 0
  %RBP.i574 = bitcast %union.anon* %6661 to i64*
  %6662 = load i64, i64* %RBP.i574
  %6663 = sub i64 %6662, 92
  %6664 = load i32, i32* %ECX.i573
  %6665 = zext i32 %6664 to i64
  %6666 = load i64, i64* %PC.i572
  %6667 = add i64 %6666, 3
  store i64 %6667, i64* %PC.i572
  %6668 = inttoptr i64 %6663 to i32*
  store i32 %6664, i32* %6668
  store %struct.Memory* %loadMem_412612, %struct.Memory** %MEMORY
  %loadMem_412615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6670 = getelementptr inbounds %struct.GPR, %struct.GPR* %6669, i32 0, i32 33
  %6671 = getelementptr inbounds %struct.Reg, %struct.Reg* %6670, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %6671 to i64*
  %6672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6673 = getelementptr inbounds %struct.GPR, %struct.GPR* %6672, i32 0, i32 1
  %6674 = getelementptr inbounds %struct.Reg, %struct.Reg* %6673, i32 0, i32 0
  %RAX.i570 = bitcast %union.anon* %6674 to i64*
  %6675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6676 = getelementptr inbounds %struct.GPR, %struct.GPR* %6675, i32 0, i32 15
  %6677 = getelementptr inbounds %struct.Reg, %struct.Reg* %6676, i32 0, i32 0
  %RBP.i571 = bitcast %union.anon* %6677 to i64*
  %6678 = load i64, i64* %RBP.i571
  %6679 = sub i64 %6678, 92
  %6680 = load i64, i64* %PC.i569
  %6681 = add i64 %6680, 3
  store i64 %6681, i64* %PC.i569
  %6682 = inttoptr i64 %6679 to i32*
  %6683 = load i32, i32* %6682
  %6684 = zext i32 %6683 to i64
  store i64 %6684, i64* %RAX.i570, align 8
  store %struct.Memory* %loadMem_412615, %struct.Memory** %MEMORY
  %loadMem_412618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6686 = getelementptr inbounds %struct.GPR, %struct.GPR* %6685, i32 0, i32 33
  %6687 = getelementptr inbounds %struct.Reg, %struct.Reg* %6686, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %6687 to i64*
  %6688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6689 = getelementptr inbounds %struct.GPR, %struct.GPR* %6688, i32 0, i32 1
  %6690 = getelementptr inbounds %struct.Reg, %struct.Reg* %6689, i32 0, i32 0
  %EAX.i567 = bitcast %union.anon* %6690 to i32*
  %6691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6692 = getelementptr inbounds %struct.GPR, %struct.GPR* %6691, i32 0, i32 15
  %6693 = getelementptr inbounds %struct.Reg, %struct.Reg* %6692, i32 0, i32 0
  %RBP.i568 = bitcast %union.anon* %6693 to i64*
  %6694 = load i32, i32* %EAX.i567
  %6695 = zext i32 %6694 to i64
  %6696 = load i64, i64* %RBP.i568
  %6697 = sub i64 %6696, 76
  %6698 = load i64, i64* %PC.i566
  %6699 = add i64 %6698, 3
  store i64 %6699, i64* %PC.i566
  %6700 = inttoptr i64 %6697 to i32*
  %6701 = load i32, i32* %6700
  %6702 = sub i32 %6694, %6701
  %6703 = icmp ult i32 %6694, %6701
  %6704 = zext i1 %6703 to i8
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6704, i8* %6705, align 1
  %6706 = and i32 %6702, 255
  %6707 = call i32 @llvm.ctpop.i32(i32 %6706)
  %6708 = trunc i32 %6707 to i8
  %6709 = and i8 %6708, 1
  %6710 = xor i8 %6709, 1
  %6711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6710, i8* %6711, align 1
  %6712 = xor i32 %6701, %6694
  %6713 = xor i32 %6712, %6702
  %6714 = lshr i32 %6713, 4
  %6715 = trunc i32 %6714 to i8
  %6716 = and i8 %6715, 1
  %6717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6716, i8* %6717, align 1
  %6718 = icmp eq i32 %6702, 0
  %6719 = zext i1 %6718 to i8
  %6720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6719, i8* %6720, align 1
  %6721 = lshr i32 %6702, 31
  %6722 = trunc i32 %6721 to i8
  %6723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6722, i8* %6723, align 1
  %6724 = lshr i32 %6694, 31
  %6725 = lshr i32 %6701, 31
  %6726 = xor i32 %6725, %6724
  %6727 = xor i32 %6721, %6724
  %6728 = add i32 %6727, %6726
  %6729 = icmp eq i32 %6728, 2
  %6730 = zext i1 %6729 to i8
  %6731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6730, i8* %6731, align 1
  store %struct.Memory* %loadMem_412618, %struct.Memory** %MEMORY
  %loadMem_41261b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6733 = getelementptr inbounds %struct.GPR, %struct.GPR* %6732, i32 0, i32 33
  %6734 = getelementptr inbounds %struct.Reg, %struct.Reg* %6733, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %6734 to i64*
  %6735 = load i64, i64* %PC.i565
  %6736 = add i64 %6735, -572
  %6737 = load i64, i64* %PC.i565
  %6738 = add i64 %6737, 6
  %6739 = load i64, i64* %PC.i565
  %6740 = add i64 %6739, 6
  store i64 %6740, i64* %PC.i565
  %6741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6742 = load i8, i8* %6741, align 1
  %6743 = icmp eq i8 %6742, 0
  %6744 = zext i1 %6743 to i8
  store i8 %6744, i8* %BRANCH_TAKEN, align 1
  %6745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6746 = select i1 %6743, i64 %6736, i64 %6738
  store i64 %6746, i64* %6745, align 8
  store %struct.Memory* %loadMem_41261b, %struct.Memory** %MEMORY
  %loadBr_41261b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41261b = icmp eq i8 %loadBr_41261b, 1
  br i1 %cmpBr_41261b, label %block_.L_4123df, label %block_412621

block_412621:                                     ; preds = %block_.L_412607
  %loadMem_412621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6748 = getelementptr inbounds %struct.GPR, %struct.GPR* %6747, i32 0, i32 33
  %6749 = getelementptr inbounds %struct.Reg, %struct.Reg* %6748, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %6749 to i64*
  %6750 = load i64, i64* %PC.i564
  %6751 = add i64 %6750, 5
  %6752 = load i64, i64* %PC.i564
  %6753 = add i64 %6752, 5
  store i64 %6753, i64* %PC.i564
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6751, i64* %6754, align 8
  store %struct.Memory* %loadMem_412621, %struct.Memory** %MEMORY
  br label %block_.L_412626

block_.L_412626:                                  ; preds = %block_412621, %block_.L_4123d4
  %loadMem_412626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6756 = getelementptr inbounds %struct.GPR, %struct.GPR* %6755, i32 0, i32 33
  %6757 = getelementptr inbounds %struct.Reg, %struct.Reg* %6756, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %6757 to i64*
  %6758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6759 = getelementptr inbounds %struct.GPR, %struct.GPR* %6758, i32 0, i32 1
  %6760 = getelementptr inbounds %struct.Reg, %struct.Reg* %6759, i32 0, i32 0
  %RAX.i563 = bitcast %union.anon* %6760 to i64*
  %6761 = load i64, i64* %PC.i562
  %6762 = add i64 %6761, 10
  store i64 %6762, i64* %PC.i562
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i563, align 8
  store %struct.Memory* %loadMem_412626, %struct.Memory** %MEMORY
  %loadMem_412630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6764 = getelementptr inbounds %struct.GPR, %struct.GPR* %6763, i32 0, i32 33
  %6765 = getelementptr inbounds %struct.Reg, %struct.Reg* %6764, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %6765 to i64*
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6767 = getelementptr inbounds %struct.GPR, %struct.GPR* %6766, i32 0, i32 5
  %6768 = getelementptr inbounds %struct.Reg, %struct.Reg* %6767, i32 0, i32 0
  %RCX.i561 = bitcast %union.anon* %6768 to i64*
  %6769 = load i64, i64* %PC.i560
  %6770 = add i64 %6769, 7
  store i64 %6770, i64* %PC.i560
  %6771 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %6772 = zext i32 %6771 to i64
  store i64 %6772, i64* %RCX.i561, align 8
  store %struct.Memory* %loadMem_412630, %struct.Memory** %MEMORY
  %loadMem_412637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6774 = getelementptr inbounds %struct.GPR, %struct.GPR* %6773, i32 0, i32 33
  %6775 = getelementptr inbounds %struct.Reg, %struct.Reg* %6774, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %6775 to i64*
  %6776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6777 = getelementptr inbounds %struct.GPR, %struct.GPR* %6776, i32 0, i32 7
  %6778 = getelementptr inbounds %struct.Reg, %struct.Reg* %6777, i32 0, i32 0
  %RDX.i558 = bitcast %union.anon* %6778 to i64*
  %6779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6780 = getelementptr inbounds %struct.GPR, %struct.GPR* %6779, i32 0, i32 15
  %6781 = getelementptr inbounds %struct.Reg, %struct.Reg* %6780, i32 0, i32 0
  %RBP.i559 = bitcast %union.anon* %6781 to i64*
  %6782 = load i64, i64* %RBP.i559
  %6783 = sub i64 %6782, 76
  %6784 = load i64, i64* %PC.i557
  %6785 = add i64 %6784, 4
  store i64 %6785, i64* %PC.i557
  %6786 = inttoptr i64 %6783 to i32*
  %6787 = load i32, i32* %6786
  %6788 = sext i32 %6787 to i64
  store i64 %6788, i64* %RDX.i558, align 8
  store %struct.Memory* %loadMem_412637, %struct.Memory** %MEMORY
  %loadMem_41263b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6790 = getelementptr inbounds %struct.GPR, %struct.GPR* %6789, i32 0, i32 33
  %6791 = getelementptr inbounds %struct.Reg, %struct.Reg* %6790, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %6791 to i64*
  %6792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6793 = getelementptr inbounds %struct.GPR, %struct.GPR* %6792, i32 0, i32 7
  %6794 = getelementptr inbounds %struct.Reg, %struct.Reg* %6793, i32 0, i32 0
  %RDX.i556 = bitcast %union.anon* %6794 to i64*
  %6795 = load i64, i64* %RDX.i556
  %6796 = mul i64 %6795, 4
  %6797 = add i64 %6796, 11187184
  %6798 = load i64, i64* %PC.i555
  %6799 = add i64 %6798, 8
  store i64 %6799, i64* %PC.i555
  %6800 = inttoptr i64 %6797 to i32*
  %6801 = load i32, i32* %6800
  %6802 = sext i32 %6801 to i64
  store i64 %6802, i64* %RDX.i556, align 8
  store %struct.Memory* %loadMem_41263b, %struct.Memory** %MEMORY
  %loadMem_412643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6804 = getelementptr inbounds %struct.GPR, %struct.GPR* %6803, i32 0, i32 33
  %6805 = getelementptr inbounds %struct.Reg, %struct.Reg* %6804, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %6805 to i64*
  %6806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6807 = getelementptr inbounds %struct.GPR, %struct.GPR* %6806, i32 0, i32 7
  %6808 = getelementptr inbounds %struct.Reg, %struct.Reg* %6807, i32 0, i32 0
  %RDX.i554 = bitcast %union.anon* %6808 to i64*
  %6809 = load i64, i64* %RDX.i554
  %6810 = load i64, i64* %PC.i553
  %6811 = add i64 %6810, 7
  store i64 %6811, i64* %PC.i553
  %6812 = sext i64 %6809 to i128
  %6813 = and i128 %6812, -18446744073709551616
  %6814 = zext i64 %6809 to i128
  %6815 = or i128 %6813, %6814
  %6816 = mul i128 744, %6815
  %6817 = trunc i128 %6816 to i64
  store i64 %6817, i64* %RDX.i554, align 8
  %6818 = sext i64 %6817 to i128
  %6819 = icmp ne i128 %6818, %6816
  %6820 = zext i1 %6819 to i8
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6820, i8* %6821, align 1
  %6822 = trunc i128 %6816 to i32
  %6823 = and i32 %6822, 255
  %6824 = call i32 @llvm.ctpop.i32(i32 %6823)
  %6825 = trunc i32 %6824 to i8
  %6826 = and i8 %6825, 1
  %6827 = xor i8 %6826, 1
  %6828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6827, i8* %6828, align 1
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6829, align 1
  %6830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6830, align 1
  %6831 = lshr i64 %6817, 63
  %6832 = trunc i64 %6831 to i8
  %6833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6832, i8* %6833, align 1
  %6834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6820, i8* %6834, align 1
  store %struct.Memory* %loadMem_412643, %struct.Memory** %MEMORY
  %loadMem_41264a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6836 = getelementptr inbounds %struct.GPR, %struct.GPR* %6835, i32 0, i32 33
  %6837 = getelementptr inbounds %struct.Reg, %struct.Reg* %6836, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %6837 to i64*
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6839 = getelementptr inbounds %struct.GPR, %struct.GPR* %6838, i32 0, i32 1
  %6840 = getelementptr inbounds %struct.Reg, %struct.Reg* %6839, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %6840 to i64*
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6842 = getelementptr inbounds %struct.GPR, %struct.GPR* %6841, i32 0, i32 7
  %6843 = getelementptr inbounds %struct.Reg, %struct.Reg* %6842, i32 0, i32 0
  %RDX.i552 = bitcast %union.anon* %6843 to i64*
  %6844 = load i64, i64* %RAX.i551
  %6845 = load i64, i64* %RDX.i552
  %6846 = load i64, i64* %PC.i550
  %6847 = add i64 %6846, 3
  store i64 %6847, i64* %PC.i550
  %6848 = add i64 %6845, %6844
  store i64 %6848, i64* %RAX.i551, align 8
  %6849 = icmp ult i64 %6848, %6844
  %6850 = icmp ult i64 %6848, %6845
  %6851 = or i1 %6849, %6850
  %6852 = zext i1 %6851 to i8
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6852, i8* %6853, align 1
  %6854 = trunc i64 %6848 to i32
  %6855 = and i32 %6854, 255
  %6856 = call i32 @llvm.ctpop.i32(i32 %6855)
  %6857 = trunc i32 %6856 to i8
  %6858 = and i8 %6857, 1
  %6859 = xor i8 %6858, 1
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6859, i8* %6860, align 1
  %6861 = xor i64 %6845, %6844
  %6862 = xor i64 %6861, %6848
  %6863 = lshr i64 %6862, 4
  %6864 = trunc i64 %6863 to i8
  %6865 = and i8 %6864, 1
  %6866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6865, i8* %6866, align 1
  %6867 = icmp eq i64 %6848, 0
  %6868 = zext i1 %6867 to i8
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6868, i8* %6869, align 1
  %6870 = lshr i64 %6848, 63
  %6871 = trunc i64 %6870 to i8
  %6872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6871, i8* %6872, align 1
  %6873 = lshr i64 %6844, 63
  %6874 = lshr i64 %6845, 63
  %6875 = xor i64 %6870, %6873
  %6876 = xor i64 %6870, %6874
  %6877 = add i64 %6875, %6876
  %6878 = icmp eq i64 %6877, 2
  %6879 = zext i1 %6878 to i8
  %6880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6879, i8* %6880, align 1
  store %struct.Memory* %loadMem_41264a, %struct.Memory** %MEMORY
  %loadMem_41264d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6882 = getelementptr inbounds %struct.GPR, %struct.GPR* %6881, i32 0, i32 33
  %6883 = getelementptr inbounds %struct.Reg, %struct.Reg* %6882, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %6883 to i64*
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6885 = getelementptr inbounds %struct.GPR, %struct.GPR* %6884, i32 0, i32 5
  %6886 = getelementptr inbounds %struct.Reg, %struct.Reg* %6885, i32 0, i32 0
  %ECX.i548 = bitcast %union.anon* %6886 to i32*
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6888 = getelementptr inbounds %struct.GPR, %struct.GPR* %6887, i32 0, i32 1
  %6889 = getelementptr inbounds %struct.Reg, %struct.Reg* %6888, i32 0, i32 0
  %RAX.i549 = bitcast %union.anon* %6889 to i64*
  %6890 = load i64, i64* %RAX.i549
  %6891 = add i64 %6890, 740
  %6892 = load i32, i32* %ECX.i548
  %6893 = zext i32 %6892 to i64
  %6894 = load i64, i64* %PC.i547
  %6895 = add i64 %6894, 6
  store i64 %6895, i64* %PC.i547
  %6896 = inttoptr i64 %6891 to i32*
  store i32 %6892, i32* %6896
  store %struct.Memory* %loadMem_41264d, %struct.Memory** %MEMORY
  %loadMem_412653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6898 = getelementptr inbounds %struct.GPR, %struct.GPR* %6897, i32 0, i32 33
  %6899 = getelementptr inbounds %struct.Reg, %struct.Reg* %6898, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %6899 to i64*
  %6900 = load i64, i64* %PC.i546
  %6901 = add i64 %6900, 101
  %6902 = load i64, i64* %PC.i546
  %6903 = add i64 %6902, 5
  store i64 %6903, i64* %PC.i546
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6901, i64* %6904, align 8
  store %struct.Memory* %loadMem_412653, %struct.Memory** %MEMORY
  br label %block_.L_4126b8

block_.L_412658:                                  ; preds = %block_4122b4, %block_.L_41229f
  %loadMem_412658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6906 = getelementptr inbounds %struct.GPR, %struct.GPR* %6905, i32 0, i32 33
  %6907 = getelementptr inbounds %struct.Reg, %struct.Reg* %6906, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %6907 to i64*
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6909 = getelementptr inbounds %struct.GPR, %struct.GPR* %6908, i32 0, i32 1
  %6910 = getelementptr inbounds %struct.Reg, %struct.Reg* %6909, i32 0, i32 0
  %RAX.i545 = bitcast %union.anon* %6910 to i64*
  %6911 = load i64, i64* %PC.i544
  %6912 = add i64 %6911, 5
  store i64 %6912, i64* %PC.i544
  store i64 3, i64* %RAX.i545, align 8
  store %struct.Memory* %loadMem_412658, %struct.Memory** %MEMORY
  %loadMem_41265d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6914 = getelementptr inbounds %struct.GPR, %struct.GPR* %6913, i32 0, i32 33
  %6915 = getelementptr inbounds %struct.Reg, %struct.Reg* %6914, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %6915 to i64*
  %6916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6917 = getelementptr inbounds %struct.GPR, %struct.GPR* %6916, i32 0, i32 5
  %6918 = getelementptr inbounds %struct.Reg, %struct.Reg* %6917, i32 0, i32 0
  %RCX.i542 = bitcast %union.anon* %6918 to i64*
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6920 = getelementptr inbounds %struct.GPR, %struct.GPR* %6919, i32 0, i32 15
  %6921 = getelementptr inbounds %struct.Reg, %struct.Reg* %6920, i32 0, i32 0
  %RBP.i543 = bitcast %union.anon* %6921 to i64*
  %6922 = load i64, i64* %RBP.i543
  %6923 = sub i64 %6922, 76
  %6924 = load i64, i64* %PC.i541
  %6925 = add i64 %6924, 4
  store i64 %6925, i64* %PC.i541
  %6926 = inttoptr i64 %6923 to i32*
  %6927 = load i32, i32* %6926
  %6928 = sext i32 %6927 to i64
  store i64 %6928, i64* %RCX.i542, align 8
  store %struct.Memory* %loadMem_41265d, %struct.Memory** %MEMORY
  %loadMem_412661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6930 = getelementptr inbounds %struct.GPR, %struct.GPR* %6929, i32 0, i32 33
  %6931 = getelementptr inbounds %struct.Reg, %struct.Reg* %6930, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %6931 to i64*
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6933 = getelementptr inbounds %struct.GPR, %struct.GPR* %6932, i32 0, i32 5
  %6934 = getelementptr inbounds %struct.Reg, %struct.Reg* %6933, i32 0, i32 0
  %RCX.i539 = bitcast %union.anon* %6934 to i64*
  %6935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6936 = getelementptr inbounds %struct.GPR, %struct.GPR* %6935, i32 0, i32 7
  %6937 = getelementptr inbounds %struct.Reg, %struct.Reg* %6936, i32 0, i32 0
  %RDX.i540 = bitcast %union.anon* %6937 to i64*
  %6938 = load i64, i64* %RCX.i539
  %6939 = add i64 %6938, 12099168
  %6940 = load i64, i64* %PC.i538
  %6941 = add i64 %6940, 8
  store i64 %6941, i64* %PC.i538
  %6942 = inttoptr i64 %6939 to i8*
  %6943 = load i8, i8* %6942
  %6944 = zext i8 %6943 to i64
  store i64 %6944, i64* %RDX.i540, align 8
  store %struct.Memory* %loadMem_412661, %struct.Memory** %MEMORY
  %loadMem_412669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6946 = getelementptr inbounds %struct.GPR, %struct.GPR* %6945, i32 0, i32 33
  %6947 = getelementptr inbounds %struct.Reg, %struct.Reg* %6946, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %6947 to i64*
  %6948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6949 = getelementptr inbounds %struct.GPR, %struct.GPR* %6948, i32 0, i32 1
  %6950 = getelementptr inbounds %struct.Reg, %struct.Reg* %6949, i32 0, i32 0
  %RAX.i536 = bitcast %union.anon* %6950 to i64*
  %6951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6952 = getelementptr inbounds %struct.GPR, %struct.GPR* %6951, i32 0, i32 15
  %6953 = getelementptr inbounds %struct.Reg, %struct.Reg* %6952, i32 0, i32 0
  %RBP.i537 = bitcast %union.anon* %6953 to i64*
  %6954 = load i64, i64* %RAX.i536
  %6955 = load i64, i64* %RBP.i537
  %6956 = sub i64 %6955, 12
  %6957 = load i64, i64* %PC.i535
  %6958 = add i64 %6957, 3
  store i64 %6958, i64* %PC.i535
  %6959 = trunc i64 %6954 to i32
  %6960 = inttoptr i64 %6956 to i32*
  %6961 = load i32, i32* %6960
  %6962 = sub i32 %6959, %6961
  %6963 = zext i32 %6962 to i64
  store i64 %6963, i64* %RAX.i536, align 8
  %6964 = icmp ult i32 %6959, %6961
  %6965 = zext i1 %6964 to i8
  %6966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6965, i8* %6966, align 1
  %6967 = and i32 %6962, 255
  %6968 = call i32 @llvm.ctpop.i32(i32 %6967)
  %6969 = trunc i32 %6968 to i8
  %6970 = and i8 %6969, 1
  %6971 = xor i8 %6970, 1
  %6972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6971, i8* %6972, align 1
  %6973 = xor i32 %6961, %6959
  %6974 = xor i32 %6973, %6962
  %6975 = lshr i32 %6974, 4
  %6976 = trunc i32 %6975 to i8
  %6977 = and i8 %6976, 1
  %6978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6977, i8* %6978, align 1
  %6979 = icmp eq i32 %6962, 0
  %6980 = zext i1 %6979 to i8
  %6981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6980, i8* %6981, align 1
  %6982 = lshr i32 %6962, 31
  %6983 = trunc i32 %6982 to i8
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6983, i8* %6984, align 1
  %6985 = lshr i32 %6959, 31
  %6986 = lshr i32 %6961, 31
  %6987 = xor i32 %6986, %6985
  %6988 = xor i32 %6982, %6985
  %6989 = add i32 %6988, %6987
  %6990 = icmp eq i32 %6989, 2
  %6991 = zext i1 %6990 to i8
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6991, i8* %6992, align 1
  store %struct.Memory* %loadMem_412669, %struct.Memory** %MEMORY
  %loadMem_41266c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6994 = getelementptr inbounds %struct.GPR, %struct.GPR* %6993, i32 0, i32 33
  %6995 = getelementptr inbounds %struct.Reg, %struct.Reg* %6994, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %6995 to i64*
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 1
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %EAX.i533 = bitcast %union.anon* %6998 to i32*
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7000 = getelementptr inbounds %struct.GPR, %struct.GPR* %6999, i32 0, i32 7
  %7001 = getelementptr inbounds %struct.Reg, %struct.Reg* %7000, i32 0, i32 0
  %EDX.i534 = bitcast %union.anon* %7001 to i32*
  %7002 = load i32, i32* %EDX.i534
  %7003 = zext i32 %7002 to i64
  %7004 = load i32, i32* %EAX.i533
  %7005 = zext i32 %7004 to i64
  %7006 = load i64, i64* %PC.i532
  %7007 = add i64 %7006, 2
  store i64 %7007, i64* %PC.i532
  %7008 = sub i32 %7002, %7004
  %7009 = icmp ult i32 %7002, %7004
  %7010 = zext i1 %7009 to i8
  %7011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7010, i8* %7011, align 1
  %7012 = and i32 %7008, 255
  %7013 = call i32 @llvm.ctpop.i32(i32 %7012)
  %7014 = trunc i32 %7013 to i8
  %7015 = and i8 %7014, 1
  %7016 = xor i8 %7015, 1
  %7017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7016, i8* %7017, align 1
  %7018 = xor i64 %7005, %7003
  %7019 = trunc i64 %7018 to i32
  %7020 = xor i32 %7019, %7008
  %7021 = lshr i32 %7020, 4
  %7022 = trunc i32 %7021 to i8
  %7023 = and i8 %7022, 1
  %7024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7023, i8* %7024, align 1
  %7025 = icmp eq i32 %7008, 0
  %7026 = zext i1 %7025 to i8
  %7027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7026, i8* %7027, align 1
  %7028 = lshr i32 %7008, 31
  %7029 = trunc i32 %7028 to i8
  %7030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7029, i8* %7030, align 1
  %7031 = lshr i32 %7002, 31
  %7032 = lshr i32 %7004, 31
  %7033 = xor i32 %7032, %7031
  %7034 = xor i32 %7028, %7031
  %7035 = add i32 %7034, %7033
  %7036 = icmp eq i32 %7035, 2
  %7037 = zext i1 %7036 to i8
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7037, i8* %7038, align 1
  store %struct.Memory* %loadMem_41266c, %struct.Memory** %MEMORY
  %loadMem_41266e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7040 = getelementptr inbounds %struct.GPR, %struct.GPR* %7039, i32 0, i32 33
  %7041 = getelementptr inbounds %struct.Reg, %struct.Reg* %7040, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %7041 to i64*
  %7042 = load i64, i64* %PC.i531
  %7043 = add i64 %7042, 69
  %7044 = load i64, i64* %PC.i531
  %7045 = add i64 %7044, 6
  %7046 = load i64, i64* %PC.i531
  %7047 = add i64 %7046, 6
  store i64 %7047, i64* %PC.i531
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7049 = load i8, i8* %7048, align 1
  %7050 = icmp eq i8 %7049, 0
  %7051 = zext i1 %7050 to i8
  store i8 %7051, i8* %BRANCH_TAKEN, align 1
  %7052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7053 = select i1 %7050, i64 %7043, i64 %7045
  store i64 %7053, i64* %7052, align 8
  store %struct.Memory* %loadMem_41266e, %struct.Memory** %MEMORY
  %loadBr_41266e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41266e = icmp eq i8 %loadBr_41266e, 1
  br i1 %cmpBr_41266e, label %block_.L_4126b3, label %block_412674

block_412674:                                     ; preds = %block_.L_412658
  %loadMem_412674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7055 = getelementptr inbounds %struct.GPR, %struct.GPR* %7054, i32 0, i32 33
  %7056 = getelementptr inbounds %struct.Reg, %struct.Reg* %7055, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %7056 to i64*
  %7057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7058 = getelementptr inbounds %struct.GPR, %struct.GPR* %7057, i32 0, i32 1
  %7059 = getelementptr inbounds %struct.Reg, %struct.Reg* %7058, i32 0, i32 0
  %RAX.i530 = bitcast %union.anon* %7059 to i64*
  %7060 = load i64, i64* %PC.i529
  %7061 = add i64 %7060, 10
  store i64 %7061, i64* %PC.i529
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i530, align 8
  store %struct.Memory* %loadMem_412674, %struct.Memory** %MEMORY
  %loadMem_41267e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7063 = getelementptr inbounds %struct.GPR, %struct.GPR* %7062, i32 0, i32 33
  %7064 = getelementptr inbounds %struct.Reg, %struct.Reg* %7063, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %7064 to i64*
  %7065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7066 = getelementptr inbounds %struct.GPR, %struct.GPR* %7065, i32 0, i32 5
  %7067 = getelementptr inbounds %struct.Reg, %struct.Reg* %7066, i32 0, i32 0
  %RCX.i527 = bitcast %union.anon* %7067 to i64*
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7069 = getelementptr inbounds %struct.GPR, %struct.GPR* %7068, i32 0, i32 15
  %7070 = getelementptr inbounds %struct.Reg, %struct.Reg* %7069, i32 0, i32 0
  %RBP.i528 = bitcast %union.anon* %7070 to i64*
  %7071 = load i64, i64* %RBP.i528
  %7072 = sub i64 %7071, 76
  %7073 = load i64, i64* %PC.i526
  %7074 = add i64 %7073, 4
  store i64 %7074, i64* %PC.i526
  %7075 = inttoptr i64 %7072 to i32*
  %7076 = load i32, i32* %7075
  %7077 = sext i32 %7076 to i64
  store i64 %7077, i64* %RCX.i527, align 8
  store %struct.Memory* %loadMem_41267e, %struct.Memory** %MEMORY
  %loadMem_412682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7079 = getelementptr inbounds %struct.GPR, %struct.GPR* %7078, i32 0, i32 33
  %7080 = getelementptr inbounds %struct.Reg, %struct.Reg* %7079, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %7080 to i64*
  %7081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7082 = getelementptr inbounds %struct.GPR, %struct.GPR* %7081, i32 0, i32 5
  %7083 = getelementptr inbounds %struct.Reg, %struct.Reg* %7082, i32 0, i32 0
  %RCX.i525 = bitcast %union.anon* %7083 to i64*
  %7084 = load i64, i64* %RCX.i525
  %7085 = mul i64 %7084, 4
  %7086 = add i64 %7085, 11187184
  %7087 = load i64, i64* %PC.i524
  %7088 = add i64 %7087, 8
  store i64 %7088, i64* %PC.i524
  %7089 = inttoptr i64 %7086 to i32*
  %7090 = load i32, i32* %7089
  %7091 = sext i32 %7090 to i64
  store i64 %7091, i64* %RCX.i525, align 8
  store %struct.Memory* %loadMem_412682, %struct.Memory** %MEMORY
  %loadMem_41268a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7093 = getelementptr inbounds %struct.GPR, %struct.GPR* %7092, i32 0, i32 33
  %7094 = getelementptr inbounds %struct.Reg, %struct.Reg* %7093, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %7094 to i64*
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7096 = getelementptr inbounds %struct.GPR, %struct.GPR* %7095, i32 0, i32 5
  %7097 = getelementptr inbounds %struct.Reg, %struct.Reg* %7096, i32 0, i32 0
  %RCX.i523 = bitcast %union.anon* %7097 to i64*
  %7098 = load i64, i64* %RCX.i523
  %7099 = load i64, i64* %PC.i522
  %7100 = add i64 %7099, 7
  store i64 %7100, i64* %PC.i522
  %7101 = sext i64 %7098 to i128
  %7102 = and i128 %7101, -18446744073709551616
  %7103 = zext i64 %7098 to i128
  %7104 = or i128 %7102, %7103
  %7105 = mul i128 744, %7104
  %7106 = trunc i128 %7105 to i64
  store i64 %7106, i64* %RCX.i523, align 8
  %7107 = sext i64 %7106 to i128
  %7108 = icmp ne i128 %7107, %7105
  %7109 = zext i1 %7108 to i8
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7109, i8* %7110, align 1
  %7111 = trunc i128 %7105 to i32
  %7112 = and i32 %7111, 255
  %7113 = call i32 @llvm.ctpop.i32(i32 %7112)
  %7114 = trunc i32 %7113 to i8
  %7115 = and i8 %7114, 1
  %7116 = xor i8 %7115, 1
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7116, i8* %7117, align 1
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7118, align 1
  %7119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7119, align 1
  %7120 = lshr i64 %7106, 63
  %7121 = trunc i64 %7120 to i8
  %7122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7121, i8* %7122, align 1
  %7123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7109, i8* %7123, align 1
  store %struct.Memory* %loadMem_41268a, %struct.Memory** %MEMORY
  %loadMem_412691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7125 = getelementptr inbounds %struct.GPR, %struct.GPR* %7124, i32 0, i32 33
  %7126 = getelementptr inbounds %struct.Reg, %struct.Reg* %7125, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %7126 to i64*
  %7127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7128 = getelementptr inbounds %struct.GPR, %struct.GPR* %7127, i32 0, i32 1
  %7129 = getelementptr inbounds %struct.Reg, %struct.Reg* %7128, i32 0, i32 0
  %RAX.i520 = bitcast %union.anon* %7129 to i64*
  %7130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7131 = getelementptr inbounds %struct.GPR, %struct.GPR* %7130, i32 0, i32 5
  %7132 = getelementptr inbounds %struct.Reg, %struct.Reg* %7131, i32 0, i32 0
  %RCX.i521 = bitcast %union.anon* %7132 to i64*
  %7133 = load i64, i64* %RAX.i520
  %7134 = load i64, i64* %RCX.i521
  %7135 = load i64, i64* %PC.i519
  %7136 = add i64 %7135, 3
  store i64 %7136, i64* %PC.i519
  %7137 = add i64 %7134, %7133
  store i64 %7137, i64* %RAX.i520, align 8
  %7138 = icmp ult i64 %7137, %7133
  %7139 = icmp ult i64 %7137, %7134
  %7140 = or i1 %7138, %7139
  %7141 = zext i1 %7140 to i8
  %7142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7141, i8* %7142, align 1
  %7143 = trunc i64 %7137 to i32
  %7144 = and i32 %7143, 255
  %7145 = call i32 @llvm.ctpop.i32(i32 %7144)
  %7146 = trunc i32 %7145 to i8
  %7147 = and i8 %7146, 1
  %7148 = xor i8 %7147, 1
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7148, i8* %7149, align 1
  %7150 = xor i64 %7134, %7133
  %7151 = xor i64 %7150, %7137
  %7152 = lshr i64 %7151, 4
  %7153 = trunc i64 %7152 to i8
  %7154 = and i8 %7153, 1
  %7155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7154, i8* %7155, align 1
  %7156 = icmp eq i64 %7137, 0
  %7157 = zext i1 %7156 to i8
  %7158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7157, i8* %7158, align 1
  %7159 = lshr i64 %7137, 63
  %7160 = trunc i64 %7159 to i8
  %7161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7160, i8* %7161, align 1
  %7162 = lshr i64 %7133, 63
  %7163 = lshr i64 %7134, 63
  %7164 = xor i64 %7159, %7162
  %7165 = xor i64 %7159, %7163
  %7166 = add i64 %7164, %7165
  %7167 = icmp eq i64 %7166, 2
  %7168 = zext i1 %7167 to i8
  %7169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7168, i8* %7169, align 1
  store %struct.Memory* %loadMem_412691, %struct.Memory** %MEMORY
  %loadMem_412694 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7171 = getelementptr inbounds %struct.GPR, %struct.GPR* %7170, i32 0, i32 33
  %7172 = getelementptr inbounds %struct.Reg, %struct.Reg* %7171, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %7172 to i64*
  %7173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7174 = getelementptr inbounds %struct.GPR, %struct.GPR* %7173, i32 0, i32 1
  %7175 = getelementptr inbounds %struct.Reg, %struct.Reg* %7174, i32 0, i32 0
  %RAX.i518 = bitcast %union.anon* %7175 to i64*
  %7176 = load i64, i64* %RAX.i518
  %7177 = add i64 %7176, 12
  %7178 = load i64, i64* %PC.i517
  %7179 = add i64 %7178, 4
  store i64 %7179, i64* %PC.i517
  %7180 = inttoptr i64 %7177 to i32*
  %7181 = load i32, i32* %7180
  %7182 = sub i32 %7181, 1
  %7183 = icmp ult i32 %7181, 1
  %7184 = zext i1 %7183 to i8
  %7185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7184, i8* %7185, align 1
  %7186 = and i32 %7182, 255
  %7187 = call i32 @llvm.ctpop.i32(i32 %7186)
  %7188 = trunc i32 %7187 to i8
  %7189 = and i8 %7188, 1
  %7190 = xor i8 %7189, 1
  %7191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7190, i8* %7191, align 1
  %7192 = xor i32 %7181, 1
  %7193 = xor i32 %7192, %7182
  %7194 = lshr i32 %7193, 4
  %7195 = trunc i32 %7194 to i8
  %7196 = and i8 %7195, 1
  %7197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7196, i8* %7197, align 1
  %7198 = icmp eq i32 %7182, 0
  %7199 = zext i1 %7198 to i8
  %7200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7199, i8* %7200, align 1
  %7201 = lshr i32 %7182, 31
  %7202 = trunc i32 %7201 to i8
  %7203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7202, i8* %7203, align 1
  %7204 = lshr i32 %7181, 31
  %7205 = xor i32 %7201, %7204
  %7206 = add i32 %7205, %7204
  %7207 = icmp eq i32 %7206, 2
  %7208 = zext i1 %7207 to i8
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7208, i8* %7209, align 1
  store %struct.Memory* %loadMem_412694, %struct.Memory** %MEMORY
  %loadMem_412698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7211 = getelementptr inbounds %struct.GPR, %struct.GPR* %7210, i32 0, i32 33
  %7212 = getelementptr inbounds %struct.Reg, %struct.Reg* %7211, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %7212 to i64*
  %7213 = load i64, i64* %PC.i516
  %7214 = add i64 %7213, 27
  %7215 = load i64, i64* %PC.i516
  %7216 = add i64 %7215, 6
  %7217 = load i64, i64* %PC.i516
  %7218 = add i64 %7217, 6
  store i64 %7218, i64* %PC.i516
  %7219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7220 = load i8, i8* %7219, align 1
  %7221 = icmp eq i8 %7220, 0
  %7222 = zext i1 %7221 to i8
  store i8 %7222, i8* %BRANCH_TAKEN, align 1
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7224 = select i1 %7221, i64 %7214, i64 %7216
  store i64 %7224, i64* %7223, align 8
  store %struct.Memory* %loadMem_412698, %struct.Memory** %MEMORY
  %loadBr_412698 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412698 = icmp eq i8 %loadBr_412698, 1
  br i1 %cmpBr_412698, label %block_.L_4126b3, label %block_41269e

block_41269e:                                     ; preds = %block_412674
  %loadMem_41269e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 33
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %7227 to i64*
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7229 = getelementptr inbounds %struct.GPR, %struct.GPR* %7228, i32 0, i32 1
  %7230 = getelementptr inbounds %struct.Reg, %struct.Reg* %7229, i32 0, i32 0
  %RAX.i514 = bitcast %union.anon* %7230 to i64*
  %7231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7232 = getelementptr inbounds %struct.GPR, %struct.GPR* %7231, i32 0, i32 15
  %7233 = getelementptr inbounds %struct.Reg, %struct.Reg* %7232, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %7233 to i64*
  %7234 = load i64, i64* %RBP.i515
  %7235 = sub i64 %7234, 76
  %7236 = load i64, i64* %PC.i513
  %7237 = add i64 %7236, 3
  store i64 %7237, i64* %PC.i513
  %7238 = inttoptr i64 %7235 to i32*
  %7239 = load i32, i32* %7238
  %7240 = zext i32 %7239 to i64
  store i64 %7240, i64* %RAX.i514, align 8
  store %struct.Memory* %loadMem_41269e, %struct.Memory** %MEMORY
  %loadMem_4126a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7242 = getelementptr inbounds %struct.GPR, %struct.GPR* %7241, i32 0, i32 33
  %7243 = getelementptr inbounds %struct.Reg, %struct.Reg* %7242, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %7243 to i64*
  %7244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7245 = getelementptr inbounds %struct.GPR, %struct.GPR* %7244, i32 0, i32 5
  %7246 = getelementptr inbounds %struct.Reg, %struct.Reg* %7245, i32 0, i32 0
  %RCX.i511 = bitcast %union.anon* %7246 to i64*
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7248 = getelementptr inbounds %struct.GPR, %struct.GPR* %7247, i32 0, i32 15
  %7249 = getelementptr inbounds %struct.Reg, %struct.Reg* %7248, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %7249 to i64*
  %7250 = load i64, i64* %RBP.i512
  %7251 = sub i64 %7250, 68
  %7252 = load i64, i64* %PC.i510
  %7253 = add i64 %7252, 3
  store i64 %7253, i64* %PC.i510
  %7254 = inttoptr i64 %7251 to i32*
  %7255 = load i32, i32* %7254
  %7256 = zext i32 %7255 to i64
  store i64 %7256, i64* %RCX.i511, align 8
  store %struct.Memory* %loadMem_4126a1, %struct.Memory** %MEMORY
  %loadMem_4126a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7258 = getelementptr inbounds %struct.GPR, %struct.GPR* %7257, i32 0, i32 33
  %7259 = getelementptr inbounds %struct.Reg, %struct.Reg* %7258, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %7259 to i64*
  %7260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7261 = getelementptr inbounds %struct.GPR, %struct.GPR* %7260, i32 0, i32 5
  %7262 = getelementptr inbounds %struct.Reg, %struct.Reg* %7261, i32 0, i32 0
  %ECX.i508 = bitcast %union.anon* %7262 to i32*
  %7263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7264 = getelementptr inbounds %struct.GPR, %struct.GPR* %7263, i32 0, i32 7
  %7265 = getelementptr inbounds %struct.Reg, %struct.Reg* %7264, i32 0, i32 0
  %RDX.i509 = bitcast %union.anon* %7265 to i64*
  %7266 = load i32, i32* %ECX.i508
  %7267 = zext i32 %7266 to i64
  %7268 = load i64, i64* %PC.i507
  %7269 = add i64 %7268, 2
  store i64 %7269, i64* %PC.i507
  %7270 = and i64 %7267, 4294967295
  store i64 %7270, i64* %RDX.i509, align 8
  store %struct.Memory* %loadMem_4126a4, %struct.Memory** %MEMORY
  %loadMem_4126a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 33
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %7273 to i64*
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7275 = getelementptr inbounds %struct.GPR, %struct.GPR* %7274, i32 0, i32 7
  %7276 = getelementptr inbounds %struct.Reg, %struct.Reg* %7275, i32 0, i32 0
  %RDX.i506 = bitcast %union.anon* %7276 to i64*
  %7277 = load i64, i64* %RDX.i506
  %7278 = load i64, i64* %PC.i505
  %7279 = add i64 %7278, 3
  store i64 %7279, i64* %PC.i505
  %7280 = trunc i64 %7277 to i32
  %7281 = add i32 1, %7280
  %7282 = zext i32 %7281 to i64
  store i64 %7282, i64* %RDX.i506, align 8
  %7283 = icmp ult i32 %7281, %7280
  %7284 = icmp ult i32 %7281, 1
  %7285 = or i1 %7283, %7284
  %7286 = zext i1 %7285 to i8
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7286, i8* %7287, align 1
  %7288 = and i32 %7281, 255
  %7289 = call i32 @llvm.ctpop.i32(i32 %7288)
  %7290 = trunc i32 %7289 to i8
  %7291 = and i8 %7290, 1
  %7292 = xor i8 %7291, 1
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7292, i8* %7293, align 1
  %7294 = xor i64 1, %7277
  %7295 = trunc i64 %7294 to i32
  %7296 = xor i32 %7295, %7281
  %7297 = lshr i32 %7296, 4
  %7298 = trunc i32 %7297 to i8
  %7299 = and i8 %7298, 1
  %7300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7299, i8* %7300, align 1
  %7301 = icmp eq i32 %7281, 0
  %7302 = zext i1 %7301 to i8
  %7303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7302, i8* %7303, align 1
  %7304 = lshr i32 %7281, 31
  %7305 = trunc i32 %7304 to i8
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7305, i8* %7306, align 1
  %7307 = lshr i32 %7280, 31
  %7308 = xor i32 %7304, %7307
  %7309 = add i32 %7308, %7304
  %7310 = icmp eq i32 %7309, 2
  %7311 = zext i1 %7310 to i8
  %7312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7311, i8* %7312, align 1
  store %struct.Memory* %loadMem_4126a6, %struct.Memory** %MEMORY
  %loadMem_4126a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7314 = getelementptr inbounds %struct.GPR, %struct.GPR* %7313, i32 0, i32 33
  %7315 = getelementptr inbounds %struct.Reg, %struct.Reg* %7314, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %7315 to i64*
  %7316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7317 = getelementptr inbounds %struct.GPR, %struct.GPR* %7316, i32 0, i32 7
  %7318 = getelementptr inbounds %struct.Reg, %struct.Reg* %7317, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %7318 to i32*
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7320 = getelementptr inbounds %struct.GPR, %struct.GPR* %7319, i32 0, i32 15
  %7321 = getelementptr inbounds %struct.Reg, %struct.Reg* %7320, i32 0, i32 0
  %RBP.i504 = bitcast %union.anon* %7321 to i64*
  %7322 = load i64, i64* %RBP.i504
  %7323 = sub i64 %7322, 68
  %7324 = load i32, i32* %EDX.i
  %7325 = zext i32 %7324 to i64
  %7326 = load i64, i64* %PC.i503
  %7327 = add i64 %7326, 3
  store i64 %7327, i64* %PC.i503
  %7328 = inttoptr i64 %7323 to i32*
  store i32 %7324, i32* %7328
  store %struct.Memory* %loadMem_4126a9, %struct.Memory** %MEMORY
  %loadMem_4126ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7330 = getelementptr inbounds %struct.GPR, %struct.GPR* %7329, i32 0, i32 33
  %7331 = getelementptr inbounds %struct.Reg, %struct.Reg* %7330, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %7331 to i64*
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7333 = getelementptr inbounds %struct.GPR, %struct.GPR* %7332, i32 0, i32 5
  %7334 = getelementptr inbounds %struct.Reg, %struct.Reg* %7333, i32 0, i32 0
  %ECX.i501 = bitcast %union.anon* %7334 to i32*
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 9
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %RSI.i502 = bitcast %union.anon* %7337 to i64*
  %7338 = load i32, i32* %ECX.i501
  %7339 = zext i32 %7338 to i64
  %7340 = load i64, i64* %PC.i500
  %7341 = add i64 %7340, 3
  store i64 %7341, i64* %PC.i500
  %7342 = shl i64 %7339, 32
  %7343 = ashr exact i64 %7342, 32
  store i64 %7343, i64* %RSI.i502, align 8
  store %struct.Memory* %loadMem_4126ac, %struct.Memory** %MEMORY
  %loadMem_4126af = load %struct.Memory*, %struct.Memory** %MEMORY
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7345 = getelementptr inbounds %struct.GPR, %struct.GPR* %7344, i32 0, i32 33
  %7346 = getelementptr inbounds %struct.Reg, %struct.Reg* %7345, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %7346 to i64*
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 1
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %EAX.i498 = bitcast %union.anon* %7349 to i32*
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7351 = getelementptr inbounds %struct.GPR, %struct.GPR* %7350, i32 0, i32 9
  %7352 = getelementptr inbounds %struct.Reg, %struct.Reg* %7351, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %7352 to i64*
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7354 = getelementptr inbounds %struct.GPR, %struct.GPR* %7353, i32 0, i32 15
  %7355 = getelementptr inbounds %struct.Reg, %struct.Reg* %7354, i32 0, i32 0
  %RBP.i499 = bitcast %union.anon* %7355 to i64*
  %7356 = load i64, i64* %RBP.i499
  %7357 = load i64, i64* %RSI.i
  %7358 = mul i64 %7357, 4
  %7359 = add i64 %7356, -64
  %7360 = add i64 %7359, %7358
  %7361 = load i32, i32* %EAX.i498
  %7362 = zext i32 %7361 to i64
  %7363 = load i64, i64* %PC.i497
  %7364 = add i64 %7363, 4
  store i64 %7364, i64* %PC.i497
  %7365 = inttoptr i64 %7360 to i32*
  store i32 %7361, i32* %7365
  store %struct.Memory* %loadMem_4126af, %struct.Memory** %MEMORY
  br label %block_.L_4126b3

block_.L_4126b3:                                  ; preds = %block_41269e, %block_412674, %block_.L_412658
  %loadMem_4126b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7367 = getelementptr inbounds %struct.GPR, %struct.GPR* %7366, i32 0, i32 33
  %7368 = getelementptr inbounds %struct.Reg, %struct.Reg* %7367, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %7368 to i64*
  %7369 = load i64, i64* %PC.i496
  %7370 = add i64 %7369, 5
  %7371 = load i64, i64* %PC.i496
  %7372 = add i64 %7371, 5
  store i64 %7372, i64* %PC.i496
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7370, i64* %7373, align 8
  store %struct.Memory* %loadMem_4126b3, %struct.Memory** %MEMORY
  br label %block_.L_4126b8

block_.L_4126b8:                                  ; preds = %block_.L_4126b3, %block_.L_412626
  %loadMem_4126b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7375 = getelementptr inbounds %struct.GPR, %struct.GPR* %7374, i32 0, i32 33
  %7376 = getelementptr inbounds %struct.Reg, %struct.Reg* %7375, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %7376 to i64*
  %7377 = load i64, i64* %PC.i495
  %7378 = add i64 %7377, 5
  %7379 = load i64, i64* %PC.i495
  %7380 = add i64 %7379, 5
  store i64 %7380, i64* %PC.i495
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7378, i64* %7381, align 8
  store %struct.Memory* %loadMem_4126b8, %struct.Memory** %MEMORY
  br label %block_.L_4126bd

block_.L_4126bd:                                  ; preds = %block_.L_4126b8, %block_.L_412288
  %loadMem_4126bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7383 = getelementptr inbounds %struct.GPR, %struct.GPR* %7382, i32 0, i32 33
  %7384 = getelementptr inbounds %struct.Reg, %struct.Reg* %7383, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %7384 to i64*
  %7385 = load i64, i64* %PC.i494
  %7386 = add i64 %7385, 5
  %7387 = load i64, i64* %PC.i494
  %7388 = add i64 %7387, 5
  store i64 %7388, i64* %PC.i494
  %7389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7386, i64* %7389, align 8
  store %struct.Memory* %loadMem_4126bd, %struct.Memory** %MEMORY
  br label %block_.L_4126c2

block_.L_4126c2:                                  ; preds = %block_.L_4126bd
  %loadMem_4126c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7391 = getelementptr inbounds %struct.GPR, %struct.GPR* %7390, i32 0, i32 33
  %7392 = getelementptr inbounds %struct.Reg, %struct.Reg* %7391, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %7392 to i64*
  %7393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7394 = getelementptr inbounds %struct.GPR, %struct.GPR* %7393, i32 0, i32 1
  %7395 = getelementptr inbounds %struct.Reg, %struct.Reg* %7394, i32 0, i32 0
  %RAX.i492 = bitcast %union.anon* %7395 to i64*
  %7396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7397 = getelementptr inbounds %struct.GPR, %struct.GPR* %7396, i32 0, i32 15
  %7398 = getelementptr inbounds %struct.Reg, %struct.Reg* %7397, i32 0, i32 0
  %RBP.i493 = bitcast %union.anon* %7398 to i64*
  %7399 = load i64, i64* %RBP.i493
  %7400 = sub i64 %7399, 28
  %7401 = load i64, i64* %PC.i491
  %7402 = add i64 %7401, 3
  store i64 %7402, i64* %PC.i491
  %7403 = inttoptr i64 %7400 to i32*
  %7404 = load i32, i32* %7403
  %7405 = zext i32 %7404 to i64
  store i64 %7405, i64* %RAX.i492, align 8
  store %struct.Memory* %loadMem_4126c2, %struct.Memory** %MEMORY
  %loadMem_4126c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7407 = getelementptr inbounds %struct.GPR, %struct.GPR* %7406, i32 0, i32 33
  %7408 = getelementptr inbounds %struct.Reg, %struct.Reg* %7407, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %7408 to i64*
  %7409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7410 = getelementptr inbounds %struct.GPR, %struct.GPR* %7409, i32 0, i32 1
  %7411 = getelementptr inbounds %struct.Reg, %struct.Reg* %7410, i32 0, i32 0
  %RAX.i490 = bitcast %union.anon* %7411 to i64*
  %7412 = load i64, i64* %RAX.i490
  %7413 = load i64, i64* %PC.i489
  %7414 = add i64 %7413, 3
  store i64 %7414, i64* %PC.i489
  %7415 = trunc i64 %7412 to i32
  %7416 = add i32 1, %7415
  %7417 = zext i32 %7416 to i64
  store i64 %7417, i64* %RAX.i490, align 8
  %7418 = icmp ult i32 %7416, %7415
  %7419 = icmp ult i32 %7416, 1
  %7420 = or i1 %7418, %7419
  %7421 = zext i1 %7420 to i8
  %7422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7421, i8* %7422, align 1
  %7423 = and i32 %7416, 255
  %7424 = call i32 @llvm.ctpop.i32(i32 %7423)
  %7425 = trunc i32 %7424 to i8
  %7426 = and i8 %7425, 1
  %7427 = xor i8 %7426, 1
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7427, i8* %7428, align 1
  %7429 = xor i64 1, %7412
  %7430 = trunc i64 %7429 to i32
  %7431 = xor i32 %7430, %7416
  %7432 = lshr i32 %7431, 4
  %7433 = trunc i32 %7432 to i8
  %7434 = and i8 %7433, 1
  %7435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7434, i8* %7435, align 1
  %7436 = icmp eq i32 %7416, 0
  %7437 = zext i1 %7436 to i8
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7437, i8* %7438, align 1
  %7439 = lshr i32 %7416, 31
  %7440 = trunc i32 %7439 to i8
  %7441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7440, i8* %7441, align 1
  %7442 = lshr i32 %7415, 31
  %7443 = xor i32 %7439, %7442
  %7444 = add i32 %7443, %7439
  %7445 = icmp eq i32 %7444, 2
  %7446 = zext i1 %7445 to i8
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7446, i8* %7447, align 1
  store %struct.Memory* %loadMem_4126c5, %struct.Memory** %MEMORY
  %loadMem_4126c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7449 = getelementptr inbounds %struct.GPR, %struct.GPR* %7448, i32 0, i32 33
  %7450 = getelementptr inbounds %struct.Reg, %struct.Reg* %7449, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %7450 to i64*
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7452 = getelementptr inbounds %struct.GPR, %struct.GPR* %7451, i32 0, i32 1
  %7453 = getelementptr inbounds %struct.Reg, %struct.Reg* %7452, i32 0, i32 0
  %EAX.i487 = bitcast %union.anon* %7453 to i32*
  %7454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7455 = getelementptr inbounds %struct.GPR, %struct.GPR* %7454, i32 0, i32 15
  %7456 = getelementptr inbounds %struct.Reg, %struct.Reg* %7455, i32 0, i32 0
  %RBP.i488 = bitcast %union.anon* %7456 to i64*
  %7457 = load i64, i64* %RBP.i488
  %7458 = sub i64 %7457, 28
  %7459 = load i32, i32* %EAX.i487
  %7460 = zext i32 %7459 to i64
  %7461 = load i64, i64* %PC.i486
  %7462 = add i64 %7461, 3
  store i64 %7462, i64* %PC.i486
  %7463 = inttoptr i64 %7458 to i32*
  store i32 %7459, i32* %7463
  store %struct.Memory* %loadMem_4126c8, %struct.Memory** %MEMORY
  %loadMem_4126cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7465 = getelementptr inbounds %struct.GPR, %struct.GPR* %7464, i32 0, i32 33
  %7466 = getelementptr inbounds %struct.Reg, %struct.Reg* %7465, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %7466 to i64*
  %7467 = load i64, i64* %PC.i485
  %7468 = add i64 %7467, -1220
  %7469 = load i64, i64* %PC.i485
  %7470 = add i64 %7469, 5
  store i64 %7470, i64* %PC.i485
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7468, i64* %7471, align 8
  store %struct.Memory* %loadMem_4126cb, %struct.Memory** %MEMORY
  br label %block_.L_412207

block_.L_4126d0:                                  ; preds = %block_.L_412207
  %loadMem_4126d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7473 = getelementptr inbounds %struct.GPR, %struct.GPR* %7472, i32 0, i32 33
  %7474 = getelementptr inbounds %struct.Reg, %struct.Reg* %7473, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %7474 to i64*
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7476 = getelementptr inbounds %struct.GPR, %struct.GPR* %7475, i32 0, i32 15
  %7477 = getelementptr inbounds %struct.Reg, %struct.Reg* %7476, i32 0, i32 0
  %RBP.i484 = bitcast %union.anon* %7477 to i64*
  %7478 = load i64, i64* %RBP.i484
  %7479 = sub i64 %7478, 28
  %7480 = load i64, i64* %PC.i483
  %7481 = add i64 %7480, 7
  store i64 %7481, i64* %PC.i483
  %7482 = inttoptr i64 %7479 to i32*
  store i32 0, i32* %7482
  store %struct.Memory* %loadMem_4126d0, %struct.Memory** %MEMORY
  br label %block_.L_4126d7

block_.L_4126d7:                                  ; preds = %block_.L_412a80, %block_.L_4126d0
  %loadMem_4126d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7484 = getelementptr inbounds %struct.GPR, %struct.GPR* %7483, i32 0, i32 33
  %7485 = getelementptr inbounds %struct.Reg, %struct.Reg* %7484, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %7485 to i64*
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7487 = getelementptr inbounds %struct.GPR, %struct.GPR* %7486, i32 0, i32 1
  %7488 = getelementptr inbounds %struct.Reg, %struct.Reg* %7487, i32 0, i32 0
  %RAX.i481 = bitcast %union.anon* %7488 to i64*
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7490 = getelementptr inbounds %struct.GPR, %struct.GPR* %7489, i32 0, i32 15
  %7491 = getelementptr inbounds %struct.Reg, %struct.Reg* %7490, i32 0, i32 0
  %RBP.i482 = bitcast %union.anon* %7491 to i64*
  %7492 = load i64, i64* %RBP.i482
  %7493 = sub i64 %7492, 28
  %7494 = load i64, i64* %PC.i480
  %7495 = add i64 %7494, 3
  store i64 %7495, i64* %PC.i480
  %7496 = inttoptr i64 %7493 to i32*
  %7497 = load i32, i32* %7496
  %7498 = zext i32 %7497 to i64
  store i64 %7498, i64* %RAX.i481, align 8
  store %struct.Memory* %loadMem_4126d7, %struct.Memory** %MEMORY
  %loadMem_4126da = load %struct.Memory*, %struct.Memory** %MEMORY
  %7499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7500 = getelementptr inbounds %struct.GPR, %struct.GPR* %7499, i32 0, i32 33
  %7501 = getelementptr inbounds %struct.Reg, %struct.Reg* %7500, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %7501 to i64*
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7503 = getelementptr inbounds %struct.GPR, %struct.GPR* %7502, i32 0, i32 1
  %7504 = getelementptr inbounds %struct.Reg, %struct.Reg* %7503, i32 0, i32 0
  %EAX.i478 = bitcast %union.anon* %7504 to i32*
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7506 = getelementptr inbounds %struct.GPR, %struct.GPR* %7505, i32 0, i32 15
  %7507 = getelementptr inbounds %struct.Reg, %struct.Reg* %7506, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %7507 to i64*
  %7508 = load i32, i32* %EAX.i478
  %7509 = zext i32 %7508 to i64
  %7510 = load i64, i64* %RBP.i479
  %7511 = sub i64 %7510, 68
  %7512 = load i64, i64* %PC.i477
  %7513 = add i64 %7512, 3
  store i64 %7513, i64* %PC.i477
  %7514 = inttoptr i64 %7511 to i32*
  %7515 = load i32, i32* %7514
  %7516 = sub i32 %7508, %7515
  %7517 = icmp ult i32 %7508, %7515
  %7518 = zext i1 %7517 to i8
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7518, i8* %7519, align 1
  %7520 = and i32 %7516, 255
  %7521 = call i32 @llvm.ctpop.i32(i32 %7520)
  %7522 = trunc i32 %7521 to i8
  %7523 = and i8 %7522, 1
  %7524 = xor i8 %7523, 1
  %7525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7524, i8* %7525, align 1
  %7526 = xor i32 %7515, %7508
  %7527 = xor i32 %7526, %7516
  %7528 = lshr i32 %7527, 4
  %7529 = trunc i32 %7528 to i8
  %7530 = and i8 %7529, 1
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7530, i8* %7531, align 1
  %7532 = icmp eq i32 %7516, 0
  %7533 = zext i1 %7532 to i8
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7533, i8* %7534, align 1
  %7535 = lshr i32 %7516, 31
  %7536 = trunc i32 %7535 to i8
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7536, i8* %7537, align 1
  %7538 = lshr i32 %7508, 31
  %7539 = lshr i32 %7515, 31
  %7540 = xor i32 %7539, %7538
  %7541 = xor i32 %7535, %7538
  %7542 = add i32 %7541, %7540
  %7543 = icmp eq i32 %7542, 2
  %7544 = zext i1 %7543 to i8
  %7545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7544, i8* %7545, align 1
  store %struct.Memory* %loadMem_4126da, %struct.Memory** %MEMORY
  %loadMem_4126dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7547 = getelementptr inbounds %struct.GPR, %struct.GPR* %7546, i32 0, i32 33
  %7548 = getelementptr inbounds %struct.Reg, %struct.Reg* %7547, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %7548 to i64*
  %7549 = load i64, i64* %PC.i476
  %7550 = add i64 %7549, 945
  %7551 = load i64, i64* %PC.i476
  %7552 = add i64 %7551, 6
  %7553 = load i64, i64* %PC.i476
  %7554 = add i64 %7553, 6
  store i64 %7554, i64* %PC.i476
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7556 = load i8, i8* %7555, align 1
  %7557 = icmp ne i8 %7556, 0
  %7558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7559 = load i8, i8* %7558, align 1
  %7560 = icmp ne i8 %7559, 0
  %7561 = xor i1 %7557, %7560
  %7562 = xor i1 %7561, true
  %7563 = zext i1 %7562 to i8
  store i8 %7563, i8* %BRANCH_TAKEN, align 1
  %7564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7565 = select i1 %7561, i64 %7552, i64 %7550
  store i64 %7565, i64* %7564, align 8
  store %struct.Memory* %loadMem_4126dd, %struct.Memory** %MEMORY
  %loadBr_4126dd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4126dd = icmp eq i8 %loadBr_4126dd, 1
  br i1 %cmpBr_4126dd, label %block_.L_412a8e, label %block_4126e3

block_4126e3:                                     ; preds = %block_.L_4126d7
  %loadMem_4126e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7567 = getelementptr inbounds %struct.GPR, %struct.GPR* %7566, i32 0, i32 33
  %7568 = getelementptr inbounds %struct.Reg, %struct.Reg* %7567, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %7568 to i64*
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7570 = getelementptr inbounds %struct.GPR, %struct.GPR* %7569, i32 0, i32 1
  %7571 = getelementptr inbounds %struct.Reg, %struct.Reg* %7570, i32 0, i32 0
  %RAX.i474 = bitcast %union.anon* %7571 to i64*
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7573 = getelementptr inbounds %struct.GPR, %struct.GPR* %7572, i32 0, i32 15
  %7574 = getelementptr inbounds %struct.Reg, %struct.Reg* %7573, i32 0, i32 0
  %RBP.i475 = bitcast %union.anon* %7574 to i64*
  %7575 = load i64, i64* %RBP.i475
  %7576 = sub i64 %7575, 28
  %7577 = load i64, i64* %PC.i473
  %7578 = add i64 %7577, 4
  store i64 %7578, i64* %PC.i473
  %7579 = inttoptr i64 %7576 to i32*
  %7580 = load i32, i32* %7579
  %7581 = sext i32 %7580 to i64
  store i64 %7581, i64* %RAX.i474, align 8
  store %struct.Memory* %loadMem_4126e3, %struct.Memory** %MEMORY
  %loadMem_4126e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7583 = getelementptr inbounds %struct.GPR, %struct.GPR* %7582, i32 0, i32 33
  %7584 = getelementptr inbounds %struct.Reg, %struct.Reg* %7583, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %7584 to i64*
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7586 = getelementptr inbounds %struct.GPR, %struct.GPR* %7585, i32 0, i32 1
  %7587 = getelementptr inbounds %struct.Reg, %struct.Reg* %7586, i32 0, i32 0
  %RAX.i470 = bitcast %union.anon* %7587 to i64*
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7589 = getelementptr inbounds %struct.GPR, %struct.GPR* %7588, i32 0, i32 5
  %7590 = getelementptr inbounds %struct.Reg, %struct.Reg* %7589, i32 0, i32 0
  %RCX.i471 = bitcast %union.anon* %7590 to i64*
  %7591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7592 = getelementptr inbounds %struct.GPR, %struct.GPR* %7591, i32 0, i32 15
  %7593 = getelementptr inbounds %struct.Reg, %struct.Reg* %7592, i32 0, i32 0
  %RBP.i472 = bitcast %union.anon* %7593 to i64*
  %7594 = load i64, i64* %RBP.i472
  %7595 = load i64, i64* %RAX.i470
  %7596 = mul i64 %7595, 4
  %7597 = add i64 %7594, -64
  %7598 = add i64 %7597, %7596
  %7599 = load i64, i64* %PC.i469
  %7600 = add i64 %7599, 4
  store i64 %7600, i64* %PC.i469
  %7601 = inttoptr i64 %7598 to i32*
  %7602 = load i32, i32* %7601
  %7603 = zext i32 %7602 to i64
  store i64 %7603, i64* %RCX.i471, align 8
  store %struct.Memory* %loadMem_4126e7, %struct.Memory** %MEMORY
  %loadMem_4126eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7605 = getelementptr inbounds %struct.GPR, %struct.GPR* %7604, i32 0, i32 33
  %7606 = getelementptr inbounds %struct.Reg, %struct.Reg* %7605, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %7606 to i64*
  %7607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7608 = getelementptr inbounds %struct.GPR, %struct.GPR* %7607, i32 0, i32 5
  %7609 = getelementptr inbounds %struct.Reg, %struct.Reg* %7608, i32 0, i32 0
  %ECX.i467 = bitcast %union.anon* %7609 to i32*
  %7610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7611 = getelementptr inbounds %struct.GPR, %struct.GPR* %7610, i32 0, i32 15
  %7612 = getelementptr inbounds %struct.Reg, %struct.Reg* %7611, i32 0, i32 0
  %RBP.i468 = bitcast %union.anon* %7612 to i64*
  %7613 = load i64, i64* %RBP.i468
  %7614 = sub i64 %7613, 40
  %7615 = load i32, i32* %ECX.i467
  %7616 = zext i32 %7615 to i64
  %7617 = load i64, i64* %PC.i466
  %7618 = add i64 %7617, 3
  store i64 %7618, i64* %PC.i466
  %7619 = inttoptr i64 %7614 to i32*
  store i32 %7615, i32* %7619
  store %struct.Memory* %loadMem_4126eb, %struct.Memory** %MEMORY
  %loadMem_4126ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %7620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7621 = getelementptr inbounds %struct.GPR, %struct.GPR* %7620, i32 0, i32 33
  %7622 = getelementptr inbounds %struct.Reg, %struct.Reg* %7621, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %7622 to i64*
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7624 = getelementptr inbounds %struct.GPR, %struct.GPR* %7623, i32 0, i32 5
  %7625 = getelementptr inbounds %struct.Reg, %struct.Reg* %7624, i32 0, i32 0
  %RCX.i464 = bitcast %union.anon* %7625 to i64*
  %7626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7627 = getelementptr inbounds %struct.GPR, %struct.GPR* %7626, i32 0, i32 15
  %7628 = getelementptr inbounds %struct.Reg, %struct.Reg* %7627, i32 0, i32 0
  %RBP.i465 = bitcast %union.anon* %7628 to i64*
  %7629 = load i64, i64* %RBP.i465
  %7630 = sub i64 %7629, 40
  %7631 = load i64, i64* %PC.i463
  %7632 = add i64 %7631, 3
  store i64 %7632, i64* %PC.i463
  %7633 = inttoptr i64 %7630 to i32*
  %7634 = load i32, i32* %7633
  %7635 = zext i32 %7634 to i64
  store i64 %7635, i64* %RCX.i464, align 8
  store %struct.Memory* %loadMem_4126ee, %struct.Memory** %MEMORY
  %loadMem_4126f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7637 = getelementptr inbounds %struct.GPR, %struct.GPR* %7636, i32 0, i32 33
  %7638 = getelementptr inbounds %struct.Reg, %struct.Reg* %7637, i32 0, i32 0
  %PC.i461 = bitcast %union.anon* %7638 to i64*
  %7639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7640 = getelementptr inbounds %struct.GPR, %struct.GPR* %7639, i32 0, i32 5
  %7641 = getelementptr inbounds %struct.Reg, %struct.Reg* %7640, i32 0, i32 0
  %RCX.i462 = bitcast %union.anon* %7641 to i64*
  %7642 = load i64, i64* %RCX.i462
  %7643 = load i64, i64* %PC.i461
  %7644 = add i64 %7643, 3
  store i64 %7644, i64* %PC.i461
  %7645 = trunc i64 %7642 to i32
  %7646 = add i32 20, %7645
  %7647 = zext i32 %7646 to i64
  store i64 %7647, i64* %RCX.i462, align 8
  %7648 = icmp ult i32 %7646, %7645
  %7649 = icmp ult i32 %7646, 20
  %7650 = or i1 %7648, %7649
  %7651 = zext i1 %7650 to i8
  %7652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7651, i8* %7652, align 1
  %7653 = and i32 %7646, 255
  %7654 = call i32 @llvm.ctpop.i32(i32 %7653)
  %7655 = trunc i32 %7654 to i8
  %7656 = and i8 %7655, 1
  %7657 = xor i8 %7656, 1
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7657, i8* %7658, align 1
  %7659 = xor i64 20, %7642
  %7660 = trunc i64 %7659 to i32
  %7661 = xor i32 %7660, %7646
  %7662 = lshr i32 %7661, 4
  %7663 = trunc i32 %7662 to i8
  %7664 = and i8 %7663, 1
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7664, i8* %7665, align 1
  %7666 = icmp eq i32 %7646, 0
  %7667 = zext i1 %7666 to i8
  %7668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7667, i8* %7668, align 1
  %7669 = lshr i32 %7646, 31
  %7670 = trunc i32 %7669 to i8
  %7671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7670, i8* %7671, align 1
  %7672 = lshr i32 %7645, 31
  %7673 = xor i32 %7669, %7672
  %7674 = add i32 %7673, %7669
  %7675 = icmp eq i32 %7674, 2
  %7676 = zext i1 %7675 to i8
  %7677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7676, i8* %7677, align 1
  store %struct.Memory* %loadMem_4126f1, %struct.Memory** %MEMORY
  %loadMem_4126f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7679 = getelementptr inbounds %struct.GPR, %struct.GPR* %7678, i32 0, i32 33
  %7680 = getelementptr inbounds %struct.Reg, %struct.Reg* %7679, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %7680 to i64*
  %7681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7682 = getelementptr inbounds %struct.GPR, %struct.GPR* %7681, i32 0, i32 5
  %7683 = getelementptr inbounds %struct.Reg, %struct.Reg* %7682, i32 0, i32 0
  %ECX.i459 = bitcast %union.anon* %7683 to i32*
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7685 = getelementptr inbounds %struct.GPR, %struct.GPR* %7684, i32 0, i32 1
  %7686 = getelementptr inbounds %struct.Reg, %struct.Reg* %7685, i32 0, i32 0
  %RAX.i460 = bitcast %union.anon* %7686 to i64*
  %7687 = load i32, i32* %ECX.i459
  %7688 = zext i32 %7687 to i64
  %7689 = load i64, i64* %PC.i458
  %7690 = add i64 %7689, 3
  store i64 %7690, i64* %PC.i458
  %7691 = shl i64 %7688, 32
  %7692 = ashr exact i64 %7691, 32
  store i64 %7692, i64* %RAX.i460, align 8
  store %struct.Memory* %loadMem_4126f4, %struct.Memory** %MEMORY
  %loadMem_4126f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7694 = getelementptr inbounds %struct.GPR, %struct.GPR* %7693, i32 0, i32 33
  %7695 = getelementptr inbounds %struct.Reg, %struct.Reg* %7694, i32 0, i32 0
  %PC.i455 = bitcast %union.anon* %7695 to i64*
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7697 = getelementptr inbounds %struct.GPR, %struct.GPR* %7696, i32 0, i32 1
  %7698 = getelementptr inbounds %struct.Reg, %struct.Reg* %7697, i32 0, i32 0
  %RAX.i456 = bitcast %union.anon* %7698 to i64*
  %7699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7700 = getelementptr inbounds %struct.GPR, %struct.GPR* %7699, i32 0, i32 5
  %7701 = getelementptr inbounds %struct.Reg, %struct.Reg* %7700, i32 0, i32 0
  %RCX.i457 = bitcast %union.anon* %7701 to i64*
  %7702 = load i64, i64* %RAX.i456
  %7703 = add i64 %7702, 12099168
  %7704 = load i64, i64* %PC.i455
  %7705 = add i64 %7704, 8
  store i64 %7705, i64* %PC.i455
  %7706 = inttoptr i64 %7703 to i8*
  %7707 = load i8, i8* %7706
  %7708 = zext i8 %7707 to i64
  store i64 %7708, i64* %RCX.i457, align 8
  store %struct.Memory* %loadMem_4126f7, %struct.Memory** %MEMORY
  %loadMem_4126ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %7709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7710 = getelementptr inbounds %struct.GPR, %struct.GPR* %7709, i32 0, i32 33
  %7711 = getelementptr inbounds %struct.Reg, %struct.Reg* %7710, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %7711 to i64*
  %7712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7713 = getelementptr inbounds %struct.GPR, %struct.GPR* %7712, i32 0, i32 5
  %7714 = getelementptr inbounds %struct.Reg, %struct.Reg* %7713, i32 0, i32 0
  %ECX.i453 = bitcast %union.anon* %7714 to i32*
  %7715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7716 = getelementptr inbounds %struct.GPR, %struct.GPR* %7715, i32 0, i32 15
  %7717 = getelementptr inbounds %struct.Reg, %struct.Reg* %7716, i32 0, i32 0
  %RBP.i454 = bitcast %union.anon* %7717 to i64*
  %7718 = load i32, i32* %ECX.i453
  %7719 = zext i32 %7718 to i64
  %7720 = load i64, i64* %RBP.i454
  %7721 = sub i64 %7720, 12
  %7722 = load i64, i64* %PC.i452
  %7723 = add i64 %7722, 3
  store i64 %7723, i64* %PC.i452
  %7724 = inttoptr i64 %7721 to i32*
  %7725 = load i32, i32* %7724
  %7726 = sub i32 %7718, %7725
  %7727 = icmp ult i32 %7718, %7725
  %7728 = zext i1 %7727 to i8
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7728, i8* %7729, align 1
  %7730 = and i32 %7726, 255
  %7731 = call i32 @llvm.ctpop.i32(i32 %7730)
  %7732 = trunc i32 %7731 to i8
  %7733 = and i8 %7732, 1
  %7734 = xor i8 %7733, 1
  %7735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7734, i8* %7735, align 1
  %7736 = xor i32 %7725, %7718
  %7737 = xor i32 %7736, %7726
  %7738 = lshr i32 %7737, 4
  %7739 = trunc i32 %7738 to i8
  %7740 = and i8 %7739, 1
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7740, i8* %7741, align 1
  %7742 = icmp eq i32 %7726, 0
  %7743 = zext i1 %7742 to i8
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7743, i8* %7744, align 1
  %7745 = lshr i32 %7726, 31
  %7746 = trunc i32 %7745 to i8
  %7747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7746, i8* %7747, align 1
  %7748 = lshr i32 %7718, 31
  %7749 = lshr i32 %7725, 31
  %7750 = xor i32 %7749, %7748
  %7751 = xor i32 %7745, %7748
  %7752 = add i32 %7751, %7750
  %7753 = icmp eq i32 %7752, 2
  %7754 = zext i1 %7753 to i8
  %7755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7754, i8* %7755, align 1
  store %struct.Memory* %loadMem_4126ff, %struct.Memory** %MEMORY
  %loadMem_412702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7757 = getelementptr inbounds %struct.GPR, %struct.GPR* %7756, i32 0, i32 33
  %7758 = getelementptr inbounds %struct.Reg, %struct.Reg* %7757, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %7758 to i64*
  %7759 = load i64, i64* %PC.i451
  %7760 = add i64 %7759, 62
  %7761 = load i64, i64* %PC.i451
  %7762 = add i64 %7761, 6
  %7763 = load i64, i64* %PC.i451
  %7764 = add i64 %7763, 6
  store i64 %7764, i64* %PC.i451
  %7765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7766 = load i8, i8* %7765, align 1
  %7767 = icmp eq i8 %7766, 0
  %7768 = zext i1 %7767 to i8
  store i8 %7768, i8* %BRANCH_TAKEN, align 1
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7770 = select i1 %7767, i64 %7760, i64 %7762
  store i64 %7770, i64* %7769, align 8
  store %struct.Memory* %loadMem_412702, %struct.Memory** %MEMORY
  %loadBr_412702 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412702 = icmp eq i8 %loadBr_412702, 1
  br i1 %cmpBr_412702, label %block_.L_412740, label %block_412708

block_412708:                                     ; preds = %block_4126e3
  %loadMem_412708 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7772 = getelementptr inbounds %struct.GPR, %struct.GPR* %7771, i32 0, i32 33
  %7773 = getelementptr inbounds %struct.Reg, %struct.Reg* %7772, i32 0, i32 0
  %PC.i449 = bitcast %union.anon* %7773 to i64*
  %7774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7775 = getelementptr inbounds %struct.GPR, %struct.GPR* %7774, i32 0, i32 1
  %7776 = getelementptr inbounds %struct.Reg, %struct.Reg* %7775, i32 0, i32 0
  %RAX.i450 = bitcast %union.anon* %7776 to i64*
  %7777 = load i64, i64* %PC.i449
  %7778 = add i64 %7777, 10
  store i64 %7778, i64* %PC.i449
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i450, align 8
  store %struct.Memory* %loadMem_412708, %struct.Memory** %MEMORY
  %loadMem_412712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7780 = getelementptr inbounds %struct.GPR, %struct.GPR* %7779, i32 0, i32 33
  %7781 = getelementptr inbounds %struct.Reg, %struct.Reg* %7780, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %7781 to i64*
  %7782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7783 = getelementptr inbounds %struct.GPR, %struct.GPR* %7782, i32 0, i32 5
  %7784 = getelementptr inbounds %struct.Reg, %struct.Reg* %7783, i32 0, i32 0
  %RCX.i447 = bitcast %union.anon* %7784 to i64*
  %7785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7786 = getelementptr inbounds %struct.GPR, %struct.GPR* %7785, i32 0, i32 15
  %7787 = getelementptr inbounds %struct.Reg, %struct.Reg* %7786, i32 0, i32 0
  %RBP.i448 = bitcast %union.anon* %7787 to i64*
  %7788 = load i64, i64* %RBP.i448
  %7789 = sub i64 %7788, 40
  %7790 = load i64, i64* %PC.i446
  %7791 = add i64 %7790, 3
  store i64 %7791, i64* %PC.i446
  %7792 = inttoptr i64 %7789 to i32*
  %7793 = load i32, i32* %7792
  %7794 = zext i32 %7793 to i64
  store i64 %7794, i64* %RCX.i447, align 8
  store %struct.Memory* %loadMem_412712, %struct.Memory** %MEMORY
  %loadMem_412715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7796 = getelementptr inbounds %struct.GPR, %struct.GPR* %7795, i32 0, i32 33
  %7797 = getelementptr inbounds %struct.Reg, %struct.Reg* %7796, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %7797 to i64*
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7799 = getelementptr inbounds %struct.GPR, %struct.GPR* %7798, i32 0, i32 5
  %7800 = getelementptr inbounds %struct.Reg, %struct.Reg* %7799, i32 0, i32 0
  %RCX.i445 = bitcast %union.anon* %7800 to i64*
  %7801 = load i64, i64* %RCX.i445
  %7802 = load i64, i64* %PC.i444
  %7803 = add i64 %7802, 3
  store i64 %7803, i64* %PC.i444
  %7804 = trunc i64 %7801 to i32
  %7805 = add i32 20, %7804
  %7806 = zext i32 %7805 to i64
  store i64 %7806, i64* %RCX.i445, align 8
  %7807 = icmp ult i32 %7805, %7804
  %7808 = icmp ult i32 %7805, 20
  %7809 = or i1 %7807, %7808
  %7810 = zext i1 %7809 to i8
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7810, i8* %7811, align 1
  %7812 = and i32 %7805, 255
  %7813 = call i32 @llvm.ctpop.i32(i32 %7812)
  %7814 = trunc i32 %7813 to i8
  %7815 = and i8 %7814, 1
  %7816 = xor i8 %7815, 1
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7816, i8* %7817, align 1
  %7818 = xor i64 20, %7801
  %7819 = trunc i64 %7818 to i32
  %7820 = xor i32 %7819, %7805
  %7821 = lshr i32 %7820, 4
  %7822 = trunc i32 %7821 to i8
  %7823 = and i8 %7822, 1
  %7824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7823, i8* %7824, align 1
  %7825 = icmp eq i32 %7805, 0
  %7826 = zext i1 %7825 to i8
  %7827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7826, i8* %7827, align 1
  %7828 = lshr i32 %7805, 31
  %7829 = trunc i32 %7828 to i8
  %7830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7829, i8* %7830, align 1
  %7831 = lshr i32 %7804, 31
  %7832 = xor i32 %7828, %7831
  %7833 = add i32 %7832, %7828
  %7834 = icmp eq i32 %7833, 2
  %7835 = zext i1 %7834 to i8
  %7836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7835, i8* %7836, align 1
  store %struct.Memory* %loadMem_412715, %struct.Memory** %MEMORY
  %loadMem_412718 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7838 = getelementptr inbounds %struct.GPR, %struct.GPR* %7837, i32 0, i32 33
  %7839 = getelementptr inbounds %struct.Reg, %struct.Reg* %7838, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %7839 to i64*
  %7840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7841 = getelementptr inbounds %struct.GPR, %struct.GPR* %7840, i32 0, i32 5
  %7842 = getelementptr inbounds %struct.Reg, %struct.Reg* %7841, i32 0, i32 0
  %ECX.i442 = bitcast %union.anon* %7842 to i32*
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7844 = getelementptr inbounds %struct.GPR, %struct.GPR* %7843, i32 0, i32 7
  %7845 = getelementptr inbounds %struct.Reg, %struct.Reg* %7844, i32 0, i32 0
  %RDX.i443 = bitcast %union.anon* %7845 to i64*
  %7846 = load i32, i32* %ECX.i442
  %7847 = zext i32 %7846 to i64
  %7848 = load i64, i64* %PC.i441
  %7849 = add i64 %7848, 3
  store i64 %7849, i64* %PC.i441
  %7850 = shl i64 %7847, 32
  %7851 = ashr exact i64 %7850, 32
  store i64 %7851, i64* %RDX.i443, align 8
  store %struct.Memory* %loadMem_412718, %struct.Memory** %MEMORY
  %loadMem_41271b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7853 = getelementptr inbounds %struct.GPR, %struct.GPR* %7852, i32 0, i32 33
  %7854 = getelementptr inbounds %struct.Reg, %struct.Reg* %7853, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %7854 to i64*
  %7855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7856 = getelementptr inbounds %struct.GPR, %struct.GPR* %7855, i32 0, i32 7
  %7857 = getelementptr inbounds %struct.Reg, %struct.Reg* %7856, i32 0, i32 0
  %RDX.i440 = bitcast %union.anon* %7857 to i64*
  %7858 = load i64, i64* %RDX.i440
  %7859 = mul i64 %7858, 4
  %7860 = add i64 %7859, 11187184
  %7861 = load i64, i64* %PC.i439
  %7862 = add i64 %7861, 8
  store i64 %7862, i64* %PC.i439
  %7863 = inttoptr i64 %7860 to i32*
  %7864 = load i32, i32* %7863
  %7865 = sext i32 %7864 to i64
  store i64 %7865, i64* %RDX.i440, align 8
  store %struct.Memory* %loadMem_41271b, %struct.Memory** %MEMORY
  %loadMem_412723 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7867 = getelementptr inbounds %struct.GPR, %struct.GPR* %7866, i32 0, i32 33
  %7868 = getelementptr inbounds %struct.Reg, %struct.Reg* %7867, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %7868 to i64*
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7870 = getelementptr inbounds %struct.GPR, %struct.GPR* %7869, i32 0, i32 7
  %7871 = getelementptr inbounds %struct.Reg, %struct.Reg* %7870, i32 0, i32 0
  %RDX.i438 = bitcast %union.anon* %7871 to i64*
  %7872 = load i64, i64* %RDX.i438
  %7873 = load i64, i64* %PC.i437
  %7874 = add i64 %7873, 7
  store i64 %7874, i64* %PC.i437
  %7875 = sext i64 %7872 to i128
  %7876 = and i128 %7875, -18446744073709551616
  %7877 = zext i64 %7872 to i128
  %7878 = or i128 %7876, %7877
  %7879 = mul i128 744, %7878
  %7880 = trunc i128 %7879 to i64
  store i64 %7880, i64* %RDX.i438, align 8
  %7881 = sext i64 %7880 to i128
  %7882 = icmp ne i128 %7881, %7879
  %7883 = zext i1 %7882 to i8
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7883, i8* %7884, align 1
  %7885 = trunc i128 %7879 to i32
  %7886 = and i32 %7885, 255
  %7887 = call i32 @llvm.ctpop.i32(i32 %7886)
  %7888 = trunc i32 %7887 to i8
  %7889 = and i8 %7888, 1
  %7890 = xor i8 %7889, 1
  %7891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7890, i8* %7891, align 1
  %7892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7892, align 1
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7893, align 1
  %7894 = lshr i64 %7880, 63
  %7895 = trunc i64 %7894 to i8
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7895, i8* %7896, align 1
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7883, i8* %7897, align 1
  store %struct.Memory* %loadMem_412723, %struct.Memory** %MEMORY
  %loadMem_41272a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7899 = getelementptr inbounds %struct.GPR, %struct.GPR* %7898, i32 0, i32 33
  %7900 = getelementptr inbounds %struct.Reg, %struct.Reg* %7899, i32 0, i32 0
  %PC.i434 = bitcast %union.anon* %7900 to i64*
  %7901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7902 = getelementptr inbounds %struct.GPR, %struct.GPR* %7901, i32 0, i32 1
  %7903 = getelementptr inbounds %struct.Reg, %struct.Reg* %7902, i32 0, i32 0
  %RAX.i435 = bitcast %union.anon* %7903 to i64*
  %7904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7905 = getelementptr inbounds %struct.GPR, %struct.GPR* %7904, i32 0, i32 7
  %7906 = getelementptr inbounds %struct.Reg, %struct.Reg* %7905, i32 0, i32 0
  %RDX.i436 = bitcast %union.anon* %7906 to i64*
  %7907 = load i64, i64* %RAX.i435
  %7908 = load i64, i64* %RDX.i436
  %7909 = load i64, i64* %PC.i434
  %7910 = add i64 %7909, 3
  store i64 %7910, i64* %PC.i434
  %7911 = add i64 %7908, %7907
  store i64 %7911, i64* %RAX.i435, align 8
  %7912 = icmp ult i64 %7911, %7907
  %7913 = icmp ult i64 %7911, %7908
  %7914 = or i1 %7912, %7913
  %7915 = zext i1 %7914 to i8
  %7916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7915, i8* %7916, align 1
  %7917 = trunc i64 %7911 to i32
  %7918 = and i32 %7917, 255
  %7919 = call i32 @llvm.ctpop.i32(i32 %7918)
  %7920 = trunc i32 %7919 to i8
  %7921 = and i8 %7920, 1
  %7922 = xor i8 %7921, 1
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7922, i8* %7923, align 1
  %7924 = xor i64 %7908, %7907
  %7925 = xor i64 %7924, %7911
  %7926 = lshr i64 %7925, 4
  %7927 = trunc i64 %7926 to i8
  %7928 = and i8 %7927, 1
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7928, i8* %7929, align 1
  %7930 = icmp eq i64 %7911, 0
  %7931 = zext i1 %7930 to i8
  %7932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7931, i8* %7932, align 1
  %7933 = lshr i64 %7911, 63
  %7934 = trunc i64 %7933 to i8
  %7935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7934, i8* %7935, align 1
  %7936 = lshr i64 %7907, 63
  %7937 = lshr i64 %7908, 63
  %7938 = xor i64 %7933, %7936
  %7939 = xor i64 %7933, %7937
  %7940 = add i64 %7938, %7939
  %7941 = icmp eq i64 %7940, 2
  %7942 = zext i1 %7941 to i8
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7942, i8* %7943, align 1
  store %struct.Memory* %loadMem_41272a, %struct.Memory** %MEMORY
  %loadMem_41272d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7945 = getelementptr inbounds %struct.GPR, %struct.GPR* %7944, i32 0, i32 33
  %7946 = getelementptr inbounds %struct.Reg, %struct.Reg* %7945, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %7946 to i64*
  %7947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7948 = getelementptr inbounds %struct.GPR, %struct.GPR* %7947, i32 0, i32 1
  %7949 = getelementptr inbounds %struct.Reg, %struct.Reg* %7948, i32 0, i32 0
  %RAX.i432 = bitcast %union.anon* %7949 to i64*
  %7950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7951 = getelementptr inbounds %struct.GPR, %struct.GPR* %7950, i32 0, i32 5
  %7952 = getelementptr inbounds %struct.Reg, %struct.Reg* %7951, i32 0, i32 0
  %RCX.i433 = bitcast %union.anon* %7952 to i64*
  %7953 = load i64, i64* %RAX.i432
  %7954 = add i64 %7953, 740
  %7955 = load i64, i64* %PC.i431
  %7956 = add i64 %7955, 6
  store i64 %7956, i64* %PC.i431
  %7957 = inttoptr i64 %7954 to i32*
  %7958 = load i32, i32* %7957
  %7959 = zext i32 %7958 to i64
  store i64 %7959, i64* %RCX.i433, align 8
  store %struct.Memory* %loadMem_41272d, %struct.Memory** %MEMORY
  %loadMem_412733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7961 = getelementptr inbounds %struct.GPR, %struct.GPR* %7960, i32 0, i32 33
  %7962 = getelementptr inbounds %struct.Reg, %struct.Reg* %7961, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %7962 to i64*
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7964 = getelementptr inbounds %struct.GPR, %struct.GPR* %7963, i32 0, i32 5
  %7965 = getelementptr inbounds %struct.Reg, %struct.Reg* %7964, i32 0, i32 0
  %ECX.i430 = bitcast %union.anon* %7965 to i32*
  %7966 = load i32, i32* %ECX.i430
  %7967 = zext i32 %7966 to i64
  %7968 = load i64, i64* %PC.i429
  %7969 = add i64 %7968, 7
  store i64 %7969, i64* %PC.i429
  %7970 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %7971 = sub i32 %7966, %7970
  %7972 = icmp ult i32 %7966, %7970
  %7973 = zext i1 %7972 to i8
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7973, i8* %7974, align 1
  %7975 = and i32 %7971, 255
  %7976 = call i32 @llvm.ctpop.i32(i32 %7975)
  %7977 = trunc i32 %7976 to i8
  %7978 = and i8 %7977, 1
  %7979 = xor i8 %7978, 1
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7979, i8* %7980, align 1
  %7981 = xor i32 %7970, %7966
  %7982 = xor i32 %7981, %7971
  %7983 = lshr i32 %7982, 4
  %7984 = trunc i32 %7983 to i8
  %7985 = and i8 %7984, 1
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7985, i8* %7986, align 1
  %7987 = icmp eq i32 %7971, 0
  %7988 = zext i1 %7987 to i8
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7988, i8* %7989, align 1
  %7990 = lshr i32 %7971, 31
  %7991 = trunc i32 %7990 to i8
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7991, i8* %7992, align 1
  %7993 = lshr i32 %7966, 31
  %7994 = lshr i32 %7970, 31
  %7995 = xor i32 %7994, %7993
  %7996 = xor i32 %7990, %7993
  %7997 = add i32 %7996, %7995
  %7998 = icmp eq i32 %7997, 2
  %7999 = zext i1 %7998 to i8
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7999, i8* %8000, align 1
  store %struct.Memory* %loadMem_412733, %struct.Memory** %MEMORY
  %loadMem_41273a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8002 = getelementptr inbounds %struct.GPR, %struct.GPR* %8001, i32 0, i32 33
  %8003 = getelementptr inbounds %struct.Reg, %struct.Reg* %8002, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %8003 to i64*
  %8004 = load i64, i64* %PC.i428
  %8005 = add i64 %8004, 314
  %8006 = load i64, i64* %PC.i428
  %8007 = add i64 %8006, 6
  %8008 = load i64, i64* %PC.i428
  %8009 = add i64 %8008, 6
  store i64 %8009, i64* %PC.i428
  %8010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8011 = load i8, i8* %8010, align 1
  store i8 %8011, i8* %BRANCH_TAKEN, align 1
  %8012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8013 = icmp ne i8 %8011, 0
  %8014 = select i1 %8013, i64 %8005, i64 %8007
  store i64 %8014, i64* %8012, align 8
  store %struct.Memory* %loadMem_41273a, %struct.Memory** %MEMORY
  %loadBr_41273a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41273a = icmp eq i8 %loadBr_41273a, 1
  br i1 %cmpBr_41273a, label %block_.L_412874, label %block_.L_412740

block_.L_412740:                                  ; preds = %block_412708, %block_4126e3
  %loadMem_412740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8016 = getelementptr inbounds %struct.GPR, %struct.GPR* %8015, i32 0, i32 33
  %8017 = getelementptr inbounds %struct.Reg, %struct.Reg* %8016, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %8017 to i64*
  %8018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8019 = getelementptr inbounds %struct.GPR, %struct.GPR* %8018, i32 0, i32 1
  %8020 = getelementptr inbounds %struct.Reg, %struct.Reg* %8019, i32 0, i32 0
  %RAX.i426 = bitcast %union.anon* %8020 to i64*
  %8021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8022 = getelementptr inbounds %struct.GPR, %struct.GPR* %8021, i32 0, i32 15
  %8023 = getelementptr inbounds %struct.Reg, %struct.Reg* %8022, i32 0, i32 0
  %RBP.i427 = bitcast %union.anon* %8023 to i64*
  %8024 = load i64, i64* %RBP.i427
  %8025 = sub i64 %8024, 40
  %8026 = load i64, i64* %PC.i425
  %8027 = add i64 %8026, 3
  store i64 %8027, i64* %PC.i425
  %8028 = inttoptr i64 %8025 to i32*
  %8029 = load i32, i32* %8028
  %8030 = zext i32 %8029 to i64
  store i64 %8030, i64* %RAX.i426, align 8
  store %struct.Memory* %loadMem_412740, %struct.Memory** %MEMORY
  %loadMem_412743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8032 = getelementptr inbounds %struct.GPR, %struct.GPR* %8031, i32 0, i32 33
  %8033 = getelementptr inbounds %struct.Reg, %struct.Reg* %8032, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %8033 to i64*
  %8034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8035 = getelementptr inbounds %struct.GPR, %struct.GPR* %8034, i32 0, i32 1
  %8036 = getelementptr inbounds %struct.Reg, %struct.Reg* %8035, i32 0, i32 0
  %RAX.i424 = bitcast %union.anon* %8036 to i64*
  %8037 = load i64, i64* %RAX.i424
  %8038 = load i64, i64* %PC.i423
  %8039 = add i64 %8038, 3
  store i64 %8039, i64* %PC.i423
  %8040 = trunc i64 %8037 to i32
  %8041 = sub i32 %8040, 1
  %8042 = zext i32 %8041 to i64
  store i64 %8042, i64* %RAX.i424, align 8
  %8043 = icmp ult i32 %8040, 1
  %8044 = zext i1 %8043 to i8
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8044, i8* %8045, align 1
  %8046 = and i32 %8041, 255
  %8047 = call i32 @llvm.ctpop.i32(i32 %8046)
  %8048 = trunc i32 %8047 to i8
  %8049 = and i8 %8048, 1
  %8050 = xor i8 %8049, 1
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8050, i8* %8051, align 1
  %8052 = xor i64 1, %8037
  %8053 = trunc i64 %8052 to i32
  %8054 = xor i32 %8053, %8041
  %8055 = lshr i32 %8054, 4
  %8056 = trunc i32 %8055 to i8
  %8057 = and i8 %8056, 1
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8057, i8* %8058, align 1
  %8059 = icmp eq i32 %8041, 0
  %8060 = zext i1 %8059 to i8
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8060, i8* %8061, align 1
  %8062 = lshr i32 %8041, 31
  %8063 = trunc i32 %8062 to i8
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8063, i8* %8064, align 1
  %8065 = lshr i32 %8040, 31
  %8066 = xor i32 %8062, %8065
  %8067 = add i32 %8066, %8065
  %8068 = icmp eq i32 %8067, 2
  %8069 = zext i1 %8068 to i8
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8069, i8* %8070, align 1
  store %struct.Memory* %loadMem_412743, %struct.Memory** %MEMORY
  %loadMem_412746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8072 = getelementptr inbounds %struct.GPR, %struct.GPR* %8071, i32 0, i32 33
  %8073 = getelementptr inbounds %struct.Reg, %struct.Reg* %8072, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %8073 to i64*
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8075 = getelementptr inbounds %struct.GPR, %struct.GPR* %8074, i32 0, i32 1
  %8076 = getelementptr inbounds %struct.Reg, %struct.Reg* %8075, i32 0, i32 0
  %EAX.i421 = bitcast %union.anon* %8076 to i32*
  %8077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8078 = getelementptr inbounds %struct.GPR, %struct.GPR* %8077, i32 0, i32 5
  %8079 = getelementptr inbounds %struct.Reg, %struct.Reg* %8078, i32 0, i32 0
  %RCX.i422 = bitcast %union.anon* %8079 to i64*
  %8080 = load i32, i32* %EAX.i421
  %8081 = zext i32 %8080 to i64
  %8082 = load i64, i64* %PC.i420
  %8083 = add i64 %8082, 3
  store i64 %8083, i64* %PC.i420
  %8084 = shl i64 %8081, 32
  %8085 = ashr exact i64 %8084, 32
  store i64 %8085, i64* %RCX.i422, align 8
  store %struct.Memory* %loadMem_412746, %struct.Memory** %MEMORY
  %loadMem_412749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8087 = getelementptr inbounds %struct.GPR, %struct.GPR* %8086, i32 0, i32 33
  %8088 = getelementptr inbounds %struct.Reg, %struct.Reg* %8087, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %8088 to i64*
  %8089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8090 = getelementptr inbounds %struct.GPR, %struct.GPR* %8089, i32 0, i32 1
  %8091 = getelementptr inbounds %struct.Reg, %struct.Reg* %8090, i32 0, i32 0
  %RAX.i418 = bitcast %union.anon* %8091 to i64*
  %8092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8093 = getelementptr inbounds %struct.GPR, %struct.GPR* %8092, i32 0, i32 5
  %8094 = getelementptr inbounds %struct.Reg, %struct.Reg* %8093, i32 0, i32 0
  %RCX.i419 = bitcast %union.anon* %8094 to i64*
  %8095 = load i64, i64* %RCX.i419
  %8096 = add i64 %8095, 12099168
  %8097 = load i64, i64* %PC.i417
  %8098 = add i64 %8097, 8
  store i64 %8098, i64* %PC.i417
  %8099 = inttoptr i64 %8096 to i8*
  %8100 = load i8, i8* %8099
  %8101 = zext i8 %8100 to i64
  store i64 %8101, i64* %RAX.i418, align 8
  store %struct.Memory* %loadMem_412749, %struct.Memory** %MEMORY
  %loadMem_412751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8103 = getelementptr inbounds %struct.GPR, %struct.GPR* %8102, i32 0, i32 33
  %8104 = getelementptr inbounds %struct.Reg, %struct.Reg* %8103, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %8104 to i64*
  %8105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8106 = getelementptr inbounds %struct.GPR, %struct.GPR* %8105, i32 0, i32 1
  %8107 = getelementptr inbounds %struct.Reg, %struct.Reg* %8106, i32 0, i32 0
  %EAX.i415 = bitcast %union.anon* %8107 to i32*
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8109 = getelementptr inbounds %struct.GPR, %struct.GPR* %8108, i32 0, i32 15
  %8110 = getelementptr inbounds %struct.Reg, %struct.Reg* %8109, i32 0, i32 0
  %RBP.i416 = bitcast %union.anon* %8110 to i64*
  %8111 = load i32, i32* %EAX.i415
  %8112 = zext i32 %8111 to i64
  %8113 = load i64, i64* %RBP.i416
  %8114 = sub i64 %8113, 12
  %8115 = load i64, i64* %PC.i414
  %8116 = add i64 %8115, 3
  store i64 %8116, i64* %PC.i414
  %8117 = inttoptr i64 %8114 to i32*
  %8118 = load i32, i32* %8117
  %8119 = sub i32 %8111, %8118
  %8120 = icmp ult i32 %8111, %8118
  %8121 = zext i1 %8120 to i8
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8121, i8* %8122, align 1
  %8123 = and i32 %8119, 255
  %8124 = call i32 @llvm.ctpop.i32(i32 %8123)
  %8125 = trunc i32 %8124 to i8
  %8126 = and i8 %8125, 1
  %8127 = xor i8 %8126, 1
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8127, i8* %8128, align 1
  %8129 = xor i32 %8118, %8111
  %8130 = xor i32 %8129, %8119
  %8131 = lshr i32 %8130, 4
  %8132 = trunc i32 %8131 to i8
  %8133 = and i8 %8132, 1
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8133, i8* %8134, align 1
  %8135 = icmp eq i32 %8119, 0
  %8136 = zext i1 %8135 to i8
  %8137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8136, i8* %8137, align 1
  %8138 = lshr i32 %8119, 31
  %8139 = trunc i32 %8138 to i8
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8139, i8* %8140, align 1
  %8141 = lshr i32 %8111, 31
  %8142 = lshr i32 %8118, 31
  %8143 = xor i32 %8142, %8141
  %8144 = xor i32 %8138, %8141
  %8145 = add i32 %8144, %8143
  %8146 = icmp eq i32 %8145, 2
  %8147 = zext i1 %8146 to i8
  %8148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8147, i8* %8148, align 1
  store %struct.Memory* %loadMem_412751, %struct.Memory** %MEMORY
  %loadMem_412754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8150 = getelementptr inbounds %struct.GPR, %struct.GPR* %8149, i32 0, i32 33
  %8151 = getelementptr inbounds %struct.Reg, %struct.Reg* %8150, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %8151 to i64*
  %8152 = load i64, i64* %PC.i413
  %8153 = add i64 %8152, 62
  %8154 = load i64, i64* %PC.i413
  %8155 = add i64 %8154, 6
  %8156 = load i64, i64* %PC.i413
  %8157 = add i64 %8156, 6
  store i64 %8157, i64* %PC.i413
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8159 = load i8, i8* %8158, align 1
  %8160 = icmp eq i8 %8159, 0
  %8161 = zext i1 %8160 to i8
  store i8 %8161, i8* %BRANCH_TAKEN, align 1
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8163 = select i1 %8160, i64 %8153, i64 %8155
  store i64 %8163, i64* %8162, align 8
  store %struct.Memory* %loadMem_412754, %struct.Memory** %MEMORY
  %loadBr_412754 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412754 = icmp eq i8 %loadBr_412754, 1
  br i1 %cmpBr_412754, label %block_.L_412792, label %block_41275a

block_41275a:                                     ; preds = %block_.L_412740
  %loadMem_41275a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8165 = getelementptr inbounds %struct.GPR, %struct.GPR* %8164, i32 0, i32 33
  %8166 = getelementptr inbounds %struct.Reg, %struct.Reg* %8165, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %8166 to i64*
  %8167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8168 = getelementptr inbounds %struct.GPR, %struct.GPR* %8167, i32 0, i32 1
  %8169 = getelementptr inbounds %struct.Reg, %struct.Reg* %8168, i32 0, i32 0
  %RAX.i412 = bitcast %union.anon* %8169 to i64*
  %8170 = load i64, i64* %PC.i411
  %8171 = add i64 %8170, 10
  store i64 %8171, i64* %PC.i411
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i412, align 8
  store %struct.Memory* %loadMem_41275a, %struct.Memory** %MEMORY
  %loadMem_412764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8173 = getelementptr inbounds %struct.GPR, %struct.GPR* %8172, i32 0, i32 33
  %8174 = getelementptr inbounds %struct.Reg, %struct.Reg* %8173, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %8174 to i64*
  %8175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8176 = getelementptr inbounds %struct.GPR, %struct.GPR* %8175, i32 0, i32 5
  %8177 = getelementptr inbounds %struct.Reg, %struct.Reg* %8176, i32 0, i32 0
  %RCX.i409 = bitcast %union.anon* %8177 to i64*
  %8178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8179 = getelementptr inbounds %struct.GPR, %struct.GPR* %8178, i32 0, i32 15
  %8180 = getelementptr inbounds %struct.Reg, %struct.Reg* %8179, i32 0, i32 0
  %RBP.i410 = bitcast %union.anon* %8180 to i64*
  %8181 = load i64, i64* %RBP.i410
  %8182 = sub i64 %8181, 40
  %8183 = load i64, i64* %PC.i408
  %8184 = add i64 %8183, 3
  store i64 %8184, i64* %PC.i408
  %8185 = inttoptr i64 %8182 to i32*
  %8186 = load i32, i32* %8185
  %8187 = zext i32 %8186 to i64
  store i64 %8187, i64* %RCX.i409, align 8
  store %struct.Memory* %loadMem_412764, %struct.Memory** %MEMORY
  %loadMem_412767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8189 = getelementptr inbounds %struct.GPR, %struct.GPR* %8188, i32 0, i32 33
  %8190 = getelementptr inbounds %struct.Reg, %struct.Reg* %8189, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %8190 to i64*
  %8191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8192 = getelementptr inbounds %struct.GPR, %struct.GPR* %8191, i32 0, i32 5
  %8193 = getelementptr inbounds %struct.Reg, %struct.Reg* %8192, i32 0, i32 0
  %RCX.i407 = bitcast %union.anon* %8193 to i64*
  %8194 = load i64, i64* %RCX.i407
  %8195 = load i64, i64* %PC.i406
  %8196 = add i64 %8195, 3
  store i64 %8196, i64* %PC.i406
  %8197 = trunc i64 %8194 to i32
  %8198 = sub i32 %8197, 1
  %8199 = zext i32 %8198 to i64
  store i64 %8199, i64* %RCX.i407, align 8
  %8200 = icmp ult i32 %8197, 1
  %8201 = zext i1 %8200 to i8
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8201, i8* %8202, align 1
  %8203 = and i32 %8198, 255
  %8204 = call i32 @llvm.ctpop.i32(i32 %8203)
  %8205 = trunc i32 %8204 to i8
  %8206 = and i8 %8205, 1
  %8207 = xor i8 %8206, 1
  %8208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8207, i8* %8208, align 1
  %8209 = xor i64 1, %8194
  %8210 = trunc i64 %8209 to i32
  %8211 = xor i32 %8210, %8198
  %8212 = lshr i32 %8211, 4
  %8213 = trunc i32 %8212 to i8
  %8214 = and i8 %8213, 1
  %8215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8214, i8* %8215, align 1
  %8216 = icmp eq i32 %8198, 0
  %8217 = zext i1 %8216 to i8
  %8218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8217, i8* %8218, align 1
  %8219 = lshr i32 %8198, 31
  %8220 = trunc i32 %8219 to i8
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8220, i8* %8221, align 1
  %8222 = lshr i32 %8197, 31
  %8223 = xor i32 %8219, %8222
  %8224 = add i32 %8223, %8222
  %8225 = icmp eq i32 %8224, 2
  %8226 = zext i1 %8225 to i8
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8226, i8* %8227, align 1
  store %struct.Memory* %loadMem_412767, %struct.Memory** %MEMORY
  %loadMem_41276a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8229 = getelementptr inbounds %struct.GPR, %struct.GPR* %8228, i32 0, i32 33
  %8230 = getelementptr inbounds %struct.Reg, %struct.Reg* %8229, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %8230 to i64*
  %8231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8232 = getelementptr inbounds %struct.GPR, %struct.GPR* %8231, i32 0, i32 5
  %8233 = getelementptr inbounds %struct.Reg, %struct.Reg* %8232, i32 0, i32 0
  %ECX.i404 = bitcast %union.anon* %8233 to i32*
  %8234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8235 = getelementptr inbounds %struct.GPR, %struct.GPR* %8234, i32 0, i32 7
  %8236 = getelementptr inbounds %struct.Reg, %struct.Reg* %8235, i32 0, i32 0
  %RDX.i405 = bitcast %union.anon* %8236 to i64*
  %8237 = load i32, i32* %ECX.i404
  %8238 = zext i32 %8237 to i64
  %8239 = load i64, i64* %PC.i403
  %8240 = add i64 %8239, 3
  store i64 %8240, i64* %PC.i403
  %8241 = shl i64 %8238, 32
  %8242 = ashr exact i64 %8241, 32
  store i64 %8242, i64* %RDX.i405, align 8
  store %struct.Memory* %loadMem_41276a, %struct.Memory** %MEMORY
  %loadMem_41276d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8244 = getelementptr inbounds %struct.GPR, %struct.GPR* %8243, i32 0, i32 33
  %8245 = getelementptr inbounds %struct.Reg, %struct.Reg* %8244, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %8245 to i64*
  %8246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8247 = getelementptr inbounds %struct.GPR, %struct.GPR* %8246, i32 0, i32 7
  %8248 = getelementptr inbounds %struct.Reg, %struct.Reg* %8247, i32 0, i32 0
  %RDX.i402 = bitcast %union.anon* %8248 to i64*
  %8249 = load i64, i64* %RDX.i402
  %8250 = mul i64 %8249, 4
  %8251 = add i64 %8250, 11187184
  %8252 = load i64, i64* %PC.i401
  %8253 = add i64 %8252, 8
  store i64 %8253, i64* %PC.i401
  %8254 = inttoptr i64 %8251 to i32*
  %8255 = load i32, i32* %8254
  %8256 = sext i32 %8255 to i64
  store i64 %8256, i64* %RDX.i402, align 8
  store %struct.Memory* %loadMem_41276d, %struct.Memory** %MEMORY
  %loadMem_412775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8258 = getelementptr inbounds %struct.GPR, %struct.GPR* %8257, i32 0, i32 33
  %8259 = getelementptr inbounds %struct.Reg, %struct.Reg* %8258, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %8259 to i64*
  %8260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8261 = getelementptr inbounds %struct.GPR, %struct.GPR* %8260, i32 0, i32 7
  %8262 = getelementptr inbounds %struct.Reg, %struct.Reg* %8261, i32 0, i32 0
  %RDX.i400 = bitcast %union.anon* %8262 to i64*
  %8263 = load i64, i64* %RDX.i400
  %8264 = load i64, i64* %PC.i399
  %8265 = add i64 %8264, 7
  store i64 %8265, i64* %PC.i399
  %8266 = sext i64 %8263 to i128
  %8267 = and i128 %8266, -18446744073709551616
  %8268 = zext i64 %8263 to i128
  %8269 = or i128 %8267, %8268
  %8270 = mul i128 744, %8269
  %8271 = trunc i128 %8270 to i64
  store i64 %8271, i64* %RDX.i400, align 8
  %8272 = sext i64 %8271 to i128
  %8273 = icmp ne i128 %8272, %8270
  %8274 = zext i1 %8273 to i8
  %8275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8274, i8* %8275, align 1
  %8276 = trunc i128 %8270 to i32
  %8277 = and i32 %8276, 255
  %8278 = call i32 @llvm.ctpop.i32(i32 %8277)
  %8279 = trunc i32 %8278 to i8
  %8280 = and i8 %8279, 1
  %8281 = xor i8 %8280, 1
  %8282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8281, i8* %8282, align 1
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8283, align 1
  %8284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8284, align 1
  %8285 = lshr i64 %8271, 63
  %8286 = trunc i64 %8285 to i8
  %8287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8286, i8* %8287, align 1
  %8288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8274, i8* %8288, align 1
  store %struct.Memory* %loadMem_412775, %struct.Memory** %MEMORY
  %loadMem_41277c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8290 = getelementptr inbounds %struct.GPR, %struct.GPR* %8289, i32 0, i32 33
  %8291 = getelementptr inbounds %struct.Reg, %struct.Reg* %8290, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %8291 to i64*
  %8292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8293 = getelementptr inbounds %struct.GPR, %struct.GPR* %8292, i32 0, i32 1
  %8294 = getelementptr inbounds %struct.Reg, %struct.Reg* %8293, i32 0, i32 0
  %RAX.i397 = bitcast %union.anon* %8294 to i64*
  %8295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8296 = getelementptr inbounds %struct.GPR, %struct.GPR* %8295, i32 0, i32 7
  %8297 = getelementptr inbounds %struct.Reg, %struct.Reg* %8296, i32 0, i32 0
  %RDX.i398 = bitcast %union.anon* %8297 to i64*
  %8298 = load i64, i64* %RAX.i397
  %8299 = load i64, i64* %RDX.i398
  %8300 = load i64, i64* %PC.i396
  %8301 = add i64 %8300, 3
  store i64 %8301, i64* %PC.i396
  %8302 = add i64 %8299, %8298
  store i64 %8302, i64* %RAX.i397, align 8
  %8303 = icmp ult i64 %8302, %8298
  %8304 = icmp ult i64 %8302, %8299
  %8305 = or i1 %8303, %8304
  %8306 = zext i1 %8305 to i8
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8306, i8* %8307, align 1
  %8308 = trunc i64 %8302 to i32
  %8309 = and i32 %8308, 255
  %8310 = call i32 @llvm.ctpop.i32(i32 %8309)
  %8311 = trunc i32 %8310 to i8
  %8312 = and i8 %8311, 1
  %8313 = xor i8 %8312, 1
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8313, i8* %8314, align 1
  %8315 = xor i64 %8299, %8298
  %8316 = xor i64 %8315, %8302
  %8317 = lshr i64 %8316, 4
  %8318 = trunc i64 %8317 to i8
  %8319 = and i8 %8318, 1
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8319, i8* %8320, align 1
  %8321 = icmp eq i64 %8302, 0
  %8322 = zext i1 %8321 to i8
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8322, i8* %8323, align 1
  %8324 = lshr i64 %8302, 63
  %8325 = trunc i64 %8324 to i8
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8325, i8* %8326, align 1
  %8327 = lshr i64 %8298, 63
  %8328 = lshr i64 %8299, 63
  %8329 = xor i64 %8324, %8327
  %8330 = xor i64 %8324, %8328
  %8331 = add i64 %8329, %8330
  %8332 = icmp eq i64 %8331, 2
  %8333 = zext i1 %8332 to i8
  %8334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8333, i8* %8334, align 1
  store %struct.Memory* %loadMem_41277c, %struct.Memory** %MEMORY
  %loadMem_41277f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8336 = getelementptr inbounds %struct.GPR, %struct.GPR* %8335, i32 0, i32 33
  %8337 = getelementptr inbounds %struct.Reg, %struct.Reg* %8336, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %8337 to i64*
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8339 = getelementptr inbounds %struct.GPR, %struct.GPR* %8338, i32 0, i32 1
  %8340 = getelementptr inbounds %struct.Reg, %struct.Reg* %8339, i32 0, i32 0
  %RAX.i394 = bitcast %union.anon* %8340 to i64*
  %8341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8342 = getelementptr inbounds %struct.GPR, %struct.GPR* %8341, i32 0, i32 5
  %8343 = getelementptr inbounds %struct.Reg, %struct.Reg* %8342, i32 0, i32 0
  %RCX.i395 = bitcast %union.anon* %8343 to i64*
  %8344 = load i64, i64* %RAX.i394
  %8345 = add i64 %8344, 740
  %8346 = load i64, i64* %PC.i393
  %8347 = add i64 %8346, 6
  store i64 %8347, i64* %PC.i393
  %8348 = inttoptr i64 %8345 to i32*
  %8349 = load i32, i32* %8348
  %8350 = zext i32 %8349 to i64
  store i64 %8350, i64* %RCX.i395, align 8
  store %struct.Memory* %loadMem_41277f, %struct.Memory** %MEMORY
  %loadMem_412785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8352 = getelementptr inbounds %struct.GPR, %struct.GPR* %8351, i32 0, i32 33
  %8353 = getelementptr inbounds %struct.Reg, %struct.Reg* %8352, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %8353 to i64*
  %8354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8355 = getelementptr inbounds %struct.GPR, %struct.GPR* %8354, i32 0, i32 5
  %8356 = getelementptr inbounds %struct.Reg, %struct.Reg* %8355, i32 0, i32 0
  %ECX.i392 = bitcast %union.anon* %8356 to i32*
  %8357 = load i32, i32* %ECX.i392
  %8358 = zext i32 %8357 to i64
  %8359 = load i64, i64* %PC.i391
  %8360 = add i64 %8359, 7
  store i64 %8360, i64* %PC.i391
  %8361 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %8362 = sub i32 %8357, %8361
  %8363 = icmp ult i32 %8357, %8361
  %8364 = zext i1 %8363 to i8
  %8365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8364, i8* %8365, align 1
  %8366 = and i32 %8362, 255
  %8367 = call i32 @llvm.ctpop.i32(i32 %8366)
  %8368 = trunc i32 %8367 to i8
  %8369 = and i8 %8368, 1
  %8370 = xor i8 %8369, 1
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8370, i8* %8371, align 1
  %8372 = xor i32 %8361, %8357
  %8373 = xor i32 %8372, %8362
  %8374 = lshr i32 %8373, 4
  %8375 = trunc i32 %8374 to i8
  %8376 = and i8 %8375, 1
  %8377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8376, i8* %8377, align 1
  %8378 = icmp eq i32 %8362, 0
  %8379 = zext i1 %8378 to i8
  %8380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8379, i8* %8380, align 1
  %8381 = lshr i32 %8362, 31
  %8382 = trunc i32 %8381 to i8
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8382, i8* %8383, align 1
  %8384 = lshr i32 %8357, 31
  %8385 = lshr i32 %8361, 31
  %8386 = xor i32 %8385, %8384
  %8387 = xor i32 %8381, %8384
  %8388 = add i32 %8387, %8386
  %8389 = icmp eq i32 %8388, 2
  %8390 = zext i1 %8389 to i8
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8390, i8* %8391, align 1
  store %struct.Memory* %loadMem_412785, %struct.Memory** %MEMORY
  %loadMem_41278c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8393 = getelementptr inbounds %struct.GPR, %struct.GPR* %8392, i32 0, i32 33
  %8394 = getelementptr inbounds %struct.Reg, %struct.Reg* %8393, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %8394 to i64*
  %8395 = load i64, i64* %PC.i390
  %8396 = add i64 %8395, 232
  %8397 = load i64, i64* %PC.i390
  %8398 = add i64 %8397, 6
  %8399 = load i64, i64* %PC.i390
  %8400 = add i64 %8399, 6
  store i64 %8400, i64* %PC.i390
  %8401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8402 = load i8, i8* %8401, align 1
  store i8 %8402, i8* %BRANCH_TAKEN, align 1
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8404 = icmp ne i8 %8402, 0
  %8405 = select i1 %8404, i64 %8396, i64 %8398
  store i64 %8405, i64* %8403, align 8
  store %struct.Memory* %loadMem_41278c, %struct.Memory** %MEMORY
  %loadBr_41278c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41278c = icmp eq i8 %loadBr_41278c, 1
  br i1 %cmpBr_41278c, label %block_.L_412874, label %block_.L_412792

block_.L_412792:                                  ; preds = %block_41275a, %block_.L_412740
  %loadMem_412792 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 33
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %8408 to i64*
  %8409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8410 = getelementptr inbounds %struct.GPR, %struct.GPR* %8409, i32 0, i32 1
  %8411 = getelementptr inbounds %struct.Reg, %struct.Reg* %8410, i32 0, i32 0
  %RAX.i388 = bitcast %union.anon* %8411 to i64*
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8413 = getelementptr inbounds %struct.GPR, %struct.GPR* %8412, i32 0, i32 15
  %8414 = getelementptr inbounds %struct.Reg, %struct.Reg* %8413, i32 0, i32 0
  %RBP.i389 = bitcast %union.anon* %8414 to i64*
  %8415 = load i64, i64* %RBP.i389
  %8416 = sub i64 %8415, 40
  %8417 = load i64, i64* %PC.i387
  %8418 = add i64 %8417, 3
  store i64 %8418, i64* %PC.i387
  %8419 = inttoptr i64 %8416 to i32*
  %8420 = load i32, i32* %8419
  %8421 = zext i32 %8420 to i64
  store i64 %8421, i64* %RAX.i388, align 8
  store %struct.Memory* %loadMem_412792, %struct.Memory** %MEMORY
  %loadMem_412795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 33
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %8424 to i64*
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8426 = getelementptr inbounds %struct.GPR, %struct.GPR* %8425, i32 0, i32 1
  %8427 = getelementptr inbounds %struct.Reg, %struct.Reg* %8426, i32 0, i32 0
  %RAX.i386 = bitcast %union.anon* %8427 to i64*
  %8428 = load i64, i64* %RAX.i386
  %8429 = load i64, i64* %PC.i385
  %8430 = add i64 %8429, 3
  store i64 %8430, i64* %PC.i385
  %8431 = trunc i64 %8428 to i32
  %8432 = sub i32 %8431, 20
  %8433 = zext i32 %8432 to i64
  store i64 %8433, i64* %RAX.i386, align 8
  %8434 = icmp ult i32 %8431, 20
  %8435 = zext i1 %8434 to i8
  %8436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8435, i8* %8436, align 1
  %8437 = and i32 %8432, 255
  %8438 = call i32 @llvm.ctpop.i32(i32 %8437)
  %8439 = trunc i32 %8438 to i8
  %8440 = and i8 %8439, 1
  %8441 = xor i8 %8440, 1
  %8442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8441, i8* %8442, align 1
  %8443 = xor i64 20, %8428
  %8444 = trunc i64 %8443 to i32
  %8445 = xor i32 %8444, %8432
  %8446 = lshr i32 %8445, 4
  %8447 = trunc i32 %8446 to i8
  %8448 = and i8 %8447, 1
  %8449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8448, i8* %8449, align 1
  %8450 = icmp eq i32 %8432, 0
  %8451 = zext i1 %8450 to i8
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8451, i8* %8452, align 1
  %8453 = lshr i32 %8432, 31
  %8454 = trunc i32 %8453 to i8
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8454, i8* %8455, align 1
  %8456 = lshr i32 %8431, 31
  %8457 = xor i32 %8453, %8456
  %8458 = add i32 %8457, %8456
  %8459 = icmp eq i32 %8458, 2
  %8460 = zext i1 %8459 to i8
  %8461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8460, i8* %8461, align 1
  store %struct.Memory* %loadMem_412795, %struct.Memory** %MEMORY
  %loadMem_412798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8463 = getelementptr inbounds %struct.GPR, %struct.GPR* %8462, i32 0, i32 33
  %8464 = getelementptr inbounds %struct.Reg, %struct.Reg* %8463, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %8464 to i64*
  %8465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8466 = getelementptr inbounds %struct.GPR, %struct.GPR* %8465, i32 0, i32 1
  %8467 = getelementptr inbounds %struct.Reg, %struct.Reg* %8466, i32 0, i32 0
  %EAX.i383 = bitcast %union.anon* %8467 to i32*
  %8468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8469 = getelementptr inbounds %struct.GPR, %struct.GPR* %8468, i32 0, i32 5
  %8470 = getelementptr inbounds %struct.Reg, %struct.Reg* %8469, i32 0, i32 0
  %RCX.i384 = bitcast %union.anon* %8470 to i64*
  %8471 = load i32, i32* %EAX.i383
  %8472 = zext i32 %8471 to i64
  %8473 = load i64, i64* %PC.i382
  %8474 = add i64 %8473, 3
  store i64 %8474, i64* %PC.i382
  %8475 = shl i64 %8472, 32
  %8476 = ashr exact i64 %8475, 32
  store i64 %8476, i64* %RCX.i384, align 8
  store %struct.Memory* %loadMem_412798, %struct.Memory** %MEMORY
  %loadMem_41279b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8478 = getelementptr inbounds %struct.GPR, %struct.GPR* %8477, i32 0, i32 33
  %8479 = getelementptr inbounds %struct.Reg, %struct.Reg* %8478, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %8479 to i64*
  %8480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8481 = getelementptr inbounds %struct.GPR, %struct.GPR* %8480, i32 0, i32 1
  %8482 = getelementptr inbounds %struct.Reg, %struct.Reg* %8481, i32 0, i32 0
  %RAX.i380 = bitcast %union.anon* %8482 to i64*
  %8483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8484 = getelementptr inbounds %struct.GPR, %struct.GPR* %8483, i32 0, i32 5
  %8485 = getelementptr inbounds %struct.Reg, %struct.Reg* %8484, i32 0, i32 0
  %RCX.i381 = bitcast %union.anon* %8485 to i64*
  %8486 = load i64, i64* %RCX.i381
  %8487 = add i64 %8486, 12099168
  %8488 = load i64, i64* %PC.i379
  %8489 = add i64 %8488, 8
  store i64 %8489, i64* %PC.i379
  %8490 = inttoptr i64 %8487 to i8*
  %8491 = load i8, i8* %8490
  %8492 = zext i8 %8491 to i64
  store i64 %8492, i64* %RAX.i380, align 8
  store %struct.Memory* %loadMem_41279b, %struct.Memory** %MEMORY
  %loadMem_4127a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 33
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %8495 to i64*
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8497 = getelementptr inbounds %struct.GPR, %struct.GPR* %8496, i32 0, i32 1
  %8498 = getelementptr inbounds %struct.Reg, %struct.Reg* %8497, i32 0, i32 0
  %EAX.i377 = bitcast %union.anon* %8498 to i32*
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8500 = getelementptr inbounds %struct.GPR, %struct.GPR* %8499, i32 0, i32 15
  %8501 = getelementptr inbounds %struct.Reg, %struct.Reg* %8500, i32 0, i32 0
  %RBP.i378 = bitcast %union.anon* %8501 to i64*
  %8502 = load i32, i32* %EAX.i377
  %8503 = zext i32 %8502 to i64
  %8504 = load i64, i64* %RBP.i378
  %8505 = sub i64 %8504, 12
  %8506 = load i64, i64* %PC.i376
  %8507 = add i64 %8506, 3
  store i64 %8507, i64* %PC.i376
  %8508 = inttoptr i64 %8505 to i32*
  %8509 = load i32, i32* %8508
  %8510 = sub i32 %8502, %8509
  %8511 = icmp ult i32 %8502, %8509
  %8512 = zext i1 %8511 to i8
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8512, i8* %8513, align 1
  %8514 = and i32 %8510, 255
  %8515 = call i32 @llvm.ctpop.i32(i32 %8514)
  %8516 = trunc i32 %8515 to i8
  %8517 = and i8 %8516, 1
  %8518 = xor i8 %8517, 1
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8518, i8* %8519, align 1
  %8520 = xor i32 %8509, %8502
  %8521 = xor i32 %8520, %8510
  %8522 = lshr i32 %8521, 4
  %8523 = trunc i32 %8522 to i8
  %8524 = and i8 %8523, 1
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8524, i8* %8525, align 1
  %8526 = icmp eq i32 %8510, 0
  %8527 = zext i1 %8526 to i8
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8527, i8* %8528, align 1
  %8529 = lshr i32 %8510, 31
  %8530 = trunc i32 %8529 to i8
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8530, i8* %8531, align 1
  %8532 = lshr i32 %8502, 31
  %8533 = lshr i32 %8509, 31
  %8534 = xor i32 %8533, %8532
  %8535 = xor i32 %8529, %8532
  %8536 = add i32 %8535, %8534
  %8537 = icmp eq i32 %8536, 2
  %8538 = zext i1 %8537 to i8
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8538, i8* %8539, align 1
  store %struct.Memory* %loadMem_4127a3, %struct.Memory** %MEMORY
  %loadMem_4127a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8541 = getelementptr inbounds %struct.GPR, %struct.GPR* %8540, i32 0, i32 33
  %8542 = getelementptr inbounds %struct.Reg, %struct.Reg* %8541, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %8542 to i64*
  %8543 = load i64, i64* %PC.i375
  %8544 = add i64 %8543, 62
  %8545 = load i64, i64* %PC.i375
  %8546 = add i64 %8545, 6
  %8547 = load i64, i64* %PC.i375
  %8548 = add i64 %8547, 6
  store i64 %8548, i64* %PC.i375
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8550 = load i8, i8* %8549, align 1
  %8551 = icmp eq i8 %8550, 0
  %8552 = zext i1 %8551 to i8
  store i8 %8552, i8* %BRANCH_TAKEN, align 1
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8554 = select i1 %8551, i64 %8544, i64 %8546
  store i64 %8554, i64* %8553, align 8
  store %struct.Memory* %loadMem_4127a6, %struct.Memory** %MEMORY
  %loadBr_4127a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4127a6 = icmp eq i8 %loadBr_4127a6, 1
  br i1 %cmpBr_4127a6, label %block_.L_4127e4, label %block_4127ac

block_4127ac:                                     ; preds = %block_.L_412792
  %loadMem_4127ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8556 = getelementptr inbounds %struct.GPR, %struct.GPR* %8555, i32 0, i32 33
  %8557 = getelementptr inbounds %struct.Reg, %struct.Reg* %8556, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %8557 to i64*
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8559 = getelementptr inbounds %struct.GPR, %struct.GPR* %8558, i32 0, i32 1
  %8560 = getelementptr inbounds %struct.Reg, %struct.Reg* %8559, i32 0, i32 0
  %RAX.i374 = bitcast %union.anon* %8560 to i64*
  %8561 = load i64, i64* %PC.i373
  %8562 = add i64 %8561, 10
  store i64 %8562, i64* %PC.i373
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i374, align 8
  store %struct.Memory* %loadMem_4127ac, %struct.Memory** %MEMORY
  %loadMem_4127b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8564 = getelementptr inbounds %struct.GPR, %struct.GPR* %8563, i32 0, i32 33
  %8565 = getelementptr inbounds %struct.Reg, %struct.Reg* %8564, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %8565 to i64*
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8567 = getelementptr inbounds %struct.GPR, %struct.GPR* %8566, i32 0, i32 5
  %8568 = getelementptr inbounds %struct.Reg, %struct.Reg* %8567, i32 0, i32 0
  %RCX.i371 = bitcast %union.anon* %8568 to i64*
  %8569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8570 = getelementptr inbounds %struct.GPR, %struct.GPR* %8569, i32 0, i32 15
  %8571 = getelementptr inbounds %struct.Reg, %struct.Reg* %8570, i32 0, i32 0
  %RBP.i372 = bitcast %union.anon* %8571 to i64*
  %8572 = load i64, i64* %RBP.i372
  %8573 = sub i64 %8572, 40
  %8574 = load i64, i64* %PC.i370
  %8575 = add i64 %8574, 3
  store i64 %8575, i64* %PC.i370
  %8576 = inttoptr i64 %8573 to i32*
  %8577 = load i32, i32* %8576
  %8578 = zext i32 %8577 to i64
  store i64 %8578, i64* %RCX.i371, align 8
  store %struct.Memory* %loadMem_4127b6, %struct.Memory** %MEMORY
  %loadMem_4127b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8580 = getelementptr inbounds %struct.GPR, %struct.GPR* %8579, i32 0, i32 33
  %8581 = getelementptr inbounds %struct.Reg, %struct.Reg* %8580, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %8581 to i64*
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8583 = getelementptr inbounds %struct.GPR, %struct.GPR* %8582, i32 0, i32 5
  %8584 = getelementptr inbounds %struct.Reg, %struct.Reg* %8583, i32 0, i32 0
  %RCX.i369 = bitcast %union.anon* %8584 to i64*
  %8585 = load i64, i64* %RCX.i369
  %8586 = load i64, i64* %PC.i368
  %8587 = add i64 %8586, 3
  store i64 %8587, i64* %PC.i368
  %8588 = trunc i64 %8585 to i32
  %8589 = sub i32 %8588, 20
  %8590 = zext i32 %8589 to i64
  store i64 %8590, i64* %RCX.i369, align 8
  %8591 = icmp ult i32 %8588, 20
  %8592 = zext i1 %8591 to i8
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8592, i8* %8593, align 1
  %8594 = and i32 %8589, 255
  %8595 = call i32 @llvm.ctpop.i32(i32 %8594)
  %8596 = trunc i32 %8595 to i8
  %8597 = and i8 %8596, 1
  %8598 = xor i8 %8597, 1
  %8599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8598, i8* %8599, align 1
  %8600 = xor i64 20, %8585
  %8601 = trunc i64 %8600 to i32
  %8602 = xor i32 %8601, %8589
  %8603 = lshr i32 %8602, 4
  %8604 = trunc i32 %8603 to i8
  %8605 = and i8 %8604, 1
  %8606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8605, i8* %8606, align 1
  %8607 = icmp eq i32 %8589, 0
  %8608 = zext i1 %8607 to i8
  %8609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8608, i8* %8609, align 1
  %8610 = lshr i32 %8589, 31
  %8611 = trunc i32 %8610 to i8
  %8612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8611, i8* %8612, align 1
  %8613 = lshr i32 %8588, 31
  %8614 = xor i32 %8610, %8613
  %8615 = add i32 %8614, %8613
  %8616 = icmp eq i32 %8615, 2
  %8617 = zext i1 %8616 to i8
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8617, i8* %8618, align 1
  store %struct.Memory* %loadMem_4127b9, %struct.Memory** %MEMORY
  %loadMem_4127bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8620 = getelementptr inbounds %struct.GPR, %struct.GPR* %8619, i32 0, i32 33
  %8621 = getelementptr inbounds %struct.Reg, %struct.Reg* %8620, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %8621 to i64*
  %8622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8623 = getelementptr inbounds %struct.GPR, %struct.GPR* %8622, i32 0, i32 5
  %8624 = getelementptr inbounds %struct.Reg, %struct.Reg* %8623, i32 0, i32 0
  %ECX.i366 = bitcast %union.anon* %8624 to i32*
  %8625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8626 = getelementptr inbounds %struct.GPR, %struct.GPR* %8625, i32 0, i32 7
  %8627 = getelementptr inbounds %struct.Reg, %struct.Reg* %8626, i32 0, i32 0
  %RDX.i367 = bitcast %union.anon* %8627 to i64*
  %8628 = load i32, i32* %ECX.i366
  %8629 = zext i32 %8628 to i64
  %8630 = load i64, i64* %PC.i365
  %8631 = add i64 %8630, 3
  store i64 %8631, i64* %PC.i365
  %8632 = shl i64 %8629, 32
  %8633 = ashr exact i64 %8632, 32
  store i64 %8633, i64* %RDX.i367, align 8
  store %struct.Memory* %loadMem_4127bc, %struct.Memory** %MEMORY
  %loadMem_4127bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8635 = getelementptr inbounds %struct.GPR, %struct.GPR* %8634, i32 0, i32 33
  %8636 = getelementptr inbounds %struct.Reg, %struct.Reg* %8635, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %8636 to i64*
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8638 = getelementptr inbounds %struct.GPR, %struct.GPR* %8637, i32 0, i32 7
  %8639 = getelementptr inbounds %struct.Reg, %struct.Reg* %8638, i32 0, i32 0
  %RDX.i364 = bitcast %union.anon* %8639 to i64*
  %8640 = load i64, i64* %RDX.i364
  %8641 = mul i64 %8640, 4
  %8642 = add i64 %8641, 11187184
  %8643 = load i64, i64* %PC.i363
  %8644 = add i64 %8643, 8
  store i64 %8644, i64* %PC.i363
  %8645 = inttoptr i64 %8642 to i32*
  %8646 = load i32, i32* %8645
  %8647 = sext i32 %8646 to i64
  store i64 %8647, i64* %RDX.i364, align 8
  store %struct.Memory* %loadMem_4127bf, %struct.Memory** %MEMORY
  %loadMem_4127c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8649 = getelementptr inbounds %struct.GPR, %struct.GPR* %8648, i32 0, i32 33
  %8650 = getelementptr inbounds %struct.Reg, %struct.Reg* %8649, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %8650 to i64*
  %8651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8652 = getelementptr inbounds %struct.GPR, %struct.GPR* %8651, i32 0, i32 7
  %8653 = getelementptr inbounds %struct.Reg, %struct.Reg* %8652, i32 0, i32 0
  %RDX.i362 = bitcast %union.anon* %8653 to i64*
  %8654 = load i64, i64* %RDX.i362
  %8655 = load i64, i64* %PC.i361
  %8656 = add i64 %8655, 7
  store i64 %8656, i64* %PC.i361
  %8657 = sext i64 %8654 to i128
  %8658 = and i128 %8657, -18446744073709551616
  %8659 = zext i64 %8654 to i128
  %8660 = or i128 %8658, %8659
  %8661 = mul i128 744, %8660
  %8662 = trunc i128 %8661 to i64
  store i64 %8662, i64* %RDX.i362, align 8
  %8663 = sext i64 %8662 to i128
  %8664 = icmp ne i128 %8663, %8661
  %8665 = zext i1 %8664 to i8
  %8666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8665, i8* %8666, align 1
  %8667 = trunc i128 %8661 to i32
  %8668 = and i32 %8667, 255
  %8669 = call i32 @llvm.ctpop.i32(i32 %8668)
  %8670 = trunc i32 %8669 to i8
  %8671 = and i8 %8670, 1
  %8672 = xor i8 %8671, 1
  %8673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8672, i8* %8673, align 1
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8674, align 1
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8675, align 1
  %8676 = lshr i64 %8662, 63
  %8677 = trunc i64 %8676 to i8
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8677, i8* %8678, align 1
  %8679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8665, i8* %8679, align 1
  store %struct.Memory* %loadMem_4127c7, %struct.Memory** %MEMORY
  %loadMem_4127ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %8680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8681 = getelementptr inbounds %struct.GPR, %struct.GPR* %8680, i32 0, i32 33
  %8682 = getelementptr inbounds %struct.Reg, %struct.Reg* %8681, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %8682 to i64*
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8684 = getelementptr inbounds %struct.GPR, %struct.GPR* %8683, i32 0, i32 1
  %8685 = getelementptr inbounds %struct.Reg, %struct.Reg* %8684, i32 0, i32 0
  %RAX.i359 = bitcast %union.anon* %8685 to i64*
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8687 = getelementptr inbounds %struct.GPR, %struct.GPR* %8686, i32 0, i32 7
  %8688 = getelementptr inbounds %struct.Reg, %struct.Reg* %8687, i32 0, i32 0
  %RDX.i360 = bitcast %union.anon* %8688 to i64*
  %8689 = load i64, i64* %RAX.i359
  %8690 = load i64, i64* %RDX.i360
  %8691 = load i64, i64* %PC.i358
  %8692 = add i64 %8691, 3
  store i64 %8692, i64* %PC.i358
  %8693 = add i64 %8690, %8689
  store i64 %8693, i64* %RAX.i359, align 8
  %8694 = icmp ult i64 %8693, %8689
  %8695 = icmp ult i64 %8693, %8690
  %8696 = or i1 %8694, %8695
  %8697 = zext i1 %8696 to i8
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8697, i8* %8698, align 1
  %8699 = trunc i64 %8693 to i32
  %8700 = and i32 %8699, 255
  %8701 = call i32 @llvm.ctpop.i32(i32 %8700)
  %8702 = trunc i32 %8701 to i8
  %8703 = and i8 %8702, 1
  %8704 = xor i8 %8703, 1
  %8705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8704, i8* %8705, align 1
  %8706 = xor i64 %8690, %8689
  %8707 = xor i64 %8706, %8693
  %8708 = lshr i64 %8707, 4
  %8709 = trunc i64 %8708 to i8
  %8710 = and i8 %8709, 1
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8710, i8* %8711, align 1
  %8712 = icmp eq i64 %8693, 0
  %8713 = zext i1 %8712 to i8
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8713, i8* %8714, align 1
  %8715 = lshr i64 %8693, 63
  %8716 = trunc i64 %8715 to i8
  %8717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8716, i8* %8717, align 1
  %8718 = lshr i64 %8689, 63
  %8719 = lshr i64 %8690, 63
  %8720 = xor i64 %8715, %8718
  %8721 = xor i64 %8715, %8719
  %8722 = add i64 %8720, %8721
  %8723 = icmp eq i64 %8722, 2
  %8724 = zext i1 %8723 to i8
  %8725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8724, i8* %8725, align 1
  store %struct.Memory* %loadMem_4127ce, %struct.Memory** %MEMORY
  %loadMem_4127d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8727 = getelementptr inbounds %struct.GPR, %struct.GPR* %8726, i32 0, i32 33
  %8728 = getelementptr inbounds %struct.Reg, %struct.Reg* %8727, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %8728 to i64*
  %8729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8730 = getelementptr inbounds %struct.GPR, %struct.GPR* %8729, i32 0, i32 1
  %8731 = getelementptr inbounds %struct.Reg, %struct.Reg* %8730, i32 0, i32 0
  %RAX.i356 = bitcast %union.anon* %8731 to i64*
  %8732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8733 = getelementptr inbounds %struct.GPR, %struct.GPR* %8732, i32 0, i32 5
  %8734 = getelementptr inbounds %struct.Reg, %struct.Reg* %8733, i32 0, i32 0
  %RCX.i357 = bitcast %union.anon* %8734 to i64*
  %8735 = load i64, i64* %RAX.i356
  %8736 = add i64 %8735, 740
  %8737 = load i64, i64* %PC.i355
  %8738 = add i64 %8737, 6
  store i64 %8738, i64* %PC.i355
  %8739 = inttoptr i64 %8736 to i32*
  %8740 = load i32, i32* %8739
  %8741 = zext i32 %8740 to i64
  store i64 %8741, i64* %RCX.i357, align 8
  store %struct.Memory* %loadMem_4127d1, %struct.Memory** %MEMORY
  %loadMem_4127d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8743 = getelementptr inbounds %struct.GPR, %struct.GPR* %8742, i32 0, i32 33
  %8744 = getelementptr inbounds %struct.Reg, %struct.Reg* %8743, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %8744 to i64*
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8746 = getelementptr inbounds %struct.GPR, %struct.GPR* %8745, i32 0, i32 5
  %8747 = getelementptr inbounds %struct.Reg, %struct.Reg* %8746, i32 0, i32 0
  %ECX.i354 = bitcast %union.anon* %8747 to i32*
  %8748 = load i32, i32* %ECX.i354
  %8749 = zext i32 %8748 to i64
  %8750 = load i64, i64* %PC.i353
  %8751 = add i64 %8750, 7
  store i64 %8751, i64* %PC.i353
  %8752 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %8753 = sub i32 %8748, %8752
  %8754 = icmp ult i32 %8748, %8752
  %8755 = zext i1 %8754 to i8
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8755, i8* %8756, align 1
  %8757 = and i32 %8753, 255
  %8758 = call i32 @llvm.ctpop.i32(i32 %8757)
  %8759 = trunc i32 %8758 to i8
  %8760 = and i8 %8759, 1
  %8761 = xor i8 %8760, 1
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8761, i8* %8762, align 1
  %8763 = xor i32 %8752, %8748
  %8764 = xor i32 %8763, %8753
  %8765 = lshr i32 %8764, 4
  %8766 = trunc i32 %8765 to i8
  %8767 = and i8 %8766, 1
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8767, i8* %8768, align 1
  %8769 = icmp eq i32 %8753, 0
  %8770 = zext i1 %8769 to i8
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8770, i8* %8771, align 1
  %8772 = lshr i32 %8753, 31
  %8773 = trunc i32 %8772 to i8
  %8774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8773, i8* %8774, align 1
  %8775 = lshr i32 %8748, 31
  %8776 = lshr i32 %8752, 31
  %8777 = xor i32 %8776, %8775
  %8778 = xor i32 %8772, %8775
  %8779 = add i32 %8778, %8777
  %8780 = icmp eq i32 %8779, 2
  %8781 = zext i1 %8780 to i8
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8781, i8* %8782, align 1
  store %struct.Memory* %loadMem_4127d7, %struct.Memory** %MEMORY
  %loadMem_4127de = load %struct.Memory*, %struct.Memory** %MEMORY
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8784 = getelementptr inbounds %struct.GPR, %struct.GPR* %8783, i32 0, i32 33
  %8785 = getelementptr inbounds %struct.Reg, %struct.Reg* %8784, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %8785 to i64*
  %8786 = load i64, i64* %PC.i352
  %8787 = add i64 %8786, 150
  %8788 = load i64, i64* %PC.i352
  %8789 = add i64 %8788, 6
  %8790 = load i64, i64* %PC.i352
  %8791 = add i64 %8790, 6
  store i64 %8791, i64* %PC.i352
  %8792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8793 = load i8, i8* %8792, align 1
  store i8 %8793, i8* %BRANCH_TAKEN, align 1
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8795 = icmp ne i8 %8793, 0
  %8796 = select i1 %8795, i64 %8787, i64 %8789
  store i64 %8796, i64* %8794, align 8
  store %struct.Memory* %loadMem_4127de, %struct.Memory** %MEMORY
  %loadBr_4127de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4127de = icmp eq i8 %loadBr_4127de, 1
  br i1 %cmpBr_4127de, label %block_.L_412874, label %block_.L_4127e4

block_.L_4127e4:                                  ; preds = %block_4127ac, %block_.L_412792
  %loadMem_4127e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8798 = getelementptr inbounds %struct.GPR, %struct.GPR* %8797, i32 0, i32 33
  %8799 = getelementptr inbounds %struct.Reg, %struct.Reg* %8798, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %8799 to i64*
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8801 = getelementptr inbounds %struct.GPR, %struct.GPR* %8800, i32 0, i32 1
  %8802 = getelementptr inbounds %struct.Reg, %struct.Reg* %8801, i32 0, i32 0
  %RAX.i350 = bitcast %union.anon* %8802 to i64*
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8804 = getelementptr inbounds %struct.GPR, %struct.GPR* %8803, i32 0, i32 15
  %8805 = getelementptr inbounds %struct.Reg, %struct.Reg* %8804, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %8805 to i64*
  %8806 = load i64, i64* %RBP.i351
  %8807 = sub i64 %8806, 40
  %8808 = load i64, i64* %PC.i349
  %8809 = add i64 %8808, 3
  store i64 %8809, i64* %PC.i349
  %8810 = inttoptr i64 %8807 to i32*
  %8811 = load i32, i32* %8810
  %8812 = zext i32 %8811 to i64
  store i64 %8812, i64* %RAX.i350, align 8
  store %struct.Memory* %loadMem_4127e4, %struct.Memory** %MEMORY
  %loadMem_4127e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8814 = getelementptr inbounds %struct.GPR, %struct.GPR* %8813, i32 0, i32 33
  %8815 = getelementptr inbounds %struct.Reg, %struct.Reg* %8814, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %8815 to i64*
  %8816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8817 = getelementptr inbounds %struct.GPR, %struct.GPR* %8816, i32 0, i32 1
  %8818 = getelementptr inbounds %struct.Reg, %struct.Reg* %8817, i32 0, i32 0
  %RAX.i348 = bitcast %union.anon* %8818 to i64*
  %8819 = load i64, i64* %RAX.i348
  %8820 = load i64, i64* %PC.i347
  %8821 = add i64 %8820, 3
  store i64 %8821, i64* %PC.i347
  %8822 = trunc i64 %8819 to i32
  %8823 = add i32 1, %8822
  %8824 = zext i32 %8823 to i64
  store i64 %8824, i64* %RAX.i348, align 8
  %8825 = icmp ult i32 %8823, %8822
  %8826 = icmp ult i32 %8823, 1
  %8827 = or i1 %8825, %8826
  %8828 = zext i1 %8827 to i8
  %8829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8828, i8* %8829, align 1
  %8830 = and i32 %8823, 255
  %8831 = call i32 @llvm.ctpop.i32(i32 %8830)
  %8832 = trunc i32 %8831 to i8
  %8833 = and i8 %8832, 1
  %8834 = xor i8 %8833, 1
  %8835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8834, i8* %8835, align 1
  %8836 = xor i64 1, %8819
  %8837 = trunc i64 %8836 to i32
  %8838 = xor i32 %8837, %8823
  %8839 = lshr i32 %8838, 4
  %8840 = trunc i32 %8839 to i8
  %8841 = and i8 %8840, 1
  %8842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8841, i8* %8842, align 1
  %8843 = icmp eq i32 %8823, 0
  %8844 = zext i1 %8843 to i8
  %8845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8844, i8* %8845, align 1
  %8846 = lshr i32 %8823, 31
  %8847 = trunc i32 %8846 to i8
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8847, i8* %8848, align 1
  %8849 = lshr i32 %8822, 31
  %8850 = xor i32 %8846, %8849
  %8851 = add i32 %8850, %8846
  %8852 = icmp eq i32 %8851, 2
  %8853 = zext i1 %8852 to i8
  %8854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8853, i8* %8854, align 1
  store %struct.Memory* %loadMem_4127e7, %struct.Memory** %MEMORY
  %loadMem_4127ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8856 = getelementptr inbounds %struct.GPR, %struct.GPR* %8855, i32 0, i32 33
  %8857 = getelementptr inbounds %struct.Reg, %struct.Reg* %8856, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %8857 to i64*
  %8858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8859 = getelementptr inbounds %struct.GPR, %struct.GPR* %8858, i32 0, i32 1
  %8860 = getelementptr inbounds %struct.Reg, %struct.Reg* %8859, i32 0, i32 0
  %EAX.i345 = bitcast %union.anon* %8860 to i32*
  %8861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8862 = getelementptr inbounds %struct.GPR, %struct.GPR* %8861, i32 0, i32 5
  %8863 = getelementptr inbounds %struct.Reg, %struct.Reg* %8862, i32 0, i32 0
  %RCX.i346 = bitcast %union.anon* %8863 to i64*
  %8864 = load i32, i32* %EAX.i345
  %8865 = zext i32 %8864 to i64
  %8866 = load i64, i64* %PC.i344
  %8867 = add i64 %8866, 3
  store i64 %8867, i64* %PC.i344
  %8868 = shl i64 %8865, 32
  %8869 = ashr exact i64 %8868, 32
  store i64 %8869, i64* %RCX.i346, align 8
  store %struct.Memory* %loadMem_4127ea, %struct.Memory** %MEMORY
  %loadMem_4127ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8871 = getelementptr inbounds %struct.GPR, %struct.GPR* %8870, i32 0, i32 33
  %8872 = getelementptr inbounds %struct.Reg, %struct.Reg* %8871, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %8872 to i64*
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8874 = getelementptr inbounds %struct.GPR, %struct.GPR* %8873, i32 0, i32 1
  %8875 = getelementptr inbounds %struct.Reg, %struct.Reg* %8874, i32 0, i32 0
  %RAX.i342 = bitcast %union.anon* %8875 to i64*
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8877 = getelementptr inbounds %struct.GPR, %struct.GPR* %8876, i32 0, i32 5
  %8878 = getelementptr inbounds %struct.Reg, %struct.Reg* %8877, i32 0, i32 0
  %RCX.i343 = bitcast %union.anon* %8878 to i64*
  %8879 = load i64, i64* %RCX.i343
  %8880 = add i64 %8879, 12099168
  %8881 = load i64, i64* %PC.i341
  %8882 = add i64 %8881, 8
  store i64 %8882, i64* %PC.i341
  %8883 = inttoptr i64 %8880 to i8*
  %8884 = load i8, i8* %8883
  %8885 = zext i8 %8884 to i64
  store i64 %8885, i64* %RAX.i342, align 8
  store %struct.Memory* %loadMem_4127ed, %struct.Memory** %MEMORY
  %loadMem_4127f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8887 = getelementptr inbounds %struct.GPR, %struct.GPR* %8886, i32 0, i32 33
  %8888 = getelementptr inbounds %struct.Reg, %struct.Reg* %8887, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %8888 to i64*
  %8889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8890 = getelementptr inbounds %struct.GPR, %struct.GPR* %8889, i32 0, i32 1
  %8891 = getelementptr inbounds %struct.Reg, %struct.Reg* %8890, i32 0, i32 0
  %EAX.i339 = bitcast %union.anon* %8891 to i32*
  %8892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8893 = getelementptr inbounds %struct.GPR, %struct.GPR* %8892, i32 0, i32 15
  %8894 = getelementptr inbounds %struct.Reg, %struct.Reg* %8893, i32 0, i32 0
  %RBP.i340 = bitcast %union.anon* %8894 to i64*
  %8895 = load i32, i32* %EAX.i339
  %8896 = zext i32 %8895 to i64
  %8897 = load i64, i64* %RBP.i340
  %8898 = sub i64 %8897, 12
  %8899 = load i64, i64* %PC.i338
  %8900 = add i64 %8899, 3
  store i64 %8900, i64* %PC.i338
  %8901 = inttoptr i64 %8898 to i32*
  %8902 = load i32, i32* %8901
  %8903 = sub i32 %8895, %8902
  %8904 = icmp ult i32 %8895, %8902
  %8905 = zext i1 %8904 to i8
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8905, i8* %8906, align 1
  %8907 = and i32 %8903, 255
  %8908 = call i32 @llvm.ctpop.i32(i32 %8907)
  %8909 = trunc i32 %8908 to i8
  %8910 = and i8 %8909, 1
  %8911 = xor i8 %8910, 1
  %8912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8911, i8* %8912, align 1
  %8913 = xor i32 %8902, %8895
  %8914 = xor i32 %8913, %8903
  %8915 = lshr i32 %8914, 4
  %8916 = trunc i32 %8915 to i8
  %8917 = and i8 %8916, 1
  %8918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8917, i8* %8918, align 1
  %8919 = icmp eq i32 %8903, 0
  %8920 = zext i1 %8919 to i8
  %8921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8920, i8* %8921, align 1
  %8922 = lshr i32 %8903, 31
  %8923 = trunc i32 %8922 to i8
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8923, i8* %8924, align 1
  %8925 = lshr i32 %8895, 31
  %8926 = lshr i32 %8902, 31
  %8927 = xor i32 %8926, %8925
  %8928 = xor i32 %8922, %8925
  %8929 = add i32 %8928, %8927
  %8930 = icmp eq i32 %8929, 2
  %8931 = zext i1 %8930 to i8
  %8932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8931, i8* %8932, align 1
  store %struct.Memory* %loadMem_4127f5, %struct.Memory** %MEMORY
  %loadMem_4127f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8934 = getelementptr inbounds %struct.GPR, %struct.GPR* %8933, i32 0, i32 33
  %8935 = getelementptr inbounds %struct.Reg, %struct.Reg* %8934, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %8935 to i64*
  %8936 = load i64, i64* %PC.i337
  %8937 = add i64 %8936, 62
  %8938 = load i64, i64* %PC.i337
  %8939 = add i64 %8938, 6
  %8940 = load i64, i64* %PC.i337
  %8941 = add i64 %8940, 6
  store i64 %8941, i64* %PC.i337
  %8942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8943 = load i8, i8* %8942, align 1
  %8944 = icmp eq i8 %8943, 0
  %8945 = zext i1 %8944 to i8
  store i8 %8945, i8* %BRANCH_TAKEN, align 1
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8947 = select i1 %8944, i64 %8937, i64 %8939
  store i64 %8947, i64* %8946, align 8
  store %struct.Memory* %loadMem_4127f8, %struct.Memory** %MEMORY
  %loadBr_4127f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4127f8 = icmp eq i8 %loadBr_4127f8, 1
  br i1 %cmpBr_4127f8, label %block_.L_412836, label %block_4127fe

block_4127fe:                                     ; preds = %block_.L_4127e4
  %loadMem_4127fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %8948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8949 = getelementptr inbounds %struct.GPR, %struct.GPR* %8948, i32 0, i32 33
  %8950 = getelementptr inbounds %struct.Reg, %struct.Reg* %8949, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %8950 to i64*
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8952 = getelementptr inbounds %struct.GPR, %struct.GPR* %8951, i32 0, i32 1
  %8953 = getelementptr inbounds %struct.Reg, %struct.Reg* %8952, i32 0, i32 0
  %RAX.i336 = bitcast %union.anon* %8953 to i64*
  %8954 = load i64, i64* %PC.i335
  %8955 = add i64 %8954, 10
  store i64 %8955, i64* %PC.i335
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i336, align 8
  store %struct.Memory* %loadMem_4127fe, %struct.Memory** %MEMORY
  %loadMem_412808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8957 = getelementptr inbounds %struct.GPR, %struct.GPR* %8956, i32 0, i32 33
  %8958 = getelementptr inbounds %struct.Reg, %struct.Reg* %8957, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %8958 to i64*
  %8959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8960 = getelementptr inbounds %struct.GPR, %struct.GPR* %8959, i32 0, i32 5
  %8961 = getelementptr inbounds %struct.Reg, %struct.Reg* %8960, i32 0, i32 0
  %RCX.i333 = bitcast %union.anon* %8961 to i64*
  %8962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8963 = getelementptr inbounds %struct.GPR, %struct.GPR* %8962, i32 0, i32 15
  %8964 = getelementptr inbounds %struct.Reg, %struct.Reg* %8963, i32 0, i32 0
  %RBP.i334 = bitcast %union.anon* %8964 to i64*
  %8965 = load i64, i64* %RBP.i334
  %8966 = sub i64 %8965, 40
  %8967 = load i64, i64* %PC.i332
  %8968 = add i64 %8967, 3
  store i64 %8968, i64* %PC.i332
  %8969 = inttoptr i64 %8966 to i32*
  %8970 = load i32, i32* %8969
  %8971 = zext i32 %8970 to i64
  store i64 %8971, i64* %RCX.i333, align 8
  store %struct.Memory* %loadMem_412808, %struct.Memory** %MEMORY
  %loadMem_41280b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8973 = getelementptr inbounds %struct.GPR, %struct.GPR* %8972, i32 0, i32 33
  %8974 = getelementptr inbounds %struct.Reg, %struct.Reg* %8973, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %8974 to i64*
  %8975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8976 = getelementptr inbounds %struct.GPR, %struct.GPR* %8975, i32 0, i32 5
  %8977 = getelementptr inbounds %struct.Reg, %struct.Reg* %8976, i32 0, i32 0
  %RCX.i331 = bitcast %union.anon* %8977 to i64*
  %8978 = load i64, i64* %RCX.i331
  %8979 = load i64, i64* %PC.i330
  %8980 = add i64 %8979, 3
  store i64 %8980, i64* %PC.i330
  %8981 = trunc i64 %8978 to i32
  %8982 = add i32 1, %8981
  %8983 = zext i32 %8982 to i64
  store i64 %8983, i64* %RCX.i331, align 8
  %8984 = icmp ult i32 %8982, %8981
  %8985 = icmp ult i32 %8982, 1
  %8986 = or i1 %8984, %8985
  %8987 = zext i1 %8986 to i8
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8987, i8* %8988, align 1
  %8989 = and i32 %8982, 255
  %8990 = call i32 @llvm.ctpop.i32(i32 %8989)
  %8991 = trunc i32 %8990 to i8
  %8992 = and i8 %8991, 1
  %8993 = xor i8 %8992, 1
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8993, i8* %8994, align 1
  %8995 = xor i64 1, %8978
  %8996 = trunc i64 %8995 to i32
  %8997 = xor i32 %8996, %8982
  %8998 = lshr i32 %8997, 4
  %8999 = trunc i32 %8998 to i8
  %9000 = and i8 %8999, 1
  %9001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9000, i8* %9001, align 1
  %9002 = icmp eq i32 %8982, 0
  %9003 = zext i1 %9002 to i8
  %9004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9003, i8* %9004, align 1
  %9005 = lshr i32 %8982, 31
  %9006 = trunc i32 %9005 to i8
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9006, i8* %9007, align 1
  %9008 = lshr i32 %8981, 31
  %9009 = xor i32 %9005, %9008
  %9010 = add i32 %9009, %9005
  %9011 = icmp eq i32 %9010, 2
  %9012 = zext i1 %9011 to i8
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9012, i8* %9013, align 1
  store %struct.Memory* %loadMem_41280b, %struct.Memory** %MEMORY
  %loadMem_41280e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9015 = getelementptr inbounds %struct.GPR, %struct.GPR* %9014, i32 0, i32 33
  %9016 = getelementptr inbounds %struct.Reg, %struct.Reg* %9015, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %9016 to i64*
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9018 = getelementptr inbounds %struct.GPR, %struct.GPR* %9017, i32 0, i32 5
  %9019 = getelementptr inbounds %struct.Reg, %struct.Reg* %9018, i32 0, i32 0
  %ECX.i328 = bitcast %union.anon* %9019 to i32*
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9021 = getelementptr inbounds %struct.GPR, %struct.GPR* %9020, i32 0, i32 7
  %9022 = getelementptr inbounds %struct.Reg, %struct.Reg* %9021, i32 0, i32 0
  %RDX.i329 = bitcast %union.anon* %9022 to i64*
  %9023 = load i32, i32* %ECX.i328
  %9024 = zext i32 %9023 to i64
  %9025 = load i64, i64* %PC.i327
  %9026 = add i64 %9025, 3
  store i64 %9026, i64* %PC.i327
  %9027 = shl i64 %9024, 32
  %9028 = ashr exact i64 %9027, 32
  store i64 %9028, i64* %RDX.i329, align 8
  store %struct.Memory* %loadMem_41280e, %struct.Memory** %MEMORY
  %loadMem_412811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9030 = getelementptr inbounds %struct.GPR, %struct.GPR* %9029, i32 0, i32 33
  %9031 = getelementptr inbounds %struct.Reg, %struct.Reg* %9030, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %9031 to i64*
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 7
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %RDX.i326 = bitcast %union.anon* %9034 to i64*
  %9035 = load i64, i64* %RDX.i326
  %9036 = mul i64 %9035, 4
  %9037 = add i64 %9036, 11187184
  %9038 = load i64, i64* %PC.i325
  %9039 = add i64 %9038, 8
  store i64 %9039, i64* %PC.i325
  %9040 = inttoptr i64 %9037 to i32*
  %9041 = load i32, i32* %9040
  %9042 = sext i32 %9041 to i64
  store i64 %9042, i64* %RDX.i326, align 8
  store %struct.Memory* %loadMem_412811, %struct.Memory** %MEMORY
  %loadMem_412819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9044 = getelementptr inbounds %struct.GPR, %struct.GPR* %9043, i32 0, i32 33
  %9045 = getelementptr inbounds %struct.Reg, %struct.Reg* %9044, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %9045 to i64*
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9047 = getelementptr inbounds %struct.GPR, %struct.GPR* %9046, i32 0, i32 7
  %9048 = getelementptr inbounds %struct.Reg, %struct.Reg* %9047, i32 0, i32 0
  %RDX.i324 = bitcast %union.anon* %9048 to i64*
  %9049 = load i64, i64* %RDX.i324
  %9050 = load i64, i64* %PC.i323
  %9051 = add i64 %9050, 7
  store i64 %9051, i64* %PC.i323
  %9052 = sext i64 %9049 to i128
  %9053 = and i128 %9052, -18446744073709551616
  %9054 = zext i64 %9049 to i128
  %9055 = or i128 %9053, %9054
  %9056 = mul i128 744, %9055
  %9057 = trunc i128 %9056 to i64
  store i64 %9057, i64* %RDX.i324, align 8
  %9058 = sext i64 %9057 to i128
  %9059 = icmp ne i128 %9058, %9056
  %9060 = zext i1 %9059 to i8
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9060, i8* %9061, align 1
  %9062 = trunc i128 %9056 to i32
  %9063 = and i32 %9062, 255
  %9064 = call i32 @llvm.ctpop.i32(i32 %9063)
  %9065 = trunc i32 %9064 to i8
  %9066 = and i8 %9065, 1
  %9067 = xor i8 %9066, 1
  %9068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9067, i8* %9068, align 1
  %9069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9069, align 1
  %9070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9070, align 1
  %9071 = lshr i64 %9057, 63
  %9072 = trunc i64 %9071 to i8
  %9073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9072, i8* %9073, align 1
  %9074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9060, i8* %9074, align 1
  store %struct.Memory* %loadMem_412819, %struct.Memory** %MEMORY
  %loadMem_412820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9076 = getelementptr inbounds %struct.GPR, %struct.GPR* %9075, i32 0, i32 33
  %9077 = getelementptr inbounds %struct.Reg, %struct.Reg* %9076, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %9077 to i64*
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9079 = getelementptr inbounds %struct.GPR, %struct.GPR* %9078, i32 0, i32 1
  %9080 = getelementptr inbounds %struct.Reg, %struct.Reg* %9079, i32 0, i32 0
  %RAX.i321 = bitcast %union.anon* %9080 to i64*
  %9081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9082 = getelementptr inbounds %struct.GPR, %struct.GPR* %9081, i32 0, i32 7
  %9083 = getelementptr inbounds %struct.Reg, %struct.Reg* %9082, i32 0, i32 0
  %RDX.i322 = bitcast %union.anon* %9083 to i64*
  %9084 = load i64, i64* %RAX.i321
  %9085 = load i64, i64* %RDX.i322
  %9086 = load i64, i64* %PC.i320
  %9087 = add i64 %9086, 3
  store i64 %9087, i64* %PC.i320
  %9088 = add i64 %9085, %9084
  store i64 %9088, i64* %RAX.i321, align 8
  %9089 = icmp ult i64 %9088, %9084
  %9090 = icmp ult i64 %9088, %9085
  %9091 = or i1 %9089, %9090
  %9092 = zext i1 %9091 to i8
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9092, i8* %9093, align 1
  %9094 = trunc i64 %9088 to i32
  %9095 = and i32 %9094, 255
  %9096 = call i32 @llvm.ctpop.i32(i32 %9095)
  %9097 = trunc i32 %9096 to i8
  %9098 = and i8 %9097, 1
  %9099 = xor i8 %9098, 1
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9099, i8* %9100, align 1
  %9101 = xor i64 %9085, %9084
  %9102 = xor i64 %9101, %9088
  %9103 = lshr i64 %9102, 4
  %9104 = trunc i64 %9103 to i8
  %9105 = and i8 %9104, 1
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9105, i8* %9106, align 1
  %9107 = icmp eq i64 %9088, 0
  %9108 = zext i1 %9107 to i8
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9108, i8* %9109, align 1
  %9110 = lshr i64 %9088, 63
  %9111 = trunc i64 %9110 to i8
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9111, i8* %9112, align 1
  %9113 = lshr i64 %9084, 63
  %9114 = lshr i64 %9085, 63
  %9115 = xor i64 %9110, %9113
  %9116 = xor i64 %9110, %9114
  %9117 = add i64 %9115, %9116
  %9118 = icmp eq i64 %9117, 2
  %9119 = zext i1 %9118 to i8
  %9120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9119, i8* %9120, align 1
  store %struct.Memory* %loadMem_412820, %struct.Memory** %MEMORY
  %loadMem_412823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9122 = getelementptr inbounds %struct.GPR, %struct.GPR* %9121, i32 0, i32 33
  %9123 = getelementptr inbounds %struct.Reg, %struct.Reg* %9122, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %9123 to i64*
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9125 = getelementptr inbounds %struct.GPR, %struct.GPR* %9124, i32 0, i32 1
  %9126 = getelementptr inbounds %struct.Reg, %struct.Reg* %9125, i32 0, i32 0
  %RAX.i318 = bitcast %union.anon* %9126 to i64*
  %9127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9128 = getelementptr inbounds %struct.GPR, %struct.GPR* %9127, i32 0, i32 5
  %9129 = getelementptr inbounds %struct.Reg, %struct.Reg* %9128, i32 0, i32 0
  %RCX.i319 = bitcast %union.anon* %9129 to i64*
  %9130 = load i64, i64* %RAX.i318
  %9131 = add i64 %9130, 740
  %9132 = load i64, i64* %PC.i317
  %9133 = add i64 %9132, 6
  store i64 %9133, i64* %PC.i317
  %9134 = inttoptr i64 %9131 to i32*
  %9135 = load i32, i32* %9134
  %9136 = zext i32 %9135 to i64
  store i64 %9136, i64* %RCX.i319, align 8
  store %struct.Memory* %loadMem_412823, %struct.Memory** %MEMORY
  %loadMem_412829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9138 = getelementptr inbounds %struct.GPR, %struct.GPR* %9137, i32 0, i32 33
  %9139 = getelementptr inbounds %struct.Reg, %struct.Reg* %9138, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %9139 to i64*
  %9140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9141 = getelementptr inbounds %struct.GPR, %struct.GPR* %9140, i32 0, i32 5
  %9142 = getelementptr inbounds %struct.Reg, %struct.Reg* %9141, i32 0, i32 0
  %ECX.i316 = bitcast %union.anon* %9142 to i32*
  %9143 = load i32, i32* %ECX.i316
  %9144 = zext i32 %9143 to i64
  %9145 = load i64, i64* %PC.i315
  %9146 = add i64 %9145, 7
  store i64 %9146, i64* %PC.i315
  %9147 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %9148 = sub i32 %9143, %9147
  %9149 = icmp ult i32 %9143, %9147
  %9150 = zext i1 %9149 to i8
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9150, i8* %9151, align 1
  %9152 = and i32 %9148, 255
  %9153 = call i32 @llvm.ctpop.i32(i32 %9152)
  %9154 = trunc i32 %9153 to i8
  %9155 = and i8 %9154, 1
  %9156 = xor i8 %9155, 1
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9156, i8* %9157, align 1
  %9158 = xor i32 %9147, %9143
  %9159 = xor i32 %9158, %9148
  %9160 = lshr i32 %9159, 4
  %9161 = trunc i32 %9160 to i8
  %9162 = and i8 %9161, 1
  %9163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9162, i8* %9163, align 1
  %9164 = icmp eq i32 %9148, 0
  %9165 = zext i1 %9164 to i8
  %9166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9165, i8* %9166, align 1
  %9167 = lshr i32 %9148, 31
  %9168 = trunc i32 %9167 to i8
  %9169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9168, i8* %9169, align 1
  %9170 = lshr i32 %9143, 31
  %9171 = lshr i32 %9147, 31
  %9172 = xor i32 %9171, %9170
  %9173 = xor i32 %9167, %9170
  %9174 = add i32 %9173, %9172
  %9175 = icmp eq i32 %9174, 2
  %9176 = zext i1 %9175 to i8
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9176, i8* %9177, align 1
  store %struct.Memory* %loadMem_412829, %struct.Memory** %MEMORY
  %loadMem_412830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9179 = getelementptr inbounds %struct.GPR, %struct.GPR* %9178, i32 0, i32 33
  %9180 = getelementptr inbounds %struct.Reg, %struct.Reg* %9179, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %9180 to i64*
  %9181 = load i64, i64* %PC.i314
  %9182 = add i64 %9181, 68
  %9183 = load i64, i64* %PC.i314
  %9184 = add i64 %9183, 6
  %9185 = load i64, i64* %PC.i314
  %9186 = add i64 %9185, 6
  store i64 %9186, i64* %PC.i314
  %9187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9188 = load i8, i8* %9187, align 1
  store i8 %9188, i8* %BRANCH_TAKEN, align 1
  %9189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9190 = icmp ne i8 %9188, 0
  %9191 = select i1 %9190, i64 %9182, i64 %9184
  store i64 %9191, i64* %9189, align 8
  store %struct.Memory* %loadMem_412830, %struct.Memory** %MEMORY
  %loadBr_412830 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412830 = icmp eq i8 %loadBr_412830, 1
  br i1 %cmpBr_412830, label %block_.L_412874, label %block_.L_412836

block_.L_412836:                                  ; preds = %block_4127fe, %block_.L_4127e4
  %loadMem_412836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9193 = getelementptr inbounds %struct.GPR, %struct.GPR* %9192, i32 0, i32 33
  %9194 = getelementptr inbounds %struct.Reg, %struct.Reg* %9193, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %9194 to i64*
  %9195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9196 = getelementptr inbounds %struct.GPR, %struct.GPR* %9195, i32 0, i32 15
  %9197 = getelementptr inbounds %struct.Reg, %struct.Reg* %9196, i32 0, i32 0
  %RBP.i313 = bitcast %union.anon* %9197 to i64*
  %9198 = load i64, i64* %RBP.i313
  %9199 = sub i64 %9198, 24
  %9200 = load i64, i64* %PC.i312
  %9201 = add i64 %9200, 5
  store i64 %9201, i64* %PC.i312
  %9202 = inttoptr i64 %9199 to i64*
  %9203 = load i64, i64* %9202
  %9204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9204, align 1
  %9205 = trunc i64 %9203 to i32
  %9206 = and i32 %9205, 255
  %9207 = call i32 @llvm.ctpop.i32(i32 %9206)
  %9208 = trunc i32 %9207 to i8
  %9209 = and i8 %9208, 1
  %9210 = xor i8 %9209, 1
  %9211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9210, i8* %9211, align 1
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9212, align 1
  %9213 = icmp eq i64 %9203, 0
  %9214 = zext i1 %9213 to i8
  %9215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9214, i8* %9215, align 1
  %9216 = lshr i64 %9203, 63
  %9217 = trunc i64 %9216 to i8
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9217, i8* %9218, align 1
  %9219 = lshr i64 %9203, 63
  %9220 = xor i64 %9216, %9219
  %9221 = add i64 %9220, %9219
  %9222 = icmp eq i64 %9221, 2
  %9223 = zext i1 %9222 to i8
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9223, i8* %9224, align 1
  store %struct.Memory* %loadMem_412836, %struct.Memory** %MEMORY
  %loadMem_41283b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9226 = getelementptr inbounds %struct.GPR, %struct.GPR* %9225, i32 0, i32 33
  %9227 = getelementptr inbounds %struct.Reg, %struct.Reg* %9226, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %9227 to i64*
  %9228 = load i64, i64* %PC.i311
  %9229 = add i64 %9228, 20
  %9230 = load i64, i64* %PC.i311
  %9231 = add i64 %9230, 6
  %9232 = load i64, i64* %PC.i311
  %9233 = add i64 %9232, 6
  store i64 %9233, i64* %PC.i311
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9235 = load i8, i8* %9234, align 1
  store i8 %9235, i8* %BRANCH_TAKEN, align 1
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9237 = icmp ne i8 %9235, 0
  %9238 = select i1 %9237, i64 %9229, i64 %9231
  store i64 %9238, i64* %9236, align 8
  store %struct.Memory* %loadMem_41283b, %struct.Memory** %MEMORY
  %loadBr_41283b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41283b = icmp eq i8 %loadBr_41283b, 1
  br i1 %cmpBr_41283b, label %block_.L_41284f, label %block_412841

block_412841:                                     ; preds = %block_.L_412836
  %loadMem_412841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9240 = getelementptr inbounds %struct.GPR, %struct.GPR* %9239, i32 0, i32 33
  %9241 = getelementptr inbounds %struct.Reg, %struct.Reg* %9240, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %9241 to i64*
  %9242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9243 = getelementptr inbounds %struct.GPR, %struct.GPR* %9242, i32 0, i32 1
  %9244 = getelementptr inbounds %struct.Reg, %struct.Reg* %9243, i32 0, i32 0
  %RAX.i309 = bitcast %union.anon* %9244 to i64*
  %9245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9246 = getelementptr inbounds %struct.GPR, %struct.GPR* %9245, i32 0, i32 15
  %9247 = getelementptr inbounds %struct.Reg, %struct.Reg* %9246, i32 0, i32 0
  %RBP.i310 = bitcast %union.anon* %9247 to i64*
  %9248 = load i64, i64* %RBP.i310
  %9249 = sub i64 %9248, 40
  %9250 = load i64, i64* %PC.i308
  %9251 = add i64 %9250, 3
  store i64 %9251, i64* %PC.i308
  %9252 = inttoptr i64 %9249 to i32*
  %9253 = load i32, i32* %9252
  %9254 = zext i32 %9253 to i64
  store i64 %9254, i64* %RAX.i309, align 8
  store %struct.Memory* %loadMem_412841, %struct.Memory** %MEMORY
  %loadMem_412844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9256 = getelementptr inbounds %struct.GPR, %struct.GPR* %9255, i32 0, i32 33
  %9257 = getelementptr inbounds %struct.Reg, %struct.Reg* %9256, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %9257 to i64*
  %9258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9259 = getelementptr inbounds %struct.GPR, %struct.GPR* %9258, i32 0, i32 5
  %9260 = getelementptr inbounds %struct.Reg, %struct.Reg* %9259, i32 0, i32 0
  %RCX.i306 = bitcast %union.anon* %9260 to i64*
  %9261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9262 = getelementptr inbounds %struct.GPR, %struct.GPR* %9261, i32 0, i32 15
  %9263 = getelementptr inbounds %struct.Reg, %struct.Reg* %9262, i32 0, i32 0
  %RBP.i307 = bitcast %union.anon* %9263 to i64*
  %9264 = load i64, i64* %RBP.i307
  %9265 = sub i64 %9264, 24
  %9266 = load i64, i64* %PC.i305
  %9267 = add i64 %9266, 4
  store i64 %9267, i64* %PC.i305
  %9268 = inttoptr i64 %9265 to i64*
  %9269 = load i64, i64* %9268
  store i64 %9269, i64* %RCX.i306, align 8
  store %struct.Memory* %loadMem_412844, %struct.Memory** %MEMORY
  %loadMem_412848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9271 = getelementptr inbounds %struct.GPR, %struct.GPR* %9270, i32 0, i32 33
  %9272 = getelementptr inbounds %struct.Reg, %struct.Reg* %9271, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %9272 to i64*
  %9273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9274 = getelementptr inbounds %struct.GPR, %struct.GPR* %9273, i32 0, i32 7
  %9275 = getelementptr inbounds %struct.Reg, %struct.Reg* %9274, i32 0, i32 0
  %RDX.i303 = bitcast %union.anon* %9275 to i64*
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9277 = getelementptr inbounds %struct.GPR, %struct.GPR* %9276, i32 0, i32 15
  %9278 = getelementptr inbounds %struct.Reg, %struct.Reg* %9277, i32 0, i32 0
  %RBP.i304 = bitcast %union.anon* %9278 to i64*
  %9279 = load i64, i64* %RBP.i304
  %9280 = sub i64 %9279, 36
  %9281 = load i64, i64* %PC.i302
  %9282 = add i64 %9281, 4
  store i64 %9282, i64* %PC.i302
  %9283 = inttoptr i64 %9280 to i32*
  %9284 = load i32, i32* %9283
  %9285 = sext i32 %9284 to i64
  store i64 %9285, i64* %RDX.i303, align 8
  store %struct.Memory* %loadMem_412848, %struct.Memory** %MEMORY
  %loadMem_41284c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9287 = getelementptr inbounds %struct.GPR, %struct.GPR* %9286, i32 0, i32 33
  %9288 = getelementptr inbounds %struct.Reg, %struct.Reg* %9287, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %9288 to i64*
  %9289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9290 = getelementptr inbounds %struct.GPR, %struct.GPR* %9289, i32 0, i32 1
  %9291 = getelementptr inbounds %struct.Reg, %struct.Reg* %9290, i32 0, i32 0
  %EAX.i299 = bitcast %union.anon* %9291 to i32*
  %9292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9293 = getelementptr inbounds %struct.GPR, %struct.GPR* %9292, i32 0, i32 5
  %9294 = getelementptr inbounds %struct.Reg, %struct.Reg* %9293, i32 0, i32 0
  %RCX.i300 = bitcast %union.anon* %9294 to i64*
  %9295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9296 = getelementptr inbounds %struct.GPR, %struct.GPR* %9295, i32 0, i32 7
  %9297 = getelementptr inbounds %struct.Reg, %struct.Reg* %9296, i32 0, i32 0
  %RDX.i301 = bitcast %union.anon* %9297 to i64*
  %9298 = load i64, i64* %RCX.i300
  %9299 = load i64, i64* %RDX.i301
  %9300 = mul i64 %9299, 4
  %9301 = add i64 %9300, %9298
  %9302 = load i32, i32* %EAX.i299
  %9303 = zext i32 %9302 to i64
  %9304 = load i64, i64* %PC.i298
  %9305 = add i64 %9304, 3
  store i64 %9305, i64* %PC.i298
  %9306 = inttoptr i64 %9301 to i32*
  store i32 %9302, i32* %9306
  store %struct.Memory* %loadMem_41284c, %struct.Memory** %MEMORY
  br label %block_.L_41284f

block_.L_41284f:                                  ; preds = %block_412841, %block_.L_412836
  %loadMem_41284f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9308 = getelementptr inbounds %struct.GPR, %struct.GPR* %9307, i32 0, i32 33
  %9309 = getelementptr inbounds %struct.Reg, %struct.Reg* %9308, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %9309 to i64*
  %9310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9311 = getelementptr inbounds %struct.GPR, %struct.GPR* %9310, i32 0, i32 1
  %9312 = getelementptr inbounds %struct.Reg, %struct.Reg* %9311, i32 0, i32 0
  %RAX.i296 = bitcast %union.anon* %9312 to i64*
  %9313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9314 = getelementptr inbounds %struct.GPR, %struct.GPR* %9313, i32 0, i32 15
  %9315 = getelementptr inbounds %struct.Reg, %struct.Reg* %9314, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %9315 to i64*
  %9316 = load i64, i64* %RBP.i297
  %9317 = sub i64 %9316, 36
  %9318 = load i64, i64* %PC.i295
  %9319 = add i64 %9318, 3
  store i64 %9319, i64* %PC.i295
  %9320 = inttoptr i64 %9317 to i32*
  %9321 = load i32, i32* %9320
  %9322 = zext i32 %9321 to i64
  store i64 %9322, i64* %RAX.i296, align 8
  store %struct.Memory* %loadMem_41284f, %struct.Memory** %MEMORY
  %loadMem_412852 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9324 = getelementptr inbounds %struct.GPR, %struct.GPR* %9323, i32 0, i32 33
  %9325 = getelementptr inbounds %struct.Reg, %struct.Reg* %9324, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %9325 to i64*
  %9326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9327 = getelementptr inbounds %struct.GPR, %struct.GPR* %9326, i32 0, i32 1
  %9328 = getelementptr inbounds %struct.Reg, %struct.Reg* %9327, i32 0, i32 0
  %RAX.i294 = bitcast %union.anon* %9328 to i64*
  %9329 = load i64, i64* %RAX.i294
  %9330 = load i64, i64* %PC.i293
  %9331 = add i64 %9330, 3
  store i64 %9331, i64* %PC.i293
  %9332 = trunc i64 %9329 to i32
  %9333 = add i32 1, %9332
  %9334 = zext i32 %9333 to i64
  store i64 %9334, i64* %RAX.i294, align 8
  %9335 = icmp ult i32 %9333, %9332
  %9336 = icmp ult i32 %9333, 1
  %9337 = or i1 %9335, %9336
  %9338 = zext i1 %9337 to i8
  %9339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9338, i8* %9339, align 1
  %9340 = and i32 %9333, 255
  %9341 = call i32 @llvm.ctpop.i32(i32 %9340)
  %9342 = trunc i32 %9341 to i8
  %9343 = and i8 %9342, 1
  %9344 = xor i8 %9343, 1
  %9345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9344, i8* %9345, align 1
  %9346 = xor i64 1, %9329
  %9347 = trunc i64 %9346 to i32
  %9348 = xor i32 %9347, %9333
  %9349 = lshr i32 %9348, 4
  %9350 = trunc i32 %9349 to i8
  %9351 = and i8 %9350, 1
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9351, i8* %9352, align 1
  %9353 = icmp eq i32 %9333, 0
  %9354 = zext i1 %9353 to i8
  %9355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9354, i8* %9355, align 1
  %9356 = lshr i32 %9333, 31
  %9357 = trunc i32 %9356 to i8
  %9358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9357, i8* %9358, align 1
  %9359 = lshr i32 %9332, 31
  %9360 = xor i32 %9356, %9359
  %9361 = add i32 %9360, %9356
  %9362 = icmp eq i32 %9361, 2
  %9363 = zext i1 %9362 to i8
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9363, i8* %9364, align 1
  store %struct.Memory* %loadMem_412852, %struct.Memory** %MEMORY
  %loadMem_412855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9366 = getelementptr inbounds %struct.GPR, %struct.GPR* %9365, i32 0, i32 33
  %9367 = getelementptr inbounds %struct.Reg, %struct.Reg* %9366, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %9367 to i64*
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9369 = getelementptr inbounds %struct.GPR, %struct.GPR* %9368, i32 0, i32 1
  %9370 = getelementptr inbounds %struct.Reg, %struct.Reg* %9369, i32 0, i32 0
  %EAX.i291 = bitcast %union.anon* %9370 to i32*
  %9371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9372 = getelementptr inbounds %struct.GPR, %struct.GPR* %9371, i32 0, i32 15
  %9373 = getelementptr inbounds %struct.Reg, %struct.Reg* %9372, i32 0, i32 0
  %RBP.i292 = bitcast %union.anon* %9373 to i64*
  %9374 = load i64, i64* %RBP.i292
  %9375 = sub i64 %9374, 36
  %9376 = load i32, i32* %EAX.i291
  %9377 = zext i32 %9376 to i64
  %9378 = load i64, i64* %PC.i290
  %9379 = add i64 %9378, 3
  store i64 %9379, i64* %PC.i290
  %9380 = inttoptr i64 %9375 to i32*
  store i32 %9376, i32* %9380
  store %struct.Memory* %loadMem_412855, %struct.Memory** %MEMORY
  %loadMem_412858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9382 = getelementptr inbounds %struct.GPR, %struct.GPR* %9381, i32 0, i32 33
  %9383 = getelementptr inbounds %struct.Reg, %struct.Reg* %9382, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %9383 to i64*
  %9384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9385 = getelementptr inbounds %struct.GPR, %struct.GPR* %9384, i32 0, i32 1
  %9386 = getelementptr inbounds %struct.Reg, %struct.Reg* %9385, i32 0, i32 0
  %RAX.i288 = bitcast %union.anon* %9386 to i64*
  %9387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9388 = getelementptr inbounds %struct.GPR, %struct.GPR* %9387, i32 0, i32 15
  %9389 = getelementptr inbounds %struct.Reg, %struct.Reg* %9388, i32 0, i32 0
  %RBP.i289 = bitcast %union.anon* %9389 to i64*
  %9390 = load i64, i64* %RBP.i289
  %9391 = sub i64 %9390, 36
  %9392 = load i64, i64* %PC.i287
  %9393 = add i64 %9392, 3
  store i64 %9393, i64* %PC.i287
  %9394 = inttoptr i64 %9391 to i32*
  %9395 = load i32, i32* %9394
  %9396 = zext i32 %9395 to i64
  store i64 %9396, i64* %RAX.i288, align 8
  store %struct.Memory* %loadMem_412858, %struct.Memory** %MEMORY
  %loadMem_41285b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9398 = getelementptr inbounds %struct.GPR, %struct.GPR* %9397, i32 0, i32 33
  %9399 = getelementptr inbounds %struct.Reg, %struct.Reg* %9398, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %9399 to i64*
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9401 = getelementptr inbounds %struct.GPR, %struct.GPR* %9400, i32 0, i32 1
  %9402 = getelementptr inbounds %struct.Reg, %struct.Reg* %9401, i32 0, i32 0
  %EAX.i285 = bitcast %union.anon* %9402 to i32*
  %9403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9404 = getelementptr inbounds %struct.GPR, %struct.GPR* %9403, i32 0, i32 15
  %9405 = getelementptr inbounds %struct.Reg, %struct.Reg* %9404, i32 0, i32 0
  %RBP.i286 = bitcast %union.anon* %9405 to i64*
  %9406 = load i32, i32* %EAX.i285
  %9407 = zext i32 %9406 to i64
  %9408 = load i64, i64* %RBP.i286
  %9409 = sub i64 %9408, 16
  %9410 = load i64, i64* %PC.i284
  %9411 = add i64 %9410, 3
  store i64 %9411, i64* %PC.i284
  %9412 = inttoptr i64 %9409 to i32*
  %9413 = load i32, i32* %9412
  %9414 = sub i32 %9406, %9413
  %9415 = icmp ult i32 %9406, %9413
  %9416 = zext i1 %9415 to i8
  %9417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9416, i8* %9417, align 1
  %9418 = and i32 %9414, 255
  %9419 = call i32 @llvm.ctpop.i32(i32 %9418)
  %9420 = trunc i32 %9419 to i8
  %9421 = and i8 %9420, 1
  %9422 = xor i8 %9421, 1
  %9423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9422, i8* %9423, align 1
  %9424 = xor i32 %9413, %9406
  %9425 = xor i32 %9424, %9414
  %9426 = lshr i32 %9425, 4
  %9427 = trunc i32 %9426 to i8
  %9428 = and i8 %9427, 1
  %9429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9428, i8* %9429, align 1
  %9430 = icmp eq i32 %9414, 0
  %9431 = zext i1 %9430 to i8
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9431, i8* %9432, align 1
  %9433 = lshr i32 %9414, 31
  %9434 = trunc i32 %9433 to i8
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9434, i8* %9435, align 1
  %9436 = lshr i32 %9406, 31
  %9437 = lshr i32 %9413, 31
  %9438 = xor i32 %9437, %9436
  %9439 = xor i32 %9433, %9436
  %9440 = add i32 %9439, %9438
  %9441 = icmp eq i32 %9440, 2
  %9442 = zext i1 %9441 to i8
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9442, i8* %9443, align 1
  store %struct.Memory* %loadMem_41285b, %struct.Memory** %MEMORY
  %loadMem_41285e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9445 = getelementptr inbounds %struct.GPR, %struct.GPR* %9444, i32 0, i32 33
  %9446 = getelementptr inbounds %struct.Reg, %struct.Reg* %9445, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %9446 to i64*
  %9447 = load i64, i64* %PC.i283
  %9448 = add i64 %9447, 17
  %9449 = load i64, i64* %PC.i283
  %9450 = add i64 %9449, 6
  %9451 = load i64, i64* %PC.i283
  %9452 = add i64 %9451, 6
  store i64 %9452, i64* %PC.i283
  %9453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9454 = load i8, i8* %9453, align 1
  %9455 = icmp ne i8 %9454, 0
  %9456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9457 = load i8, i8* %9456, align 1
  %9458 = icmp ne i8 %9457, 0
  %9459 = xor i1 %9455, %9458
  %9460 = zext i1 %9459 to i8
  store i8 %9460, i8* %BRANCH_TAKEN, align 1
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9462 = select i1 %9459, i64 %9448, i64 %9450
  store i64 %9462, i64* %9461, align 8
  store %struct.Memory* %loadMem_41285e, %struct.Memory** %MEMORY
  %loadBr_41285e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41285e = icmp eq i8 %loadBr_41285e, 1
  br i1 %cmpBr_41285e, label %block_.L_41286f, label %block_412864

block_412864:                                     ; preds = %block_.L_41284f
  %loadMem_412864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9464 = getelementptr inbounds %struct.GPR, %struct.GPR* %9463, i32 0, i32 33
  %9465 = getelementptr inbounds %struct.Reg, %struct.Reg* %9464, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %9465 to i64*
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9467 = getelementptr inbounds %struct.GPR, %struct.GPR* %9466, i32 0, i32 1
  %9468 = getelementptr inbounds %struct.Reg, %struct.Reg* %9467, i32 0, i32 0
  %RAX.i281 = bitcast %union.anon* %9468 to i64*
  %9469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9470 = getelementptr inbounds %struct.GPR, %struct.GPR* %9469, i32 0, i32 15
  %9471 = getelementptr inbounds %struct.Reg, %struct.Reg* %9470, i32 0, i32 0
  %RBP.i282 = bitcast %union.anon* %9471 to i64*
  %9472 = load i64, i64* %RBP.i282
  %9473 = sub i64 %9472, 36
  %9474 = load i64, i64* %PC.i280
  %9475 = add i64 %9474, 3
  store i64 %9475, i64* %PC.i280
  %9476 = inttoptr i64 %9473 to i32*
  %9477 = load i32, i32* %9476
  %9478 = zext i32 %9477 to i64
  store i64 %9478, i64* %RAX.i281, align 8
  store %struct.Memory* %loadMem_412864, %struct.Memory** %MEMORY
  %loadMem_412867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9480 = getelementptr inbounds %struct.GPR, %struct.GPR* %9479, i32 0, i32 33
  %9481 = getelementptr inbounds %struct.Reg, %struct.Reg* %9480, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %9481 to i64*
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9483 = getelementptr inbounds %struct.GPR, %struct.GPR* %9482, i32 0, i32 1
  %9484 = getelementptr inbounds %struct.Reg, %struct.Reg* %9483, i32 0, i32 0
  %EAX.i278 = bitcast %union.anon* %9484 to i32*
  %9485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9486 = getelementptr inbounds %struct.GPR, %struct.GPR* %9485, i32 0, i32 15
  %9487 = getelementptr inbounds %struct.Reg, %struct.Reg* %9486, i32 0, i32 0
  %RBP.i279 = bitcast %union.anon* %9487 to i64*
  %9488 = load i64, i64* %RBP.i279
  %9489 = sub i64 %9488, 4
  %9490 = load i32, i32* %EAX.i278
  %9491 = zext i32 %9490 to i64
  %9492 = load i64, i64* %PC.i277
  %9493 = add i64 %9492, 3
  store i64 %9493, i64* %PC.i277
  %9494 = inttoptr i64 %9489 to i32*
  store i32 %9490, i32* %9494
  store %struct.Memory* %loadMem_412867, %struct.Memory** %MEMORY
  %loadMem_41286a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9496 = getelementptr inbounds %struct.GPR, %struct.GPR* %9495, i32 0, i32 33
  %9497 = getelementptr inbounds %struct.Reg, %struct.Reg* %9496, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %9497 to i64*
  %9498 = load i64, i64* %PC.i276
  %9499 = add i64 %9498, 554
  %9500 = load i64, i64* %PC.i276
  %9501 = add i64 %9500, 5
  store i64 %9501, i64* %PC.i276
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9499, i64* %9502, align 8
  store %struct.Memory* %loadMem_41286a, %struct.Memory** %MEMORY
  br label %block_.L_412a94

block_.L_41286f:                                  ; preds = %block_.L_41284f
  %loadMem_41286f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9504 = getelementptr inbounds %struct.GPR, %struct.GPR* %9503, i32 0, i32 33
  %9505 = getelementptr inbounds %struct.Reg, %struct.Reg* %9504, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %9505 to i64*
  %9506 = load i64, i64* %PC.i275
  %9507 = add i64 %9506, 5
  %9508 = load i64, i64* %PC.i275
  %9509 = add i64 %9508, 5
  store i64 %9509, i64* %PC.i275
  %9510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9507, i64* %9510, align 8
  store %struct.Memory* %loadMem_41286f, %struct.Memory** %MEMORY
  br label %block_.L_412874

block_.L_412874:                                  ; preds = %block_.L_41286f, %block_4127fe, %block_4127ac, %block_41275a, %block_412708
  %loadMem_412874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9512 = getelementptr inbounds %struct.GPR, %struct.GPR* %9511, i32 0, i32 33
  %9513 = getelementptr inbounds %struct.Reg, %struct.Reg* %9512, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %9513 to i64*
  %9514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9515 = getelementptr inbounds %struct.GPR, %struct.GPR* %9514, i32 0, i32 15
  %9516 = getelementptr inbounds %struct.Reg, %struct.Reg* %9515, i32 0, i32 0
  %RBP.i274 = bitcast %union.anon* %9516 to i64*
  %9517 = load i64, i64* %RBP.i274
  %9518 = sub i64 %9517, 32
  %9519 = load i64, i64* %PC.i273
  %9520 = add i64 %9519, 7
  store i64 %9520, i64* %PC.i273
  %9521 = inttoptr i64 %9518 to i32*
  store i32 0, i32* %9521
  store %struct.Memory* %loadMem_412874, %struct.Memory** %MEMORY
  br label %block_.L_41287b

block_.L_41287b:                                  ; preds = %block_.L_4128b2, %block_.L_412874
  %loadMem_41287b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9523 = getelementptr inbounds %struct.GPR, %struct.GPR* %9522, i32 0, i32 33
  %9524 = getelementptr inbounds %struct.Reg, %struct.Reg* %9523, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %9524 to i64*
  %9525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9526 = getelementptr inbounds %struct.GPR, %struct.GPR* %9525, i32 0, i32 1
  %9527 = getelementptr inbounds %struct.Reg, %struct.Reg* %9526, i32 0, i32 0
  %RAX.i271 = bitcast %union.anon* %9527 to i64*
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9529 = getelementptr inbounds %struct.GPR, %struct.GPR* %9528, i32 0, i32 15
  %9530 = getelementptr inbounds %struct.Reg, %struct.Reg* %9529, i32 0, i32 0
  %RBP.i272 = bitcast %union.anon* %9530 to i64*
  %9531 = load i64, i64* %RBP.i272
  %9532 = sub i64 %9531, 32
  %9533 = load i64, i64* %PC.i270
  %9534 = add i64 %9533, 3
  store i64 %9534, i64* %PC.i270
  %9535 = inttoptr i64 %9532 to i32*
  %9536 = load i32, i32* %9535
  %9537 = zext i32 %9536 to i64
  store i64 %9537, i64* %RAX.i271, align 8
  store %struct.Memory* %loadMem_41287b, %struct.Memory** %MEMORY
  %loadMem_41287e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9539 = getelementptr inbounds %struct.GPR, %struct.GPR* %9538, i32 0, i32 33
  %9540 = getelementptr inbounds %struct.Reg, %struct.Reg* %9539, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %9540 to i64*
  %9541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9542 = getelementptr inbounds %struct.GPR, %struct.GPR* %9541, i32 0, i32 1
  %9543 = getelementptr inbounds %struct.Reg, %struct.Reg* %9542, i32 0, i32 0
  %EAX.i268 = bitcast %union.anon* %9543 to i32*
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9545 = getelementptr inbounds %struct.GPR, %struct.GPR* %9544, i32 0, i32 15
  %9546 = getelementptr inbounds %struct.Reg, %struct.Reg* %9545, i32 0, i32 0
  %RBP.i269 = bitcast %union.anon* %9546 to i64*
  %9547 = load i32, i32* %EAX.i268
  %9548 = zext i32 %9547 to i64
  %9549 = load i64, i64* %RBP.i269
  %9550 = sub i64 %9549, 28
  %9551 = load i64, i64* %PC.i267
  %9552 = add i64 %9551, 3
  store i64 %9552, i64* %PC.i267
  %9553 = inttoptr i64 %9550 to i32*
  %9554 = load i32, i32* %9553
  %9555 = sub i32 %9547, %9554
  %9556 = icmp ult i32 %9547, %9554
  %9557 = zext i1 %9556 to i8
  %9558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9557, i8* %9558, align 1
  %9559 = and i32 %9555, 255
  %9560 = call i32 @llvm.ctpop.i32(i32 %9559)
  %9561 = trunc i32 %9560 to i8
  %9562 = and i8 %9561, 1
  %9563 = xor i8 %9562, 1
  %9564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9563, i8* %9564, align 1
  %9565 = xor i32 %9554, %9547
  %9566 = xor i32 %9565, %9555
  %9567 = lshr i32 %9566, 4
  %9568 = trunc i32 %9567 to i8
  %9569 = and i8 %9568, 1
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9569, i8* %9570, align 1
  %9571 = icmp eq i32 %9555, 0
  %9572 = zext i1 %9571 to i8
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9572, i8* %9573, align 1
  %9574 = lshr i32 %9555, 31
  %9575 = trunc i32 %9574 to i8
  %9576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9575, i8* %9576, align 1
  %9577 = lshr i32 %9547, 31
  %9578 = lshr i32 %9554, 31
  %9579 = xor i32 %9578, %9577
  %9580 = xor i32 %9574, %9577
  %9581 = add i32 %9580, %9579
  %9582 = icmp eq i32 %9581, 2
  %9583 = zext i1 %9582 to i8
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9583, i8* %9584, align 1
  store %struct.Memory* %loadMem_41287e, %struct.Memory** %MEMORY
  %loadMem_412881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9586 = getelementptr inbounds %struct.GPR, %struct.GPR* %9585, i32 0, i32 33
  %9587 = getelementptr inbounds %struct.Reg, %struct.Reg* %9586, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %9587 to i64*
  %9588 = load i64, i64* %PC.i266
  %9589 = add i64 %9588, 63
  %9590 = load i64, i64* %PC.i266
  %9591 = add i64 %9590, 6
  %9592 = load i64, i64* %PC.i266
  %9593 = add i64 %9592, 6
  store i64 %9593, i64* %PC.i266
  %9594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9595 = load i8, i8* %9594, align 1
  %9596 = icmp ne i8 %9595, 0
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9598 = load i8, i8* %9597, align 1
  %9599 = icmp ne i8 %9598, 0
  %9600 = xor i1 %9596, %9599
  %9601 = xor i1 %9600, true
  %9602 = zext i1 %9601 to i8
  store i8 %9602, i8* %BRANCH_TAKEN, align 1
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9604 = select i1 %9600, i64 %9591, i64 %9589
  store i64 %9604, i64* %9603, align 8
  store %struct.Memory* %loadMem_412881, %struct.Memory** %MEMORY
  %loadBr_412881 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412881 = icmp eq i8 %loadBr_412881, 1
  br i1 %cmpBr_412881, label %block_.L_4128c0, label %block_412887

block_412887:                                     ; preds = %block_.L_41287b
  %loadMem_412887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9606 = getelementptr inbounds %struct.GPR, %struct.GPR* %9605, i32 0, i32 33
  %9607 = getelementptr inbounds %struct.Reg, %struct.Reg* %9606, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %9607 to i64*
  %9608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9609 = getelementptr inbounds %struct.GPR, %struct.GPR* %9608, i32 0, i32 1
  %9610 = getelementptr inbounds %struct.Reg, %struct.Reg* %9609, i32 0, i32 0
  %RAX.i264 = bitcast %union.anon* %9610 to i64*
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9612 = getelementptr inbounds %struct.GPR, %struct.GPR* %9611, i32 0, i32 15
  %9613 = getelementptr inbounds %struct.Reg, %struct.Reg* %9612, i32 0, i32 0
  %RBP.i265 = bitcast %union.anon* %9613 to i64*
  %9614 = load i64, i64* %RBP.i265
  %9615 = sub i64 %9614, 32
  %9616 = load i64, i64* %PC.i263
  %9617 = add i64 %9616, 4
  store i64 %9617, i64* %PC.i263
  %9618 = inttoptr i64 %9615 to i32*
  %9619 = load i32, i32* %9618
  %9620 = sext i32 %9619 to i64
  store i64 %9620, i64* %RAX.i264, align 8
  store %struct.Memory* %loadMem_412887, %struct.Memory** %MEMORY
  %loadMem_41288b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9622 = getelementptr inbounds %struct.GPR, %struct.GPR* %9621, i32 0, i32 33
  %9623 = getelementptr inbounds %struct.Reg, %struct.Reg* %9622, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %9623 to i64*
  %9624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9625 = getelementptr inbounds %struct.GPR, %struct.GPR* %9624, i32 0, i32 1
  %9626 = getelementptr inbounds %struct.Reg, %struct.Reg* %9625, i32 0, i32 0
  %RAX.i261 = bitcast %union.anon* %9626 to i64*
  %9627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9628 = getelementptr inbounds %struct.GPR, %struct.GPR* %9627, i32 0, i32 15
  %9629 = getelementptr inbounds %struct.Reg, %struct.Reg* %9628, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %9629 to i64*
  %9630 = load i64, i64* %RBP.i262
  %9631 = load i64, i64* %RAX.i261
  %9632 = mul i64 %9631, 4
  %9633 = add i64 %9630, -64
  %9634 = add i64 %9633, %9632
  %9635 = load i64, i64* %PC.i260
  %9636 = add i64 %9635, 5
  store i64 %9636, i64* %PC.i260
  %9637 = inttoptr i64 %9634 to i32*
  %9638 = load i32, i32* %9637
  %9639 = sext i32 %9638 to i64
  store i64 %9639, i64* %RAX.i261, align 8
  store %struct.Memory* %loadMem_41288b, %struct.Memory** %MEMORY
  %loadMem_412890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9641 = getelementptr inbounds %struct.GPR, %struct.GPR* %9640, i32 0, i32 33
  %9642 = getelementptr inbounds %struct.Reg, %struct.Reg* %9641, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %9642 to i64*
  %9643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9644 = getelementptr inbounds %struct.GPR, %struct.GPR* %9643, i32 0, i32 1
  %9645 = getelementptr inbounds %struct.Reg, %struct.Reg* %9644, i32 0, i32 0
  %RAX.i258 = bitcast %union.anon* %9645 to i64*
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9647 = getelementptr inbounds %struct.GPR, %struct.GPR* %9646, i32 0, i32 5
  %9648 = getelementptr inbounds %struct.Reg, %struct.Reg* %9647, i32 0, i32 0
  %RCX.i259 = bitcast %union.anon* %9648 to i64*
  %9649 = load i64, i64* %RAX.i258
  %9650 = mul i64 %9649, 4
  %9651 = add i64 %9650, 11187184
  %9652 = load i64, i64* %PC.i257
  %9653 = add i64 %9652, 7
  store i64 %9653, i64* %PC.i257
  %9654 = inttoptr i64 %9651 to i32*
  %9655 = load i32, i32* %9654
  %9656 = zext i32 %9655 to i64
  store i64 %9656, i64* %RCX.i259, align 8
  store %struct.Memory* %loadMem_412890, %struct.Memory** %MEMORY
  %loadMem_412897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9658 = getelementptr inbounds %struct.GPR, %struct.GPR* %9657, i32 0, i32 33
  %9659 = getelementptr inbounds %struct.Reg, %struct.Reg* %9658, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %9659 to i64*
  %9660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9661 = getelementptr inbounds %struct.GPR, %struct.GPR* %9660, i32 0, i32 1
  %9662 = getelementptr inbounds %struct.Reg, %struct.Reg* %9661, i32 0, i32 0
  %RAX.i255 = bitcast %union.anon* %9662 to i64*
  %9663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9664 = getelementptr inbounds %struct.GPR, %struct.GPR* %9663, i32 0, i32 15
  %9665 = getelementptr inbounds %struct.Reg, %struct.Reg* %9664, i32 0, i32 0
  %RBP.i256 = bitcast %union.anon* %9665 to i64*
  %9666 = load i64, i64* %RBP.i256
  %9667 = sub i64 %9666, 40
  %9668 = load i64, i64* %PC.i254
  %9669 = add i64 %9668, 4
  store i64 %9669, i64* %PC.i254
  %9670 = inttoptr i64 %9667 to i32*
  %9671 = load i32, i32* %9670
  %9672 = sext i32 %9671 to i64
  store i64 %9672, i64* %RAX.i255, align 8
  store %struct.Memory* %loadMem_412897, %struct.Memory** %MEMORY
  %loadMem_41289b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9674 = getelementptr inbounds %struct.GPR, %struct.GPR* %9673, i32 0, i32 33
  %9675 = getelementptr inbounds %struct.Reg, %struct.Reg* %9674, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %9675 to i64*
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9677 = getelementptr inbounds %struct.GPR, %struct.GPR* %9676, i32 0, i32 5
  %9678 = getelementptr inbounds %struct.Reg, %struct.Reg* %9677, i32 0, i32 0
  %ECX.i252 = bitcast %union.anon* %9678 to i32*
  %9679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9680 = getelementptr inbounds %struct.GPR, %struct.GPR* %9679, i32 0, i32 1
  %9681 = getelementptr inbounds %struct.Reg, %struct.Reg* %9680, i32 0, i32 0
  %RAX.i253 = bitcast %union.anon* %9681 to i64*
  %9682 = load i32, i32* %ECX.i252
  %9683 = zext i32 %9682 to i64
  %9684 = load i64, i64* %RAX.i253
  %9685 = mul i64 %9684, 4
  %9686 = add i64 %9685, 11187184
  %9687 = load i64, i64* %PC.i251
  %9688 = add i64 %9687, 7
  store i64 %9688, i64* %PC.i251
  %9689 = inttoptr i64 %9686 to i32*
  %9690 = load i32, i32* %9689
  %9691 = sub i32 %9682, %9690
  %9692 = icmp ult i32 %9682, %9690
  %9693 = zext i1 %9692 to i8
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9693, i8* %9694, align 1
  %9695 = and i32 %9691, 255
  %9696 = call i32 @llvm.ctpop.i32(i32 %9695)
  %9697 = trunc i32 %9696 to i8
  %9698 = and i8 %9697, 1
  %9699 = xor i8 %9698, 1
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9699, i8* %9700, align 1
  %9701 = xor i32 %9690, %9682
  %9702 = xor i32 %9701, %9691
  %9703 = lshr i32 %9702, 4
  %9704 = trunc i32 %9703 to i8
  %9705 = and i8 %9704, 1
  %9706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9705, i8* %9706, align 1
  %9707 = icmp eq i32 %9691, 0
  %9708 = zext i1 %9707 to i8
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9708, i8* %9709, align 1
  %9710 = lshr i32 %9691, 31
  %9711 = trunc i32 %9710 to i8
  %9712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9711, i8* %9712, align 1
  %9713 = lshr i32 %9682, 31
  %9714 = lshr i32 %9690, 31
  %9715 = xor i32 %9714, %9713
  %9716 = xor i32 %9710, %9713
  %9717 = add i32 %9716, %9715
  %9718 = icmp eq i32 %9717, 2
  %9719 = zext i1 %9718 to i8
  %9720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9719, i8* %9720, align 1
  store %struct.Memory* %loadMem_41289b, %struct.Memory** %MEMORY
  %loadMem_4128a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9722 = getelementptr inbounds %struct.GPR, %struct.GPR* %9721, i32 0, i32 33
  %9723 = getelementptr inbounds %struct.Reg, %struct.Reg* %9722, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %9723 to i64*
  %9724 = load i64, i64* %PC.i250
  %9725 = add i64 %9724, 11
  %9726 = load i64, i64* %PC.i250
  %9727 = add i64 %9726, 6
  %9728 = load i64, i64* %PC.i250
  %9729 = add i64 %9728, 6
  store i64 %9729, i64* %PC.i250
  %9730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9731 = load i8, i8* %9730, align 1
  %9732 = icmp eq i8 %9731, 0
  %9733 = zext i1 %9732 to i8
  store i8 %9733, i8* %BRANCH_TAKEN, align 1
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9735 = select i1 %9732, i64 %9725, i64 %9727
  store i64 %9735, i64* %9734, align 8
  store %struct.Memory* %loadMem_4128a2, %struct.Memory** %MEMORY
  %loadBr_4128a2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4128a2 = icmp eq i8 %loadBr_4128a2, 1
  br i1 %cmpBr_4128a2, label %block_.L_4128ad, label %block_4128a8

block_4128a8:                                     ; preds = %block_412887
  %loadMem_4128a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9737 = getelementptr inbounds %struct.GPR, %struct.GPR* %9736, i32 0, i32 33
  %9738 = getelementptr inbounds %struct.Reg, %struct.Reg* %9737, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %9738 to i64*
  %9739 = load i64, i64* %PC.i249
  %9740 = add i64 %9739, 24
  %9741 = load i64, i64* %PC.i249
  %9742 = add i64 %9741, 5
  store i64 %9742, i64* %PC.i249
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9740, i64* %9743, align 8
  store %struct.Memory* %loadMem_4128a8, %struct.Memory** %MEMORY
  br label %block_.L_4128c0

block_.L_4128ad:                                  ; preds = %block_412887
  %loadMem_4128ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9745 = getelementptr inbounds %struct.GPR, %struct.GPR* %9744, i32 0, i32 33
  %9746 = getelementptr inbounds %struct.Reg, %struct.Reg* %9745, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %9746 to i64*
  %9747 = load i64, i64* %PC.i248
  %9748 = add i64 %9747, 5
  %9749 = load i64, i64* %PC.i248
  %9750 = add i64 %9749, 5
  store i64 %9750, i64* %PC.i248
  %9751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9748, i64* %9751, align 8
  store %struct.Memory* %loadMem_4128ad, %struct.Memory** %MEMORY
  br label %block_.L_4128b2

block_.L_4128b2:                                  ; preds = %block_.L_4128ad
  %loadMem_4128b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9753 = getelementptr inbounds %struct.GPR, %struct.GPR* %9752, i32 0, i32 33
  %9754 = getelementptr inbounds %struct.Reg, %struct.Reg* %9753, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %9754 to i64*
  %9755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9756 = getelementptr inbounds %struct.GPR, %struct.GPR* %9755, i32 0, i32 1
  %9757 = getelementptr inbounds %struct.Reg, %struct.Reg* %9756, i32 0, i32 0
  %RAX.i246 = bitcast %union.anon* %9757 to i64*
  %9758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9759 = getelementptr inbounds %struct.GPR, %struct.GPR* %9758, i32 0, i32 15
  %9760 = getelementptr inbounds %struct.Reg, %struct.Reg* %9759, i32 0, i32 0
  %RBP.i247 = bitcast %union.anon* %9760 to i64*
  %9761 = load i64, i64* %RBP.i247
  %9762 = sub i64 %9761, 32
  %9763 = load i64, i64* %PC.i245
  %9764 = add i64 %9763, 3
  store i64 %9764, i64* %PC.i245
  %9765 = inttoptr i64 %9762 to i32*
  %9766 = load i32, i32* %9765
  %9767 = zext i32 %9766 to i64
  store i64 %9767, i64* %RAX.i246, align 8
  store %struct.Memory* %loadMem_4128b2, %struct.Memory** %MEMORY
  %loadMem_4128b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9769 = getelementptr inbounds %struct.GPR, %struct.GPR* %9768, i32 0, i32 33
  %9770 = getelementptr inbounds %struct.Reg, %struct.Reg* %9769, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %9770 to i64*
  %9771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9772 = getelementptr inbounds %struct.GPR, %struct.GPR* %9771, i32 0, i32 1
  %9773 = getelementptr inbounds %struct.Reg, %struct.Reg* %9772, i32 0, i32 0
  %RAX.i244 = bitcast %union.anon* %9773 to i64*
  %9774 = load i64, i64* %RAX.i244
  %9775 = load i64, i64* %PC.i243
  %9776 = add i64 %9775, 3
  store i64 %9776, i64* %PC.i243
  %9777 = trunc i64 %9774 to i32
  %9778 = add i32 1, %9777
  %9779 = zext i32 %9778 to i64
  store i64 %9779, i64* %RAX.i244, align 8
  %9780 = icmp ult i32 %9778, %9777
  %9781 = icmp ult i32 %9778, 1
  %9782 = or i1 %9780, %9781
  %9783 = zext i1 %9782 to i8
  %9784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9783, i8* %9784, align 1
  %9785 = and i32 %9778, 255
  %9786 = call i32 @llvm.ctpop.i32(i32 %9785)
  %9787 = trunc i32 %9786 to i8
  %9788 = and i8 %9787, 1
  %9789 = xor i8 %9788, 1
  %9790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9789, i8* %9790, align 1
  %9791 = xor i64 1, %9774
  %9792 = trunc i64 %9791 to i32
  %9793 = xor i32 %9792, %9778
  %9794 = lshr i32 %9793, 4
  %9795 = trunc i32 %9794 to i8
  %9796 = and i8 %9795, 1
  %9797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9796, i8* %9797, align 1
  %9798 = icmp eq i32 %9778, 0
  %9799 = zext i1 %9798 to i8
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9799, i8* %9800, align 1
  %9801 = lshr i32 %9778, 31
  %9802 = trunc i32 %9801 to i8
  %9803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9802, i8* %9803, align 1
  %9804 = lshr i32 %9777, 31
  %9805 = xor i32 %9801, %9804
  %9806 = add i32 %9805, %9801
  %9807 = icmp eq i32 %9806, 2
  %9808 = zext i1 %9807 to i8
  %9809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9808, i8* %9809, align 1
  store %struct.Memory* %loadMem_4128b5, %struct.Memory** %MEMORY
  %loadMem_4128b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9811 = getelementptr inbounds %struct.GPR, %struct.GPR* %9810, i32 0, i32 33
  %9812 = getelementptr inbounds %struct.Reg, %struct.Reg* %9811, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %9812 to i64*
  %9813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9814 = getelementptr inbounds %struct.GPR, %struct.GPR* %9813, i32 0, i32 1
  %9815 = getelementptr inbounds %struct.Reg, %struct.Reg* %9814, i32 0, i32 0
  %EAX.i241 = bitcast %union.anon* %9815 to i32*
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9817 = getelementptr inbounds %struct.GPR, %struct.GPR* %9816, i32 0, i32 15
  %9818 = getelementptr inbounds %struct.Reg, %struct.Reg* %9817, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %9818 to i64*
  %9819 = load i64, i64* %RBP.i242
  %9820 = sub i64 %9819, 32
  %9821 = load i32, i32* %EAX.i241
  %9822 = zext i32 %9821 to i64
  %9823 = load i64, i64* %PC.i240
  %9824 = add i64 %9823, 3
  store i64 %9824, i64* %PC.i240
  %9825 = inttoptr i64 %9820 to i32*
  store i32 %9821, i32* %9825
  store %struct.Memory* %loadMem_4128b8, %struct.Memory** %MEMORY
  %loadMem_4128bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9827 = getelementptr inbounds %struct.GPR, %struct.GPR* %9826, i32 0, i32 33
  %9828 = getelementptr inbounds %struct.Reg, %struct.Reg* %9827, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %9828 to i64*
  %9829 = load i64, i64* %PC.i239
  %9830 = add i64 %9829, -64
  %9831 = load i64, i64* %PC.i239
  %9832 = add i64 %9831, 5
  store i64 %9832, i64* %PC.i239
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9830, i64* %9833, align 8
  store %struct.Memory* %loadMem_4128bb, %struct.Memory** %MEMORY
  br label %block_.L_41287b

block_.L_4128c0:                                  ; preds = %block_4128a8, %block_.L_41287b
  %loadMem_4128c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9835 = getelementptr inbounds %struct.GPR, %struct.GPR* %9834, i32 0, i32 33
  %9836 = getelementptr inbounds %struct.Reg, %struct.Reg* %9835, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %9836 to i64*
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9838 = getelementptr inbounds %struct.GPR, %struct.GPR* %9837, i32 0, i32 1
  %9839 = getelementptr inbounds %struct.Reg, %struct.Reg* %9838, i32 0, i32 0
  %RAX.i237 = bitcast %union.anon* %9839 to i64*
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9841 = getelementptr inbounds %struct.GPR, %struct.GPR* %9840, i32 0, i32 15
  %9842 = getelementptr inbounds %struct.Reg, %struct.Reg* %9841, i32 0, i32 0
  %RBP.i238 = bitcast %union.anon* %9842 to i64*
  %9843 = load i64, i64* %RBP.i238
  %9844 = sub i64 %9843, 32
  %9845 = load i64, i64* %PC.i236
  %9846 = add i64 %9845, 3
  store i64 %9846, i64* %PC.i236
  %9847 = inttoptr i64 %9844 to i32*
  %9848 = load i32, i32* %9847
  %9849 = zext i32 %9848 to i64
  store i64 %9849, i64* %RAX.i237, align 8
  store %struct.Memory* %loadMem_4128c0, %struct.Memory** %MEMORY
  %loadMem_4128c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9851 = getelementptr inbounds %struct.GPR, %struct.GPR* %9850, i32 0, i32 33
  %9852 = getelementptr inbounds %struct.Reg, %struct.Reg* %9851, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %9852 to i64*
  %9853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9854 = getelementptr inbounds %struct.GPR, %struct.GPR* %9853, i32 0, i32 1
  %9855 = getelementptr inbounds %struct.Reg, %struct.Reg* %9854, i32 0, i32 0
  %EAX.i234 = bitcast %union.anon* %9855 to i32*
  %9856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9857 = getelementptr inbounds %struct.GPR, %struct.GPR* %9856, i32 0, i32 15
  %9858 = getelementptr inbounds %struct.Reg, %struct.Reg* %9857, i32 0, i32 0
  %RBP.i235 = bitcast %union.anon* %9858 to i64*
  %9859 = load i32, i32* %EAX.i234
  %9860 = zext i32 %9859 to i64
  %9861 = load i64, i64* %RBP.i235
  %9862 = sub i64 %9861, 28
  %9863 = load i64, i64* %PC.i233
  %9864 = add i64 %9863, 3
  store i64 %9864, i64* %PC.i233
  %9865 = inttoptr i64 %9862 to i32*
  %9866 = load i32, i32* %9865
  %9867 = sub i32 %9859, %9866
  %9868 = icmp ult i32 %9859, %9866
  %9869 = zext i1 %9868 to i8
  %9870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9869, i8* %9870, align 1
  %9871 = and i32 %9867, 255
  %9872 = call i32 @llvm.ctpop.i32(i32 %9871)
  %9873 = trunc i32 %9872 to i8
  %9874 = and i8 %9873, 1
  %9875 = xor i8 %9874, 1
  %9876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9875, i8* %9876, align 1
  %9877 = xor i32 %9866, %9859
  %9878 = xor i32 %9877, %9867
  %9879 = lshr i32 %9878, 4
  %9880 = trunc i32 %9879 to i8
  %9881 = and i8 %9880, 1
  %9882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9881, i8* %9882, align 1
  %9883 = icmp eq i32 %9867, 0
  %9884 = zext i1 %9883 to i8
  %9885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9884, i8* %9885, align 1
  %9886 = lshr i32 %9867, 31
  %9887 = trunc i32 %9886 to i8
  %9888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9887, i8* %9888, align 1
  %9889 = lshr i32 %9859, 31
  %9890 = lshr i32 %9866, 31
  %9891 = xor i32 %9890, %9889
  %9892 = xor i32 %9886, %9889
  %9893 = add i32 %9892, %9891
  %9894 = icmp eq i32 %9893, 2
  %9895 = zext i1 %9894 to i8
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9895, i8* %9896, align 1
  store %struct.Memory* %loadMem_4128c3, %struct.Memory** %MEMORY
  %loadMem_4128c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9898 = getelementptr inbounds %struct.GPR, %struct.GPR* %9897, i32 0, i32 33
  %9899 = getelementptr inbounds %struct.Reg, %struct.Reg* %9898, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %9899 to i64*
  %9900 = load i64, i64* %PC.i232
  %9901 = add i64 %9900, 437
  %9902 = load i64, i64* %PC.i232
  %9903 = add i64 %9902, 6
  %9904 = load i64, i64* %PC.i232
  %9905 = add i64 %9904, 6
  store i64 %9905, i64* %PC.i232
  %9906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9907 = load i8, i8* %9906, align 1
  %9908 = icmp eq i8 %9907, 0
  %9909 = zext i1 %9908 to i8
  store i8 %9909, i8* %BRANCH_TAKEN, align 1
  %9910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9911 = select i1 %9908, i64 %9901, i64 %9903
  store i64 %9911, i64* %9910, align 8
  store %struct.Memory* %loadMem_4128c6, %struct.Memory** %MEMORY
  %loadBr_4128c6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4128c6 = icmp eq i8 %loadBr_4128c6, 1
  br i1 %cmpBr_4128c6, label %block_.L_412a7b, label %block_4128cc

block_4128cc:                                     ; preds = %block_.L_4128c0
  %loadMem_4128cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9913 = getelementptr inbounds %struct.GPR, %struct.GPR* %9912, i32 0, i32 33
  %9914 = getelementptr inbounds %struct.Reg, %struct.Reg* %9913, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %9914 to i64*
  %9915 = load i64, i64* %PC.i231
  %9916 = add i64 %9915, 5
  %9917 = load i64, i64* %PC.i231
  %9918 = add i64 %9917, 5
  store i64 %9918, i64* %PC.i231
  %9919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9916, i64* %9919, align 8
  store %struct.Memory* %loadMem_4128cc, %struct.Memory** %MEMORY
  br label %block_.L_4128d1

block_.L_4128d1:                                  ; preds = %block_.L_412a57, %block_4128cc
  %loadMem_4128d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9921 = getelementptr inbounds %struct.GPR, %struct.GPR* %9920, i32 0, i32 33
  %9922 = getelementptr inbounds %struct.Reg, %struct.Reg* %9921, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %9922 to i64*
  %9923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9924 = getelementptr inbounds %struct.GPR, %struct.GPR* %9923, i32 0, i32 1
  %9925 = getelementptr inbounds %struct.Reg, %struct.Reg* %9924, i32 0, i32 0
  %RAX.i229 = bitcast %union.anon* %9925 to i64*
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9927 = getelementptr inbounds %struct.GPR, %struct.GPR* %9926, i32 0, i32 15
  %9928 = getelementptr inbounds %struct.Reg, %struct.Reg* %9927, i32 0, i32 0
  %RBP.i230 = bitcast %union.anon* %9928 to i64*
  %9929 = load i64, i64* %RBP.i230
  %9930 = sub i64 %9929, 40
  %9931 = load i64, i64* %PC.i228
  %9932 = add i64 %9931, 3
  store i64 %9932, i64* %PC.i228
  %9933 = inttoptr i64 %9930 to i32*
  %9934 = load i32, i32* %9933
  %9935 = zext i32 %9934 to i64
  store i64 %9935, i64* %RAX.i229, align 8
  store %struct.Memory* %loadMem_4128d1, %struct.Memory** %MEMORY
  %loadMem_4128d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9937 = getelementptr inbounds %struct.GPR, %struct.GPR* %9936, i32 0, i32 33
  %9938 = getelementptr inbounds %struct.Reg, %struct.Reg* %9937, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %9938 to i64*
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9940 = getelementptr inbounds %struct.GPR, %struct.GPR* %9939, i32 0, i32 1
  %9941 = getelementptr inbounds %struct.Reg, %struct.Reg* %9940, i32 0, i32 0
  %RAX.i227 = bitcast %union.anon* %9941 to i64*
  %9942 = load i64, i64* %RAX.i227
  %9943 = load i64, i64* %PC.i226
  %9944 = add i64 %9943, 3
  store i64 %9944, i64* %PC.i226
  %9945 = trunc i64 %9942 to i32
  %9946 = add i32 20, %9945
  %9947 = zext i32 %9946 to i64
  store i64 %9947, i64* %RAX.i227, align 8
  %9948 = icmp ult i32 %9946, %9945
  %9949 = icmp ult i32 %9946, 20
  %9950 = or i1 %9948, %9949
  %9951 = zext i1 %9950 to i8
  %9952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9951, i8* %9952, align 1
  %9953 = and i32 %9946, 255
  %9954 = call i32 @llvm.ctpop.i32(i32 %9953)
  %9955 = trunc i32 %9954 to i8
  %9956 = and i8 %9955, 1
  %9957 = xor i8 %9956, 1
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9957, i8* %9958, align 1
  %9959 = xor i64 20, %9942
  %9960 = trunc i64 %9959 to i32
  %9961 = xor i32 %9960, %9946
  %9962 = lshr i32 %9961, 4
  %9963 = trunc i32 %9962 to i8
  %9964 = and i8 %9963, 1
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9964, i8* %9965, align 1
  %9966 = icmp eq i32 %9946, 0
  %9967 = zext i1 %9966 to i8
  %9968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9967, i8* %9968, align 1
  %9969 = lshr i32 %9946, 31
  %9970 = trunc i32 %9969 to i8
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9970, i8* %9971, align 1
  %9972 = lshr i32 %9945, 31
  %9973 = xor i32 %9969, %9972
  %9974 = add i32 %9973, %9969
  %9975 = icmp eq i32 %9974, 2
  %9976 = zext i1 %9975 to i8
  %9977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9976, i8* %9977, align 1
  store %struct.Memory* %loadMem_4128d4, %struct.Memory** %MEMORY
  %loadMem_4128d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9979 = getelementptr inbounds %struct.GPR, %struct.GPR* %9978, i32 0, i32 33
  %9980 = getelementptr inbounds %struct.Reg, %struct.Reg* %9979, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %9980 to i64*
  %9981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9982 = getelementptr inbounds %struct.GPR, %struct.GPR* %9981, i32 0, i32 1
  %9983 = getelementptr inbounds %struct.Reg, %struct.Reg* %9982, i32 0, i32 0
  %EAX.i224 = bitcast %union.anon* %9983 to i32*
  %9984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9985 = getelementptr inbounds %struct.GPR, %struct.GPR* %9984, i32 0, i32 5
  %9986 = getelementptr inbounds %struct.Reg, %struct.Reg* %9985, i32 0, i32 0
  %RCX.i225 = bitcast %union.anon* %9986 to i64*
  %9987 = load i32, i32* %EAX.i224
  %9988 = zext i32 %9987 to i64
  %9989 = load i64, i64* %PC.i223
  %9990 = add i64 %9989, 3
  store i64 %9990, i64* %PC.i223
  %9991 = shl i64 %9988, 32
  %9992 = ashr exact i64 %9991, 32
  store i64 %9992, i64* %RCX.i225, align 8
  store %struct.Memory* %loadMem_4128d7, %struct.Memory** %MEMORY
  %loadMem_4128da = load %struct.Memory*, %struct.Memory** %MEMORY
  %9993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9994 = getelementptr inbounds %struct.GPR, %struct.GPR* %9993, i32 0, i32 33
  %9995 = getelementptr inbounds %struct.Reg, %struct.Reg* %9994, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %9995 to i64*
  %9996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9997 = getelementptr inbounds %struct.GPR, %struct.GPR* %9996, i32 0, i32 1
  %9998 = getelementptr inbounds %struct.Reg, %struct.Reg* %9997, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %9998 to i64*
  %9999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10000 = getelementptr inbounds %struct.GPR, %struct.GPR* %9999, i32 0, i32 5
  %10001 = getelementptr inbounds %struct.Reg, %struct.Reg* %10000, i32 0, i32 0
  %RCX.i222 = bitcast %union.anon* %10001 to i64*
  %10002 = load i64, i64* %RCX.i222
  %10003 = add i64 %10002, 12099168
  %10004 = load i64, i64* %PC.i220
  %10005 = add i64 %10004, 8
  store i64 %10005, i64* %PC.i220
  %10006 = inttoptr i64 %10003 to i8*
  %10007 = load i8, i8* %10006
  %10008 = zext i8 %10007 to i64
  store i64 %10008, i64* %RAX.i221, align 8
  store %struct.Memory* %loadMem_4128da, %struct.Memory** %MEMORY
  %loadMem_4128e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10010 = getelementptr inbounds %struct.GPR, %struct.GPR* %10009, i32 0, i32 33
  %10011 = getelementptr inbounds %struct.Reg, %struct.Reg* %10010, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %10011 to i64*
  %10012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10013 = getelementptr inbounds %struct.GPR, %struct.GPR* %10012, i32 0, i32 1
  %10014 = getelementptr inbounds %struct.Reg, %struct.Reg* %10013, i32 0, i32 0
  %EAX.i218 = bitcast %union.anon* %10014 to i32*
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10016 = getelementptr inbounds %struct.GPR, %struct.GPR* %10015, i32 0, i32 15
  %10017 = getelementptr inbounds %struct.Reg, %struct.Reg* %10016, i32 0, i32 0
  %RBP.i219 = bitcast %union.anon* %10017 to i64*
  %10018 = load i32, i32* %EAX.i218
  %10019 = zext i32 %10018 to i64
  %10020 = load i64, i64* %RBP.i219
  %10021 = sub i64 %10020, 12
  %10022 = load i64, i64* %PC.i217
  %10023 = add i64 %10022, 3
  store i64 %10023, i64* %PC.i217
  %10024 = inttoptr i64 %10021 to i32*
  %10025 = load i32, i32* %10024
  %10026 = sub i32 %10018, %10025
  %10027 = icmp ult i32 %10018, %10025
  %10028 = zext i1 %10027 to i8
  %10029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10028, i8* %10029, align 1
  %10030 = and i32 %10026, 255
  %10031 = call i32 @llvm.ctpop.i32(i32 %10030)
  %10032 = trunc i32 %10031 to i8
  %10033 = and i8 %10032, 1
  %10034 = xor i8 %10033, 1
  %10035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10034, i8* %10035, align 1
  %10036 = xor i32 %10025, %10018
  %10037 = xor i32 %10036, %10026
  %10038 = lshr i32 %10037, 4
  %10039 = trunc i32 %10038 to i8
  %10040 = and i8 %10039, 1
  %10041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10040, i8* %10041, align 1
  %10042 = icmp eq i32 %10026, 0
  %10043 = zext i1 %10042 to i8
  %10044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10043, i8* %10044, align 1
  %10045 = lshr i32 %10026, 31
  %10046 = trunc i32 %10045 to i8
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10046, i8* %10047, align 1
  %10048 = lshr i32 %10018, 31
  %10049 = lshr i32 %10025, 31
  %10050 = xor i32 %10049, %10048
  %10051 = xor i32 %10045, %10048
  %10052 = add i32 %10051, %10050
  %10053 = icmp eq i32 %10052, 2
  %10054 = zext i1 %10053 to i8
  %10055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10054, i8* %10055, align 1
  store %struct.Memory* %loadMem_4128e2, %struct.Memory** %MEMORY
  %loadMem_4128e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10057 = getelementptr inbounds %struct.GPR, %struct.GPR* %10056, i32 0, i32 33
  %10058 = getelementptr inbounds %struct.Reg, %struct.Reg* %10057, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %10058 to i64*
  %10059 = load i64, i64* %PC.i216
  %10060 = add i64 %10059, 62
  %10061 = load i64, i64* %PC.i216
  %10062 = add i64 %10061, 6
  %10063 = load i64, i64* %PC.i216
  %10064 = add i64 %10063, 6
  store i64 %10064, i64* %PC.i216
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10066 = load i8, i8* %10065, align 1
  %10067 = icmp eq i8 %10066, 0
  %10068 = zext i1 %10067 to i8
  store i8 %10068, i8* %BRANCH_TAKEN, align 1
  %10069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10070 = select i1 %10067, i64 %10060, i64 %10062
  store i64 %10070, i64* %10069, align 8
  store %struct.Memory* %loadMem_4128e5, %struct.Memory** %MEMORY
  %loadBr_4128e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4128e5 = icmp eq i8 %loadBr_4128e5, 1
  br i1 %cmpBr_4128e5, label %block_.L_412923, label %block_4128eb

block_4128eb:                                     ; preds = %block_.L_4128d1
  %loadMem_4128eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10072 = getelementptr inbounds %struct.GPR, %struct.GPR* %10071, i32 0, i32 33
  %10073 = getelementptr inbounds %struct.Reg, %struct.Reg* %10072, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %10073 to i64*
  %10074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10075 = getelementptr inbounds %struct.GPR, %struct.GPR* %10074, i32 0, i32 1
  %10076 = getelementptr inbounds %struct.Reg, %struct.Reg* %10075, i32 0, i32 0
  %RAX.i215 = bitcast %union.anon* %10076 to i64*
  %10077 = load i64, i64* %PC.i214
  %10078 = add i64 %10077, 10
  store i64 %10078, i64* %PC.i214
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i215, align 8
  store %struct.Memory* %loadMem_4128eb, %struct.Memory** %MEMORY
  %loadMem_4128f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10080 = getelementptr inbounds %struct.GPR, %struct.GPR* %10079, i32 0, i32 33
  %10081 = getelementptr inbounds %struct.Reg, %struct.Reg* %10080, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %10081 to i64*
  %10082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10083 = getelementptr inbounds %struct.GPR, %struct.GPR* %10082, i32 0, i32 5
  %10084 = getelementptr inbounds %struct.Reg, %struct.Reg* %10083, i32 0, i32 0
  %RCX.i212 = bitcast %union.anon* %10084 to i64*
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10086 = getelementptr inbounds %struct.GPR, %struct.GPR* %10085, i32 0, i32 15
  %10087 = getelementptr inbounds %struct.Reg, %struct.Reg* %10086, i32 0, i32 0
  %RBP.i213 = bitcast %union.anon* %10087 to i64*
  %10088 = load i64, i64* %RBP.i213
  %10089 = sub i64 %10088, 40
  %10090 = load i64, i64* %PC.i211
  %10091 = add i64 %10090, 3
  store i64 %10091, i64* %PC.i211
  %10092 = inttoptr i64 %10089 to i32*
  %10093 = load i32, i32* %10092
  %10094 = zext i32 %10093 to i64
  store i64 %10094, i64* %RCX.i212, align 8
  store %struct.Memory* %loadMem_4128f5, %struct.Memory** %MEMORY
  %loadMem_4128f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10096 = getelementptr inbounds %struct.GPR, %struct.GPR* %10095, i32 0, i32 33
  %10097 = getelementptr inbounds %struct.Reg, %struct.Reg* %10096, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %10097 to i64*
  %10098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10099 = getelementptr inbounds %struct.GPR, %struct.GPR* %10098, i32 0, i32 5
  %10100 = getelementptr inbounds %struct.Reg, %struct.Reg* %10099, i32 0, i32 0
  %RCX.i210 = bitcast %union.anon* %10100 to i64*
  %10101 = load i64, i64* %RCX.i210
  %10102 = load i64, i64* %PC.i209
  %10103 = add i64 %10102, 3
  store i64 %10103, i64* %PC.i209
  %10104 = trunc i64 %10101 to i32
  %10105 = add i32 20, %10104
  %10106 = zext i32 %10105 to i64
  store i64 %10106, i64* %RCX.i210, align 8
  %10107 = icmp ult i32 %10105, %10104
  %10108 = icmp ult i32 %10105, 20
  %10109 = or i1 %10107, %10108
  %10110 = zext i1 %10109 to i8
  %10111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10110, i8* %10111, align 1
  %10112 = and i32 %10105, 255
  %10113 = call i32 @llvm.ctpop.i32(i32 %10112)
  %10114 = trunc i32 %10113 to i8
  %10115 = and i8 %10114, 1
  %10116 = xor i8 %10115, 1
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10116, i8* %10117, align 1
  %10118 = xor i64 20, %10101
  %10119 = trunc i64 %10118 to i32
  %10120 = xor i32 %10119, %10105
  %10121 = lshr i32 %10120, 4
  %10122 = trunc i32 %10121 to i8
  %10123 = and i8 %10122, 1
  %10124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10123, i8* %10124, align 1
  %10125 = icmp eq i32 %10105, 0
  %10126 = zext i1 %10125 to i8
  %10127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10126, i8* %10127, align 1
  %10128 = lshr i32 %10105, 31
  %10129 = trunc i32 %10128 to i8
  %10130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10129, i8* %10130, align 1
  %10131 = lshr i32 %10104, 31
  %10132 = xor i32 %10128, %10131
  %10133 = add i32 %10132, %10128
  %10134 = icmp eq i32 %10133, 2
  %10135 = zext i1 %10134 to i8
  %10136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10135, i8* %10136, align 1
  store %struct.Memory* %loadMem_4128f8, %struct.Memory** %MEMORY
  %loadMem_4128fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10138 = getelementptr inbounds %struct.GPR, %struct.GPR* %10137, i32 0, i32 33
  %10139 = getelementptr inbounds %struct.Reg, %struct.Reg* %10138, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %10139 to i64*
  %10140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10141 = getelementptr inbounds %struct.GPR, %struct.GPR* %10140, i32 0, i32 5
  %10142 = getelementptr inbounds %struct.Reg, %struct.Reg* %10141, i32 0, i32 0
  %ECX.i207 = bitcast %union.anon* %10142 to i32*
  %10143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10144 = getelementptr inbounds %struct.GPR, %struct.GPR* %10143, i32 0, i32 7
  %10145 = getelementptr inbounds %struct.Reg, %struct.Reg* %10144, i32 0, i32 0
  %RDX.i208 = bitcast %union.anon* %10145 to i64*
  %10146 = load i32, i32* %ECX.i207
  %10147 = zext i32 %10146 to i64
  %10148 = load i64, i64* %PC.i206
  %10149 = add i64 %10148, 3
  store i64 %10149, i64* %PC.i206
  %10150 = shl i64 %10147, 32
  %10151 = ashr exact i64 %10150, 32
  store i64 %10151, i64* %RDX.i208, align 8
  store %struct.Memory* %loadMem_4128fb, %struct.Memory** %MEMORY
  %loadMem_4128fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10153 = getelementptr inbounds %struct.GPR, %struct.GPR* %10152, i32 0, i32 33
  %10154 = getelementptr inbounds %struct.Reg, %struct.Reg* %10153, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %10154 to i64*
  %10155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10156 = getelementptr inbounds %struct.GPR, %struct.GPR* %10155, i32 0, i32 7
  %10157 = getelementptr inbounds %struct.Reg, %struct.Reg* %10156, i32 0, i32 0
  %RDX.i205 = bitcast %union.anon* %10157 to i64*
  %10158 = load i64, i64* %RDX.i205
  %10159 = mul i64 %10158, 4
  %10160 = add i64 %10159, 11187184
  %10161 = load i64, i64* %PC.i204
  %10162 = add i64 %10161, 8
  store i64 %10162, i64* %PC.i204
  %10163 = inttoptr i64 %10160 to i32*
  %10164 = load i32, i32* %10163
  %10165 = sext i32 %10164 to i64
  store i64 %10165, i64* %RDX.i205, align 8
  store %struct.Memory* %loadMem_4128fe, %struct.Memory** %MEMORY
  %loadMem_412906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10167 = getelementptr inbounds %struct.GPR, %struct.GPR* %10166, i32 0, i32 33
  %10168 = getelementptr inbounds %struct.Reg, %struct.Reg* %10167, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %10168 to i64*
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10170 = getelementptr inbounds %struct.GPR, %struct.GPR* %10169, i32 0, i32 7
  %10171 = getelementptr inbounds %struct.Reg, %struct.Reg* %10170, i32 0, i32 0
  %RDX.i203 = bitcast %union.anon* %10171 to i64*
  %10172 = load i64, i64* %RDX.i203
  %10173 = load i64, i64* %PC.i202
  %10174 = add i64 %10173, 7
  store i64 %10174, i64* %PC.i202
  %10175 = sext i64 %10172 to i128
  %10176 = and i128 %10175, -18446744073709551616
  %10177 = zext i64 %10172 to i128
  %10178 = or i128 %10176, %10177
  %10179 = mul i128 744, %10178
  %10180 = trunc i128 %10179 to i64
  store i64 %10180, i64* %RDX.i203, align 8
  %10181 = sext i64 %10180 to i128
  %10182 = icmp ne i128 %10181, %10179
  %10183 = zext i1 %10182 to i8
  %10184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10183, i8* %10184, align 1
  %10185 = trunc i128 %10179 to i32
  %10186 = and i32 %10185, 255
  %10187 = call i32 @llvm.ctpop.i32(i32 %10186)
  %10188 = trunc i32 %10187 to i8
  %10189 = and i8 %10188, 1
  %10190 = xor i8 %10189, 1
  %10191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10190, i8* %10191, align 1
  %10192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10192, align 1
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10193, align 1
  %10194 = lshr i64 %10180, 63
  %10195 = trunc i64 %10194 to i8
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10195, i8* %10196, align 1
  %10197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10183, i8* %10197, align 1
  store %struct.Memory* %loadMem_412906, %struct.Memory** %MEMORY
  %loadMem_41290d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10199 = getelementptr inbounds %struct.GPR, %struct.GPR* %10198, i32 0, i32 33
  %10200 = getelementptr inbounds %struct.Reg, %struct.Reg* %10199, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %10200 to i64*
  %10201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10202 = getelementptr inbounds %struct.GPR, %struct.GPR* %10201, i32 0, i32 1
  %10203 = getelementptr inbounds %struct.Reg, %struct.Reg* %10202, i32 0, i32 0
  %RAX.i200 = bitcast %union.anon* %10203 to i64*
  %10204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10205 = getelementptr inbounds %struct.GPR, %struct.GPR* %10204, i32 0, i32 7
  %10206 = getelementptr inbounds %struct.Reg, %struct.Reg* %10205, i32 0, i32 0
  %RDX.i201 = bitcast %union.anon* %10206 to i64*
  %10207 = load i64, i64* %RAX.i200
  %10208 = load i64, i64* %RDX.i201
  %10209 = load i64, i64* %PC.i199
  %10210 = add i64 %10209, 3
  store i64 %10210, i64* %PC.i199
  %10211 = add i64 %10208, %10207
  store i64 %10211, i64* %RAX.i200, align 8
  %10212 = icmp ult i64 %10211, %10207
  %10213 = icmp ult i64 %10211, %10208
  %10214 = or i1 %10212, %10213
  %10215 = zext i1 %10214 to i8
  %10216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10215, i8* %10216, align 1
  %10217 = trunc i64 %10211 to i32
  %10218 = and i32 %10217, 255
  %10219 = call i32 @llvm.ctpop.i32(i32 %10218)
  %10220 = trunc i32 %10219 to i8
  %10221 = and i8 %10220, 1
  %10222 = xor i8 %10221, 1
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10222, i8* %10223, align 1
  %10224 = xor i64 %10208, %10207
  %10225 = xor i64 %10224, %10211
  %10226 = lshr i64 %10225, 4
  %10227 = trunc i64 %10226 to i8
  %10228 = and i8 %10227, 1
  %10229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10228, i8* %10229, align 1
  %10230 = icmp eq i64 %10211, 0
  %10231 = zext i1 %10230 to i8
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10231, i8* %10232, align 1
  %10233 = lshr i64 %10211, 63
  %10234 = trunc i64 %10233 to i8
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10234, i8* %10235, align 1
  %10236 = lshr i64 %10207, 63
  %10237 = lshr i64 %10208, 63
  %10238 = xor i64 %10233, %10236
  %10239 = xor i64 %10233, %10237
  %10240 = add i64 %10238, %10239
  %10241 = icmp eq i64 %10240, 2
  %10242 = zext i1 %10241 to i8
  %10243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10242, i8* %10243, align 1
  store %struct.Memory* %loadMem_41290d, %struct.Memory** %MEMORY
  %loadMem_412910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10245 = getelementptr inbounds %struct.GPR, %struct.GPR* %10244, i32 0, i32 33
  %10246 = getelementptr inbounds %struct.Reg, %struct.Reg* %10245, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %10246 to i64*
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10248 = getelementptr inbounds %struct.GPR, %struct.GPR* %10247, i32 0, i32 1
  %10249 = getelementptr inbounds %struct.Reg, %struct.Reg* %10248, i32 0, i32 0
  %RAX.i197 = bitcast %union.anon* %10249 to i64*
  %10250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10251 = getelementptr inbounds %struct.GPR, %struct.GPR* %10250, i32 0, i32 5
  %10252 = getelementptr inbounds %struct.Reg, %struct.Reg* %10251, i32 0, i32 0
  %RCX.i198 = bitcast %union.anon* %10252 to i64*
  %10253 = load i64, i64* %RAX.i197
  %10254 = add i64 %10253, 740
  %10255 = load i64, i64* %PC.i196
  %10256 = add i64 %10255, 6
  store i64 %10256, i64* %PC.i196
  %10257 = inttoptr i64 %10254 to i32*
  %10258 = load i32, i32* %10257
  %10259 = zext i32 %10258 to i64
  store i64 %10259, i64* %RCX.i198, align 8
  store %struct.Memory* %loadMem_412910, %struct.Memory** %MEMORY
  %loadMem_412916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10261 = getelementptr inbounds %struct.GPR, %struct.GPR* %10260, i32 0, i32 33
  %10262 = getelementptr inbounds %struct.Reg, %struct.Reg* %10261, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %10262 to i64*
  %10263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10264 = getelementptr inbounds %struct.GPR, %struct.GPR* %10263, i32 0, i32 5
  %10265 = getelementptr inbounds %struct.Reg, %struct.Reg* %10264, i32 0, i32 0
  %ECX.i195 = bitcast %union.anon* %10265 to i32*
  %10266 = load i32, i32* %ECX.i195
  %10267 = zext i32 %10266 to i64
  %10268 = load i64, i64* %PC.i194
  %10269 = add i64 %10268, 7
  store i64 %10269, i64* %PC.i194
  %10270 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %10271 = sub i32 %10266, %10270
  %10272 = icmp ult i32 %10266, %10270
  %10273 = zext i1 %10272 to i8
  %10274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10273, i8* %10274, align 1
  %10275 = and i32 %10271, 255
  %10276 = call i32 @llvm.ctpop.i32(i32 %10275)
  %10277 = trunc i32 %10276 to i8
  %10278 = and i8 %10277, 1
  %10279 = xor i8 %10278, 1
  %10280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10279, i8* %10280, align 1
  %10281 = xor i32 %10270, %10266
  %10282 = xor i32 %10281, %10271
  %10283 = lshr i32 %10282, 4
  %10284 = trunc i32 %10283 to i8
  %10285 = and i8 %10284, 1
  %10286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10285, i8* %10286, align 1
  %10287 = icmp eq i32 %10271, 0
  %10288 = zext i1 %10287 to i8
  %10289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10288, i8* %10289, align 1
  %10290 = lshr i32 %10271, 31
  %10291 = trunc i32 %10290 to i8
  %10292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10291, i8* %10292, align 1
  %10293 = lshr i32 %10266, 31
  %10294 = lshr i32 %10270, 31
  %10295 = xor i32 %10294, %10293
  %10296 = xor i32 %10290, %10293
  %10297 = add i32 %10296, %10295
  %10298 = icmp eq i32 %10297, 2
  %10299 = zext i1 %10298 to i8
  %10300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10299, i8* %10300, align 1
  store %struct.Memory* %loadMem_412916, %struct.Memory** %MEMORY
  %loadMem_41291d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10302 = getelementptr inbounds %struct.GPR, %struct.GPR* %10301, i32 0, i32 33
  %10303 = getelementptr inbounds %struct.Reg, %struct.Reg* %10302, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %10303 to i64*
  %10304 = load i64, i64* %PC.i193
  %10305 = add i64 %10304, 252
  %10306 = load i64, i64* %PC.i193
  %10307 = add i64 %10306, 6
  %10308 = load i64, i64* %PC.i193
  %10309 = add i64 %10308, 6
  store i64 %10309, i64* %PC.i193
  %10310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10311 = load i8, i8* %10310, align 1
  store i8 %10311, i8* %BRANCH_TAKEN, align 1
  %10312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10313 = icmp ne i8 %10311, 0
  %10314 = select i1 %10313, i64 %10305, i64 %10307
  store i64 %10314, i64* %10312, align 8
  store %struct.Memory* %loadMem_41291d, %struct.Memory** %MEMORY
  %loadBr_41291d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41291d = icmp eq i8 %loadBr_41291d, 1
  br i1 %cmpBr_41291d, label %block_.L_412a19, label %block_.L_412923

block_.L_412923:                                  ; preds = %block_4128eb, %block_.L_4128d1
  %loadMem_412923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10316 = getelementptr inbounds %struct.GPR, %struct.GPR* %10315, i32 0, i32 33
  %10317 = getelementptr inbounds %struct.Reg, %struct.Reg* %10316, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %10317 to i64*
  %10318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10319 = getelementptr inbounds %struct.GPR, %struct.GPR* %10318, i32 0, i32 1
  %10320 = getelementptr inbounds %struct.Reg, %struct.Reg* %10319, i32 0, i32 0
  %RAX.i191 = bitcast %union.anon* %10320 to i64*
  %10321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10322 = getelementptr inbounds %struct.GPR, %struct.GPR* %10321, i32 0, i32 15
  %10323 = getelementptr inbounds %struct.Reg, %struct.Reg* %10322, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %10323 to i64*
  %10324 = load i64, i64* %RBP.i192
  %10325 = sub i64 %10324, 40
  %10326 = load i64, i64* %PC.i190
  %10327 = add i64 %10326, 3
  store i64 %10327, i64* %PC.i190
  %10328 = inttoptr i64 %10325 to i32*
  %10329 = load i32, i32* %10328
  %10330 = zext i32 %10329 to i64
  store i64 %10330, i64* %RAX.i191, align 8
  store %struct.Memory* %loadMem_412923, %struct.Memory** %MEMORY
  %loadMem_412926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10332 = getelementptr inbounds %struct.GPR, %struct.GPR* %10331, i32 0, i32 33
  %10333 = getelementptr inbounds %struct.Reg, %struct.Reg* %10332, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %10333 to i64*
  %10334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10335 = getelementptr inbounds %struct.GPR, %struct.GPR* %10334, i32 0, i32 1
  %10336 = getelementptr inbounds %struct.Reg, %struct.Reg* %10335, i32 0, i32 0
  %RAX.i189 = bitcast %union.anon* %10336 to i64*
  %10337 = load i64, i64* %RAX.i189
  %10338 = load i64, i64* %PC.i188
  %10339 = add i64 %10338, 3
  store i64 %10339, i64* %PC.i188
  %10340 = trunc i64 %10337 to i32
  %10341 = sub i32 %10340, 1
  %10342 = zext i32 %10341 to i64
  store i64 %10342, i64* %RAX.i189, align 8
  %10343 = icmp ult i32 %10340, 1
  %10344 = zext i1 %10343 to i8
  %10345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10344, i8* %10345, align 1
  %10346 = and i32 %10341, 255
  %10347 = call i32 @llvm.ctpop.i32(i32 %10346)
  %10348 = trunc i32 %10347 to i8
  %10349 = and i8 %10348, 1
  %10350 = xor i8 %10349, 1
  %10351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10350, i8* %10351, align 1
  %10352 = xor i64 1, %10337
  %10353 = trunc i64 %10352 to i32
  %10354 = xor i32 %10353, %10341
  %10355 = lshr i32 %10354, 4
  %10356 = trunc i32 %10355 to i8
  %10357 = and i8 %10356, 1
  %10358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10357, i8* %10358, align 1
  %10359 = icmp eq i32 %10341, 0
  %10360 = zext i1 %10359 to i8
  %10361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10360, i8* %10361, align 1
  %10362 = lshr i32 %10341, 31
  %10363 = trunc i32 %10362 to i8
  %10364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10363, i8* %10364, align 1
  %10365 = lshr i32 %10340, 31
  %10366 = xor i32 %10362, %10365
  %10367 = add i32 %10366, %10365
  %10368 = icmp eq i32 %10367, 2
  %10369 = zext i1 %10368 to i8
  %10370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10369, i8* %10370, align 1
  store %struct.Memory* %loadMem_412926, %struct.Memory** %MEMORY
  %loadMem_412929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10372 = getelementptr inbounds %struct.GPR, %struct.GPR* %10371, i32 0, i32 33
  %10373 = getelementptr inbounds %struct.Reg, %struct.Reg* %10372, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %10373 to i64*
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10375 = getelementptr inbounds %struct.GPR, %struct.GPR* %10374, i32 0, i32 1
  %10376 = getelementptr inbounds %struct.Reg, %struct.Reg* %10375, i32 0, i32 0
  %EAX.i186 = bitcast %union.anon* %10376 to i32*
  %10377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10378 = getelementptr inbounds %struct.GPR, %struct.GPR* %10377, i32 0, i32 5
  %10379 = getelementptr inbounds %struct.Reg, %struct.Reg* %10378, i32 0, i32 0
  %RCX.i187 = bitcast %union.anon* %10379 to i64*
  %10380 = load i32, i32* %EAX.i186
  %10381 = zext i32 %10380 to i64
  %10382 = load i64, i64* %PC.i185
  %10383 = add i64 %10382, 3
  store i64 %10383, i64* %PC.i185
  %10384 = shl i64 %10381, 32
  %10385 = ashr exact i64 %10384, 32
  store i64 %10385, i64* %RCX.i187, align 8
  store %struct.Memory* %loadMem_412929, %struct.Memory** %MEMORY
  %loadMem_41292c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10387 = getelementptr inbounds %struct.GPR, %struct.GPR* %10386, i32 0, i32 33
  %10388 = getelementptr inbounds %struct.Reg, %struct.Reg* %10387, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %10388 to i64*
  %10389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10390 = getelementptr inbounds %struct.GPR, %struct.GPR* %10389, i32 0, i32 1
  %10391 = getelementptr inbounds %struct.Reg, %struct.Reg* %10390, i32 0, i32 0
  %RAX.i183 = bitcast %union.anon* %10391 to i64*
  %10392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10393 = getelementptr inbounds %struct.GPR, %struct.GPR* %10392, i32 0, i32 5
  %10394 = getelementptr inbounds %struct.Reg, %struct.Reg* %10393, i32 0, i32 0
  %RCX.i184 = bitcast %union.anon* %10394 to i64*
  %10395 = load i64, i64* %RCX.i184
  %10396 = add i64 %10395, 12099168
  %10397 = load i64, i64* %PC.i182
  %10398 = add i64 %10397, 8
  store i64 %10398, i64* %PC.i182
  %10399 = inttoptr i64 %10396 to i8*
  %10400 = load i8, i8* %10399
  %10401 = zext i8 %10400 to i64
  store i64 %10401, i64* %RAX.i183, align 8
  store %struct.Memory* %loadMem_41292c, %struct.Memory** %MEMORY
  %loadMem_412934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10403 = getelementptr inbounds %struct.GPR, %struct.GPR* %10402, i32 0, i32 33
  %10404 = getelementptr inbounds %struct.Reg, %struct.Reg* %10403, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %10404 to i64*
  %10405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10406 = getelementptr inbounds %struct.GPR, %struct.GPR* %10405, i32 0, i32 1
  %10407 = getelementptr inbounds %struct.Reg, %struct.Reg* %10406, i32 0, i32 0
  %EAX.i180 = bitcast %union.anon* %10407 to i32*
  %10408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10409 = getelementptr inbounds %struct.GPR, %struct.GPR* %10408, i32 0, i32 15
  %10410 = getelementptr inbounds %struct.Reg, %struct.Reg* %10409, i32 0, i32 0
  %RBP.i181 = bitcast %union.anon* %10410 to i64*
  %10411 = load i32, i32* %EAX.i180
  %10412 = zext i32 %10411 to i64
  %10413 = load i64, i64* %RBP.i181
  %10414 = sub i64 %10413, 12
  %10415 = load i64, i64* %PC.i179
  %10416 = add i64 %10415, 3
  store i64 %10416, i64* %PC.i179
  %10417 = inttoptr i64 %10414 to i32*
  %10418 = load i32, i32* %10417
  %10419 = sub i32 %10411, %10418
  %10420 = icmp ult i32 %10411, %10418
  %10421 = zext i1 %10420 to i8
  %10422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10421, i8* %10422, align 1
  %10423 = and i32 %10419, 255
  %10424 = call i32 @llvm.ctpop.i32(i32 %10423)
  %10425 = trunc i32 %10424 to i8
  %10426 = and i8 %10425, 1
  %10427 = xor i8 %10426, 1
  %10428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10427, i8* %10428, align 1
  %10429 = xor i32 %10418, %10411
  %10430 = xor i32 %10429, %10419
  %10431 = lshr i32 %10430, 4
  %10432 = trunc i32 %10431 to i8
  %10433 = and i8 %10432, 1
  %10434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10433, i8* %10434, align 1
  %10435 = icmp eq i32 %10419, 0
  %10436 = zext i1 %10435 to i8
  %10437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10436, i8* %10437, align 1
  %10438 = lshr i32 %10419, 31
  %10439 = trunc i32 %10438 to i8
  %10440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10439, i8* %10440, align 1
  %10441 = lshr i32 %10411, 31
  %10442 = lshr i32 %10418, 31
  %10443 = xor i32 %10442, %10441
  %10444 = xor i32 %10438, %10441
  %10445 = add i32 %10444, %10443
  %10446 = icmp eq i32 %10445, 2
  %10447 = zext i1 %10446 to i8
  %10448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10447, i8* %10448, align 1
  store %struct.Memory* %loadMem_412934, %struct.Memory** %MEMORY
  %loadMem_412937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10450 = getelementptr inbounds %struct.GPR, %struct.GPR* %10449, i32 0, i32 33
  %10451 = getelementptr inbounds %struct.Reg, %struct.Reg* %10450, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %10451 to i64*
  %10452 = load i64, i64* %PC.i178
  %10453 = add i64 %10452, 62
  %10454 = load i64, i64* %PC.i178
  %10455 = add i64 %10454, 6
  %10456 = load i64, i64* %PC.i178
  %10457 = add i64 %10456, 6
  store i64 %10457, i64* %PC.i178
  %10458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10459 = load i8, i8* %10458, align 1
  %10460 = icmp eq i8 %10459, 0
  %10461 = zext i1 %10460 to i8
  store i8 %10461, i8* %BRANCH_TAKEN, align 1
  %10462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10463 = select i1 %10460, i64 %10453, i64 %10455
  store i64 %10463, i64* %10462, align 8
  store %struct.Memory* %loadMem_412937, %struct.Memory** %MEMORY
  %loadBr_412937 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412937 = icmp eq i8 %loadBr_412937, 1
  br i1 %cmpBr_412937, label %block_.L_412975, label %block_41293d

block_41293d:                                     ; preds = %block_.L_412923
  %loadMem_41293d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10465 = getelementptr inbounds %struct.GPR, %struct.GPR* %10464, i32 0, i32 33
  %10466 = getelementptr inbounds %struct.Reg, %struct.Reg* %10465, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %10466 to i64*
  %10467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10468 = getelementptr inbounds %struct.GPR, %struct.GPR* %10467, i32 0, i32 1
  %10469 = getelementptr inbounds %struct.Reg, %struct.Reg* %10468, i32 0, i32 0
  %RAX.i177 = bitcast %union.anon* %10469 to i64*
  %10470 = load i64, i64* %PC.i176
  %10471 = add i64 %10470, 10
  store i64 %10471, i64* %PC.i176
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i177, align 8
  store %struct.Memory* %loadMem_41293d, %struct.Memory** %MEMORY
  %loadMem_412947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10473 = getelementptr inbounds %struct.GPR, %struct.GPR* %10472, i32 0, i32 33
  %10474 = getelementptr inbounds %struct.Reg, %struct.Reg* %10473, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %10474 to i64*
  %10475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10476 = getelementptr inbounds %struct.GPR, %struct.GPR* %10475, i32 0, i32 5
  %10477 = getelementptr inbounds %struct.Reg, %struct.Reg* %10476, i32 0, i32 0
  %RCX.i174 = bitcast %union.anon* %10477 to i64*
  %10478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10479 = getelementptr inbounds %struct.GPR, %struct.GPR* %10478, i32 0, i32 15
  %10480 = getelementptr inbounds %struct.Reg, %struct.Reg* %10479, i32 0, i32 0
  %RBP.i175 = bitcast %union.anon* %10480 to i64*
  %10481 = load i64, i64* %RBP.i175
  %10482 = sub i64 %10481, 40
  %10483 = load i64, i64* %PC.i173
  %10484 = add i64 %10483, 3
  store i64 %10484, i64* %PC.i173
  %10485 = inttoptr i64 %10482 to i32*
  %10486 = load i32, i32* %10485
  %10487 = zext i32 %10486 to i64
  store i64 %10487, i64* %RCX.i174, align 8
  store %struct.Memory* %loadMem_412947, %struct.Memory** %MEMORY
  %loadMem_41294a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10489 = getelementptr inbounds %struct.GPR, %struct.GPR* %10488, i32 0, i32 33
  %10490 = getelementptr inbounds %struct.Reg, %struct.Reg* %10489, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %10490 to i64*
  %10491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10492 = getelementptr inbounds %struct.GPR, %struct.GPR* %10491, i32 0, i32 5
  %10493 = getelementptr inbounds %struct.Reg, %struct.Reg* %10492, i32 0, i32 0
  %RCX.i172 = bitcast %union.anon* %10493 to i64*
  %10494 = load i64, i64* %RCX.i172
  %10495 = load i64, i64* %PC.i171
  %10496 = add i64 %10495, 3
  store i64 %10496, i64* %PC.i171
  %10497 = trunc i64 %10494 to i32
  %10498 = sub i32 %10497, 1
  %10499 = zext i32 %10498 to i64
  store i64 %10499, i64* %RCX.i172, align 8
  %10500 = icmp ult i32 %10497, 1
  %10501 = zext i1 %10500 to i8
  %10502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10501, i8* %10502, align 1
  %10503 = and i32 %10498, 255
  %10504 = call i32 @llvm.ctpop.i32(i32 %10503)
  %10505 = trunc i32 %10504 to i8
  %10506 = and i8 %10505, 1
  %10507 = xor i8 %10506, 1
  %10508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10507, i8* %10508, align 1
  %10509 = xor i64 1, %10494
  %10510 = trunc i64 %10509 to i32
  %10511 = xor i32 %10510, %10498
  %10512 = lshr i32 %10511, 4
  %10513 = trunc i32 %10512 to i8
  %10514 = and i8 %10513, 1
  %10515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10514, i8* %10515, align 1
  %10516 = icmp eq i32 %10498, 0
  %10517 = zext i1 %10516 to i8
  %10518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10517, i8* %10518, align 1
  %10519 = lshr i32 %10498, 31
  %10520 = trunc i32 %10519 to i8
  %10521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10520, i8* %10521, align 1
  %10522 = lshr i32 %10497, 31
  %10523 = xor i32 %10519, %10522
  %10524 = add i32 %10523, %10522
  %10525 = icmp eq i32 %10524, 2
  %10526 = zext i1 %10525 to i8
  %10527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10526, i8* %10527, align 1
  store %struct.Memory* %loadMem_41294a, %struct.Memory** %MEMORY
  %loadMem_41294d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10529 = getelementptr inbounds %struct.GPR, %struct.GPR* %10528, i32 0, i32 33
  %10530 = getelementptr inbounds %struct.Reg, %struct.Reg* %10529, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %10530 to i64*
  %10531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10532 = getelementptr inbounds %struct.GPR, %struct.GPR* %10531, i32 0, i32 5
  %10533 = getelementptr inbounds %struct.Reg, %struct.Reg* %10532, i32 0, i32 0
  %ECX.i169 = bitcast %union.anon* %10533 to i32*
  %10534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10535 = getelementptr inbounds %struct.GPR, %struct.GPR* %10534, i32 0, i32 7
  %10536 = getelementptr inbounds %struct.Reg, %struct.Reg* %10535, i32 0, i32 0
  %RDX.i170 = bitcast %union.anon* %10536 to i64*
  %10537 = load i32, i32* %ECX.i169
  %10538 = zext i32 %10537 to i64
  %10539 = load i64, i64* %PC.i168
  %10540 = add i64 %10539, 3
  store i64 %10540, i64* %PC.i168
  %10541 = shl i64 %10538, 32
  %10542 = ashr exact i64 %10541, 32
  store i64 %10542, i64* %RDX.i170, align 8
  store %struct.Memory* %loadMem_41294d, %struct.Memory** %MEMORY
  %loadMem_412950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10544 = getelementptr inbounds %struct.GPR, %struct.GPR* %10543, i32 0, i32 33
  %10545 = getelementptr inbounds %struct.Reg, %struct.Reg* %10544, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %10545 to i64*
  %10546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10547 = getelementptr inbounds %struct.GPR, %struct.GPR* %10546, i32 0, i32 7
  %10548 = getelementptr inbounds %struct.Reg, %struct.Reg* %10547, i32 0, i32 0
  %RDX.i167 = bitcast %union.anon* %10548 to i64*
  %10549 = load i64, i64* %RDX.i167
  %10550 = mul i64 %10549, 4
  %10551 = add i64 %10550, 11187184
  %10552 = load i64, i64* %PC.i166
  %10553 = add i64 %10552, 8
  store i64 %10553, i64* %PC.i166
  %10554 = inttoptr i64 %10551 to i32*
  %10555 = load i32, i32* %10554
  %10556 = sext i32 %10555 to i64
  store i64 %10556, i64* %RDX.i167, align 8
  store %struct.Memory* %loadMem_412950, %struct.Memory** %MEMORY
  %loadMem_412958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10558 = getelementptr inbounds %struct.GPR, %struct.GPR* %10557, i32 0, i32 33
  %10559 = getelementptr inbounds %struct.Reg, %struct.Reg* %10558, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %10559 to i64*
  %10560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10561 = getelementptr inbounds %struct.GPR, %struct.GPR* %10560, i32 0, i32 7
  %10562 = getelementptr inbounds %struct.Reg, %struct.Reg* %10561, i32 0, i32 0
  %RDX.i165 = bitcast %union.anon* %10562 to i64*
  %10563 = load i64, i64* %RDX.i165
  %10564 = load i64, i64* %PC.i164
  %10565 = add i64 %10564, 7
  store i64 %10565, i64* %PC.i164
  %10566 = sext i64 %10563 to i128
  %10567 = and i128 %10566, -18446744073709551616
  %10568 = zext i64 %10563 to i128
  %10569 = or i128 %10567, %10568
  %10570 = mul i128 744, %10569
  %10571 = trunc i128 %10570 to i64
  store i64 %10571, i64* %RDX.i165, align 8
  %10572 = sext i64 %10571 to i128
  %10573 = icmp ne i128 %10572, %10570
  %10574 = zext i1 %10573 to i8
  %10575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10574, i8* %10575, align 1
  %10576 = trunc i128 %10570 to i32
  %10577 = and i32 %10576, 255
  %10578 = call i32 @llvm.ctpop.i32(i32 %10577)
  %10579 = trunc i32 %10578 to i8
  %10580 = and i8 %10579, 1
  %10581 = xor i8 %10580, 1
  %10582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10581, i8* %10582, align 1
  %10583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10583, align 1
  %10584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10584, align 1
  %10585 = lshr i64 %10571, 63
  %10586 = trunc i64 %10585 to i8
  %10587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10586, i8* %10587, align 1
  %10588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10574, i8* %10588, align 1
  store %struct.Memory* %loadMem_412958, %struct.Memory** %MEMORY
  %loadMem_41295f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10590 = getelementptr inbounds %struct.GPR, %struct.GPR* %10589, i32 0, i32 33
  %10591 = getelementptr inbounds %struct.Reg, %struct.Reg* %10590, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %10591 to i64*
  %10592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10593 = getelementptr inbounds %struct.GPR, %struct.GPR* %10592, i32 0, i32 1
  %10594 = getelementptr inbounds %struct.Reg, %struct.Reg* %10593, i32 0, i32 0
  %RAX.i162 = bitcast %union.anon* %10594 to i64*
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10596 = getelementptr inbounds %struct.GPR, %struct.GPR* %10595, i32 0, i32 7
  %10597 = getelementptr inbounds %struct.Reg, %struct.Reg* %10596, i32 0, i32 0
  %RDX.i163 = bitcast %union.anon* %10597 to i64*
  %10598 = load i64, i64* %RAX.i162
  %10599 = load i64, i64* %RDX.i163
  %10600 = load i64, i64* %PC.i161
  %10601 = add i64 %10600, 3
  store i64 %10601, i64* %PC.i161
  %10602 = add i64 %10599, %10598
  store i64 %10602, i64* %RAX.i162, align 8
  %10603 = icmp ult i64 %10602, %10598
  %10604 = icmp ult i64 %10602, %10599
  %10605 = or i1 %10603, %10604
  %10606 = zext i1 %10605 to i8
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10606, i8* %10607, align 1
  %10608 = trunc i64 %10602 to i32
  %10609 = and i32 %10608, 255
  %10610 = call i32 @llvm.ctpop.i32(i32 %10609)
  %10611 = trunc i32 %10610 to i8
  %10612 = and i8 %10611, 1
  %10613 = xor i8 %10612, 1
  %10614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10613, i8* %10614, align 1
  %10615 = xor i64 %10599, %10598
  %10616 = xor i64 %10615, %10602
  %10617 = lshr i64 %10616, 4
  %10618 = trunc i64 %10617 to i8
  %10619 = and i8 %10618, 1
  %10620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10619, i8* %10620, align 1
  %10621 = icmp eq i64 %10602, 0
  %10622 = zext i1 %10621 to i8
  %10623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10622, i8* %10623, align 1
  %10624 = lshr i64 %10602, 63
  %10625 = trunc i64 %10624 to i8
  %10626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10625, i8* %10626, align 1
  %10627 = lshr i64 %10598, 63
  %10628 = lshr i64 %10599, 63
  %10629 = xor i64 %10624, %10627
  %10630 = xor i64 %10624, %10628
  %10631 = add i64 %10629, %10630
  %10632 = icmp eq i64 %10631, 2
  %10633 = zext i1 %10632 to i8
  %10634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10633, i8* %10634, align 1
  store %struct.Memory* %loadMem_41295f, %struct.Memory** %MEMORY
  %loadMem_412962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10636 = getelementptr inbounds %struct.GPR, %struct.GPR* %10635, i32 0, i32 33
  %10637 = getelementptr inbounds %struct.Reg, %struct.Reg* %10636, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %10637 to i64*
  %10638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10639 = getelementptr inbounds %struct.GPR, %struct.GPR* %10638, i32 0, i32 1
  %10640 = getelementptr inbounds %struct.Reg, %struct.Reg* %10639, i32 0, i32 0
  %RAX.i159 = bitcast %union.anon* %10640 to i64*
  %10641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10642 = getelementptr inbounds %struct.GPR, %struct.GPR* %10641, i32 0, i32 5
  %10643 = getelementptr inbounds %struct.Reg, %struct.Reg* %10642, i32 0, i32 0
  %RCX.i160 = bitcast %union.anon* %10643 to i64*
  %10644 = load i64, i64* %RAX.i159
  %10645 = add i64 %10644, 740
  %10646 = load i64, i64* %PC.i158
  %10647 = add i64 %10646, 6
  store i64 %10647, i64* %PC.i158
  %10648 = inttoptr i64 %10645 to i32*
  %10649 = load i32, i32* %10648
  %10650 = zext i32 %10649 to i64
  store i64 %10650, i64* %RCX.i160, align 8
  store %struct.Memory* %loadMem_412962, %struct.Memory** %MEMORY
  %loadMem_412968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10652 = getelementptr inbounds %struct.GPR, %struct.GPR* %10651, i32 0, i32 33
  %10653 = getelementptr inbounds %struct.Reg, %struct.Reg* %10652, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %10653 to i64*
  %10654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10655 = getelementptr inbounds %struct.GPR, %struct.GPR* %10654, i32 0, i32 5
  %10656 = getelementptr inbounds %struct.Reg, %struct.Reg* %10655, i32 0, i32 0
  %ECX.i157 = bitcast %union.anon* %10656 to i32*
  %10657 = load i32, i32* %ECX.i157
  %10658 = zext i32 %10657 to i64
  %10659 = load i64, i64* %PC.i156
  %10660 = add i64 %10659, 7
  store i64 %10660, i64* %PC.i156
  %10661 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %10662 = sub i32 %10657, %10661
  %10663 = icmp ult i32 %10657, %10661
  %10664 = zext i1 %10663 to i8
  %10665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10664, i8* %10665, align 1
  %10666 = and i32 %10662, 255
  %10667 = call i32 @llvm.ctpop.i32(i32 %10666)
  %10668 = trunc i32 %10667 to i8
  %10669 = and i8 %10668, 1
  %10670 = xor i8 %10669, 1
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10670, i8* %10671, align 1
  %10672 = xor i32 %10661, %10657
  %10673 = xor i32 %10672, %10662
  %10674 = lshr i32 %10673, 4
  %10675 = trunc i32 %10674 to i8
  %10676 = and i8 %10675, 1
  %10677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10676, i8* %10677, align 1
  %10678 = icmp eq i32 %10662, 0
  %10679 = zext i1 %10678 to i8
  %10680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10679, i8* %10680, align 1
  %10681 = lshr i32 %10662, 31
  %10682 = trunc i32 %10681 to i8
  %10683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10682, i8* %10683, align 1
  %10684 = lshr i32 %10657, 31
  %10685 = lshr i32 %10661, 31
  %10686 = xor i32 %10685, %10684
  %10687 = xor i32 %10681, %10684
  %10688 = add i32 %10687, %10686
  %10689 = icmp eq i32 %10688, 2
  %10690 = zext i1 %10689 to i8
  %10691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10690, i8* %10691, align 1
  store %struct.Memory* %loadMem_412968, %struct.Memory** %MEMORY
  %loadMem_41296f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10693 = getelementptr inbounds %struct.GPR, %struct.GPR* %10692, i32 0, i32 33
  %10694 = getelementptr inbounds %struct.Reg, %struct.Reg* %10693, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %10694 to i64*
  %10695 = load i64, i64* %PC.i155
  %10696 = add i64 %10695, 170
  %10697 = load i64, i64* %PC.i155
  %10698 = add i64 %10697, 6
  %10699 = load i64, i64* %PC.i155
  %10700 = add i64 %10699, 6
  store i64 %10700, i64* %PC.i155
  %10701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10702 = load i8, i8* %10701, align 1
  store i8 %10702, i8* %BRANCH_TAKEN, align 1
  %10703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10704 = icmp ne i8 %10702, 0
  %10705 = select i1 %10704, i64 %10696, i64 %10698
  store i64 %10705, i64* %10703, align 8
  store %struct.Memory* %loadMem_41296f, %struct.Memory** %MEMORY
  %loadBr_41296f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41296f = icmp eq i8 %loadBr_41296f, 1
  br i1 %cmpBr_41296f, label %block_.L_412a19, label %block_.L_412975

block_.L_412975:                                  ; preds = %block_41293d, %block_.L_412923
  %loadMem_412975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10707 = getelementptr inbounds %struct.GPR, %struct.GPR* %10706, i32 0, i32 33
  %10708 = getelementptr inbounds %struct.Reg, %struct.Reg* %10707, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %10708 to i64*
  %10709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10710 = getelementptr inbounds %struct.GPR, %struct.GPR* %10709, i32 0, i32 1
  %10711 = getelementptr inbounds %struct.Reg, %struct.Reg* %10710, i32 0, i32 0
  %RAX.i153 = bitcast %union.anon* %10711 to i64*
  %10712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10713 = getelementptr inbounds %struct.GPR, %struct.GPR* %10712, i32 0, i32 15
  %10714 = getelementptr inbounds %struct.Reg, %struct.Reg* %10713, i32 0, i32 0
  %RBP.i154 = bitcast %union.anon* %10714 to i64*
  %10715 = load i64, i64* %RBP.i154
  %10716 = sub i64 %10715, 40
  %10717 = load i64, i64* %PC.i152
  %10718 = add i64 %10717, 3
  store i64 %10718, i64* %PC.i152
  %10719 = inttoptr i64 %10716 to i32*
  %10720 = load i32, i32* %10719
  %10721 = zext i32 %10720 to i64
  store i64 %10721, i64* %RAX.i153, align 8
  store %struct.Memory* %loadMem_412975, %struct.Memory** %MEMORY
  %loadMem_412978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10723 = getelementptr inbounds %struct.GPR, %struct.GPR* %10722, i32 0, i32 33
  %10724 = getelementptr inbounds %struct.Reg, %struct.Reg* %10723, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %10724 to i64*
  %10725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10726 = getelementptr inbounds %struct.GPR, %struct.GPR* %10725, i32 0, i32 1
  %10727 = getelementptr inbounds %struct.Reg, %struct.Reg* %10726, i32 0, i32 0
  %RAX.i151 = bitcast %union.anon* %10727 to i64*
  %10728 = load i64, i64* %RAX.i151
  %10729 = load i64, i64* %PC.i150
  %10730 = add i64 %10729, 3
  store i64 %10730, i64* %PC.i150
  %10731 = trunc i64 %10728 to i32
  %10732 = sub i32 %10731, 20
  %10733 = zext i32 %10732 to i64
  store i64 %10733, i64* %RAX.i151, align 8
  %10734 = icmp ult i32 %10731, 20
  %10735 = zext i1 %10734 to i8
  %10736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10735, i8* %10736, align 1
  %10737 = and i32 %10732, 255
  %10738 = call i32 @llvm.ctpop.i32(i32 %10737)
  %10739 = trunc i32 %10738 to i8
  %10740 = and i8 %10739, 1
  %10741 = xor i8 %10740, 1
  %10742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10741, i8* %10742, align 1
  %10743 = xor i64 20, %10728
  %10744 = trunc i64 %10743 to i32
  %10745 = xor i32 %10744, %10732
  %10746 = lshr i32 %10745, 4
  %10747 = trunc i32 %10746 to i8
  %10748 = and i8 %10747, 1
  %10749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10748, i8* %10749, align 1
  %10750 = icmp eq i32 %10732, 0
  %10751 = zext i1 %10750 to i8
  %10752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10751, i8* %10752, align 1
  %10753 = lshr i32 %10732, 31
  %10754 = trunc i32 %10753 to i8
  %10755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10754, i8* %10755, align 1
  %10756 = lshr i32 %10731, 31
  %10757 = xor i32 %10753, %10756
  %10758 = add i32 %10757, %10756
  %10759 = icmp eq i32 %10758, 2
  %10760 = zext i1 %10759 to i8
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10760, i8* %10761, align 1
  store %struct.Memory* %loadMem_412978, %struct.Memory** %MEMORY
  %loadMem_41297b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10763 = getelementptr inbounds %struct.GPR, %struct.GPR* %10762, i32 0, i32 33
  %10764 = getelementptr inbounds %struct.Reg, %struct.Reg* %10763, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %10764 to i64*
  %10765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10766 = getelementptr inbounds %struct.GPR, %struct.GPR* %10765, i32 0, i32 1
  %10767 = getelementptr inbounds %struct.Reg, %struct.Reg* %10766, i32 0, i32 0
  %EAX.i148 = bitcast %union.anon* %10767 to i32*
  %10768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10769 = getelementptr inbounds %struct.GPR, %struct.GPR* %10768, i32 0, i32 5
  %10770 = getelementptr inbounds %struct.Reg, %struct.Reg* %10769, i32 0, i32 0
  %RCX.i149 = bitcast %union.anon* %10770 to i64*
  %10771 = load i32, i32* %EAX.i148
  %10772 = zext i32 %10771 to i64
  %10773 = load i64, i64* %PC.i147
  %10774 = add i64 %10773, 3
  store i64 %10774, i64* %PC.i147
  %10775 = shl i64 %10772, 32
  %10776 = ashr exact i64 %10775, 32
  store i64 %10776, i64* %RCX.i149, align 8
  store %struct.Memory* %loadMem_41297b, %struct.Memory** %MEMORY
  %loadMem_41297e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10778 = getelementptr inbounds %struct.GPR, %struct.GPR* %10777, i32 0, i32 33
  %10779 = getelementptr inbounds %struct.Reg, %struct.Reg* %10778, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %10779 to i64*
  %10780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10781 = getelementptr inbounds %struct.GPR, %struct.GPR* %10780, i32 0, i32 1
  %10782 = getelementptr inbounds %struct.Reg, %struct.Reg* %10781, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %10782 to i64*
  %10783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10784 = getelementptr inbounds %struct.GPR, %struct.GPR* %10783, i32 0, i32 5
  %10785 = getelementptr inbounds %struct.Reg, %struct.Reg* %10784, i32 0, i32 0
  %RCX.i146 = bitcast %union.anon* %10785 to i64*
  %10786 = load i64, i64* %RCX.i146
  %10787 = add i64 %10786, 12099168
  %10788 = load i64, i64* %PC.i144
  %10789 = add i64 %10788, 8
  store i64 %10789, i64* %PC.i144
  %10790 = inttoptr i64 %10787 to i8*
  %10791 = load i8, i8* %10790
  %10792 = zext i8 %10791 to i64
  store i64 %10792, i64* %RAX.i145, align 8
  store %struct.Memory* %loadMem_41297e, %struct.Memory** %MEMORY
  %loadMem_412986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10794 = getelementptr inbounds %struct.GPR, %struct.GPR* %10793, i32 0, i32 33
  %10795 = getelementptr inbounds %struct.Reg, %struct.Reg* %10794, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %10795 to i64*
  %10796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10797 = getelementptr inbounds %struct.GPR, %struct.GPR* %10796, i32 0, i32 1
  %10798 = getelementptr inbounds %struct.Reg, %struct.Reg* %10797, i32 0, i32 0
  %EAX.i142 = bitcast %union.anon* %10798 to i32*
  %10799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10800 = getelementptr inbounds %struct.GPR, %struct.GPR* %10799, i32 0, i32 15
  %10801 = getelementptr inbounds %struct.Reg, %struct.Reg* %10800, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %10801 to i64*
  %10802 = load i32, i32* %EAX.i142
  %10803 = zext i32 %10802 to i64
  %10804 = load i64, i64* %RBP.i143
  %10805 = sub i64 %10804, 12
  %10806 = load i64, i64* %PC.i141
  %10807 = add i64 %10806, 3
  store i64 %10807, i64* %PC.i141
  %10808 = inttoptr i64 %10805 to i32*
  %10809 = load i32, i32* %10808
  %10810 = sub i32 %10802, %10809
  %10811 = icmp ult i32 %10802, %10809
  %10812 = zext i1 %10811 to i8
  %10813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10812, i8* %10813, align 1
  %10814 = and i32 %10810, 255
  %10815 = call i32 @llvm.ctpop.i32(i32 %10814)
  %10816 = trunc i32 %10815 to i8
  %10817 = and i8 %10816, 1
  %10818 = xor i8 %10817, 1
  %10819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10818, i8* %10819, align 1
  %10820 = xor i32 %10809, %10802
  %10821 = xor i32 %10820, %10810
  %10822 = lshr i32 %10821, 4
  %10823 = trunc i32 %10822 to i8
  %10824 = and i8 %10823, 1
  %10825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10824, i8* %10825, align 1
  %10826 = icmp eq i32 %10810, 0
  %10827 = zext i1 %10826 to i8
  %10828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10827, i8* %10828, align 1
  %10829 = lshr i32 %10810, 31
  %10830 = trunc i32 %10829 to i8
  %10831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10830, i8* %10831, align 1
  %10832 = lshr i32 %10802, 31
  %10833 = lshr i32 %10809, 31
  %10834 = xor i32 %10833, %10832
  %10835 = xor i32 %10829, %10832
  %10836 = add i32 %10835, %10834
  %10837 = icmp eq i32 %10836, 2
  %10838 = zext i1 %10837 to i8
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10838, i8* %10839, align 1
  store %struct.Memory* %loadMem_412986, %struct.Memory** %MEMORY
  %loadMem_412989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10841 = getelementptr inbounds %struct.GPR, %struct.GPR* %10840, i32 0, i32 33
  %10842 = getelementptr inbounds %struct.Reg, %struct.Reg* %10841, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %10842 to i64*
  %10843 = load i64, i64* %PC.i140
  %10844 = add i64 %10843, 62
  %10845 = load i64, i64* %PC.i140
  %10846 = add i64 %10845, 6
  %10847 = load i64, i64* %PC.i140
  %10848 = add i64 %10847, 6
  store i64 %10848, i64* %PC.i140
  %10849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10850 = load i8, i8* %10849, align 1
  %10851 = icmp eq i8 %10850, 0
  %10852 = zext i1 %10851 to i8
  store i8 %10852, i8* %BRANCH_TAKEN, align 1
  %10853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10854 = select i1 %10851, i64 %10844, i64 %10846
  store i64 %10854, i64* %10853, align 8
  store %struct.Memory* %loadMem_412989, %struct.Memory** %MEMORY
  %loadBr_412989 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412989 = icmp eq i8 %loadBr_412989, 1
  br i1 %cmpBr_412989, label %block_.L_4129c7, label %block_41298f

block_41298f:                                     ; preds = %block_.L_412975
  %loadMem_41298f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10856 = getelementptr inbounds %struct.GPR, %struct.GPR* %10855, i32 0, i32 33
  %10857 = getelementptr inbounds %struct.Reg, %struct.Reg* %10856, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %10857 to i64*
  %10858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10859 = getelementptr inbounds %struct.GPR, %struct.GPR* %10858, i32 0, i32 1
  %10860 = getelementptr inbounds %struct.Reg, %struct.Reg* %10859, i32 0, i32 0
  %RAX.i139 = bitcast %union.anon* %10860 to i64*
  %10861 = load i64, i64* %PC.i138
  %10862 = add i64 %10861, 10
  store i64 %10862, i64* %PC.i138
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i139, align 8
  store %struct.Memory* %loadMem_41298f, %struct.Memory** %MEMORY
  %loadMem_412999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10864 = getelementptr inbounds %struct.GPR, %struct.GPR* %10863, i32 0, i32 33
  %10865 = getelementptr inbounds %struct.Reg, %struct.Reg* %10864, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %10865 to i64*
  %10866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10867 = getelementptr inbounds %struct.GPR, %struct.GPR* %10866, i32 0, i32 5
  %10868 = getelementptr inbounds %struct.Reg, %struct.Reg* %10867, i32 0, i32 0
  %RCX.i136 = bitcast %union.anon* %10868 to i64*
  %10869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10870 = getelementptr inbounds %struct.GPR, %struct.GPR* %10869, i32 0, i32 15
  %10871 = getelementptr inbounds %struct.Reg, %struct.Reg* %10870, i32 0, i32 0
  %RBP.i137 = bitcast %union.anon* %10871 to i64*
  %10872 = load i64, i64* %RBP.i137
  %10873 = sub i64 %10872, 40
  %10874 = load i64, i64* %PC.i135
  %10875 = add i64 %10874, 3
  store i64 %10875, i64* %PC.i135
  %10876 = inttoptr i64 %10873 to i32*
  %10877 = load i32, i32* %10876
  %10878 = zext i32 %10877 to i64
  store i64 %10878, i64* %RCX.i136, align 8
  store %struct.Memory* %loadMem_412999, %struct.Memory** %MEMORY
  %loadMem_41299c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10880 = getelementptr inbounds %struct.GPR, %struct.GPR* %10879, i32 0, i32 33
  %10881 = getelementptr inbounds %struct.Reg, %struct.Reg* %10880, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %10881 to i64*
  %10882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10883 = getelementptr inbounds %struct.GPR, %struct.GPR* %10882, i32 0, i32 5
  %10884 = getelementptr inbounds %struct.Reg, %struct.Reg* %10883, i32 0, i32 0
  %RCX.i134 = bitcast %union.anon* %10884 to i64*
  %10885 = load i64, i64* %RCX.i134
  %10886 = load i64, i64* %PC.i133
  %10887 = add i64 %10886, 3
  store i64 %10887, i64* %PC.i133
  %10888 = trunc i64 %10885 to i32
  %10889 = sub i32 %10888, 20
  %10890 = zext i32 %10889 to i64
  store i64 %10890, i64* %RCX.i134, align 8
  %10891 = icmp ult i32 %10888, 20
  %10892 = zext i1 %10891 to i8
  %10893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10892, i8* %10893, align 1
  %10894 = and i32 %10889, 255
  %10895 = call i32 @llvm.ctpop.i32(i32 %10894)
  %10896 = trunc i32 %10895 to i8
  %10897 = and i8 %10896, 1
  %10898 = xor i8 %10897, 1
  %10899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10898, i8* %10899, align 1
  %10900 = xor i64 20, %10885
  %10901 = trunc i64 %10900 to i32
  %10902 = xor i32 %10901, %10889
  %10903 = lshr i32 %10902, 4
  %10904 = trunc i32 %10903 to i8
  %10905 = and i8 %10904, 1
  %10906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10905, i8* %10906, align 1
  %10907 = icmp eq i32 %10889, 0
  %10908 = zext i1 %10907 to i8
  %10909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10908, i8* %10909, align 1
  %10910 = lshr i32 %10889, 31
  %10911 = trunc i32 %10910 to i8
  %10912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10911, i8* %10912, align 1
  %10913 = lshr i32 %10888, 31
  %10914 = xor i32 %10910, %10913
  %10915 = add i32 %10914, %10913
  %10916 = icmp eq i32 %10915, 2
  %10917 = zext i1 %10916 to i8
  %10918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10917, i8* %10918, align 1
  store %struct.Memory* %loadMem_41299c, %struct.Memory** %MEMORY
  %loadMem_41299f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10920 = getelementptr inbounds %struct.GPR, %struct.GPR* %10919, i32 0, i32 33
  %10921 = getelementptr inbounds %struct.Reg, %struct.Reg* %10920, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %10921 to i64*
  %10922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10923 = getelementptr inbounds %struct.GPR, %struct.GPR* %10922, i32 0, i32 5
  %10924 = getelementptr inbounds %struct.Reg, %struct.Reg* %10923, i32 0, i32 0
  %ECX.i131 = bitcast %union.anon* %10924 to i32*
  %10925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10926 = getelementptr inbounds %struct.GPR, %struct.GPR* %10925, i32 0, i32 7
  %10927 = getelementptr inbounds %struct.Reg, %struct.Reg* %10926, i32 0, i32 0
  %RDX.i132 = bitcast %union.anon* %10927 to i64*
  %10928 = load i32, i32* %ECX.i131
  %10929 = zext i32 %10928 to i64
  %10930 = load i64, i64* %PC.i130
  %10931 = add i64 %10930, 3
  store i64 %10931, i64* %PC.i130
  %10932 = shl i64 %10929, 32
  %10933 = ashr exact i64 %10932, 32
  store i64 %10933, i64* %RDX.i132, align 8
  store %struct.Memory* %loadMem_41299f, %struct.Memory** %MEMORY
  %loadMem_4129a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10935 = getelementptr inbounds %struct.GPR, %struct.GPR* %10934, i32 0, i32 33
  %10936 = getelementptr inbounds %struct.Reg, %struct.Reg* %10935, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %10936 to i64*
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10938 = getelementptr inbounds %struct.GPR, %struct.GPR* %10937, i32 0, i32 7
  %10939 = getelementptr inbounds %struct.Reg, %struct.Reg* %10938, i32 0, i32 0
  %RDX.i129 = bitcast %union.anon* %10939 to i64*
  %10940 = load i64, i64* %RDX.i129
  %10941 = mul i64 %10940, 4
  %10942 = add i64 %10941, 11187184
  %10943 = load i64, i64* %PC.i128
  %10944 = add i64 %10943, 8
  store i64 %10944, i64* %PC.i128
  %10945 = inttoptr i64 %10942 to i32*
  %10946 = load i32, i32* %10945
  %10947 = sext i32 %10946 to i64
  store i64 %10947, i64* %RDX.i129, align 8
  store %struct.Memory* %loadMem_4129a2, %struct.Memory** %MEMORY
  %loadMem_4129aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10949 = getelementptr inbounds %struct.GPR, %struct.GPR* %10948, i32 0, i32 33
  %10950 = getelementptr inbounds %struct.Reg, %struct.Reg* %10949, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %10950 to i64*
  %10951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10952 = getelementptr inbounds %struct.GPR, %struct.GPR* %10951, i32 0, i32 7
  %10953 = getelementptr inbounds %struct.Reg, %struct.Reg* %10952, i32 0, i32 0
  %RDX.i127 = bitcast %union.anon* %10953 to i64*
  %10954 = load i64, i64* %RDX.i127
  %10955 = load i64, i64* %PC.i126
  %10956 = add i64 %10955, 7
  store i64 %10956, i64* %PC.i126
  %10957 = sext i64 %10954 to i128
  %10958 = and i128 %10957, -18446744073709551616
  %10959 = zext i64 %10954 to i128
  %10960 = or i128 %10958, %10959
  %10961 = mul i128 744, %10960
  %10962 = trunc i128 %10961 to i64
  store i64 %10962, i64* %RDX.i127, align 8
  %10963 = sext i64 %10962 to i128
  %10964 = icmp ne i128 %10963, %10961
  %10965 = zext i1 %10964 to i8
  %10966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10965, i8* %10966, align 1
  %10967 = trunc i128 %10961 to i32
  %10968 = and i32 %10967, 255
  %10969 = call i32 @llvm.ctpop.i32(i32 %10968)
  %10970 = trunc i32 %10969 to i8
  %10971 = and i8 %10970, 1
  %10972 = xor i8 %10971, 1
  %10973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10972, i8* %10973, align 1
  %10974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10974, align 1
  %10975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10975, align 1
  %10976 = lshr i64 %10962, 63
  %10977 = trunc i64 %10976 to i8
  %10978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10977, i8* %10978, align 1
  %10979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10965, i8* %10979, align 1
  store %struct.Memory* %loadMem_4129aa, %struct.Memory** %MEMORY
  %loadMem_4129b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10981 = getelementptr inbounds %struct.GPR, %struct.GPR* %10980, i32 0, i32 33
  %10982 = getelementptr inbounds %struct.Reg, %struct.Reg* %10981, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %10982 to i64*
  %10983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10984 = getelementptr inbounds %struct.GPR, %struct.GPR* %10983, i32 0, i32 1
  %10985 = getelementptr inbounds %struct.Reg, %struct.Reg* %10984, i32 0, i32 0
  %RAX.i124 = bitcast %union.anon* %10985 to i64*
  %10986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10987 = getelementptr inbounds %struct.GPR, %struct.GPR* %10986, i32 0, i32 7
  %10988 = getelementptr inbounds %struct.Reg, %struct.Reg* %10987, i32 0, i32 0
  %RDX.i125 = bitcast %union.anon* %10988 to i64*
  %10989 = load i64, i64* %RAX.i124
  %10990 = load i64, i64* %RDX.i125
  %10991 = load i64, i64* %PC.i123
  %10992 = add i64 %10991, 3
  store i64 %10992, i64* %PC.i123
  %10993 = add i64 %10990, %10989
  store i64 %10993, i64* %RAX.i124, align 8
  %10994 = icmp ult i64 %10993, %10989
  %10995 = icmp ult i64 %10993, %10990
  %10996 = or i1 %10994, %10995
  %10997 = zext i1 %10996 to i8
  %10998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10997, i8* %10998, align 1
  %10999 = trunc i64 %10993 to i32
  %11000 = and i32 %10999, 255
  %11001 = call i32 @llvm.ctpop.i32(i32 %11000)
  %11002 = trunc i32 %11001 to i8
  %11003 = and i8 %11002, 1
  %11004 = xor i8 %11003, 1
  %11005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11004, i8* %11005, align 1
  %11006 = xor i64 %10990, %10989
  %11007 = xor i64 %11006, %10993
  %11008 = lshr i64 %11007, 4
  %11009 = trunc i64 %11008 to i8
  %11010 = and i8 %11009, 1
  %11011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11010, i8* %11011, align 1
  %11012 = icmp eq i64 %10993, 0
  %11013 = zext i1 %11012 to i8
  %11014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11013, i8* %11014, align 1
  %11015 = lshr i64 %10993, 63
  %11016 = trunc i64 %11015 to i8
  %11017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11016, i8* %11017, align 1
  %11018 = lshr i64 %10989, 63
  %11019 = lshr i64 %10990, 63
  %11020 = xor i64 %11015, %11018
  %11021 = xor i64 %11015, %11019
  %11022 = add i64 %11020, %11021
  %11023 = icmp eq i64 %11022, 2
  %11024 = zext i1 %11023 to i8
  %11025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11024, i8* %11025, align 1
  store %struct.Memory* %loadMem_4129b1, %struct.Memory** %MEMORY
  %loadMem_4129b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11027 = getelementptr inbounds %struct.GPR, %struct.GPR* %11026, i32 0, i32 33
  %11028 = getelementptr inbounds %struct.Reg, %struct.Reg* %11027, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %11028 to i64*
  %11029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11030 = getelementptr inbounds %struct.GPR, %struct.GPR* %11029, i32 0, i32 1
  %11031 = getelementptr inbounds %struct.Reg, %struct.Reg* %11030, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %11031 to i64*
  %11032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11033 = getelementptr inbounds %struct.GPR, %struct.GPR* %11032, i32 0, i32 5
  %11034 = getelementptr inbounds %struct.Reg, %struct.Reg* %11033, i32 0, i32 0
  %RCX.i122 = bitcast %union.anon* %11034 to i64*
  %11035 = load i64, i64* %RAX.i121
  %11036 = add i64 %11035, 740
  %11037 = load i64, i64* %PC.i120
  %11038 = add i64 %11037, 6
  store i64 %11038, i64* %PC.i120
  %11039 = inttoptr i64 %11036 to i32*
  %11040 = load i32, i32* %11039
  %11041 = zext i32 %11040 to i64
  store i64 %11041, i64* %RCX.i122, align 8
  store %struct.Memory* %loadMem_4129b4, %struct.Memory** %MEMORY
  %loadMem_4129ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %11042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11043 = getelementptr inbounds %struct.GPR, %struct.GPR* %11042, i32 0, i32 33
  %11044 = getelementptr inbounds %struct.Reg, %struct.Reg* %11043, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %11044 to i64*
  %11045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11046 = getelementptr inbounds %struct.GPR, %struct.GPR* %11045, i32 0, i32 5
  %11047 = getelementptr inbounds %struct.Reg, %struct.Reg* %11046, i32 0, i32 0
  %ECX.i119 = bitcast %union.anon* %11047 to i32*
  %11048 = load i32, i32* %ECX.i119
  %11049 = zext i32 %11048 to i64
  %11050 = load i64, i64* %PC.i118
  %11051 = add i64 %11050, 7
  store i64 %11051, i64* %PC.i118
  %11052 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %11053 = sub i32 %11048, %11052
  %11054 = icmp ult i32 %11048, %11052
  %11055 = zext i1 %11054 to i8
  %11056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11055, i8* %11056, align 1
  %11057 = and i32 %11053, 255
  %11058 = call i32 @llvm.ctpop.i32(i32 %11057)
  %11059 = trunc i32 %11058 to i8
  %11060 = and i8 %11059, 1
  %11061 = xor i8 %11060, 1
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11061, i8* %11062, align 1
  %11063 = xor i32 %11052, %11048
  %11064 = xor i32 %11063, %11053
  %11065 = lshr i32 %11064, 4
  %11066 = trunc i32 %11065 to i8
  %11067 = and i8 %11066, 1
  %11068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11067, i8* %11068, align 1
  %11069 = icmp eq i32 %11053, 0
  %11070 = zext i1 %11069 to i8
  %11071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11070, i8* %11071, align 1
  %11072 = lshr i32 %11053, 31
  %11073 = trunc i32 %11072 to i8
  %11074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11073, i8* %11074, align 1
  %11075 = lshr i32 %11048, 31
  %11076 = lshr i32 %11052, 31
  %11077 = xor i32 %11076, %11075
  %11078 = xor i32 %11072, %11075
  %11079 = add i32 %11078, %11077
  %11080 = icmp eq i32 %11079, 2
  %11081 = zext i1 %11080 to i8
  %11082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11081, i8* %11082, align 1
  store %struct.Memory* %loadMem_4129ba, %struct.Memory** %MEMORY
  %loadMem_4129c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11084 = getelementptr inbounds %struct.GPR, %struct.GPR* %11083, i32 0, i32 33
  %11085 = getelementptr inbounds %struct.Reg, %struct.Reg* %11084, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %11085 to i64*
  %11086 = load i64, i64* %PC.i117
  %11087 = add i64 %11086, 88
  %11088 = load i64, i64* %PC.i117
  %11089 = add i64 %11088, 6
  %11090 = load i64, i64* %PC.i117
  %11091 = add i64 %11090, 6
  store i64 %11091, i64* %PC.i117
  %11092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11093 = load i8, i8* %11092, align 1
  store i8 %11093, i8* %BRANCH_TAKEN, align 1
  %11094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11095 = icmp ne i8 %11093, 0
  %11096 = select i1 %11095, i64 %11087, i64 %11089
  store i64 %11096, i64* %11094, align 8
  store %struct.Memory* %loadMem_4129c1, %struct.Memory** %MEMORY
  %loadBr_4129c1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4129c1 = icmp eq i8 %loadBr_4129c1, 1
  br i1 %cmpBr_4129c1, label %block_.L_412a19, label %block_.L_4129c7

block_.L_4129c7:                                  ; preds = %block_41298f, %block_.L_412975
  %loadMem_4129c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11098 = getelementptr inbounds %struct.GPR, %struct.GPR* %11097, i32 0, i32 33
  %11099 = getelementptr inbounds %struct.Reg, %struct.Reg* %11098, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %11099 to i64*
  %11100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11101 = getelementptr inbounds %struct.GPR, %struct.GPR* %11100, i32 0, i32 1
  %11102 = getelementptr inbounds %struct.Reg, %struct.Reg* %11101, i32 0, i32 0
  %RAX.i115 = bitcast %union.anon* %11102 to i64*
  %11103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11104 = getelementptr inbounds %struct.GPR, %struct.GPR* %11103, i32 0, i32 15
  %11105 = getelementptr inbounds %struct.Reg, %struct.Reg* %11104, i32 0, i32 0
  %RBP.i116 = bitcast %union.anon* %11105 to i64*
  %11106 = load i64, i64* %RBP.i116
  %11107 = sub i64 %11106, 40
  %11108 = load i64, i64* %PC.i114
  %11109 = add i64 %11108, 3
  store i64 %11109, i64* %PC.i114
  %11110 = inttoptr i64 %11107 to i32*
  %11111 = load i32, i32* %11110
  %11112 = zext i32 %11111 to i64
  store i64 %11112, i64* %RAX.i115, align 8
  store %struct.Memory* %loadMem_4129c7, %struct.Memory** %MEMORY
  %loadMem_4129ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %11113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11114 = getelementptr inbounds %struct.GPR, %struct.GPR* %11113, i32 0, i32 33
  %11115 = getelementptr inbounds %struct.Reg, %struct.Reg* %11114, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %11115 to i64*
  %11116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11117 = getelementptr inbounds %struct.GPR, %struct.GPR* %11116, i32 0, i32 1
  %11118 = getelementptr inbounds %struct.Reg, %struct.Reg* %11117, i32 0, i32 0
  %RAX.i113 = bitcast %union.anon* %11118 to i64*
  %11119 = load i64, i64* %RAX.i113
  %11120 = load i64, i64* %PC.i112
  %11121 = add i64 %11120, 3
  store i64 %11121, i64* %PC.i112
  %11122 = trunc i64 %11119 to i32
  %11123 = add i32 1, %11122
  %11124 = zext i32 %11123 to i64
  store i64 %11124, i64* %RAX.i113, align 8
  %11125 = icmp ult i32 %11123, %11122
  %11126 = icmp ult i32 %11123, 1
  %11127 = or i1 %11125, %11126
  %11128 = zext i1 %11127 to i8
  %11129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11128, i8* %11129, align 1
  %11130 = and i32 %11123, 255
  %11131 = call i32 @llvm.ctpop.i32(i32 %11130)
  %11132 = trunc i32 %11131 to i8
  %11133 = and i8 %11132, 1
  %11134 = xor i8 %11133, 1
  %11135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11134, i8* %11135, align 1
  %11136 = xor i64 1, %11119
  %11137 = trunc i64 %11136 to i32
  %11138 = xor i32 %11137, %11123
  %11139 = lshr i32 %11138, 4
  %11140 = trunc i32 %11139 to i8
  %11141 = and i8 %11140, 1
  %11142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11141, i8* %11142, align 1
  %11143 = icmp eq i32 %11123, 0
  %11144 = zext i1 %11143 to i8
  %11145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11144, i8* %11145, align 1
  %11146 = lshr i32 %11123, 31
  %11147 = trunc i32 %11146 to i8
  %11148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11147, i8* %11148, align 1
  %11149 = lshr i32 %11122, 31
  %11150 = xor i32 %11146, %11149
  %11151 = add i32 %11150, %11146
  %11152 = icmp eq i32 %11151, 2
  %11153 = zext i1 %11152 to i8
  %11154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11153, i8* %11154, align 1
  store %struct.Memory* %loadMem_4129ca, %struct.Memory** %MEMORY
  %loadMem_4129cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11156 = getelementptr inbounds %struct.GPR, %struct.GPR* %11155, i32 0, i32 33
  %11157 = getelementptr inbounds %struct.Reg, %struct.Reg* %11156, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %11157 to i64*
  %11158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11159 = getelementptr inbounds %struct.GPR, %struct.GPR* %11158, i32 0, i32 1
  %11160 = getelementptr inbounds %struct.Reg, %struct.Reg* %11159, i32 0, i32 0
  %EAX.i110 = bitcast %union.anon* %11160 to i32*
  %11161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11162 = getelementptr inbounds %struct.GPR, %struct.GPR* %11161, i32 0, i32 5
  %11163 = getelementptr inbounds %struct.Reg, %struct.Reg* %11162, i32 0, i32 0
  %RCX.i111 = bitcast %union.anon* %11163 to i64*
  %11164 = load i32, i32* %EAX.i110
  %11165 = zext i32 %11164 to i64
  %11166 = load i64, i64* %PC.i109
  %11167 = add i64 %11166, 3
  store i64 %11167, i64* %PC.i109
  %11168 = shl i64 %11165, 32
  %11169 = ashr exact i64 %11168, 32
  store i64 %11169, i64* %RCX.i111, align 8
  store %struct.Memory* %loadMem_4129cd, %struct.Memory** %MEMORY
  %loadMem_4129d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11171 = getelementptr inbounds %struct.GPR, %struct.GPR* %11170, i32 0, i32 33
  %11172 = getelementptr inbounds %struct.Reg, %struct.Reg* %11171, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %11172 to i64*
  %11173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11174 = getelementptr inbounds %struct.GPR, %struct.GPR* %11173, i32 0, i32 1
  %11175 = getelementptr inbounds %struct.Reg, %struct.Reg* %11174, i32 0, i32 0
  %RAX.i107 = bitcast %union.anon* %11175 to i64*
  %11176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11177 = getelementptr inbounds %struct.GPR, %struct.GPR* %11176, i32 0, i32 5
  %11178 = getelementptr inbounds %struct.Reg, %struct.Reg* %11177, i32 0, i32 0
  %RCX.i108 = bitcast %union.anon* %11178 to i64*
  %11179 = load i64, i64* %RCX.i108
  %11180 = add i64 %11179, 12099168
  %11181 = load i64, i64* %PC.i106
  %11182 = add i64 %11181, 8
  store i64 %11182, i64* %PC.i106
  %11183 = inttoptr i64 %11180 to i8*
  %11184 = load i8, i8* %11183
  %11185 = zext i8 %11184 to i64
  store i64 %11185, i64* %RAX.i107, align 8
  store %struct.Memory* %loadMem_4129d0, %struct.Memory** %MEMORY
  %loadMem_4129d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11187 = getelementptr inbounds %struct.GPR, %struct.GPR* %11186, i32 0, i32 33
  %11188 = getelementptr inbounds %struct.Reg, %struct.Reg* %11187, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %11188 to i64*
  %11189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11190 = getelementptr inbounds %struct.GPR, %struct.GPR* %11189, i32 0, i32 1
  %11191 = getelementptr inbounds %struct.Reg, %struct.Reg* %11190, i32 0, i32 0
  %EAX.i104 = bitcast %union.anon* %11191 to i32*
  %11192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11193 = getelementptr inbounds %struct.GPR, %struct.GPR* %11192, i32 0, i32 15
  %11194 = getelementptr inbounds %struct.Reg, %struct.Reg* %11193, i32 0, i32 0
  %RBP.i105 = bitcast %union.anon* %11194 to i64*
  %11195 = load i32, i32* %EAX.i104
  %11196 = zext i32 %11195 to i64
  %11197 = load i64, i64* %RBP.i105
  %11198 = sub i64 %11197, 12
  %11199 = load i64, i64* %PC.i103
  %11200 = add i64 %11199, 3
  store i64 %11200, i64* %PC.i103
  %11201 = inttoptr i64 %11198 to i32*
  %11202 = load i32, i32* %11201
  %11203 = sub i32 %11195, %11202
  %11204 = icmp ult i32 %11195, %11202
  %11205 = zext i1 %11204 to i8
  %11206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11205, i8* %11206, align 1
  %11207 = and i32 %11203, 255
  %11208 = call i32 @llvm.ctpop.i32(i32 %11207)
  %11209 = trunc i32 %11208 to i8
  %11210 = and i8 %11209, 1
  %11211 = xor i8 %11210, 1
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11211, i8* %11212, align 1
  %11213 = xor i32 %11202, %11195
  %11214 = xor i32 %11213, %11203
  %11215 = lshr i32 %11214, 4
  %11216 = trunc i32 %11215 to i8
  %11217 = and i8 %11216, 1
  %11218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11217, i8* %11218, align 1
  %11219 = icmp eq i32 %11203, 0
  %11220 = zext i1 %11219 to i8
  %11221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11220, i8* %11221, align 1
  %11222 = lshr i32 %11203, 31
  %11223 = trunc i32 %11222 to i8
  %11224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11223, i8* %11224, align 1
  %11225 = lshr i32 %11195, 31
  %11226 = lshr i32 %11202, 31
  %11227 = xor i32 %11226, %11225
  %11228 = xor i32 %11222, %11225
  %11229 = add i32 %11228, %11227
  %11230 = icmp eq i32 %11229, 2
  %11231 = zext i1 %11230 to i8
  %11232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11231, i8* %11232, align 1
  store %struct.Memory* %loadMem_4129d8, %struct.Memory** %MEMORY
  %loadMem_4129db = load %struct.Memory*, %struct.Memory** %MEMORY
  %11233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11234 = getelementptr inbounds %struct.GPR, %struct.GPR* %11233, i32 0, i32 33
  %11235 = getelementptr inbounds %struct.Reg, %struct.Reg* %11234, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %11235 to i64*
  %11236 = load i64, i64* %PC.i102
  %11237 = add i64 %11236, 124
  %11238 = load i64, i64* %PC.i102
  %11239 = add i64 %11238, 6
  %11240 = load i64, i64* %PC.i102
  %11241 = add i64 %11240, 6
  store i64 %11241, i64* %PC.i102
  %11242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11243 = load i8, i8* %11242, align 1
  %11244 = icmp eq i8 %11243, 0
  %11245 = zext i1 %11244 to i8
  store i8 %11245, i8* %BRANCH_TAKEN, align 1
  %11246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11247 = select i1 %11244, i64 %11237, i64 %11239
  store i64 %11247, i64* %11246, align 8
  store %struct.Memory* %loadMem_4129db, %struct.Memory** %MEMORY
  %loadBr_4129db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4129db = icmp eq i8 %loadBr_4129db, 1
  br i1 %cmpBr_4129db, label %block_.L_412a57, label %block_4129e1

block_4129e1:                                     ; preds = %block_.L_4129c7
  %loadMem_4129e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11249 = getelementptr inbounds %struct.GPR, %struct.GPR* %11248, i32 0, i32 33
  %11250 = getelementptr inbounds %struct.Reg, %struct.Reg* %11249, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %11250 to i64*
  %11251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11252 = getelementptr inbounds %struct.GPR, %struct.GPR* %11251, i32 0, i32 1
  %11253 = getelementptr inbounds %struct.Reg, %struct.Reg* %11252, i32 0, i32 0
  %RAX.i101 = bitcast %union.anon* %11253 to i64*
  %11254 = load i64, i64* %PC.i100
  %11255 = add i64 %11254, 10
  store i64 %11255, i64* %PC.i100
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i101, align 8
  store %struct.Memory* %loadMem_4129e1, %struct.Memory** %MEMORY
  %loadMem_4129eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11257 = getelementptr inbounds %struct.GPR, %struct.GPR* %11256, i32 0, i32 33
  %11258 = getelementptr inbounds %struct.Reg, %struct.Reg* %11257, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %11258 to i64*
  %11259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11260 = getelementptr inbounds %struct.GPR, %struct.GPR* %11259, i32 0, i32 5
  %11261 = getelementptr inbounds %struct.Reg, %struct.Reg* %11260, i32 0, i32 0
  %RCX.i98 = bitcast %union.anon* %11261 to i64*
  %11262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11263 = getelementptr inbounds %struct.GPR, %struct.GPR* %11262, i32 0, i32 15
  %11264 = getelementptr inbounds %struct.Reg, %struct.Reg* %11263, i32 0, i32 0
  %RBP.i99 = bitcast %union.anon* %11264 to i64*
  %11265 = load i64, i64* %RBP.i99
  %11266 = sub i64 %11265, 40
  %11267 = load i64, i64* %PC.i97
  %11268 = add i64 %11267, 3
  store i64 %11268, i64* %PC.i97
  %11269 = inttoptr i64 %11266 to i32*
  %11270 = load i32, i32* %11269
  %11271 = zext i32 %11270 to i64
  store i64 %11271, i64* %RCX.i98, align 8
  store %struct.Memory* %loadMem_4129eb, %struct.Memory** %MEMORY
  %loadMem_4129ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11273 = getelementptr inbounds %struct.GPR, %struct.GPR* %11272, i32 0, i32 33
  %11274 = getelementptr inbounds %struct.Reg, %struct.Reg* %11273, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %11274 to i64*
  %11275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11276 = getelementptr inbounds %struct.GPR, %struct.GPR* %11275, i32 0, i32 5
  %11277 = getelementptr inbounds %struct.Reg, %struct.Reg* %11276, i32 0, i32 0
  %RCX.i96 = bitcast %union.anon* %11277 to i64*
  %11278 = load i64, i64* %RCX.i96
  %11279 = load i64, i64* %PC.i95
  %11280 = add i64 %11279, 3
  store i64 %11280, i64* %PC.i95
  %11281 = trunc i64 %11278 to i32
  %11282 = add i32 1, %11281
  %11283 = zext i32 %11282 to i64
  store i64 %11283, i64* %RCX.i96, align 8
  %11284 = icmp ult i32 %11282, %11281
  %11285 = icmp ult i32 %11282, 1
  %11286 = or i1 %11284, %11285
  %11287 = zext i1 %11286 to i8
  %11288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11287, i8* %11288, align 1
  %11289 = and i32 %11282, 255
  %11290 = call i32 @llvm.ctpop.i32(i32 %11289)
  %11291 = trunc i32 %11290 to i8
  %11292 = and i8 %11291, 1
  %11293 = xor i8 %11292, 1
  %11294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11293, i8* %11294, align 1
  %11295 = xor i64 1, %11278
  %11296 = trunc i64 %11295 to i32
  %11297 = xor i32 %11296, %11282
  %11298 = lshr i32 %11297, 4
  %11299 = trunc i32 %11298 to i8
  %11300 = and i8 %11299, 1
  %11301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11300, i8* %11301, align 1
  %11302 = icmp eq i32 %11282, 0
  %11303 = zext i1 %11302 to i8
  %11304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11303, i8* %11304, align 1
  %11305 = lshr i32 %11282, 31
  %11306 = trunc i32 %11305 to i8
  %11307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11306, i8* %11307, align 1
  %11308 = lshr i32 %11281, 31
  %11309 = xor i32 %11305, %11308
  %11310 = add i32 %11309, %11305
  %11311 = icmp eq i32 %11310, 2
  %11312 = zext i1 %11311 to i8
  %11313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11312, i8* %11313, align 1
  store %struct.Memory* %loadMem_4129ee, %struct.Memory** %MEMORY
  %loadMem_4129f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11315 = getelementptr inbounds %struct.GPR, %struct.GPR* %11314, i32 0, i32 33
  %11316 = getelementptr inbounds %struct.Reg, %struct.Reg* %11315, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %11316 to i64*
  %11317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11318 = getelementptr inbounds %struct.GPR, %struct.GPR* %11317, i32 0, i32 5
  %11319 = getelementptr inbounds %struct.Reg, %struct.Reg* %11318, i32 0, i32 0
  %ECX.i93 = bitcast %union.anon* %11319 to i32*
  %11320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11321 = getelementptr inbounds %struct.GPR, %struct.GPR* %11320, i32 0, i32 7
  %11322 = getelementptr inbounds %struct.Reg, %struct.Reg* %11321, i32 0, i32 0
  %RDX.i94 = bitcast %union.anon* %11322 to i64*
  %11323 = load i32, i32* %ECX.i93
  %11324 = zext i32 %11323 to i64
  %11325 = load i64, i64* %PC.i92
  %11326 = add i64 %11325, 3
  store i64 %11326, i64* %PC.i92
  %11327 = shl i64 %11324, 32
  %11328 = ashr exact i64 %11327, 32
  store i64 %11328, i64* %RDX.i94, align 8
  store %struct.Memory* %loadMem_4129f1, %struct.Memory** %MEMORY
  %loadMem_4129f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11330 = getelementptr inbounds %struct.GPR, %struct.GPR* %11329, i32 0, i32 33
  %11331 = getelementptr inbounds %struct.Reg, %struct.Reg* %11330, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %11331 to i64*
  %11332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11333 = getelementptr inbounds %struct.GPR, %struct.GPR* %11332, i32 0, i32 7
  %11334 = getelementptr inbounds %struct.Reg, %struct.Reg* %11333, i32 0, i32 0
  %RDX.i91 = bitcast %union.anon* %11334 to i64*
  %11335 = load i64, i64* %RDX.i91
  %11336 = mul i64 %11335, 4
  %11337 = add i64 %11336, 11187184
  %11338 = load i64, i64* %PC.i90
  %11339 = add i64 %11338, 8
  store i64 %11339, i64* %PC.i90
  %11340 = inttoptr i64 %11337 to i32*
  %11341 = load i32, i32* %11340
  %11342 = sext i32 %11341 to i64
  store i64 %11342, i64* %RDX.i91, align 8
  store %struct.Memory* %loadMem_4129f4, %struct.Memory** %MEMORY
  %loadMem_4129fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11344 = getelementptr inbounds %struct.GPR, %struct.GPR* %11343, i32 0, i32 33
  %11345 = getelementptr inbounds %struct.Reg, %struct.Reg* %11344, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %11345 to i64*
  %11346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11347 = getelementptr inbounds %struct.GPR, %struct.GPR* %11346, i32 0, i32 7
  %11348 = getelementptr inbounds %struct.Reg, %struct.Reg* %11347, i32 0, i32 0
  %RDX.i89 = bitcast %union.anon* %11348 to i64*
  %11349 = load i64, i64* %RDX.i89
  %11350 = load i64, i64* %PC.i88
  %11351 = add i64 %11350, 7
  store i64 %11351, i64* %PC.i88
  %11352 = sext i64 %11349 to i128
  %11353 = and i128 %11352, -18446744073709551616
  %11354 = zext i64 %11349 to i128
  %11355 = or i128 %11353, %11354
  %11356 = mul i128 744, %11355
  %11357 = trunc i128 %11356 to i64
  store i64 %11357, i64* %RDX.i89, align 8
  %11358 = sext i64 %11357 to i128
  %11359 = icmp ne i128 %11358, %11356
  %11360 = zext i1 %11359 to i8
  %11361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11360, i8* %11361, align 1
  %11362 = trunc i128 %11356 to i32
  %11363 = and i32 %11362, 255
  %11364 = call i32 @llvm.ctpop.i32(i32 %11363)
  %11365 = trunc i32 %11364 to i8
  %11366 = and i8 %11365, 1
  %11367 = xor i8 %11366, 1
  %11368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11367, i8* %11368, align 1
  %11369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11369, align 1
  %11370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11370, align 1
  %11371 = lshr i64 %11357, 63
  %11372 = trunc i64 %11371 to i8
  %11373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11372, i8* %11373, align 1
  %11374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11360, i8* %11374, align 1
  store %struct.Memory* %loadMem_4129fc, %struct.Memory** %MEMORY
  %loadMem_412a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11376 = getelementptr inbounds %struct.GPR, %struct.GPR* %11375, i32 0, i32 33
  %11377 = getelementptr inbounds %struct.Reg, %struct.Reg* %11376, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %11377 to i64*
  %11378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11379 = getelementptr inbounds %struct.GPR, %struct.GPR* %11378, i32 0, i32 1
  %11380 = getelementptr inbounds %struct.Reg, %struct.Reg* %11379, i32 0, i32 0
  %RAX.i86 = bitcast %union.anon* %11380 to i64*
  %11381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11382 = getelementptr inbounds %struct.GPR, %struct.GPR* %11381, i32 0, i32 7
  %11383 = getelementptr inbounds %struct.Reg, %struct.Reg* %11382, i32 0, i32 0
  %RDX.i87 = bitcast %union.anon* %11383 to i64*
  %11384 = load i64, i64* %RAX.i86
  %11385 = load i64, i64* %RDX.i87
  %11386 = load i64, i64* %PC.i85
  %11387 = add i64 %11386, 3
  store i64 %11387, i64* %PC.i85
  %11388 = add i64 %11385, %11384
  store i64 %11388, i64* %RAX.i86, align 8
  %11389 = icmp ult i64 %11388, %11384
  %11390 = icmp ult i64 %11388, %11385
  %11391 = or i1 %11389, %11390
  %11392 = zext i1 %11391 to i8
  %11393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11392, i8* %11393, align 1
  %11394 = trunc i64 %11388 to i32
  %11395 = and i32 %11394, 255
  %11396 = call i32 @llvm.ctpop.i32(i32 %11395)
  %11397 = trunc i32 %11396 to i8
  %11398 = and i8 %11397, 1
  %11399 = xor i8 %11398, 1
  %11400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11399, i8* %11400, align 1
  %11401 = xor i64 %11385, %11384
  %11402 = xor i64 %11401, %11388
  %11403 = lshr i64 %11402, 4
  %11404 = trunc i64 %11403 to i8
  %11405 = and i8 %11404, 1
  %11406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11405, i8* %11406, align 1
  %11407 = icmp eq i64 %11388, 0
  %11408 = zext i1 %11407 to i8
  %11409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11408, i8* %11409, align 1
  %11410 = lshr i64 %11388, 63
  %11411 = trunc i64 %11410 to i8
  %11412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11411, i8* %11412, align 1
  %11413 = lshr i64 %11384, 63
  %11414 = lshr i64 %11385, 63
  %11415 = xor i64 %11410, %11413
  %11416 = xor i64 %11410, %11414
  %11417 = add i64 %11415, %11416
  %11418 = icmp eq i64 %11417, 2
  %11419 = zext i1 %11418 to i8
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11419, i8* %11420, align 1
  store %struct.Memory* %loadMem_412a03, %struct.Memory** %MEMORY
  %loadMem_412a06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11422 = getelementptr inbounds %struct.GPR, %struct.GPR* %11421, i32 0, i32 33
  %11423 = getelementptr inbounds %struct.Reg, %struct.Reg* %11422, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %11423 to i64*
  %11424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11425 = getelementptr inbounds %struct.GPR, %struct.GPR* %11424, i32 0, i32 1
  %11426 = getelementptr inbounds %struct.Reg, %struct.Reg* %11425, i32 0, i32 0
  %RAX.i83 = bitcast %union.anon* %11426 to i64*
  %11427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11428 = getelementptr inbounds %struct.GPR, %struct.GPR* %11427, i32 0, i32 5
  %11429 = getelementptr inbounds %struct.Reg, %struct.Reg* %11428, i32 0, i32 0
  %RCX.i84 = bitcast %union.anon* %11429 to i64*
  %11430 = load i64, i64* %RAX.i83
  %11431 = add i64 %11430, 740
  %11432 = load i64, i64* %PC.i82
  %11433 = add i64 %11432, 6
  store i64 %11433, i64* %PC.i82
  %11434 = inttoptr i64 %11431 to i32*
  %11435 = load i32, i32* %11434
  %11436 = zext i32 %11435 to i64
  store i64 %11436, i64* %RCX.i84, align 8
  store %struct.Memory* %loadMem_412a06, %struct.Memory** %MEMORY
  %loadMem_412a0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11438 = getelementptr inbounds %struct.GPR, %struct.GPR* %11437, i32 0, i32 33
  %11439 = getelementptr inbounds %struct.Reg, %struct.Reg* %11438, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %11439 to i64*
  %11440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11441 = getelementptr inbounds %struct.GPR, %struct.GPR* %11440, i32 0, i32 5
  %11442 = getelementptr inbounds %struct.Reg, %struct.Reg* %11441, i32 0, i32 0
  %ECX.i81 = bitcast %union.anon* %11442 to i32*
  %11443 = load i32, i32* %ECX.i81
  %11444 = zext i32 %11443 to i64
  %11445 = load i64, i64* %PC.i80
  %11446 = add i64 %11445, 7
  store i64 %11446, i64* %PC.i80
  %11447 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %11448 = sub i32 %11443, %11447
  %11449 = icmp ult i32 %11443, %11447
  %11450 = zext i1 %11449 to i8
  %11451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11450, i8* %11451, align 1
  %11452 = and i32 %11448, 255
  %11453 = call i32 @llvm.ctpop.i32(i32 %11452)
  %11454 = trunc i32 %11453 to i8
  %11455 = and i8 %11454, 1
  %11456 = xor i8 %11455, 1
  %11457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11456, i8* %11457, align 1
  %11458 = xor i32 %11447, %11443
  %11459 = xor i32 %11458, %11448
  %11460 = lshr i32 %11459, 4
  %11461 = trunc i32 %11460 to i8
  %11462 = and i8 %11461, 1
  %11463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11462, i8* %11463, align 1
  %11464 = icmp eq i32 %11448, 0
  %11465 = zext i1 %11464 to i8
  %11466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11465, i8* %11466, align 1
  %11467 = lshr i32 %11448, 31
  %11468 = trunc i32 %11467 to i8
  %11469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11468, i8* %11469, align 1
  %11470 = lshr i32 %11443, 31
  %11471 = lshr i32 %11447, 31
  %11472 = xor i32 %11471, %11470
  %11473 = xor i32 %11467, %11470
  %11474 = add i32 %11473, %11472
  %11475 = icmp eq i32 %11474, 2
  %11476 = zext i1 %11475 to i8
  %11477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11476, i8* %11477, align 1
  store %struct.Memory* %loadMem_412a0c, %struct.Memory** %MEMORY
  %loadMem_412a13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11479 = getelementptr inbounds %struct.GPR, %struct.GPR* %11478, i32 0, i32 33
  %11480 = getelementptr inbounds %struct.Reg, %struct.Reg* %11479, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %11480 to i64*
  %11481 = load i64, i64* %PC.i79
  %11482 = add i64 %11481, 68
  %11483 = load i64, i64* %PC.i79
  %11484 = add i64 %11483, 6
  %11485 = load i64, i64* %PC.i79
  %11486 = add i64 %11485, 6
  store i64 %11486, i64* %PC.i79
  %11487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11488 = load i8, i8* %11487, align 1
  %11489 = icmp eq i8 %11488, 0
  %11490 = zext i1 %11489 to i8
  store i8 %11490, i8* %BRANCH_TAKEN, align 1
  %11491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11492 = select i1 %11489, i64 %11482, i64 %11484
  store i64 %11492, i64* %11491, align 8
  store %struct.Memory* %loadMem_412a13, %struct.Memory** %MEMORY
  %loadBr_412a13 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412a13 = icmp eq i8 %loadBr_412a13, 1
  br i1 %cmpBr_412a13, label %block_.L_412a57, label %block_.L_412a19

block_.L_412a19:                                  ; preds = %block_4129e1, %block_41298f, %block_41293d, %block_4128eb
  %loadMem_412a19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11494 = getelementptr inbounds %struct.GPR, %struct.GPR* %11493, i32 0, i32 33
  %11495 = getelementptr inbounds %struct.Reg, %struct.Reg* %11494, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %11495 to i64*
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11497 = getelementptr inbounds %struct.GPR, %struct.GPR* %11496, i32 0, i32 15
  %11498 = getelementptr inbounds %struct.Reg, %struct.Reg* %11497, i32 0, i32 0
  %RBP.i78 = bitcast %union.anon* %11498 to i64*
  %11499 = load i64, i64* %RBP.i78
  %11500 = sub i64 %11499, 24
  %11501 = load i64, i64* %PC.i77
  %11502 = add i64 %11501, 5
  store i64 %11502, i64* %PC.i77
  %11503 = inttoptr i64 %11500 to i64*
  %11504 = load i64, i64* %11503
  %11505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11505, align 1
  %11506 = trunc i64 %11504 to i32
  %11507 = and i32 %11506, 255
  %11508 = call i32 @llvm.ctpop.i32(i32 %11507)
  %11509 = trunc i32 %11508 to i8
  %11510 = and i8 %11509, 1
  %11511 = xor i8 %11510, 1
  %11512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11511, i8* %11512, align 1
  %11513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11513, align 1
  %11514 = icmp eq i64 %11504, 0
  %11515 = zext i1 %11514 to i8
  %11516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11515, i8* %11516, align 1
  %11517 = lshr i64 %11504, 63
  %11518 = trunc i64 %11517 to i8
  %11519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11518, i8* %11519, align 1
  %11520 = lshr i64 %11504, 63
  %11521 = xor i64 %11517, %11520
  %11522 = add i64 %11521, %11520
  %11523 = icmp eq i64 %11522, 2
  %11524 = zext i1 %11523 to i8
  %11525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11524, i8* %11525, align 1
  store %struct.Memory* %loadMem_412a19, %struct.Memory** %MEMORY
  %loadMem_412a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11527 = getelementptr inbounds %struct.GPR, %struct.GPR* %11526, i32 0, i32 33
  %11528 = getelementptr inbounds %struct.Reg, %struct.Reg* %11527, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %11528 to i64*
  %11529 = load i64, i64* %PC.i76
  %11530 = add i64 %11529, 20
  %11531 = load i64, i64* %PC.i76
  %11532 = add i64 %11531, 6
  %11533 = load i64, i64* %PC.i76
  %11534 = add i64 %11533, 6
  store i64 %11534, i64* %PC.i76
  %11535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11536 = load i8, i8* %11535, align 1
  store i8 %11536, i8* %BRANCH_TAKEN, align 1
  %11537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11538 = icmp ne i8 %11536, 0
  %11539 = select i1 %11538, i64 %11530, i64 %11532
  store i64 %11539, i64* %11537, align 8
  store %struct.Memory* %loadMem_412a1e, %struct.Memory** %MEMORY
  %loadBr_412a1e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412a1e = icmp eq i8 %loadBr_412a1e, 1
  br i1 %cmpBr_412a1e, label %block_.L_412a32, label %block_412a24

block_412a24:                                     ; preds = %block_.L_412a19
  %loadMem_412a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11541 = getelementptr inbounds %struct.GPR, %struct.GPR* %11540, i32 0, i32 33
  %11542 = getelementptr inbounds %struct.Reg, %struct.Reg* %11541, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %11542 to i64*
  %11543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11544 = getelementptr inbounds %struct.GPR, %struct.GPR* %11543, i32 0, i32 1
  %11545 = getelementptr inbounds %struct.Reg, %struct.Reg* %11544, i32 0, i32 0
  %RAX.i74 = bitcast %union.anon* %11545 to i64*
  %11546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11547 = getelementptr inbounds %struct.GPR, %struct.GPR* %11546, i32 0, i32 15
  %11548 = getelementptr inbounds %struct.Reg, %struct.Reg* %11547, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %11548 to i64*
  %11549 = load i64, i64* %RBP.i75
  %11550 = sub i64 %11549, 40
  %11551 = load i64, i64* %PC.i73
  %11552 = add i64 %11551, 3
  store i64 %11552, i64* %PC.i73
  %11553 = inttoptr i64 %11550 to i32*
  %11554 = load i32, i32* %11553
  %11555 = zext i32 %11554 to i64
  store i64 %11555, i64* %RAX.i74, align 8
  store %struct.Memory* %loadMem_412a24, %struct.Memory** %MEMORY
  %loadMem_412a27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11557 = getelementptr inbounds %struct.GPR, %struct.GPR* %11556, i32 0, i32 33
  %11558 = getelementptr inbounds %struct.Reg, %struct.Reg* %11557, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %11558 to i64*
  %11559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11560 = getelementptr inbounds %struct.GPR, %struct.GPR* %11559, i32 0, i32 5
  %11561 = getelementptr inbounds %struct.Reg, %struct.Reg* %11560, i32 0, i32 0
  %RCX.i71 = bitcast %union.anon* %11561 to i64*
  %11562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11563 = getelementptr inbounds %struct.GPR, %struct.GPR* %11562, i32 0, i32 15
  %11564 = getelementptr inbounds %struct.Reg, %struct.Reg* %11563, i32 0, i32 0
  %RBP.i72 = bitcast %union.anon* %11564 to i64*
  %11565 = load i64, i64* %RBP.i72
  %11566 = sub i64 %11565, 24
  %11567 = load i64, i64* %PC.i70
  %11568 = add i64 %11567, 4
  store i64 %11568, i64* %PC.i70
  %11569 = inttoptr i64 %11566 to i64*
  %11570 = load i64, i64* %11569
  store i64 %11570, i64* %RCX.i71, align 8
  store %struct.Memory* %loadMem_412a27, %struct.Memory** %MEMORY
  %loadMem_412a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11572 = getelementptr inbounds %struct.GPR, %struct.GPR* %11571, i32 0, i32 33
  %11573 = getelementptr inbounds %struct.Reg, %struct.Reg* %11572, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %11573 to i64*
  %11574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11575 = getelementptr inbounds %struct.GPR, %struct.GPR* %11574, i32 0, i32 7
  %11576 = getelementptr inbounds %struct.Reg, %struct.Reg* %11575, i32 0, i32 0
  %RDX.i68 = bitcast %union.anon* %11576 to i64*
  %11577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11578 = getelementptr inbounds %struct.GPR, %struct.GPR* %11577, i32 0, i32 15
  %11579 = getelementptr inbounds %struct.Reg, %struct.Reg* %11578, i32 0, i32 0
  %RBP.i69 = bitcast %union.anon* %11579 to i64*
  %11580 = load i64, i64* %RBP.i69
  %11581 = sub i64 %11580, 36
  %11582 = load i64, i64* %PC.i67
  %11583 = add i64 %11582, 4
  store i64 %11583, i64* %PC.i67
  %11584 = inttoptr i64 %11581 to i32*
  %11585 = load i32, i32* %11584
  %11586 = sext i32 %11585 to i64
  store i64 %11586, i64* %RDX.i68, align 8
  store %struct.Memory* %loadMem_412a2b, %struct.Memory** %MEMORY
  %loadMem_412a2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11588 = getelementptr inbounds %struct.GPR, %struct.GPR* %11587, i32 0, i32 33
  %11589 = getelementptr inbounds %struct.Reg, %struct.Reg* %11588, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %11589 to i64*
  %11590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11591 = getelementptr inbounds %struct.GPR, %struct.GPR* %11590, i32 0, i32 1
  %11592 = getelementptr inbounds %struct.Reg, %struct.Reg* %11591, i32 0, i32 0
  %EAX.i65 = bitcast %union.anon* %11592 to i32*
  %11593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11594 = getelementptr inbounds %struct.GPR, %struct.GPR* %11593, i32 0, i32 5
  %11595 = getelementptr inbounds %struct.Reg, %struct.Reg* %11594, i32 0, i32 0
  %RCX.i66 = bitcast %union.anon* %11595 to i64*
  %11596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11597 = getelementptr inbounds %struct.GPR, %struct.GPR* %11596, i32 0, i32 7
  %11598 = getelementptr inbounds %struct.Reg, %struct.Reg* %11597, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %11598 to i64*
  %11599 = load i64, i64* %RCX.i66
  %11600 = load i64, i64* %RDX.i
  %11601 = mul i64 %11600, 4
  %11602 = add i64 %11601, %11599
  %11603 = load i32, i32* %EAX.i65
  %11604 = zext i32 %11603 to i64
  %11605 = load i64, i64* %PC.i64
  %11606 = add i64 %11605, 3
  store i64 %11606, i64* %PC.i64
  %11607 = inttoptr i64 %11602 to i32*
  store i32 %11603, i32* %11607
  store %struct.Memory* %loadMem_412a2f, %struct.Memory** %MEMORY
  br label %block_.L_412a32

block_.L_412a32:                                  ; preds = %block_412a24, %block_.L_412a19
  %loadMem_412a32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11609 = getelementptr inbounds %struct.GPR, %struct.GPR* %11608, i32 0, i32 33
  %11610 = getelementptr inbounds %struct.Reg, %struct.Reg* %11609, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %11610 to i64*
  %11611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11612 = getelementptr inbounds %struct.GPR, %struct.GPR* %11611, i32 0, i32 1
  %11613 = getelementptr inbounds %struct.Reg, %struct.Reg* %11612, i32 0, i32 0
  %RAX.i62 = bitcast %union.anon* %11613 to i64*
  %11614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11615 = getelementptr inbounds %struct.GPR, %struct.GPR* %11614, i32 0, i32 15
  %11616 = getelementptr inbounds %struct.Reg, %struct.Reg* %11615, i32 0, i32 0
  %RBP.i63 = bitcast %union.anon* %11616 to i64*
  %11617 = load i64, i64* %RBP.i63
  %11618 = sub i64 %11617, 36
  %11619 = load i64, i64* %PC.i61
  %11620 = add i64 %11619, 3
  store i64 %11620, i64* %PC.i61
  %11621 = inttoptr i64 %11618 to i32*
  %11622 = load i32, i32* %11621
  %11623 = zext i32 %11622 to i64
  store i64 %11623, i64* %RAX.i62, align 8
  store %struct.Memory* %loadMem_412a32, %struct.Memory** %MEMORY
  %loadMem_412a35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11625 = getelementptr inbounds %struct.GPR, %struct.GPR* %11624, i32 0, i32 33
  %11626 = getelementptr inbounds %struct.Reg, %struct.Reg* %11625, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %11626 to i64*
  %11627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11628 = getelementptr inbounds %struct.GPR, %struct.GPR* %11627, i32 0, i32 1
  %11629 = getelementptr inbounds %struct.Reg, %struct.Reg* %11628, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %11629 to i64*
  %11630 = load i64, i64* %RAX.i60
  %11631 = load i64, i64* %PC.i59
  %11632 = add i64 %11631, 3
  store i64 %11632, i64* %PC.i59
  %11633 = trunc i64 %11630 to i32
  %11634 = add i32 1, %11633
  %11635 = zext i32 %11634 to i64
  store i64 %11635, i64* %RAX.i60, align 8
  %11636 = icmp ult i32 %11634, %11633
  %11637 = icmp ult i32 %11634, 1
  %11638 = or i1 %11636, %11637
  %11639 = zext i1 %11638 to i8
  %11640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11639, i8* %11640, align 1
  %11641 = and i32 %11634, 255
  %11642 = call i32 @llvm.ctpop.i32(i32 %11641)
  %11643 = trunc i32 %11642 to i8
  %11644 = and i8 %11643, 1
  %11645 = xor i8 %11644, 1
  %11646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11645, i8* %11646, align 1
  %11647 = xor i64 1, %11630
  %11648 = trunc i64 %11647 to i32
  %11649 = xor i32 %11648, %11634
  %11650 = lshr i32 %11649, 4
  %11651 = trunc i32 %11650 to i8
  %11652 = and i8 %11651, 1
  %11653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11652, i8* %11653, align 1
  %11654 = icmp eq i32 %11634, 0
  %11655 = zext i1 %11654 to i8
  %11656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11655, i8* %11656, align 1
  %11657 = lshr i32 %11634, 31
  %11658 = trunc i32 %11657 to i8
  %11659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11658, i8* %11659, align 1
  %11660 = lshr i32 %11633, 31
  %11661 = xor i32 %11657, %11660
  %11662 = add i32 %11661, %11657
  %11663 = icmp eq i32 %11662, 2
  %11664 = zext i1 %11663 to i8
  %11665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11664, i8* %11665, align 1
  store %struct.Memory* %loadMem_412a35, %struct.Memory** %MEMORY
  %loadMem_412a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11667 = getelementptr inbounds %struct.GPR, %struct.GPR* %11666, i32 0, i32 33
  %11668 = getelementptr inbounds %struct.Reg, %struct.Reg* %11667, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %11668 to i64*
  %11669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11670 = getelementptr inbounds %struct.GPR, %struct.GPR* %11669, i32 0, i32 1
  %11671 = getelementptr inbounds %struct.Reg, %struct.Reg* %11670, i32 0, i32 0
  %EAX.i57 = bitcast %union.anon* %11671 to i32*
  %11672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11673 = getelementptr inbounds %struct.GPR, %struct.GPR* %11672, i32 0, i32 15
  %11674 = getelementptr inbounds %struct.Reg, %struct.Reg* %11673, i32 0, i32 0
  %RBP.i58 = bitcast %union.anon* %11674 to i64*
  %11675 = load i64, i64* %RBP.i58
  %11676 = sub i64 %11675, 36
  %11677 = load i32, i32* %EAX.i57
  %11678 = zext i32 %11677 to i64
  %11679 = load i64, i64* %PC.i56
  %11680 = add i64 %11679, 3
  store i64 %11680, i64* %PC.i56
  %11681 = inttoptr i64 %11676 to i32*
  store i32 %11677, i32* %11681
  store %struct.Memory* %loadMem_412a38, %struct.Memory** %MEMORY
  %loadMem_412a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11683 = getelementptr inbounds %struct.GPR, %struct.GPR* %11682, i32 0, i32 33
  %11684 = getelementptr inbounds %struct.Reg, %struct.Reg* %11683, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %11684 to i64*
  %11685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11686 = getelementptr inbounds %struct.GPR, %struct.GPR* %11685, i32 0, i32 1
  %11687 = getelementptr inbounds %struct.Reg, %struct.Reg* %11686, i32 0, i32 0
  %RAX.i54 = bitcast %union.anon* %11687 to i64*
  %11688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11689 = getelementptr inbounds %struct.GPR, %struct.GPR* %11688, i32 0, i32 15
  %11690 = getelementptr inbounds %struct.Reg, %struct.Reg* %11689, i32 0, i32 0
  %RBP.i55 = bitcast %union.anon* %11690 to i64*
  %11691 = load i64, i64* %RBP.i55
  %11692 = sub i64 %11691, 36
  %11693 = load i64, i64* %PC.i53
  %11694 = add i64 %11693, 3
  store i64 %11694, i64* %PC.i53
  %11695 = inttoptr i64 %11692 to i32*
  %11696 = load i32, i32* %11695
  %11697 = zext i32 %11696 to i64
  store i64 %11697, i64* %RAX.i54, align 8
  store %struct.Memory* %loadMem_412a3b, %struct.Memory** %MEMORY
  %loadMem_412a3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11699 = getelementptr inbounds %struct.GPR, %struct.GPR* %11698, i32 0, i32 33
  %11700 = getelementptr inbounds %struct.Reg, %struct.Reg* %11699, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %11700 to i64*
  %11701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11702 = getelementptr inbounds %struct.GPR, %struct.GPR* %11701, i32 0, i32 1
  %11703 = getelementptr inbounds %struct.Reg, %struct.Reg* %11702, i32 0, i32 0
  %EAX.i51 = bitcast %union.anon* %11703 to i32*
  %11704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11705 = getelementptr inbounds %struct.GPR, %struct.GPR* %11704, i32 0, i32 15
  %11706 = getelementptr inbounds %struct.Reg, %struct.Reg* %11705, i32 0, i32 0
  %RBP.i52 = bitcast %union.anon* %11706 to i64*
  %11707 = load i32, i32* %EAX.i51
  %11708 = zext i32 %11707 to i64
  %11709 = load i64, i64* %RBP.i52
  %11710 = sub i64 %11709, 16
  %11711 = load i64, i64* %PC.i50
  %11712 = add i64 %11711, 3
  store i64 %11712, i64* %PC.i50
  %11713 = inttoptr i64 %11710 to i32*
  %11714 = load i32, i32* %11713
  %11715 = sub i32 %11707, %11714
  %11716 = icmp ult i32 %11707, %11714
  %11717 = zext i1 %11716 to i8
  %11718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11717, i8* %11718, align 1
  %11719 = and i32 %11715, 255
  %11720 = call i32 @llvm.ctpop.i32(i32 %11719)
  %11721 = trunc i32 %11720 to i8
  %11722 = and i8 %11721, 1
  %11723 = xor i8 %11722, 1
  %11724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11723, i8* %11724, align 1
  %11725 = xor i32 %11714, %11707
  %11726 = xor i32 %11725, %11715
  %11727 = lshr i32 %11726, 4
  %11728 = trunc i32 %11727 to i8
  %11729 = and i8 %11728, 1
  %11730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11729, i8* %11730, align 1
  %11731 = icmp eq i32 %11715, 0
  %11732 = zext i1 %11731 to i8
  %11733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11732, i8* %11733, align 1
  %11734 = lshr i32 %11715, 31
  %11735 = trunc i32 %11734 to i8
  %11736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11735, i8* %11736, align 1
  %11737 = lshr i32 %11707, 31
  %11738 = lshr i32 %11714, 31
  %11739 = xor i32 %11738, %11737
  %11740 = xor i32 %11734, %11737
  %11741 = add i32 %11740, %11739
  %11742 = icmp eq i32 %11741, 2
  %11743 = zext i1 %11742 to i8
  %11744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11743, i8* %11744, align 1
  store %struct.Memory* %loadMem_412a3e, %struct.Memory** %MEMORY
  %loadMem_412a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11746 = getelementptr inbounds %struct.GPR, %struct.GPR* %11745, i32 0, i32 33
  %11747 = getelementptr inbounds %struct.Reg, %struct.Reg* %11746, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %11747 to i64*
  %11748 = load i64, i64* %PC.i49
  %11749 = add i64 %11748, 17
  %11750 = load i64, i64* %PC.i49
  %11751 = add i64 %11750, 6
  %11752 = load i64, i64* %PC.i49
  %11753 = add i64 %11752, 6
  store i64 %11753, i64* %PC.i49
  %11754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11755 = load i8, i8* %11754, align 1
  %11756 = icmp ne i8 %11755, 0
  %11757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11758 = load i8, i8* %11757, align 1
  %11759 = icmp ne i8 %11758, 0
  %11760 = xor i1 %11756, %11759
  %11761 = zext i1 %11760 to i8
  store i8 %11761, i8* %BRANCH_TAKEN, align 1
  %11762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11763 = select i1 %11760, i64 %11749, i64 %11751
  store i64 %11763, i64* %11762, align 8
  store %struct.Memory* %loadMem_412a41, %struct.Memory** %MEMORY
  %loadBr_412a41 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412a41 = icmp eq i8 %loadBr_412a41, 1
  br i1 %cmpBr_412a41, label %block_.L_412a52, label %block_412a47

block_412a47:                                     ; preds = %block_.L_412a32
  %loadMem_412a47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11765 = getelementptr inbounds %struct.GPR, %struct.GPR* %11764, i32 0, i32 33
  %11766 = getelementptr inbounds %struct.Reg, %struct.Reg* %11765, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %11766 to i64*
  %11767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11768 = getelementptr inbounds %struct.GPR, %struct.GPR* %11767, i32 0, i32 1
  %11769 = getelementptr inbounds %struct.Reg, %struct.Reg* %11768, i32 0, i32 0
  %RAX.i47 = bitcast %union.anon* %11769 to i64*
  %11770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11771 = getelementptr inbounds %struct.GPR, %struct.GPR* %11770, i32 0, i32 15
  %11772 = getelementptr inbounds %struct.Reg, %struct.Reg* %11771, i32 0, i32 0
  %RBP.i48 = bitcast %union.anon* %11772 to i64*
  %11773 = load i64, i64* %RBP.i48
  %11774 = sub i64 %11773, 36
  %11775 = load i64, i64* %PC.i46
  %11776 = add i64 %11775, 3
  store i64 %11776, i64* %PC.i46
  %11777 = inttoptr i64 %11774 to i32*
  %11778 = load i32, i32* %11777
  %11779 = zext i32 %11778 to i64
  store i64 %11779, i64* %RAX.i47, align 8
  store %struct.Memory* %loadMem_412a47, %struct.Memory** %MEMORY
  %loadMem_412a4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11781 = getelementptr inbounds %struct.GPR, %struct.GPR* %11780, i32 0, i32 33
  %11782 = getelementptr inbounds %struct.Reg, %struct.Reg* %11781, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %11782 to i64*
  %11783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11784 = getelementptr inbounds %struct.GPR, %struct.GPR* %11783, i32 0, i32 1
  %11785 = getelementptr inbounds %struct.Reg, %struct.Reg* %11784, i32 0, i32 0
  %EAX.i44 = bitcast %union.anon* %11785 to i32*
  %11786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11787 = getelementptr inbounds %struct.GPR, %struct.GPR* %11786, i32 0, i32 15
  %11788 = getelementptr inbounds %struct.Reg, %struct.Reg* %11787, i32 0, i32 0
  %RBP.i45 = bitcast %union.anon* %11788 to i64*
  %11789 = load i64, i64* %RBP.i45
  %11790 = sub i64 %11789, 4
  %11791 = load i32, i32* %EAX.i44
  %11792 = zext i32 %11791 to i64
  %11793 = load i64, i64* %PC.i43
  %11794 = add i64 %11793, 3
  store i64 %11794, i64* %PC.i43
  %11795 = inttoptr i64 %11790 to i32*
  store i32 %11791, i32* %11795
  store %struct.Memory* %loadMem_412a4a, %struct.Memory** %MEMORY
  %loadMem_412a4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11797 = getelementptr inbounds %struct.GPR, %struct.GPR* %11796, i32 0, i32 33
  %11798 = getelementptr inbounds %struct.Reg, %struct.Reg* %11797, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %11798 to i64*
  %11799 = load i64, i64* %PC.i42
  %11800 = add i64 %11799, 71
  %11801 = load i64, i64* %PC.i42
  %11802 = add i64 %11801, 5
  store i64 %11802, i64* %PC.i42
  %11803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11800, i64* %11803, align 8
  store %struct.Memory* %loadMem_412a4d, %struct.Memory** %MEMORY
  br label %block_.L_412a94

block_.L_412a52:                                  ; preds = %block_.L_412a32
  %loadMem_412a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11805 = getelementptr inbounds %struct.GPR, %struct.GPR* %11804, i32 0, i32 33
  %11806 = getelementptr inbounds %struct.Reg, %struct.Reg* %11805, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %11806 to i64*
  %11807 = load i64, i64* %PC.i41
  %11808 = add i64 %11807, 5
  %11809 = load i64, i64* %PC.i41
  %11810 = add i64 %11809, 5
  store i64 %11810, i64* %PC.i41
  %11811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11808, i64* %11811, align 8
  store %struct.Memory* %loadMem_412a52, %struct.Memory** %MEMORY
  br label %block_.L_412a57

block_.L_412a57:                                  ; preds = %block_.L_412a52, %block_4129e1, %block_.L_4129c7
  %loadMem_412a57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11813 = getelementptr inbounds %struct.GPR, %struct.GPR* %11812, i32 0, i32 33
  %11814 = getelementptr inbounds %struct.Reg, %struct.Reg* %11813, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %11814 to i64*
  %11815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11816 = getelementptr inbounds %struct.GPR, %struct.GPR* %11815, i32 0, i32 1
  %11817 = getelementptr inbounds %struct.Reg, %struct.Reg* %11816, i32 0, i32 0
  %RAX.i39 = bitcast %union.anon* %11817 to i64*
  %11818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11819 = getelementptr inbounds %struct.GPR, %struct.GPR* %11818, i32 0, i32 15
  %11820 = getelementptr inbounds %struct.Reg, %struct.Reg* %11819, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %11820 to i64*
  %11821 = load i64, i64* %RBP.i40
  %11822 = sub i64 %11821, 40
  %11823 = load i64, i64* %PC.i38
  %11824 = add i64 %11823, 4
  store i64 %11824, i64* %PC.i38
  %11825 = inttoptr i64 %11822 to i32*
  %11826 = load i32, i32* %11825
  %11827 = sext i32 %11826 to i64
  store i64 %11827, i64* %RAX.i39, align 8
  store %struct.Memory* %loadMem_412a57, %struct.Memory** %MEMORY
  %loadMem_412a5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11829 = getelementptr inbounds %struct.GPR, %struct.GPR* %11828, i32 0, i32 33
  %11830 = getelementptr inbounds %struct.Reg, %struct.Reg* %11829, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %11830 to i64*
  %11831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11832 = getelementptr inbounds %struct.GPR, %struct.GPR* %11831, i32 0, i32 1
  %11833 = getelementptr inbounds %struct.Reg, %struct.Reg* %11832, i32 0, i32 0
  %RAX.i36 = bitcast %union.anon* %11833 to i64*
  %11834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11835 = getelementptr inbounds %struct.GPR, %struct.GPR* %11834, i32 0, i32 5
  %11836 = getelementptr inbounds %struct.Reg, %struct.Reg* %11835, i32 0, i32 0
  %RCX.i37 = bitcast %union.anon* %11836 to i64*
  %11837 = load i64, i64* %RAX.i36
  %11838 = mul i64 %11837, 4
  %11839 = add i64 %11838, 11188784
  %11840 = load i64, i64* %PC.i35
  %11841 = add i64 %11840, 7
  store i64 %11841, i64* %PC.i35
  %11842 = inttoptr i64 %11839 to i32*
  %11843 = load i32, i32* %11842
  %11844 = zext i32 %11843 to i64
  store i64 %11844, i64* %RCX.i37, align 8
  store %struct.Memory* %loadMem_412a5b, %struct.Memory** %MEMORY
  %loadMem_412a62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11846 = getelementptr inbounds %struct.GPR, %struct.GPR* %11845, i32 0, i32 33
  %11847 = getelementptr inbounds %struct.Reg, %struct.Reg* %11846, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %11847 to i64*
  %11848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11849 = getelementptr inbounds %struct.GPR, %struct.GPR* %11848, i32 0, i32 5
  %11850 = getelementptr inbounds %struct.Reg, %struct.Reg* %11849, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %11850 to i32*
  %11851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11852 = getelementptr inbounds %struct.GPR, %struct.GPR* %11851, i32 0, i32 15
  %11853 = getelementptr inbounds %struct.Reg, %struct.Reg* %11852, i32 0, i32 0
  %RBP.i34 = bitcast %union.anon* %11853 to i64*
  %11854 = load i64, i64* %RBP.i34
  %11855 = sub i64 %11854, 40
  %11856 = load i32, i32* %ECX.i
  %11857 = zext i32 %11856 to i64
  %11858 = load i64, i64* %PC.i33
  %11859 = add i64 %11858, 3
  store i64 %11859, i64* %PC.i33
  %11860 = inttoptr i64 %11855 to i32*
  store i32 %11856, i32* %11860
  store %struct.Memory* %loadMem_412a62, %struct.Memory** %MEMORY
  %loadMem_412a65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11862 = getelementptr inbounds %struct.GPR, %struct.GPR* %11861, i32 0, i32 33
  %11863 = getelementptr inbounds %struct.Reg, %struct.Reg* %11862, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %11863 to i64*
  %11864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11865 = getelementptr inbounds %struct.GPR, %struct.GPR* %11864, i32 0, i32 1
  %11866 = getelementptr inbounds %struct.Reg, %struct.Reg* %11865, i32 0, i32 0
  %RAX.i31 = bitcast %union.anon* %11866 to i64*
  %11867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11868 = getelementptr inbounds %struct.GPR, %struct.GPR* %11867, i32 0, i32 15
  %11869 = getelementptr inbounds %struct.Reg, %struct.Reg* %11868, i32 0, i32 0
  %RBP.i32 = bitcast %union.anon* %11869 to i64*
  %11870 = load i64, i64* %RBP.i32
  %11871 = sub i64 %11870, 40
  %11872 = load i64, i64* %PC.i30
  %11873 = add i64 %11872, 3
  store i64 %11873, i64* %PC.i30
  %11874 = inttoptr i64 %11871 to i32*
  %11875 = load i32, i32* %11874
  %11876 = zext i32 %11875 to i64
  store i64 %11876, i64* %RAX.i31, align 8
  store %struct.Memory* %loadMem_412a65, %struct.Memory** %MEMORY
  %loadMem_412a68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11878 = getelementptr inbounds %struct.GPR, %struct.GPR* %11877, i32 0, i32 33
  %11879 = getelementptr inbounds %struct.Reg, %struct.Reg* %11878, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %11879 to i64*
  %11880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11881 = getelementptr inbounds %struct.GPR, %struct.GPR* %11880, i32 0, i32 5
  %11882 = getelementptr inbounds %struct.Reg, %struct.Reg* %11881, i32 0, i32 0
  %RCX.i28 = bitcast %union.anon* %11882 to i64*
  %11883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11884 = getelementptr inbounds %struct.GPR, %struct.GPR* %11883, i32 0, i32 15
  %11885 = getelementptr inbounds %struct.Reg, %struct.Reg* %11884, i32 0, i32 0
  %RBP.i29 = bitcast %union.anon* %11885 to i64*
  %11886 = load i64, i64* %RBP.i29
  %11887 = sub i64 %11886, 28
  %11888 = load i64, i64* %PC.i27
  %11889 = add i64 %11888, 4
  store i64 %11889, i64* %PC.i27
  %11890 = inttoptr i64 %11887 to i32*
  %11891 = load i32, i32* %11890
  %11892 = sext i32 %11891 to i64
  store i64 %11892, i64* %RCX.i28, align 8
  store %struct.Memory* %loadMem_412a68, %struct.Memory** %MEMORY
  %loadMem_412a6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11894 = getelementptr inbounds %struct.GPR, %struct.GPR* %11893, i32 0, i32 33
  %11895 = getelementptr inbounds %struct.Reg, %struct.Reg* %11894, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %11895 to i64*
  %11896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11897 = getelementptr inbounds %struct.GPR, %struct.GPR* %11896, i32 0, i32 1
  %11898 = getelementptr inbounds %struct.Reg, %struct.Reg* %11897, i32 0, i32 0
  %EAX.i25 = bitcast %union.anon* %11898 to i32*
  %11899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11900 = getelementptr inbounds %struct.GPR, %struct.GPR* %11899, i32 0, i32 5
  %11901 = getelementptr inbounds %struct.Reg, %struct.Reg* %11900, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %11901 to i64*
  %11902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11903 = getelementptr inbounds %struct.GPR, %struct.GPR* %11902, i32 0, i32 15
  %11904 = getelementptr inbounds %struct.Reg, %struct.Reg* %11903, i32 0, i32 0
  %RBP.i26 = bitcast %union.anon* %11904 to i64*
  %11905 = load i32, i32* %EAX.i25
  %11906 = zext i32 %11905 to i64
  %11907 = load i64, i64* %RBP.i26
  %11908 = load i64, i64* %RCX.i
  %11909 = mul i64 %11908, 4
  %11910 = add i64 %11907, -64
  %11911 = add i64 %11910, %11909
  %11912 = load i64, i64* %PC.i24
  %11913 = add i64 %11912, 4
  store i64 %11913, i64* %PC.i24
  %11914 = inttoptr i64 %11911 to i32*
  %11915 = load i32, i32* %11914
  %11916 = sub i32 %11905, %11915
  %11917 = icmp ult i32 %11905, %11915
  %11918 = zext i1 %11917 to i8
  %11919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11918, i8* %11919, align 1
  %11920 = and i32 %11916, 255
  %11921 = call i32 @llvm.ctpop.i32(i32 %11920)
  %11922 = trunc i32 %11921 to i8
  %11923 = and i8 %11922, 1
  %11924 = xor i8 %11923, 1
  %11925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11924, i8* %11925, align 1
  %11926 = xor i32 %11915, %11905
  %11927 = xor i32 %11926, %11916
  %11928 = lshr i32 %11927, 4
  %11929 = trunc i32 %11928 to i8
  %11930 = and i8 %11929, 1
  %11931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11930, i8* %11931, align 1
  %11932 = icmp eq i32 %11916, 0
  %11933 = zext i1 %11932 to i8
  %11934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11933, i8* %11934, align 1
  %11935 = lshr i32 %11916, 31
  %11936 = trunc i32 %11935 to i8
  %11937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11936, i8* %11937, align 1
  %11938 = lshr i32 %11905, 31
  %11939 = lshr i32 %11915, 31
  %11940 = xor i32 %11939, %11938
  %11941 = xor i32 %11935, %11938
  %11942 = add i32 %11941, %11940
  %11943 = icmp eq i32 %11942, 2
  %11944 = zext i1 %11943 to i8
  %11945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11944, i8* %11945, align 1
  store %struct.Memory* %loadMem_412a6c, %struct.Memory** %MEMORY
  %loadMem_412a70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11947 = getelementptr inbounds %struct.GPR, %struct.GPR* %11946, i32 0, i32 33
  %11948 = getelementptr inbounds %struct.Reg, %struct.Reg* %11947, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %11948 to i64*
  %11949 = load i64, i64* %PC.i23
  %11950 = add i64 %11949, -415
  %11951 = load i64, i64* %PC.i23
  %11952 = add i64 %11951, 6
  %11953 = load i64, i64* %PC.i23
  %11954 = add i64 %11953, 6
  store i64 %11954, i64* %PC.i23
  %11955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11956 = load i8, i8* %11955, align 1
  %11957 = icmp eq i8 %11956, 0
  %11958 = zext i1 %11957 to i8
  store i8 %11958, i8* %BRANCH_TAKEN, align 1
  %11959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11960 = select i1 %11957, i64 %11950, i64 %11952
  store i64 %11960, i64* %11959, align 8
  store %struct.Memory* %loadMem_412a70, %struct.Memory** %MEMORY
  %loadBr_412a70 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_412a70 = icmp eq i8 %loadBr_412a70, 1
  br i1 %cmpBr_412a70, label %block_.L_4128d1, label %block_412a76

block_412a76:                                     ; preds = %block_.L_412a57
  %loadMem_412a76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11962 = getelementptr inbounds %struct.GPR, %struct.GPR* %11961, i32 0, i32 33
  %11963 = getelementptr inbounds %struct.Reg, %struct.Reg* %11962, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %11963 to i64*
  %11964 = load i64, i64* %PC.i22
  %11965 = add i64 %11964, 5
  %11966 = load i64, i64* %PC.i22
  %11967 = add i64 %11966, 5
  store i64 %11967, i64* %PC.i22
  %11968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11965, i64* %11968, align 8
  store %struct.Memory* %loadMem_412a76, %struct.Memory** %MEMORY
  br label %block_.L_412a7b

block_.L_412a7b:                                  ; preds = %block_412a76, %block_.L_4128c0
  %loadMem_412a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11970 = getelementptr inbounds %struct.GPR, %struct.GPR* %11969, i32 0, i32 33
  %11971 = getelementptr inbounds %struct.Reg, %struct.Reg* %11970, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %11971 to i64*
  %11972 = load i64, i64* %PC.i21
  %11973 = add i64 %11972, 5
  %11974 = load i64, i64* %PC.i21
  %11975 = add i64 %11974, 5
  store i64 %11975, i64* %PC.i21
  %11976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11973, i64* %11976, align 8
  store %struct.Memory* %loadMem_412a7b, %struct.Memory** %MEMORY
  br label %block_.L_412a80

block_.L_412a80:                                  ; preds = %block_.L_412a7b
  %loadMem_412a80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11978 = getelementptr inbounds %struct.GPR, %struct.GPR* %11977, i32 0, i32 33
  %11979 = getelementptr inbounds %struct.Reg, %struct.Reg* %11978, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %11979 to i64*
  %11980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11981 = getelementptr inbounds %struct.GPR, %struct.GPR* %11980, i32 0, i32 1
  %11982 = getelementptr inbounds %struct.Reg, %struct.Reg* %11981, i32 0, i32 0
  %RAX.i19 = bitcast %union.anon* %11982 to i64*
  %11983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11984 = getelementptr inbounds %struct.GPR, %struct.GPR* %11983, i32 0, i32 15
  %11985 = getelementptr inbounds %struct.Reg, %struct.Reg* %11984, i32 0, i32 0
  %RBP.i20 = bitcast %union.anon* %11985 to i64*
  %11986 = load i64, i64* %RBP.i20
  %11987 = sub i64 %11986, 28
  %11988 = load i64, i64* %PC.i18
  %11989 = add i64 %11988, 3
  store i64 %11989, i64* %PC.i18
  %11990 = inttoptr i64 %11987 to i32*
  %11991 = load i32, i32* %11990
  %11992 = zext i32 %11991 to i64
  store i64 %11992, i64* %RAX.i19, align 8
  store %struct.Memory* %loadMem_412a80, %struct.Memory** %MEMORY
  %loadMem_412a83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11994 = getelementptr inbounds %struct.GPR, %struct.GPR* %11993, i32 0, i32 33
  %11995 = getelementptr inbounds %struct.Reg, %struct.Reg* %11994, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %11995 to i64*
  %11996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11997 = getelementptr inbounds %struct.GPR, %struct.GPR* %11996, i32 0, i32 1
  %11998 = getelementptr inbounds %struct.Reg, %struct.Reg* %11997, i32 0, i32 0
  %RAX.i17 = bitcast %union.anon* %11998 to i64*
  %11999 = load i64, i64* %RAX.i17
  %12000 = load i64, i64* %PC.i16
  %12001 = add i64 %12000, 3
  store i64 %12001, i64* %PC.i16
  %12002 = trunc i64 %11999 to i32
  %12003 = add i32 1, %12002
  %12004 = zext i32 %12003 to i64
  store i64 %12004, i64* %RAX.i17, align 8
  %12005 = icmp ult i32 %12003, %12002
  %12006 = icmp ult i32 %12003, 1
  %12007 = or i1 %12005, %12006
  %12008 = zext i1 %12007 to i8
  %12009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12008, i8* %12009, align 1
  %12010 = and i32 %12003, 255
  %12011 = call i32 @llvm.ctpop.i32(i32 %12010)
  %12012 = trunc i32 %12011 to i8
  %12013 = and i8 %12012, 1
  %12014 = xor i8 %12013, 1
  %12015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12014, i8* %12015, align 1
  %12016 = xor i64 1, %11999
  %12017 = trunc i64 %12016 to i32
  %12018 = xor i32 %12017, %12003
  %12019 = lshr i32 %12018, 4
  %12020 = trunc i32 %12019 to i8
  %12021 = and i8 %12020, 1
  %12022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12021, i8* %12022, align 1
  %12023 = icmp eq i32 %12003, 0
  %12024 = zext i1 %12023 to i8
  %12025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12024, i8* %12025, align 1
  %12026 = lshr i32 %12003, 31
  %12027 = trunc i32 %12026 to i8
  %12028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12027, i8* %12028, align 1
  %12029 = lshr i32 %12002, 31
  %12030 = xor i32 %12026, %12029
  %12031 = add i32 %12030, %12026
  %12032 = icmp eq i32 %12031, 2
  %12033 = zext i1 %12032 to i8
  %12034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12033, i8* %12034, align 1
  store %struct.Memory* %loadMem_412a83, %struct.Memory** %MEMORY
  %loadMem_412a86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12036 = getelementptr inbounds %struct.GPR, %struct.GPR* %12035, i32 0, i32 33
  %12037 = getelementptr inbounds %struct.Reg, %struct.Reg* %12036, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %12037 to i64*
  %12038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12039 = getelementptr inbounds %struct.GPR, %struct.GPR* %12038, i32 0, i32 1
  %12040 = getelementptr inbounds %struct.Reg, %struct.Reg* %12039, i32 0, i32 0
  %EAX.i14 = bitcast %union.anon* %12040 to i32*
  %12041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12042 = getelementptr inbounds %struct.GPR, %struct.GPR* %12041, i32 0, i32 15
  %12043 = getelementptr inbounds %struct.Reg, %struct.Reg* %12042, i32 0, i32 0
  %RBP.i15 = bitcast %union.anon* %12043 to i64*
  %12044 = load i64, i64* %RBP.i15
  %12045 = sub i64 %12044, 28
  %12046 = load i32, i32* %EAX.i14
  %12047 = zext i32 %12046 to i64
  %12048 = load i64, i64* %PC.i13
  %12049 = add i64 %12048, 3
  store i64 %12049, i64* %PC.i13
  %12050 = inttoptr i64 %12045 to i32*
  store i32 %12046, i32* %12050
  store %struct.Memory* %loadMem_412a86, %struct.Memory** %MEMORY
  %loadMem_412a89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12052 = getelementptr inbounds %struct.GPR, %struct.GPR* %12051, i32 0, i32 33
  %12053 = getelementptr inbounds %struct.Reg, %struct.Reg* %12052, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %12053 to i64*
  %12054 = load i64, i64* %PC.i12
  %12055 = add i64 %12054, -946
  %12056 = load i64, i64* %PC.i12
  %12057 = add i64 %12056, 5
  store i64 %12057, i64* %PC.i12
  %12058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12055, i64* %12058, align 8
  store %struct.Memory* %loadMem_412a89, %struct.Memory** %MEMORY
  br label %block_.L_4126d7

block_.L_412a8e:                                  ; preds = %block_.L_4126d7
  %loadMem_412a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12060 = getelementptr inbounds %struct.GPR, %struct.GPR* %12059, i32 0, i32 33
  %12061 = getelementptr inbounds %struct.Reg, %struct.Reg* %12060, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %12061 to i64*
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12063 = getelementptr inbounds %struct.GPR, %struct.GPR* %12062, i32 0, i32 1
  %12064 = getelementptr inbounds %struct.Reg, %struct.Reg* %12063, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %12064 to i64*
  %12065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12066 = getelementptr inbounds %struct.GPR, %struct.GPR* %12065, i32 0, i32 15
  %12067 = getelementptr inbounds %struct.Reg, %struct.Reg* %12066, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %12067 to i64*
  %12068 = load i64, i64* %RBP.i11
  %12069 = sub i64 %12068, 36
  %12070 = load i64, i64* %PC.i9
  %12071 = add i64 %12070, 3
  store i64 %12071, i64* %PC.i9
  %12072 = inttoptr i64 %12069 to i32*
  %12073 = load i32, i32* %12072
  %12074 = zext i32 %12073 to i64
  store i64 %12074, i64* %RAX.i10, align 8
  store %struct.Memory* %loadMem_412a8e, %struct.Memory** %MEMORY
  %loadMem_412a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12076 = getelementptr inbounds %struct.GPR, %struct.GPR* %12075, i32 0, i32 33
  %12077 = getelementptr inbounds %struct.Reg, %struct.Reg* %12076, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %12077 to i64*
  %12078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12079 = getelementptr inbounds %struct.GPR, %struct.GPR* %12078, i32 0, i32 1
  %12080 = getelementptr inbounds %struct.Reg, %struct.Reg* %12079, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %12080 to i32*
  %12081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12082 = getelementptr inbounds %struct.GPR, %struct.GPR* %12081, i32 0, i32 15
  %12083 = getelementptr inbounds %struct.Reg, %struct.Reg* %12082, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %12083 to i64*
  %12084 = load i64, i64* %RBP.i8
  %12085 = sub i64 %12084, 4
  %12086 = load i32, i32* %EAX.i
  %12087 = zext i32 %12086 to i64
  %12088 = load i64, i64* %PC.i7
  %12089 = add i64 %12088, 3
  store i64 %12089, i64* %PC.i7
  %12090 = inttoptr i64 %12085 to i32*
  store i32 %12086, i32* %12090
  store %struct.Memory* %loadMem_412a91, %struct.Memory** %MEMORY
  br label %block_.L_412a94

block_.L_412a94:                                  ; preds = %block_.L_412a8e, %block_412a47, %block_412864, %block_4125e5, %block_41255b, %block_4124d1, %block_412447, %block_4123a4, %block_41227d, %block_4121bc
  %loadMem_412a94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12092 = getelementptr inbounds %struct.GPR, %struct.GPR* %12091, i32 0, i32 33
  %12093 = getelementptr inbounds %struct.Reg, %struct.Reg* %12092, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %12093 to i64*
  %12094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12095 = getelementptr inbounds %struct.GPR, %struct.GPR* %12094, i32 0, i32 1
  %12096 = getelementptr inbounds %struct.Reg, %struct.Reg* %12095, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %12096 to i64*
  %12097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12098 = getelementptr inbounds %struct.GPR, %struct.GPR* %12097, i32 0, i32 15
  %12099 = getelementptr inbounds %struct.Reg, %struct.Reg* %12098, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %12099 to i64*
  %12100 = load i64, i64* %RBP.i6
  %12101 = sub i64 %12100, 4
  %12102 = load i64, i64* %PC.i5
  %12103 = add i64 %12102, 3
  store i64 %12103, i64* %PC.i5
  %12104 = inttoptr i64 %12101 to i32*
  %12105 = load i32, i32* %12104
  %12106 = zext i32 %12105 to i64
  store i64 %12106, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_412a94, %struct.Memory** %MEMORY
  %loadMem_412a97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12108 = getelementptr inbounds %struct.GPR, %struct.GPR* %12107, i32 0, i32 33
  %12109 = getelementptr inbounds %struct.Reg, %struct.Reg* %12108, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %12109 to i64*
  %12110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12111 = getelementptr inbounds %struct.GPR, %struct.GPR* %12110, i32 0, i32 13
  %12112 = getelementptr inbounds %struct.Reg, %struct.Reg* %12111, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %12112 to i64*
  %12113 = load i64, i64* %RSP.i
  %12114 = load i64, i64* %PC.i4
  %12115 = add i64 %12114, 7
  store i64 %12115, i64* %PC.i4
  %12116 = add i64 144, %12113
  store i64 %12116, i64* %RSP.i, align 8
  %12117 = icmp ult i64 %12116, %12113
  %12118 = icmp ult i64 %12116, 144
  %12119 = or i1 %12117, %12118
  %12120 = zext i1 %12119 to i8
  %12121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12120, i8* %12121, align 1
  %12122 = trunc i64 %12116 to i32
  %12123 = and i32 %12122, 255
  %12124 = call i32 @llvm.ctpop.i32(i32 %12123)
  %12125 = trunc i32 %12124 to i8
  %12126 = and i8 %12125, 1
  %12127 = xor i8 %12126, 1
  %12128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12127, i8* %12128, align 1
  %12129 = xor i64 144, %12113
  %12130 = xor i64 %12129, %12116
  %12131 = lshr i64 %12130, 4
  %12132 = trunc i64 %12131 to i8
  %12133 = and i8 %12132, 1
  %12134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12133, i8* %12134, align 1
  %12135 = icmp eq i64 %12116, 0
  %12136 = zext i1 %12135 to i8
  %12137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12136, i8* %12137, align 1
  %12138 = lshr i64 %12116, 63
  %12139 = trunc i64 %12138 to i8
  %12140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12139, i8* %12140, align 1
  %12141 = lshr i64 %12113, 63
  %12142 = xor i64 %12138, %12141
  %12143 = add i64 %12142, %12138
  %12144 = icmp eq i64 %12143, 2
  %12145 = zext i1 %12144 to i8
  %12146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12145, i8* %12146, align 1
  store %struct.Memory* %loadMem_412a97, %struct.Memory** %MEMORY
  %loadMem_412a9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12148 = getelementptr inbounds %struct.GPR, %struct.GPR* %12147, i32 0, i32 33
  %12149 = getelementptr inbounds %struct.Reg, %struct.Reg* %12148, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %12149 to i64*
  %12150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12151 = getelementptr inbounds %struct.GPR, %struct.GPR* %12150, i32 0, i32 15
  %12152 = getelementptr inbounds %struct.Reg, %struct.Reg* %12151, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %12152 to i64*
  %12153 = load i64, i64* %PC.i2
  %12154 = add i64 %12153, 1
  store i64 %12154, i64* %PC.i2
  %12155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12156 = load i64, i64* %12155, align 8
  %12157 = add i64 %12156, 8
  %12158 = inttoptr i64 %12156 to i64*
  %12159 = load i64, i64* %12158
  store i64 %12159, i64* %RBP.i3, align 8
  store i64 %12157, i64* %12155, align 8
  store %struct.Memory* %loadMem_412a9e, %struct.Memory** %MEMORY
  %loadMem_412a9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12161 = getelementptr inbounds %struct.GPR, %struct.GPR* %12160, i32 0, i32 33
  %12162 = getelementptr inbounds %struct.Reg, %struct.Reg* %12161, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %12162 to i64*
  %12163 = load i64, i64* %PC.i1
  %12164 = add i64 %12163, 1
  store i64 %12164, i64* %PC.i1
  %12165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12167 = load i64, i64* %12166, align 8
  %12168 = inttoptr i64 %12167 to i64*
  %12169 = load i64, i64* %12168
  store i64 %12169, i64* %12165, align 8
  %12170 = add i64 %12167, 8
  store i64 %12170, i64* %12166, align 8
  store %struct.Memory* %loadMem_412a9f, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_412a9f
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x90___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 144
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 144
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 144, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4120c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_412119(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57a16e___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57a16e_type* @G__0x57a16e to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6d1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1745, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57a4be___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57a4be_type* @G__0x57a4be to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x68__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r9___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x6c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x70__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 112
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abortgo(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41212d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_412132(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_412197(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6d2___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1746, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57a4f4___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57a4f4_type* @G__0x57a4f4 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x84__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x88__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = trunc i64 %14 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = icmp eq i64 %14, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %14, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %14, 63
  %31 = xor i64 %27, %30
  %32 = add i64 %31, %30
  %33 = icmp eq i64 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4121cc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__edx___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RDX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.fastlib(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4121c7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_412a94(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4121cc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da08___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x99da08(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da04___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x99da04(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0xaaadb0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11185584
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4126d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 8053168
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = trunc i64 %12 to i32
  %19 = inttoptr i64 %15 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %18
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %RAX, align 8
  %23 = icmp ult i32 %21, %18
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %18
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %18, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41229f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaaadb0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11185584
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x99da04___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41229f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_412268(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 16
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_412288(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4126bd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_412658(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xa7f430___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xaab3f0___rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 11187184
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x2e8___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 744, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x2e4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x99da08___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_412658(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x14__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 20
  %16 = icmp ult i32 %14, 20
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 20
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_412323(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x13__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 19
  %16 = icmp ult i32 %14, 19
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 19
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4123d9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0xc__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4123d4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 16
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4123c1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4123c1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41238f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4123af(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4123c6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41232a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_412626(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_412469(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaaadb0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11185584
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x99da04___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_412469(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_412432(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_412452(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0xaaadb0___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11185584
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4124f3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4124f3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4124bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4124dc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41257d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41257d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_412546(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_412566(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_412607(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_412607(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4125d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4125f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x5c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaaba30___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11188784
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 76
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4123df(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da08___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xaab3f0___rdx_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 11187184
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x2e8___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 744, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x2e4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 740
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4126b8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4126b3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4126c2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_412207(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 68
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_412a8e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_412740(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x2e4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x99da08___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_412874(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_412792(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4127e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_412836(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41284f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_41286f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_412874(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 28
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4128c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x40__rbp__rax_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -64
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 5
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaab3f0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11187184
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0xaab3f0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = mul i64 %14, 4
  %16 = add i64 %15, 11187184
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %12, %20
  %22 = icmp ult i32 %12, %20
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %21, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %20, %12
  %32 = xor i32 %31, %21
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %21, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %21, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %12, 31
  %44 = lshr i32 %20, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4128ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4128c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4128b2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41287b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_412a7b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4128d1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_412923(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_412a19(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_412975(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4129c7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_412a57(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_412a32(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_412a52(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_412a57(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x40__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %RBP
  %18 = load i64, i64* %RCX
  %19 = mul i64 %18, 4
  %20 = add i64 %17, -64
  %21 = add i64 %20, %19
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %21 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %15, %25
  %27 = icmp ult i32 %15, %25
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %26, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %25, %15
  %37 = xor i32 %36, %26
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %26, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %26, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %15, 31
  %49 = lshr i32 %25, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4128d1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_412a7b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_412a80(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4126d7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x90___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 144, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 144
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 144, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
