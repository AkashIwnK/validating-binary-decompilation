; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x99da08_type = type <{ [4 x i8] }>
%G_0xa0e710_type = type <{ [8 x i8] }>
%G__0xa7f430_type = type <{ [8 x i8] }>
%G__0xaaba30_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x99da08 = global %G_0x99da08_type zeroinitializer
@G_0xa0e710 = global %G_0xa0e710_type zeroinitializer
@G__0xa7f430 = global %G__0xa7f430_type zeroinitializer
@G__0xaaba30 = global %G__0xaaba30_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_40d280.update_liberties(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40a6c0.remove_liberty(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @extend_neighbor_string(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_40b1b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_40b1b0, %struct.Memory** %MEMORY
  %loadMem_40b1b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i2075 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i2076 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i2077 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i2076
  %27 = load i64, i64* %PC.i2075
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i2075
  store i64 %26, i64* %RBP.i2077, align 8
  store %struct.Memory* %loadMem_40b1b1, %struct.Memory** %MEMORY
  %loadMem_40b1b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i2073 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i2074 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i2074
  %36 = load i64, i64* %PC.i2073
  %37 = add i64 %36, 4
  store i64 %37, i64* %PC.i2073
  %38 = sub i64 %35, 48
  store i64 %38, i64* %RSP.i2074, align 8
  %39 = icmp ult i64 %35, 48
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 48, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_40b1b4, %struct.Memory** %MEMORY
  %loadMem_40b1b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i2071 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RAX.i2072 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %PC.i2071
  %74 = add i64 %73, 10
  store i64 %74, i64* %PC.i2071
  store i64 ptrtoint (%G__0xaaba30_type* @G__0xaaba30 to i64), i64* %RAX.i2072, align 8
  store %struct.Memory* %loadMem_40b1b8, %struct.Memory** %MEMORY
  %loadMem_40b1c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 33
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %PC.i2069 = bitcast %union.anon* %77 to i64*
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 5
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %RCX.i2070 = bitcast %union.anon* %80 to i64*
  %81 = load i64, i64* %PC.i2069
  %82 = add i64 %81, 10
  store i64 %82, i64* %PC.i2069
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RCX.i2070, align 8
  store %struct.Memory* %loadMem_40b1c2, %struct.Memory** %MEMORY
  %loadMem_40b1cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i2067 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 7
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %RDX.i2068 = bitcast %union.anon* %88 to i64*
  %89 = load i64, i64* %PC.i2067
  %90 = add i64 %89, 5
  store i64 %90, i64* %PC.i2067
  store i64 3, i64* %RDX.i2068, align 8
  store %struct.Memory* %loadMem_40b1cc, %struct.Memory** %MEMORY
  %loadMem_40b1d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %92 = getelementptr inbounds %struct.GPR, %struct.GPR* %91, i32 0, i32 33
  %93 = getelementptr inbounds %struct.Reg, %struct.Reg* %92, i32 0, i32 0
  %PC.i2065 = bitcast %union.anon* %93 to i64*
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %95 = getelementptr inbounds %struct.GPR, %struct.GPR* %94, i32 0, i32 11
  %96 = getelementptr inbounds %struct.Reg, %struct.Reg* %95, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %96 to i32*
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 15
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %RBP.i2066 = bitcast %union.anon* %99 to i64*
  %100 = load i64, i64* %RBP.i2066
  %101 = sub i64 %100, 4
  %102 = load i32, i32* %EDI.i
  %103 = zext i32 %102 to i64
  %104 = load i64, i64* %PC.i2065
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC.i2065
  %106 = inttoptr i64 %101 to i32*
  store i32 %102, i32* %106
  store %struct.Memory* %loadMem_40b1d1, %struct.Memory** %MEMORY
  %loadMem_40b1d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %108 = getelementptr inbounds %struct.GPR, %struct.GPR* %107, i32 0, i32 33
  %109 = getelementptr inbounds %struct.Reg, %struct.Reg* %108, i32 0, i32 0
  %PC.i2062 = bitcast %union.anon* %109 to i64*
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %111 = getelementptr inbounds %struct.GPR, %struct.GPR* %110, i32 0, i32 9
  %112 = getelementptr inbounds %struct.Reg, %struct.Reg* %111, i32 0, i32 0
  %ESI.i2063 = bitcast %union.anon* %112 to i32*
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %114 = getelementptr inbounds %struct.GPR, %struct.GPR* %113, i32 0, i32 15
  %115 = getelementptr inbounds %struct.Reg, %struct.Reg* %114, i32 0, i32 0
  %RBP.i2064 = bitcast %union.anon* %115 to i64*
  %116 = load i64, i64* %RBP.i2064
  %117 = sub i64 %116, 8
  %118 = load i32, i32* %ESI.i2063
  %119 = zext i32 %118 to i64
  %120 = load i64, i64* %PC.i2062
  %121 = add i64 %120, 3
  store i64 %121, i64* %PC.i2062
  %122 = inttoptr i64 %117 to i32*
  store i32 %118, i32* %122
  store %struct.Memory* %loadMem_40b1d4, %struct.Memory** %MEMORY
  %loadMem_40b1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 33
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %PC.i2060 = bitcast %union.anon* %125 to i64*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 15
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %RBP.i2061 = bitcast %union.anon* %128 to i64*
  %129 = load i64, i64* %RBP.i2061
  %130 = sub i64 %129, 16
  %131 = load i64, i64* %PC.i2060
  %132 = add i64 %131, 7
  store i64 %132, i64* %PC.i2060
  %133 = inttoptr i64 %130 to i32*
  store i32 0, i32* %133
  store %struct.Memory* %loadMem_40b1d7, %struct.Memory** %MEMORY
  %loadMem_40b1de = load %struct.Memory*, %struct.Memory** %MEMORY
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 33
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %PC.i2057 = bitcast %union.anon* %136 to i64*
  %137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %138 = getelementptr inbounds %struct.GPR, %struct.GPR* %137, i32 0, i32 15
  %139 = getelementptr inbounds %struct.Reg, %struct.Reg* %138, i32 0, i32 0
  %RBP.i2058 = bitcast %union.anon* %139 to i64*
  %140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %141 = getelementptr inbounds %struct.GPR, %struct.GPR* %140, i32 0, i32 17
  %142 = getelementptr inbounds %struct.Reg, %struct.Reg* %141, i32 0, i32 0
  %R8.i2059 = bitcast %union.anon* %142 to i64*
  %143 = load i64, i64* %RBP.i2058
  %144 = sub i64 %143, 4
  %145 = load i64, i64* %PC.i2057
  %146 = add i64 %145, 4
  store i64 %146, i64* %PC.i2057
  %147 = inttoptr i64 %144 to i32*
  %148 = load i32, i32* %147
  %149 = sext i32 %148 to i64
  store i64 %149, i64* %R8.i2059, align 8
  store %struct.Memory* %loadMem_40b1de, %struct.Memory** %MEMORY
  %loadMem_40b1e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 33
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %PC.i2054 = bitcast %union.anon* %152 to i64*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 9
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %RSI.i2055 = bitcast %union.anon* %155 to i64*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 17
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %R8.i2056 = bitcast %union.anon* %158 to i64*
  %159 = load i64, i64* %R8.i2056
  %160 = add i64 %159, 12099168
  %161 = load i64, i64* %PC.i2054
  %162 = add i64 %161, 9
  store i64 %162, i64* %PC.i2054
  %163 = inttoptr i64 %160 to i8*
  %164 = load i8, i8* %163
  %165 = zext i8 %164 to i64
  store i64 %165, i64* %RSI.i2055, align 8
  store %struct.Memory* %loadMem_40b1e2, %struct.Memory** %MEMORY
  %loadMem_40b1eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %167 = getelementptr inbounds %struct.GPR, %struct.GPR* %166, i32 0, i32 33
  %168 = getelementptr inbounds %struct.Reg, %struct.Reg* %167, i32 0, i32 0
  %PC.i2051 = bitcast %union.anon* %168 to i64*
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 9
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %ESI.i2052 = bitcast %union.anon* %171 to i32*
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %173 = getelementptr inbounds %struct.GPR, %struct.GPR* %172, i32 0, i32 15
  %174 = getelementptr inbounds %struct.Reg, %struct.Reg* %173, i32 0, i32 0
  %RBP.i2053 = bitcast %union.anon* %174 to i64*
  %175 = load i64, i64* %RBP.i2053
  %176 = sub i64 %175, 20
  %177 = load i32, i32* %ESI.i2052
  %178 = zext i32 %177 to i64
  %179 = load i64, i64* %PC.i2051
  %180 = add i64 %179, 3
  store i64 %180, i64* %PC.i2051
  %181 = inttoptr i64 %176 to i32*
  store i32 %177, i32* %181
  store %struct.Memory* %loadMem_40b1eb, %struct.Memory** %MEMORY
  %loadMem_40b1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %183 = getelementptr inbounds %struct.GPR, %struct.GPR* %182, i32 0, i32 33
  %184 = getelementptr inbounds %struct.Reg, %struct.Reg* %183, i32 0, i32 0
  %PC.i2048 = bitcast %union.anon* %184 to i64*
  %185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %186 = getelementptr inbounds %struct.GPR, %struct.GPR* %185, i32 0, i32 7
  %187 = getelementptr inbounds %struct.Reg, %struct.Reg* %186, i32 0, i32 0
  %RDX.i2049 = bitcast %union.anon* %187 to i64*
  %188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %189 = getelementptr inbounds %struct.GPR, %struct.GPR* %188, i32 0, i32 15
  %190 = getelementptr inbounds %struct.Reg, %struct.Reg* %189, i32 0, i32 0
  %RBP.i2050 = bitcast %union.anon* %190 to i64*
  %191 = load i64, i64* %RDX.i2049
  %192 = load i64, i64* %RBP.i2050
  %193 = sub i64 %192, 20
  %194 = load i64, i64* %PC.i2048
  %195 = add i64 %194, 3
  store i64 %195, i64* %PC.i2048
  %196 = trunc i64 %191 to i32
  %197 = inttoptr i64 %193 to i32*
  %198 = load i32, i32* %197
  %199 = sub i32 %196, %198
  %200 = zext i32 %199 to i64
  store i64 %200, i64* %RDX.i2049, align 8
  %201 = icmp ult i32 %196, %198
  %202 = zext i1 %201 to i8
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %202, i8* %203, align 1
  %204 = and i32 %199, 255
  %205 = call i32 @llvm.ctpop.i32(i32 %204)
  %206 = trunc i32 %205 to i8
  %207 = and i8 %206, 1
  %208 = xor i8 %207, 1
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %208, i8* %209, align 1
  %210 = xor i32 %198, %196
  %211 = xor i32 %210, %199
  %212 = lshr i32 %211, 4
  %213 = trunc i32 %212 to i8
  %214 = and i8 %213, 1
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %214, i8* %215, align 1
  %216 = icmp eq i32 %199, 0
  %217 = zext i1 %216 to i8
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %217, i8* %218, align 1
  %219 = lshr i32 %199, 31
  %220 = trunc i32 %219 to i8
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %220, i8* %221, align 1
  %222 = lshr i32 %196, 31
  %223 = lshr i32 %198, 31
  %224 = xor i32 %223, %222
  %225 = xor i32 %219, %222
  %226 = add i32 %225, %224
  %227 = icmp eq i32 %226, 2
  %228 = zext i1 %227 to i8
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %228, i8* %229, align 1
  store %struct.Memory* %loadMem_40b1ee, %struct.Memory** %MEMORY
  %loadMem_40b1f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %231 = getelementptr inbounds %struct.GPR, %struct.GPR* %230, i32 0, i32 33
  %232 = getelementptr inbounds %struct.Reg, %struct.Reg* %231, i32 0, i32 0
  %PC.i2045 = bitcast %union.anon* %232 to i64*
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %234 = getelementptr inbounds %struct.GPR, %struct.GPR* %233, i32 0, i32 7
  %235 = getelementptr inbounds %struct.Reg, %struct.Reg* %234, i32 0, i32 0
  %EDX.i2046 = bitcast %union.anon* %235 to i32*
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %237 = getelementptr inbounds %struct.GPR, %struct.GPR* %236, i32 0, i32 15
  %238 = getelementptr inbounds %struct.Reg, %struct.Reg* %237, i32 0, i32 0
  %RBP.i2047 = bitcast %union.anon* %238 to i64*
  %239 = load i64, i64* %RBP.i2047
  %240 = sub i64 %239, 24
  %241 = load i32, i32* %EDX.i2046
  %242 = zext i32 %241 to i64
  %243 = load i64, i64* %PC.i2045
  %244 = add i64 %243, 3
  store i64 %244, i64* %PC.i2045
  %245 = inttoptr i64 %240 to i32*
  store i32 %241, i32* %245
  store %struct.Memory* %loadMem_40b1f1, %struct.Memory** %MEMORY
  %loadMem_40b1f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %247 = getelementptr inbounds %struct.GPR, %struct.GPR* %246, i32 0, i32 33
  %248 = getelementptr inbounds %struct.Reg, %struct.Reg* %247, i32 0, i32 0
  %PC.i2042 = bitcast %union.anon* %248 to i64*
  %249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %250 = getelementptr inbounds %struct.GPR, %struct.GPR* %249, i32 0, i32 15
  %251 = getelementptr inbounds %struct.Reg, %struct.Reg* %250, i32 0, i32 0
  %RBP.i2043 = bitcast %union.anon* %251 to i64*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %253 = getelementptr inbounds %struct.GPR, %struct.GPR* %252, i32 0, i32 17
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %R8.i2044 = bitcast %union.anon* %254 to i64*
  %255 = load i64, i64* %RBP.i2043
  %256 = sub i64 %255, 8
  %257 = load i64, i64* %PC.i2042
  %258 = add i64 %257, 4
  store i64 %258, i64* %PC.i2042
  %259 = inttoptr i64 %256 to i32*
  %260 = load i32, i32* %259
  %261 = sext i32 %260 to i64
  store i64 %261, i64* %R8.i2044, align 8
  store %struct.Memory* %loadMem_40b1f4, %struct.Memory** %MEMORY
  %loadMem_40b1f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %263 = getelementptr inbounds %struct.GPR, %struct.GPR* %262, i32 0, i32 33
  %264 = getelementptr inbounds %struct.Reg, %struct.Reg* %263, i32 0, i32 0
  %PC.i2040 = bitcast %union.anon* %264 to i64*
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 17
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %R8.i2041 = bitcast %union.anon* %267 to i64*
  %268 = load i64, i64* %R8.i2041
  %269 = load i64, i64* %PC.i2040
  %270 = add i64 %269, 7
  store i64 %270, i64* %PC.i2040
  %271 = sext i64 %268 to i128
  %272 = and i128 %271, -18446744073709551616
  %273 = zext i64 %268 to i128
  %274 = or i128 %272, %273
  %275 = mul i128 744, %274
  %276 = trunc i128 %275 to i64
  store i64 %276, i64* %R8.i2041, align 8
  %277 = sext i64 %276 to i128
  %278 = icmp ne i128 %277, %275
  %279 = zext i1 %278 to i8
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %279, i8* %280, align 1
  %281 = trunc i128 %275 to i32
  %282 = and i32 %281, 255
  %283 = call i32 @llvm.ctpop.i32(i32 %282)
  %284 = trunc i32 %283 to i8
  %285 = and i8 %284, 1
  %286 = xor i8 %285, 1
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %286, i8* %287, align 1
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %288, align 1
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %289, align 1
  %290 = lshr i64 %276, 63
  %291 = trunc i64 %290 to i8
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %291, i8* %292, align 1
  %293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %279, i8* %293, align 1
  store %struct.Memory* %loadMem_40b1f8, %struct.Memory** %MEMORY
  %loadMem_40b1ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %295 = getelementptr inbounds %struct.GPR, %struct.GPR* %294, i32 0, i32 33
  %296 = getelementptr inbounds %struct.Reg, %struct.Reg* %295, i32 0, i32 0
  %PC.i2038 = bitcast %union.anon* %296 to i64*
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %298 = getelementptr inbounds %struct.GPR, %struct.GPR* %297, i32 0, i32 5
  %299 = getelementptr inbounds %struct.Reg, %struct.Reg* %298, i32 0, i32 0
  %RCX.i2039 = bitcast %union.anon* %299 to i64*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %301 = getelementptr inbounds %struct.GPR, %struct.GPR* %300, i32 0, i32 17
  %302 = getelementptr inbounds %struct.Reg, %struct.Reg* %301, i32 0, i32 0
  %R8.i = bitcast %union.anon* %302 to i64*
  %303 = load i64, i64* %RCX.i2039
  %304 = load i64, i64* %R8.i
  %305 = load i64, i64* %PC.i2038
  %306 = add i64 %305, 3
  store i64 %306, i64* %PC.i2038
  %307 = add i64 %304, %303
  store i64 %307, i64* %RCX.i2039, align 8
  %308 = icmp ult i64 %307, %303
  %309 = icmp ult i64 %307, %304
  %310 = or i1 %308, %309
  %311 = zext i1 %310 to i8
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %311, i8* %312, align 1
  %313 = trunc i64 %307 to i32
  %314 = and i32 %313, 255
  %315 = call i32 @llvm.ctpop.i32(i32 %314)
  %316 = trunc i32 %315 to i8
  %317 = and i8 %316, 1
  %318 = xor i8 %317, 1
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %318, i8* %319, align 1
  %320 = xor i64 %304, %303
  %321 = xor i64 %320, %307
  %322 = lshr i64 %321, 4
  %323 = trunc i64 %322 to i8
  %324 = and i8 %323, 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %324, i8* %325, align 1
  %326 = icmp eq i64 %307, 0
  %327 = zext i1 %326 to i8
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %327, i8* %328, align 1
  %329 = lshr i64 %307, 63
  %330 = trunc i64 %329 to i8
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %330, i8* %331, align 1
  %332 = lshr i64 %303, 63
  %333 = lshr i64 %304, 63
  %334 = xor i64 %329, %332
  %335 = xor i64 %329, %333
  %336 = add i64 %334, %335
  %337 = icmp eq i64 %336, 2
  %338 = zext i1 %337 to i8
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %338, i8* %339, align 1
  store %struct.Memory* %loadMem_40b1ff, %struct.Memory** %MEMORY
  %loadMem_40b202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %341 = getelementptr inbounds %struct.GPR, %struct.GPR* %340, i32 0, i32 33
  %342 = getelementptr inbounds %struct.Reg, %struct.Reg* %341, i32 0, i32 0
  %PC.i2035 = bitcast %union.anon* %342 to i64*
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %344 = getelementptr inbounds %struct.GPR, %struct.GPR* %343, i32 0, i32 5
  %345 = getelementptr inbounds %struct.Reg, %struct.Reg* %344, i32 0, i32 0
  %RCX.i2036 = bitcast %union.anon* %345 to i64*
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %347 = getelementptr inbounds %struct.GPR, %struct.GPR* %346, i32 0, i32 7
  %348 = getelementptr inbounds %struct.Reg, %struct.Reg* %347, i32 0, i32 0
  %RDX.i2037 = bitcast %union.anon* %348 to i64*
  %349 = load i64, i64* %RCX.i2036
  %350 = add i64 %349, 8
  %351 = load i64, i64* %PC.i2035
  %352 = add i64 %351, 3
  store i64 %352, i64* %PC.i2035
  %353 = inttoptr i64 %350 to i32*
  %354 = load i32, i32* %353
  %355 = zext i32 %354 to i64
  store i64 %355, i64* %RDX.i2037, align 8
  store %struct.Memory* %loadMem_40b202, %struct.Memory** %MEMORY
  %loadMem_40b205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %357 = getelementptr inbounds %struct.GPR, %struct.GPR* %356, i32 0, i32 33
  %358 = getelementptr inbounds %struct.Reg, %struct.Reg* %357, i32 0, i32 0
  %PC.i2032 = bitcast %union.anon* %358 to i64*
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %360 = getelementptr inbounds %struct.GPR, %struct.GPR* %359, i32 0, i32 7
  %361 = getelementptr inbounds %struct.Reg, %struct.Reg* %360, i32 0, i32 0
  %EDX.i2033 = bitcast %union.anon* %361 to i32*
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %363 = getelementptr inbounds %struct.GPR, %struct.GPR* %362, i32 0, i32 15
  %364 = getelementptr inbounds %struct.Reg, %struct.Reg* %363, i32 0, i32 0
  %RBP.i2034 = bitcast %union.anon* %364 to i64*
  %365 = load i64, i64* %RBP.i2034
  %366 = sub i64 %365, 28
  %367 = load i32, i32* %EDX.i2033
  %368 = zext i32 %367 to i64
  %369 = load i64, i64* %PC.i2032
  %370 = add i64 %369, 3
  store i64 %370, i64* %PC.i2032
  %371 = inttoptr i64 %366 to i32*
  store i32 %367, i32* %371
  store %struct.Memory* %loadMem_40b205, %struct.Memory** %MEMORY
  %loadMem_40b208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %373 = getelementptr inbounds %struct.GPR, %struct.GPR* %372, i32 0, i32 33
  %374 = getelementptr inbounds %struct.Reg, %struct.Reg* %373, i32 0, i32 0
  %PC.i2029 = bitcast %union.anon* %374 to i64*
  %375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %376 = getelementptr inbounds %struct.GPR, %struct.GPR* %375, i32 0, i32 5
  %377 = getelementptr inbounds %struct.Reg, %struct.Reg* %376, i32 0, i32 0
  %RCX.i2030 = bitcast %union.anon* %377 to i64*
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %379 = getelementptr inbounds %struct.GPR, %struct.GPR* %378, i32 0, i32 15
  %380 = getelementptr inbounds %struct.Reg, %struct.Reg* %379, i32 0, i32 0
  %RBP.i2031 = bitcast %union.anon* %380 to i64*
  %381 = load i64, i64* %RBP.i2031
  %382 = sub i64 %381, 28
  %383 = load i64, i64* %PC.i2029
  %384 = add i64 %383, 4
  store i64 %384, i64* %PC.i2029
  %385 = inttoptr i64 %382 to i32*
  %386 = load i32, i32* %385
  %387 = sext i32 %386 to i64
  store i64 %387, i64* %RCX.i2030, align 8
  store %struct.Memory* %loadMem_40b208, %struct.Memory** %MEMORY
  %loadMem_40b20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %389 = getelementptr inbounds %struct.GPR, %struct.GPR* %388, i32 0, i32 33
  %390 = getelementptr inbounds %struct.Reg, %struct.Reg* %389, i32 0, i32 0
  %PC.i2026 = bitcast %union.anon* %390 to i64*
  %391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %392 = getelementptr inbounds %struct.GPR, %struct.GPR* %391, i32 0, i32 5
  %393 = getelementptr inbounds %struct.Reg, %struct.Reg* %392, i32 0, i32 0
  %RCX.i2027 = bitcast %union.anon* %393 to i64*
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %395 = getelementptr inbounds %struct.GPR, %struct.GPR* %394, i32 0, i32 7
  %396 = getelementptr inbounds %struct.Reg, %struct.Reg* %395, i32 0, i32 0
  %RDX.i2028 = bitcast %union.anon* %396 to i64*
  %397 = load i64, i64* %RCX.i2027
  %398 = mul i64 %397, 4
  %399 = add i64 %398, 11188784
  %400 = load i64, i64* %PC.i2026
  %401 = add i64 %400, 7
  store i64 %401, i64* %PC.i2026
  %402 = inttoptr i64 %399 to i32*
  %403 = load i32, i32* %402
  %404 = zext i32 %403 to i64
  store i64 %404, i64* %RDX.i2028, align 8
  store %struct.Memory* %loadMem_40b20c, %struct.Memory** %MEMORY
  %loadMem_40b213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %406 = getelementptr inbounds %struct.GPR, %struct.GPR* %405, i32 0, i32 33
  %407 = getelementptr inbounds %struct.Reg, %struct.Reg* %406, i32 0, i32 0
  %PC.i2023 = bitcast %union.anon* %407 to i64*
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %409 = getelementptr inbounds %struct.GPR, %struct.GPR* %408, i32 0, i32 5
  %410 = getelementptr inbounds %struct.Reg, %struct.Reg* %409, i32 0, i32 0
  %RCX.i2024 = bitcast %union.anon* %410 to i64*
  %411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %412 = getelementptr inbounds %struct.GPR, %struct.GPR* %411, i32 0, i32 15
  %413 = getelementptr inbounds %struct.Reg, %struct.Reg* %412, i32 0, i32 0
  %RBP.i2025 = bitcast %union.anon* %413 to i64*
  %414 = load i64, i64* %RBP.i2025
  %415 = sub i64 %414, 4
  %416 = load i64, i64* %PC.i2023
  %417 = add i64 %416, 4
  store i64 %417, i64* %PC.i2023
  %418 = inttoptr i64 %415 to i32*
  %419 = load i32, i32* %418
  %420 = sext i32 %419 to i64
  store i64 %420, i64* %RCX.i2024, align 8
  store %struct.Memory* %loadMem_40b213, %struct.Memory** %MEMORY
  %loadMem_40b217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %422 = getelementptr inbounds %struct.GPR, %struct.GPR* %421, i32 0, i32 33
  %423 = getelementptr inbounds %struct.Reg, %struct.Reg* %422, i32 0, i32 0
  %PC.i2020 = bitcast %union.anon* %423 to i64*
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %425 = getelementptr inbounds %struct.GPR, %struct.GPR* %424, i32 0, i32 7
  %426 = getelementptr inbounds %struct.Reg, %struct.Reg* %425, i32 0, i32 0
  %EDX.i2021 = bitcast %union.anon* %426 to i32*
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %428 = getelementptr inbounds %struct.GPR, %struct.GPR* %427, i32 0, i32 5
  %429 = getelementptr inbounds %struct.Reg, %struct.Reg* %428, i32 0, i32 0
  %RCX.i2022 = bitcast %union.anon* %429 to i64*
  %430 = load i64, i64* %RCX.i2022
  %431 = mul i64 %430, 4
  %432 = add i64 %431, 11188784
  %433 = load i32, i32* %EDX.i2021
  %434 = zext i32 %433 to i64
  %435 = load i64, i64* %PC.i2020
  %436 = add i64 %435, 7
  store i64 %436, i64* %PC.i2020
  %437 = inttoptr i64 %432 to i32*
  store i32 %433, i32* %437
  store %struct.Memory* %loadMem_40b217, %struct.Memory** %MEMORY
  %loadMem_40b21e = load %struct.Memory*, %struct.Memory** %MEMORY
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %439 = getelementptr inbounds %struct.GPR, %struct.GPR* %438, i32 0, i32 33
  %440 = getelementptr inbounds %struct.Reg, %struct.Reg* %439, i32 0, i32 0
  %PC.i2017 = bitcast %union.anon* %440 to i64*
  %441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %442 = getelementptr inbounds %struct.GPR, %struct.GPR* %441, i32 0, i32 5
  %443 = getelementptr inbounds %struct.Reg, %struct.Reg* %442, i32 0, i32 0
  %RCX.i2018 = bitcast %union.anon* %443 to i64*
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %445 = getelementptr inbounds %struct.GPR, %struct.GPR* %444, i32 0, i32 15
  %446 = getelementptr inbounds %struct.Reg, %struct.Reg* %445, i32 0, i32 0
  %RBP.i2019 = bitcast %union.anon* %446 to i64*
  %447 = load i64, i64* %RBP.i2019
  %448 = sub i64 %447, 28
  %449 = load i64, i64* %PC.i2017
  %450 = add i64 %449, 4
  store i64 %450, i64* %PC.i2017
  %451 = inttoptr i64 %448 to i32*
  %452 = load i32, i32* %451
  %453 = sext i32 %452 to i64
  store i64 %453, i64* %RCX.i2018, align 8
  store %struct.Memory* %loadMem_40b21e, %struct.Memory** %MEMORY
  %loadMem_40b222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %455 = getelementptr inbounds %struct.GPR, %struct.GPR* %454, i32 0, i32 33
  %456 = getelementptr inbounds %struct.Reg, %struct.Reg* %455, i32 0, i32 0
  %PC.i2015 = bitcast %union.anon* %456 to i64*
  %457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %458 = getelementptr inbounds %struct.GPR, %struct.GPR* %457, i32 0, i32 5
  %459 = getelementptr inbounds %struct.Reg, %struct.Reg* %458, i32 0, i32 0
  %RCX.i2016 = bitcast %union.anon* %459 to i64*
  %460 = load i64, i64* %RCX.i2016
  %461 = load i64, i64* %PC.i2015
  %462 = add i64 %461, 4
  store i64 %462, i64* %PC.i2015
  %463 = shl i64 %460, 1
  %464 = icmp slt i64 %463, 0
  %465 = shl i64 %463, 1
  store i64 %465, i64* %RCX.i2016, align 8
  %466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %467 = zext i1 %464 to i8
  store i8 %467, i8* %466, align 1
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %469 = trunc i64 %465 to i32
  %470 = and i32 %469, 254
  %471 = call i32 @llvm.ctpop.i32(i32 %470)
  %472 = trunc i32 %471 to i8
  %473 = and i8 %472, 1
  %474 = xor i8 %473, 1
  store i8 %474, i8* %468, align 1
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %475, align 1
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %477 = icmp eq i64 %465, 0
  %478 = zext i1 %477 to i8
  store i8 %478, i8* %476, align 1
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %480 = lshr i64 %465, 63
  %481 = trunc i64 %480 to i8
  store i8 %481, i8* %479, align 1
  %482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %482, align 1
  store %struct.Memory* %loadMem_40b222, %struct.Memory** %MEMORY
  %loadMem_40b226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %484 = getelementptr inbounds %struct.GPR, %struct.GPR* %483, i32 0, i32 33
  %485 = getelementptr inbounds %struct.Reg, %struct.Reg* %484, i32 0, i32 0
  %PC.i2012 = bitcast %union.anon* %485 to i64*
  %486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %487 = getelementptr inbounds %struct.GPR, %struct.GPR* %486, i32 0, i32 1
  %488 = getelementptr inbounds %struct.Reg, %struct.Reg* %487, i32 0, i32 0
  %RAX.i2013 = bitcast %union.anon* %488 to i64*
  %489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %490 = getelementptr inbounds %struct.GPR, %struct.GPR* %489, i32 0, i32 5
  %491 = getelementptr inbounds %struct.Reg, %struct.Reg* %490, i32 0, i32 0
  %RCX.i2014 = bitcast %union.anon* %491 to i64*
  %492 = load i64, i64* %RAX.i2013
  %493 = load i64, i64* %RCX.i2014
  %494 = load i64, i64* %PC.i2012
  %495 = add i64 %494, 3
  store i64 %495, i64* %PC.i2012
  %496 = add i64 %493, %492
  store i64 %496, i64* %RAX.i2013, align 8
  %497 = icmp ult i64 %496, %492
  %498 = icmp ult i64 %496, %493
  %499 = or i1 %497, %498
  %500 = zext i1 %499 to i8
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %500, i8* %501, align 1
  %502 = trunc i64 %496 to i32
  %503 = and i32 %502, 255
  %504 = call i32 @llvm.ctpop.i32(i32 %503)
  %505 = trunc i32 %504 to i8
  %506 = and i8 %505, 1
  %507 = xor i8 %506, 1
  %508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %507, i8* %508, align 1
  %509 = xor i64 %493, %492
  %510 = xor i64 %509, %496
  %511 = lshr i64 %510, 4
  %512 = trunc i64 %511 to i8
  %513 = and i8 %512, 1
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %513, i8* %514, align 1
  %515 = icmp eq i64 %496, 0
  %516 = zext i1 %515 to i8
  %517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %516, i8* %517, align 1
  %518 = lshr i64 %496, 63
  %519 = trunc i64 %518 to i8
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %519, i8* %520, align 1
  %521 = lshr i64 %492, 63
  %522 = lshr i64 %493, 63
  %523 = xor i64 %518, %521
  %524 = xor i64 %518, %522
  %525 = add i64 %523, %524
  %526 = icmp eq i64 %525, 2
  %527 = zext i1 %526 to i8
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %527, i8* %528, align 1
  store %struct.Memory* %loadMem_40b226, %struct.Memory** %MEMORY
  %loadMem_40b229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 33
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %PC.i2010 = bitcast %union.anon* %531 to i64*
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %533 = getelementptr inbounds %struct.GPR, %struct.GPR* %532, i32 0, i32 5
  %534 = getelementptr inbounds %struct.Reg, %struct.Reg* %533, i32 0, i32 0
  %RCX.i2011 = bitcast %union.anon* %534 to i64*
  %535 = load i64, i64* %PC.i2010
  %536 = add i64 %535, 8
  store i64 %536, i64* %PC.i2010
  %537 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %537, i64* %RCX.i2011, align 8
  store %struct.Memory* %loadMem_40b229, %struct.Memory** %MEMORY
  %loadMem_40b231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %539 = getelementptr inbounds %struct.GPR, %struct.GPR* %538, i32 0, i32 33
  %540 = getelementptr inbounds %struct.Reg, %struct.Reg* %539, i32 0, i32 0
  %PC.i2007 = bitcast %union.anon* %540 to i64*
  %541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %542 = getelementptr inbounds %struct.GPR, %struct.GPR* %541, i32 0, i32 1
  %543 = getelementptr inbounds %struct.Reg, %struct.Reg* %542, i32 0, i32 0
  %RAX.i2008 = bitcast %union.anon* %543 to i64*
  %544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %545 = getelementptr inbounds %struct.GPR, %struct.GPR* %544, i32 0, i32 5
  %546 = getelementptr inbounds %struct.Reg, %struct.Reg* %545, i32 0, i32 0
  %RCX.i2009 = bitcast %union.anon* %546 to i64*
  %547 = load i64, i64* %RCX.i2009
  %548 = load i64, i64* %RAX.i2008
  %549 = load i64, i64* %PC.i2007
  %550 = add i64 %549, 3
  store i64 %550, i64* %PC.i2007
  %551 = inttoptr i64 %547 to i64*
  store i64 %548, i64* %551
  store %struct.Memory* %loadMem_40b231, %struct.Memory** %MEMORY
  %loadMem_40b234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %553 = getelementptr inbounds %struct.GPR, %struct.GPR* %552, i32 0, i32 33
  %554 = getelementptr inbounds %struct.Reg, %struct.Reg* %553, i32 0, i32 0
  %PC.i2004 = bitcast %union.anon* %554 to i64*
  %555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %556 = getelementptr inbounds %struct.GPR, %struct.GPR* %555, i32 0, i32 1
  %557 = getelementptr inbounds %struct.Reg, %struct.Reg* %556, i32 0, i32 0
  %RAX.i2005 = bitcast %union.anon* %557 to i64*
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %559 = getelementptr inbounds %struct.GPR, %struct.GPR* %558, i32 0, i32 15
  %560 = getelementptr inbounds %struct.Reg, %struct.Reg* %559, i32 0, i32 0
  %RBP.i2006 = bitcast %union.anon* %560 to i64*
  %561 = load i64, i64* %RBP.i2006
  %562 = sub i64 %561, 28
  %563 = load i64, i64* %PC.i2004
  %564 = add i64 %563, 4
  store i64 %564, i64* %PC.i2004
  %565 = inttoptr i64 %562 to i32*
  %566 = load i32, i32* %565
  %567 = sext i32 %566 to i64
  store i64 %567, i64* %RAX.i2005, align 8
  store %struct.Memory* %loadMem_40b234, %struct.Memory** %MEMORY
  %loadMem_40b238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %569 = getelementptr inbounds %struct.GPR, %struct.GPR* %568, i32 0, i32 33
  %570 = getelementptr inbounds %struct.Reg, %struct.Reg* %569, i32 0, i32 0
  %PC.i2001 = bitcast %union.anon* %570 to i64*
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %572 = getelementptr inbounds %struct.GPR, %struct.GPR* %571, i32 0, i32 1
  %573 = getelementptr inbounds %struct.Reg, %struct.Reg* %572, i32 0, i32 0
  %RAX.i2002 = bitcast %union.anon* %573 to i64*
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %575 = getelementptr inbounds %struct.GPR, %struct.GPR* %574, i32 0, i32 7
  %576 = getelementptr inbounds %struct.Reg, %struct.Reg* %575, i32 0, i32 0
  %RDX.i2003 = bitcast %union.anon* %576 to i64*
  %577 = load i64, i64* %RAX.i2002
  %578 = mul i64 %577, 4
  %579 = add i64 %578, 11188784
  %580 = load i64, i64* %PC.i2001
  %581 = add i64 %580, 7
  store i64 %581, i64* %PC.i2001
  %582 = inttoptr i64 %579 to i32*
  %583 = load i32, i32* %582
  %584 = zext i32 %583 to i64
  store i64 %584, i64* %RDX.i2003, align 8
  store %struct.Memory* %loadMem_40b238, %struct.Memory** %MEMORY
  %loadMem_40b23f = load %struct.Memory*, %struct.Memory** %MEMORY
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %586 = getelementptr inbounds %struct.GPR, %struct.GPR* %585, i32 0, i32 33
  %587 = getelementptr inbounds %struct.Reg, %struct.Reg* %586, i32 0, i32 0
  %PC.i1999 = bitcast %union.anon* %587 to i64*
  %588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %589 = getelementptr inbounds %struct.GPR, %struct.GPR* %588, i32 0, i32 1
  %590 = getelementptr inbounds %struct.Reg, %struct.Reg* %589, i32 0, i32 0
  %RAX.i2000 = bitcast %union.anon* %590 to i64*
  %591 = load i64, i64* %PC.i1999
  %592 = add i64 %591, 8
  store i64 %592, i64* %PC.i1999
  %593 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %593, i64* %RAX.i2000, align 8
  store %struct.Memory* %loadMem_40b23f, %struct.Memory** %MEMORY
  %loadMem_40b247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %595 = getelementptr inbounds %struct.GPR, %struct.GPR* %594, i32 0, i32 33
  %596 = getelementptr inbounds %struct.Reg, %struct.Reg* %595, i32 0, i32 0
  %PC.i1996 = bitcast %union.anon* %596 to i64*
  %597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %598 = getelementptr inbounds %struct.GPR, %struct.GPR* %597, i32 0, i32 1
  %599 = getelementptr inbounds %struct.Reg, %struct.Reg* %598, i32 0, i32 0
  %RAX.i1997 = bitcast %union.anon* %599 to i64*
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %601 = getelementptr inbounds %struct.GPR, %struct.GPR* %600, i32 0, i32 5
  %602 = getelementptr inbounds %struct.Reg, %struct.Reg* %601, i32 0, i32 0
  %RCX.i1998 = bitcast %union.anon* %602 to i64*
  %603 = load i64, i64* %RAX.i1997
  %604 = load i64, i64* %PC.i1996
  %605 = add i64 %604, 3
  store i64 %605, i64* %PC.i1996
  store i64 %603, i64* %RCX.i1998, align 8
  store %struct.Memory* %loadMem_40b247, %struct.Memory** %MEMORY
  %loadMem_40b24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %607 = getelementptr inbounds %struct.GPR, %struct.GPR* %606, i32 0, i32 33
  %608 = getelementptr inbounds %struct.Reg, %struct.Reg* %607, i32 0, i32 0
  %PC.i1994 = bitcast %union.anon* %608 to i64*
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %610 = getelementptr inbounds %struct.GPR, %struct.GPR* %609, i32 0, i32 5
  %611 = getelementptr inbounds %struct.Reg, %struct.Reg* %610, i32 0, i32 0
  %RCX.i1995 = bitcast %union.anon* %611 to i64*
  %612 = load i64, i64* %RCX.i1995
  %613 = load i64, i64* %PC.i1994
  %614 = add i64 %613, 4
  store i64 %614, i64* %PC.i1994
  %615 = add i64 16, %612
  store i64 %615, i64* %RCX.i1995, align 8
  %616 = icmp ult i64 %615, %612
  %617 = icmp ult i64 %615, 16
  %618 = or i1 %616, %617
  %619 = zext i1 %618 to i8
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %619, i8* %620, align 1
  %621 = trunc i64 %615 to i32
  %622 = and i32 %621, 255
  %623 = call i32 @llvm.ctpop.i32(i32 %622)
  %624 = trunc i32 %623 to i8
  %625 = and i8 %624, 1
  %626 = xor i8 %625, 1
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %626, i8* %627, align 1
  %628 = xor i64 16, %612
  %629 = xor i64 %628, %615
  %630 = lshr i64 %629, 4
  %631 = trunc i64 %630 to i8
  %632 = and i8 %631, 1
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %632, i8* %633, align 1
  %634 = icmp eq i64 %615, 0
  %635 = zext i1 %634 to i8
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %635, i8* %636, align 1
  %637 = lshr i64 %615, 63
  %638 = trunc i64 %637 to i8
  %639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %638, i8* %639, align 1
  %640 = lshr i64 %612, 63
  %641 = xor i64 %637, %640
  %642 = add i64 %641, %637
  %643 = icmp eq i64 %642, 2
  %644 = zext i1 %643 to i8
  %645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %644, i8* %645, align 1
  store %struct.Memory* %loadMem_40b24a, %struct.Memory** %MEMORY
  %loadMem_40b24e = load %struct.Memory*, %struct.Memory** %MEMORY
  %646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %647 = getelementptr inbounds %struct.GPR, %struct.GPR* %646, i32 0, i32 33
  %648 = getelementptr inbounds %struct.Reg, %struct.Reg* %647, i32 0, i32 0
  %PC.i1992 = bitcast %union.anon* %648 to i64*
  %649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %650 = getelementptr inbounds %struct.GPR, %struct.GPR* %649, i32 0, i32 5
  %651 = getelementptr inbounds %struct.Reg, %struct.Reg* %650, i32 0, i32 0
  %RCX.i1993 = bitcast %union.anon* %651 to i64*
  %652 = load i64, i64* %RCX.i1993
  %653 = load i64, i64* %PC.i1992
  %654 = add i64 %653, 8
  store i64 %654, i64* %PC.i1992
  store i64 %652, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40b24e, %struct.Memory** %MEMORY
  %loadMem_40b256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %656 = getelementptr inbounds %struct.GPR, %struct.GPR* %655, i32 0, i32 33
  %657 = getelementptr inbounds %struct.Reg, %struct.Reg* %656, i32 0, i32 0
  %PC.i1989 = bitcast %union.anon* %657 to i64*
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %659 = getelementptr inbounds %struct.GPR, %struct.GPR* %658, i32 0, i32 7
  %660 = getelementptr inbounds %struct.Reg, %struct.Reg* %659, i32 0, i32 0
  %EDX.i1990 = bitcast %union.anon* %660 to i32*
  %661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %662 = getelementptr inbounds %struct.GPR, %struct.GPR* %661, i32 0, i32 1
  %663 = getelementptr inbounds %struct.Reg, %struct.Reg* %662, i32 0, i32 0
  %RAX.i1991 = bitcast %union.anon* %663 to i64*
  %664 = load i64, i64* %RAX.i1991
  %665 = add i64 %664, 8
  %666 = load i32, i32* %EDX.i1990
  %667 = zext i32 %666 to i64
  %668 = load i64, i64* %PC.i1989
  %669 = add i64 %668, 3
  store i64 %669, i64* %PC.i1989
  %670 = inttoptr i64 %665 to i32*
  store i32 %666, i32* %670
  store %struct.Memory* %loadMem_40b256, %struct.Memory** %MEMORY
  %loadMem_40b259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %672 = getelementptr inbounds %struct.GPR, %struct.GPR* %671, i32 0, i32 33
  %673 = getelementptr inbounds %struct.Reg, %struct.Reg* %672, i32 0, i32 0
  %PC.i1986 = bitcast %union.anon* %673 to i64*
  %674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %675 = getelementptr inbounds %struct.GPR, %struct.GPR* %674, i32 0, i32 7
  %676 = getelementptr inbounds %struct.Reg, %struct.Reg* %675, i32 0, i32 0
  %RDX.i1987 = bitcast %union.anon* %676 to i64*
  %677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %678 = getelementptr inbounds %struct.GPR, %struct.GPR* %677, i32 0, i32 15
  %679 = getelementptr inbounds %struct.Reg, %struct.Reg* %678, i32 0, i32 0
  %RBP.i1988 = bitcast %union.anon* %679 to i64*
  %680 = load i64, i64* %RBP.i1988
  %681 = sub i64 %680, 4
  %682 = load i64, i64* %PC.i1986
  %683 = add i64 %682, 3
  store i64 %683, i64* %PC.i1986
  %684 = inttoptr i64 %681 to i32*
  %685 = load i32, i32* %684
  %686 = zext i32 %685 to i64
  store i64 %686, i64* %RDX.i1987, align 8
  store %struct.Memory* %loadMem_40b259, %struct.Memory** %MEMORY
  %loadMem_40b25c = load %struct.Memory*, %struct.Memory** %MEMORY
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %688 = getelementptr inbounds %struct.GPR, %struct.GPR* %687, i32 0, i32 33
  %689 = getelementptr inbounds %struct.Reg, %struct.Reg* %688, i32 0, i32 0
  %PC.i1983 = bitcast %union.anon* %689 to i64*
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %691 = getelementptr inbounds %struct.GPR, %struct.GPR* %690, i32 0, i32 1
  %692 = getelementptr inbounds %struct.Reg, %struct.Reg* %691, i32 0, i32 0
  %RAX.i1984 = bitcast %union.anon* %692 to i64*
  %693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %694 = getelementptr inbounds %struct.GPR, %struct.GPR* %693, i32 0, i32 15
  %695 = getelementptr inbounds %struct.Reg, %struct.Reg* %694, i32 0, i32 0
  %RBP.i1985 = bitcast %union.anon* %695 to i64*
  %696 = load i64, i64* %RBP.i1985
  %697 = sub i64 %696, 28
  %698 = load i64, i64* %PC.i1983
  %699 = add i64 %698, 4
  store i64 %699, i64* %PC.i1983
  %700 = inttoptr i64 %697 to i32*
  %701 = load i32, i32* %700
  %702 = sext i32 %701 to i64
  store i64 %702, i64* %RAX.i1984, align 8
  store %struct.Memory* %loadMem_40b25c, %struct.Memory** %MEMORY
  %loadMem_40b260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %704 = getelementptr inbounds %struct.GPR, %struct.GPR* %703, i32 0, i32 33
  %705 = getelementptr inbounds %struct.Reg, %struct.Reg* %704, i32 0, i32 0
  %PC.i1980 = bitcast %union.anon* %705 to i64*
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %707 = getelementptr inbounds %struct.GPR, %struct.GPR* %706, i32 0, i32 7
  %708 = getelementptr inbounds %struct.Reg, %struct.Reg* %707, i32 0, i32 0
  %EDX.i1981 = bitcast %union.anon* %708 to i32*
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %710 = getelementptr inbounds %struct.GPR, %struct.GPR* %709, i32 0, i32 1
  %711 = getelementptr inbounds %struct.Reg, %struct.Reg* %710, i32 0, i32 0
  %RAX.i1982 = bitcast %union.anon* %711 to i64*
  %712 = load i64, i64* %RAX.i1982
  %713 = mul i64 %712, 4
  %714 = add i64 %713, 11188784
  %715 = load i32, i32* %EDX.i1981
  %716 = zext i32 %715 to i64
  %717 = load i64, i64* %PC.i1980
  %718 = add i64 %717, 7
  store i64 %718, i64* %PC.i1980
  %719 = inttoptr i64 %714 to i32*
  store i32 %715, i32* %719
  store %struct.Memory* %loadMem_40b260, %struct.Memory** %MEMORY
  %loadMem_40b267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %721 = getelementptr inbounds %struct.GPR, %struct.GPR* %720, i32 0, i32 33
  %722 = getelementptr inbounds %struct.Reg, %struct.Reg* %721, i32 0, i32 0
  %PC.i1977 = bitcast %union.anon* %722 to i64*
  %723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %724 = getelementptr inbounds %struct.GPR, %struct.GPR* %723, i32 0, i32 7
  %725 = getelementptr inbounds %struct.Reg, %struct.Reg* %724, i32 0, i32 0
  %RDX.i1978 = bitcast %union.anon* %725 to i64*
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %727 = getelementptr inbounds %struct.GPR, %struct.GPR* %726, i32 0, i32 15
  %728 = getelementptr inbounds %struct.Reg, %struct.Reg* %727, i32 0, i32 0
  %RBP.i1979 = bitcast %union.anon* %728 to i64*
  %729 = load i64, i64* %RBP.i1979
  %730 = sub i64 %729, 4
  %731 = load i64, i64* %PC.i1977
  %732 = add i64 %731, 3
  store i64 %732, i64* %PC.i1977
  %733 = inttoptr i64 %730 to i32*
  %734 = load i32, i32* %733
  %735 = zext i32 %734 to i64
  store i64 %735, i64* %RDX.i1978, align 8
  store %struct.Memory* %loadMem_40b267, %struct.Memory** %MEMORY
  %loadMem_40b26a = load %struct.Memory*, %struct.Memory** %MEMORY
  %736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %737 = getelementptr inbounds %struct.GPR, %struct.GPR* %736, i32 0, i32 33
  %738 = getelementptr inbounds %struct.Reg, %struct.Reg* %737, i32 0, i32 0
  %PC.i1974 = bitcast %union.anon* %738 to i64*
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %740 = getelementptr inbounds %struct.GPR, %struct.GPR* %739, i32 0, i32 7
  %741 = getelementptr inbounds %struct.Reg, %struct.Reg* %740, i32 0, i32 0
  %EDX.i1975 = bitcast %union.anon* %741 to i32*
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %743 = getelementptr inbounds %struct.GPR, %struct.GPR* %742, i32 0, i32 15
  %744 = getelementptr inbounds %struct.Reg, %struct.Reg* %743, i32 0, i32 0
  %RBP.i1976 = bitcast %union.anon* %744 to i64*
  %745 = load i32, i32* %EDX.i1975
  %746 = zext i32 %745 to i64
  %747 = load i64, i64* %RBP.i1976
  %748 = sub i64 %747, 28
  %749 = load i64, i64* %PC.i1974
  %750 = add i64 %749, 3
  store i64 %750, i64* %PC.i1974
  %751 = inttoptr i64 %748 to i32*
  %752 = load i32, i32* %751
  %753 = sub i32 %745, %752
  %754 = icmp ult i32 %745, %752
  %755 = zext i1 %754 to i8
  %756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %755, i8* %756, align 1
  %757 = and i32 %753, 255
  %758 = call i32 @llvm.ctpop.i32(i32 %757)
  %759 = trunc i32 %758 to i8
  %760 = and i8 %759, 1
  %761 = xor i8 %760, 1
  %762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %761, i8* %762, align 1
  %763 = xor i32 %752, %745
  %764 = xor i32 %763, %753
  %765 = lshr i32 %764, 4
  %766 = trunc i32 %765 to i8
  %767 = and i8 %766, 1
  %768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %767, i8* %768, align 1
  %769 = icmp eq i32 %753, 0
  %770 = zext i1 %769 to i8
  %771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %770, i8* %771, align 1
  %772 = lshr i32 %753, 31
  %773 = trunc i32 %772 to i8
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %773, i8* %774, align 1
  %775 = lshr i32 %745, 31
  %776 = lshr i32 %752, 31
  %777 = xor i32 %776, %775
  %778 = xor i32 %772, %775
  %779 = add i32 %778, %777
  %780 = icmp eq i32 %779, 2
  %781 = zext i1 %780 to i8
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %781, i8* %782, align 1
  store %struct.Memory* %loadMem_40b26a, %struct.Memory** %MEMORY
  %loadMem_40b26d = load %struct.Memory*, %struct.Memory** %MEMORY
  %783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %784 = getelementptr inbounds %struct.GPR, %struct.GPR* %783, i32 0, i32 33
  %785 = getelementptr inbounds %struct.Reg, %struct.Reg* %784, i32 0, i32 0
  %PC.i1973 = bitcast %union.anon* %785 to i64*
  %786 = load i64, i64* %PC.i1973
  %787 = add i64 %786, 114
  %788 = load i64, i64* %PC.i1973
  %789 = add i64 %788, 6
  %790 = load i64, i64* %PC.i1973
  %791 = add i64 %790, 6
  store i64 %791, i64* %PC.i1973
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %793 = load i8, i8* %792, align 1
  %794 = icmp ne i8 %793, 0
  %795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %796 = load i8, i8* %795, align 1
  %797 = icmp ne i8 %796, 0
  %798 = xor i1 %794, %797
  %799 = xor i1 %798, true
  %800 = zext i1 %799 to i8
  store i8 %800, i8* %BRANCH_TAKEN, align 1
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %802 = select i1 %798, i64 %789, i64 %787
  store i64 %802, i64* %801, align 8
  store %struct.Memory* %loadMem_40b26d, %struct.Memory** %MEMORY
  %loadBr_40b26d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b26d = icmp eq i8 %loadBr_40b26d, 1
  br i1 %cmpBr_40b26d, label %block_.L_40b2df, label %block_40b273

block_40b273:                                     ; preds = %entry
  %loadMem_40b273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %804 = getelementptr inbounds %struct.GPR, %struct.GPR* %803, i32 0, i32 33
  %805 = getelementptr inbounds %struct.Reg, %struct.Reg* %804, i32 0, i32 0
  %PC.i1971 = bitcast %union.anon* %805 to i64*
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %807 = getelementptr inbounds %struct.GPR, %struct.GPR* %806, i32 0, i32 1
  %808 = getelementptr inbounds %struct.Reg, %struct.Reg* %807, i32 0, i32 0
  %RAX.i1972 = bitcast %union.anon* %808 to i64*
  %809 = load i64, i64* %PC.i1971
  %810 = add i64 %809, 10
  store i64 %810, i64* %PC.i1971
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1972, align 8
  store %struct.Memory* %loadMem_40b273, %struct.Memory** %MEMORY
  %loadMem_40b27d = load %struct.Memory*, %struct.Memory** %MEMORY
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %812 = getelementptr inbounds %struct.GPR, %struct.GPR* %811, i32 0, i32 33
  %813 = getelementptr inbounds %struct.Reg, %struct.Reg* %812, i32 0, i32 0
  %PC.i1968 = bitcast %union.anon* %813 to i64*
  %814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %815 = getelementptr inbounds %struct.GPR, %struct.GPR* %814, i32 0, i32 5
  %816 = getelementptr inbounds %struct.Reg, %struct.Reg* %815, i32 0, i32 0
  %RCX.i1969 = bitcast %union.anon* %816 to i64*
  %817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %818 = getelementptr inbounds %struct.GPR, %struct.GPR* %817, i32 0, i32 15
  %819 = getelementptr inbounds %struct.Reg, %struct.Reg* %818, i32 0, i32 0
  %RBP.i1970 = bitcast %union.anon* %819 to i64*
  %820 = load i64, i64* %RBP.i1970
  %821 = sub i64 %820, 8
  %822 = load i64, i64* %PC.i1968
  %823 = add i64 %822, 4
  store i64 %823, i64* %PC.i1968
  %824 = inttoptr i64 %821 to i32*
  %825 = load i32, i32* %824
  %826 = sext i32 %825 to i64
  store i64 %826, i64* %RCX.i1969, align 8
  store %struct.Memory* %loadMem_40b27d, %struct.Memory** %MEMORY
  %loadMem_40b281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %828 = getelementptr inbounds %struct.GPR, %struct.GPR* %827, i32 0, i32 33
  %829 = getelementptr inbounds %struct.Reg, %struct.Reg* %828, i32 0, i32 0
  %PC.i1966 = bitcast %union.anon* %829 to i64*
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %831 = getelementptr inbounds %struct.GPR, %struct.GPR* %830, i32 0, i32 5
  %832 = getelementptr inbounds %struct.Reg, %struct.Reg* %831, i32 0, i32 0
  %RCX.i1967 = bitcast %union.anon* %832 to i64*
  %833 = load i64, i64* %RCX.i1967
  %834 = load i64, i64* %PC.i1966
  %835 = add i64 %834, 7
  store i64 %835, i64* %PC.i1966
  %836 = sext i64 %833 to i128
  %837 = and i128 %836, -18446744073709551616
  %838 = zext i64 %833 to i128
  %839 = or i128 %837, %838
  %840 = mul i128 744, %839
  %841 = trunc i128 %840 to i64
  store i64 %841, i64* %RCX.i1967, align 8
  %842 = sext i64 %841 to i128
  %843 = icmp ne i128 %842, %840
  %844 = zext i1 %843 to i8
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %844, i8* %845, align 1
  %846 = trunc i128 %840 to i32
  %847 = and i32 %846, 255
  %848 = call i32 @llvm.ctpop.i32(i32 %847)
  %849 = trunc i32 %848 to i8
  %850 = and i8 %849, 1
  %851 = xor i8 %850, 1
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %851, i8* %852, align 1
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %853, align 1
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %854, align 1
  %855 = lshr i64 %841, 63
  %856 = trunc i64 %855 to i8
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %856, i8* %857, align 1
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %844, i8* %858, align 1
  store %struct.Memory* %loadMem_40b281, %struct.Memory** %MEMORY
  %loadMem_40b288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %860 = getelementptr inbounds %struct.GPR, %struct.GPR* %859, i32 0, i32 33
  %861 = getelementptr inbounds %struct.Reg, %struct.Reg* %860, i32 0, i32 0
  %PC.i1963 = bitcast %union.anon* %861 to i64*
  %862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %863 = getelementptr inbounds %struct.GPR, %struct.GPR* %862, i32 0, i32 1
  %864 = getelementptr inbounds %struct.Reg, %struct.Reg* %863, i32 0, i32 0
  %RAX.i1964 = bitcast %union.anon* %864 to i64*
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 7
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %RDX.i1965 = bitcast %union.anon* %867 to i64*
  %868 = load i64, i64* %RAX.i1964
  %869 = load i64, i64* %PC.i1963
  %870 = add i64 %869, 3
  store i64 %870, i64* %PC.i1963
  store i64 %868, i64* %RDX.i1965, align 8
  store %struct.Memory* %loadMem_40b288, %struct.Memory** %MEMORY
  %loadMem_40b28b = load %struct.Memory*, %struct.Memory** %MEMORY
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 33
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %PC.i1960 = bitcast %union.anon* %873 to i64*
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %875 = getelementptr inbounds %struct.GPR, %struct.GPR* %874, i32 0, i32 5
  %876 = getelementptr inbounds %struct.Reg, %struct.Reg* %875, i32 0, i32 0
  %RCX.i1961 = bitcast %union.anon* %876 to i64*
  %877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %878 = getelementptr inbounds %struct.GPR, %struct.GPR* %877, i32 0, i32 7
  %879 = getelementptr inbounds %struct.Reg, %struct.Reg* %878, i32 0, i32 0
  %RDX.i1962 = bitcast %union.anon* %879 to i64*
  %880 = load i64, i64* %RDX.i1962
  %881 = load i64, i64* %RCX.i1961
  %882 = load i64, i64* %PC.i1960
  %883 = add i64 %882, 3
  store i64 %883, i64* %PC.i1960
  %884 = add i64 %881, %880
  store i64 %884, i64* %RDX.i1962, align 8
  %885 = icmp ult i64 %884, %880
  %886 = icmp ult i64 %884, %881
  %887 = or i1 %885, %886
  %888 = zext i1 %887 to i8
  %889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %888, i8* %889, align 1
  %890 = trunc i64 %884 to i32
  %891 = and i32 %890, 255
  %892 = call i32 @llvm.ctpop.i32(i32 %891)
  %893 = trunc i32 %892 to i8
  %894 = and i8 %893, 1
  %895 = xor i8 %894, 1
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %895, i8* %896, align 1
  %897 = xor i64 %881, %880
  %898 = xor i64 %897, %884
  %899 = lshr i64 %898, 4
  %900 = trunc i64 %899 to i8
  %901 = and i8 %900, 1
  %902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %901, i8* %902, align 1
  %903 = icmp eq i64 %884, 0
  %904 = zext i1 %903 to i8
  %905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %904, i8* %905, align 1
  %906 = lshr i64 %884, 63
  %907 = trunc i64 %906 to i8
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %907, i8* %908, align 1
  %909 = lshr i64 %880, 63
  %910 = lshr i64 %881, 63
  %911 = xor i64 %906, %909
  %912 = xor i64 %906, %910
  %913 = add i64 %911, %912
  %914 = icmp eq i64 %913, 2
  %915 = zext i1 %914 to i8
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %915, i8* %916, align 1
  store %struct.Memory* %loadMem_40b28b, %struct.Memory** %MEMORY
  %loadMem_40b28e = load %struct.Memory*, %struct.Memory** %MEMORY
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %918 = getelementptr inbounds %struct.GPR, %struct.GPR* %917, i32 0, i32 33
  %919 = getelementptr inbounds %struct.Reg, %struct.Reg* %918, i32 0, i32 0
  %PC.i1958 = bitcast %union.anon* %919 to i64*
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %921 = getelementptr inbounds %struct.GPR, %struct.GPR* %920, i32 0, i32 7
  %922 = getelementptr inbounds %struct.Reg, %struct.Reg* %921, i32 0, i32 0
  %RDX.i1959 = bitcast %union.anon* %922 to i64*
  %923 = load i64, i64* %RDX.i1959
  %924 = load i64, i64* %PC.i1958
  %925 = add i64 %924, 4
  store i64 %925, i64* %PC.i1958
  %926 = add i64 8, %923
  store i64 %926, i64* %RDX.i1959, align 8
  %927 = icmp ult i64 %926, %923
  %928 = icmp ult i64 %926, 8
  %929 = or i1 %927, %928
  %930 = zext i1 %929 to i8
  %931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %930, i8* %931, align 1
  %932 = trunc i64 %926 to i32
  %933 = and i32 %932, 255
  %934 = call i32 @llvm.ctpop.i32(i32 %933)
  %935 = trunc i32 %934 to i8
  %936 = and i8 %935, 1
  %937 = xor i8 %936, 1
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %937, i8* %938, align 1
  %939 = xor i64 8, %923
  %940 = xor i64 %939, %926
  %941 = lshr i64 %940, 4
  %942 = trunc i64 %941 to i8
  %943 = and i8 %942, 1
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %943, i8* %944, align 1
  %945 = icmp eq i64 %926, 0
  %946 = zext i1 %945 to i8
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %946, i8* %947, align 1
  %948 = lshr i64 %926, 63
  %949 = trunc i64 %948 to i8
  %950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %949, i8* %950, align 1
  %951 = lshr i64 %923, 63
  %952 = xor i64 %948, %951
  %953 = add i64 %952, %948
  %954 = icmp eq i64 %953, 2
  %955 = zext i1 %954 to i8
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %955, i8* %956, align 1
  store %struct.Memory* %loadMem_40b28e, %struct.Memory** %MEMORY
  %loadMem_40b292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %958 = getelementptr inbounds %struct.GPR, %struct.GPR* %957, i32 0, i32 33
  %959 = getelementptr inbounds %struct.Reg, %struct.Reg* %958, i32 0, i32 0
  %PC.i1956 = bitcast %union.anon* %959 to i64*
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %961 = getelementptr inbounds %struct.GPR, %struct.GPR* %960, i32 0, i32 5
  %962 = getelementptr inbounds %struct.Reg, %struct.Reg* %961, i32 0, i32 0
  %RCX.i1957 = bitcast %union.anon* %962 to i64*
  %963 = load i64, i64* %PC.i1956
  %964 = add i64 %963, 8
  store i64 %964, i64* %PC.i1956
  %965 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %965, i64* %RCX.i1957, align 8
  store %struct.Memory* %loadMem_40b292, %struct.Memory** %MEMORY
  %loadMem_40b29a = load %struct.Memory*, %struct.Memory** %MEMORY
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 33
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %PC.i1953 = bitcast %union.anon* %968 to i64*
  %969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %970 = getelementptr inbounds %struct.GPR, %struct.GPR* %969, i32 0, i32 5
  %971 = getelementptr inbounds %struct.Reg, %struct.Reg* %970, i32 0, i32 0
  %RCX.i1954 = bitcast %union.anon* %971 to i64*
  %972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %973 = getelementptr inbounds %struct.GPR, %struct.GPR* %972, i32 0, i32 7
  %974 = getelementptr inbounds %struct.Reg, %struct.Reg* %973, i32 0, i32 0
  %RDX.i1955 = bitcast %union.anon* %974 to i64*
  %975 = load i64, i64* %RCX.i1954
  %976 = load i64, i64* %RDX.i1955
  %977 = load i64, i64* %PC.i1953
  %978 = add i64 %977, 3
  store i64 %978, i64* %PC.i1953
  %979 = inttoptr i64 %975 to i64*
  store i64 %976, i64* %979
  store %struct.Memory* %loadMem_40b29a, %struct.Memory** %MEMORY
  %loadMem_40b29d = load %struct.Memory*, %struct.Memory** %MEMORY
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %981 = getelementptr inbounds %struct.GPR, %struct.GPR* %980, i32 0, i32 33
  %982 = getelementptr inbounds %struct.Reg, %struct.Reg* %981, i32 0, i32 0
  %PC.i1950 = bitcast %union.anon* %982 to i64*
  %983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %984 = getelementptr inbounds %struct.GPR, %struct.GPR* %983, i32 0, i32 5
  %985 = getelementptr inbounds %struct.Reg, %struct.Reg* %984, i32 0, i32 0
  %RCX.i1951 = bitcast %union.anon* %985 to i64*
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %987 = getelementptr inbounds %struct.GPR, %struct.GPR* %986, i32 0, i32 15
  %988 = getelementptr inbounds %struct.Reg, %struct.Reg* %987, i32 0, i32 0
  %RBP.i1952 = bitcast %union.anon* %988 to i64*
  %989 = load i64, i64* %RBP.i1952
  %990 = sub i64 %989, 8
  %991 = load i64, i64* %PC.i1950
  %992 = add i64 %991, 4
  store i64 %992, i64* %PC.i1950
  %993 = inttoptr i64 %990 to i32*
  %994 = load i32, i32* %993
  %995 = sext i32 %994 to i64
  store i64 %995, i64* %RCX.i1951, align 8
  store %struct.Memory* %loadMem_40b29d, %struct.Memory** %MEMORY
  %loadMem_40b2a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %997 = getelementptr inbounds %struct.GPR, %struct.GPR* %996, i32 0, i32 33
  %998 = getelementptr inbounds %struct.Reg, %struct.Reg* %997, i32 0, i32 0
  %PC.i1948 = bitcast %union.anon* %998 to i64*
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1000 = getelementptr inbounds %struct.GPR, %struct.GPR* %999, i32 0, i32 5
  %1001 = getelementptr inbounds %struct.Reg, %struct.Reg* %1000, i32 0, i32 0
  %RCX.i1949 = bitcast %union.anon* %1001 to i64*
  %1002 = load i64, i64* %RCX.i1949
  %1003 = load i64, i64* %PC.i1948
  %1004 = add i64 %1003, 7
  store i64 %1004, i64* %PC.i1948
  %1005 = sext i64 %1002 to i128
  %1006 = and i128 %1005, -18446744073709551616
  %1007 = zext i64 %1002 to i128
  %1008 = or i128 %1006, %1007
  %1009 = mul i128 744, %1008
  %1010 = trunc i128 %1009 to i64
  store i64 %1010, i64* %RCX.i1949, align 8
  %1011 = sext i64 %1010 to i128
  %1012 = icmp ne i128 %1011, %1009
  %1013 = zext i1 %1012 to i8
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1013, i8* %1014, align 1
  %1015 = trunc i128 %1009 to i32
  %1016 = and i32 %1015, 255
  %1017 = call i32 @llvm.ctpop.i32(i32 %1016)
  %1018 = trunc i32 %1017 to i8
  %1019 = and i8 %1018, 1
  %1020 = xor i8 %1019, 1
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1020, i8* %1021, align 1
  %1022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1022, align 1
  %1023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1023, align 1
  %1024 = lshr i64 %1010, 63
  %1025 = trunc i64 %1024 to i8
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1025, i8* %1026, align 1
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1013, i8* %1027, align 1
  store %struct.Memory* %loadMem_40b2a1, %struct.Memory** %MEMORY
  %loadMem_40b2a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1029 = getelementptr inbounds %struct.GPR, %struct.GPR* %1028, i32 0, i32 33
  %1030 = getelementptr inbounds %struct.Reg, %struct.Reg* %1029, i32 0, i32 0
  %PC.i1945 = bitcast %union.anon* %1030 to i64*
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1032 = getelementptr inbounds %struct.GPR, %struct.GPR* %1031, i32 0, i32 1
  %1033 = getelementptr inbounds %struct.Reg, %struct.Reg* %1032, i32 0, i32 0
  %RAX.i1946 = bitcast %union.anon* %1033 to i64*
  %1034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1035 = getelementptr inbounds %struct.GPR, %struct.GPR* %1034, i32 0, i32 7
  %1036 = getelementptr inbounds %struct.Reg, %struct.Reg* %1035, i32 0, i32 0
  %RDX.i1947 = bitcast %union.anon* %1036 to i64*
  %1037 = load i64, i64* %RAX.i1946
  %1038 = load i64, i64* %PC.i1945
  %1039 = add i64 %1038, 3
  store i64 %1039, i64* %PC.i1945
  store i64 %1037, i64* %RDX.i1947, align 8
  store %struct.Memory* %loadMem_40b2a8, %struct.Memory** %MEMORY
  %loadMem_40b2ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %1040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1041 = getelementptr inbounds %struct.GPR, %struct.GPR* %1040, i32 0, i32 33
  %1042 = getelementptr inbounds %struct.Reg, %struct.Reg* %1041, i32 0, i32 0
  %PC.i1942 = bitcast %union.anon* %1042 to i64*
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1044 = getelementptr inbounds %struct.GPR, %struct.GPR* %1043, i32 0, i32 5
  %1045 = getelementptr inbounds %struct.Reg, %struct.Reg* %1044, i32 0, i32 0
  %RCX.i1943 = bitcast %union.anon* %1045 to i64*
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1047 = getelementptr inbounds %struct.GPR, %struct.GPR* %1046, i32 0, i32 7
  %1048 = getelementptr inbounds %struct.Reg, %struct.Reg* %1047, i32 0, i32 0
  %RDX.i1944 = bitcast %union.anon* %1048 to i64*
  %1049 = load i64, i64* %RDX.i1944
  %1050 = load i64, i64* %RCX.i1943
  %1051 = load i64, i64* %PC.i1942
  %1052 = add i64 %1051, 3
  store i64 %1052, i64* %PC.i1942
  %1053 = add i64 %1050, %1049
  store i64 %1053, i64* %RDX.i1944, align 8
  %1054 = icmp ult i64 %1053, %1049
  %1055 = icmp ult i64 %1053, %1050
  %1056 = or i1 %1054, %1055
  %1057 = zext i1 %1056 to i8
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1057, i8* %1058, align 1
  %1059 = trunc i64 %1053 to i32
  %1060 = and i32 %1059, 255
  %1061 = call i32 @llvm.ctpop.i32(i32 %1060)
  %1062 = trunc i32 %1061 to i8
  %1063 = and i8 %1062, 1
  %1064 = xor i8 %1063, 1
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1064, i8* %1065, align 1
  %1066 = xor i64 %1050, %1049
  %1067 = xor i64 %1066, %1053
  %1068 = lshr i64 %1067, 4
  %1069 = trunc i64 %1068 to i8
  %1070 = and i8 %1069, 1
  %1071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1070, i8* %1071, align 1
  %1072 = icmp eq i64 %1053, 0
  %1073 = zext i1 %1072 to i8
  %1074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1073, i8* %1074, align 1
  %1075 = lshr i64 %1053, 63
  %1076 = trunc i64 %1075 to i8
  %1077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1076, i8* %1077, align 1
  %1078 = lshr i64 %1049, 63
  %1079 = lshr i64 %1050, 63
  %1080 = xor i64 %1075, %1078
  %1081 = xor i64 %1075, %1079
  %1082 = add i64 %1080, %1081
  %1083 = icmp eq i64 %1082, 2
  %1084 = zext i1 %1083 to i8
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1084, i8* %1085, align 1
  store %struct.Memory* %loadMem_40b2ab, %struct.Memory** %MEMORY
  %loadMem_40b2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 33
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %PC.i1939 = bitcast %union.anon* %1088 to i64*
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 7
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %RDX.i1940 = bitcast %union.anon* %1091 to i64*
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 9
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %RSI.i1941 = bitcast %union.anon* %1094 to i64*
  %1095 = load i64, i64* %RDX.i1940
  %1096 = add i64 %1095, 8
  %1097 = load i64, i64* %PC.i1939
  %1098 = add i64 %1097, 3
  store i64 %1098, i64* %PC.i1939
  %1099 = inttoptr i64 %1096 to i32*
  %1100 = load i32, i32* %1099
  %1101 = zext i32 %1100 to i64
  store i64 %1101, i64* %RSI.i1941, align 8
  store %struct.Memory* %loadMem_40b2ae, %struct.Memory** %MEMORY
  %loadMem_40b2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1103 = getelementptr inbounds %struct.GPR, %struct.GPR* %1102, i32 0, i32 33
  %1104 = getelementptr inbounds %struct.Reg, %struct.Reg* %1103, i32 0, i32 0
  %PC.i1937 = bitcast %union.anon* %1104 to i64*
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1106 = getelementptr inbounds %struct.GPR, %struct.GPR* %1105, i32 0, i32 5
  %1107 = getelementptr inbounds %struct.Reg, %struct.Reg* %1106, i32 0, i32 0
  %RCX.i1938 = bitcast %union.anon* %1107 to i64*
  %1108 = load i64, i64* %PC.i1937
  %1109 = add i64 %1108, 8
  store i64 %1109, i64* %PC.i1937
  %1110 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %1110, i64* %RCX.i1938, align 8
  store %struct.Memory* %loadMem_40b2b1, %struct.Memory** %MEMORY
  %loadMem_40b2b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1112 = getelementptr inbounds %struct.GPR, %struct.GPR* %1111, i32 0, i32 33
  %1113 = getelementptr inbounds %struct.Reg, %struct.Reg* %1112, i32 0, i32 0
  %PC.i1934 = bitcast %union.anon* %1113 to i64*
  %1114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1115 = getelementptr inbounds %struct.GPR, %struct.GPR* %1114, i32 0, i32 5
  %1116 = getelementptr inbounds %struct.Reg, %struct.Reg* %1115, i32 0, i32 0
  %RCX.i1935 = bitcast %union.anon* %1116 to i64*
  %1117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1118 = getelementptr inbounds %struct.GPR, %struct.GPR* %1117, i32 0, i32 7
  %1119 = getelementptr inbounds %struct.Reg, %struct.Reg* %1118, i32 0, i32 0
  %RDX.i1936 = bitcast %union.anon* %1119 to i64*
  %1120 = load i64, i64* %RCX.i1935
  %1121 = load i64, i64* %PC.i1934
  %1122 = add i64 %1121, 3
  store i64 %1122, i64* %PC.i1934
  store i64 %1120, i64* %RDX.i1936, align 8
  store %struct.Memory* %loadMem_40b2b9, %struct.Memory** %MEMORY
  %loadMem_40b2bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1124 = getelementptr inbounds %struct.GPR, %struct.GPR* %1123, i32 0, i32 33
  %1125 = getelementptr inbounds %struct.Reg, %struct.Reg* %1124, i32 0, i32 0
  %PC.i1932 = bitcast %union.anon* %1125 to i64*
  %1126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1127 = getelementptr inbounds %struct.GPR, %struct.GPR* %1126, i32 0, i32 7
  %1128 = getelementptr inbounds %struct.Reg, %struct.Reg* %1127, i32 0, i32 0
  %RDX.i1933 = bitcast %union.anon* %1128 to i64*
  %1129 = load i64, i64* %RDX.i1933
  %1130 = load i64, i64* %PC.i1932
  %1131 = add i64 %1130, 4
  store i64 %1131, i64* %PC.i1932
  %1132 = add i64 16, %1129
  store i64 %1132, i64* %RDX.i1933, align 8
  %1133 = icmp ult i64 %1132, %1129
  %1134 = icmp ult i64 %1132, 16
  %1135 = or i1 %1133, %1134
  %1136 = zext i1 %1135 to i8
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1136, i8* %1137, align 1
  %1138 = trunc i64 %1132 to i32
  %1139 = and i32 %1138, 255
  %1140 = call i32 @llvm.ctpop.i32(i32 %1139)
  %1141 = trunc i32 %1140 to i8
  %1142 = and i8 %1141, 1
  %1143 = xor i8 %1142, 1
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1143, i8* %1144, align 1
  %1145 = xor i64 16, %1129
  %1146 = xor i64 %1145, %1132
  %1147 = lshr i64 %1146, 4
  %1148 = trunc i64 %1147 to i8
  %1149 = and i8 %1148, 1
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1149, i8* %1150, align 1
  %1151 = icmp eq i64 %1132, 0
  %1152 = zext i1 %1151 to i8
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1152, i8* %1153, align 1
  %1154 = lshr i64 %1132, 63
  %1155 = trunc i64 %1154 to i8
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1155, i8* %1156, align 1
  %1157 = lshr i64 %1129, 63
  %1158 = xor i64 %1154, %1157
  %1159 = add i64 %1158, %1154
  %1160 = icmp eq i64 %1159, 2
  %1161 = zext i1 %1160 to i8
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1161, i8* %1162, align 1
  store %struct.Memory* %loadMem_40b2bc, %struct.Memory** %MEMORY
  %loadMem_40b2c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1164 = getelementptr inbounds %struct.GPR, %struct.GPR* %1163, i32 0, i32 33
  %1165 = getelementptr inbounds %struct.Reg, %struct.Reg* %1164, i32 0, i32 0
  %PC.i1930 = bitcast %union.anon* %1165 to i64*
  %1166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1167 = getelementptr inbounds %struct.GPR, %struct.GPR* %1166, i32 0, i32 7
  %1168 = getelementptr inbounds %struct.Reg, %struct.Reg* %1167, i32 0, i32 0
  %RDX.i1931 = bitcast %union.anon* %1168 to i64*
  %1169 = load i64, i64* %RDX.i1931
  %1170 = load i64, i64* %PC.i1930
  %1171 = add i64 %1170, 8
  store i64 %1171, i64* %PC.i1930
  store i64 %1169, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40b2c0, %struct.Memory** %MEMORY
  %loadMem_40b2c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1173 = getelementptr inbounds %struct.GPR, %struct.GPR* %1172, i32 0, i32 33
  %1174 = getelementptr inbounds %struct.Reg, %struct.Reg* %1173, i32 0, i32 0
  %PC.i1927 = bitcast %union.anon* %1174 to i64*
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1176 = getelementptr inbounds %struct.GPR, %struct.GPR* %1175, i32 0, i32 9
  %1177 = getelementptr inbounds %struct.Reg, %struct.Reg* %1176, i32 0, i32 0
  %ESI.i1928 = bitcast %union.anon* %1177 to i32*
  %1178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1179 = getelementptr inbounds %struct.GPR, %struct.GPR* %1178, i32 0, i32 5
  %1180 = getelementptr inbounds %struct.Reg, %struct.Reg* %1179, i32 0, i32 0
  %RCX.i1929 = bitcast %union.anon* %1180 to i64*
  %1181 = load i64, i64* %RCX.i1929
  %1182 = add i64 %1181, 8
  %1183 = load i32, i32* %ESI.i1928
  %1184 = zext i32 %1183 to i64
  %1185 = load i64, i64* %PC.i1927
  %1186 = add i64 %1185, 3
  store i64 %1186, i64* %PC.i1927
  %1187 = inttoptr i64 %1182 to i32*
  store i32 %1183, i32* %1187
  store %struct.Memory* %loadMem_40b2c8, %struct.Memory** %MEMORY
  %loadMem_40b2cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1189 = getelementptr inbounds %struct.GPR, %struct.GPR* %1188, i32 0, i32 33
  %1190 = getelementptr inbounds %struct.Reg, %struct.Reg* %1189, i32 0, i32 0
  %PC.i1924 = bitcast %union.anon* %1190 to i64*
  %1191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1192 = getelementptr inbounds %struct.GPR, %struct.GPR* %1191, i32 0, i32 9
  %1193 = getelementptr inbounds %struct.Reg, %struct.Reg* %1192, i32 0, i32 0
  %RSI.i1925 = bitcast %union.anon* %1193 to i64*
  %1194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1195 = getelementptr inbounds %struct.GPR, %struct.GPR* %1194, i32 0, i32 15
  %1196 = getelementptr inbounds %struct.Reg, %struct.Reg* %1195, i32 0, i32 0
  %RBP.i1926 = bitcast %union.anon* %1196 to i64*
  %1197 = load i64, i64* %RBP.i1926
  %1198 = sub i64 %1197, 4
  %1199 = load i64, i64* %PC.i1924
  %1200 = add i64 %1199, 3
  store i64 %1200, i64* %PC.i1924
  %1201 = inttoptr i64 %1198 to i32*
  %1202 = load i32, i32* %1201
  %1203 = zext i32 %1202 to i64
  store i64 %1203, i64* %RSI.i1925, align 8
  store %struct.Memory* %loadMem_40b2cb, %struct.Memory** %MEMORY
  %loadMem_40b2ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1205 = getelementptr inbounds %struct.GPR, %struct.GPR* %1204, i32 0, i32 33
  %1206 = getelementptr inbounds %struct.Reg, %struct.Reg* %1205, i32 0, i32 0
  %PC.i1921 = bitcast %union.anon* %1206 to i64*
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1208 = getelementptr inbounds %struct.GPR, %struct.GPR* %1207, i32 0, i32 5
  %1209 = getelementptr inbounds %struct.Reg, %struct.Reg* %1208, i32 0, i32 0
  %RCX.i1922 = bitcast %union.anon* %1209 to i64*
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1211 = getelementptr inbounds %struct.GPR, %struct.GPR* %1210, i32 0, i32 15
  %1212 = getelementptr inbounds %struct.Reg, %struct.Reg* %1211, i32 0, i32 0
  %RBP.i1923 = bitcast %union.anon* %1212 to i64*
  %1213 = load i64, i64* %RBP.i1923
  %1214 = sub i64 %1213, 8
  %1215 = load i64, i64* %PC.i1921
  %1216 = add i64 %1215, 4
  store i64 %1216, i64* %PC.i1921
  %1217 = inttoptr i64 %1214 to i32*
  %1218 = load i32, i32* %1217
  %1219 = sext i32 %1218 to i64
  store i64 %1219, i64* %RCX.i1922, align 8
  store %struct.Memory* %loadMem_40b2ce, %struct.Memory** %MEMORY
  %loadMem_40b2d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1221 = getelementptr inbounds %struct.GPR, %struct.GPR* %1220, i32 0, i32 33
  %1222 = getelementptr inbounds %struct.Reg, %struct.Reg* %1221, i32 0, i32 0
  %PC.i1919 = bitcast %union.anon* %1222 to i64*
  %1223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1224 = getelementptr inbounds %struct.GPR, %struct.GPR* %1223, i32 0, i32 5
  %1225 = getelementptr inbounds %struct.Reg, %struct.Reg* %1224, i32 0, i32 0
  %RCX.i1920 = bitcast %union.anon* %1225 to i64*
  %1226 = load i64, i64* %RCX.i1920
  %1227 = load i64, i64* %PC.i1919
  %1228 = add i64 %1227, 7
  store i64 %1228, i64* %PC.i1919
  %1229 = sext i64 %1226 to i128
  %1230 = and i128 %1229, -18446744073709551616
  %1231 = zext i64 %1226 to i128
  %1232 = or i128 %1230, %1231
  %1233 = mul i128 744, %1232
  %1234 = trunc i128 %1233 to i64
  store i64 %1234, i64* %RCX.i1920, align 8
  %1235 = sext i64 %1234 to i128
  %1236 = icmp ne i128 %1235, %1233
  %1237 = zext i1 %1236 to i8
  %1238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1237, i8* %1238, align 1
  %1239 = trunc i128 %1233 to i32
  %1240 = and i32 %1239, 255
  %1241 = call i32 @llvm.ctpop.i32(i32 %1240)
  %1242 = trunc i32 %1241 to i8
  %1243 = and i8 %1242, 1
  %1244 = xor i8 %1243, 1
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1244, i8* %1245, align 1
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1246, align 1
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1247, align 1
  %1248 = lshr i64 %1234, 63
  %1249 = trunc i64 %1248 to i8
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1249, i8* %1250, align 1
  %1251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1237, i8* %1251, align 1
  store %struct.Memory* %loadMem_40b2d2, %struct.Memory** %MEMORY
  %loadMem_40b2d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1253 = getelementptr inbounds %struct.GPR, %struct.GPR* %1252, i32 0, i32 33
  %1254 = getelementptr inbounds %struct.Reg, %struct.Reg* %1253, i32 0, i32 0
  %PC.i1916 = bitcast %union.anon* %1254 to i64*
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 1
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %RAX.i1917 = bitcast %union.anon* %1257 to i64*
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1259 = getelementptr inbounds %struct.GPR, %struct.GPR* %1258, i32 0, i32 5
  %1260 = getelementptr inbounds %struct.Reg, %struct.Reg* %1259, i32 0, i32 0
  %RCX.i1918 = bitcast %union.anon* %1260 to i64*
  %1261 = load i64, i64* %RAX.i1917
  %1262 = load i64, i64* %RCX.i1918
  %1263 = load i64, i64* %PC.i1916
  %1264 = add i64 %1263, 3
  store i64 %1264, i64* %PC.i1916
  %1265 = add i64 %1262, %1261
  store i64 %1265, i64* %RAX.i1917, align 8
  %1266 = icmp ult i64 %1265, %1261
  %1267 = icmp ult i64 %1265, %1262
  %1268 = or i1 %1266, %1267
  %1269 = zext i1 %1268 to i8
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1269, i8* %1270, align 1
  %1271 = trunc i64 %1265 to i32
  %1272 = and i32 %1271, 255
  %1273 = call i32 @llvm.ctpop.i32(i32 %1272)
  %1274 = trunc i32 %1273 to i8
  %1275 = and i8 %1274, 1
  %1276 = xor i8 %1275, 1
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1276, i8* %1277, align 1
  %1278 = xor i64 %1262, %1261
  %1279 = xor i64 %1278, %1265
  %1280 = lshr i64 %1279, 4
  %1281 = trunc i64 %1280 to i8
  %1282 = and i8 %1281, 1
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1282, i8* %1283, align 1
  %1284 = icmp eq i64 %1265, 0
  %1285 = zext i1 %1284 to i8
  %1286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1285, i8* %1286, align 1
  %1287 = lshr i64 %1265, 63
  %1288 = trunc i64 %1287 to i8
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1288, i8* %1289, align 1
  %1290 = lshr i64 %1261, 63
  %1291 = lshr i64 %1262, 63
  %1292 = xor i64 %1287, %1290
  %1293 = xor i64 %1287, %1291
  %1294 = add i64 %1292, %1293
  %1295 = icmp eq i64 %1294, 2
  %1296 = zext i1 %1295 to i8
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1296, i8* %1297, align 1
  store %struct.Memory* %loadMem_40b2d9, %struct.Memory** %MEMORY
  %loadMem_40b2dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1299 = getelementptr inbounds %struct.GPR, %struct.GPR* %1298, i32 0, i32 33
  %1300 = getelementptr inbounds %struct.Reg, %struct.Reg* %1299, i32 0, i32 0
  %PC.i1914 = bitcast %union.anon* %1300 to i64*
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1302 = getelementptr inbounds %struct.GPR, %struct.GPR* %1301, i32 0, i32 9
  %1303 = getelementptr inbounds %struct.Reg, %struct.Reg* %1302, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %1303 to i32*
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1305 = getelementptr inbounds %struct.GPR, %struct.GPR* %1304, i32 0, i32 1
  %1306 = getelementptr inbounds %struct.Reg, %struct.Reg* %1305, i32 0, i32 0
  %RAX.i1915 = bitcast %union.anon* %1306 to i64*
  %1307 = load i64, i64* %RAX.i1915
  %1308 = add i64 %1307, 8
  %1309 = load i32, i32* %ESI.i
  %1310 = zext i32 %1309 to i64
  %1311 = load i64, i64* %PC.i1914
  %1312 = add i64 %1311, 3
  store i64 %1312, i64* %PC.i1914
  %1313 = inttoptr i64 %1308 to i32*
  store i32 %1309, i32* %1313
  store %struct.Memory* %loadMem_40b2dc, %struct.Memory** %MEMORY
  br label %block_.L_40b2df

block_.L_40b2df:                                  ; preds = %block_40b273, %entry
  %loadMem_40b2df = load %struct.Memory*, %struct.Memory** %MEMORY
  %1314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1315 = getelementptr inbounds %struct.GPR, %struct.GPR* %1314, i32 0, i32 33
  %1316 = getelementptr inbounds %struct.Reg, %struct.Reg* %1315, i32 0, i32 0
  %PC.i1912 = bitcast %union.anon* %1316 to i64*
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1318 = getelementptr inbounds %struct.GPR, %struct.GPR* %1317, i32 0, i32 1
  %1319 = getelementptr inbounds %struct.Reg, %struct.Reg* %1318, i32 0, i32 0
  %RAX.i1913 = bitcast %union.anon* %1319 to i64*
  %1320 = load i64, i64* %PC.i1912
  %1321 = add i64 %1320, 10
  store i64 %1321, i64* %PC.i1912
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1913, align 8
  store %struct.Memory* %loadMem_40b2df, %struct.Memory** %MEMORY
  %loadMem_40b2e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1323 = getelementptr inbounds %struct.GPR, %struct.GPR* %1322, i32 0, i32 33
  %1324 = getelementptr inbounds %struct.Reg, %struct.Reg* %1323, i32 0, i32 0
  %PC.i1909 = bitcast %union.anon* %1324 to i64*
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1326 = getelementptr inbounds %struct.GPR, %struct.GPR* %1325, i32 0, i32 5
  %1327 = getelementptr inbounds %struct.Reg, %struct.Reg* %1326, i32 0, i32 0
  %RCX.i1910 = bitcast %union.anon* %1327 to i64*
  %1328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1329 = getelementptr inbounds %struct.GPR, %struct.GPR* %1328, i32 0, i32 15
  %1330 = getelementptr inbounds %struct.Reg, %struct.Reg* %1329, i32 0, i32 0
  %RBP.i1911 = bitcast %union.anon* %1330 to i64*
  %1331 = load i64, i64* %RBP.i1911
  %1332 = sub i64 %1331, 8
  %1333 = load i64, i64* %PC.i1909
  %1334 = add i64 %1333, 3
  store i64 %1334, i64* %PC.i1909
  %1335 = inttoptr i64 %1332 to i32*
  %1336 = load i32, i32* %1335
  %1337 = zext i32 %1336 to i64
  store i64 %1337, i64* %RCX.i1910, align 8
  store %struct.Memory* %loadMem_40b2e9, %struct.Memory** %MEMORY
  %loadMem_40b2ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1339 = getelementptr inbounds %struct.GPR, %struct.GPR* %1338, i32 0, i32 33
  %1340 = getelementptr inbounds %struct.Reg, %struct.Reg* %1339, i32 0, i32 0
  %PC.i1906 = bitcast %union.anon* %1340 to i64*
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1342 = getelementptr inbounds %struct.GPR, %struct.GPR* %1341, i32 0, i32 7
  %1343 = getelementptr inbounds %struct.Reg, %struct.Reg* %1342, i32 0, i32 0
  %RDX.i1907 = bitcast %union.anon* %1343 to i64*
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1345 = getelementptr inbounds %struct.GPR, %struct.GPR* %1344, i32 0, i32 15
  %1346 = getelementptr inbounds %struct.Reg, %struct.Reg* %1345, i32 0, i32 0
  %RBP.i1908 = bitcast %union.anon* %1346 to i64*
  %1347 = load i64, i64* %RBP.i1908
  %1348 = sub i64 %1347, 4
  %1349 = load i64, i64* %PC.i1906
  %1350 = add i64 %1349, 4
  store i64 %1350, i64* %PC.i1906
  %1351 = inttoptr i64 %1348 to i32*
  %1352 = load i32, i32* %1351
  %1353 = sext i32 %1352 to i64
  store i64 %1353, i64* %RDX.i1907, align 8
  store %struct.Memory* %loadMem_40b2ec, %struct.Memory** %MEMORY
  %loadMem_40b2f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1355 = getelementptr inbounds %struct.GPR, %struct.GPR* %1354, i32 0, i32 33
  %1356 = getelementptr inbounds %struct.Reg, %struct.Reg* %1355, i32 0, i32 0
  %PC.i1903 = bitcast %union.anon* %1356 to i64*
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1358 = getelementptr inbounds %struct.GPR, %struct.GPR* %1357, i32 0, i32 5
  %1359 = getelementptr inbounds %struct.Reg, %struct.Reg* %1358, i32 0, i32 0
  %ECX.i1904 = bitcast %union.anon* %1359 to i32*
  %1360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1361 = getelementptr inbounds %struct.GPR, %struct.GPR* %1360, i32 0, i32 7
  %1362 = getelementptr inbounds %struct.Reg, %struct.Reg* %1361, i32 0, i32 0
  %RDX.i1905 = bitcast %union.anon* %1362 to i64*
  %1363 = load i64, i64* %RDX.i1905
  %1364 = mul i64 %1363, 4
  %1365 = add i64 %1364, 11187184
  %1366 = load i32, i32* %ECX.i1904
  %1367 = zext i32 %1366 to i64
  %1368 = load i64, i64* %PC.i1903
  %1369 = add i64 %1368, 7
  store i64 %1369, i64* %PC.i1903
  %1370 = inttoptr i64 %1365 to i32*
  store i32 %1366, i32* %1370
  store %struct.Memory* %loadMem_40b2f0, %struct.Memory** %MEMORY
  %loadMem_40b2f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1372 = getelementptr inbounds %struct.GPR, %struct.GPR* %1371, i32 0, i32 33
  %1373 = getelementptr inbounds %struct.Reg, %struct.Reg* %1372, i32 0, i32 0
  %PC.i1900 = bitcast %union.anon* %1373 to i64*
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1375 = getelementptr inbounds %struct.GPR, %struct.GPR* %1374, i32 0, i32 7
  %1376 = getelementptr inbounds %struct.Reg, %struct.Reg* %1375, i32 0, i32 0
  %RDX.i1901 = bitcast %union.anon* %1376 to i64*
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1378 = getelementptr inbounds %struct.GPR, %struct.GPR* %1377, i32 0, i32 15
  %1379 = getelementptr inbounds %struct.Reg, %struct.Reg* %1378, i32 0, i32 0
  %RBP.i1902 = bitcast %union.anon* %1379 to i64*
  %1380 = load i64, i64* %RBP.i1902
  %1381 = sub i64 %1380, 8
  %1382 = load i64, i64* %PC.i1900
  %1383 = add i64 %1382, 4
  store i64 %1383, i64* %PC.i1900
  %1384 = inttoptr i64 %1381 to i32*
  %1385 = load i32, i32* %1384
  %1386 = sext i32 %1385 to i64
  store i64 %1386, i64* %RDX.i1901, align 8
  store %struct.Memory* %loadMem_40b2f7, %struct.Memory** %MEMORY
  %loadMem_40b2fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1388 = getelementptr inbounds %struct.GPR, %struct.GPR* %1387, i32 0, i32 33
  %1389 = getelementptr inbounds %struct.Reg, %struct.Reg* %1388, i32 0, i32 0
  %PC.i1898 = bitcast %union.anon* %1389 to i64*
  %1390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1391 = getelementptr inbounds %struct.GPR, %struct.GPR* %1390, i32 0, i32 7
  %1392 = getelementptr inbounds %struct.Reg, %struct.Reg* %1391, i32 0, i32 0
  %RDX.i1899 = bitcast %union.anon* %1392 to i64*
  %1393 = load i64, i64* %RDX.i1899
  %1394 = load i64, i64* %PC.i1898
  %1395 = add i64 %1394, 7
  store i64 %1395, i64* %PC.i1898
  %1396 = sext i64 %1393 to i128
  %1397 = and i128 %1396, -18446744073709551616
  %1398 = zext i64 %1393 to i128
  %1399 = or i128 %1397, %1398
  %1400 = mul i128 744, %1399
  %1401 = trunc i128 %1400 to i64
  store i64 %1401, i64* %RDX.i1899, align 8
  %1402 = sext i64 %1401 to i128
  %1403 = icmp ne i128 %1402, %1400
  %1404 = zext i1 %1403 to i8
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1404, i8* %1405, align 1
  %1406 = trunc i128 %1400 to i32
  %1407 = and i32 %1406, 255
  %1408 = call i32 @llvm.ctpop.i32(i32 %1407)
  %1409 = trunc i32 %1408 to i8
  %1410 = and i8 %1409, 1
  %1411 = xor i8 %1410, 1
  %1412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1411, i8* %1412, align 1
  %1413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1413, align 1
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1414, align 1
  %1415 = lshr i64 %1401, 63
  %1416 = trunc i64 %1415 to i8
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1416, i8* %1417, align 1
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1404, i8* %1418, align 1
  store %struct.Memory* %loadMem_40b2fb, %struct.Memory** %MEMORY
  %loadMem_40b302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1420 = getelementptr inbounds %struct.GPR, %struct.GPR* %1419, i32 0, i32 33
  %1421 = getelementptr inbounds %struct.Reg, %struct.Reg* %1420, i32 0, i32 0
  %PC.i1895 = bitcast %union.anon* %1421 to i64*
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1423 = getelementptr inbounds %struct.GPR, %struct.GPR* %1422, i32 0, i32 1
  %1424 = getelementptr inbounds %struct.Reg, %struct.Reg* %1423, i32 0, i32 0
  %RAX.i1896 = bitcast %union.anon* %1424 to i64*
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1426 = getelementptr inbounds %struct.GPR, %struct.GPR* %1425, i32 0, i32 9
  %1427 = getelementptr inbounds %struct.Reg, %struct.Reg* %1426, i32 0, i32 0
  %RSI.i1897 = bitcast %union.anon* %1427 to i64*
  %1428 = load i64, i64* %RAX.i1896
  %1429 = load i64, i64* %PC.i1895
  %1430 = add i64 %1429, 3
  store i64 %1430, i64* %PC.i1895
  store i64 %1428, i64* %RSI.i1897, align 8
  store %struct.Memory* %loadMem_40b302, %struct.Memory** %MEMORY
  %loadMem_40b305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1432 = getelementptr inbounds %struct.GPR, %struct.GPR* %1431, i32 0, i32 33
  %1433 = getelementptr inbounds %struct.Reg, %struct.Reg* %1432, i32 0, i32 0
  %PC.i1892 = bitcast %union.anon* %1433 to i64*
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1435 = getelementptr inbounds %struct.GPR, %struct.GPR* %1434, i32 0, i32 7
  %1436 = getelementptr inbounds %struct.Reg, %struct.Reg* %1435, i32 0, i32 0
  %RDX.i1893 = bitcast %union.anon* %1436 to i64*
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1438 = getelementptr inbounds %struct.GPR, %struct.GPR* %1437, i32 0, i32 9
  %1439 = getelementptr inbounds %struct.Reg, %struct.Reg* %1438, i32 0, i32 0
  %RSI.i1894 = bitcast %union.anon* %1439 to i64*
  %1440 = load i64, i64* %RSI.i1894
  %1441 = load i64, i64* %RDX.i1893
  %1442 = load i64, i64* %PC.i1892
  %1443 = add i64 %1442, 3
  store i64 %1443, i64* %PC.i1892
  %1444 = add i64 %1441, %1440
  store i64 %1444, i64* %RSI.i1894, align 8
  %1445 = icmp ult i64 %1444, %1440
  %1446 = icmp ult i64 %1444, %1441
  %1447 = or i1 %1445, %1446
  %1448 = zext i1 %1447 to i8
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1448, i8* %1449, align 1
  %1450 = trunc i64 %1444 to i32
  %1451 = and i32 %1450, 255
  %1452 = call i32 @llvm.ctpop.i32(i32 %1451)
  %1453 = trunc i32 %1452 to i8
  %1454 = and i8 %1453, 1
  %1455 = xor i8 %1454, 1
  %1456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1455, i8* %1456, align 1
  %1457 = xor i64 %1441, %1440
  %1458 = xor i64 %1457, %1444
  %1459 = lshr i64 %1458, 4
  %1460 = trunc i64 %1459 to i8
  %1461 = and i8 %1460, 1
  %1462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1461, i8* %1462, align 1
  %1463 = icmp eq i64 %1444, 0
  %1464 = zext i1 %1463 to i8
  %1465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1464, i8* %1465, align 1
  %1466 = lshr i64 %1444, 63
  %1467 = trunc i64 %1466 to i8
  %1468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1467, i8* %1468, align 1
  %1469 = lshr i64 %1440, 63
  %1470 = lshr i64 %1441, 63
  %1471 = xor i64 %1466, %1469
  %1472 = xor i64 %1466, %1470
  %1473 = add i64 %1471, %1472
  %1474 = icmp eq i64 %1473, 2
  %1475 = zext i1 %1474 to i8
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1475, i8* %1476, align 1
  store %struct.Memory* %loadMem_40b305, %struct.Memory** %MEMORY
  %loadMem_40b308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1478 = getelementptr inbounds %struct.GPR, %struct.GPR* %1477, i32 0, i32 33
  %1479 = getelementptr inbounds %struct.Reg, %struct.Reg* %1478, i32 0, i32 0
  %PC.i1890 = bitcast %union.anon* %1479 to i64*
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1481 = getelementptr inbounds %struct.GPR, %struct.GPR* %1480, i32 0, i32 9
  %1482 = getelementptr inbounds %struct.Reg, %struct.Reg* %1481, i32 0, i32 0
  %RSI.i1891 = bitcast %union.anon* %1482 to i64*
  %1483 = load i64, i64* %RSI.i1891
  %1484 = load i64, i64* %PC.i1890
  %1485 = add i64 %1484, 4
  store i64 %1485, i64* %PC.i1890
  %1486 = add i64 4, %1483
  store i64 %1486, i64* %RSI.i1891, align 8
  %1487 = icmp ult i64 %1486, %1483
  %1488 = icmp ult i64 %1486, 4
  %1489 = or i1 %1487, %1488
  %1490 = zext i1 %1489 to i8
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1490, i8* %1491, align 1
  %1492 = trunc i64 %1486 to i32
  %1493 = and i32 %1492, 255
  %1494 = call i32 @llvm.ctpop.i32(i32 %1493)
  %1495 = trunc i32 %1494 to i8
  %1496 = and i8 %1495, 1
  %1497 = xor i8 %1496, 1
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1497, i8* %1498, align 1
  %1499 = xor i64 4, %1483
  %1500 = xor i64 %1499, %1486
  %1501 = lshr i64 %1500, 4
  %1502 = trunc i64 %1501 to i8
  %1503 = and i8 %1502, 1
  %1504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1503, i8* %1504, align 1
  %1505 = icmp eq i64 %1486, 0
  %1506 = zext i1 %1505 to i8
  %1507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1506, i8* %1507, align 1
  %1508 = lshr i64 %1486, 63
  %1509 = trunc i64 %1508 to i8
  %1510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1509, i8* %1510, align 1
  %1511 = lshr i64 %1483, 63
  %1512 = xor i64 %1508, %1511
  %1513 = add i64 %1512, %1508
  %1514 = icmp eq i64 %1513, 2
  %1515 = zext i1 %1514 to i8
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1515, i8* %1516, align 1
  store %struct.Memory* %loadMem_40b308, %struct.Memory** %MEMORY
  %loadMem_40b30c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1518 = getelementptr inbounds %struct.GPR, %struct.GPR* %1517, i32 0, i32 33
  %1519 = getelementptr inbounds %struct.Reg, %struct.Reg* %1518, i32 0, i32 0
  %PC.i1888 = bitcast %union.anon* %1519 to i64*
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1521 = getelementptr inbounds %struct.GPR, %struct.GPR* %1520, i32 0, i32 7
  %1522 = getelementptr inbounds %struct.Reg, %struct.Reg* %1521, i32 0, i32 0
  %RDX.i1889 = bitcast %union.anon* %1522 to i64*
  %1523 = load i64, i64* %PC.i1888
  %1524 = add i64 %1523, 8
  store i64 %1524, i64* %PC.i1888
  %1525 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %1525, i64* %RDX.i1889, align 8
  store %struct.Memory* %loadMem_40b30c, %struct.Memory** %MEMORY
  %loadMem_40b314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1527 = getelementptr inbounds %struct.GPR, %struct.GPR* %1526, i32 0, i32 33
  %1528 = getelementptr inbounds %struct.Reg, %struct.Reg* %1527, i32 0, i32 0
  %PC.i1885 = bitcast %union.anon* %1528 to i64*
  %1529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1530 = getelementptr inbounds %struct.GPR, %struct.GPR* %1529, i32 0, i32 7
  %1531 = getelementptr inbounds %struct.Reg, %struct.Reg* %1530, i32 0, i32 0
  %RDX.i1886 = bitcast %union.anon* %1531 to i64*
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1533 = getelementptr inbounds %struct.GPR, %struct.GPR* %1532, i32 0, i32 9
  %1534 = getelementptr inbounds %struct.Reg, %struct.Reg* %1533, i32 0, i32 0
  %RSI.i1887 = bitcast %union.anon* %1534 to i64*
  %1535 = load i64, i64* %RDX.i1886
  %1536 = load i64, i64* %RSI.i1887
  %1537 = load i64, i64* %PC.i1885
  %1538 = add i64 %1537, 3
  store i64 %1538, i64* %PC.i1885
  %1539 = inttoptr i64 %1535 to i64*
  store i64 %1536, i64* %1539
  store %struct.Memory* %loadMem_40b314, %struct.Memory** %MEMORY
  %loadMem_40b317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1541 = getelementptr inbounds %struct.GPR, %struct.GPR* %1540, i32 0, i32 33
  %1542 = getelementptr inbounds %struct.Reg, %struct.Reg* %1541, i32 0, i32 0
  %PC.i1882 = bitcast %union.anon* %1542 to i64*
  %1543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1544 = getelementptr inbounds %struct.GPR, %struct.GPR* %1543, i32 0, i32 7
  %1545 = getelementptr inbounds %struct.Reg, %struct.Reg* %1544, i32 0, i32 0
  %RDX.i1883 = bitcast %union.anon* %1545 to i64*
  %1546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1547 = getelementptr inbounds %struct.GPR, %struct.GPR* %1546, i32 0, i32 15
  %1548 = getelementptr inbounds %struct.Reg, %struct.Reg* %1547, i32 0, i32 0
  %RBP.i1884 = bitcast %union.anon* %1548 to i64*
  %1549 = load i64, i64* %RBP.i1884
  %1550 = sub i64 %1549, 8
  %1551 = load i64, i64* %PC.i1882
  %1552 = add i64 %1551, 4
  store i64 %1552, i64* %PC.i1882
  %1553 = inttoptr i64 %1550 to i32*
  %1554 = load i32, i32* %1553
  %1555 = sext i32 %1554 to i64
  store i64 %1555, i64* %RDX.i1883, align 8
  store %struct.Memory* %loadMem_40b317, %struct.Memory** %MEMORY
  %loadMem_40b31b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 33
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %PC.i1880 = bitcast %union.anon* %1558 to i64*
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1560 = getelementptr inbounds %struct.GPR, %struct.GPR* %1559, i32 0, i32 7
  %1561 = getelementptr inbounds %struct.Reg, %struct.Reg* %1560, i32 0, i32 0
  %RDX.i1881 = bitcast %union.anon* %1561 to i64*
  %1562 = load i64, i64* %RDX.i1881
  %1563 = load i64, i64* %PC.i1880
  %1564 = add i64 %1563, 7
  store i64 %1564, i64* %PC.i1880
  %1565 = sext i64 %1562 to i128
  %1566 = and i128 %1565, -18446744073709551616
  %1567 = zext i64 %1562 to i128
  %1568 = or i128 %1566, %1567
  %1569 = mul i128 744, %1568
  %1570 = trunc i128 %1569 to i64
  store i64 %1570, i64* %RDX.i1881, align 8
  %1571 = sext i64 %1570 to i128
  %1572 = icmp ne i128 %1571, %1569
  %1573 = zext i1 %1572 to i8
  %1574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1573, i8* %1574, align 1
  %1575 = trunc i128 %1569 to i32
  %1576 = and i32 %1575, 255
  %1577 = call i32 @llvm.ctpop.i32(i32 %1576)
  %1578 = trunc i32 %1577 to i8
  %1579 = and i8 %1578, 1
  %1580 = xor i8 %1579, 1
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1580, i8* %1581, align 1
  %1582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1582, align 1
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1583, align 1
  %1584 = lshr i64 %1570, 63
  %1585 = trunc i64 %1584 to i8
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1585, i8* %1586, align 1
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1573, i8* %1587, align 1
  store %struct.Memory* %loadMem_40b31b, %struct.Memory** %MEMORY
  %loadMem_40b322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1589 = getelementptr inbounds %struct.GPR, %struct.GPR* %1588, i32 0, i32 33
  %1590 = getelementptr inbounds %struct.Reg, %struct.Reg* %1589, i32 0, i32 0
  %PC.i1877 = bitcast %union.anon* %1590 to i64*
  %1591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1592 = getelementptr inbounds %struct.GPR, %struct.GPR* %1591, i32 0, i32 1
  %1593 = getelementptr inbounds %struct.Reg, %struct.Reg* %1592, i32 0, i32 0
  %RAX.i1878 = bitcast %union.anon* %1593 to i64*
  %1594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1595 = getelementptr inbounds %struct.GPR, %struct.GPR* %1594, i32 0, i32 9
  %1596 = getelementptr inbounds %struct.Reg, %struct.Reg* %1595, i32 0, i32 0
  %RSI.i1879 = bitcast %union.anon* %1596 to i64*
  %1597 = load i64, i64* %RAX.i1878
  %1598 = load i64, i64* %PC.i1877
  %1599 = add i64 %1598, 3
  store i64 %1599, i64* %PC.i1877
  store i64 %1597, i64* %RSI.i1879, align 8
  store %struct.Memory* %loadMem_40b322, %struct.Memory** %MEMORY
  %loadMem_40b325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1601 = getelementptr inbounds %struct.GPR, %struct.GPR* %1600, i32 0, i32 33
  %1602 = getelementptr inbounds %struct.Reg, %struct.Reg* %1601, i32 0, i32 0
  %PC.i1874 = bitcast %union.anon* %1602 to i64*
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1604 = getelementptr inbounds %struct.GPR, %struct.GPR* %1603, i32 0, i32 7
  %1605 = getelementptr inbounds %struct.Reg, %struct.Reg* %1604, i32 0, i32 0
  %RDX.i1875 = bitcast %union.anon* %1605 to i64*
  %1606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1607 = getelementptr inbounds %struct.GPR, %struct.GPR* %1606, i32 0, i32 9
  %1608 = getelementptr inbounds %struct.Reg, %struct.Reg* %1607, i32 0, i32 0
  %RSI.i1876 = bitcast %union.anon* %1608 to i64*
  %1609 = load i64, i64* %RSI.i1876
  %1610 = load i64, i64* %RDX.i1875
  %1611 = load i64, i64* %PC.i1874
  %1612 = add i64 %1611, 3
  store i64 %1612, i64* %PC.i1874
  %1613 = add i64 %1610, %1609
  store i64 %1613, i64* %RSI.i1876, align 8
  %1614 = icmp ult i64 %1613, %1609
  %1615 = icmp ult i64 %1613, %1610
  %1616 = or i1 %1614, %1615
  %1617 = zext i1 %1616 to i8
  %1618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1617, i8* %1618, align 1
  %1619 = trunc i64 %1613 to i32
  %1620 = and i32 %1619, 255
  %1621 = call i32 @llvm.ctpop.i32(i32 %1620)
  %1622 = trunc i32 %1621 to i8
  %1623 = and i8 %1622, 1
  %1624 = xor i8 %1623, 1
  %1625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1624, i8* %1625, align 1
  %1626 = xor i64 %1610, %1609
  %1627 = xor i64 %1626, %1613
  %1628 = lshr i64 %1627, 4
  %1629 = trunc i64 %1628 to i8
  %1630 = and i8 %1629, 1
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1630, i8* %1631, align 1
  %1632 = icmp eq i64 %1613, 0
  %1633 = zext i1 %1632 to i8
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1633, i8* %1634, align 1
  %1635 = lshr i64 %1613, 63
  %1636 = trunc i64 %1635 to i8
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1636, i8* %1637, align 1
  %1638 = lshr i64 %1609, 63
  %1639 = lshr i64 %1610, 63
  %1640 = xor i64 %1635, %1638
  %1641 = xor i64 %1635, %1639
  %1642 = add i64 %1640, %1641
  %1643 = icmp eq i64 %1642, 2
  %1644 = zext i1 %1643 to i8
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1644, i8* %1645, align 1
  store %struct.Memory* %loadMem_40b325, %struct.Memory** %MEMORY
  %loadMem_40b328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1647 = getelementptr inbounds %struct.GPR, %struct.GPR* %1646, i32 0, i32 33
  %1648 = getelementptr inbounds %struct.Reg, %struct.Reg* %1647, i32 0, i32 0
  %PC.i1871 = bitcast %union.anon* %1648 to i64*
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1650 = getelementptr inbounds %struct.GPR, %struct.GPR* %1649, i32 0, i32 5
  %1651 = getelementptr inbounds %struct.Reg, %struct.Reg* %1650, i32 0, i32 0
  %RCX.i1872 = bitcast %union.anon* %1651 to i64*
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1653 = getelementptr inbounds %struct.GPR, %struct.GPR* %1652, i32 0, i32 9
  %1654 = getelementptr inbounds %struct.Reg, %struct.Reg* %1653, i32 0, i32 0
  %RSI.i1873 = bitcast %union.anon* %1654 to i64*
  %1655 = load i64, i64* %RSI.i1873
  %1656 = add i64 %1655, 4
  %1657 = load i64, i64* %PC.i1871
  %1658 = add i64 %1657, 3
  store i64 %1658, i64* %PC.i1871
  %1659 = inttoptr i64 %1656 to i32*
  %1660 = load i32, i32* %1659
  %1661 = zext i32 %1660 to i64
  store i64 %1661, i64* %RCX.i1872, align 8
  store %struct.Memory* %loadMem_40b328, %struct.Memory** %MEMORY
  %loadMem_40b32b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1663 = getelementptr inbounds %struct.GPR, %struct.GPR* %1662, i32 0, i32 33
  %1664 = getelementptr inbounds %struct.Reg, %struct.Reg* %1663, i32 0, i32 0
  %PC.i1869 = bitcast %union.anon* %1664 to i64*
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1666 = getelementptr inbounds %struct.GPR, %struct.GPR* %1665, i32 0, i32 7
  %1667 = getelementptr inbounds %struct.Reg, %struct.Reg* %1666, i32 0, i32 0
  %RDX.i1870 = bitcast %union.anon* %1667 to i64*
  %1668 = load i64, i64* %PC.i1869
  %1669 = add i64 %1668, 8
  store i64 %1669, i64* %PC.i1869
  %1670 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %1670, i64* %RDX.i1870, align 8
  store %struct.Memory* %loadMem_40b32b, %struct.Memory** %MEMORY
  %loadMem_40b333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1672 = getelementptr inbounds %struct.GPR, %struct.GPR* %1671, i32 0, i32 33
  %1673 = getelementptr inbounds %struct.Reg, %struct.Reg* %1672, i32 0, i32 0
  %PC.i1866 = bitcast %union.anon* %1673 to i64*
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1675 = getelementptr inbounds %struct.GPR, %struct.GPR* %1674, i32 0, i32 7
  %1676 = getelementptr inbounds %struct.Reg, %struct.Reg* %1675, i32 0, i32 0
  %RDX.i1867 = bitcast %union.anon* %1676 to i64*
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1678 = getelementptr inbounds %struct.GPR, %struct.GPR* %1677, i32 0, i32 9
  %1679 = getelementptr inbounds %struct.Reg, %struct.Reg* %1678, i32 0, i32 0
  %RSI.i1868 = bitcast %union.anon* %1679 to i64*
  %1680 = load i64, i64* %RDX.i1867
  %1681 = load i64, i64* %PC.i1866
  %1682 = add i64 %1681, 3
  store i64 %1682, i64* %PC.i1866
  store i64 %1680, i64* %RSI.i1868, align 8
  store %struct.Memory* %loadMem_40b333, %struct.Memory** %MEMORY
  %loadMem_40b336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1684 = getelementptr inbounds %struct.GPR, %struct.GPR* %1683, i32 0, i32 33
  %1685 = getelementptr inbounds %struct.Reg, %struct.Reg* %1684, i32 0, i32 0
  %PC.i1864 = bitcast %union.anon* %1685 to i64*
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1687 = getelementptr inbounds %struct.GPR, %struct.GPR* %1686, i32 0, i32 9
  %1688 = getelementptr inbounds %struct.Reg, %struct.Reg* %1687, i32 0, i32 0
  %RSI.i1865 = bitcast %union.anon* %1688 to i64*
  %1689 = load i64, i64* %RSI.i1865
  %1690 = load i64, i64* %PC.i1864
  %1691 = add i64 %1690, 4
  store i64 %1691, i64* %PC.i1864
  %1692 = add i64 16, %1689
  store i64 %1692, i64* %RSI.i1865, align 8
  %1693 = icmp ult i64 %1692, %1689
  %1694 = icmp ult i64 %1692, 16
  %1695 = or i1 %1693, %1694
  %1696 = zext i1 %1695 to i8
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1696, i8* %1697, align 1
  %1698 = trunc i64 %1692 to i32
  %1699 = and i32 %1698, 255
  %1700 = call i32 @llvm.ctpop.i32(i32 %1699)
  %1701 = trunc i32 %1700 to i8
  %1702 = and i8 %1701, 1
  %1703 = xor i8 %1702, 1
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1703, i8* %1704, align 1
  %1705 = xor i64 16, %1689
  %1706 = xor i64 %1705, %1692
  %1707 = lshr i64 %1706, 4
  %1708 = trunc i64 %1707 to i8
  %1709 = and i8 %1708, 1
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1709, i8* %1710, align 1
  %1711 = icmp eq i64 %1692, 0
  %1712 = zext i1 %1711 to i8
  %1713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1712, i8* %1713, align 1
  %1714 = lshr i64 %1692, 63
  %1715 = trunc i64 %1714 to i8
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1715, i8* %1716, align 1
  %1717 = lshr i64 %1689, 63
  %1718 = xor i64 %1714, %1717
  %1719 = add i64 %1718, %1714
  %1720 = icmp eq i64 %1719, 2
  %1721 = zext i1 %1720 to i8
  %1722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1721, i8* %1722, align 1
  store %struct.Memory* %loadMem_40b336, %struct.Memory** %MEMORY
  %loadMem_40b33a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1724 = getelementptr inbounds %struct.GPR, %struct.GPR* %1723, i32 0, i32 33
  %1725 = getelementptr inbounds %struct.Reg, %struct.Reg* %1724, i32 0, i32 0
  %PC.i1862 = bitcast %union.anon* %1725 to i64*
  %1726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1727 = getelementptr inbounds %struct.GPR, %struct.GPR* %1726, i32 0, i32 9
  %1728 = getelementptr inbounds %struct.Reg, %struct.Reg* %1727, i32 0, i32 0
  %RSI.i1863 = bitcast %union.anon* %1728 to i64*
  %1729 = load i64, i64* %RSI.i1863
  %1730 = load i64, i64* %PC.i1862
  %1731 = add i64 %1730, 8
  store i64 %1731, i64* %PC.i1862
  store i64 %1729, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40b33a, %struct.Memory** %MEMORY
  %loadMem_40b342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1733 = getelementptr inbounds %struct.GPR, %struct.GPR* %1732, i32 0, i32 33
  %1734 = getelementptr inbounds %struct.Reg, %struct.Reg* %1733, i32 0, i32 0
  %PC.i1859 = bitcast %union.anon* %1734 to i64*
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1736 = getelementptr inbounds %struct.GPR, %struct.GPR* %1735, i32 0, i32 5
  %1737 = getelementptr inbounds %struct.Reg, %struct.Reg* %1736, i32 0, i32 0
  %ECX.i1860 = bitcast %union.anon* %1737 to i32*
  %1738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1739 = getelementptr inbounds %struct.GPR, %struct.GPR* %1738, i32 0, i32 7
  %1740 = getelementptr inbounds %struct.Reg, %struct.Reg* %1739, i32 0, i32 0
  %RDX.i1861 = bitcast %union.anon* %1740 to i64*
  %1741 = load i64, i64* %RDX.i1861
  %1742 = add i64 %1741, 8
  %1743 = load i32, i32* %ECX.i1860
  %1744 = zext i32 %1743 to i64
  %1745 = load i64, i64* %PC.i1859
  %1746 = add i64 %1745, 3
  store i64 %1746, i64* %PC.i1859
  %1747 = inttoptr i64 %1742 to i32*
  store i32 %1743, i32* %1747
  store %struct.Memory* %loadMem_40b342, %struct.Memory** %MEMORY
  %loadMem_40b345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1749 = getelementptr inbounds %struct.GPR, %struct.GPR* %1748, i32 0, i32 33
  %1750 = getelementptr inbounds %struct.Reg, %struct.Reg* %1749, i32 0, i32 0
  %PC.i1856 = bitcast %union.anon* %1750 to i64*
  %1751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1752 = getelementptr inbounds %struct.GPR, %struct.GPR* %1751, i32 0, i32 7
  %1753 = getelementptr inbounds %struct.Reg, %struct.Reg* %1752, i32 0, i32 0
  %RDX.i1857 = bitcast %union.anon* %1753 to i64*
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1755 = getelementptr inbounds %struct.GPR, %struct.GPR* %1754, i32 0, i32 15
  %1756 = getelementptr inbounds %struct.Reg, %struct.Reg* %1755, i32 0, i32 0
  %RBP.i1858 = bitcast %union.anon* %1756 to i64*
  %1757 = load i64, i64* %RBP.i1858
  %1758 = sub i64 %1757, 8
  %1759 = load i64, i64* %PC.i1856
  %1760 = add i64 %1759, 4
  store i64 %1760, i64* %PC.i1856
  %1761 = inttoptr i64 %1758 to i32*
  %1762 = load i32, i32* %1761
  %1763 = sext i32 %1762 to i64
  store i64 %1763, i64* %RDX.i1857, align 8
  store %struct.Memory* %loadMem_40b345, %struct.Memory** %MEMORY
  %loadMem_40b349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1765 = getelementptr inbounds %struct.GPR, %struct.GPR* %1764, i32 0, i32 33
  %1766 = getelementptr inbounds %struct.Reg, %struct.Reg* %1765, i32 0, i32 0
  %PC.i1854 = bitcast %union.anon* %1766 to i64*
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1768 = getelementptr inbounds %struct.GPR, %struct.GPR* %1767, i32 0, i32 7
  %1769 = getelementptr inbounds %struct.Reg, %struct.Reg* %1768, i32 0, i32 0
  %RDX.i1855 = bitcast %union.anon* %1769 to i64*
  %1770 = load i64, i64* %RDX.i1855
  %1771 = load i64, i64* %PC.i1854
  %1772 = add i64 %1771, 7
  store i64 %1772, i64* %PC.i1854
  %1773 = sext i64 %1770 to i128
  %1774 = and i128 %1773, -18446744073709551616
  %1775 = zext i64 %1770 to i128
  %1776 = or i128 %1774, %1775
  %1777 = mul i128 744, %1776
  %1778 = trunc i128 %1777 to i64
  store i64 %1778, i64* %RDX.i1855, align 8
  %1779 = sext i64 %1778 to i128
  %1780 = icmp ne i128 %1779, %1777
  %1781 = zext i1 %1780 to i8
  %1782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1781, i8* %1782, align 1
  %1783 = trunc i128 %1777 to i32
  %1784 = and i32 %1783, 255
  %1785 = call i32 @llvm.ctpop.i32(i32 %1784)
  %1786 = trunc i32 %1785 to i8
  %1787 = and i8 %1786, 1
  %1788 = xor i8 %1787, 1
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1788, i8* %1789, align 1
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1790, align 1
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1791, align 1
  %1792 = lshr i64 %1778, 63
  %1793 = trunc i64 %1792 to i8
  %1794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1793, i8* %1794, align 1
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1781, i8* %1795, align 1
  store %struct.Memory* %loadMem_40b349, %struct.Memory** %MEMORY
  %loadMem_40b350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1797 = getelementptr inbounds %struct.GPR, %struct.GPR* %1796, i32 0, i32 33
  %1798 = getelementptr inbounds %struct.Reg, %struct.Reg* %1797, i32 0, i32 0
  %PC.i1851 = bitcast %union.anon* %1798 to i64*
  %1799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1800 = getelementptr inbounds %struct.GPR, %struct.GPR* %1799, i32 0, i32 1
  %1801 = getelementptr inbounds %struct.Reg, %struct.Reg* %1800, i32 0, i32 0
  %RAX.i1852 = bitcast %union.anon* %1801 to i64*
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1803 = getelementptr inbounds %struct.GPR, %struct.GPR* %1802, i32 0, i32 9
  %1804 = getelementptr inbounds %struct.Reg, %struct.Reg* %1803, i32 0, i32 0
  %RSI.i1853 = bitcast %union.anon* %1804 to i64*
  %1805 = load i64, i64* %RAX.i1852
  %1806 = load i64, i64* %PC.i1851
  %1807 = add i64 %1806, 3
  store i64 %1807, i64* %PC.i1851
  store i64 %1805, i64* %RSI.i1853, align 8
  store %struct.Memory* %loadMem_40b350, %struct.Memory** %MEMORY
  %loadMem_40b353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1809 = getelementptr inbounds %struct.GPR, %struct.GPR* %1808, i32 0, i32 33
  %1810 = getelementptr inbounds %struct.Reg, %struct.Reg* %1809, i32 0, i32 0
  %PC.i1848 = bitcast %union.anon* %1810 to i64*
  %1811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1812 = getelementptr inbounds %struct.GPR, %struct.GPR* %1811, i32 0, i32 7
  %1813 = getelementptr inbounds %struct.Reg, %struct.Reg* %1812, i32 0, i32 0
  %RDX.i1849 = bitcast %union.anon* %1813 to i64*
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1815 = getelementptr inbounds %struct.GPR, %struct.GPR* %1814, i32 0, i32 9
  %1816 = getelementptr inbounds %struct.Reg, %struct.Reg* %1815, i32 0, i32 0
  %RSI.i1850 = bitcast %union.anon* %1816 to i64*
  %1817 = load i64, i64* %RSI.i1850
  %1818 = load i64, i64* %RDX.i1849
  %1819 = load i64, i64* %PC.i1848
  %1820 = add i64 %1819, 3
  store i64 %1820, i64* %PC.i1848
  %1821 = add i64 %1818, %1817
  store i64 %1821, i64* %RSI.i1850, align 8
  %1822 = icmp ult i64 %1821, %1817
  %1823 = icmp ult i64 %1821, %1818
  %1824 = or i1 %1822, %1823
  %1825 = zext i1 %1824 to i8
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1825, i8* %1826, align 1
  %1827 = trunc i64 %1821 to i32
  %1828 = and i32 %1827, 255
  %1829 = call i32 @llvm.ctpop.i32(i32 %1828)
  %1830 = trunc i32 %1829 to i8
  %1831 = and i8 %1830, 1
  %1832 = xor i8 %1831, 1
  %1833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1832, i8* %1833, align 1
  %1834 = xor i64 %1818, %1817
  %1835 = xor i64 %1834, %1821
  %1836 = lshr i64 %1835, 4
  %1837 = trunc i64 %1836 to i8
  %1838 = and i8 %1837, 1
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1838, i8* %1839, align 1
  %1840 = icmp eq i64 %1821, 0
  %1841 = zext i1 %1840 to i8
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1841, i8* %1842, align 1
  %1843 = lshr i64 %1821, 63
  %1844 = trunc i64 %1843 to i8
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1844, i8* %1845, align 1
  %1846 = lshr i64 %1817, 63
  %1847 = lshr i64 %1818, 63
  %1848 = xor i64 %1843, %1846
  %1849 = xor i64 %1843, %1847
  %1850 = add i64 %1848, %1849
  %1851 = icmp eq i64 %1850, 2
  %1852 = zext i1 %1851 to i8
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1852, i8* %1853, align 1
  store %struct.Memory* %loadMem_40b353, %struct.Memory** %MEMORY
  %loadMem_40b356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1855 = getelementptr inbounds %struct.GPR, %struct.GPR* %1854, i32 0, i32 33
  %1856 = getelementptr inbounds %struct.Reg, %struct.Reg* %1855, i32 0, i32 0
  %PC.i1845 = bitcast %union.anon* %1856 to i64*
  %1857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1858 = getelementptr inbounds %struct.GPR, %struct.GPR* %1857, i32 0, i32 5
  %1859 = getelementptr inbounds %struct.Reg, %struct.Reg* %1858, i32 0, i32 0
  %RCX.i1846 = bitcast %union.anon* %1859 to i64*
  %1860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1861 = getelementptr inbounds %struct.GPR, %struct.GPR* %1860, i32 0, i32 9
  %1862 = getelementptr inbounds %struct.Reg, %struct.Reg* %1861, i32 0, i32 0
  %RSI.i1847 = bitcast %union.anon* %1862 to i64*
  %1863 = load i64, i64* %RSI.i1847
  %1864 = add i64 %1863, 4
  %1865 = load i64, i64* %PC.i1845
  %1866 = add i64 %1865, 3
  store i64 %1866, i64* %PC.i1845
  %1867 = inttoptr i64 %1864 to i32*
  %1868 = load i32, i32* %1867
  %1869 = zext i32 %1868 to i64
  store i64 %1869, i64* %RCX.i1846, align 8
  store %struct.Memory* %loadMem_40b356, %struct.Memory** %MEMORY
  %loadMem_40b359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1871 = getelementptr inbounds %struct.GPR, %struct.GPR* %1870, i32 0, i32 33
  %1872 = getelementptr inbounds %struct.Reg, %struct.Reg* %1871, i32 0, i32 0
  %PC.i1843 = bitcast %union.anon* %1872 to i64*
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1874 = getelementptr inbounds %struct.GPR, %struct.GPR* %1873, i32 0, i32 5
  %1875 = getelementptr inbounds %struct.Reg, %struct.Reg* %1874, i32 0, i32 0
  %RCX.i1844 = bitcast %union.anon* %1875 to i64*
  %1876 = load i64, i64* %RCX.i1844
  %1877 = load i64, i64* %PC.i1843
  %1878 = add i64 %1877, 3
  store i64 %1878, i64* %PC.i1843
  %1879 = trunc i64 %1876 to i32
  %1880 = add i32 1, %1879
  %1881 = zext i32 %1880 to i64
  store i64 %1881, i64* %RCX.i1844, align 8
  %1882 = icmp ult i32 %1880, %1879
  %1883 = icmp ult i32 %1880, 1
  %1884 = or i1 %1882, %1883
  %1885 = zext i1 %1884 to i8
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1885, i8* %1886, align 1
  %1887 = and i32 %1880, 255
  %1888 = call i32 @llvm.ctpop.i32(i32 %1887)
  %1889 = trunc i32 %1888 to i8
  %1890 = and i8 %1889, 1
  %1891 = xor i8 %1890, 1
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1891, i8* %1892, align 1
  %1893 = xor i64 1, %1876
  %1894 = trunc i64 %1893 to i32
  %1895 = xor i32 %1894, %1880
  %1896 = lshr i32 %1895, 4
  %1897 = trunc i32 %1896 to i8
  %1898 = and i8 %1897, 1
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1898, i8* %1899, align 1
  %1900 = icmp eq i32 %1880, 0
  %1901 = zext i1 %1900 to i8
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1901, i8* %1902, align 1
  %1903 = lshr i32 %1880, 31
  %1904 = trunc i32 %1903 to i8
  %1905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1904, i8* %1905, align 1
  %1906 = lshr i32 %1879, 31
  %1907 = xor i32 %1903, %1906
  %1908 = add i32 %1907, %1903
  %1909 = icmp eq i32 %1908, 2
  %1910 = zext i1 %1909 to i8
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1910, i8* %1911, align 1
  store %struct.Memory* %loadMem_40b359, %struct.Memory** %MEMORY
  %loadMem_40b35c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1913 = getelementptr inbounds %struct.GPR, %struct.GPR* %1912, i32 0, i32 33
  %1914 = getelementptr inbounds %struct.Reg, %struct.Reg* %1913, i32 0, i32 0
  %PC.i1840 = bitcast %union.anon* %1914 to i64*
  %1915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1916 = getelementptr inbounds %struct.GPR, %struct.GPR* %1915, i32 0, i32 5
  %1917 = getelementptr inbounds %struct.Reg, %struct.Reg* %1916, i32 0, i32 0
  %ECX.i1841 = bitcast %union.anon* %1917 to i32*
  %1918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1919 = getelementptr inbounds %struct.GPR, %struct.GPR* %1918, i32 0, i32 9
  %1920 = getelementptr inbounds %struct.Reg, %struct.Reg* %1919, i32 0, i32 0
  %RSI.i1842 = bitcast %union.anon* %1920 to i64*
  %1921 = load i64, i64* %RSI.i1842
  %1922 = add i64 %1921, 4
  %1923 = load i32, i32* %ECX.i1841
  %1924 = zext i32 %1923 to i64
  %1925 = load i64, i64* %PC.i1840
  %1926 = add i64 %1925, 3
  store i64 %1926, i64* %PC.i1840
  %1927 = inttoptr i64 %1922 to i32*
  store i32 %1923, i32* %1927
  store %struct.Memory* %loadMem_40b35c, %struct.Memory** %MEMORY
  %loadMem_40b35f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1929 = getelementptr inbounds %struct.GPR, %struct.GPR* %1928, i32 0, i32 33
  %1930 = getelementptr inbounds %struct.Reg, %struct.Reg* %1929, i32 0, i32 0
  %PC.i1837 = bitcast %union.anon* %1930 to i64*
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1932 = getelementptr inbounds %struct.GPR, %struct.GPR* %1931, i32 0, i32 7
  %1933 = getelementptr inbounds %struct.Reg, %struct.Reg* %1932, i32 0, i32 0
  %RDX.i1838 = bitcast %union.anon* %1933 to i64*
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1935 = getelementptr inbounds %struct.GPR, %struct.GPR* %1934, i32 0, i32 15
  %1936 = getelementptr inbounds %struct.Reg, %struct.Reg* %1935, i32 0, i32 0
  %RBP.i1839 = bitcast %union.anon* %1936 to i64*
  %1937 = load i64, i64* %RBP.i1839
  %1938 = sub i64 %1937, 8
  %1939 = load i64, i64* %PC.i1837
  %1940 = add i64 %1939, 4
  store i64 %1940, i64* %PC.i1837
  %1941 = inttoptr i64 %1938 to i32*
  %1942 = load i32, i32* %1941
  %1943 = sext i32 %1942 to i64
  store i64 %1943, i64* %RDX.i1838, align 8
  store %struct.Memory* %loadMem_40b35f, %struct.Memory** %MEMORY
  %loadMem_40b363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1945 = getelementptr inbounds %struct.GPR, %struct.GPR* %1944, i32 0, i32 33
  %1946 = getelementptr inbounds %struct.Reg, %struct.Reg* %1945, i32 0, i32 0
  %PC.i1835 = bitcast %union.anon* %1946 to i64*
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1948 = getelementptr inbounds %struct.GPR, %struct.GPR* %1947, i32 0, i32 7
  %1949 = getelementptr inbounds %struct.Reg, %struct.Reg* %1948, i32 0, i32 0
  %RDX.i1836 = bitcast %union.anon* %1949 to i64*
  %1950 = load i64, i64* %RDX.i1836
  %1951 = load i64, i64* %PC.i1835
  %1952 = add i64 %1951, 7
  store i64 %1952, i64* %PC.i1835
  %1953 = sext i64 %1950 to i128
  %1954 = and i128 %1953, -18446744073709551616
  %1955 = zext i64 %1950 to i128
  %1956 = or i128 %1954, %1955
  %1957 = mul i128 744, %1956
  %1958 = trunc i128 %1957 to i64
  store i64 %1958, i64* %RDX.i1836, align 8
  %1959 = sext i64 %1958 to i128
  %1960 = icmp ne i128 %1959, %1957
  %1961 = zext i1 %1960 to i8
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1961, i8* %1962, align 1
  %1963 = trunc i128 %1957 to i32
  %1964 = and i32 %1963, 255
  %1965 = call i32 @llvm.ctpop.i32(i32 %1964)
  %1966 = trunc i32 %1965 to i8
  %1967 = and i8 %1966, 1
  %1968 = xor i8 %1967, 1
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1968, i8* %1969, align 1
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1970, align 1
  %1971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1971, align 1
  %1972 = lshr i64 %1958, 63
  %1973 = trunc i64 %1972 to i8
  %1974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1973, i8* %1974, align 1
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1961, i8* %1975, align 1
  store %struct.Memory* %loadMem_40b363, %struct.Memory** %MEMORY
  %loadMem_40b36a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1977 = getelementptr inbounds %struct.GPR, %struct.GPR* %1976, i32 0, i32 33
  %1978 = getelementptr inbounds %struct.Reg, %struct.Reg* %1977, i32 0, i32 0
  %PC.i1832 = bitcast %union.anon* %1978 to i64*
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1980 = getelementptr inbounds %struct.GPR, %struct.GPR* %1979, i32 0, i32 1
  %1981 = getelementptr inbounds %struct.Reg, %struct.Reg* %1980, i32 0, i32 0
  %RAX.i1833 = bitcast %union.anon* %1981 to i64*
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1983 = getelementptr inbounds %struct.GPR, %struct.GPR* %1982, i32 0, i32 7
  %1984 = getelementptr inbounds %struct.Reg, %struct.Reg* %1983, i32 0, i32 0
  %RDX.i1834 = bitcast %union.anon* %1984 to i64*
  %1985 = load i64, i64* %RAX.i1833
  %1986 = load i64, i64* %RDX.i1834
  %1987 = load i64, i64* %PC.i1832
  %1988 = add i64 %1987, 3
  store i64 %1988, i64* %PC.i1832
  %1989 = add i64 %1986, %1985
  store i64 %1989, i64* %RAX.i1833, align 8
  %1990 = icmp ult i64 %1989, %1985
  %1991 = icmp ult i64 %1989, %1986
  %1992 = or i1 %1990, %1991
  %1993 = zext i1 %1992 to i8
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1993, i8* %1994, align 1
  %1995 = trunc i64 %1989 to i32
  %1996 = and i32 %1995, 255
  %1997 = call i32 @llvm.ctpop.i32(i32 %1996)
  %1998 = trunc i32 %1997 to i8
  %1999 = and i8 %1998, 1
  %2000 = xor i8 %1999, 1
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2000, i8* %2001, align 1
  %2002 = xor i64 %1986, %1985
  %2003 = xor i64 %2002, %1989
  %2004 = lshr i64 %2003, 4
  %2005 = trunc i64 %2004 to i8
  %2006 = and i8 %2005, 1
  %2007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2006, i8* %2007, align 1
  %2008 = icmp eq i64 %1989, 0
  %2009 = zext i1 %2008 to i8
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2009, i8* %2010, align 1
  %2011 = lshr i64 %1989, 63
  %2012 = trunc i64 %2011 to i8
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2012, i8* %2013, align 1
  %2014 = lshr i64 %1985, 63
  %2015 = lshr i64 %1986, 63
  %2016 = xor i64 %2011, %2014
  %2017 = xor i64 %2011, %2015
  %2018 = add i64 %2016, %2017
  %2019 = icmp eq i64 %2018, 2
  %2020 = zext i1 %2019 to i8
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2020, i8* %2021, align 1
  store %struct.Memory* %loadMem_40b36a, %struct.Memory** %MEMORY
  %loadMem_40b36d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2023 = getelementptr inbounds %struct.GPR, %struct.GPR* %2022, i32 0, i32 33
  %2024 = getelementptr inbounds %struct.Reg, %struct.Reg* %2023, i32 0, i32 0
  %PC.i1830 = bitcast %union.anon* %2024 to i64*
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 1
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %RAX.i1831 = bitcast %union.anon* %2027 to i64*
  %2028 = load i64, i64* %RAX.i1831
  %2029 = add i64 %2028, 12
  %2030 = load i64, i64* %PC.i1830
  %2031 = add i64 %2030, 4
  store i64 %2031, i64* %PC.i1830
  %2032 = inttoptr i64 %2029 to i32*
  %2033 = load i32, i32* %2032
  %2034 = sub i32 %2033, 20
  %2035 = icmp ult i32 %2033, 20
  %2036 = zext i1 %2035 to i8
  %2037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2036, i8* %2037, align 1
  %2038 = and i32 %2034, 255
  %2039 = call i32 @llvm.ctpop.i32(i32 %2038)
  %2040 = trunc i32 %2039 to i8
  %2041 = and i8 %2040, 1
  %2042 = xor i8 %2041, 1
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2042, i8* %2043, align 1
  %2044 = xor i32 %2033, 20
  %2045 = xor i32 %2044, %2034
  %2046 = lshr i32 %2045, 4
  %2047 = trunc i32 %2046 to i8
  %2048 = and i8 %2047, 1
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2048, i8* %2049, align 1
  %2050 = icmp eq i32 %2034, 0
  %2051 = zext i1 %2050 to i8
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2051, i8* %2052, align 1
  %2053 = lshr i32 %2034, 31
  %2054 = trunc i32 %2053 to i8
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2054, i8* %2055, align 1
  %2056 = lshr i32 %2033, 31
  %2057 = xor i32 %2053, %2056
  %2058 = add i32 %2057, %2056
  %2059 = icmp eq i32 %2058, 2
  %2060 = zext i1 %2059 to i8
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2060, i8* %2061, align 1
  store %struct.Memory* %loadMem_40b36d, %struct.Memory** %MEMORY
  %loadMem_40b371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2063 = getelementptr inbounds %struct.GPR, %struct.GPR* %2062, i32 0, i32 33
  %2064 = getelementptr inbounds %struct.Reg, %struct.Reg* %2063, i32 0, i32 0
  %PC.i1829 = bitcast %union.anon* %2064 to i64*
  %2065 = load i64, i64* %PC.i1829
  %2066 = add i64 %2065, 26
  %2067 = load i64, i64* %PC.i1829
  %2068 = add i64 %2067, 6
  %2069 = load i64, i64* %PC.i1829
  %2070 = add i64 %2069, 6
  store i64 %2070, i64* %PC.i1829
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2072 = load i8, i8* %2071, align 1
  %2073 = icmp ne i8 %2072, 0
  %2074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2075 = load i8, i8* %2074, align 1
  %2076 = icmp ne i8 %2075, 0
  %2077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2078 = load i8, i8* %2077, align 1
  %2079 = icmp ne i8 %2078, 0
  %2080 = xor i1 %2076, %2079
  %2081 = or i1 %2073, %2080
  %2082 = zext i1 %2081 to i8
  store i8 %2082, i8* %BRANCH_TAKEN, align 1
  %2083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2084 = select i1 %2081, i64 %2066, i64 %2068
  store i64 %2084, i64* %2083, align 8
  store %struct.Memory* %loadMem_40b371, %struct.Memory** %MEMORY
  %loadBr_40b371 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b371 = icmp eq i8 %loadBr_40b371, 1
  br i1 %cmpBr_40b371, label %block_.L_40b38b, label %block_40b377

block_40b377:                                     ; preds = %block_.L_40b2df
  %loadMem_40b377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2086 = getelementptr inbounds %struct.GPR, %struct.GPR* %2085, i32 0, i32 33
  %2087 = getelementptr inbounds %struct.Reg, %struct.Reg* %2086, i32 0, i32 0
  %PC.i1826 = bitcast %union.anon* %2087 to i64*
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2089 = getelementptr inbounds %struct.GPR, %struct.GPR* %2088, i32 0, i32 11
  %2090 = getelementptr inbounds %struct.Reg, %struct.Reg* %2089, i32 0, i32 0
  %RDI.i1827 = bitcast %union.anon* %2090 to i64*
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2092 = getelementptr inbounds %struct.GPR, %struct.GPR* %2091, i32 0, i32 15
  %2093 = getelementptr inbounds %struct.Reg, %struct.Reg* %2092, i32 0, i32 0
  %RBP.i1828 = bitcast %union.anon* %2093 to i64*
  %2094 = load i64, i64* %RBP.i1828
  %2095 = sub i64 %2094, 8
  %2096 = load i64, i64* %PC.i1826
  %2097 = add i64 %2096, 3
  store i64 %2097, i64* %PC.i1826
  %2098 = inttoptr i64 %2095 to i32*
  %2099 = load i32, i32* %2098
  %2100 = zext i32 %2099 to i64
  store i64 %2100, i64* %RDI.i1827, align 8
  store %struct.Memory* %loadMem_40b377, %struct.Memory** %MEMORY
  %loadMem1_40b37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2102 = getelementptr inbounds %struct.GPR, %struct.GPR* %2101, i32 0, i32 33
  %2103 = getelementptr inbounds %struct.Reg, %struct.Reg* %2102, i32 0, i32 0
  %PC.i1825 = bitcast %union.anon* %2103 to i64*
  %2104 = load i64, i64* %PC.i1825
  %2105 = add i64 %2104, 7942
  %2106 = load i64, i64* %PC.i1825
  %2107 = add i64 %2106, 5
  %2108 = load i64, i64* %PC.i1825
  %2109 = add i64 %2108, 5
  store i64 %2109, i64* %PC.i1825
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2111 = load i64, i64* %2110, align 8
  %2112 = add i64 %2111, -8
  %2113 = inttoptr i64 %2112 to i64*
  store i64 %2107, i64* %2113
  store i64 %2112, i64* %2110, align 8
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2105, i64* %2114, align 8
  store %struct.Memory* %loadMem1_40b37a, %struct.Memory** %MEMORY
  %loadMem2_40b37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b37a = load i64, i64* %3
  %call2_40b37a = call %struct.Memory* @sub_40d280.update_liberties(%struct.State* %0, i64 %loadPC_40b37a, %struct.Memory* %loadMem2_40b37a)
  store %struct.Memory* %call2_40b37a, %struct.Memory** %MEMORY
  %loadMem_40b37f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2116 = getelementptr inbounds %struct.GPR, %struct.GPR* %2115, i32 0, i32 33
  %2117 = getelementptr inbounds %struct.Reg, %struct.Reg* %2116, i32 0, i32 0
  %PC.i1823 = bitcast %union.anon* %2117 to i64*
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2119 = getelementptr inbounds %struct.GPR, %struct.GPR* %2118, i32 0, i32 15
  %2120 = getelementptr inbounds %struct.Reg, %struct.Reg* %2119, i32 0, i32 0
  %RBP.i1824 = bitcast %union.anon* %2120 to i64*
  %2121 = load i64, i64* %RBP.i1824
  %2122 = sub i64 %2121, 16
  %2123 = load i64, i64* %PC.i1823
  %2124 = add i64 %2123, 7
  store i64 %2124, i64* %PC.i1823
  %2125 = inttoptr i64 %2122 to i32*
  store i32 1, i32* %2125
  store %struct.Memory* %loadMem_40b37f, %struct.Memory** %MEMORY
  %loadMem_40b386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2127 = getelementptr inbounds %struct.GPR, %struct.GPR* %2126, i32 0, i32 33
  %2128 = getelementptr inbounds %struct.Reg, %struct.Reg* %2127, i32 0, i32 0
  %PC.i1822 = bitcast %union.anon* %2128 to i64*
  %2129 = load i64, i64* %PC.i1822
  %2130 = add i64 %2129, 16
  %2131 = load i64, i64* %PC.i1822
  %2132 = add i64 %2131, 5
  store i64 %2132, i64* %PC.i1822
  %2133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2130, i64* %2133, align 8
  store %struct.Memory* %loadMem_40b386, %struct.Memory** %MEMORY
  br label %block_.L_40b396

block_.L_40b38b:                                  ; preds = %block_.L_40b2df
  %loadMem_40b38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2135 = getelementptr inbounds %struct.GPR, %struct.GPR* %2134, i32 0, i32 33
  %2136 = getelementptr inbounds %struct.Reg, %struct.Reg* %2135, i32 0, i32 0
  %PC.i1819 = bitcast %union.anon* %2136 to i64*
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2138 = getelementptr inbounds %struct.GPR, %struct.GPR* %2137, i32 0, i32 11
  %2139 = getelementptr inbounds %struct.Reg, %struct.Reg* %2138, i32 0, i32 0
  %RDI.i1820 = bitcast %union.anon* %2139 to i64*
  %2140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2141 = getelementptr inbounds %struct.GPR, %struct.GPR* %2140, i32 0, i32 15
  %2142 = getelementptr inbounds %struct.Reg, %struct.Reg* %2141, i32 0, i32 0
  %RBP.i1821 = bitcast %union.anon* %2142 to i64*
  %2143 = load i64, i64* %RBP.i1821
  %2144 = sub i64 %2143, 8
  %2145 = load i64, i64* %PC.i1819
  %2146 = add i64 %2145, 3
  store i64 %2146, i64* %PC.i1819
  %2147 = inttoptr i64 %2144 to i32*
  %2148 = load i32, i32* %2147
  %2149 = zext i32 %2148 to i64
  store i64 %2149, i64* %RDI.i1820, align 8
  store %struct.Memory* %loadMem_40b38b, %struct.Memory** %MEMORY
  %loadMem_40b38e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2151 = getelementptr inbounds %struct.GPR, %struct.GPR* %2150, i32 0, i32 33
  %2152 = getelementptr inbounds %struct.Reg, %struct.Reg* %2151, i32 0, i32 0
  %PC.i1816 = bitcast %union.anon* %2152 to i64*
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2154 = getelementptr inbounds %struct.GPR, %struct.GPR* %2153, i32 0, i32 9
  %2155 = getelementptr inbounds %struct.Reg, %struct.Reg* %2154, i32 0, i32 0
  %RSI.i1817 = bitcast %union.anon* %2155 to i64*
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2157 = getelementptr inbounds %struct.GPR, %struct.GPR* %2156, i32 0, i32 15
  %2158 = getelementptr inbounds %struct.Reg, %struct.Reg* %2157, i32 0, i32 0
  %RBP.i1818 = bitcast %union.anon* %2158 to i64*
  %2159 = load i64, i64* %RBP.i1818
  %2160 = sub i64 %2159, 4
  %2161 = load i64, i64* %PC.i1816
  %2162 = add i64 %2161, 3
  store i64 %2162, i64* %PC.i1816
  %2163 = inttoptr i64 %2160 to i32*
  %2164 = load i32, i32* %2163
  %2165 = zext i32 %2164 to i64
  store i64 %2165, i64* %RSI.i1817, align 8
  store %struct.Memory* %loadMem_40b38e, %struct.Memory** %MEMORY
  %loadMem1_40b391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2167 = getelementptr inbounds %struct.GPR, %struct.GPR* %2166, i32 0, i32 33
  %2168 = getelementptr inbounds %struct.Reg, %struct.Reg* %2167, i32 0, i32 0
  %PC.i1815 = bitcast %union.anon* %2168 to i64*
  %2169 = load i64, i64* %PC.i1815
  %2170 = add i64 %2169, -3281
  %2171 = load i64, i64* %PC.i1815
  %2172 = add i64 %2171, 5
  %2173 = load i64, i64* %PC.i1815
  %2174 = add i64 %2173, 5
  store i64 %2174, i64* %PC.i1815
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2176 = load i64, i64* %2175, align 8
  %2177 = add i64 %2176, -8
  %2178 = inttoptr i64 %2177 to i64*
  store i64 %2172, i64* %2178
  store i64 %2177, i64* %2175, align 8
  %2179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2170, i64* %2179, align 8
  store %struct.Memory* %loadMem1_40b391, %struct.Memory** %MEMORY
  %loadMem2_40b391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b391 = load i64, i64* %3
  %call2_40b391 = call %struct.Memory* @sub_40a6c0.remove_liberty(%struct.State* %0, i64 %loadPC_40b391, %struct.Memory* %loadMem2_40b391)
  store %struct.Memory* %call2_40b391, %struct.Memory** %MEMORY
  br label %block_.L_40b396

block_.L_40b396:                                  ; preds = %block_.L_40b38b, %block_40b377
  %loadMem_40b396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2181 = getelementptr inbounds %struct.GPR, %struct.GPR* %2180, i32 0, i32 33
  %2182 = getelementptr inbounds %struct.Reg, %struct.Reg* %2181, i32 0, i32 0
  %PC.i1813 = bitcast %union.anon* %2182 to i64*
  %2183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2184 = getelementptr inbounds %struct.GPR, %struct.GPR* %2183, i32 0, i32 1
  %2185 = getelementptr inbounds %struct.Reg, %struct.Reg* %2184, i32 0, i32 0
  %RAX.i1814 = bitcast %union.anon* %2185 to i64*
  %2186 = load i64, i64* %PC.i1813
  %2187 = add i64 %2186, 7
  store i64 %2187, i64* %PC.i1813
  %2188 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %2189 = zext i32 %2188 to i64
  store i64 %2189, i64* %RAX.i1814, align 8
  store %struct.Memory* %loadMem_40b396, %struct.Memory** %MEMORY
  %loadMem_40b39d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2191 = getelementptr inbounds %struct.GPR, %struct.GPR* %2190, i32 0, i32 33
  %2192 = getelementptr inbounds %struct.Reg, %struct.Reg* %2191, i32 0, i32 0
  %PC.i1811 = bitcast %union.anon* %2192 to i64*
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2194 = getelementptr inbounds %struct.GPR, %struct.GPR* %2193, i32 0, i32 1
  %2195 = getelementptr inbounds %struct.Reg, %struct.Reg* %2194, i32 0, i32 0
  %RAX.i1812 = bitcast %union.anon* %2195 to i64*
  %2196 = load i64, i64* %RAX.i1812
  %2197 = load i64, i64* %PC.i1811
  %2198 = add i64 %2197, 3
  store i64 %2198, i64* %PC.i1811
  %2199 = trunc i64 %2196 to i32
  %2200 = add i32 1, %2199
  %2201 = zext i32 %2200 to i64
  store i64 %2201, i64* %RAX.i1812, align 8
  %2202 = icmp ult i32 %2200, %2199
  %2203 = icmp ult i32 %2200, 1
  %2204 = or i1 %2202, %2203
  %2205 = zext i1 %2204 to i8
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2205, i8* %2206, align 1
  %2207 = and i32 %2200, 255
  %2208 = call i32 @llvm.ctpop.i32(i32 %2207)
  %2209 = trunc i32 %2208 to i8
  %2210 = and i8 %2209, 1
  %2211 = xor i8 %2210, 1
  %2212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2211, i8* %2212, align 1
  %2213 = xor i64 1, %2196
  %2214 = trunc i64 %2213 to i32
  %2215 = xor i32 %2214, %2200
  %2216 = lshr i32 %2215, 4
  %2217 = trunc i32 %2216 to i8
  %2218 = and i8 %2217, 1
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2218, i8* %2219, align 1
  %2220 = icmp eq i32 %2200, 0
  %2221 = zext i1 %2220 to i8
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2221, i8* %2222, align 1
  %2223 = lshr i32 %2200, 31
  %2224 = trunc i32 %2223 to i8
  %2225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2224, i8* %2225, align 1
  %2226 = lshr i32 %2199, 31
  %2227 = xor i32 %2223, %2226
  %2228 = add i32 %2227, %2223
  %2229 = icmp eq i32 %2228, 2
  %2230 = zext i1 %2229 to i8
  %2231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2230, i8* %2231, align 1
  store %struct.Memory* %loadMem_40b39d, %struct.Memory** %MEMORY
  %loadMem_40b3a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2233 = getelementptr inbounds %struct.GPR, %struct.GPR* %2232, i32 0, i32 33
  %2234 = getelementptr inbounds %struct.Reg, %struct.Reg* %2233, i32 0, i32 0
  %PC.i1809 = bitcast %union.anon* %2234 to i64*
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2236 = getelementptr inbounds %struct.GPR, %struct.GPR* %2235, i32 0, i32 1
  %2237 = getelementptr inbounds %struct.Reg, %struct.Reg* %2236, i32 0, i32 0
  %EAX.i1810 = bitcast %union.anon* %2237 to i32*
  %2238 = load i32, i32* %EAX.i1810
  %2239 = zext i32 %2238 to i64
  %2240 = load i64, i64* %PC.i1809
  %2241 = add i64 %2240, 7
  store i64 %2241, i64* %PC.i1809
  store i32 %2238, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  store %struct.Memory* %loadMem_40b3a0, %struct.Memory** %MEMORY
  %loadMem_40b3a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2243 = getelementptr inbounds %struct.GPR, %struct.GPR* %2242, i32 0, i32 33
  %2244 = getelementptr inbounds %struct.Reg, %struct.Reg* %2243, i32 0, i32 0
  %PC.i1807 = bitcast %union.anon* %2244 to i64*
  %2245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2246 = getelementptr inbounds %struct.GPR, %struct.GPR* %2245, i32 0, i32 15
  %2247 = getelementptr inbounds %struct.Reg, %struct.Reg* %2246, i32 0, i32 0
  %RBP.i1808 = bitcast %union.anon* %2247 to i64*
  %2248 = load i64, i64* %RBP.i1808
  %2249 = sub i64 %2248, 12
  %2250 = load i64, i64* %PC.i1807
  %2251 = add i64 %2250, 7
  store i64 %2251, i64* %PC.i1807
  %2252 = inttoptr i64 %2249 to i32*
  store i32 0, i32* %2252
  store %struct.Memory* %loadMem_40b3a7, %struct.Memory** %MEMORY
  br label %block_.L_40b3ae

block_.L_40b3ae:                                  ; preds = %block_40b3d2, %block_.L_40b396
  %loadMem_40b3ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2254 = getelementptr inbounds %struct.GPR, %struct.GPR* %2253, i32 0, i32 33
  %2255 = getelementptr inbounds %struct.Reg, %struct.Reg* %2254, i32 0, i32 0
  %PC.i1805 = bitcast %union.anon* %2255 to i64*
  %2256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2257 = getelementptr inbounds %struct.GPR, %struct.GPR* %2256, i32 0, i32 1
  %2258 = getelementptr inbounds %struct.Reg, %struct.Reg* %2257, i32 0, i32 0
  %RAX.i1806 = bitcast %union.anon* %2258 to i64*
  %2259 = load i64, i64* %PC.i1805
  %2260 = add i64 %2259, 10
  store i64 %2260, i64* %PC.i1805
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1806, align 8
  store %struct.Memory* %loadMem_40b3ae, %struct.Memory** %MEMORY
  %loadMem_40b3b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2262 = getelementptr inbounds %struct.GPR, %struct.GPR* %2261, i32 0, i32 33
  %2263 = getelementptr inbounds %struct.Reg, %struct.Reg* %2262, i32 0, i32 0
  %PC.i1802 = bitcast %union.anon* %2263 to i64*
  %2264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2265 = getelementptr inbounds %struct.GPR, %struct.GPR* %2264, i32 0, i32 5
  %2266 = getelementptr inbounds %struct.Reg, %struct.Reg* %2265, i32 0, i32 0
  %RCX.i1803 = bitcast %union.anon* %2266 to i64*
  %2267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2268 = getelementptr inbounds %struct.GPR, %struct.GPR* %2267, i32 0, i32 15
  %2269 = getelementptr inbounds %struct.Reg, %struct.Reg* %2268, i32 0, i32 0
  %RBP.i1804 = bitcast %union.anon* %2269 to i64*
  %2270 = load i64, i64* %RBP.i1804
  %2271 = sub i64 %2270, 12
  %2272 = load i64, i64* %PC.i1802
  %2273 = add i64 %2272, 3
  store i64 %2273, i64* %PC.i1802
  %2274 = inttoptr i64 %2271 to i32*
  %2275 = load i32, i32* %2274
  %2276 = zext i32 %2275 to i64
  store i64 %2276, i64* %RCX.i1803, align 8
  store %struct.Memory* %loadMem_40b3b8, %struct.Memory** %MEMORY
  %loadMem_40b3bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2278 = getelementptr inbounds %struct.GPR, %struct.GPR* %2277, i32 0, i32 33
  %2279 = getelementptr inbounds %struct.Reg, %struct.Reg* %2278, i32 0, i32 0
  %PC.i1799 = bitcast %union.anon* %2279 to i64*
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2281 = getelementptr inbounds %struct.GPR, %struct.GPR* %2280, i32 0, i32 7
  %2282 = getelementptr inbounds %struct.Reg, %struct.Reg* %2281, i32 0, i32 0
  %RDX.i1800 = bitcast %union.anon* %2282 to i64*
  %2283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2284 = getelementptr inbounds %struct.GPR, %struct.GPR* %2283, i32 0, i32 15
  %2285 = getelementptr inbounds %struct.Reg, %struct.Reg* %2284, i32 0, i32 0
  %RBP.i1801 = bitcast %union.anon* %2285 to i64*
  %2286 = load i64, i64* %RBP.i1801
  %2287 = sub i64 %2286, 8
  %2288 = load i64, i64* %PC.i1799
  %2289 = add i64 %2288, 4
  store i64 %2289, i64* %PC.i1799
  %2290 = inttoptr i64 %2287 to i32*
  %2291 = load i32, i32* %2290
  %2292 = sext i32 %2291 to i64
  store i64 %2292, i64* %RDX.i1800, align 8
  store %struct.Memory* %loadMem_40b3bb, %struct.Memory** %MEMORY
  %loadMem_40b3bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2294 = getelementptr inbounds %struct.GPR, %struct.GPR* %2293, i32 0, i32 33
  %2295 = getelementptr inbounds %struct.Reg, %struct.Reg* %2294, i32 0, i32 0
  %PC.i1797 = bitcast %union.anon* %2295 to i64*
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 7
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %RDX.i1798 = bitcast %union.anon* %2298 to i64*
  %2299 = load i64, i64* %RDX.i1798
  %2300 = load i64, i64* %PC.i1797
  %2301 = add i64 %2300, 7
  store i64 %2301, i64* %PC.i1797
  %2302 = sext i64 %2299 to i128
  %2303 = and i128 %2302, -18446744073709551616
  %2304 = zext i64 %2299 to i128
  %2305 = or i128 %2303, %2304
  %2306 = mul i128 744, %2305
  %2307 = trunc i128 %2306 to i64
  store i64 %2307, i64* %RDX.i1798, align 8
  %2308 = sext i64 %2307 to i128
  %2309 = icmp ne i128 %2308, %2306
  %2310 = zext i1 %2309 to i8
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2310, i8* %2311, align 1
  %2312 = trunc i128 %2306 to i32
  %2313 = and i32 %2312, 255
  %2314 = call i32 @llvm.ctpop.i32(i32 %2313)
  %2315 = trunc i32 %2314 to i8
  %2316 = and i8 %2315, 1
  %2317 = xor i8 %2316, 1
  %2318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2317, i8* %2318, align 1
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2319, align 1
  %2320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2320, align 1
  %2321 = lshr i64 %2307, 63
  %2322 = trunc i64 %2321 to i8
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2322, i8* %2323, align 1
  %2324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2310, i8* %2324, align 1
  store %struct.Memory* %loadMem_40b3bf, %struct.Memory** %MEMORY
  %loadMem_40b3c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2326 = getelementptr inbounds %struct.GPR, %struct.GPR* %2325, i32 0, i32 33
  %2327 = getelementptr inbounds %struct.Reg, %struct.Reg* %2326, i32 0, i32 0
  %PC.i1794 = bitcast %union.anon* %2327 to i64*
  %2328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2329 = getelementptr inbounds %struct.GPR, %struct.GPR* %2328, i32 0, i32 1
  %2330 = getelementptr inbounds %struct.Reg, %struct.Reg* %2329, i32 0, i32 0
  %RAX.i1795 = bitcast %union.anon* %2330 to i64*
  %2331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2332 = getelementptr inbounds %struct.GPR, %struct.GPR* %2331, i32 0, i32 7
  %2333 = getelementptr inbounds %struct.Reg, %struct.Reg* %2332, i32 0, i32 0
  %RDX.i1796 = bitcast %union.anon* %2333 to i64*
  %2334 = load i64, i64* %RAX.i1795
  %2335 = load i64, i64* %RDX.i1796
  %2336 = load i64, i64* %PC.i1794
  %2337 = add i64 %2336, 3
  store i64 %2337, i64* %PC.i1794
  %2338 = add i64 %2335, %2334
  store i64 %2338, i64* %RAX.i1795, align 8
  %2339 = icmp ult i64 %2338, %2334
  %2340 = icmp ult i64 %2338, %2335
  %2341 = or i1 %2339, %2340
  %2342 = zext i1 %2341 to i8
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2342, i8* %2343, align 1
  %2344 = trunc i64 %2338 to i32
  %2345 = and i32 %2344, 255
  %2346 = call i32 @llvm.ctpop.i32(i32 %2345)
  %2347 = trunc i32 %2346 to i8
  %2348 = and i8 %2347, 1
  %2349 = xor i8 %2348, 1
  %2350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2349, i8* %2350, align 1
  %2351 = xor i64 %2335, %2334
  %2352 = xor i64 %2351, %2338
  %2353 = lshr i64 %2352, 4
  %2354 = trunc i64 %2353 to i8
  %2355 = and i8 %2354, 1
  %2356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2355, i8* %2356, align 1
  %2357 = icmp eq i64 %2338, 0
  %2358 = zext i1 %2357 to i8
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2358, i8* %2359, align 1
  %2360 = lshr i64 %2338, 63
  %2361 = trunc i64 %2360 to i8
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2361, i8* %2362, align 1
  %2363 = lshr i64 %2334, 63
  %2364 = lshr i64 %2335, 63
  %2365 = xor i64 %2360, %2363
  %2366 = xor i64 %2360, %2364
  %2367 = add i64 %2365, %2366
  %2368 = icmp eq i64 %2367, 2
  %2369 = zext i1 %2368 to i8
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2369, i8* %2370, align 1
  store %struct.Memory* %loadMem_40b3c6, %struct.Memory** %MEMORY
  %loadMem_40b3c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2372 = getelementptr inbounds %struct.GPR, %struct.GPR* %2371, i32 0, i32 33
  %2373 = getelementptr inbounds %struct.Reg, %struct.Reg* %2372, i32 0, i32 0
  %PC.i1791 = bitcast %union.anon* %2373 to i64*
  %2374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2375 = getelementptr inbounds %struct.GPR, %struct.GPR* %2374, i32 0, i32 5
  %2376 = getelementptr inbounds %struct.Reg, %struct.Reg* %2375, i32 0, i32 0
  %ECX.i1792 = bitcast %union.anon* %2376 to i32*
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2378 = getelementptr inbounds %struct.GPR, %struct.GPR* %2377, i32 0, i32 1
  %2379 = getelementptr inbounds %struct.Reg, %struct.Reg* %2378, i32 0, i32 0
  %RAX.i1793 = bitcast %union.anon* %2379 to i64*
  %2380 = load i32, i32* %ECX.i1792
  %2381 = zext i32 %2380 to i64
  %2382 = load i64, i64* %RAX.i1793
  %2383 = add i64 %2382, 96
  %2384 = load i64, i64* %PC.i1791
  %2385 = add i64 %2384, 3
  store i64 %2385, i64* %PC.i1791
  %2386 = inttoptr i64 %2383 to i32*
  %2387 = load i32, i32* %2386
  %2388 = sub i32 %2380, %2387
  %2389 = icmp ult i32 %2380, %2387
  %2390 = zext i1 %2389 to i8
  %2391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2390, i8* %2391, align 1
  %2392 = and i32 %2388, 255
  %2393 = call i32 @llvm.ctpop.i32(i32 %2392)
  %2394 = trunc i32 %2393 to i8
  %2395 = and i8 %2394, 1
  %2396 = xor i8 %2395, 1
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2396, i8* %2397, align 1
  %2398 = xor i32 %2387, %2380
  %2399 = xor i32 %2398, %2388
  %2400 = lshr i32 %2399, 4
  %2401 = trunc i32 %2400 to i8
  %2402 = and i8 %2401, 1
  %2403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2402, i8* %2403, align 1
  %2404 = icmp eq i32 %2388, 0
  %2405 = zext i1 %2404 to i8
  %2406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2405, i8* %2406, align 1
  %2407 = lshr i32 %2388, 31
  %2408 = trunc i32 %2407 to i8
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2408, i8* %2409, align 1
  %2410 = lshr i32 %2380, 31
  %2411 = lshr i32 %2387, 31
  %2412 = xor i32 %2411, %2410
  %2413 = xor i32 %2407, %2410
  %2414 = add i32 %2413, %2412
  %2415 = icmp eq i32 %2414, 2
  %2416 = zext i1 %2415 to i8
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2416, i8* %2417, align 1
  store %struct.Memory* %loadMem_40b3c9, %struct.Memory** %MEMORY
  %loadMem_40b3cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2419 = getelementptr inbounds %struct.GPR, %struct.GPR* %2418, i32 0, i32 33
  %2420 = getelementptr inbounds %struct.Reg, %struct.Reg* %2419, i32 0, i32 0
  %PC.i1790 = bitcast %union.anon* %2420 to i64*
  %2421 = load i64, i64* %PC.i1790
  %2422 = add i64 %2421, 79
  %2423 = load i64, i64* %PC.i1790
  %2424 = add i64 %2423, 6
  %2425 = load i64, i64* %PC.i1790
  %2426 = add i64 %2425, 6
  store i64 %2426, i64* %PC.i1790
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2428 = load i8, i8* %2427, align 1
  %2429 = icmp ne i8 %2428, 0
  %2430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2431 = load i8, i8* %2430, align 1
  %2432 = icmp ne i8 %2431, 0
  %2433 = xor i1 %2429, %2432
  %2434 = xor i1 %2433, true
  %2435 = zext i1 %2434 to i8
  store i8 %2435, i8* %BRANCH_TAKEN, align 1
  %2436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2437 = select i1 %2433, i64 %2424, i64 %2422
  store i64 %2437, i64* %2436, align 8
  store %struct.Memory* %loadMem_40b3cc, %struct.Memory** %MEMORY
  %loadBr_40b3cc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b3cc = icmp eq i8 %loadBr_40b3cc, 1
  br i1 %cmpBr_40b3cc, label %block_.L_40b41b, label %block_40b3d2

block_40b3d2:                                     ; preds = %block_.L_40b3ae
  %loadMem_40b3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2439 = getelementptr inbounds %struct.GPR, %struct.GPR* %2438, i32 0, i32 33
  %2440 = getelementptr inbounds %struct.Reg, %struct.Reg* %2439, i32 0, i32 0
  %PC.i1788 = bitcast %union.anon* %2440 to i64*
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2442 = getelementptr inbounds %struct.GPR, %struct.GPR* %2441, i32 0, i32 1
  %2443 = getelementptr inbounds %struct.Reg, %struct.Reg* %2442, i32 0, i32 0
  %RAX.i1789 = bitcast %union.anon* %2443 to i64*
  %2444 = load i64, i64* %PC.i1788
  %2445 = add i64 %2444, 10
  store i64 %2445, i64* %PC.i1788
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1789, align 8
  store %struct.Memory* %loadMem_40b3d2, %struct.Memory** %MEMORY
  %loadMem_40b3dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2447 = getelementptr inbounds %struct.GPR, %struct.GPR* %2446, i32 0, i32 33
  %2448 = getelementptr inbounds %struct.Reg, %struct.Reg* %2447, i32 0, i32 0
  %PC.i1786 = bitcast %union.anon* %2448 to i64*
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2450 = getelementptr inbounds %struct.GPR, %struct.GPR* %2449, i32 0, i32 5
  %2451 = getelementptr inbounds %struct.Reg, %struct.Reg* %2450, i32 0, i32 0
  %RCX.i1787 = bitcast %union.anon* %2451 to i64*
  %2452 = load i64, i64* %PC.i1786
  %2453 = add i64 %2452, 7
  store i64 %2453, i64* %PC.i1786
  %2454 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %2455 = zext i32 %2454 to i64
  store i64 %2455, i64* %RCX.i1787, align 8
  store %struct.Memory* %loadMem_40b3dc, %struct.Memory** %MEMORY
  %loadMem_40b3e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2457 = getelementptr inbounds %struct.GPR, %struct.GPR* %2456, i32 0, i32 33
  %2458 = getelementptr inbounds %struct.Reg, %struct.Reg* %2457, i32 0, i32 0
  %PC.i1783 = bitcast %union.anon* %2458 to i64*
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2460 = getelementptr inbounds %struct.GPR, %struct.GPR* %2459, i32 0, i32 7
  %2461 = getelementptr inbounds %struct.Reg, %struct.Reg* %2460, i32 0, i32 0
  %RDX.i1784 = bitcast %union.anon* %2461 to i64*
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2463 = getelementptr inbounds %struct.GPR, %struct.GPR* %2462, i32 0, i32 15
  %2464 = getelementptr inbounds %struct.Reg, %struct.Reg* %2463, i32 0, i32 0
  %RBP.i1785 = bitcast %union.anon* %2464 to i64*
  %2465 = load i64, i64* %RBP.i1785
  %2466 = sub i64 %2465, 8
  %2467 = load i64, i64* %PC.i1783
  %2468 = add i64 %2467, 4
  store i64 %2468, i64* %PC.i1783
  %2469 = inttoptr i64 %2466 to i32*
  %2470 = load i32, i32* %2469
  %2471 = sext i32 %2470 to i64
  store i64 %2471, i64* %RDX.i1784, align 8
  store %struct.Memory* %loadMem_40b3e3, %struct.Memory** %MEMORY
  %loadMem_40b3e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2473 = getelementptr inbounds %struct.GPR, %struct.GPR* %2472, i32 0, i32 33
  %2474 = getelementptr inbounds %struct.Reg, %struct.Reg* %2473, i32 0, i32 0
  %PC.i1781 = bitcast %union.anon* %2474 to i64*
  %2475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2476 = getelementptr inbounds %struct.GPR, %struct.GPR* %2475, i32 0, i32 7
  %2477 = getelementptr inbounds %struct.Reg, %struct.Reg* %2476, i32 0, i32 0
  %RDX.i1782 = bitcast %union.anon* %2477 to i64*
  %2478 = load i64, i64* %RDX.i1782
  %2479 = load i64, i64* %PC.i1781
  %2480 = add i64 %2479, 7
  store i64 %2480, i64* %PC.i1781
  %2481 = sext i64 %2478 to i128
  %2482 = and i128 %2481, -18446744073709551616
  %2483 = zext i64 %2478 to i128
  %2484 = or i128 %2482, %2483
  %2485 = mul i128 744, %2484
  %2486 = trunc i128 %2485 to i64
  store i64 %2486, i64* %RDX.i1782, align 8
  %2487 = sext i64 %2486 to i128
  %2488 = icmp ne i128 %2487, %2485
  %2489 = zext i1 %2488 to i8
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2489, i8* %2490, align 1
  %2491 = trunc i128 %2485 to i32
  %2492 = and i32 %2491, 255
  %2493 = call i32 @llvm.ctpop.i32(i32 %2492)
  %2494 = trunc i32 %2493 to i8
  %2495 = and i8 %2494, 1
  %2496 = xor i8 %2495, 1
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2496, i8* %2497, align 1
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2498, align 1
  %2499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2499, align 1
  %2500 = lshr i64 %2486, 63
  %2501 = trunc i64 %2500 to i8
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2501, i8* %2502, align 1
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2489, i8* %2503, align 1
  store %struct.Memory* %loadMem_40b3e7, %struct.Memory** %MEMORY
  %loadMem_40b3ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2505 = getelementptr inbounds %struct.GPR, %struct.GPR* %2504, i32 0, i32 33
  %2506 = getelementptr inbounds %struct.Reg, %struct.Reg* %2505, i32 0, i32 0
  %PC.i1778 = bitcast %union.anon* %2506 to i64*
  %2507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2508 = getelementptr inbounds %struct.GPR, %struct.GPR* %2507, i32 0, i32 1
  %2509 = getelementptr inbounds %struct.Reg, %struct.Reg* %2508, i32 0, i32 0
  %RAX.i1779 = bitcast %union.anon* %2509 to i64*
  %2510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2511 = getelementptr inbounds %struct.GPR, %struct.GPR* %2510, i32 0, i32 9
  %2512 = getelementptr inbounds %struct.Reg, %struct.Reg* %2511, i32 0, i32 0
  %RSI.i1780 = bitcast %union.anon* %2512 to i64*
  %2513 = load i64, i64* %RAX.i1779
  %2514 = load i64, i64* %PC.i1778
  %2515 = add i64 %2514, 3
  store i64 %2515, i64* %PC.i1778
  store i64 %2513, i64* %RSI.i1780, align 8
  store %struct.Memory* %loadMem_40b3ee, %struct.Memory** %MEMORY
  %loadMem_40b3f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2517 = getelementptr inbounds %struct.GPR, %struct.GPR* %2516, i32 0, i32 33
  %2518 = getelementptr inbounds %struct.Reg, %struct.Reg* %2517, i32 0, i32 0
  %PC.i1775 = bitcast %union.anon* %2518 to i64*
  %2519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2520 = getelementptr inbounds %struct.GPR, %struct.GPR* %2519, i32 0, i32 7
  %2521 = getelementptr inbounds %struct.Reg, %struct.Reg* %2520, i32 0, i32 0
  %RDX.i1776 = bitcast %union.anon* %2521 to i64*
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2523 = getelementptr inbounds %struct.GPR, %struct.GPR* %2522, i32 0, i32 9
  %2524 = getelementptr inbounds %struct.Reg, %struct.Reg* %2523, i32 0, i32 0
  %RSI.i1777 = bitcast %union.anon* %2524 to i64*
  %2525 = load i64, i64* %RSI.i1777
  %2526 = load i64, i64* %RDX.i1776
  %2527 = load i64, i64* %PC.i1775
  %2528 = add i64 %2527, 3
  store i64 %2528, i64* %PC.i1775
  %2529 = add i64 %2526, %2525
  store i64 %2529, i64* %RSI.i1777, align 8
  %2530 = icmp ult i64 %2529, %2525
  %2531 = icmp ult i64 %2529, %2526
  %2532 = or i1 %2530, %2531
  %2533 = zext i1 %2532 to i8
  %2534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2533, i8* %2534, align 1
  %2535 = trunc i64 %2529 to i32
  %2536 = and i32 %2535, 255
  %2537 = call i32 @llvm.ctpop.i32(i32 %2536)
  %2538 = trunc i32 %2537 to i8
  %2539 = and i8 %2538, 1
  %2540 = xor i8 %2539, 1
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2540, i8* %2541, align 1
  %2542 = xor i64 %2526, %2525
  %2543 = xor i64 %2542, %2529
  %2544 = lshr i64 %2543, 4
  %2545 = trunc i64 %2544 to i8
  %2546 = and i8 %2545, 1
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2546, i8* %2547, align 1
  %2548 = icmp eq i64 %2529, 0
  %2549 = zext i1 %2548 to i8
  %2550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2549, i8* %2550, align 1
  %2551 = lshr i64 %2529, 63
  %2552 = trunc i64 %2551 to i8
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2552, i8* %2553, align 1
  %2554 = lshr i64 %2525, 63
  %2555 = lshr i64 %2526, 63
  %2556 = xor i64 %2551, %2554
  %2557 = xor i64 %2551, %2555
  %2558 = add i64 %2556, %2557
  %2559 = icmp eq i64 %2558, 2
  %2560 = zext i1 %2559 to i8
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2560, i8* %2561, align 1
  store %struct.Memory* %loadMem_40b3f1, %struct.Memory** %MEMORY
  %loadMem_40b3f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2563 = getelementptr inbounds %struct.GPR, %struct.GPR* %2562, i32 0, i32 33
  %2564 = getelementptr inbounds %struct.Reg, %struct.Reg* %2563, i32 0, i32 0
  %PC.i1772 = bitcast %union.anon* %2564 to i64*
  %2565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2566 = getelementptr inbounds %struct.GPR, %struct.GPR* %2565, i32 0, i32 7
  %2567 = getelementptr inbounds %struct.Reg, %struct.Reg* %2566, i32 0, i32 0
  %RDX.i1773 = bitcast %union.anon* %2567 to i64*
  %2568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2569 = getelementptr inbounds %struct.GPR, %struct.GPR* %2568, i32 0, i32 15
  %2570 = getelementptr inbounds %struct.Reg, %struct.Reg* %2569, i32 0, i32 0
  %RBP.i1774 = bitcast %union.anon* %2570 to i64*
  %2571 = load i64, i64* %RBP.i1774
  %2572 = sub i64 %2571, 12
  %2573 = load i64, i64* %PC.i1772
  %2574 = add i64 %2573, 4
  store i64 %2574, i64* %PC.i1772
  %2575 = inttoptr i64 %2572 to i32*
  %2576 = load i32, i32* %2575
  %2577 = sext i32 %2576 to i64
  store i64 %2577, i64* %RDX.i1773, align 8
  store %struct.Memory* %loadMem_40b3f4, %struct.Memory** %MEMORY
  %loadMem_40b3f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2579 = getelementptr inbounds %struct.GPR, %struct.GPR* %2578, i32 0, i32 33
  %2580 = getelementptr inbounds %struct.Reg, %struct.Reg* %2579, i32 0, i32 0
  %PC.i1769 = bitcast %union.anon* %2580 to i64*
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2582 = getelementptr inbounds %struct.GPR, %struct.GPR* %2581, i32 0, i32 7
  %2583 = getelementptr inbounds %struct.Reg, %struct.Reg* %2582, i32 0, i32 0
  %RDX.i1770 = bitcast %union.anon* %2583 to i64*
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2585 = getelementptr inbounds %struct.GPR, %struct.GPR* %2584, i32 0, i32 9
  %2586 = getelementptr inbounds %struct.Reg, %struct.Reg* %2585, i32 0, i32 0
  %RSI.i1771 = bitcast %union.anon* %2586 to i64*
  %2587 = load i64, i64* %RSI.i1771
  %2588 = load i64, i64* %RDX.i1770
  %2589 = mul i64 %2588, 4
  %2590 = add i64 %2587, 100
  %2591 = add i64 %2590, %2589
  %2592 = load i64, i64* %PC.i1769
  %2593 = add i64 %2592, 5
  store i64 %2593, i64* %PC.i1769
  %2594 = inttoptr i64 %2591 to i32*
  %2595 = load i32, i32* %2594
  %2596 = sext i32 %2595 to i64
  store i64 %2596, i64* %RDX.i1770, align 8
  store %struct.Memory* %loadMem_40b3f8, %struct.Memory** %MEMORY
  %loadMem_40b3fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2598 = getelementptr inbounds %struct.GPR, %struct.GPR* %2597, i32 0, i32 33
  %2599 = getelementptr inbounds %struct.Reg, %struct.Reg* %2598, i32 0, i32 0
  %PC.i1767 = bitcast %union.anon* %2599 to i64*
  %2600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2601 = getelementptr inbounds %struct.GPR, %struct.GPR* %2600, i32 0, i32 7
  %2602 = getelementptr inbounds %struct.Reg, %struct.Reg* %2601, i32 0, i32 0
  %RDX.i1768 = bitcast %union.anon* %2602 to i64*
  %2603 = load i64, i64* %RDX.i1768
  %2604 = load i64, i64* %PC.i1767
  %2605 = add i64 %2604, 7
  store i64 %2605, i64* %PC.i1767
  %2606 = sext i64 %2603 to i128
  %2607 = and i128 %2606, -18446744073709551616
  %2608 = zext i64 %2603 to i128
  %2609 = or i128 %2607, %2608
  %2610 = mul i128 744, %2609
  %2611 = trunc i128 %2610 to i64
  store i64 %2611, i64* %RDX.i1768, align 8
  %2612 = sext i64 %2611 to i128
  %2613 = icmp ne i128 %2612, %2610
  %2614 = zext i1 %2613 to i8
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2614, i8* %2615, align 1
  %2616 = trunc i128 %2610 to i32
  %2617 = and i32 %2616, 255
  %2618 = call i32 @llvm.ctpop.i32(i32 %2617)
  %2619 = trunc i32 %2618 to i8
  %2620 = and i8 %2619, 1
  %2621 = xor i8 %2620, 1
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2621, i8* %2622, align 1
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2623, align 1
  %2624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2624, align 1
  %2625 = lshr i64 %2611, 63
  %2626 = trunc i64 %2625 to i8
  %2627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2626, i8* %2627, align 1
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2614, i8* %2628, align 1
  store %struct.Memory* %loadMem_40b3fd, %struct.Memory** %MEMORY
  %loadMem_40b404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2630 = getelementptr inbounds %struct.GPR, %struct.GPR* %2629, i32 0, i32 33
  %2631 = getelementptr inbounds %struct.Reg, %struct.Reg* %2630, i32 0, i32 0
  %PC.i1764 = bitcast %union.anon* %2631 to i64*
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2633 = getelementptr inbounds %struct.GPR, %struct.GPR* %2632, i32 0, i32 1
  %2634 = getelementptr inbounds %struct.Reg, %struct.Reg* %2633, i32 0, i32 0
  %RAX.i1765 = bitcast %union.anon* %2634 to i64*
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2636 = getelementptr inbounds %struct.GPR, %struct.GPR* %2635, i32 0, i32 7
  %2637 = getelementptr inbounds %struct.Reg, %struct.Reg* %2636, i32 0, i32 0
  %RDX.i1766 = bitcast %union.anon* %2637 to i64*
  %2638 = load i64, i64* %RAX.i1765
  %2639 = load i64, i64* %RDX.i1766
  %2640 = load i64, i64* %PC.i1764
  %2641 = add i64 %2640, 3
  store i64 %2641, i64* %PC.i1764
  %2642 = add i64 %2639, %2638
  store i64 %2642, i64* %RAX.i1765, align 8
  %2643 = icmp ult i64 %2642, %2638
  %2644 = icmp ult i64 %2642, %2639
  %2645 = or i1 %2643, %2644
  %2646 = zext i1 %2645 to i8
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2646, i8* %2647, align 1
  %2648 = trunc i64 %2642 to i32
  %2649 = and i32 %2648, 255
  %2650 = call i32 @llvm.ctpop.i32(i32 %2649)
  %2651 = trunc i32 %2650 to i8
  %2652 = and i8 %2651, 1
  %2653 = xor i8 %2652, 1
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2653, i8* %2654, align 1
  %2655 = xor i64 %2639, %2638
  %2656 = xor i64 %2655, %2642
  %2657 = lshr i64 %2656, 4
  %2658 = trunc i64 %2657 to i8
  %2659 = and i8 %2658, 1
  %2660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2659, i8* %2660, align 1
  %2661 = icmp eq i64 %2642, 0
  %2662 = zext i1 %2661 to i8
  %2663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2662, i8* %2663, align 1
  %2664 = lshr i64 %2642, 63
  %2665 = trunc i64 %2664 to i8
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2665, i8* %2666, align 1
  %2667 = lshr i64 %2638, 63
  %2668 = lshr i64 %2639, 63
  %2669 = xor i64 %2664, %2667
  %2670 = xor i64 %2664, %2668
  %2671 = add i64 %2669, %2670
  %2672 = icmp eq i64 %2671, 2
  %2673 = zext i1 %2672 to i8
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2673, i8* %2674, align 1
  store %struct.Memory* %loadMem_40b404, %struct.Memory** %MEMORY
  %loadMem_40b407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2676 = getelementptr inbounds %struct.GPR, %struct.GPR* %2675, i32 0, i32 33
  %2677 = getelementptr inbounds %struct.Reg, %struct.Reg* %2676, i32 0, i32 0
  %PC.i1761 = bitcast %union.anon* %2677 to i64*
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2679 = getelementptr inbounds %struct.GPR, %struct.GPR* %2678, i32 0, i32 5
  %2680 = getelementptr inbounds %struct.Reg, %struct.Reg* %2679, i32 0, i32 0
  %ECX.i1762 = bitcast %union.anon* %2680 to i32*
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2682 = getelementptr inbounds %struct.GPR, %struct.GPR* %2681, i32 0, i32 1
  %2683 = getelementptr inbounds %struct.Reg, %struct.Reg* %2682, i32 0, i32 0
  %RAX.i1763 = bitcast %union.anon* %2683 to i64*
  %2684 = load i64, i64* %RAX.i1763
  %2685 = add i64 %2684, 740
  %2686 = load i32, i32* %ECX.i1762
  %2687 = zext i32 %2686 to i64
  %2688 = load i64, i64* %PC.i1761
  %2689 = add i64 %2688, 6
  store i64 %2689, i64* %PC.i1761
  %2690 = inttoptr i64 %2685 to i32*
  store i32 %2686, i32* %2690
  store %struct.Memory* %loadMem_40b407, %struct.Memory** %MEMORY
  %loadMem_40b40d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2692 = getelementptr inbounds %struct.GPR, %struct.GPR* %2691, i32 0, i32 33
  %2693 = getelementptr inbounds %struct.Reg, %struct.Reg* %2692, i32 0, i32 0
  %PC.i1758 = bitcast %union.anon* %2693 to i64*
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2695 = getelementptr inbounds %struct.GPR, %struct.GPR* %2694, i32 0, i32 1
  %2696 = getelementptr inbounds %struct.Reg, %struct.Reg* %2695, i32 0, i32 0
  %RAX.i1759 = bitcast %union.anon* %2696 to i64*
  %2697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2698 = getelementptr inbounds %struct.GPR, %struct.GPR* %2697, i32 0, i32 15
  %2699 = getelementptr inbounds %struct.Reg, %struct.Reg* %2698, i32 0, i32 0
  %RBP.i1760 = bitcast %union.anon* %2699 to i64*
  %2700 = load i64, i64* %RBP.i1760
  %2701 = sub i64 %2700, 12
  %2702 = load i64, i64* %PC.i1758
  %2703 = add i64 %2702, 3
  store i64 %2703, i64* %PC.i1758
  %2704 = inttoptr i64 %2701 to i32*
  %2705 = load i32, i32* %2704
  %2706 = zext i32 %2705 to i64
  store i64 %2706, i64* %RAX.i1759, align 8
  store %struct.Memory* %loadMem_40b40d, %struct.Memory** %MEMORY
  %loadMem_40b410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2708 = getelementptr inbounds %struct.GPR, %struct.GPR* %2707, i32 0, i32 33
  %2709 = getelementptr inbounds %struct.Reg, %struct.Reg* %2708, i32 0, i32 0
  %PC.i1756 = bitcast %union.anon* %2709 to i64*
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2711 = getelementptr inbounds %struct.GPR, %struct.GPR* %2710, i32 0, i32 1
  %2712 = getelementptr inbounds %struct.Reg, %struct.Reg* %2711, i32 0, i32 0
  %RAX.i1757 = bitcast %union.anon* %2712 to i64*
  %2713 = load i64, i64* %RAX.i1757
  %2714 = load i64, i64* %PC.i1756
  %2715 = add i64 %2714, 3
  store i64 %2715, i64* %PC.i1756
  %2716 = trunc i64 %2713 to i32
  %2717 = add i32 1, %2716
  %2718 = zext i32 %2717 to i64
  store i64 %2718, i64* %RAX.i1757, align 8
  %2719 = icmp ult i32 %2717, %2716
  %2720 = icmp ult i32 %2717, 1
  %2721 = or i1 %2719, %2720
  %2722 = zext i1 %2721 to i8
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2722, i8* %2723, align 1
  %2724 = and i32 %2717, 255
  %2725 = call i32 @llvm.ctpop.i32(i32 %2724)
  %2726 = trunc i32 %2725 to i8
  %2727 = and i8 %2726, 1
  %2728 = xor i8 %2727, 1
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2728, i8* %2729, align 1
  %2730 = xor i64 1, %2713
  %2731 = trunc i64 %2730 to i32
  %2732 = xor i32 %2731, %2717
  %2733 = lshr i32 %2732, 4
  %2734 = trunc i32 %2733 to i8
  %2735 = and i8 %2734, 1
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2735, i8* %2736, align 1
  %2737 = icmp eq i32 %2717, 0
  %2738 = zext i1 %2737 to i8
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2738, i8* %2739, align 1
  %2740 = lshr i32 %2717, 31
  %2741 = trunc i32 %2740 to i8
  %2742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2741, i8* %2742, align 1
  %2743 = lshr i32 %2716, 31
  %2744 = xor i32 %2740, %2743
  %2745 = add i32 %2744, %2740
  %2746 = icmp eq i32 %2745, 2
  %2747 = zext i1 %2746 to i8
  %2748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2747, i8* %2748, align 1
  store %struct.Memory* %loadMem_40b410, %struct.Memory** %MEMORY
  %loadMem_40b413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2750 = getelementptr inbounds %struct.GPR, %struct.GPR* %2749, i32 0, i32 33
  %2751 = getelementptr inbounds %struct.Reg, %struct.Reg* %2750, i32 0, i32 0
  %PC.i1753 = bitcast %union.anon* %2751 to i64*
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2753 = getelementptr inbounds %struct.GPR, %struct.GPR* %2752, i32 0, i32 1
  %2754 = getelementptr inbounds %struct.Reg, %struct.Reg* %2753, i32 0, i32 0
  %EAX.i1754 = bitcast %union.anon* %2754 to i32*
  %2755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2756 = getelementptr inbounds %struct.GPR, %struct.GPR* %2755, i32 0, i32 15
  %2757 = getelementptr inbounds %struct.Reg, %struct.Reg* %2756, i32 0, i32 0
  %RBP.i1755 = bitcast %union.anon* %2757 to i64*
  %2758 = load i64, i64* %RBP.i1755
  %2759 = sub i64 %2758, 12
  %2760 = load i32, i32* %EAX.i1754
  %2761 = zext i32 %2760 to i64
  %2762 = load i64, i64* %PC.i1753
  %2763 = add i64 %2762, 3
  store i64 %2763, i64* %PC.i1753
  %2764 = inttoptr i64 %2759 to i32*
  store i32 %2760, i32* %2764
  store %struct.Memory* %loadMem_40b413, %struct.Memory** %MEMORY
  %loadMem_40b416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2766 = getelementptr inbounds %struct.GPR, %struct.GPR* %2765, i32 0, i32 33
  %2767 = getelementptr inbounds %struct.Reg, %struct.Reg* %2766, i32 0, i32 0
  %PC.i1752 = bitcast %union.anon* %2767 to i64*
  %2768 = load i64, i64* %PC.i1752
  %2769 = add i64 %2768, -104
  %2770 = load i64, i64* %PC.i1752
  %2771 = add i64 %2770, 5
  store i64 %2771, i64* %PC.i1752
  %2772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2769, i64* %2772, align 8
  store %struct.Memory* %loadMem_40b416, %struct.Memory** %MEMORY
  br label %block_.L_40b3ae

block_.L_40b41b:                                  ; preds = %block_.L_40b3ae
  %loadMem_40b41b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2774 = getelementptr inbounds %struct.GPR, %struct.GPR* %2773, i32 0, i32 33
  %2775 = getelementptr inbounds %struct.Reg, %struct.Reg* %2774, i32 0, i32 0
  %PC.i1749 = bitcast %union.anon* %2775 to i64*
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2777 = getelementptr inbounds %struct.GPR, %struct.GPR* %2776, i32 0, i32 1
  %2778 = getelementptr inbounds %struct.Reg, %struct.Reg* %2777, i32 0, i32 0
  %RAX.i1750 = bitcast %union.anon* %2778 to i64*
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2780 = getelementptr inbounds %struct.GPR, %struct.GPR* %2779, i32 0, i32 15
  %2781 = getelementptr inbounds %struct.Reg, %struct.Reg* %2780, i32 0, i32 0
  %RBP.i1751 = bitcast %union.anon* %2781 to i64*
  %2782 = load i64, i64* %RBP.i1751
  %2783 = sub i64 %2782, 4
  %2784 = load i64, i64* %PC.i1749
  %2785 = add i64 %2784, 3
  store i64 %2785, i64* %PC.i1749
  %2786 = inttoptr i64 %2783 to i32*
  %2787 = load i32, i32* %2786
  %2788 = zext i32 %2787 to i64
  store i64 %2788, i64* %RAX.i1750, align 8
  store %struct.Memory* %loadMem_40b41b, %struct.Memory** %MEMORY
  %loadMem_40b41e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2790 = getelementptr inbounds %struct.GPR, %struct.GPR* %2789, i32 0, i32 33
  %2791 = getelementptr inbounds %struct.Reg, %struct.Reg* %2790, i32 0, i32 0
  %PC.i1747 = bitcast %union.anon* %2791 to i64*
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2793 = getelementptr inbounds %struct.GPR, %struct.GPR* %2792, i32 0, i32 1
  %2794 = getelementptr inbounds %struct.Reg, %struct.Reg* %2793, i32 0, i32 0
  %RAX.i1748 = bitcast %union.anon* %2794 to i64*
  %2795 = load i64, i64* %RAX.i1748
  %2796 = load i64, i64* %PC.i1747
  %2797 = add i64 %2796, 3
  store i64 %2797, i64* %PC.i1747
  %2798 = trunc i64 %2795 to i32
  %2799 = add i32 20, %2798
  %2800 = zext i32 %2799 to i64
  store i64 %2800, i64* %RAX.i1748, align 8
  %2801 = icmp ult i32 %2799, %2798
  %2802 = icmp ult i32 %2799, 20
  %2803 = or i1 %2801, %2802
  %2804 = zext i1 %2803 to i8
  %2805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2804, i8* %2805, align 1
  %2806 = and i32 %2799, 255
  %2807 = call i32 @llvm.ctpop.i32(i32 %2806)
  %2808 = trunc i32 %2807 to i8
  %2809 = and i8 %2808, 1
  %2810 = xor i8 %2809, 1
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2810, i8* %2811, align 1
  %2812 = xor i64 20, %2795
  %2813 = trunc i64 %2812 to i32
  %2814 = xor i32 %2813, %2799
  %2815 = lshr i32 %2814, 4
  %2816 = trunc i32 %2815 to i8
  %2817 = and i8 %2816, 1
  %2818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2817, i8* %2818, align 1
  %2819 = icmp eq i32 %2799, 0
  %2820 = zext i1 %2819 to i8
  %2821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2820, i8* %2821, align 1
  %2822 = lshr i32 %2799, 31
  %2823 = trunc i32 %2822 to i8
  %2824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2823, i8* %2824, align 1
  %2825 = lshr i32 %2798, 31
  %2826 = xor i32 %2822, %2825
  %2827 = add i32 %2826, %2822
  %2828 = icmp eq i32 %2827, 2
  %2829 = zext i1 %2828 to i8
  %2830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2829, i8* %2830, align 1
  store %struct.Memory* %loadMem_40b41e, %struct.Memory** %MEMORY
  %loadMem_40b421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2832 = getelementptr inbounds %struct.GPR, %struct.GPR* %2831, i32 0, i32 33
  %2833 = getelementptr inbounds %struct.Reg, %struct.Reg* %2832, i32 0, i32 0
  %PC.i1744 = bitcast %union.anon* %2833 to i64*
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2835 = getelementptr inbounds %struct.GPR, %struct.GPR* %2834, i32 0, i32 1
  %2836 = getelementptr inbounds %struct.Reg, %struct.Reg* %2835, i32 0, i32 0
  %EAX.i1745 = bitcast %union.anon* %2836 to i32*
  %2837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2838 = getelementptr inbounds %struct.GPR, %struct.GPR* %2837, i32 0, i32 5
  %2839 = getelementptr inbounds %struct.Reg, %struct.Reg* %2838, i32 0, i32 0
  %RCX.i1746 = bitcast %union.anon* %2839 to i64*
  %2840 = load i32, i32* %EAX.i1745
  %2841 = zext i32 %2840 to i64
  %2842 = load i64, i64* %PC.i1744
  %2843 = add i64 %2842, 3
  store i64 %2843, i64* %PC.i1744
  %2844 = shl i64 %2841, 32
  %2845 = ashr exact i64 %2844, 32
  store i64 %2845, i64* %RCX.i1746, align 8
  store %struct.Memory* %loadMem_40b421, %struct.Memory** %MEMORY
  %loadMem_40b424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2847 = getelementptr inbounds %struct.GPR, %struct.GPR* %2846, i32 0, i32 33
  %2848 = getelementptr inbounds %struct.Reg, %struct.Reg* %2847, i32 0, i32 0
  %PC.i1741 = bitcast %union.anon* %2848 to i64*
  %2849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2850 = getelementptr inbounds %struct.GPR, %struct.GPR* %2849, i32 0, i32 1
  %2851 = getelementptr inbounds %struct.Reg, %struct.Reg* %2850, i32 0, i32 0
  %RAX.i1742 = bitcast %union.anon* %2851 to i64*
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2853 = getelementptr inbounds %struct.GPR, %struct.GPR* %2852, i32 0, i32 5
  %2854 = getelementptr inbounds %struct.Reg, %struct.Reg* %2853, i32 0, i32 0
  %RCX.i1743 = bitcast %union.anon* %2854 to i64*
  %2855 = load i64, i64* %RCX.i1743
  %2856 = add i64 %2855, 12099168
  %2857 = load i64, i64* %PC.i1741
  %2858 = add i64 %2857, 8
  store i64 %2858, i64* %PC.i1741
  %2859 = inttoptr i64 %2856 to i8*
  %2860 = load i8, i8* %2859
  %2861 = zext i8 %2860 to i64
  store i64 %2861, i64* %RAX.i1742, align 8
  store %struct.Memory* %loadMem_40b424, %struct.Memory** %MEMORY
  %loadMem_40b42c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2863 = getelementptr inbounds %struct.GPR, %struct.GPR* %2862, i32 0, i32 33
  %2864 = getelementptr inbounds %struct.Reg, %struct.Reg* %2863, i32 0, i32 0
  %PC.i1739 = bitcast %union.anon* %2864 to i64*
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2866 = getelementptr inbounds %struct.GPR, %struct.GPR* %2865, i32 0, i32 1
  %2867 = getelementptr inbounds %struct.Reg, %struct.Reg* %2866, i32 0, i32 0
  %EAX.i1740 = bitcast %union.anon* %2867 to i32*
  %2868 = load i32, i32* %EAX.i1740
  %2869 = zext i32 %2868 to i64
  %2870 = load i64, i64* %PC.i1739
  %2871 = add i64 %2870, 3
  store i64 %2871, i64* %PC.i1739
  %2872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2872, align 1
  %2873 = and i32 %2868, 255
  %2874 = call i32 @llvm.ctpop.i32(i32 %2873)
  %2875 = trunc i32 %2874 to i8
  %2876 = and i8 %2875, 1
  %2877 = xor i8 %2876, 1
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2877, i8* %2878, align 1
  %2879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2879, align 1
  %2880 = icmp eq i32 %2868, 0
  %2881 = zext i1 %2880 to i8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2881, i8* %2882, align 1
  %2883 = lshr i32 %2868, 31
  %2884 = trunc i32 %2883 to i8
  %2885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2884, i8* %2885, align 1
  %2886 = lshr i32 %2868, 31
  %2887 = xor i32 %2883, %2886
  %2888 = add i32 %2887, %2886
  %2889 = icmp eq i32 %2888, 2
  %2890 = zext i1 %2889 to i8
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2890, i8* %2891, align 1
  store %struct.Memory* %loadMem_40b42c, %struct.Memory** %MEMORY
  %loadMem_40b42f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2893 = getelementptr inbounds %struct.GPR, %struct.GPR* %2892, i32 0, i32 33
  %2894 = getelementptr inbounds %struct.Reg, %struct.Reg* %2893, i32 0, i32 0
  %PC.i1738 = bitcast %union.anon* %2894 to i64*
  %2895 = load i64, i64* %PC.i1738
  %2896 = add i64 %2895, 324
  %2897 = load i64, i64* %PC.i1738
  %2898 = add i64 %2897, 6
  %2899 = load i64, i64* %PC.i1738
  %2900 = add i64 %2899, 6
  store i64 %2900, i64* %PC.i1738
  %2901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2902 = load i8, i8* %2901, align 1
  %2903 = icmp eq i8 %2902, 0
  %2904 = zext i1 %2903 to i8
  store i8 %2904, i8* %BRANCH_TAKEN, align 1
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2906 = select i1 %2903, i64 %2896, i64 %2898
  store i64 %2906, i64* %2905, align 8
  store %struct.Memory* %loadMem_40b42f, %struct.Memory** %MEMORY
  %loadBr_40b42f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b42f = icmp eq i8 %loadBr_40b42f, 1
  br i1 %cmpBr_40b42f, label %block_.L_40b573, label %block_40b435

block_40b435:                                     ; preds = %block_.L_40b41b
  %loadMem_40b435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2908 = getelementptr inbounds %struct.GPR, %struct.GPR* %2907, i32 0, i32 33
  %2909 = getelementptr inbounds %struct.Reg, %struct.Reg* %2908, i32 0, i32 0
  %PC.i1736 = bitcast %union.anon* %2909 to i64*
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2911 = getelementptr inbounds %struct.GPR, %struct.GPR* %2910, i32 0, i32 15
  %2912 = getelementptr inbounds %struct.Reg, %struct.Reg* %2911, i32 0, i32 0
  %RBP.i1737 = bitcast %union.anon* %2912 to i64*
  %2913 = load i64, i64* %RBP.i1737
  %2914 = sub i64 %2913, 16
  %2915 = load i64, i64* %PC.i1736
  %2916 = add i64 %2915, 4
  store i64 %2916, i64* %PC.i1736
  %2917 = inttoptr i64 %2914 to i32*
  %2918 = load i32, i32* %2917
  %2919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2919, align 1
  %2920 = and i32 %2918, 255
  %2921 = call i32 @llvm.ctpop.i32(i32 %2920)
  %2922 = trunc i32 %2921 to i8
  %2923 = and i8 %2922, 1
  %2924 = xor i8 %2923, 1
  %2925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2924, i8* %2925, align 1
  %2926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2926, align 1
  %2927 = icmp eq i32 %2918, 0
  %2928 = zext i1 %2927 to i8
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2928, i8* %2929, align 1
  %2930 = lshr i32 %2918, 31
  %2931 = trunc i32 %2930 to i8
  %2932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2931, i8* %2932, align 1
  %2933 = lshr i32 %2918, 31
  %2934 = xor i32 %2930, %2933
  %2935 = add i32 %2934, %2933
  %2936 = icmp eq i32 %2935, 2
  %2937 = zext i1 %2936 to i8
  %2938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2937, i8* %2938, align 1
  store %struct.Memory* %loadMem_40b435, %struct.Memory** %MEMORY
  %loadMem_40b439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2940 = getelementptr inbounds %struct.GPR, %struct.GPR* %2939, i32 0, i32 33
  %2941 = getelementptr inbounds %struct.Reg, %struct.Reg* %2940, i32 0, i32 0
  %PC.i1735 = bitcast %union.anon* %2941 to i64*
  %2942 = load i64, i64* %PC.i1735
  %2943 = add i64 %2942, 309
  %2944 = load i64, i64* %PC.i1735
  %2945 = add i64 %2944, 6
  %2946 = load i64, i64* %PC.i1735
  %2947 = add i64 %2946, 6
  store i64 %2947, i64* %PC.i1735
  %2948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2949 = load i8, i8* %2948, align 1
  %2950 = icmp eq i8 %2949, 0
  %2951 = zext i1 %2950 to i8
  store i8 %2951, i8* %BRANCH_TAKEN, align 1
  %2952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2953 = select i1 %2950, i64 %2943, i64 %2945
  store i64 %2953, i64* %2952, align 8
  store %struct.Memory* %loadMem_40b439, %struct.Memory** %MEMORY
  %loadBr_40b439 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b439 = icmp eq i8 %loadBr_40b439, 1
  br i1 %cmpBr_40b439, label %block_.L_40b56e, label %block_40b43f

block_40b43f:                                     ; preds = %block_40b435
  %loadMem_40b43f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2955 = getelementptr inbounds %struct.GPR, %struct.GPR* %2954, i32 0, i32 33
  %2956 = getelementptr inbounds %struct.Reg, %struct.Reg* %2955, i32 0, i32 0
  %PC.i1732 = bitcast %union.anon* %2956 to i64*
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2958 = getelementptr inbounds %struct.GPR, %struct.GPR* %2957, i32 0, i32 1
  %2959 = getelementptr inbounds %struct.Reg, %struct.Reg* %2958, i32 0, i32 0
  %RAX.i1733 = bitcast %union.anon* %2959 to i64*
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2961 = getelementptr inbounds %struct.GPR, %struct.GPR* %2960, i32 0, i32 15
  %2962 = getelementptr inbounds %struct.Reg, %struct.Reg* %2961, i32 0, i32 0
  %RBP.i1734 = bitcast %union.anon* %2962 to i64*
  %2963 = load i64, i64* %RBP.i1734
  %2964 = sub i64 %2963, 4
  %2965 = load i64, i64* %PC.i1732
  %2966 = add i64 %2965, 3
  store i64 %2966, i64* %PC.i1732
  %2967 = inttoptr i64 %2964 to i32*
  %2968 = load i32, i32* %2967
  %2969 = zext i32 %2968 to i64
  store i64 %2969, i64* %RAX.i1733, align 8
  store %struct.Memory* %loadMem_40b43f, %struct.Memory** %MEMORY
  %loadMem_40b442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2971 = getelementptr inbounds %struct.GPR, %struct.GPR* %2970, i32 0, i32 33
  %2972 = getelementptr inbounds %struct.Reg, %struct.Reg* %2971, i32 0, i32 0
  %PC.i1730 = bitcast %union.anon* %2972 to i64*
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2974 = getelementptr inbounds %struct.GPR, %struct.GPR* %2973, i32 0, i32 1
  %2975 = getelementptr inbounds %struct.Reg, %struct.Reg* %2974, i32 0, i32 0
  %RAX.i1731 = bitcast %union.anon* %2975 to i64*
  %2976 = load i64, i64* %RAX.i1731
  %2977 = load i64, i64* %PC.i1730
  %2978 = add i64 %2977, 3
  store i64 %2978, i64* %PC.i1730
  %2979 = trunc i64 %2976 to i32
  %2980 = add i32 20, %2979
  %2981 = zext i32 %2980 to i64
  store i64 %2981, i64* %RAX.i1731, align 8
  %2982 = icmp ult i32 %2980, %2979
  %2983 = icmp ult i32 %2980, 20
  %2984 = or i1 %2982, %2983
  %2985 = zext i1 %2984 to i8
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2985, i8* %2986, align 1
  %2987 = and i32 %2980, 255
  %2988 = call i32 @llvm.ctpop.i32(i32 %2987)
  %2989 = trunc i32 %2988 to i8
  %2990 = and i8 %2989, 1
  %2991 = xor i8 %2990, 1
  %2992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2991, i8* %2992, align 1
  %2993 = xor i64 20, %2976
  %2994 = trunc i64 %2993 to i32
  %2995 = xor i32 %2994, %2980
  %2996 = lshr i32 %2995, 4
  %2997 = trunc i32 %2996 to i8
  %2998 = and i8 %2997, 1
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2998, i8* %2999, align 1
  %3000 = icmp eq i32 %2980, 0
  %3001 = zext i1 %3000 to i8
  %3002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3001, i8* %3002, align 1
  %3003 = lshr i32 %2980, 31
  %3004 = trunc i32 %3003 to i8
  %3005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3004, i8* %3005, align 1
  %3006 = lshr i32 %2979, 31
  %3007 = xor i32 %3003, %3006
  %3008 = add i32 %3007, %3003
  %3009 = icmp eq i32 %3008, 2
  %3010 = zext i1 %3009 to i8
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3010, i8* %3011, align 1
  store %struct.Memory* %loadMem_40b442, %struct.Memory** %MEMORY
  %loadMem_40b445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3013 = getelementptr inbounds %struct.GPR, %struct.GPR* %3012, i32 0, i32 33
  %3014 = getelementptr inbounds %struct.Reg, %struct.Reg* %3013, i32 0, i32 0
  %PC.i1728 = bitcast %union.anon* %3014 to i64*
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3016 = getelementptr inbounds %struct.GPR, %struct.GPR* %3015, i32 0, i32 1
  %3017 = getelementptr inbounds %struct.Reg, %struct.Reg* %3016, i32 0, i32 0
  %RAX.i1729 = bitcast %union.anon* %3017 to i64*
  %3018 = load i64, i64* %RAX.i1729
  %3019 = load i64, i64* %PC.i1728
  %3020 = add i64 %3019, 3
  store i64 %3020, i64* %PC.i1728
  %3021 = trunc i64 %3018 to i32
  %3022 = add i32 20, %3021
  %3023 = zext i32 %3022 to i64
  store i64 %3023, i64* %RAX.i1729, align 8
  %3024 = icmp ult i32 %3022, %3021
  %3025 = icmp ult i32 %3022, 20
  %3026 = or i1 %3024, %3025
  %3027 = zext i1 %3026 to i8
  %3028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3027, i8* %3028, align 1
  %3029 = and i32 %3022, 255
  %3030 = call i32 @llvm.ctpop.i32(i32 %3029)
  %3031 = trunc i32 %3030 to i8
  %3032 = and i8 %3031, 1
  %3033 = xor i8 %3032, 1
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3033, i8* %3034, align 1
  %3035 = xor i64 20, %3018
  %3036 = trunc i64 %3035 to i32
  %3037 = xor i32 %3036, %3022
  %3038 = lshr i32 %3037, 4
  %3039 = trunc i32 %3038 to i8
  %3040 = and i8 %3039, 1
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3040, i8* %3041, align 1
  %3042 = icmp eq i32 %3022, 0
  %3043 = zext i1 %3042 to i8
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3043, i8* %3044, align 1
  %3045 = lshr i32 %3022, 31
  %3046 = trunc i32 %3045 to i8
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3046, i8* %3047, align 1
  %3048 = lshr i32 %3021, 31
  %3049 = xor i32 %3045, %3048
  %3050 = add i32 %3049, %3045
  %3051 = icmp eq i32 %3050, 2
  %3052 = zext i1 %3051 to i8
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3052, i8* %3053, align 1
  store %struct.Memory* %loadMem_40b445, %struct.Memory** %MEMORY
  %loadMem_40b448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3055 = getelementptr inbounds %struct.GPR, %struct.GPR* %3054, i32 0, i32 33
  %3056 = getelementptr inbounds %struct.Reg, %struct.Reg* %3055, i32 0, i32 0
  %PC.i1725 = bitcast %union.anon* %3056 to i64*
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3058 = getelementptr inbounds %struct.GPR, %struct.GPR* %3057, i32 0, i32 1
  %3059 = getelementptr inbounds %struct.Reg, %struct.Reg* %3058, i32 0, i32 0
  %EAX.i1726 = bitcast %union.anon* %3059 to i32*
  %3060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3061 = getelementptr inbounds %struct.GPR, %struct.GPR* %3060, i32 0, i32 5
  %3062 = getelementptr inbounds %struct.Reg, %struct.Reg* %3061, i32 0, i32 0
  %RCX.i1727 = bitcast %union.anon* %3062 to i64*
  %3063 = load i32, i32* %EAX.i1726
  %3064 = zext i32 %3063 to i64
  %3065 = load i64, i64* %PC.i1725
  %3066 = add i64 %3065, 3
  store i64 %3066, i64* %PC.i1725
  %3067 = shl i64 %3064, 32
  %3068 = ashr exact i64 %3067, 32
  store i64 %3068, i64* %RCX.i1727, align 8
  store %struct.Memory* %loadMem_40b448, %struct.Memory** %MEMORY
  %loadMem_40b44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3070 = getelementptr inbounds %struct.GPR, %struct.GPR* %3069, i32 0, i32 33
  %3071 = getelementptr inbounds %struct.Reg, %struct.Reg* %3070, i32 0, i32 0
  %PC.i1722 = bitcast %union.anon* %3071 to i64*
  %3072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3073 = getelementptr inbounds %struct.GPR, %struct.GPR* %3072, i32 0, i32 1
  %3074 = getelementptr inbounds %struct.Reg, %struct.Reg* %3073, i32 0, i32 0
  %RAX.i1723 = bitcast %union.anon* %3074 to i64*
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3076 = getelementptr inbounds %struct.GPR, %struct.GPR* %3075, i32 0, i32 5
  %3077 = getelementptr inbounds %struct.Reg, %struct.Reg* %3076, i32 0, i32 0
  %RCX.i1724 = bitcast %union.anon* %3077 to i64*
  %3078 = load i64, i64* %RCX.i1724
  %3079 = add i64 %3078, 12099168
  %3080 = load i64, i64* %PC.i1722
  %3081 = add i64 %3080, 8
  store i64 %3081, i64* %PC.i1722
  %3082 = inttoptr i64 %3079 to i8*
  %3083 = load i8, i8* %3082
  %3084 = zext i8 %3083 to i64
  store i64 %3084, i64* %RAX.i1723, align 8
  store %struct.Memory* %loadMem_40b44b, %struct.Memory** %MEMORY
  %loadMem_40b453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3086 = getelementptr inbounds %struct.GPR, %struct.GPR* %3085, i32 0, i32 33
  %3087 = getelementptr inbounds %struct.Reg, %struct.Reg* %3086, i32 0, i32 0
  %PC.i1719 = bitcast %union.anon* %3087 to i64*
  %3088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3089 = getelementptr inbounds %struct.GPR, %struct.GPR* %3088, i32 0, i32 1
  %3090 = getelementptr inbounds %struct.Reg, %struct.Reg* %3089, i32 0, i32 0
  %EAX.i1720 = bitcast %union.anon* %3090 to i32*
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3092 = getelementptr inbounds %struct.GPR, %struct.GPR* %3091, i32 0, i32 15
  %3093 = getelementptr inbounds %struct.Reg, %struct.Reg* %3092, i32 0, i32 0
  %RBP.i1721 = bitcast %union.anon* %3093 to i64*
  %3094 = load i32, i32* %EAX.i1720
  %3095 = zext i32 %3094 to i64
  %3096 = load i64, i64* %RBP.i1721
  %3097 = sub i64 %3096, 20
  %3098 = load i64, i64* %PC.i1719
  %3099 = add i64 %3098, 3
  store i64 %3099, i64* %PC.i1719
  %3100 = inttoptr i64 %3097 to i32*
  %3101 = load i32, i32* %3100
  %3102 = sub i32 %3094, %3101
  %3103 = icmp ult i32 %3094, %3101
  %3104 = zext i1 %3103 to i8
  %3105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3104, i8* %3105, align 1
  %3106 = and i32 %3102, 255
  %3107 = call i32 @llvm.ctpop.i32(i32 %3106)
  %3108 = trunc i32 %3107 to i8
  %3109 = and i8 %3108, 1
  %3110 = xor i8 %3109, 1
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3110, i8* %3111, align 1
  %3112 = xor i32 %3101, %3094
  %3113 = xor i32 %3112, %3102
  %3114 = lshr i32 %3113, 4
  %3115 = trunc i32 %3114 to i8
  %3116 = and i8 %3115, 1
  %3117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3116, i8* %3117, align 1
  %3118 = icmp eq i32 %3102, 0
  %3119 = zext i1 %3118 to i8
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3119, i8* %3120, align 1
  %3121 = lshr i32 %3102, 31
  %3122 = trunc i32 %3121 to i8
  %3123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3122, i8* %3123, align 1
  %3124 = lshr i32 %3094, 31
  %3125 = lshr i32 %3101, 31
  %3126 = xor i32 %3125, %3124
  %3127 = xor i32 %3121, %3124
  %3128 = add i32 %3127, %3126
  %3129 = icmp eq i32 %3128, 2
  %3130 = zext i1 %3129 to i8
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3130, i8* %3131, align 1
  store %struct.Memory* %loadMem_40b453, %struct.Memory** %MEMORY
  %loadMem_40b456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3133 = getelementptr inbounds %struct.GPR, %struct.GPR* %3132, i32 0, i32 33
  %3134 = getelementptr inbounds %struct.Reg, %struct.Reg* %3133, i32 0, i32 0
  %PC.i1718 = bitcast %union.anon* %3134 to i64*
  %3135 = load i64, i64* %PC.i1718
  %3136 = add i64 %3135, 34
  %3137 = load i64, i64* %PC.i1718
  %3138 = add i64 %3137, 6
  %3139 = load i64, i64* %PC.i1718
  %3140 = add i64 %3139, 6
  store i64 %3140, i64* %PC.i1718
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3142 = load i8, i8* %3141, align 1
  %3143 = icmp eq i8 %3142, 0
  %3144 = zext i1 %3143 to i8
  store i8 %3144, i8* %BRANCH_TAKEN, align 1
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3146 = select i1 %3143, i64 %3136, i64 %3138
  store i64 %3146, i64* %3145, align 8
  store %struct.Memory* %loadMem_40b456, %struct.Memory** %MEMORY
  %loadBr_40b456 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b456 = icmp eq i8 %loadBr_40b456, 1
  br i1 %cmpBr_40b456, label %block_.L_40b478, label %block_40b45c

block_40b45c:                                     ; preds = %block_40b43f
  %loadMem_40b45c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3148 = getelementptr inbounds %struct.GPR, %struct.GPR* %3147, i32 0, i32 33
  %3149 = getelementptr inbounds %struct.Reg, %struct.Reg* %3148, i32 0, i32 0
  %PC.i1715 = bitcast %union.anon* %3149 to i64*
  %3150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3151 = getelementptr inbounds %struct.GPR, %struct.GPR* %3150, i32 0, i32 1
  %3152 = getelementptr inbounds %struct.Reg, %struct.Reg* %3151, i32 0, i32 0
  %RAX.i1716 = bitcast %union.anon* %3152 to i64*
  %3153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3154 = getelementptr inbounds %struct.GPR, %struct.GPR* %3153, i32 0, i32 15
  %3155 = getelementptr inbounds %struct.Reg, %struct.Reg* %3154, i32 0, i32 0
  %RBP.i1717 = bitcast %union.anon* %3155 to i64*
  %3156 = load i64, i64* %RBP.i1717
  %3157 = sub i64 %3156, 4
  %3158 = load i64, i64* %PC.i1715
  %3159 = add i64 %3158, 3
  store i64 %3159, i64* %PC.i1715
  %3160 = inttoptr i64 %3157 to i32*
  %3161 = load i32, i32* %3160
  %3162 = zext i32 %3161 to i64
  store i64 %3162, i64* %RAX.i1716, align 8
  store %struct.Memory* %loadMem_40b45c, %struct.Memory** %MEMORY
  %loadMem_40b45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3164 = getelementptr inbounds %struct.GPR, %struct.GPR* %3163, i32 0, i32 33
  %3165 = getelementptr inbounds %struct.Reg, %struct.Reg* %3164, i32 0, i32 0
  %PC.i1713 = bitcast %union.anon* %3165 to i64*
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 1
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %RAX.i1714 = bitcast %union.anon* %3168 to i64*
  %3169 = load i64, i64* %RAX.i1714
  %3170 = load i64, i64* %PC.i1713
  %3171 = add i64 %3170, 3
  store i64 %3171, i64* %PC.i1713
  %3172 = trunc i64 %3169 to i32
  %3173 = add i32 20, %3172
  %3174 = zext i32 %3173 to i64
  store i64 %3174, i64* %RAX.i1714, align 8
  %3175 = icmp ult i32 %3173, %3172
  %3176 = icmp ult i32 %3173, 20
  %3177 = or i1 %3175, %3176
  %3178 = zext i1 %3177 to i8
  %3179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3178, i8* %3179, align 1
  %3180 = and i32 %3173, 255
  %3181 = call i32 @llvm.ctpop.i32(i32 %3180)
  %3182 = trunc i32 %3181 to i8
  %3183 = and i8 %3182, 1
  %3184 = xor i8 %3183, 1
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3184, i8* %3185, align 1
  %3186 = xor i64 20, %3169
  %3187 = trunc i64 %3186 to i32
  %3188 = xor i32 %3187, %3173
  %3189 = lshr i32 %3188, 4
  %3190 = trunc i32 %3189 to i8
  %3191 = and i8 %3190, 1
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3191, i8* %3192, align 1
  %3193 = icmp eq i32 %3173, 0
  %3194 = zext i1 %3193 to i8
  %3195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3194, i8* %3195, align 1
  %3196 = lshr i32 %3173, 31
  %3197 = trunc i32 %3196 to i8
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3197, i8* %3198, align 1
  %3199 = lshr i32 %3172, 31
  %3200 = xor i32 %3196, %3199
  %3201 = add i32 %3200, %3196
  %3202 = icmp eq i32 %3201, 2
  %3203 = zext i1 %3202 to i8
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3203, i8* %3204, align 1
  store %struct.Memory* %loadMem_40b45f, %struct.Memory** %MEMORY
  %loadMem_40b462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3206 = getelementptr inbounds %struct.GPR, %struct.GPR* %3205, i32 0, i32 33
  %3207 = getelementptr inbounds %struct.Reg, %struct.Reg* %3206, i32 0, i32 0
  %PC.i1711 = bitcast %union.anon* %3207 to i64*
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3209 = getelementptr inbounds %struct.GPR, %struct.GPR* %3208, i32 0, i32 1
  %3210 = getelementptr inbounds %struct.Reg, %struct.Reg* %3209, i32 0, i32 0
  %RAX.i1712 = bitcast %union.anon* %3210 to i64*
  %3211 = load i64, i64* %RAX.i1712
  %3212 = load i64, i64* %PC.i1711
  %3213 = add i64 %3212, 3
  store i64 %3213, i64* %PC.i1711
  %3214 = trunc i64 %3211 to i32
  %3215 = add i32 20, %3214
  %3216 = zext i32 %3215 to i64
  store i64 %3216, i64* %RAX.i1712, align 8
  %3217 = icmp ult i32 %3215, %3214
  %3218 = icmp ult i32 %3215, 20
  %3219 = or i1 %3217, %3218
  %3220 = zext i1 %3219 to i8
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3220, i8* %3221, align 1
  %3222 = and i32 %3215, 255
  %3223 = call i32 @llvm.ctpop.i32(i32 %3222)
  %3224 = trunc i32 %3223 to i8
  %3225 = and i8 %3224, 1
  %3226 = xor i8 %3225, 1
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3226, i8* %3227, align 1
  %3228 = xor i64 20, %3211
  %3229 = trunc i64 %3228 to i32
  %3230 = xor i32 %3229, %3215
  %3231 = lshr i32 %3230, 4
  %3232 = trunc i32 %3231 to i8
  %3233 = and i8 %3232, 1
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3233, i8* %3234, align 1
  %3235 = icmp eq i32 %3215, 0
  %3236 = zext i1 %3235 to i8
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3236, i8* %3237, align 1
  %3238 = lshr i32 %3215, 31
  %3239 = trunc i32 %3238 to i8
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3239, i8* %3240, align 1
  %3241 = lshr i32 %3214, 31
  %3242 = xor i32 %3238, %3241
  %3243 = add i32 %3242, %3238
  %3244 = icmp eq i32 %3243, 2
  %3245 = zext i1 %3244 to i8
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3245, i8* %3246, align 1
  store %struct.Memory* %loadMem_40b462, %struct.Memory** %MEMORY
  %loadMem_40b465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3248 = getelementptr inbounds %struct.GPR, %struct.GPR* %3247, i32 0, i32 33
  %3249 = getelementptr inbounds %struct.Reg, %struct.Reg* %3248, i32 0, i32 0
  %PC.i1708 = bitcast %union.anon* %3249 to i64*
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3251 = getelementptr inbounds %struct.GPR, %struct.GPR* %3250, i32 0, i32 1
  %3252 = getelementptr inbounds %struct.Reg, %struct.Reg* %3251, i32 0, i32 0
  %EAX.i1709 = bitcast %union.anon* %3252 to i32*
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3254 = getelementptr inbounds %struct.GPR, %struct.GPR* %3253, i32 0, i32 5
  %3255 = getelementptr inbounds %struct.Reg, %struct.Reg* %3254, i32 0, i32 0
  %RCX.i1710 = bitcast %union.anon* %3255 to i64*
  %3256 = load i32, i32* %EAX.i1709
  %3257 = zext i32 %3256 to i64
  %3258 = load i64, i64* %PC.i1708
  %3259 = add i64 %3258, 3
  store i64 %3259, i64* %PC.i1708
  %3260 = shl i64 %3257, 32
  %3261 = ashr exact i64 %3260, 32
  store i64 %3261, i64* %RCX.i1710, align 8
  store %struct.Memory* %loadMem_40b465, %struct.Memory** %MEMORY
  %loadMem_40b468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3263 = getelementptr inbounds %struct.GPR, %struct.GPR* %3262, i32 0, i32 33
  %3264 = getelementptr inbounds %struct.Reg, %struct.Reg* %3263, i32 0, i32 0
  %PC.i1705 = bitcast %union.anon* %3264 to i64*
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3266 = getelementptr inbounds %struct.GPR, %struct.GPR* %3265, i32 0, i32 1
  %3267 = getelementptr inbounds %struct.Reg, %struct.Reg* %3266, i32 0, i32 0
  %RAX.i1706 = bitcast %union.anon* %3267 to i64*
  %3268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3269 = getelementptr inbounds %struct.GPR, %struct.GPR* %3268, i32 0, i32 5
  %3270 = getelementptr inbounds %struct.Reg, %struct.Reg* %3269, i32 0, i32 0
  %RCX.i1707 = bitcast %union.anon* %3270 to i64*
  %3271 = load i64, i64* %RCX.i1707
  %3272 = mul i64 %3271, 4
  %3273 = add i64 %3272, 11187184
  %3274 = load i64, i64* %PC.i1705
  %3275 = add i64 %3274, 7
  store i64 %3275, i64* %PC.i1705
  %3276 = inttoptr i64 %3273 to i32*
  %3277 = load i32, i32* %3276
  %3278 = zext i32 %3277 to i64
  store i64 %3278, i64* %RAX.i1706, align 8
  store %struct.Memory* %loadMem_40b468, %struct.Memory** %MEMORY
  %loadMem_40b46f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3280 = getelementptr inbounds %struct.GPR, %struct.GPR* %3279, i32 0, i32 33
  %3281 = getelementptr inbounds %struct.Reg, %struct.Reg* %3280, i32 0, i32 0
  %PC.i1702 = bitcast %union.anon* %3281 to i64*
  %3282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3283 = getelementptr inbounds %struct.GPR, %struct.GPR* %3282, i32 0, i32 1
  %3284 = getelementptr inbounds %struct.Reg, %struct.Reg* %3283, i32 0, i32 0
  %EAX.i1703 = bitcast %union.anon* %3284 to i32*
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3286 = getelementptr inbounds %struct.GPR, %struct.GPR* %3285, i32 0, i32 15
  %3287 = getelementptr inbounds %struct.Reg, %struct.Reg* %3286, i32 0, i32 0
  %RBP.i1704 = bitcast %union.anon* %3287 to i64*
  %3288 = load i32, i32* %EAX.i1703
  %3289 = zext i32 %3288 to i64
  %3290 = load i64, i64* %RBP.i1704
  %3291 = sub i64 %3290, 8
  %3292 = load i64, i64* %PC.i1702
  %3293 = add i64 %3292, 3
  store i64 %3293, i64* %PC.i1702
  %3294 = inttoptr i64 %3291 to i32*
  %3295 = load i32, i32* %3294
  %3296 = sub i32 %3288, %3295
  %3297 = icmp ult i32 %3288, %3295
  %3298 = zext i1 %3297 to i8
  %3299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3298, i8* %3299, align 1
  %3300 = and i32 %3296, 255
  %3301 = call i32 @llvm.ctpop.i32(i32 %3300)
  %3302 = trunc i32 %3301 to i8
  %3303 = and i8 %3302, 1
  %3304 = xor i8 %3303, 1
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3304, i8* %3305, align 1
  %3306 = xor i32 %3295, %3288
  %3307 = xor i32 %3306, %3296
  %3308 = lshr i32 %3307, 4
  %3309 = trunc i32 %3308 to i8
  %3310 = and i8 %3309, 1
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3310, i8* %3311, align 1
  %3312 = icmp eq i32 %3296, 0
  %3313 = zext i1 %3312 to i8
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3313, i8* %3314, align 1
  %3315 = lshr i32 %3296, 31
  %3316 = trunc i32 %3315 to i8
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3316, i8* %3317, align 1
  %3318 = lshr i32 %3288, 31
  %3319 = lshr i32 %3295, 31
  %3320 = xor i32 %3319, %3318
  %3321 = xor i32 %3315, %3318
  %3322 = add i32 %3321, %3320
  %3323 = icmp eq i32 %3322, 2
  %3324 = zext i1 %3323 to i8
  %3325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3324, i8* %3325, align 1
  store %struct.Memory* %loadMem_40b46f, %struct.Memory** %MEMORY
  %loadMem_40b472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3327 = getelementptr inbounds %struct.GPR, %struct.GPR* %3326, i32 0, i32 33
  %3328 = getelementptr inbounds %struct.Reg, %struct.Reg* %3327, i32 0, i32 0
  %PC.i1701 = bitcast %union.anon* %3328 to i64*
  %3329 = load i64, i64* %PC.i1701
  %3330 = add i64 %3329, 252
  %3331 = load i64, i64* %PC.i1701
  %3332 = add i64 %3331, 6
  %3333 = load i64, i64* %PC.i1701
  %3334 = add i64 %3333, 6
  store i64 %3334, i64* %PC.i1701
  %3335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3336 = load i8, i8* %3335, align 1
  store i8 %3336, i8* %BRANCH_TAKEN, align 1
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3338 = icmp ne i8 %3336, 0
  %3339 = select i1 %3338, i64 %3330, i64 %3332
  store i64 %3339, i64* %3337, align 8
  store %struct.Memory* %loadMem_40b472, %struct.Memory** %MEMORY
  %loadBr_40b472 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b472 = icmp eq i8 %loadBr_40b472, 1
  br i1 %cmpBr_40b472, label %block_.L_40b56e, label %block_.L_40b478

block_.L_40b478:                                  ; preds = %block_40b45c, %block_40b43f
  %loadMem_40b478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3341 = getelementptr inbounds %struct.GPR, %struct.GPR* %3340, i32 0, i32 33
  %3342 = getelementptr inbounds %struct.Reg, %struct.Reg* %3341, i32 0, i32 0
  %PC.i1698 = bitcast %union.anon* %3342 to i64*
  %3343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3344 = getelementptr inbounds %struct.GPR, %struct.GPR* %3343, i32 0, i32 1
  %3345 = getelementptr inbounds %struct.Reg, %struct.Reg* %3344, i32 0, i32 0
  %RAX.i1699 = bitcast %union.anon* %3345 to i64*
  %3346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3347 = getelementptr inbounds %struct.GPR, %struct.GPR* %3346, i32 0, i32 15
  %3348 = getelementptr inbounds %struct.Reg, %struct.Reg* %3347, i32 0, i32 0
  %RBP.i1700 = bitcast %union.anon* %3348 to i64*
  %3349 = load i64, i64* %RBP.i1700
  %3350 = sub i64 %3349, 4
  %3351 = load i64, i64* %PC.i1698
  %3352 = add i64 %3351, 3
  store i64 %3352, i64* %PC.i1698
  %3353 = inttoptr i64 %3350 to i32*
  %3354 = load i32, i32* %3353
  %3355 = zext i32 %3354 to i64
  store i64 %3355, i64* %RAX.i1699, align 8
  store %struct.Memory* %loadMem_40b478, %struct.Memory** %MEMORY
  %loadMem_40b47b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3357 = getelementptr inbounds %struct.GPR, %struct.GPR* %3356, i32 0, i32 33
  %3358 = getelementptr inbounds %struct.Reg, %struct.Reg* %3357, i32 0, i32 0
  %PC.i1696 = bitcast %union.anon* %3358 to i64*
  %3359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3360 = getelementptr inbounds %struct.GPR, %struct.GPR* %3359, i32 0, i32 1
  %3361 = getelementptr inbounds %struct.Reg, %struct.Reg* %3360, i32 0, i32 0
  %RAX.i1697 = bitcast %union.anon* %3361 to i64*
  %3362 = load i64, i64* %RAX.i1697
  %3363 = load i64, i64* %PC.i1696
  %3364 = add i64 %3363, 3
  store i64 %3364, i64* %PC.i1696
  %3365 = trunc i64 %3362 to i32
  %3366 = add i32 20, %3365
  %3367 = zext i32 %3366 to i64
  store i64 %3367, i64* %RAX.i1697, align 8
  %3368 = icmp ult i32 %3366, %3365
  %3369 = icmp ult i32 %3366, 20
  %3370 = or i1 %3368, %3369
  %3371 = zext i1 %3370 to i8
  %3372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3371, i8* %3372, align 1
  %3373 = and i32 %3366, 255
  %3374 = call i32 @llvm.ctpop.i32(i32 %3373)
  %3375 = trunc i32 %3374 to i8
  %3376 = and i8 %3375, 1
  %3377 = xor i8 %3376, 1
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3377, i8* %3378, align 1
  %3379 = xor i64 20, %3362
  %3380 = trunc i64 %3379 to i32
  %3381 = xor i32 %3380, %3366
  %3382 = lshr i32 %3381, 4
  %3383 = trunc i32 %3382 to i8
  %3384 = and i8 %3383, 1
  %3385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3384, i8* %3385, align 1
  %3386 = icmp eq i32 %3366, 0
  %3387 = zext i1 %3386 to i8
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3387, i8* %3388, align 1
  %3389 = lshr i32 %3366, 31
  %3390 = trunc i32 %3389 to i8
  %3391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3390, i8* %3391, align 1
  %3392 = lshr i32 %3365, 31
  %3393 = xor i32 %3389, %3392
  %3394 = add i32 %3393, %3389
  %3395 = icmp eq i32 %3394, 2
  %3396 = zext i1 %3395 to i8
  %3397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3396, i8* %3397, align 1
  store %struct.Memory* %loadMem_40b47b, %struct.Memory** %MEMORY
  %loadMem_40b47e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3399 = getelementptr inbounds %struct.GPR, %struct.GPR* %3398, i32 0, i32 33
  %3400 = getelementptr inbounds %struct.Reg, %struct.Reg* %3399, i32 0, i32 0
  %PC.i1694 = bitcast %union.anon* %3400 to i64*
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3402 = getelementptr inbounds %struct.GPR, %struct.GPR* %3401, i32 0, i32 1
  %3403 = getelementptr inbounds %struct.Reg, %struct.Reg* %3402, i32 0, i32 0
  %RAX.i1695 = bitcast %union.anon* %3403 to i64*
  %3404 = load i64, i64* %RAX.i1695
  %3405 = load i64, i64* %PC.i1694
  %3406 = add i64 %3405, 3
  store i64 %3406, i64* %PC.i1694
  %3407 = trunc i64 %3404 to i32
  %3408 = sub i32 %3407, 1
  %3409 = zext i32 %3408 to i64
  store i64 %3409, i64* %RAX.i1695, align 8
  %3410 = icmp ult i32 %3407, 1
  %3411 = zext i1 %3410 to i8
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3411, i8* %3412, align 1
  %3413 = and i32 %3408, 255
  %3414 = call i32 @llvm.ctpop.i32(i32 %3413)
  %3415 = trunc i32 %3414 to i8
  %3416 = and i8 %3415, 1
  %3417 = xor i8 %3416, 1
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3417, i8* %3418, align 1
  %3419 = xor i64 1, %3404
  %3420 = trunc i64 %3419 to i32
  %3421 = xor i32 %3420, %3408
  %3422 = lshr i32 %3421, 4
  %3423 = trunc i32 %3422 to i8
  %3424 = and i8 %3423, 1
  %3425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3424, i8* %3425, align 1
  %3426 = icmp eq i32 %3408, 0
  %3427 = zext i1 %3426 to i8
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3427, i8* %3428, align 1
  %3429 = lshr i32 %3408, 31
  %3430 = trunc i32 %3429 to i8
  %3431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3430, i8* %3431, align 1
  %3432 = lshr i32 %3407, 31
  %3433 = xor i32 %3429, %3432
  %3434 = add i32 %3433, %3432
  %3435 = icmp eq i32 %3434, 2
  %3436 = zext i1 %3435 to i8
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3436, i8* %3437, align 1
  store %struct.Memory* %loadMem_40b47e, %struct.Memory** %MEMORY
  %loadMem_40b481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3439 = getelementptr inbounds %struct.GPR, %struct.GPR* %3438, i32 0, i32 33
  %3440 = getelementptr inbounds %struct.Reg, %struct.Reg* %3439, i32 0, i32 0
  %PC.i1691 = bitcast %union.anon* %3440 to i64*
  %3441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3442 = getelementptr inbounds %struct.GPR, %struct.GPR* %3441, i32 0, i32 1
  %3443 = getelementptr inbounds %struct.Reg, %struct.Reg* %3442, i32 0, i32 0
  %EAX.i1692 = bitcast %union.anon* %3443 to i32*
  %3444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3445 = getelementptr inbounds %struct.GPR, %struct.GPR* %3444, i32 0, i32 5
  %3446 = getelementptr inbounds %struct.Reg, %struct.Reg* %3445, i32 0, i32 0
  %RCX.i1693 = bitcast %union.anon* %3446 to i64*
  %3447 = load i32, i32* %EAX.i1692
  %3448 = zext i32 %3447 to i64
  %3449 = load i64, i64* %PC.i1691
  %3450 = add i64 %3449, 3
  store i64 %3450, i64* %PC.i1691
  %3451 = shl i64 %3448, 32
  %3452 = ashr exact i64 %3451, 32
  store i64 %3452, i64* %RCX.i1693, align 8
  store %struct.Memory* %loadMem_40b481, %struct.Memory** %MEMORY
  %loadMem_40b484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3454 = getelementptr inbounds %struct.GPR, %struct.GPR* %3453, i32 0, i32 33
  %3455 = getelementptr inbounds %struct.Reg, %struct.Reg* %3454, i32 0, i32 0
  %PC.i1688 = bitcast %union.anon* %3455 to i64*
  %3456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3457 = getelementptr inbounds %struct.GPR, %struct.GPR* %3456, i32 0, i32 1
  %3458 = getelementptr inbounds %struct.Reg, %struct.Reg* %3457, i32 0, i32 0
  %RAX.i1689 = bitcast %union.anon* %3458 to i64*
  %3459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3460 = getelementptr inbounds %struct.GPR, %struct.GPR* %3459, i32 0, i32 5
  %3461 = getelementptr inbounds %struct.Reg, %struct.Reg* %3460, i32 0, i32 0
  %RCX.i1690 = bitcast %union.anon* %3461 to i64*
  %3462 = load i64, i64* %RCX.i1690
  %3463 = add i64 %3462, 12099168
  %3464 = load i64, i64* %PC.i1688
  %3465 = add i64 %3464, 8
  store i64 %3465, i64* %PC.i1688
  %3466 = inttoptr i64 %3463 to i8*
  %3467 = load i8, i8* %3466
  %3468 = zext i8 %3467 to i64
  store i64 %3468, i64* %RAX.i1689, align 8
  store %struct.Memory* %loadMem_40b484, %struct.Memory** %MEMORY
  %loadMem_40b48c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3470 = getelementptr inbounds %struct.GPR, %struct.GPR* %3469, i32 0, i32 33
  %3471 = getelementptr inbounds %struct.Reg, %struct.Reg* %3470, i32 0, i32 0
  %PC.i1685 = bitcast %union.anon* %3471 to i64*
  %3472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3473 = getelementptr inbounds %struct.GPR, %struct.GPR* %3472, i32 0, i32 1
  %3474 = getelementptr inbounds %struct.Reg, %struct.Reg* %3473, i32 0, i32 0
  %EAX.i1686 = bitcast %union.anon* %3474 to i32*
  %3475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3476 = getelementptr inbounds %struct.GPR, %struct.GPR* %3475, i32 0, i32 15
  %3477 = getelementptr inbounds %struct.Reg, %struct.Reg* %3476, i32 0, i32 0
  %RBP.i1687 = bitcast %union.anon* %3477 to i64*
  %3478 = load i32, i32* %EAX.i1686
  %3479 = zext i32 %3478 to i64
  %3480 = load i64, i64* %RBP.i1687
  %3481 = sub i64 %3480, 20
  %3482 = load i64, i64* %PC.i1685
  %3483 = add i64 %3482, 3
  store i64 %3483, i64* %PC.i1685
  %3484 = inttoptr i64 %3481 to i32*
  %3485 = load i32, i32* %3484
  %3486 = sub i32 %3478, %3485
  %3487 = icmp ult i32 %3478, %3485
  %3488 = zext i1 %3487 to i8
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3488, i8* %3489, align 1
  %3490 = and i32 %3486, 255
  %3491 = call i32 @llvm.ctpop.i32(i32 %3490)
  %3492 = trunc i32 %3491 to i8
  %3493 = and i8 %3492, 1
  %3494 = xor i8 %3493, 1
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3494, i8* %3495, align 1
  %3496 = xor i32 %3485, %3478
  %3497 = xor i32 %3496, %3486
  %3498 = lshr i32 %3497, 4
  %3499 = trunc i32 %3498 to i8
  %3500 = and i8 %3499, 1
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3500, i8* %3501, align 1
  %3502 = icmp eq i32 %3486, 0
  %3503 = zext i1 %3502 to i8
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3503, i8* %3504, align 1
  %3505 = lshr i32 %3486, 31
  %3506 = trunc i32 %3505 to i8
  %3507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3506, i8* %3507, align 1
  %3508 = lshr i32 %3478, 31
  %3509 = lshr i32 %3485, 31
  %3510 = xor i32 %3509, %3508
  %3511 = xor i32 %3505, %3508
  %3512 = add i32 %3511, %3510
  %3513 = icmp eq i32 %3512, 2
  %3514 = zext i1 %3513 to i8
  %3515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3514, i8* %3515, align 1
  store %struct.Memory* %loadMem_40b48c, %struct.Memory** %MEMORY
  %loadMem_40b48f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3517 = getelementptr inbounds %struct.GPR, %struct.GPR* %3516, i32 0, i32 33
  %3518 = getelementptr inbounds %struct.Reg, %struct.Reg* %3517, i32 0, i32 0
  %PC.i1684 = bitcast %union.anon* %3518 to i64*
  %3519 = load i64, i64* %PC.i1684
  %3520 = add i64 %3519, 34
  %3521 = load i64, i64* %PC.i1684
  %3522 = add i64 %3521, 6
  %3523 = load i64, i64* %PC.i1684
  %3524 = add i64 %3523, 6
  store i64 %3524, i64* %PC.i1684
  %3525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3526 = load i8, i8* %3525, align 1
  %3527 = icmp eq i8 %3526, 0
  %3528 = zext i1 %3527 to i8
  store i8 %3528, i8* %BRANCH_TAKEN, align 1
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3530 = select i1 %3527, i64 %3520, i64 %3522
  store i64 %3530, i64* %3529, align 8
  store %struct.Memory* %loadMem_40b48f, %struct.Memory** %MEMORY
  %loadBr_40b48f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b48f = icmp eq i8 %loadBr_40b48f, 1
  br i1 %cmpBr_40b48f, label %block_.L_40b4b1, label %block_40b495

block_40b495:                                     ; preds = %block_.L_40b478
  %loadMem_40b495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3532 = getelementptr inbounds %struct.GPR, %struct.GPR* %3531, i32 0, i32 33
  %3533 = getelementptr inbounds %struct.Reg, %struct.Reg* %3532, i32 0, i32 0
  %PC.i1681 = bitcast %union.anon* %3533 to i64*
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3535 = getelementptr inbounds %struct.GPR, %struct.GPR* %3534, i32 0, i32 1
  %3536 = getelementptr inbounds %struct.Reg, %struct.Reg* %3535, i32 0, i32 0
  %RAX.i1682 = bitcast %union.anon* %3536 to i64*
  %3537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3538 = getelementptr inbounds %struct.GPR, %struct.GPR* %3537, i32 0, i32 15
  %3539 = getelementptr inbounds %struct.Reg, %struct.Reg* %3538, i32 0, i32 0
  %RBP.i1683 = bitcast %union.anon* %3539 to i64*
  %3540 = load i64, i64* %RBP.i1683
  %3541 = sub i64 %3540, 4
  %3542 = load i64, i64* %PC.i1681
  %3543 = add i64 %3542, 3
  store i64 %3543, i64* %PC.i1681
  %3544 = inttoptr i64 %3541 to i32*
  %3545 = load i32, i32* %3544
  %3546 = zext i32 %3545 to i64
  store i64 %3546, i64* %RAX.i1682, align 8
  store %struct.Memory* %loadMem_40b495, %struct.Memory** %MEMORY
  %loadMem_40b498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3548 = getelementptr inbounds %struct.GPR, %struct.GPR* %3547, i32 0, i32 33
  %3549 = getelementptr inbounds %struct.Reg, %struct.Reg* %3548, i32 0, i32 0
  %PC.i1679 = bitcast %union.anon* %3549 to i64*
  %3550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3551 = getelementptr inbounds %struct.GPR, %struct.GPR* %3550, i32 0, i32 1
  %3552 = getelementptr inbounds %struct.Reg, %struct.Reg* %3551, i32 0, i32 0
  %RAX.i1680 = bitcast %union.anon* %3552 to i64*
  %3553 = load i64, i64* %RAX.i1680
  %3554 = load i64, i64* %PC.i1679
  %3555 = add i64 %3554, 3
  store i64 %3555, i64* %PC.i1679
  %3556 = trunc i64 %3553 to i32
  %3557 = add i32 20, %3556
  %3558 = zext i32 %3557 to i64
  store i64 %3558, i64* %RAX.i1680, align 8
  %3559 = icmp ult i32 %3557, %3556
  %3560 = icmp ult i32 %3557, 20
  %3561 = or i1 %3559, %3560
  %3562 = zext i1 %3561 to i8
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3562, i8* %3563, align 1
  %3564 = and i32 %3557, 255
  %3565 = call i32 @llvm.ctpop.i32(i32 %3564)
  %3566 = trunc i32 %3565 to i8
  %3567 = and i8 %3566, 1
  %3568 = xor i8 %3567, 1
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3568, i8* %3569, align 1
  %3570 = xor i64 20, %3553
  %3571 = trunc i64 %3570 to i32
  %3572 = xor i32 %3571, %3557
  %3573 = lshr i32 %3572, 4
  %3574 = trunc i32 %3573 to i8
  %3575 = and i8 %3574, 1
  %3576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3575, i8* %3576, align 1
  %3577 = icmp eq i32 %3557, 0
  %3578 = zext i1 %3577 to i8
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3578, i8* %3579, align 1
  %3580 = lshr i32 %3557, 31
  %3581 = trunc i32 %3580 to i8
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3581, i8* %3582, align 1
  %3583 = lshr i32 %3556, 31
  %3584 = xor i32 %3580, %3583
  %3585 = add i32 %3584, %3580
  %3586 = icmp eq i32 %3585, 2
  %3587 = zext i1 %3586 to i8
  %3588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3587, i8* %3588, align 1
  store %struct.Memory* %loadMem_40b498, %struct.Memory** %MEMORY
  %loadMem_40b49b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3590 = getelementptr inbounds %struct.GPR, %struct.GPR* %3589, i32 0, i32 33
  %3591 = getelementptr inbounds %struct.Reg, %struct.Reg* %3590, i32 0, i32 0
  %PC.i1677 = bitcast %union.anon* %3591 to i64*
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3593 = getelementptr inbounds %struct.GPR, %struct.GPR* %3592, i32 0, i32 1
  %3594 = getelementptr inbounds %struct.Reg, %struct.Reg* %3593, i32 0, i32 0
  %RAX.i1678 = bitcast %union.anon* %3594 to i64*
  %3595 = load i64, i64* %RAX.i1678
  %3596 = load i64, i64* %PC.i1677
  %3597 = add i64 %3596, 3
  store i64 %3597, i64* %PC.i1677
  %3598 = trunc i64 %3595 to i32
  %3599 = sub i32 %3598, 1
  %3600 = zext i32 %3599 to i64
  store i64 %3600, i64* %RAX.i1678, align 8
  %3601 = icmp ult i32 %3598, 1
  %3602 = zext i1 %3601 to i8
  %3603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3602, i8* %3603, align 1
  %3604 = and i32 %3599, 255
  %3605 = call i32 @llvm.ctpop.i32(i32 %3604)
  %3606 = trunc i32 %3605 to i8
  %3607 = and i8 %3606, 1
  %3608 = xor i8 %3607, 1
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3608, i8* %3609, align 1
  %3610 = xor i64 1, %3595
  %3611 = trunc i64 %3610 to i32
  %3612 = xor i32 %3611, %3599
  %3613 = lshr i32 %3612, 4
  %3614 = trunc i32 %3613 to i8
  %3615 = and i8 %3614, 1
  %3616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3615, i8* %3616, align 1
  %3617 = icmp eq i32 %3599, 0
  %3618 = zext i1 %3617 to i8
  %3619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3618, i8* %3619, align 1
  %3620 = lshr i32 %3599, 31
  %3621 = trunc i32 %3620 to i8
  %3622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3621, i8* %3622, align 1
  %3623 = lshr i32 %3598, 31
  %3624 = xor i32 %3620, %3623
  %3625 = add i32 %3624, %3623
  %3626 = icmp eq i32 %3625, 2
  %3627 = zext i1 %3626 to i8
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3627, i8* %3628, align 1
  store %struct.Memory* %loadMem_40b49b, %struct.Memory** %MEMORY
  %loadMem_40b49e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3630 = getelementptr inbounds %struct.GPR, %struct.GPR* %3629, i32 0, i32 33
  %3631 = getelementptr inbounds %struct.Reg, %struct.Reg* %3630, i32 0, i32 0
  %PC.i1674 = bitcast %union.anon* %3631 to i64*
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3633 = getelementptr inbounds %struct.GPR, %struct.GPR* %3632, i32 0, i32 1
  %3634 = getelementptr inbounds %struct.Reg, %struct.Reg* %3633, i32 0, i32 0
  %EAX.i1675 = bitcast %union.anon* %3634 to i32*
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3636 = getelementptr inbounds %struct.GPR, %struct.GPR* %3635, i32 0, i32 5
  %3637 = getelementptr inbounds %struct.Reg, %struct.Reg* %3636, i32 0, i32 0
  %RCX.i1676 = bitcast %union.anon* %3637 to i64*
  %3638 = load i32, i32* %EAX.i1675
  %3639 = zext i32 %3638 to i64
  %3640 = load i64, i64* %PC.i1674
  %3641 = add i64 %3640, 3
  store i64 %3641, i64* %PC.i1674
  %3642 = shl i64 %3639, 32
  %3643 = ashr exact i64 %3642, 32
  store i64 %3643, i64* %RCX.i1676, align 8
  store %struct.Memory* %loadMem_40b49e, %struct.Memory** %MEMORY
  %loadMem_40b4a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3645 = getelementptr inbounds %struct.GPR, %struct.GPR* %3644, i32 0, i32 33
  %3646 = getelementptr inbounds %struct.Reg, %struct.Reg* %3645, i32 0, i32 0
  %PC.i1671 = bitcast %union.anon* %3646 to i64*
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3648 = getelementptr inbounds %struct.GPR, %struct.GPR* %3647, i32 0, i32 1
  %3649 = getelementptr inbounds %struct.Reg, %struct.Reg* %3648, i32 0, i32 0
  %RAX.i1672 = bitcast %union.anon* %3649 to i64*
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3651 = getelementptr inbounds %struct.GPR, %struct.GPR* %3650, i32 0, i32 5
  %3652 = getelementptr inbounds %struct.Reg, %struct.Reg* %3651, i32 0, i32 0
  %RCX.i1673 = bitcast %union.anon* %3652 to i64*
  %3653 = load i64, i64* %RCX.i1673
  %3654 = mul i64 %3653, 4
  %3655 = add i64 %3654, 11187184
  %3656 = load i64, i64* %PC.i1671
  %3657 = add i64 %3656, 7
  store i64 %3657, i64* %PC.i1671
  %3658 = inttoptr i64 %3655 to i32*
  %3659 = load i32, i32* %3658
  %3660 = zext i32 %3659 to i64
  store i64 %3660, i64* %RAX.i1672, align 8
  store %struct.Memory* %loadMem_40b4a1, %struct.Memory** %MEMORY
  %loadMem_40b4a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3662 = getelementptr inbounds %struct.GPR, %struct.GPR* %3661, i32 0, i32 33
  %3663 = getelementptr inbounds %struct.Reg, %struct.Reg* %3662, i32 0, i32 0
  %PC.i1668 = bitcast %union.anon* %3663 to i64*
  %3664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3665 = getelementptr inbounds %struct.GPR, %struct.GPR* %3664, i32 0, i32 1
  %3666 = getelementptr inbounds %struct.Reg, %struct.Reg* %3665, i32 0, i32 0
  %EAX.i1669 = bitcast %union.anon* %3666 to i32*
  %3667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3668 = getelementptr inbounds %struct.GPR, %struct.GPR* %3667, i32 0, i32 15
  %3669 = getelementptr inbounds %struct.Reg, %struct.Reg* %3668, i32 0, i32 0
  %RBP.i1670 = bitcast %union.anon* %3669 to i64*
  %3670 = load i32, i32* %EAX.i1669
  %3671 = zext i32 %3670 to i64
  %3672 = load i64, i64* %RBP.i1670
  %3673 = sub i64 %3672, 8
  %3674 = load i64, i64* %PC.i1668
  %3675 = add i64 %3674, 3
  store i64 %3675, i64* %PC.i1668
  %3676 = inttoptr i64 %3673 to i32*
  %3677 = load i32, i32* %3676
  %3678 = sub i32 %3670, %3677
  %3679 = icmp ult i32 %3670, %3677
  %3680 = zext i1 %3679 to i8
  %3681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3680, i8* %3681, align 1
  %3682 = and i32 %3678, 255
  %3683 = call i32 @llvm.ctpop.i32(i32 %3682)
  %3684 = trunc i32 %3683 to i8
  %3685 = and i8 %3684, 1
  %3686 = xor i8 %3685, 1
  %3687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3686, i8* %3687, align 1
  %3688 = xor i32 %3677, %3670
  %3689 = xor i32 %3688, %3678
  %3690 = lshr i32 %3689, 4
  %3691 = trunc i32 %3690 to i8
  %3692 = and i8 %3691, 1
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3692, i8* %3693, align 1
  %3694 = icmp eq i32 %3678, 0
  %3695 = zext i1 %3694 to i8
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3695, i8* %3696, align 1
  %3697 = lshr i32 %3678, 31
  %3698 = trunc i32 %3697 to i8
  %3699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3698, i8* %3699, align 1
  %3700 = lshr i32 %3670, 31
  %3701 = lshr i32 %3677, 31
  %3702 = xor i32 %3701, %3700
  %3703 = xor i32 %3697, %3700
  %3704 = add i32 %3703, %3702
  %3705 = icmp eq i32 %3704, 2
  %3706 = zext i1 %3705 to i8
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3706, i8* %3707, align 1
  store %struct.Memory* %loadMem_40b4a8, %struct.Memory** %MEMORY
  %loadMem_40b4ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3709 = getelementptr inbounds %struct.GPR, %struct.GPR* %3708, i32 0, i32 33
  %3710 = getelementptr inbounds %struct.Reg, %struct.Reg* %3709, i32 0, i32 0
  %PC.i1667 = bitcast %union.anon* %3710 to i64*
  %3711 = load i64, i64* %PC.i1667
  %3712 = add i64 %3711, 195
  %3713 = load i64, i64* %PC.i1667
  %3714 = add i64 %3713, 6
  %3715 = load i64, i64* %PC.i1667
  %3716 = add i64 %3715, 6
  store i64 %3716, i64* %PC.i1667
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3718 = load i8, i8* %3717, align 1
  store i8 %3718, i8* %BRANCH_TAKEN, align 1
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3720 = icmp ne i8 %3718, 0
  %3721 = select i1 %3720, i64 %3712, i64 %3714
  store i64 %3721, i64* %3719, align 8
  store %struct.Memory* %loadMem_40b4ab, %struct.Memory** %MEMORY
  %loadBr_40b4ab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b4ab = icmp eq i8 %loadBr_40b4ab, 1
  br i1 %cmpBr_40b4ab, label %block_.L_40b56e, label %block_.L_40b4b1

block_.L_40b4b1:                                  ; preds = %block_40b495, %block_.L_40b478
  %loadMem_40b4b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3723 = getelementptr inbounds %struct.GPR, %struct.GPR* %3722, i32 0, i32 33
  %3724 = getelementptr inbounds %struct.Reg, %struct.Reg* %3723, i32 0, i32 0
  %PC.i1664 = bitcast %union.anon* %3724 to i64*
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3726 = getelementptr inbounds %struct.GPR, %struct.GPR* %3725, i32 0, i32 1
  %3727 = getelementptr inbounds %struct.Reg, %struct.Reg* %3726, i32 0, i32 0
  %RAX.i1665 = bitcast %union.anon* %3727 to i64*
  %3728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3729 = getelementptr inbounds %struct.GPR, %struct.GPR* %3728, i32 0, i32 15
  %3730 = getelementptr inbounds %struct.Reg, %struct.Reg* %3729, i32 0, i32 0
  %RBP.i1666 = bitcast %union.anon* %3730 to i64*
  %3731 = load i64, i64* %RBP.i1666
  %3732 = sub i64 %3731, 4
  %3733 = load i64, i64* %PC.i1664
  %3734 = add i64 %3733, 3
  store i64 %3734, i64* %PC.i1664
  %3735 = inttoptr i64 %3732 to i32*
  %3736 = load i32, i32* %3735
  %3737 = zext i32 %3736 to i64
  store i64 %3737, i64* %RAX.i1665, align 8
  store %struct.Memory* %loadMem_40b4b1, %struct.Memory** %MEMORY
  %loadMem_40b4b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3739 = getelementptr inbounds %struct.GPR, %struct.GPR* %3738, i32 0, i32 33
  %3740 = getelementptr inbounds %struct.Reg, %struct.Reg* %3739, i32 0, i32 0
  %PC.i1662 = bitcast %union.anon* %3740 to i64*
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3742 = getelementptr inbounds %struct.GPR, %struct.GPR* %3741, i32 0, i32 1
  %3743 = getelementptr inbounds %struct.Reg, %struct.Reg* %3742, i32 0, i32 0
  %RAX.i1663 = bitcast %union.anon* %3743 to i64*
  %3744 = load i64, i64* %RAX.i1663
  %3745 = load i64, i64* %PC.i1662
  %3746 = add i64 %3745, 3
  store i64 %3746, i64* %PC.i1662
  %3747 = trunc i64 %3744 to i32
  %3748 = add i32 20, %3747
  %3749 = zext i32 %3748 to i64
  store i64 %3749, i64* %RAX.i1663, align 8
  %3750 = icmp ult i32 %3748, %3747
  %3751 = icmp ult i32 %3748, 20
  %3752 = or i1 %3750, %3751
  %3753 = zext i1 %3752 to i8
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3753, i8* %3754, align 1
  %3755 = and i32 %3748, 255
  %3756 = call i32 @llvm.ctpop.i32(i32 %3755)
  %3757 = trunc i32 %3756 to i8
  %3758 = and i8 %3757, 1
  %3759 = xor i8 %3758, 1
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3759, i8* %3760, align 1
  %3761 = xor i64 20, %3744
  %3762 = trunc i64 %3761 to i32
  %3763 = xor i32 %3762, %3748
  %3764 = lshr i32 %3763, 4
  %3765 = trunc i32 %3764 to i8
  %3766 = and i8 %3765, 1
  %3767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3766, i8* %3767, align 1
  %3768 = icmp eq i32 %3748, 0
  %3769 = zext i1 %3768 to i8
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3769, i8* %3770, align 1
  %3771 = lshr i32 %3748, 31
  %3772 = trunc i32 %3771 to i8
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3772, i8* %3773, align 1
  %3774 = lshr i32 %3747, 31
  %3775 = xor i32 %3771, %3774
  %3776 = add i32 %3775, %3771
  %3777 = icmp eq i32 %3776, 2
  %3778 = zext i1 %3777 to i8
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3778, i8* %3779, align 1
  store %struct.Memory* %loadMem_40b4b4, %struct.Memory** %MEMORY
  %loadMem_40b4b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3781 = getelementptr inbounds %struct.GPR, %struct.GPR* %3780, i32 0, i32 33
  %3782 = getelementptr inbounds %struct.Reg, %struct.Reg* %3781, i32 0, i32 0
  %PC.i1660 = bitcast %union.anon* %3782 to i64*
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3784 = getelementptr inbounds %struct.GPR, %struct.GPR* %3783, i32 0, i32 1
  %3785 = getelementptr inbounds %struct.Reg, %struct.Reg* %3784, i32 0, i32 0
  %RAX.i1661 = bitcast %union.anon* %3785 to i64*
  %3786 = load i64, i64* %RAX.i1661
  %3787 = load i64, i64* %PC.i1660
  %3788 = add i64 %3787, 3
  store i64 %3788, i64* %PC.i1660
  %3789 = trunc i64 %3786 to i32
  %3790 = add i32 1, %3789
  %3791 = zext i32 %3790 to i64
  store i64 %3791, i64* %RAX.i1661, align 8
  %3792 = icmp ult i32 %3790, %3789
  %3793 = icmp ult i32 %3790, 1
  %3794 = or i1 %3792, %3793
  %3795 = zext i1 %3794 to i8
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3795, i8* %3796, align 1
  %3797 = and i32 %3790, 255
  %3798 = call i32 @llvm.ctpop.i32(i32 %3797)
  %3799 = trunc i32 %3798 to i8
  %3800 = and i8 %3799, 1
  %3801 = xor i8 %3800, 1
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3801, i8* %3802, align 1
  %3803 = xor i64 1, %3786
  %3804 = trunc i64 %3803 to i32
  %3805 = xor i32 %3804, %3790
  %3806 = lshr i32 %3805, 4
  %3807 = trunc i32 %3806 to i8
  %3808 = and i8 %3807, 1
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3808, i8* %3809, align 1
  %3810 = icmp eq i32 %3790, 0
  %3811 = zext i1 %3810 to i8
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3811, i8* %3812, align 1
  %3813 = lshr i32 %3790, 31
  %3814 = trunc i32 %3813 to i8
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3814, i8* %3815, align 1
  %3816 = lshr i32 %3789, 31
  %3817 = xor i32 %3813, %3816
  %3818 = add i32 %3817, %3813
  %3819 = icmp eq i32 %3818, 2
  %3820 = zext i1 %3819 to i8
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3820, i8* %3821, align 1
  store %struct.Memory* %loadMem_40b4b7, %struct.Memory** %MEMORY
  %loadMem_40b4ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3823 = getelementptr inbounds %struct.GPR, %struct.GPR* %3822, i32 0, i32 33
  %3824 = getelementptr inbounds %struct.Reg, %struct.Reg* %3823, i32 0, i32 0
  %PC.i1657 = bitcast %union.anon* %3824 to i64*
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3826 = getelementptr inbounds %struct.GPR, %struct.GPR* %3825, i32 0, i32 1
  %3827 = getelementptr inbounds %struct.Reg, %struct.Reg* %3826, i32 0, i32 0
  %EAX.i1658 = bitcast %union.anon* %3827 to i32*
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3829 = getelementptr inbounds %struct.GPR, %struct.GPR* %3828, i32 0, i32 5
  %3830 = getelementptr inbounds %struct.Reg, %struct.Reg* %3829, i32 0, i32 0
  %RCX.i1659 = bitcast %union.anon* %3830 to i64*
  %3831 = load i32, i32* %EAX.i1658
  %3832 = zext i32 %3831 to i64
  %3833 = load i64, i64* %PC.i1657
  %3834 = add i64 %3833, 3
  store i64 %3834, i64* %PC.i1657
  %3835 = shl i64 %3832, 32
  %3836 = ashr exact i64 %3835, 32
  store i64 %3836, i64* %RCX.i1659, align 8
  store %struct.Memory* %loadMem_40b4ba, %struct.Memory** %MEMORY
  %loadMem_40b4bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3838 = getelementptr inbounds %struct.GPR, %struct.GPR* %3837, i32 0, i32 33
  %3839 = getelementptr inbounds %struct.Reg, %struct.Reg* %3838, i32 0, i32 0
  %PC.i1654 = bitcast %union.anon* %3839 to i64*
  %3840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3841 = getelementptr inbounds %struct.GPR, %struct.GPR* %3840, i32 0, i32 1
  %3842 = getelementptr inbounds %struct.Reg, %struct.Reg* %3841, i32 0, i32 0
  %RAX.i1655 = bitcast %union.anon* %3842 to i64*
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3844 = getelementptr inbounds %struct.GPR, %struct.GPR* %3843, i32 0, i32 5
  %3845 = getelementptr inbounds %struct.Reg, %struct.Reg* %3844, i32 0, i32 0
  %RCX.i1656 = bitcast %union.anon* %3845 to i64*
  %3846 = load i64, i64* %RCX.i1656
  %3847 = add i64 %3846, 12099168
  %3848 = load i64, i64* %PC.i1654
  %3849 = add i64 %3848, 8
  store i64 %3849, i64* %PC.i1654
  %3850 = inttoptr i64 %3847 to i8*
  %3851 = load i8, i8* %3850
  %3852 = zext i8 %3851 to i64
  store i64 %3852, i64* %RAX.i1655, align 8
  store %struct.Memory* %loadMem_40b4bd, %struct.Memory** %MEMORY
  %loadMem_40b4c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3854 = getelementptr inbounds %struct.GPR, %struct.GPR* %3853, i32 0, i32 33
  %3855 = getelementptr inbounds %struct.Reg, %struct.Reg* %3854, i32 0, i32 0
  %PC.i1651 = bitcast %union.anon* %3855 to i64*
  %3856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3857 = getelementptr inbounds %struct.GPR, %struct.GPR* %3856, i32 0, i32 1
  %3858 = getelementptr inbounds %struct.Reg, %struct.Reg* %3857, i32 0, i32 0
  %EAX.i1652 = bitcast %union.anon* %3858 to i32*
  %3859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3860 = getelementptr inbounds %struct.GPR, %struct.GPR* %3859, i32 0, i32 15
  %3861 = getelementptr inbounds %struct.Reg, %struct.Reg* %3860, i32 0, i32 0
  %RBP.i1653 = bitcast %union.anon* %3861 to i64*
  %3862 = load i32, i32* %EAX.i1652
  %3863 = zext i32 %3862 to i64
  %3864 = load i64, i64* %RBP.i1653
  %3865 = sub i64 %3864, 20
  %3866 = load i64, i64* %PC.i1651
  %3867 = add i64 %3866, 3
  store i64 %3867, i64* %PC.i1651
  %3868 = inttoptr i64 %3865 to i32*
  %3869 = load i32, i32* %3868
  %3870 = sub i32 %3862, %3869
  %3871 = icmp ult i32 %3862, %3869
  %3872 = zext i1 %3871 to i8
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3872, i8* %3873, align 1
  %3874 = and i32 %3870, 255
  %3875 = call i32 @llvm.ctpop.i32(i32 %3874)
  %3876 = trunc i32 %3875 to i8
  %3877 = and i8 %3876, 1
  %3878 = xor i8 %3877, 1
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3878, i8* %3879, align 1
  %3880 = xor i32 %3869, %3862
  %3881 = xor i32 %3880, %3870
  %3882 = lshr i32 %3881, 4
  %3883 = trunc i32 %3882 to i8
  %3884 = and i8 %3883, 1
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3884, i8* %3885, align 1
  %3886 = icmp eq i32 %3870, 0
  %3887 = zext i1 %3886 to i8
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3887, i8* %3888, align 1
  %3889 = lshr i32 %3870, 31
  %3890 = trunc i32 %3889 to i8
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3890, i8* %3891, align 1
  %3892 = lshr i32 %3862, 31
  %3893 = lshr i32 %3869, 31
  %3894 = xor i32 %3893, %3892
  %3895 = xor i32 %3889, %3892
  %3896 = add i32 %3895, %3894
  %3897 = icmp eq i32 %3896, 2
  %3898 = zext i1 %3897 to i8
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3898, i8* %3899, align 1
  store %struct.Memory* %loadMem_40b4c5, %struct.Memory** %MEMORY
  %loadMem_40b4c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3901 = getelementptr inbounds %struct.GPR, %struct.GPR* %3900, i32 0, i32 33
  %3902 = getelementptr inbounds %struct.Reg, %struct.Reg* %3901, i32 0, i32 0
  %PC.i1650 = bitcast %union.anon* %3902 to i64*
  %3903 = load i64, i64* %PC.i1650
  %3904 = add i64 %3903, 34
  %3905 = load i64, i64* %PC.i1650
  %3906 = add i64 %3905, 6
  %3907 = load i64, i64* %PC.i1650
  %3908 = add i64 %3907, 6
  store i64 %3908, i64* %PC.i1650
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3910 = load i8, i8* %3909, align 1
  %3911 = icmp eq i8 %3910, 0
  %3912 = zext i1 %3911 to i8
  store i8 %3912, i8* %BRANCH_TAKEN, align 1
  %3913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3914 = select i1 %3911, i64 %3904, i64 %3906
  store i64 %3914, i64* %3913, align 8
  store %struct.Memory* %loadMem_40b4c8, %struct.Memory** %MEMORY
  %loadBr_40b4c8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b4c8 = icmp eq i8 %loadBr_40b4c8, 1
  br i1 %cmpBr_40b4c8, label %block_.L_40b4ea, label %block_40b4ce

block_40b4ce:                                     ; preds = %block_.L_40b4b1
  %loadMem_40b4ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3916 = getelementptr inbounds %struct.GPR, %struct.GPR* %3915, i32 0, i32 33
  %3917 = getelementptr inbounds %struct.Reg, %struct.Reg* %3916, i32 0, i32 0
  %PC.i1647 = bitcast %union.anon* %3917 to i64*
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3919 = getelementptr inbounds %struct.GPR, %struct.GPR* %3918, i32 0, i32 1
  %3920 = getelementptr inbounds %struct.Reg, %struct.Reg* %3919, i32 0, i32 0
  %RAX.i1648 = bitcast %union.anon* %3920 to i64*
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3922 = getelementptr inbounds %struct.GPR, %struct.GPR* %3921, i32 0, i32 15
  %3923 = getelementptr inbounds %struct.Reg, %struct.Reg* %3922, i32 0, i32 0
  %RBP.i1649 = bitcast %union.anon* %3923 to i64*
  %3924 = load i64, i64* %RBP.i1649
  %3925 = sub i64 %3924, 4
  %3926 = load i64, i64* %PC.i1647
  %3927 = add i64 %3926, 3
  store i64 %3927, i64* %PC.i1647
  %3928 = inttoptr i64 %3925 to i32*
  %3929 = load i32, i32* %3928
  %3930 = zext i32 %3929 to i64
  store i64 %3930, i64* %RAX.i1648, align 8
  store %struct.Memory* %loadMem_40b4ce, %struct.Memory** %MEMORY
  %loadMem_40b4d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3932 = getelementptr inbounds %struct.GPR, %struct.GPR* %3931, i32 0, i32 33
  %3933 = getelementptr inbounds %struct.Reg, %struct.Reg* %3932, i32 0, i32 0
  %PC.i1645 = bitcast %union.anon* %3933 to i64*
  %3934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3935 = getelementptr inbounds %struct.GPR, %struct.GPR* %3934, i32 0, i32 1
  %3936 = getelementptr inbounds %struct.Reg, %struct.Reg* %3935, i32 0, i32 0
  %RAX.i1646 = bitcast %union.anon* %3936 to i64*
  %3937 = load i64, i64* %RAX.i1646
  %3938 = load i64, i64* %PC.i1645
  %3939 = add i64 %3938, 3
  store i64 %3939, i64* %PC.i1645
  %3940 = trunc i64 %3937 to i32
  %3941 = add i32 20, %3940
  %3942 = zext i32 %3941 to i64
  store i64 %3942, i64* %RAX.i1646, align 8
  %3943 = icmp ult i32 %3941, %3940
  %3944 = icmp ult i32 %3941, 20
  %3945 = or i1 %3943, %3944
  %3946 = zext i1 %3945 to i8
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3946, i8* %3947, align 1
  %3948 = and i32 %3941, 255
  %3949 = call i32 @llvm.ctpop.i32(i32 %3948)
  %3950 = trunc i32 %3949 to i8
  %3951 = and i8 %3950, 1
  %3952 = xor i8 %3951, 1
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3952, i8* %3953, align 1
  %3954 = xor i64 20, %3937
  %3955 = trunc i64 %3954 to i32
  %3956 = xor i32 %3955, %3941
  %3957 = lshr i32 %3956, 4
  %3958 = trunc i32 %3957 to i8
  %3959 = and i8 %3958, 1
  %3960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3959, i8* %3960, align 1
  %3961 = icmp eq i32 %3941, 0
  %3962 = zext i1 %3961 to i8
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3962, i8* %3963, align 1
  %3964 = lshr i32 %3941, 31
  %3965 = trunc i32 %3964 to i8
  %3966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3965, i8* %3966, align 1
  %3967 = lshr i32 %3940, 31
  %3968 = xor i32 %3964, %3967
  %3969 = add i32 %3968, %3964
  %3970 = icmp eq i32 %3969, 2
  %3971 = zext i1 %3970 to i8
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3971, i8* %3972, align 1
  store %struct.Memory* %loadMem_40b4d1, %struct.Memory** %MEMORY
  %loadMem_40b4d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3974 = getelementptr inbounds %struct.GPR, %struct.GPR* %3973, i32 0, i32 33
  %3975 = getelementptr inbounds %struct.Reg, %struct.Reg* %3974, i32 0, i32 0
  %PC.i1643 = bitcast %union.anon* %3975 to i64*
  %3976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3977 = getelementptr inbounds %struct.GPR, %struct.GPR* %3976, i32 0, i32 1
  %3978 = getelementptr inbounds %struct.Reg, %struct.Reg* %3977, i32 0, i32 0
  %RAX.i1644 = bitcast %union.anon* %3978 to i64*
  %3979 = load i64, i64* %RAX.i1644
  %3980 = load i64, i64* %PC.i1643
  %3981 = add i64 %3980, 3
  store i64 %3981, i64* %PC.i1643
  %3982 = trunc i64 %3979 to i32
  %3983 = add i32 1, %3982
  %3984 = zext i32 %3983 to i64
  store i64 %3984, i64* %RAX.i1644, align 8
  %3985 = icmp ult i32 %3983, %3982
  %3986 = icmp ult i32 %3983, 1
  %3987 = or i1 %3985, %3986
  %3988 = zext i1 %3987 to i8
  %3989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3988, i8* %3989, align 1
  %3990 = and i32 %3983, 255
  %3991 = call i32 @llvm.ctpop.i32(i32 %3990)
  %3992 = trunc i32 %3991 to i8
  %3993 = and i8 %3992, 1
  %3994 = xor i8 %3993, 1
  %3995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3994, i8* %3995, align 1
  %3996 = xor i64 1, %3979
  %3997 = trunc i64 %3996 to i32
  %3998 = xor i32 %3997, %3983
  %3999 = lshr i32 %3998, 4
  %4000 = trunc i32 %3999 to i8
  %4001 = and i8 %4000, 1
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4001, i8* %4002, align 1
  %4003 = icmp eq i32 %3983, 0
  %4004 = zext i1 %4003 to i8
  %4005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4004, i8* %4005, align 1
  %4006 = lshr i32 %3983, 31
  %4007 = trunc i32 %4006 to i8
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4007, i8* %4008, align 1
  %4009 = lshr i32 %3982, 31
  %4010 = xor i32 %4006, %4009
  %4011 = add i32 %4010, %4006
  %4012 = icmp eq i32 %4011, 2
  %4013 = zext i1 %4012 to i8
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4013, i8* %4014, align 1
  store %struct.Memory* %loadMem_40b4d4, %struct.Memory** %MEMORY
  %loadMem_40b4d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4016 = getelementptr inbounds %struct.GPR, %struct.GPR* %4015, i32 0, i32 33
  %4017 = getelementptr inbounds %struct.Reg, %struct.Reg* %4016, i32 0, i32 0
  %PC.i1640 = bitcast %union.anon* %4017 to i64*
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4019 = getelementptr inbounds %struct.GPR, %struct.GPR* %4018, i32 0, i32 1
  %4020 = getelementptr inbounds %struct.Reg, %struct.Reg* %4019, i32 0, i32 0
  %EAX.i1641 = bitcast %union.anon* %4020 to i32*
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4022 = getelementptr inbounds %struct.GPR, %struct.GPR* %4021, i32 0, i32 5
  %4023 = getelementptr inbounds %struct.Reg, %struct.Reg* %4022, i32 0, i32 0
  %RCX.i1642 = bitcast %union.anon* %4023 to i64*
  %4024 = load i32, i32* %EAX.i1641
  %4025 = zext i32 %4024 to i64
  %4026 = load i64, i64* %PC.i1640
  %4027 = add i64 %4026, 3
  store i64 %4027, i64* %PC.i1640
  %4028 = shl i64 %4025, 32
  %4029 = ashr exact i64 %4028, 32
  store i64 %4029, i64* %RCX.i1642, align 8
  store %struct.Memory* %loadMem_40b4d7, %struct.Memory** %MEMORY
  %loadMem_40b4da = load %struct.Memory*, %struct.Memory** %MEMORY
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4031 = getelementptr inbounds %struct.GPR, %struct.GPR* %4030, i32 0, i32 33
  %4032 = getelementptr inbounds %struct.Reg, %struct.Reg* %4031, i32 0, i32 0
  %PC.i1637 = bitcast %union.anon* %4032 to i64*
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4034 = getelementptr inbounds %struct.GPR, %struct.GPR* %4033, i32 0, i32 1
  %4035 = getelementptr inbounds %struct.Reg, %struct.Reg* %4034, i32 0, i32 0
  %RAX.i1638 = bitcast %union.anon* %4035 to i64*
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4037 = getelementptr inbounds %struct.GPR, %struct.GPR* %4036, i32 0, i32 5
  %4038 = getelementptr inbounds %struct.Reg, %struct.Reg* %4037, i32 0, i32 0
  %RCX.i1639 = bitcast %union.anon* %4038 to i64*
  %4039 = load i64, i64* %RCX.i1639
  %4040 = mul i64 %4039, 4
  %4041 = add i64 %4040, 11187184
  %4042 = load i64, i64* %PC.i1637
  %4043 = add i64 %4042, 7
  store i64 %4043, i64* %PC.i1637
  %4044 = inttoptr i64 %4041 to i32*
  %4045 = load i32, i32* %4044
  %4046 = zext i32 %4045 to i64
  store i64 %4046, i64* %RAX.i1638, align 8
  store %struct.Memory* %loadMem_40b4da, %struct.Memory** %MEMORY
  %loadMem_40b4e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4048 = getelementptr inbounds %struct.GPR, %struct.GPR* %4047, i32 0, i32 33
  %4049 = getelementptr inbounds %struct.Reg, %struct.Reg* %4048, i32 0, i32 0
  %PC.i1634 = bitcast %union.anon* %4049 to i64*
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4051 = getelementptr inbounds %struct.GPR, %struct.GPR* %4050, i32 0, i32 1
  %4052 = getelementptr inbounds %struct.Reg, %struct.Reg* %4051, i32 0, i32 0
  %EAX.i1635 = bitcast %union.anon* %4052 to i32*
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4054 = getelementptr inbounds %struct.GPR, %struct.GPR* %4053, i32 0, i32 15
  %4055 = getelementptr inbounds %struct.Reg, %struct.Reg* %4054, i32 0, i32 0
  %RBP.i1636 = bitcast %union.anon* %4055 to i64*
  %4056 = load i32, i32* %EAX.i1635
  %4057 = zext i32 %4056 to i64
  %4058 = load i64, i64* %RBP.i1636
  %4059 = sub i64 %4058, 8
  %4060 = load i64, i64* %PC.i1634
  %4061 = add i64 %4060, 3
  store i64 %4061, i64* %PC.i1634
  %4062 = inttoptr i64 %4059 to i32*
  %4063 = load i32, i32* %4062
  %4064 = sub i32 %4056, %4063
  %4065 = icmp ult i32 %4056, %4063
  %4066 = zext i1 %4065 to i8
  %4067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4066, i8* %4067, align 1
  %4068 = and i32 %4064, 255
  %4069 = call i32 @llvm.ctpop.i32(i32 %4068)
  %4070 = trunc i32 %4069 to i8
  %4071 = and i8 %4070, 1
  %4072 = xor i8 %4071, 1
  %4073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4072, i8* %4073, align 1
  %4074 = xor i32 %4063, %4056
  %4075 = xor i32 %4074, %4064
  %4076 = lshr i32 %4075, 4
  %4077 = trunc i32 %4076 to i8
  %4078 = and i8 %4077, 1
  %4079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4078, i8* %4079, align 1
  %4080 = icmp eq i32 %4064, 0
  %4081 = zext i1 %4080 to i8
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4081, i8* %4082, align 1
  %4083 = lshr i32 %4064, 31
  %4084 = trunc i32 %4083 to i8
  %4085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4084, i8* %4085, align 1
  %4086 = lshr i32 %4056, 31
  %4087 = lshr i32 %4063, 31
  %4088 = xor i32 %4087, %4086
  %4089 = xor i32 %4083, %4086
  %4090 = add i32 %4089, %4088
  %4091 = icmp eq i32 %4090, 2
  %4092 = zext i1 %4091 to i8
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4092, i8* %4093, align 1
  store %struct.Memory* %loadMem_40b4e1, %struct.Memory** %MEMORY
  %loadMem_40b4e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4095 = getelementptr inbounds %struct.GPR, %struct.GPR* %4094, i32 0, i32 33
  %4096 = getelementptr inbounds %struct.Reg, %struct.Reg* %4095, i32 0, i32 0
  %PC.i1633 = bitcast %union.anon* %4096 to i64*
  %4097 = load i64, i64* %PC.i1633
  %4098 = add i64 %4097, 138
  %4099 = load i64, i64* %PC.i1633
  %4100 = add i64 %4099, 6
  %4101 = load i64, i64* %PC.i1633
  %4102 = add i64 %4101, 6
  store i64 %4102, i64* %PC.i1633
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4104 = load i8, i8* %4103, align 1
  store i8 %4104, i8* %BRANCH_TAKEN, align 1
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4106 = icmp ne i8 %4104, 0
  %4107 = select i1 %4106, i64 %4098, i64 %4100
  store i64 %4107, i64* %4105, align 8
  store %struct.Memory* %loadMem_40b4e4, %struct.Memory** %MEMORY
  %loadBr_40b4e4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b4e4 = icmp eq i8 %loadBr_40b4e4, 1
  br i1 %cmpBr_40b4e4, label %block_.L_40b56e, label %block_.L_40b4ea

block_.L_40b4ea:                                  ; preds = %block_40b4ce, %block_.L_40b4b1
  %loadMem_40b4ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %4108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4109 = getelementptr inbounds %struct.GPR, %struct.GPR* %4108, i32 0, i32 33
  %4110 = getelementptr inbounds %struct.Reg, %struct.Reg* %4109, i32 0, i32 0
  %PC.i1632 = bitcast %union.anon* %4110 to i64*
  %4111 = load i64, i64* %PC.i1632
  %4112 = add i64 %4111, 5
  %4113 = load i64, i64* %PC.i1632
  %4114 = add i64 %4113, 5
  store i64 %4114, i64* %PC.i1632
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4112, i64* %4115, align 8
  store %struct.Memory* %loadMem_40b4ea, %struct.Memory** %MEMORY
  br label %block_.L_40b4ef

block_.L_40b4ef:                                  ; preds = %block_.L_40b4ea
  %loadMem_40b4ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4117 = getelementptr inbounds %struct.GPR, %struct.GPR* %4116, i32 0, i32 33
  %4118 = getelementptr inbounds %struct.Reg, %struct.Reg* %4117, i32 0, i32 0
  %PC.i1630 = bitcast %union.anon* %4118 to i64*
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4120 = getelementptr inbounds %struct.GPR, %struct.GPR* %4119, i32 0, i32 1
  %4121 = getelementptr inbounds %struct.Reg, %struct.Reg* %4120, i32 0, i32 0
  %RAX.i1631 = bitcast %union.anon* %4121 to i64*
  %4122 = load i64, i64* %PC.i1630
  %4123 = add i64 %4122, 10
  store i64 %4123, i64* %PC.i1630
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1631, align 8
  store %struct.Memory* %loadMem_40b4ef, %struct.Memory** %MEMORY
  %loadMem_40b4f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4125 = getelementptr inbounds %struct.GPR, %struct.GPR* %4124, i32 0, i32 33
  %4126 = getelementptr inbounds %struct.Reg, %struct.Reg* %4125, i32 0, i32 0
  %PC.i1627 = bitcast %union.anon* %4126 to i64*
  %4127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4128 = getelementptr inbounds %struct.GPR, %struct.GPR* %4127, i32 0, i32 5
  %4129 = getelementptr inbounds %struct.Reg, %struct.Reg* %4128, i32 0, i32 0
  %RCX.i1628 = bitcast %union.anon* %4129 to i64*
  %4130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4131 = getelementptr inbounds %struct.GPR, %struct.GPR* %4130, i32 0, i32 15
  %4132 = getelementptr inbounds %struct.Reg, %struct.Reg* %4131, i32 0, i32 0
  %RBP.i1629 = bitcast %union.anon* %4132 to i64*
  %4133 = load i64, i64* %RBP.i1629
  %4134 = sub i64 %4133, 8
  %4135 = load i64, i64* %PC.i1627
  %4136 = add i64 %4135, 4
  store i64 %4136, i64* %PC.i1627
  %4137 = inttoptr i64 %4134 to i32*
  %4138 = load i32, i32* %4137
  %4139 = sext i32 %4138 to i64
  store i64 %4139, i64* %RCX.i1628, align 8
  store %struct.Memory* %loadMem_40b4f9, %struct.Memory** %MEMORY
  %loadMem_40b4fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4141 = getelementptr inbounds %struct.GPR, %struct.GPR* %4140, i32 0, i32 33
  %4142 = getelementptr inbounds %struct.Reg, %struct.Reg* %4141, i32 0, i32 0
  %PC.i1625 = bitcast %union.anon* %4142 to i64*
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4144 = getelementptr inbounds %struct.GPR, %struct.GPR* %4143, i32 0, i32 5
  %4145 = getelementptr inbounds %struct.Reg, %struct.Reg* %4144, i32 0, i32 0
  %RCX.i1626 = bitcast %union.anon* %4145 to i64*
  %4146 = load i64, i64* %RCX.i1626
  %4147 = load i64, i64* %PC.i1625
  %4148 = add i64 %4147, 7
  store i64 %4148, i64* %PC.i1625
  %4149 = sext i64 %4146 to i128
  %4150 = and i128 %4149, -18446744073709551616
  %4151 = zext i64 %4146 to i128
  %4152 = or i128 %4150, %4151
  %4153 = mul i128 744, %4152
  %4154 = trunc i128 %4153 to i64
  store i64 %4154, i64* %RCX.i1626, align 8
  %4155 = sext i64 %4154 to i128
  %4156 = icmp ne i128 %4155, %4153
  %4157 = zext i1 %4156 to i8
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4157, i8* %4158, align 1
  %4159 = trunc i128 %4153 to i32
  %4160 = and i32 %4159, 255
  %4161 = call i32 @llvm.ctpop.i32(i32 %4160)
  %4162 = trunc i32 %4161 to i8
  %4163 = and i8 %4162, 1
  %4164 = xor i8 %4163, 1
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4164, i8* %4165, align 1
  %4166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4166, align 1
  %4167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4167, align 1
  %4168 = lshr i64 %4154, 63
  %4169 = trunc i64 %4168 to i8
  %4170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4169, i8* %4170, align 1
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4157, i8* %4171, align 1
  store %struct.Memory* %loadMem_40b4fd, %struct.Memory** %MEMORY
  %loadMem_40b504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4173 = getelementptr inbounds %struct.GPR, %struct.GPR* %4172, i32 0, i32 33
  %4174 = getelementptr inbounds %struct.Reg, %struct.Reg* %4173, i32 0, i32 0
  %PC.i1622 = bitcast %union.anon* %4174 to i64*
  %4175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4176 = getelementptr inbounds %struct.GPR, %struct.GPR* %4175, i32 0, i32 1
  %4177 = getelementptr inbounds %struct.Reg, %struct.Reg* %4176, i32 0, i32 0
  %RAX.i1623 = bitcast %union.anon* %4177 to i64*
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4179 = getelementptr inbounds %struct.GPR, %struct.GPR* %4178, i32 0, i32 5
  %4180 = getelementptr inbounds %struct.Reg, %struct.Reg* %4179, i32 0, i32 0
  %RCX.i1624 = bitcast %union.anon* %4180 to i64*
  %4181 = load i64, i64* %RAX.i1623
  %4182 = load i64, i64* %RCX.i1624
  %4183 = load i64, i64* %PC.i1622
  %4184 = add i64 %4183, 3
  store i64 %4184, i64* %PC.i1622
  %4185 = add i64 %4182, %4181
  store i64 %4185, i64* %RAX.i1623, align 8
  %4186 = icmp ult i64 %4185, %4181
  %4187 = icmp ult i64 %4185, %4182
  %4188 = or i1 %4186, %4187
  %4189 = zext i1 %4188 to i8
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4189, i8* %4190, align 1
  %4191 = trunc i64 %4185 to i32
  %4192 = and i32 %4191, 255
  %4193 = call i32 @llvm.ctpop.i32(i32 %4192)
  %4194 = trunc i32 %4193 to i8
  %4195 = and i8 %4194, 1
  %4196 = xor i8 %4195, 1
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4196, i8* %4197, align 1
  %4198 = xor i64 %4182, %4181
  %4199 = xor i64 %4198, %4185
  %4200 = lshr i64 %4199, 4
  %4201 = trunc i64 %4200 to i8
  %4202 = and i8 %4201, 1
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4202, i8* %4203, align 1
  %4204 = icmp eq i64 %4185, 0
  %4205 = zext i1 %4204 to i8
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4205, i8* %4206, align 1
  %4207 = lshr i64 %4185, 63
  %4208 = trunc i64 %4207 to i8
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4208, i8* %4209, align 1
  %4210 = lshr i64 %4181, 63
  %4211 = lshr i64 %4182, 63
  %4212 = xor i64 %4207, %4210
  %4213 = xor i64 %4207, %4211
  %4214 = add i64 %4212, %4213
  %4215 = icmp eq i64 %4214, 2
  %4216 = zext i1 %4215 to i8
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4216, i8* %4217, align 1
  store %struct.Memory* %loadMem_40b504, %struct.Memory** %MEMORY
  %loadMem_40b507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4219 = getelementptr inbounds %struct.GPR, %struct.GPR* %4218, i32 0, i32 33
  %4220 = getelementptr inbounds %struct.Reg, %struct.Reg* %4219, i32 0, i32 0
  %PC.i1620 = bitcast %union.anon* %4220 to i64*
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4222 = getelementptr inbounds %struct.GPR, %struct.GPR* %4221, i32 0, i32 1
  %4223 = getelementptr inbounds %struct.Reg, %struct.Reg* %4222, i32 0, i32 0
  %RAX.i1621 = bitcast %union.anon* %4223 to i64*
  %4224 = load i64, i64* %RAX.i1621
  %4225 = add i64 %4224, 12
  %4226 = load i64, i64* %PC.i1620
  %4227 = add i64 %4226, 4
  store i64 %4227, i64* %PC.i1620
  %4228 = inttoptr i64 %4225 to i32*
  %4229 = load i32, i32* %4228
  %4230 = sub i32 %4229, 20
  %4231 = icmp ult i32 %4229, 20
  %4232 = zext i1 %4231 to i8
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4232, i8* %4233, align 1
  %4234 = and i32 %4230, 255
  %4235 = call i32 @llvm.ctpop.i32(i32 %4234)
  %4236 = trunc i32 %4235 to i8
  %4237 = and i8 %4236, 1
  %4238 = xor i8 %4237, 1
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4238, i8* %4239, align 1
  %4240 = xor i32 %4229, 20
  %4241 = xor i32 %4240, %4230
  %4242 = lshr i32 %4241, 4
  %4243 = trunc i32 %4242 to i8
  %4244 = and i8 %4243, 1
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4244, i8* %4245, align 1
  %4246 = icmp eq i32 %4230, 0
  %4247 = zext i1 %4246 to i8
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4247, i8* %4248, align 1
  %4249 = lshr i32 %4230, 31
  %4250 = trunc i32 %4249 to i8
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4250, i8* %4251, align 1
  %4252 = lshr i32 %4229, 31
  %4253 = xor i32 %4249, %4252
  %4254 = add i32 %4253, %4252
  %4255 = icmp eq i32 %4254, 2
  %4256 = zext i1 %4255 to i8
  %4257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4256, i8* %4257, align 1
  store %struct.Memory* %loadMem_40b507, %struct.Memory** %MEMORY
  %loadMem_40b50b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4259 = getelementptr inbounds %struct.GPR, %struct.GPR* %4258, i32 0, i32 33
  %4260 = getelementptr inbounds %struct.Reg, %struct.Reg* %4259, i32 0, i32 0
  %PC.i1619 = bitcast %union.anon* %4260 to i64*
  %4261 = load i64, i64* %PC.i1619
  %4262 = add i64 %4261, 61
  %4263 = load i64, i64* %PC.i1619
  %4264 = add i64 %4263, 6
  %4265 = load i64, i64* %PC.i1619
  %4266 = add i64 %4265, 6
  store i64 %4266, i64* %PC.i1619
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4268 = load i8, i8* %4267, align 1
  %4269 = icmp ne i8 %4268, 0
  %4270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4271 = load i8, i8* %4270, align 1
  %4272 = icmp ne i8 %4271, 0
  %4273 = xor i1 %4269, %4272
  %4274 = xor i1 %4273, true
  %4275 = zext i1 %4274 to i8
  store i8 %4275, i8* %BRANCH_TAKEN, align 1
  %4276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4277 = select i1 %4273, i64 %4264, i64 %4262
  store i64 %4277, i64* %4276, align 8
  store %struct.Memory* %loadMem_40b50b, %struct.Memory** %MEMORY
  %loadBr_40b50b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b50b = icmp eq i8 %loadBr_40b50b, 1
  br i1 %cmpBr_40b50b, label %block_.L_40b548, label %block_40b511

block_40b511:                                     ; preds = %block_.L_40b4ef
  %loadMem_40b511 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4279 = getelementptr inbounds %struct.GPR, %struct.GPR* %4278, i32 0, i32 33
  %4280 = getelementptr inbounds %struct.Reg, %struct.Reg* %4279, i32 0, i32 0
  %PC.i1617 = bitcast %union.anon* %4280 to i64*
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4282 = getelementptr inbounds %struct.GPR, %struct.GPR* %4281, i32 0, i32 1
  %4283 = getelementptr inbounds %struct.Reg, %struct.Reg* %4282, i32 0, i32 0
  %RAX.i1618 = bitcast %union.anon* %4283 to i64*
  %4284 = load i64, i64* %PC.i1617
  %4285 = add i64 %4284, 10
  store i64 %4285, i64* %PC.i1617
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1618, align 8
  store %struct.Memory* %loadMem_40b511, %struct.Memory** %MEMORY
  %loadMem_40b51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4287 = getelementptr inbounds %struct.GPR, %struct.GPR* %4286, i32 0, i32 33
  %4288 = getelementptr inbounds %struct.Reg, %struct.Reg* %4287, i32 0, i32 0
  %PC.i1614 = bitcast %union.anon* %4288 to i64*
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4290 = getelementptr inbounds %struct.GPR, %struct.GPR* %4289, i32 0, i32 5
  %4291 = getelementptr inbounds %struct.Reg, %struct.Reg* %4290, i32 0, i32 0
  %RCX.i1615 = bitcast %union.anon* %4291 to i64*
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4293 = getelementptr inbounds %struct.GPR, %struct.GPR* %4292, i32 0, i32 15
  %4294 = getelementptr inbounds %struct.Reg, %struct.Reg* %4293, i32 0, i32 0
  %RBP.i1616 = bitcast %union.anon* %4294 to i64*
  %4295 = load i64, i64* %RBP.i1616
  %4296 = sub i64 %4295, 4
  %4297 = load i64, i64* %PC.i1614
  %4298 = add i64 %4297, 3
  store i64 %4298, i64* %PC.i1614
  %4299 = inttoptr i64 %4296 to i32*
  %4300 = load i32, i32* %4299
  %4301 = zext i32 %4300 to i64
  store i64 %4301, i64* %RCX.i1615, align 8
  store %struct.Memory* %loadMem_40b51b, %struct.Memory** %MEMORY
  %loadMem_40b51e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4303 = getelementptr inbounds %struct.GPR, %struct.GPR* %4302, i32 0, i32 33
  %4304 = getelementptr inbounds %struct.Reg, %struct.Reg* %4303, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %4304 to i64*
  %4305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4306 = getelementptr inbounds %struct.GPR, %struct.GPR* %4305, i32 0, i32 5
  %4307 = getelementptr inbounds %struct.Reg, %struct.Reg* %4306, i32 0, i32 0
  %RCX.i1613 = bitcast %union.anon* %4307 to i64*
  %4308 = load i64, i64* %RCX.i1613
  %4309 = load i64, i64* %PC.i1612
  %4310 = add i64 %4309, 3
  store i64 %4310, i64* %PC.i1612
  %4311 = trunc i64 %4308 to i32
  %4312 = add i32 20, %4311
  %4313 = zext i32 %4312 to i64
  store i64 %4313, i64* %RCX.i1613, align 8
  %4314 = icmp ult i32 %4312, %4311
  %4315 = icmp ult i32 %4312, 20
  %4316 = or i1 %4314, %4315
  %4317 = zext i1 %4316 to i8
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4317, i8* %4318, align 1
  %4319 = and i32 %4312, 255
  %4320 = call i32 @llvm.ctpop.i32(i32 %4319)
  %4321 = trunc i32 %4320 to i8
  %4322 = and i8 %4321, 1
  %4323 = xor i8 %4322, 1
  %4324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4323, i8* %4324, align 1
  %4325 = xor i64 20, %4308
  %4326 = trunc i64 %4325 to i32
  %4327 = xor i32 %4326, %4312
  %4328 = lshr i32 %4327, 4
  %4329 = trunc i32 %4328 to i8
  %4330 = and i8 %4329, 1
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4330, i8* %4331, align 1
  %4332 = icmp eq i32 %4312, 0
  %4333 = zext i1 %4332 to i8
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4333, i8* %4334, align 1
  %4335 = lshr i32 %4312, 31
  %4336 = trunc i32 %4335 to i8
  %4337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4336, i8* %4337, align 1
  %4338 = lshr i32 %4311, 31
  %4339 = xor i32 %4335, %4338
  %4340 = add i32 %4339, %4335
  %4341 = icmp eq i32 %4340, 2
  %4342 = zext i1 %4341 to i8
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4342, i8* %4343, align 1
  store %struct.Memory* %loadMem_40b51e, %struct.Memory** %MEMORY
  %loadMem_40b521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4345 = getelementptr inbounds %struct.GPR, %struct.GPR* %4344, i32 0, i32 33
  %4346 = getelementptr inbounds %struct.Reg, %struct.Reg* %4345, i32 0, i32 0
  %PC.i1609 = bitcast %union.anon* %4346 to i64*
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4348 = getelementptr inbounds %struct.GPR, %struct.GPR* %4347, i32 0, i32 7
  %4349 = getelementptr inbounds %struct.Reg, %struct.Reg* %4348, i32 0, i32 0
  %RDX.i1610 = bitcast %union.anon* %4349 to i64*
  %4350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4351 = getelementptr inbounds %struct.GPR, %struct.GPR* %4350, i32 0, i32 15
  %4352 = getelementptr inbounds %struct.Reg, %struct.Reg* %4351, i32 0, i32 0
  %RBP.i1611 = bitcast %union.anon* %4352 to i64*
  %4353 = load i64, i64* %RBP.i1611
  %4354 = sub i64 %4353, 8
  %4355 = load i64, i64* %PC.i1609
  %4356 = add i64 %4355, 4
  store i64 %4356, i64* %PC.i1609
  %4357 = inttoptr i64 %4354 to i32*
  %4358 = load i32, i32* %4357
  %4359 = sext i32 %4358 to i64
  store i64 %4359, i64* %RDX.i1610, align 8
  store %struct.Memory* %loadMem_40b521, %struct.Memory** %MEMORY
  %loadMem_40b525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4361 = getelementptr inbounds %struct.GPR, %struct.GPR* %4360, i32 0, i32 33
  %4362 = getelementptr inbounds %struct.Reg, %struct.Reg* %4361, i32 0, i32 0
  %PC.i1607 = bitcast %union.anon* %4362 to i64*
  %4363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4364 = getelementptr inbounds %struct.GPR, %struct.GPR* %4363, i32 0, i32 7
  %4365 = getelementptr inbounds %struct.Reg, %struct.Reg* %4364, i32 0, i32 0
  %RDX.i1608 = bitcast %union.anon* %4365 to i64*
  %4366 = load i64, i64* %RDX.i1608
  %4367 = load i64, i64* %PC.i1607
  %4368 = add i64 %4367, 7
  store i64 %4368, i64* %PC.i1607
  %4369 = sext i64 %4366 to i128
  %4370 = and i128 %4369, -18446744073709551616
  %4371 = zext i64 %4366 to i128
  %4372 = or i128 %4370, %4371
  %4373 = mul i128 744, %4372
  %4374 = trunc i128 %4373 to i64
  store i64 %4374, i64* %RDX.i1608, align 8
  %4375 = sext i64 %4374 to i128
  %4376 = icmp ne i128 %4375, %4373
  %4377 = zext i1 %4376 to i8
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4377, i8* %4378, align 1
  %4379 = trunc i128 %4373 to i32
  %4380 = and i32 %4379, 255
  %4381 = call i32 @llvm.ctpop.i32(i32 %4380)
  %4382 = trunc i32 %4381 to i8
  %4383 = and i8 %4382, 1
  %4384 = xor i8 %4383, 1
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4384, i8* %4385, align 1
  %4386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4386, align 1
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4387, align 1
  %4388 = lshr i64 %4374, 63
  %4389 = trunc i64 %4388 to i8
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4389, i8* %4390, align 1
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4377, i8* %4391, align 1
  store %struct.Memory* %loadMem_40b525, %struct.Memory** %MEMORY
  %loadMem_40b52c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4393 = getelementptr inbounds %struct.GPR, %struct.GPR* %4392, i32 0, i32 33
  %4394 = getelementptr inbounds %struct.Reg, %struct.Reg* %4393, i32 0, i32 0
  %PC.i1604 = bitcast %union.anon* %4394 to i64*
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4396 = getelementptr inbounds %struct.GPR, %struct.GPR* %4395, i32 0, i32 1
  %4397 = getelementptr inbounds %struct.Reg, %struct.Reg* %4396, i32 0, i32 0
  %RAX.i1605 = bitcast %union.anon* %4397 to i64*
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4399 = getelementptr inbounds %struct.GPR, %struct.GPR* %4398, i32 0, i32 9
  %4400 = getelementptr inbounds %struct.Reg, %struct.Reg* %4399, i32 0, i32 0
  %RSI.i1606 = bitcast %union.anon* %4400 to i64*
  %4401 = load i64, i64* %RAX.i1605
  %4402 = load i64, i64* %PC.i1604
  %4403 = add i64 %4402, 3
  store i64 %4403, i64* %PC.i1604
  store i64 %4401, i64* %RSI.i1606, align 8
  store %struct.Memory* %loadMem_40b52c, %struct.Memory** %MEMORY
  %loadMem_40b52f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4405 = getelementptr inbounds %struct.GPR, %struct.GPR* %4404, i32 0, i32 33
  %4406 = getelementptr inbounds %struct.Reg, %struct.Reg* %4405, i32 0, i32 0
  %PC.i1601 = bitcast %union.anon* %4406 to i64*
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4408 = getelementptr inbounds %struct.GPR, %struct.GPR* %4407, i32 0, i32 7
  %4409 = getelementptr inbounds %struct.Reg, %struct.Reg* %4408, i32 0, i32 0
  %RDX.i1602 = bitcast %union.anon* %4409 to i64*
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4411 = getelementptr inbounds %struct.GPR, %struct.GPR* %4410, i32 0, i32 9
  %4412 = getelementptr inbounds %struct.Reg, %struct.Reg* %4411, i32 0, i32 0
  %RSI.i1603 = bitcast %union.anon* %4412 to i64*
  %4413 = load i64, i64* %RSI.i1603
  %4414 = load i64, i64* %RDX.i1602
  %4415 = load i64, i64* %PC.i1601
  %4416 = add i64 %4415, 3
  store i64 %4416, i64* %PC.i1601
  %4417 = add i64 %4414, %4413
  store i64 %4417, i64* %RSI.i1603, align 8
  %4418 = icmp ult i64 %4417, %4413
  %4419 = icmp ult i64 %4417, %4414
  %4420 = or i1 %4418, %4419
  %4421 = zext i1 %4420 to i8
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4421, i8* %4422, align 1
  %4423 = trunc i64 %4417 to i32
  %4424 = and i32 %4423, 255
  %4425 = call i32 @llvm.ctpop.i32(i32 %4424)
  %4426 = trunc i32 %4425 to i8
  %4427 = and i8 %4426, 1
  %4428 = xor i8 %4427, 1
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4428, i8* %4429, align 1
  %4430 = xor i64 %4414, %4413
  %4431 = xor i64 %4430, %4417
  %4432 = lshr i64 %4431, 4
  %4433 = trunc i64 %4432 to i8
  %4434 = and i8 %4433, 1
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4434, i8* %4435, align 1
  %4436 = icmp eq i64 %4417, 0
  %4437 = zext i1 %4436 to i8
  %4438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4437, i8* %4438, align 1
  %4439 = lshr i64 %4417, 63
  %4440 = trunc i64 %4439 to i8
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4440, i8* %4441, align 1
  %4442 = lshr i64 %4413, 63
  %4443 = lshr i64 %4414, 63
  %4444 = xor i64 %4439, %4442
  %4445 = xor i64 %4439, %4443
  %4446 = add i64 %4444, %4445
  %4447 = icmp eq i64 %4446, 2
  %4448 = zext i1 %4447 to i8
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4448, i8* %4449, align 1
  store %struct.Memory* %loadMem_40b52f, %struct.Memory** %MEMORY
  %loadMem_40b532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4451 = getelementptr inbounds %struct.GPR, %struct.GPR* %4450, i32 0, i32 33
  %4452 = getelementptr inbounds %struct.Reg, %struct.Reg* %4451, i32 0, i32 0
  %PC.i1598 = bitcast %union.anon* %4452 to i64*
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4454 = getelementptr inbounds %struct.GPR, %struct.GPR* %4453, i32 0, i32 7
  %4455 = getelementptr inbounds %struct.Reg, %struct.Reg* %4454, i32 0, i32 0
  %RDX.i1599 = bitcast %union.anon* %4455 to i64*
  %4456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4457 = getelementptr inbounds %struct.GPR, %struct.GPR* %4456, i32 0, i32 15
  %4458 = getelementptr inbounds %struct.Reg, %struct.Reg* %4457, i32 0, i32 0
  %RBP.i1600 = bitcast %union.anon* %4458 to i64*
  %4459 = load i64, i64* %RBP.i1600
  %4460 = sub i64 %4459, 8
  %4461 = load i64, i64* %PC.i1598
  %4462 = add i64 %4461, 4
  store i64 %4462, i64* %PC.i1598
  %4463 = inttoptr i64 %4460 to i32*
  %4464 = load i32, i32* %4463
  %4465 = sext i32 %4464 to i64
  store i64 %4465, i64* %RDX.i1599, align 8
  store %struct.Memory* %loadMem_40b532, %struct.Memory** %MEMORY
  %loadMem_40b536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4467 = getelementptr inbounds %struct.GPR, %struct.GPR* %4466, i32 0, i32 33
  %4468 = getelementptr inbounds %struct.Reg, %struct.Reg* %4467, i32 0, i32 0
  %PC.i1596 = bitcast %union.anon* %4468 to i64*
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4470 = getelementptr inbounds %struct.GPR, %struct.GPR* %4469, i32 0, i32 7
  %4471 = getelementptr inbounds %struct.Reg, %struct.Reg* %4470, i32 0, i32 0
  %RDX.i1597 = bitcast %union.anon* %4471 to i64*
  %4472 = load i64, i64* %RDX.i1597
  %4473 = load i64, i64* %PC.i1596
  %4474 = add i64 %4473, 7
  store i64 %4474, i64* %PC.i1596
  %4475 = sext i64 %4472 to i128
  %4476 = and i128 %4475, -18446744073709551616
  %4477 = zext i64 %4472 to i128
  %4478 = or i128 %4476, %4477
  %4479 = mul i128 744, %4478
  %4480 = trunc i128 %4479 to i64
  store i64 %4480, i64* %RDX.i1597, align 8
  %4481 = sext i64 %4480 to i128
  %4482 = icmp ne i128 %4481, %4479
  %4483 = zext i1 %4482 to i8
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4483, i8* %4484, align 1
  %4485 = trunc i128 %4479 to i32
  %4486 = and i32 %4485, 255
  %4487 = call i32 @llvm.ctpop.i32(i32 %4486)
  %4488 = trunc i32 %4487 to i8
  %4489 = and i8 %4488, 1
  %4490 = xor i8 %4489, 1
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4490, i8* %4491, align 1
  %4492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4492, align 1
  %4493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4493, align 1
  %4494 = lshr i64 %4480, 63
  %4495 = trunc i64 %4494 to i8
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4495, i8* %4496, align 1
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4483, i8* %4497, align 1
  store %struct.Memory* %loadMem_40b536, %struct.Memory** %MEMORY
  %loadMem_40b53d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4499 = getelementptr inbounds %struct.GPR, %struct.GPR* %4498, i32 0, i32 33
  %4500 = getelementptr inbounds %struct.Reg, %struct.Reg* %4499, i32 0, i32 0
  %PC.i1593 = bitcast %union.anon* %4500 to i64*
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4502 = getelementptr inbounds %struct.GPR, %struct.GPR* %4501, i32 0, i32 1
  %4503 = getelementptr inbounds %struct.Reg, %struct.Reg* %4502, i32 0, i32 0
  %RAX.i1594 = bitcast %union.anon* %4503 to i64*
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4505 = getelementptr inbounds %struct.GPR, %struct.GPR* %4504, i32 0, i32 7
  %4506 = getelementptr inbounds %struct.Reg, %struct.Reg* %4505, i32 0, i32 0
  %RDX.i1595 = bitcast %union.anon* %4506 to i64*
  %4507 = load i64, i64* %RAX.i1594
  %4508 = load i64, i64* %RDX.i1595
  %4509 = load i64, i64* %PC.i1593
  %4510 = add i64 %4509, 3
  store i64 %4510, i64* %PC.i1593
  %4511 = add i64 %4508, %4507
  store i64 %4511, i64* %RAX.i1594, align 8
  %4512 = icmp ult i64 %4511, %4507
  %4513 = icmp ult i64 %4511, %4508
  %4514 = or i1 %4512, %4513
  %4515 = zext i1 %4514 to i8
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4515, i8* %4516, align 1
  %4517 = trunc i64 %4511 to i32
  %4518 = and i32 %4517, 255
  %4519 = call i32 @llvm.ctpop.i32(i32 %4518)
  %4520 = trunc i32 %4519 to i8
  %4521 = and i8 %4520, 1
  %4522 = xor i8 %4521, 1
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4522, i8* %4523, align 1
  %4524 = xor i64 %4508, %4507
  %4525 = xor i64 %4524, %4511
  %4526 = lshr i64 %4525, 4
  %4527 = trunc i64 %4526 to i8
  %4528 = and i8 %4527, 1
  %4529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4528, i8* %4529, align 1
  %4530 = icmp eq i64 %4511, 0
  %4531 = zext i1 %4530 to i8
  %4532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4531, i8* %4532, align 1
  %4533 = lshr i64 %4511, 63
  %4534 = trunc i64 %4533 to i8
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4534, i8* %4535, align 1
  %4536 = lshr i64 %4507, 63
  %4537 = lshr i64 %4508, 63
  %4538 = xor i64 %4533, %4536
  %4539 = xor i64 %4533, %4537
  %4540 = add i64 %4538, %4539
  %4541 = icmp eq i64 %4540, 2
  %4542 = zext i1 %4541 to i8
  %4543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4542, i8* %4543, align 1
  store %struct.Memory* %loadMem_40b53d, %struct.Memory** %MEMORY
  %loadMem_40b540 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4545 = getelementptr inbounds %struct.GPR, %struct.GPR* %4544, i32 0, i32 33
  %4546 = getelementptr inbounds %struct.Reg, %struct.Reg* %4545, i32 0, i32 0
  %PC.i1591 = bitcast %union.anon* %4546 to i64*
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4548 = getelementptr inbounds %struct.GPR, %struct.GPR* %4547, i32 0, i32 1
  %4549 = getelementptr inbounds %struct.Reg, %struct.Reg* %4548, i32 0, i32 0
  %RAX.i1592 = bitcast %union.anon* %4549 to i64*
  %4550 = load i64, i64* %RAX.i1592
  %4551 = add i64 %4550, 12
  %4552 = load i64, i64* %PC.i1591
  %4553 = add i64 %4552, 4
  store i64 %4553, i64* %PC.i1591
  %4554 = inttoptr i64 %4551 to i32*
  %4555 = load i32, i32* %4554
  %4556 = sext i32 %4555 to i64
  store i64 %4556, i64* %RAX.i1592, align 8
  store %struct.Memory* %loadMem_40b540, %struct.Memory** %MEMORY
  %loadMem_40b544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4558 = getelementptr inbounds %struct.GPR, %struct.GPR* %4557, i32 0, i32 33
  %4559 = getelementptr inbounds %struct.Reg, %struct.Reg* %4558, i32 0, i32 0
  %PC.i1587 = bitcast %union.anon* %4559 to i64*
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4561 = getelementptr inbounds %struct.GPR, %struct.GPR* %4560, i32 0, i32 5
  %4562 = getelementptr inbounds %struct.Reg, %struct.Reg* %4561, i32 0, i32 0
  %ECX.i1588 = bitcast %union.anon* %4562 to i32*
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4564 = getelementptr inbounds %struct.GPR, %struct.GPR* %4563, i32 0, i32 1
  %4565 = getelementptr inbounds %struct.Reg, %struct.Reg* %4564, i32 0, i32 0
  %RAX.i1589 = bitcast %union.anon* %4565 to i64*
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4567 = getelementptr inbounds %struct.GPR, %struct.GPR* %4566, i32 0, i32 9
  %4568 = getelementptr inbounds %struct.Reg, %struct.Reg* %4567, i32 0, i32 0
  %RSI.i1590 = bitcast %union.anon* %4568 to i64*
  %4569 = load i64, i64* %RSI.i1590
  %4570 = load i64, i64* %RAX.i1589
  %4571 = mul i64 %4570, 4
  %4572 = add i64 %4569, 16
  %4573 = add i64 %4572, %4571
  %4574 = load i32, i32* %ECX.i1588
  %4575 = zext i32 %4574 to i64
  %4576 = load i64, i64* %PC.i1587
  %4577 = add i64 %4576, 4
  store i64 %4577, i64* %PC.i1587
  %4578 = inttoptr i64 %4573 to i32*
  store i32 %4574, i32* %4578
  store %struct.Memory* %loadMem_40b544, %struct.Memory** %MEMORY
  br label %block_.L_40b548

block_.L_40b548:                                  ; preds = %block_40b511, %block_.L_40b4ef
  %loadMem_40b548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4580 = getelementptr inbounds %struct.GPR, %struct.GPR* %4579, i32 0, i32 33
  %4581 = getelementptr inbounds %struct.Reg, %struct.Reg* %4580, i32 0, i32 0
  %PC.i1585 = bitcast %union.anon* %4581 to i64*
  %4582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4583 = getelementptr inbounds %struct.GPR, %struct.GPR* %4582, i32 0, i32 1
  %4584 = getelementptr inbounds %struct.Reg, %struct.Reg* %4583, i32 0, i32 0
  %RAX.i1586 = bitcast %union.anon* %4584 to i64*
  %4585 = load i64, i64* %PC.i1585
  %4586 = add i64 %4585, 10
  store i64 %4586, i64* %PC.i1585
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1586, align 8
  store %struct.Memory* %loadMem_40b548, %struct.Memory** %MEMORY
  %loadMem_40b552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4588 = getelementptr inbounds %struct.GPR, %struct.GPR* %4587, i32 0, i32 33
  %4589 = getelementptr inbounds %struct.Reg, %struct.Reg* %4588, i32 0, i32 0
  %PC.i1582 = bitcast %union.anon* %4589 to i64*
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4591 = getelementptr inbounds %struct.GPR, %struct.GPR* %4590, i32 0, i32 5
  %4592 = getelementptr inbounds %struct.Reg, %struct.Reg* %4591, i32 0, i32 0
  %RCX.i1583 = bitcast %union.anon* %4592 to i64*
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4594 = getelementptr inbounds %struct.GPR, %struct.GPR* %4593, i32 0, i32 15
  %4595 = getelementptr inbounds %struct.Reg, %struct.Reg* %4594, i32 0, i32 0
  %RBP.i1584 = bitcast %union.anon* %4595 to i64*
  %4596 = load i64, i64* %RBP.i1584
  %4597 = sub i64 %4596, 8
  %4598 = load i64, i64* %PC.i1582
  %4599 = add i64 %4598, 4
  store i64 %4599, i64* %PC.i1582
  %4600 = inttoptr i64 %4597 to i32*
  %4601 = load i32, i32* %4600
  %4602 = sext i32 %4601 to i64
  store i64 %4602, i64* %RCX.i1583, align 8
  store %struct.Memory* %loadMem_40b552, %struct.Memory** %MEMORY
  %loadMem_40b556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4604 = getelementptr inbounds %struct.GPR, %struct.GPR* %4603, i32 0, i32 33
  %4605 = getelementptr inbounds %struct.Reg, %struct.Reg* %4604, i32 0, i32 0
  %PC.i1580 = bitcast %union.anon* %4605 to i64*
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4607 = getelementptr inbounds %struct.GPR, %struct.GPR* %4606, i32 0, i32 5
  %4608 = getelementptr inbounds %struct.Reg, %struct.Reg* %4607, i32 0, i32 0
  %RCX.i1581 = bitcast %union.anon* %4608 to i64*
  %4609 = load i64, i64* %RCX.i1581
  %4610 = load i64, i64* %PC.i1580
  %4611 = add i64 %4610, 7
  store i64 %4611, i64* %PC.i1580
  %4612 = sext i64 %4609 to i128
  %4613 = and i128 %4612, -18446744073709551616
  %4614 = zext i64 %4609 to i128
  %4615 = or i128 %4613, %4614
  %4616 = mul i128 744, %4615
  %4617 = trunc i128 %4616 to i64
  store i64 %4617, i64* %RCX.i1581, align 8
  %4618 = sext i64 %4617 to i128
  %4619 = icmp ne i128 %4618, %4616
  %4620 = zext i1 %4619 to i8
  %4621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4620, i8* %4621, align 1
  %4622 = trunc i128 %4616 to i32
  %4623 = and i32 %4622, 255
  %4624 = call i32 @llvm.ctpop.i32(i32 %4623)
  %4625 = trunc i32 %4624 to i8
  %4626 = and i8 %4625, 1
  %4627 = xor i8 %4626, 1
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4627, i8* %4628, align 1
  %4629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4629, align 1
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4630, align 1
  %4631 = lshr i64 %4617, 63
  %4632 = trunc i64 %4631 to i8
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4632, i8* %4633, align 1
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4620, i8* %4634, align 1
  store %struct.Memory* %loadMem_40b556, %struct.Memory** %MEMORY
  %loadMem_40b55d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4636 = getelementptr inbounds %struct.GPR, %struct.GPR* %4635, i32 0, i32 33
  %4637 = getelementptr inbounds %struct.Reg, %struct.Reg* %4636, i32 0, i32 0
  %PC.i1577 = bitcast %union.anon* %4637 to i64*
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4639 = getelementptr inbounds %struct.GPR, %struct.GPR* %4638, i32 0, i32 1
  %4640 = getelementptr inbounds %struct.Reg, %struct.Reg* %4639, i32 0, i32 0
  %RAX.i1578 = bitcast %union.anon* %4640 to i64*
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4642 = getelementptr inbounds %struct.GPR, %struct.GPR* %4641, i32 0, i32 5
  %4643 = getelementptr inbounds %struct.Reg, %struct.Reg* %4642, i32 0, i32 0
  %RCX.i1579 = bitcast %union.anon* %4643 to i64*
  %4644 = load i64, i64* %RAX.i1578
  %4645 = load i64, i64* %RCX.i1579
  %4646 = load i64, i64* %PC.i1577
  %4647 = add i64 %4646, 3
  store i64 %4647, i64* %PC.i1577
  %4648 = add i64 %4645, %4644
  store i64 %4648, i64* %RAX.i1578, align 8
  %4649 = icmp ult i64 %4648, %4644
  %4650 = icmp ult i64 %4648, %4645
  %4651 = or i1 %4649, %4650
  %4652 = zext i1 %4651 to i8
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4652, i8* %4653, align 1
  %4654 = trunc i64 %4648 to i32
  %4655 = and i32 %4654, 255
  %4656 = call i32 @llvm.ctpop.i32(i32 %4655)
  %4657 = trunc i32 %4656 to i8
  %4658 = and i8 %4657, 1
  %4659 = xor i8 %4658, 1
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4659, i8* %4660, align 1
  %4661 = xor i64 %4645, %4644
  %4662 = xor i64 %4661, %4648
  %4663 = lshr i64 %4662, 4
  %4664 = trunc i64 %4663 to i8
  %4665 = and i8 %4664, 1
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4665, i8* %4666, align 1
  %4667 = icmp eq i64 %4648, 0
  %4668 = zext i1 %4667 to i8
  %4669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4668, i8* %4669, align 1
  %4670 = lshr i64 %4648, 63
  %4671 = trunc i64 %4670 to i8
  %4672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4671, i8* %4672, align 1
  %4673 = lshr i64 %4644, 63
  %4674 = lshr i64 %4645, 63
  %4675 = xor i64 %4670, %4673
  %4676 = xor i64 %4670, %4674
  %4677 = add i64 %4675, %4676
  %4678 = icmp eq i64 %4677, 2
  %4679 = zext i1 %4678 to i8
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4679, i8* %4680, align 1
  store %struct.Memory* %loadMem_40b55d, %struct.Memory** %MEMORY
  %loadMem_40b560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4682 = getelementptr inbounds %struct.GPR, %struct.GPR* %4681, i32 0, i32 33
  %4683 = getelementptr inbounds %struct.Reg, %struct.Reg* %4682, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %4683 to i64*
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4685 = getelementptr inbounds %struct.GPR, %struct.GPR* %4684, i32 0, i32 1
  %4686 = getelementptr inbounds %struct.Reg, %struct.Reg* %4685, i32 0, i32 0
  %RAX.i1575 = bitcast %union.anon* %4686 to i64*
  %4687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4688 = getelementptr inbounds %struct.GPR, %struct.GPR* %4687, i32 0, i32 7
  %4689 = getelementptr inbounds %struct.Reg, %struct.Reg* %4688, i32 0, i32 0
  %RDX.i1576 = bitcast %union.anon* %4689 to i64*
  %4690 = load i64, i64* %RAX.i1575
  %4691 = add i64 %4690, 12
  %4692 = load i64, i64* %PC.i1574
  %4693 = add i64 %4692, 3
  store i64 %4693, i64* %PC.i1574
  %4694 = inttoptr i64 %4691 to i32*
  %4695 = load i32, i32* %4694
  %4696 = zext i32 %4695 to i64
  store i64 %4696, i64* %RDX.i1576, align 8
  store %struct.Memory* %loadMem_40b560, %struct.Memory** %MEMORY
  %loadMem_40b563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4698 = getelementptr inbounds %struct.GPR, %struct.GPR* %4697, i32 0, i32 33
  %4699 = getelementptr inbounds %struct.Reg, %struct.Reg* %4698, i32 0, i32 0
  %PC.i1572 = bitcast %union.anon* %4699 to i64*
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4701 = getelementptr inbounds %struct.GPR, %struct.GPR* %4700, i32 0, i32 7
  %4702 = getelementptr inbounds %struct.Reg, %struct.Reg* %4701, i32 0, i32 0
  %RDX.i1573 = bitcast %union.anon* %4702 to i64*
  %4703 = load i64, i64* %RDX.i1573
  %4704 = load i64, i64* %PC.i1572
  %4705 = add i64 %4704, 3
  store i64 %4705, i64* %PC.i1572
  %4706 = trunc i64 %4703 to i32
  %4707 = add i32 1, %4706
  %4708 = zext i32 %4707 to i64
  store i64 %4708, i64* %RDX.i1573, align 8
  %4709 = icmp ult i32 %4707, %4706
  %4710 = icmp ult i32 %4707, 1
  %4711 = or i1 %4709, %4710
  %4712 = zext i1 %4711 to i8
  %4713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4712, i8* %4713, align 1
  %4714 = and i32 %4707, 255
  %4715 = call i32 @llvm.ctpop.i32(i32 %4714)
  %4716 = trunc i32 %4715 to i8
  %4717 = and i8 %4716, 1
  %4718 = xor i8 %4717, 1
  %4719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4718, i8* %4719, align 1
  %4720 = xor i64 1, %4703
  %4721 = trunc i64 %4720 to i32
  %4722 = xor i32 %4721, %4707
  %4723 = lshr i32 %4722, 4
  %4724 = trunc i32 %4723 to i8
  %4725 = and i8 %4724, 1
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4725, i8* %4726, align 1
  %4727 = icmp eq i32 %4707, 0
  %4728 = zext i1 %4727 to i8
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4728, i8* %4729, align 1
  %4730 = lshr i32 %4707, 31
  %4731 = trunc i32 %4730 to i8
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4731, i8* %4732, align 1
  %4733 = lshr i32 %4706, 31
  %4734 = xor i32 %4730, %4733
  %4735 = add i32 %4734, %4730
  %4736 = icmp eq i32 %4735, 2
  %4737 = zext i1 %4736 to i8
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4737, i8* %4738, align 1
  store %struct.Memory* %loadMem_40b563, %struct.Memory** %MEMORY
  %loadMem_40b566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4740 = getelementptr inbounds %struct.GPR, %struct.GPR* %4739, i32 0, i32 33
  %4741 = getelementptr inbounds %struct.Reg, %struct.Reg* %4740, i32 0, i32 0
  %PC.i1569 = bitcast %union.anon* %4741 to i64*
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4743 = getelementptr inbounds %struct.GPR, %struct.GPR* %4742, i32 0, i32 7
  %4744 = getelementptr inbounds %struct.Reg, %struct.Reg* %4743, i32 0, i32 0
  %EDX.i1570 = bitcast %union.anon* %4744 to i32*
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4746 = getelementptr inbounds %struct.GPR, %struct.GPR* %4745, i32 0, i32 1
  %4747 = getelementptr inbounds %struct.Reg, %struct.Reg* %4746, i32 0, i32 0
  %RAX.i1571 = bitcast %union.anon* %4747 to i64*
  %4748 = load i64, i64* %RAX.i1571
  %4749 = add i64 %4748, 12
  %4750 = load i32, i32* %EDX.i1570
  %4751 = zext i32 %4750 to i64
  %4752 = load i64, i64* %PC.i1569
  %4753 = add i64 %4752, 3
  store i64 %4753, i64* %PC.i1569
  %4754 = inttoptr i64 %4749 to i32*
  store i32 %4750, i32* %4754
  store %struct.Memory* %loadMem_40b566, %struct.Memory** %MEMORY
  %loadMem_40b569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4756 = getelementptr inbounds %struct.GPR, %struct.GPR* %4755, i32 0, i32 33
  %4757 = getelementptr inbounds %struct.Reg, %struct.Reg* %4756, i32 0, i32 0
  %PC.i1568 = bitcast %union.anon* %4757 to i64*
  %4758 = load i64, i64* %PC.i1568
  %4759 = add i64 %4758, 5
  %4760 = load i64, i64* %PC.i1568
  %4761 = add i64 %4760, 5
  store i64 %4761, i64* %PC.i1568
  %4762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4759, i64* %4762, align 8
  store %struct.Memory* %loadMem_40b569, %struct.Memory** %MEMORY
  br label %block_.L_40b56e

block_.L_40b56e:                                  ; preds = %block_.L_40b548, %block_40b4ce, %block_40b495, %block_40b45c, %block_40b435
  %loadMem_40b56e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4764 = getelementptr inbounds %struct.GPR, %struct.GPR* %4763, i32 0, i32 33
  %4765 = getelementptr inbounds %struct.Reg, %struct.Reg* %4764, i32 0, i32 0
  %PC.i1567 = bitcast %union.anon* %4765 to i64*
  %4766 = load i64, i64* %PC.i1567
  %4767 = add i64 %4766, 458
  %4768 = load i64, i64* %PC.i1567
  %4769 = add i64 %4768, 5
  store i64 %4769, i64* %PC.i1567
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4767, i64* %4770, align 8
  store %struct.Memory* %loadMem_40b56e, %struct.Memory** %MEMORY
  br label %block_.L_40b738

block_.L_40b573:                                  ; preds = %block_.L_40b41b
  %loadMem_40b573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4772 = getelementptr inbounds %struct.GPR, %struct.GPR* %4771, i32 0, i32 33
  %4773 = getelementptr inbounds %struct.Reg, %struct.Reg* %4772, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %4773 to i64*
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4775 = getelementptr inbounds %struct.GPR, %struct.GPR* %4774, i32 0, i32 1
  %4776 = getelementptr inbounds %struct.Reg, %struct.Reg* %4775, i32 0, i32 0
  %RAX.i1565 = bitcast %union.anon* %4776 to i64*
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4778 = getelementptr inbounds %struct.GPR, %struct.GPR* %4777, i32 0, i32 15
  %4779 = getelementptr inbounds %struct.Reg, %struct.Reg* %4778, i32 0, i32 0
  %RBP.i1566 = bitcast %union.anon* %4779 to i64*
  %4780 = load i64, i64* %RBP.i1566
  %4781 = sub i64 %4780, 4
  %4782 = load i64, i64* %PC.i1564
  %4783 = add i64 %4782, 3
  store i64 %4783, i64* %PC.i1564
  %4784 = inttoptr i64 %4781 to i32*
  %4785 = load i32, i32* %4784
  %4786 = zext i32 %4785 to i64
  store i64 %4786, i64* %RAX.i1565, align 8
  store %struct.Memory* %loadMem_40b573, %struct.Memory** %MEMORY
  %loadMem_40b576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4788 = getelementptr inbounds %struct.GPR, %struct.GPR* %4787, i32 0, i32 33
  %4789 = getelementptr inbounds %struct.Reg, %struct.Reg* %4788, i32 0, i32 0
  %PC.i1562 = bitcast %union.anon* %4789 to i64*
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4791 = getelementptr inbounds %struct.GPR, %struct.GPR* %4790, i32 0, i32 1
  %4792 = getelementptr inbounds %struct.Reg, %struct.Reg* %4791, i32 0, i32 0
  %RAX.i1563 = bitcast %union.anon* %4792 to i64*
  %4793 = load i64, i64* %RAX.i1563
  %4794 = load i64, i64* %PC.i1562
  %4795 = add i64 %4794, 3
  store i64 %4795, i64* %PC.i1562
  %4796 = trunc i64 %4793 to i32
  %4797 = add i32 20, %4796
  %4798 = zext i32 %4797 to i64
  store i64 %4798, i64* %RAX.i1563, align 8
  %4799 = icmp ult i32 %4797, %4796
  %4800 = icmp ult i32 %4797, 20
  %4801 = or i1 %4799, %4800
  %4802 = zext i1 %4801 to i8
  %4803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4802, i8* %4803, align 1
  %4804 = and i32 %4797, 255
  %4805 = call i32 @llvm.ctpop.i32(i32 %4804)
  %4806 = trunc i32 %4805 to i8
  %4807 = and i8 %4806, 1
  %4808 = xor i8 %4807, 1
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4808, i8* %4809, align 1
  %4810 = xor i64 20, %4793
  %4811 = trunc i64 %4810 to i32
  %4812 = xor i32 %4811, %4797
  %4813 = lshr i32 %4812, 4
  %4814 = trunc i32 %4813 to i8
  %4815 = and i8 %4814, 1
  %4816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4815, i8* %4816, align 1
  %4817 = icmp eq i32 %4797, 0
  %4818 = zext i1 %4817 to i8
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4818, i8* %4819, align 1
  %4820 = lshr i32 %4797, 31
  %4821 = trunc i32 %4820 to i8
  %4822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4821, i8* %4822, align 1
  %4823 = lshr i32 %4796, 31
  %4824 = xor i32 %4820, %4823
  %4825 = add i32 %4824, %4820
  %4826 = icmp eq i32 %4825, 2
  %4827 = zext i1 %4826 to i8
  %4828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4827, i8* %4828, align 1
  store %struct.Memory* %loadMem_40b576, %struct.Memory** %MEMORY
  %loadMem_40b579 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4830 = getelementptr inbounds %struct.GPR, %struct.GPR* %4829, i32 0, i32 33
  %4831 = getelementptr inbounds %struct.Reg, %struct.Reg* %4830, i32 0, i32 0
  %PC.i1559 = bitcast %union.anon* %4831 to i64*
  %4832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4833 = getelementptr inbounds %struct.GPR, %struct.GPR* %4832, i32 0, i32 1
  %4834 = getelementptr inbounds %struct.Reg, %struct.Reg* %4833, i32 0, i32 0
  %EAX.i1560 = bitcast %union.anon* %4834 to i32*
  %4835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4836 = getelementptr inbounds %struct.GPR, %struct.GPR* %4835, i32 0, i32 5
  %4837 = getelementptr inbounds %struct.Reg, %struct.Reg* %4836, i32 0, i32 0
  %RCX.i1561 = bitcast %union.anon* %4837 to i64*
  %4838 = load i32, i32* %EAX.i1560
  %4839 = zext i32 %4838 to i64
  %4840 = load i64, i64* %PC.i1559
  %4841 = add i64 %4840, 3
  store i64 %4841, i64* %PC.i1559
  %4842 = shl i64 %4839, 32
  %4843 = ashr exact i64 %4842, 32
  store i64 %4843, i64* %RCX.i1561, align 8
  store %struct.Memory* %loadMem_40b579, %struct.Memory** %MEMORY
  %loadMem_40b57c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4845 = getelementptr inbounds %struct.GPR, %struct.GPR* %4844, i32 0, i32 33
  %4846 = getelementptr inbounds %struct.Reg, %struct.Reg* %4845, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %4846 to i64*
  %4847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4848 = getelementptr inbounds %struct.GPR, %struct.GPR* %4847, i32 0, i32 1
  %4849 = getelementptr inbounds %struct.Reg, %struct.Reg* %4848, i32 0, i32 0
  %RAX.i1557 = bitcast %union.anon* %4849 to i64*
  %4850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4851 = getelementptr inbounds %struct.GPR, %struct.GPR* %4850, i32 0, i32 5
  %4852 = getelementptr inbounds %struct.Reg, %struct.Reg* %4851, i32 0, i32 0
  %RCX.i1558 = bitcast %union.anon* %4852 to i64*
  %4853 = load i64, i64* %RCX.i1558
  %4854 = add i64 %4853, 12099168
  %4855 = load i64, i64* %PC.i1556
  %4856 = add i64 %4855, 8
  store i64 %4856, i64* %PC.i1556
  %4857 = inttoptr i64 %4854 to i8*
  %4858 = load i8, i8* %4857
  %4859 = zext i8 %4858 to i64
  store i64 %4859, i64* %RAX.i1557, align 8
  store %struct.Memory* %loadMem_40b57c, %struct.Memory** %MEMORY
  %loadMem_40b584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4861 = getelementptr inbounds %struct.GPR, %struct.GPR* %4860, i32 0, i32 33
  %4862 = getelementptr inbounds %struct.Reg, %struct.Reg* %4861, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %4862 to i64*
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4864 = getelementptr inbounds %struct.GPR, %struct.GPR* %4863, i32 0, i32 1
  %4865 = getelementptr inbounds %struct.Reg, %struct.Reg* %4864, i32 0, i32 0
  %EAX.i1554 = bitcast %union.anon* %4865 to i32*
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4867 = getelementptr inbounds %struct.GPR, %struct.GPR* %4866, i32 0, i32 15
  %4868 = getelementptr inbounds %struct.Reg, %struct.Reg* %4867, i32 0, i32 0
  %RBP.i1555 = bitcast %union.anon* %4868 to i64*
  %4869 = load i32, i32* %EAX.i1554
  %4870 = zext i32 %4869 to i64
  %4871 = load i64, i64* %RBP.i1555
  %4872 = sub i64 %4871, 24
  %4873 = load i64, i64* %PC.i1553
  %4874 = add i64 %4873, 3
  store i64 %4874, i64* %PC.i1553
  %4875 = inttoptr i64 %4872 to i32*
  %4876 = load i32, i32* %4875
  %4877 = sub i32 %4869, %4876
  %4878 = icmp ult i32 %4869, %4876
  %4879 = zext i1 %4878 to i8
  %4880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4879, i8* %4880, align 1
  %4881 = and i32 %4877, 255
  %4882 = call i32 @llvm.ctpop.i32(i32 %4881)
  %4883 = trunc i32 %4882 to i8
  %4884 = and i8 %4883, 1
  %4885 = xor i8 %4884, 1
  %4886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4885, i8* %4886, align 1
  %4887 = xor i32 %4876, %4869
  %4888 = xor i32 %4887, %4877
  %4889 = lshr i32 %4888, 4
  %4890 = trunc i32 %4889 to i8
  %4891 = and i8 %4890, 1
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4891, i8* %4892, align 1
  %4893 = icmp eq i32 %4877, 0
  %4894 = zext i1 %4893 to i8
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4894, i8* %4895, align 1
  %4896 = lshr i32 %4877, 31
  %4897 = trunc i32 %4896 to i8
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4897, i8* %4898, align 1
  %4899 = lshr i32 %4869, 31
  %4900 = lshr i32 %4876, 31
  %4901 = xor i32 %4900, %4899
  %4902 = xor i32 %4896, %4899
  %4903 = add i32 %4902, %4901
  %4904 = icmp eq i32 %4903, 2
  %4905 = zext i1 %4904 to i8
  %4906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4905, i8* %4906, align 1
  store %struct.Memory* %loadMem_40b584, %struct.Memory** %MEMORY
  %loadMem_40b587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4908 = getelementptr inbounds %struct.GPR, %struct.GPR* %4907, i32 0, i32 33
  %4909 = getelementptr inbounds %struct.Reg, %struct.Reg* %4908, i32 0, i32 0
  %PC.i1552 = bitcast %union.anon* %4909 to i64*
  %4910 = load i64, i64* %PC.i1552
  %4911 = add i64 %4910, 428
  %4912 = load i64, i64* %PC.i1552
  %4913 = add i64 %4912, 6
  %4914 = load i64, i64* %PC.i1552
  %4915 = add i64 %4914, 6
  store i64 %4915, i64* %PC.i1552
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4917 = load i8, i8* %4916, align 1
  %4918 = icmp eq i8 %4917, 0
  %4919 = zext i1 %4918 to i8
  store i8 %4919, i8* %BRANCH_TAKEN, align 1
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4921 = select i1 %4918, i64 %4911, i64 %4913
  store i64 %4921, i64* %4920, align 8
  store %struct.Memory* %loadMem_40b587, %struct.Memory** %MEMORY
  %loadBr_40b587 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b587 = icmp eq i8 %loadBr_40b587, 1
  br i1 %cmpBr_40b587, label %block_.L_40b733, label %block_40b58d

block_40b58d:                                     ; preds = %block_.L_40b573
  %loadMem_40b58d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4923 = getelementptr inbounds %struct.GPR, %struct.GPR* %4922, i32 0, i32 33
  %4924 = getelementptr inbounds %struct.Reg, %struct.Reg* %4923, i32 0, i32 0
  %PC.i1550 = bitcast %union.anon* %4924 to i64*
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4926 = getelementptr inbounds %struct.GPR, %struct.GPR* %4925, i32 0, i32 1
  %4927 = getelementptr inbounds %struct.Reg, %struct.Reg* %4926, i32 0, i32 0
  %RAX.i1551 = bitcast %union.anon* %4927 to i64*
  %4928 = load i64, i64* %PC.i1550
  %4929 = add i64 %4928, 10
  store i64 %4929, i64* %PC.i1550
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1551, align 8
  store %struct.Memory* %loadMem_40b58d, %struct.Memory** %MEMORY
  %loadMem_40b597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4931 = getelementptr inbounds %struct.GPR, %struct.GPR* %4930, i32 0, i32 33
  %4932 = getelementptr inbounds %struct.Reg, %struct.Reg* %4931, i32 0, i32 0
  %PC.i1547 = bitcast %union.anon* %4932 to i64*
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4934 = getelementptr inbounds %struct.GPR, %struct.GPR* %4933, i32 0, i32 5
  %4935 = getelementptr inbounds %struct.Reg, %struct.Reg* %4934, i32 0, i32 0
  %RCX.i1548 = bitcast %union.anon* %4935 to i64*
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4937 = getelementptr inbounds %struct.GPR, %struct.GPR* %4936, i32 0, i32 15
  %4938 = getelementptr inbounds %struct.Reg, %struct.Reg* %4937, i32 0, i32 0
  %RBP.i1549 = bitcast %union.anon* %4938 to i64*
  %4939 = load i64, i64* %RBP.i1549
  %4940 = sub i64 %4939, 4
  %4941 = load i64, i64* %PC.i1547
  %4942 = add i64 %4941, 3
  store i64 %4942, i64* %PC.i1547
  %4943 = inttoptr i64 %4940 to i32*
  %4944 = load i32, i32* %4943
  %4945 = zext i32 %4944 to i64
  store i64 %4945, i64* %RCX.i1548, align 8
  store %struct.Memory* %loadMem_40b597, %struct.Memory** %MEMORY
  %loadMem_40b59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4947 = getelementptr inbounds %struct.GPR, %struct.GPR* %4946, i32 0, i32 33
  %4948 = getelementptr inbounds %struct.Reg, %struct.Reg* %4947, i32 0, i32 0
  %PC.i1545 = bitcast %union.anon* %4948 to i64*
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4950 = getelementptr inbounds %struct.GPR, %struct.GPR* %4949, i32 0, i32 5
  %4951 = getelementptr inbounds %struct.Reg, %struct.Reg* %4950, i32 0, i32 0
  %RCX.i1546 = bitcast %union.anon* %4951 to i64*
  %4952 = load i64, i64* %RCX.i1546
  %4953 = load i64, i64* %PC.i1545
  %4954 = add i64 %4953, 3
  store i64 %4954, i64* %PC.i1545
  %4955 = trunc i64 %4952 to i32
  %4956 = add i32 20, %4955
  %4957 = zext i32 %4956 to i64
  store i64 %4957, i64* %RCX.i1546, align 8
  %4958 = icmp ult i32 %4956, %4955
  %4959 = icmp ult i32 %4956, 20
  %4960 = or i1 %4958, %4959
  %4961 = zext i1 %4960 to i8
  %4962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4961, i8* %4962, align 1
  %4963 = and i32 %4956, 255
  %4964 = call i32 @llvm.ctpop.i32(i32 %4963)
  %4965 = trunc i32 %4964 to i8
  %4966 = and i8 %4965, 1
  %4967 = xor i8 %4966, 1
  %4968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4967, i8* %4968, align 1
  %4969 = xor i64 20, %4952
  %4970 = trunc i64 %4969 to i32
  %4971 = xor i32 %4970, %4956
  %4972 = lshr i32 %4971, 4
  %4973 = trunc i32 %4972 to i8
  %4974 = and i8 %4973, 1
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4974, i8* %4975, align 1
  %4976 = icmp eq i32 %4956, 0
  %4977 = zext i1 %4976 to i8
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4977, i8* %4978, align 1
  %4979 = lshr i32 %4956, 31
  %4980 = trunc i32 %4979 to i8
  %4981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4980, i8* %4981, align 1
  %4982 = lshr i32 %4955, 31
  %4983 = xor i32 %4979, %4982
  %4984 = add i32 %4983, %4979
  %4985 = icmp eq i32 %4984, 2
  %4986 = zext i1 %4985 to i8
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4986, i8* %4987, align 1
  store %struct.Memory* %loadMem_40b59a, %struct.Memory** %MEMORY
  %loadMem_40b59d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4989 = getelementptr inbounds %struct.GPR, %struct.GPR* %4988, i32 0, i32 33
  %4990 = getelementptr inbounds %struct.Reg, %struct.Reg* %4989, i32 0, i32 0
  %PC.i1542 = bitcast %union.anon* %4990 to i64*
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4992 = getelementptr inbounds %struct.GPR, %struct.GPR* %4991, i32 0, i32 5
  %4993 = getelementptr inbounds %struct.Reg, %struct.Reg* %4992, i32 0, i32 0
  %ECX.i1543 = bitcast %union.anon* %4993 to i32*
  %4994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4995 = getelementptr inbounds %struct.GPR, %struct.GPR* %4994, i32 0, i32 7
  %4996 = getelementptr inbounds %struct.Reg, %struct.Reg* %4995, i32 0, i32 0
  %RDX.i1544 = bitcast %union.anon* %4996 to i64*
  %4997 = load i32, i32* %ECX.i1543
  %4998 = zext i32 %4997 to i64
  %4999 = load i64, i64* %PC.i1542
  %5000 = add i64 %4999, 3
  store i64 %5000, i64* %PC.i1542
  %5001 = shl i64 %4998, 32
  %5002 = ashr exact i64 %5001, 32
  store i64 %5002, i64* %RDX.i1544, align 8
  store %struct.Memory* %loadMem_40b59d, %struct.Memory** %MEMORY
  %loadMem_40b5a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5004 = getelementptr inbounds %struct.GPR, %struct.GPR* %5003, i32 0, i32 33
  %5005 = getelementptr inbounds %struct.Reg, %struct.Reg* %5004, i32 0, i32 0
  %PC.i1540 = bitcast %union.anon* %5005 to i64*
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5007 = getelementptr inbounds %struct.GPR, %struct.GPR* %5006, i32 0, i32 7
  %5008 = getelementptr inbounds %struct.Reg, %struct.Reg* %5007, i32 0, i32 0
  %RDX.i1541 = bitcast %union.anon* %5008 to i64*
  %5009 = load i64, i64* %RDX.i1541
  %5010 = mul i64 %5009, 4
  %5011 = add i64 %5010, 11187184
  %5012 = load i64, i64* %PC.i1540
  %5013 = add i64 %5012, 8
  store i64 %5013, i64* %PC.i1540
  %5014 = inttoptr i64 %5011 to i32*
  %5015 = load i32, i32* %5014
  %5016 = sext i32 %5015 to i64
  store i64 %5016, i64* %RDX.i1541, align 8
  store %struct.Memory* %loadMem_40b5a0, %struct.Memory** %MEMORY
  %loadMem_40b5a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5018 = getelementptr inbounds %struct.GPR, %struct.GPR* %5017, i32 0, i32 33
  %5019 = getelementptr inbounds %struct.Reg, %struct.Reg* %5018, i32 0, i32 0
  %PC.i1538 = bitcast %union.anon* %5019 to i64*
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5021 = getelementptr inbounds %struct.GPR, %struct.GPR* %5020, i32 0, i32 7
  %5022 = getelementptr inbounds %struct.Reg, %struct.Reg* %5021, i32 0, i32 0
  %RDX.i1539 = bitcast %union.anon* %5022 to i64*
  %5023 = load i64, i64* %RDX.i1539
  %5024 = load i64, i64* %PC.i1538
  %5025 = add i64 %5024, 7
  store i64 %5025, i64* %PC.i1538
  %5026 = sext i64 %5023 to i128
  %5027 = and i128 %5026, -18446744073709551616
  %5028 = zext i64 %5023 to i128
  %5029 = or i128 %5027, %5028
  %5030 = mul i128 744, %5029
  %5031 = trunc i128 %5030 to i64
  store i64 %5031, i64* %RDX.i1539, align 8
  %5032 = sext i64 %5031 to i128
  %5033 = icmp ne i128 %5032, %5030
  %5034 = zext i1 %5033 to i8
  %5035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5034, i8* %5035, align 1
  %5036 = trunc i128 %5030 to i32
  %5037 = and i32 %5036, 255
  %5038 = call i32 @llvm.ctpop.i32(i32 %5037)
  %5039 = trunc i32 %5038 to i8
  %5040 = and i8 %5039, 1
  %5041 = xor i8 %5040, 1
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5041, i8* %5042, align 1
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5043, align 1
  %5044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5044, align 1
  %5045 = lshr i64 %5031, 63
  %5046 = trunc i64 %5045 to i8
  %5047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5046, i8* %5047, align 1
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5034, i8* %5048, align 1
  store %struct.Memory* %loadMem_40b5a8, %struct.Memory** %MEMORY
  %loadMem_40b5af = load %struct.Memory*, %struct.Memory** %MEMORY
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5050 = getelementptr inbounds %struct.GPR, %struct.GPR* %5049, i32 0, i32 33
  %5051 = getelementptr inbounds %struct.Reg, %struct.Reg* %5050, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %5051 to i64*
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5053 = getelementptr inbounds %struct.GPR, %struct.GPR* %5052, i32 0, i32 1
  %5054 = getelementptr inbounds %struct.Reg, %struct.Reg* %5053, i32 0, i32 0
  %RAX.i1536 = bitcast %union.anon* %5054 to i64*
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5056 = getelementptr inbounds %struct.GPR, %struct.GPR* %5055, i32 0, i32 7
  %5057 = getelementptr inbounds %struct.Reg, %struct.Reg* %5056, i32 0, i32 0
  %RDX.i1537 = bitcast %union.anon* %5057 to i64*
  %5058 = load i64, i64* %RAX.i1536
  %5059 = load i64, i64* %RDX.i1537
  %5060 = load i64, i64* %PC.i1535
  %5061 = add i64 %5060, 3
  store i64 %5061, i64* %PC.i1535
  %5062 = add i64 %5059, %5058
  store i64 %5062, i64* %RAX.i1536, align 8
  %5063 = icmp ult i64 %5062, %5058
  %5064 = icmp ult i64 %5062, %5059
  %5065 = or i1 %5063, %5064
  %5066 = zext i1 %5065 to i8
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5066, i8* %5067, align 1
  %5068 = trunc i64 %5062 to i32
  %5069 = and i32 %5068, 255
  %5070 = call i32 @llvm.ctpop.i32(i32 %5069)
  %5071 = trunc i32 %5070 to i8
  %5072 = and i8 %5071, 1
  %5073 = xor i8 %5072, 1
  %5074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5073, i8* %5074, align 1
  %5075 = xor i64 %5059, %5058
  %5076 = xor i64 %5075, %5062
  %5077 = lshr i64 %5076, 4
  %5078 = trunc i64 %5077 to i8
  %5079 = and i8 %5078, 1
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5079, i8* %5080, align 1
  %5081 = icmp eq i64 %5062, 0
  %5082 = zext i1 %5081 to i8
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5082, i8* %5083, align 1
  %5084 = lshr i64 %5062, 63
  %5085 = trunc i64 %5084 to i8
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5085, i8* %5086, align 1
  %5087 = lshr i64 %5058, 63
  %5088 = lshr i64 %5059, 63
  %5089 = xor i64 %5084, %5087
  %5090 = xor i64 %5084, %5088
  %5091 = add i64 %5089, %5090
  %5092 = icmp eq i64 %5091, 2
  %5093 = zext i1 %5092 to i8
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5093, i8* %5094, align 1
  store %struct.Memory* %loadMem_40b5af, %struct.Memory** %MEMORY
  %loadMem_40b5b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5096 = getelementptr inbounds %struct.GPR, %struct.GPR* %5095, i32 0, i32 33
  %5097 = getelementptr inbounds %struct.Reg, %struct.Reg* %5096, i32 0, i32 0
  %PC.i1532 = bitcast %union.anon* %5097 to i64*
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5099 = getelementptr inbounds %struct.GPR, %struct.GPR* %5098, i32 0, i32 1
  %5100 = getelementptr inbounds %struct.Reg, %struct.Reg* %5099, i32 0, i32 0
  %RAX.i1533 = bitcast %union.anon* %5100 to i64*
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5102 = getelementptr inbounds %struct.GPR, %struct.GPR* %5101, i32 0, i32 5
  %5103 = getelementptr inbounds %struct.Reg, %struct.Reg* %5102, i32 0, i32 0
  %RCX.i1534 = bitcast %union.anon* %5103 to i64*
  %5104 = load i64, i64* %RAX.i1533
  %5105 = add i64 %5104, 740
  %5106 = load i64, i64* %PC.i1532
  %5107 = add i64 %5106, 6
  store i64 %5107, i64* %PC.i1532
  %5108 = inttoptr i64 %5105 to i32*
  %5109 = load i32, i32* %5108
  %5110 = zext i32 %5109 to i64
  store i64 %5110, i64* %RCX.i1534, align 8
  store %struct.Memory* %loadMem_40b5b2, %struct.Memory** %MEMORY
  %loadMem_40b5b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5112 = getelementptr inbounds %struct.GPR, %struct.GPR* %5111, i32 0, i32 33
  %5113 = getelementptr inbounds %struct.Reg, %struct.Reg* %5112, i32 0, i32 0
  %PC.i1530 = bitcast %union.anon* %5113 to i64*
  %5114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5115 = getelementptr inbounds %struct.GPR, %struct.GPR* %5114, i32 0, i32 5
  %5116 = getelementptr inbounds %struct.Reg, %struct.Reg* %5115, i32 0, i32 0
  %ECX.i1531 = bitcast %union.anon* %5116 to i32*
  %5117 = load i32, i32* %ECX.i1531
  %5118 = zext i32 %5117 to i64
  %5119 = load i64, i64* %PC.i1530
  %5120 = add i64 %5119, 7
  store i64 %5120, i64* %PC.i1530
  %5121 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %5122 = sub i32 %5117, %5121
  %5123 = icmp ult i32 %5117, %5121
  %5124 = zext i1 %5123 to i8
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5124, i8* %5125, align 1
  %5126 = and i32 %5122, 255
  %5127 = call i32 @llvm.ctpop.i32(i32 %5126)
  %5128 = trunc i32 %5127 to i8
  %5129 = and i8 %5128, 1
  %5130 = xor i8 %5129, 1
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5130, i8* %5131, align 1
  %5132 = xor i32 %5121, %5117
  %5133 = xor i32 %5132, %5122
  %5134 = lshr i32 %5133, 4
  %5135 = trunc i32 %5134 to i8
  %5136 = and i8 %5135, 1
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5136, i8* %5137, align 1
  %5138 = icmp eq i32 %5122, 0
  %5139 = zext i1 %5138 to i8
  %5140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5139, i8* %5140, align 1
  %5141 = lshr i32 %5122, 31
  %5142 = trunc i32 %5141 to i8
  %5143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5142, i8* %5143, align 1
  %5144 = lshr i32 %5117, 31
  %5145 = lshr i32 %5121, 31
  %5146 = xor i32 %5145, %5144
  %5147 = xor i32 %5141, %5144
  %5148 = add i32 %5147, %5146
  %5149 = icmp eq i32 %5148, 2
  %5150 = zext i1 %5149 to i8
  %5151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5150, i8* %5151, align 1
  store %struct.Memory* %loadMem_40b5b8, %struct.Memory** %MEMORY
  %loadMem_40b5bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5153 = getelementptr inbounds %struct.GPR, %struct.GPR* %5152, i32 0, i32 33
  %5154 = getelementptr inbounds %struct.Reg, %struct.Reg* %5153, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %5154 to i64*
  %5155 = load i64, i64* %PC.i1529
  %5156 = add i64 %5155, 372
  %5157 = load i64, i64* %PC.i1529
  %5158 = add i64 %5157, 6
  %5159 = load i64, i64* %PC.i1529
  %5160 = add i64 %5159, 6
  store i64 %5160, i64* %PC.i1529
  %5161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5162 = load i8, i8* %5161, align 1
  store i8 %5162, i8* %BRANCH_TAKEN, align 1
  %5163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5164 = icmp ne i8 %5162, 0
  %5165 = select i1 %5164, i64 %5156, i64 %5158
  store i64 %5165, i64* %5163, align 8
  store %struct.Memory* %loadMem_40b5bf, %struct.Memory** %MEMORY
  %loadBr_40b5bf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b5bf = icmp eq i8 %loadBr_40b5bf, 1
  br i1 %cmpBr_40b5bf, label %block_.L_40b733, label %block_40b5c5

block_40b5c5:                                     ; preds = %block_40b58d
  %loadMem_40b5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5167 = getelementptr inbounds %struct.GPR, %struct.GPR* %5166, i32 0, i32 33
  %5168 = getelementptr inbounds %struct.Reg, %struct.Reg* %5167, i32 0, i32 0
  %PC.i1527 = bitcast %union.anon* %5168 to i64*
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5170 = getelementptr inbounds %struct.GPR, %struct.GPR* %5169, i32 0, i32 1
  %5171 = getelementptr inbounds %struct.Reg, %struct.Reg* %5170, i32 0, i32 0
  %RAX.i1528 = bitcast %union.anon* %5171 to i64*
  %5172 = load i64, i64* %PC.i1527
  %5173 = add i64 %5172, 10
  store i64 %5173, i64* %PC.i1527
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1528, align 8
  store %struct.Memory* %loadMem_40b5c5, %struct.Memory** %MEMORY
  %loadMem_40b5cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5175 = getelementptr inbounds %struct.GPR, %struct.GPR* %5174, i32 0, i32 33
  %5176 = getelementptr inbounds %struct.Reg, %struct.Reg* %5175, i32 0, i32 0
  %PC.i1524 = bitcast %union.anon* %5176 to i64*
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5178 = getelementptr inbounds %struct.GPR, %struct.GPR* %5177, i32 0, i32 5
  %5179 = getelementptr inbounds %struct.Reg, %struct.Reg* %5178, i32 0, i32 0
  %RCX.i1525 = bitcast %union.anon* %5179 to i64*
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5181 = getelementptr inbounds %struct.GPR, %struct.GPR* %5180, i32 0, i32 15
  %5182 = getelementptr inbounds %struct.Reg, %struct.Reg* %5181, i32 0, i32 0
  %RBP.i1526 = bitcast %union.anon* %5182 to i64*
  %5183 = load i64, i64* %RBP.i1526
  %5184 = sub i64 %5183, 4
  %5185 = load i64, i64* %PC.i1524
  %5186 = add i64 %5185, 3
  store i64 %5186, i64* %PC.i1524
  %5187 = inttoptr i64 %5184 to i32*
  %5188 = load i32, i32* %5187
  %5189 = zext i32 %5188 to i64
  store i64 %5189, i64* %RCX.i1525, align 8
  store %struct.Memory* %loadMem_40b5cf, %struct.Memory** %MEMORY
  %loadMem_40b5d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5191 = getelementptr inbounds %struct.GPR, %struct.GPR* %5190, i32 0, i32 33
  %5192 = getelementptr inbounds %struct.Reg, %struct.Reg* %5191, i32 0, i32 0
  %PC.i1522 = bitcast %union.anon* %5192 to i64*
  %5193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5194 = getelementptr inbounds %struct.GPR, %struct.GPR* %5193, i32 0, i32 5
  %5195 = getelementptr inbounds %struct.Reg, %struct.Reg* %5194, i32 0, i32 0
  %RCX.i1523 = bitcast %union.anon* %5195 to i64*
  %5196 = load i64, i64* %RCX.i1523
  %5197 = load i64, i64* %PC.i1522
  %5198 = add i64 %5197, 3
  store i64 %5198, i64* %PC.i1522
  %5199 = trunc i64 %5196 to i32
  %5200 = add i32 20, %5199
  %5201 = zext i32 %5200 to i64
  store i64 %5201, i64* %RCX.i1523, align 8
  %5202 = icmp ult i32 %5200, %5199
  %5203 = icmp ult i32 %5200, 20
  %5204 = or i1 %5202, %5203
  %5205 = zext i1 %5204 to i8
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5205, i8* %5206, align 1
  %5207 = and i32 %5200, 255
  %5208 = call i32 @llvm.ctpop.i32(i32 %5207)
  %5209 = trunc i32 %5208 to i8
  %5210 = and i8 %5209, 1
  %5211 = xor i8 %5210, 1
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5211, i8* %5212, align 1
  %5213 = xor i64 20, %5196
  %5214 = trunc i64 %5213 to i32
  %5215 = xor i32 %5214, %5200
  %5216 = lshr i32 %5215, 4
  %5217 = trunc i32 %5216 to i8
  %5218 = and i8 %5217, 1
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5218, i8* %5219, align 1
  %5220 = icmp eq i32 %5200, 0
  %5221 = zext i1 %5220 to i8
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5221, i8* %5222, align 1
  %5223 = lshr i32 %5200, 31
  %5224 = trunc i32 %5223 to i8
  %5225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5224, i8* %5225, align 1
  %5226 = lshr i32 %5199, 31
  %5227 = xor i32 %5223, %5226
  %5228 = add i32 %5227, %5223
  %5229 = icmp eq i32 %5228, 2
  %5230 = zext i1 %5229 to i8
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5230, i8* %5231, align 1
  store %struct.Memory* %loadMem_40b5d2, %struct.Memory** %MEMORY
  %loadMem_40b5d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5233 = getelementptr inbounds %struct.GPR, %struct.GPR* %5232, i32 0, i32 33
  %5234 = getelementptr inbounds %struct.Reg, %struct.Reg* %5233, i32 0, i32 0
  %PC.i1519 = bitcast %union.anon* %5234 to i64*
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 5
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %ECX.i1520 = bitcast %union.anon* %5237 to i32*
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5239 = getelementptr inbounds %struct.GPR, %struct.GPR* %5238, i32 0, i32 7
  %5240 = getelementptr inbounds %struct.Reg, %struct.Reg* %5239, i32 0, i32 0
  %RDX.i1521 = bitcast %union.anon* %5240 to i64*
  %5241 = load i32, i32* %ECX.i1520
  %5242 = zext i32 %5241 to i64
  %5243 = load i64, i64* %PC.i1519
  %5244 = add i64 %5243, 3
  store i64 %5244, i64* %PC.i1519
  %5245 = shl i64 %5242, 32
  %5246 = ashr exact i64 %5245, 32
  store i64 %5246, i64* %RDX.i1521, align 8
  store %struct.Memory* %loadMem_40b5d5, %struct.Memory** %MEMORY
  %loadMem_40b5d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5248 = getelementptr inbounds %struct.GPR, %struct.GPR* %5247, i32 0, i32 33
  %5249 = getelementptr inbounds %struct.Reg, %struct.Reg* %5248, i32 0, i32 0
  %PC.i1516 = bitcast %union.anon* %5249 to i64*
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5251 = getelementptr inbounds %struct.GPR, %struct.GPR* %5250, i32 0, i32 5
  %5252 = getelementptr inbounds %struct.Reg, %struct.Reg* %5251, i32 0, i32 0
  %RCX.i1517 = bitcast %union.anon* %5252 to i64*
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5254 = getelementptr inbounds %struct.GPR, %struct.GPR* %5253, i32 0, i32 7
  %5255 = getelementptr inbounds %struct.Reg, %struct.Reg* %5254, i32 0, i32 0
  %RDX.i1518 = bitcast %union.anon* %5255 to i64*
  %5256 = load i64, i64* %RDX.i1518
  %5257 = mul i64 %5256, 4
  %5258 = add i64 %5257, 11187184
  %5259 = load i64, i64* %PC.i1516
  %5260 = add i64 %5259, 7
  store i64 %5260, i64* %PC.i1516
  %5261 = inttoptr i64 %5258 to i32*
  %5262 = load i32, i32* %5261
  %5263 = zext i32 %5262 to i64
  store i64 %5263, i64* %RCX.i1517, align 8
  store %struct.Memory* %loadMem_40b5d8, %struct.Memory** %MEMORY
  %loadMem_40b5df = load %struct.Memory*, %struct.Memory** %MEMORY
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5265 = getelementptr inbounds %struct.GPR, %struct.GPR* %5264, i32 0, i32 33
  %5266 = getelementptr inbounds %struct.Reg, %struct.Reg* %5265, i32 0, i32 0
  %PC.i1513 = bitcast %union.anon* %5266 to i64*
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5268 = getelementptr inbounds %struct.GPR, %struct.GPR* %5267, i32 0, i32 5
  %5269 = getelementptr inbounds %struct.Reg, %struct.Reg* %5268, i32 0, i32 0
  %ECX.i1514 = bitcast %union.anon* %5269 to i32*
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5271 = getelementptr inbounds %struct.GPR, %struct.GPR* %5270, i32 0, i32 15
  %5272 = getelementptr inbounds %struct.Reg, %struct.Reg* %5271, i32 0, i32 0
  %RBP.i1515 = bitcast %union.anon* %5272 to i64*
  %5273 = load i64, i64* %RBP.i1515
  %5274 = sub i64 %5273, 32
  %5275 = load i32, i32* %ECX.i1514
  %5276 = zext i32 %5275 to i64
  %5277 = load i64, i64* %PC.i1513
  %5278 = add i64 %5277, 3
  store i64 %5278, i64* %PC.i1513
  %5279 = inttoptr i64 %5274 to i32*
  store i32 %5275, i32* %5279
  store %struct.Memory* %loadMem_40b5df, %struct.Memory** %MEMORY
  %loadMem_40b5e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5281 = getelementptr inbounds %struct.GPR, %struct.GPR* %5280, i32 0, i32 33
  %5282 = getelementptr inbounds %struct.Reg, %struct.Reg* %5281, i32 0, i32 0
  %PC.i1510 = bitcast %union.anon* %5282 to i64*
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5284 = getelementptr inbounds %struct.GPR, %struct.GPR* %5283, i32 0, i32 7
  %5285 = getelementptr inbounds %struct.Reg, %struct.Reg* %5284, i32 0, i32 0
  %RDX.i1511 = bitcast %union.anon* %5285 to i64*
  %5286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5287 = getelementptr inbounds %struct.GPR, %struct.GPR* %5286, i32 0, i32 15
  %5288 = getelementptr inbounds %struct.Reg, %struct.Reg* %5287, i32 0, i32 0
  %RBP.i1512 = bitcast %union.anon* %5288 to i64*
  %5289 = load i64, i64* %RBP.i1512
  %5290 = sub i64 %5289, 8
  %5291 = load i64, i64* %PC.i1510
  %5292 = add i64 %5291, 4
  store i64 %5292, i64* %PC.i1510
  %5293 = inttoptr i64 %5290 to i32*
  %5294 = load i32, i32* %5293
  %5295 = sext i32 %5294 to i64
  store i64 %5295, i64* %RDX.i1511, align 8
  store %struct.Memory* %loadMem_40b5e2, %struct.Memory** %MEMORY
  %loadMem_40b5e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5297 = getelementptr inbounds %struct.GPR, %struct.GPR* %5296, i32 0, i32 33
  %5298 = getelementptr inbounds %struct.Reg, %struct.Reg* %5297, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %5298 to i64*
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5300 = getelementptr inbounds %struct.GPR, %struct.GPR* %5299, i32 0, i32 7
  %5301 = getelementptr inbounds %struct.Reg, %struct.Reg* %5300, i32 0, i32 0
  %RDX.i1509 = bitcast %union.anon* %5301 to i64*
  %5302 = load i64, i64* %RDX.i1509
  %5303 = load i64, i64* %PC.i1508
  %5304 = add i64 %5303, 7
  store i64 %5304, i64* %PC.i1508
  %5305 = sext i64 %5302 to i128
  %5306 = and i128 %5305, -18446744073709551616
  %5307 = zext i64 %5302 to i128
  %5308 = or i128 %5306, %5307
  %5309 = mul i128 744, %5308
  %5310 = trunc i128 %5309 to i64
  store i64 %5310, i64* %RDX.i1509, align 8
  %5311 = sext i64 %5310 to i128
  %5312 = icmp ne i128 %5311, %5309
  %5313 = zext i1 %5312 to i8
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5313, i8* %5314, align 1
  %5315 = trunc i128 %5309 to i32
  %5316 = and i32 %5315, 255
  %5317 = call i32 @llvm.ctpop.i32(i32 %5316)
  %5318 = trunc i32 %5317 to i8
  %5319 = and i8 %5318, 1
  %5320 = xor i8 %5319, 1
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5320, i8* %5321, align 1
  %5322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5322, align 1
  %5323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5323, align 1
  %5324 = lshr i64 %5310, 63
  %5325 = trunc i64 %5324 to i8
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5325, i8* %5326, align 1
  %5327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5313, i8* %5327, align 1
  store %struct.Memory* %loadMem_40b5e6, %struct.Memory** %MEMORY
  %loadMem_40b5ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %5328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5329 = getelementptr inbounds %struct.GPR, %struct.GPR* %5328, i32 0, i32 33
  %5330 = getelementptr inbounds %struct.Reg, %struct.Reg* %5329, i32 0, i32 0
  %PC.i1505 = bitcast %union.anon* %5330 to i64*
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5332 = getelementptr inbounds %struct.GPR, %struct.GPR* %5331, i32 0, i32 1
  %5333 = getelementptr inbounds %struct.Reg, %struct.Reg* %5332, i32 0, i32 0
  %RAX.i1506 = bitcast %union.anon* %5333 to i64*
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5335 = getelementptr inbounds %struct.GPR, %struct.GPR* %5334, i32 0, i32 9
  %5336 = getelementptr inbounds %struct.Reg, %struct.Reg* %5335, i32 0, i32 0
  %RSI.i1507 = bitcast %union.anon* %5336 to i64*
  %5337 = load i64, i64* %RAX.i1506
  %5338 = load i64, i64* %PC.i1505
  %5339 = add i64 %5338, 3
  store i64 %5339, i64* %PC.i1505
  store i64 %5337, i64* %RSI.i1507, align 8
  store %struct.Memory* %loadMem_40b5ed, %struct.Memory** %MEMORY
  %loadMem_40b5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5341 = getelementptr inbounds %struct.GPR, %struct.GPR* %5340, i32 0, i32 33
  %5342 = getelementptr inbounds %struct.Reg, %struct.Reg* %5341, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %5342 to i64*
  %5343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5344 = getelementptr inbounds %struct.GPR, %struct.GPR* %5343, i32 0, i32 7
  %5345 = getelementptr inbounds %struct.Reg, %struct.Reg* %5344, i32 0, i32 0
  %RDX.i1503 = bitcast %union.anon* %5345 to i64*
  %5346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5347 = getelementptr inbounds %struct.GPR, %struct.GPR* %5346, i32 0, i32 9
  %5348 = getelementptr inbounds %struct.Reg, %struct.Reg* %5347, i32 0, i32 0
  %RSI.i1504 = bitcast %union.anon* %5348 to i64*
  %5349 = load i64, i64* %RSI.i1504
  %5350 = load i64, i64* %RDX.i1503
  %5351 = load i64, i64* %PC.i1502
  %5352 = add i64 %5351, 3
  store i64 %5352, i64* %PC.i1502
  %5353 = add i64 %5350, %5349
  store i64 %5353, i64* %RSI.i1504, align 8
  %5354 = icmp ult i64 %5353, %5349
  %5355 = icmp ult i64 %5353, %5350
  %5356 = or i1 %5354, %5355
  %5357 = zext i1 %5356 to i8
  %5358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5357, i8* %5358, align 1
  %5359 = trunc i64 %5353 to i32
  %5360 = and i32 %5359, 255
  %5361 = call i32 @llvm.ctpop.i32(i32 %5360)
  %5362 = trunc i32 %5361 to i8
  %5363 = and i8 %5362, 1
  %5364 = xor i8 %5363, 1
  %5365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5364, i8* %5365, align 1
  %5366 = xor i64 %5350, %5349
  %5367 = xor i64 %5366, %5353
  %5368 = lshr i64 %5367, 4
  %5369 = trunc i64 %5368 to i8
  %5370 = and i8 %5369, 1
  %5371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5370, i8* %5371, align 1
  %5372 = icmp eq i64 %5353, 0
  %5373 = zext i1 %5372 to i8
  %5374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5373, i8* %5374, align 1
  %5375 = lshr i64 %5353, 63
  %5376 = trunc i64 %5375 to i8
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5376, i8* %5377, align 1
  %5378 = lshr i64 %5349, 63
  %5379 = lshr i64 %5350, 63
  %5380 = xor i64 %5375, %5378
  %5381 = xor i64 %5375, %5379
  %5382 = add i64 %5380, %5381
  %5383 = icmp eq i64 %5382, 2
  %5384 = zext i1 %5383 to i8
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5384, i8* %5385, align 1
  store %struct.Memory* %loadMem_40b5f0, %struct.Memory** %MEMORY
  %loadMem_40b5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5387 = getelementptr inbounds %struct.GPR, %struct.GPR* %5386, i32 0, i32 33
  %5388 = getelementptr inbounds %struct.Reg, %struct.Reg* %5387, i32 0, i32 0
  %PC.i1500 = bitcast %union.anon* %5388 to i64*
  %5389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5390 = getelementptr inbounds %struct.GPR, %struct.GPR* %5389, i32 0, i32 9
  %5391 = getelementptr inbounds %struct.Reg, %struct.Reg* %5390, i32 0, i32 0
  %RSI.i1501 = bitcast %union.anon* %5391 to i64*
  %5392 = load i64, i64* %RSI.i1501
  %5393 = load i64, i64* %PC.i1500
  %5394 = add i64 %5393, 4
  store i64 %5394, i64* %PC.i1500
  %5395 = add i64 96, %5392
  store i64 %5395, i64* %RSI.i1501, align 8
  %5396 = icmp ult i64 %5395, %5392
  %5397 = icmp ult i64 %5395, 96
  %5398 = or i1 %5396, %5397
  %5399 = zext i1 %5398 to i8
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5399, i8* %5400, align 1
  %5401 = trunc i64 %5395 to i32
  %5402 = and i32 %5401, 255
  %5403 = call i32 @llvm.ctpop.i32(i32 %5402)
  %5404 = trunc i32 %5403 to i8
  %5405 = and i8 %5404, 1
  %5406 = xor i8 %5405, 1
  %5407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5406, i8* %5407, align 1
  %5408 = xor i64 96, %5392
  %5409 = xor i64 %5408, %5395
  %5410 = lshr i64 %5409, 4
  %5411 = trunc i64 %5410 to i8
  %5412 = and i8 %5411, 1
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5412, i8* %5413, align 1
  %5414 = icmp eq i64 %5395, 0
  %5415 = zext i1 %5414 to i8
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5415, i8* %5416, align 1
  %5417 = lshr i64 %5395, 63
  %5418 = trunc i64 %5417 to i8
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5418, i8* %5419, align 1
  %5420 = lshr i64 %5392, 63
  %5421 = xor i64 %5417, %5420
  %5422 = add i64 %5421, %5417
  %5423 = icmp eq i64 %5422, 2
  %5424 = zext i1 %5423 to i8
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5424, i8* %5425, align 1
  store %struct.Memory* %loadMem_40b5f3, %struct.Memory** %MEMORY
  %loadMem_40b5f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5427 = getelementptr inbounds %struct.GPR, %struct.GPR* %5426, i32 0, i32 33
  %5428 = getelementptr inbounds %struct.Reg, %struct.Reg* %5427, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %5428 to i64*
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5430 = getelementptr inbounds %struct.GPR, %struct.GPR* %5429, i32 0, i32 7
  %5431 = getelementptr inbounds %struct.Reg, %struct.Reg* %5430, i32 0, i32 0
  %RDX.i1499 = bitcast %union.anon* %5431 to i64*
  %5432 = load i64, i64* %PC.i1498
  %5433 = add i64 %5432, 8
  store i64 %5433, i64* %PC.i1498
  %5434 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %5434, i64* %RDX.i1499, align 8
  store %struct.Memory* %loadMem_40b5f7, %struct.Memory** %MEMORY
  %loadMem_40b5ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5436 = getelementptr inbounds %struct.GPR, %struct.GPR* %5435, i32 0, i32 33
  %5437 = getelementptr inbounds %struct.Reg, %struct.Reg* %5436, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %5437 to i64*
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5439 = getelementptr inbounds %struct.GPR, %struct.GPR* %5438, i32 0, i32 7
  %5440 = getelementptr inbounds %struct.Reg, %struct.Reg* %5439, i32 0, i32 0
  %RDX.i1496 = bitcast %union.anon* %5440 to i64*
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5442 = getelementptr inbounds %struct.GPR, %struct.GPR* %5441, i32 0, i32 9
  %5443 = getelementptr inbounds %struct.Reg, %struct.Reg* %5442, i32 0, i32 0
  %RSI.i1497 = bitcast %union.anon* %5443 to i64*
  %5444 = load i64, i64* %RDX.i1496
  %5445 = load i64, i64* %RSI.i1497
  %5446 = load i64, i64* %PC.i1495
  %5447 = add i64 %5446, 3
  store i64 %5447, i64* %PC.i1495
  %5448 = inttoptr i64 %5444 to i64*
  store i64 %5445, i64* %5448
  store %struct.Memory* %loadMem_40b5ff, %struct.Memory** %MEMORY
  %loadMem_40b602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5450 = getelementptr inbounds %struct.GPR, %struct.GPR* %5449, i32 0, i32 33
  %5451 = getelementptr inbounds %struct.Reg, %struct.Reg* %5450, i32 0, i32 0
  %PC.i1492 = bitcast %union.anon* %5451 to i64*
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5453 = getelementptr inbounds %struct.GPR, %struct.GPR* %5452, i32 0, i32 7
  %5454 = getelementptr inbounds %struct.Reg, %struct.Reg* %5453, i32 0, i32 0
  %RDX.i1493 = bitcast %union.anon* %5454 to i64*
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5456 = getelementptr inbounds %struct.GPR, %struct.GPR* %5455, i32 0, i32 15
  %5457 = getelementptr inbounds %struct.Reg, %struct.Reg* %5456, i32 0, i32 0
  %RBP.i1494 = bitcast %union.anon* %5457 to i64*
  %5458 = load i64, i64* %RBP.i1494
  %5459 = sub i64 %5458, 8
  %5460 = load i64, i64* %PC.i1492
  %5461 = add i64 %5460, 4
  store i64 %5461, i64* %PC.i1492
  %5462 = inttoptr i64 %5459 to i32*
  %5463 = load i32, i32* %5462
  %5464 = sext i32 %5463 to i64
  store i64 %5464, i64* %RDX.i1493, align 8
  store %struct.Memory* %loadMem_40b602, %struct.Memory** %MEMORY
  %loadMem_40b606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5466 = getelementptr inbounds %struct.GPR, %struct.GPR* %5465, i32 0, i32 33
  %5467 = getelementptr inbounds %struct.Reg, %struct.Reg* %5466, i32 0, i32 0
  %PC.i1490 = bitcast %union.anon* %5467 to i64*
  %5468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5469 = getelementptr inbounds %struct.GPR, %struct.GPR* %5468, i32 0, i32 7
  %5470 = getelementptr inbounds %struct.Reg, %struct.Reg* %5469, i32 0, i32 0
  %RDX.i1491 = bitcast %union.anon* %5470 to i64*
  %5471 = load i64, i64* %RDX.i1491
  %5472 = load i64, i64* %PC.i1490
  %5473 = add i64 %5472, 7
  store i64 %5473, i64* %PC.i1490
  %5474 = sext i64 %5471 to i128
  %5475 = and i128 %5474, -18446744073709551616
  %5476 = zext i64 %5471 to i128
  %5477 = or i128 %5475, %5476
  %5478 = mul i128 744, %5477
  %5479 = trunc i128 %5478 to i64
  store i64 %5479, i64* %RDX.i1491, align 8
  %5480 = sext i64 %5479 to i128
  %5481 = icmp ne i128 %5480, %5478
  %5482 = zext i1 %5481 to i8
  %5483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5482, i8* %5483, align 1
  %5484 = trunc i128 %5478 to i32
  %5485 = and i32 %5484, 255
  %5486 = call i32 @llvm.ctpop.i32(i32 %5485)
  %5487 = trunc i32 %5486 to i8
  %5488 = and i8 %5487, 1
  %5489 = xor i8 %5488, 1
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5489, i8* %5490, align 1
  %5491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5491, align 1
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5492, align 1
  %5493 = lshr i64 %5479, 63
  %5494 = trunc i64 %5493 to i8
  %5495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5494, i8* %5495, align 1
  %5496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5482, i8* %5496, align 1
  store %struct.Memory* %loadMem_40b606, %struct.Memory** %MEMORY
  %loadMem_40b60d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5498 = getelementptr inbounds %struct.GPR, %struct.GPR* %5497, i32 0, i32 33
  %5499 = getelementptr inbounds %struct.Reg, %struct.Reg* %5498, i32 0, i32 0
  %PC.i1487 = bitcast %union.anon* %5499 to i64*
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 1
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %RAX.i1488 = bitcast %union.anon* %5502 to i64*
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5504 = getelementptr inbounds %struct.GPR, %struct.GPR* %5503, i32 0, i32 9
  %5505 = getelementptr inbounds %struct.Reg, %struct.Reg* %5504, i32 0, i32 0
  %RSI.i1489 = bitcast %union.anon* %5505 to i64*
  %5506 = load i64, i64* %RAX.i1488
  %5507 = load i64, i64* %PC.i1487
  %5508 = add i64 %5507, 3
  store i64 %5508, i64* %PC.i1487
  store i64 %5506, i64* %RSI.i1489, align 8
  store %struct.Memory* %loadMem_40b60d, %struct.Memory** %MEMORY
  %loadMem_40b610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5510 = getelementptr inbounds %struct.GPR, %struct.GPR* %5509, i32 0, i32 33
  %5511 = getelementptr inbounds %struct.Reg, %struct.Reg* %5510, i32 0, i32 0
  %PC.i1484 = bitcast %union.anon* %5511 to i64*
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5513 = getelementptr inbounds %struct.GPR, %struct.GPR* %5512, i32 0, i32 7
  %5514 = getelementptr inbounds %struct.Reg, %struct.Reg* %5513, i32 0, i32 0
  %RDX.i1485 = bitcast %union.anon* %5514 to i64*
  %5515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5516 = getelementptr inbounds %struct.GPR, %struct.GPR* %5515, i32 0, i32 9
  %5517 = getelementptr inbounds %struct.Reg, %struct.Reg* %5516, i32 0, i32 0
  %RSI.i1486 = bitcast %union.anon* %5517 to i64*
  %5518 = load i64, i64* %RSI.i1486
  %5519 = load i64, i64* %RDX.i1485
  %5520 = load i64, i64* %PC.i1484
  %5521 = add i64 %5520, 3
  store i64 %5521, i64* %PC.i1484
  %5522 = add i64 %5519, %5518
  store i64 %5522, i64* %RSI.i1486, align 8
  %5523 = icmp ult i64 %5522, %5518
  %5524 = icmp ult i64 %5522, %5519
  %5525 = or i1 %5523, %5524
  %5526 = zext i1 %5525 to i8
  %5527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5526, i8* %5527, align 1
  %5528 = trunc i64 %5522 to i32
  %5529 = and i32 %5528, 255
  %5530 = call i32 @llvm.ctpop.i32(i32 %5529)
  %5531 = trunc i32 %5530 to i8
  %5532 = and i8 %5531, 1
  %5533 = xor i8 %5532, 1
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5533, i8* %5534, align 1
  %5535 = xor i64 %5519, %5518
  %5536 = xor i64 %5535, %5522
  %5537 = lshr i64 %5536, 4
  %5538 = trunc i64 %5537 to i8
  %5539 = and i8 %5538, 1
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5539, i8* %5540, align 1
  %5541 = icmp eq i64 %5522, 0
  %5542 = zext i1 %5541 to i8
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5542, i8* %5543, align 1
  %5544 = lshr i64 %5522, 63
  %5545 = trunc i64 %5544 to i8
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5545, i8* %5546, align 1
  %5547 = lshr i64 %5518, 63
  %5548 = lshr i64 %5519, 63
  %5549 = xor i64 %5544, %5547
  %5550 = xor i64 %5544, %5548
  %5551 = add i64 %5549, %5550
  %5552 = icmp eq i64 %5551, 2
  %5553 = zext i1 %5552 to i8
  %5554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5553, i8* %5554, align 1
  store %struct.Memory* %loadMem_40b610, %struct.Memory** %MEMORY
  %loadMem_40b613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5556 = getelementptr inbounds %struct.GPR, %struct.GPR* %5555, i32 0, i32 33
  %5557 = getelementptr inbounds %struct.Reg, %struct.Reg* %5556, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %5557 to i64*
  %5558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5559 = getelementptr inbounds %struct.GPR, %struct.GPR* %5558, i32 0, i32 5
  %5560 = getelementptr inbounds %struct.Reg, %struct.Reg* %5559, i32 0, i32 0
  %RCX.i1482 = bitcast %union.anon* %5560 to i64*
  %5561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5562 = getelementptr inbounds %struct.GPR, %struct.GPR* %5561, i32 0, i32 9
  %5563 = getelementptr inbounds %struct.Reg, %struct.Reg* %5562, i32 0, i32 0
  %RSI.i1483 = bitcast %union.anon* %5563 to i64*
  %5564 = load i64, i64* %RSI.i1483
  %5565 = add i64 %5564, 96
  %5566 = load i64, i64* %PC.i1481
  %5567 = add i64 %5566, 3
  store i64 %5567, i64* %PC.i1481
  %5568 = inttoptr i64 %5565 to i32*
  %5569 = load i32, i32* %5568
  %5570 = zext i32 %5569 to i64
  store i64 %5570, i64* %RCX.i1482, align 8
  store %struct.Memory* %loadMem_40b613, %struct.Memory** %MEMORY
  %loadMem_40b616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5572 = getelementptr inbounds %struct.GPR, %struct.GPR* %5571, i32 0, i32 33
  %5573 = getelementptr inbounds %struct.Reg, %struct.Reg* %5572, i32 0, i32 0
  %PC.i1479 = bitcast %union.anon* %5573 to i64*
  %5574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5575 = getelementptr inbounds %struct.GPR, %struct.GPR* %5574, i32 0, i32 7
  %5576 = getelementptr inbounds %struct.Reg, %struct.Reg* %5575, i32 0, i32 0
  %RDX.i1480 = bitcast %union.anon* %5576 to i64*
  %5577 = load i64, i64* %PC.i1479
  %5578 = add i64 %5577, 8
  store i64 %5578, i64* %PC.i1479
  %5579 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %5579, i64* %RDX.i1480, align 8
  store %struct.Memory* %loadMem_40b616, %struct.Memory** %MEMORY
  %loadMem_40b61e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5581 = getelementptr inbounds %struct.GPR, %struct.GPR* %5580, i32 0, i32 33
  %5582 = getelementptr inbounds %struct.Reg, %struct.Reg* %5581, i32 0, i32 0
  %PC.i1476 = bitcast %union.anon* %5582 to i64*
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5584 = getelementptr inbounds %struct.GPR, %struct.GPR* %5583, i32 0, i32 7
  %5585 = getelementptr inbounds %struct.Reg, %struct.Reg* %5584, i32 0, i32 0
  %RDX.i1477 = bitcast %union.anon* %5585 to i64*
  %5586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5587 = getelementptr inbounds %struct.GPR, %struct.GPR* %5586, i32 0, i32 9
  %5588 = getelementptr inbounds %struct.Reg, %struct.Reg* %5587, i32 0, i32 0
  %RSI.i1478 = bitcast %union.anon* %5588 to i64*
  %5589 = load i64, i64* %RDX.i1477
  %5590 = load i64, i64* %PC.i1476
  %5591 = add i64 %5590, 3
  store i64 %5591, i64* %PC.i1476
  store i64 %5589, i64* %RSI.i1478, align 8
  store %struct.Memory* %loadMem_40b61e, %struct.Memory** %MEMORY
  %loadMem_40b621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5593 = getelementptr inbounds %struct.GPR, %struct.GPR* %5592, i32 0, i32 33
  %5594 = getelementptr inbounds %struct.Reg, %struct.Reg* %5593, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %5594 to i64*
  %5595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5596 = getelementptr inbounds %struct.GPR, %struct.GPR* %5595, i32 0, i32 9
  %5597 = getelementptr inbounds %struct.Reg, %struct.Reg* %5596, i32 0, i32 0
  %RSI.i1475 = bitcast %union.anon* %5597 to i64*
  %5598 = load i64, i64* %RSI.i1475
  %5599 = load i64, i64* %PC.i1474
  %5600 = add i64 %5599, 4
  store i64 %5600, i64* %PC.i1474
  %5601 = add i64 16, %5598
  store i64 %5601, i64* %RSI.i1475, align 8
  %5602 = icmp ult i64 %5601, %5598
  %5603 = icmp ult i64 %5601, 16
  %5604 = or i1 %5602, %5603
  %5605 = zext i1 %5604 to i8
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5605, i8* %5606, align 1
  %5607 = trunc i64 %5601 to i32
  %5608 = and i32 %5607, 255
  %5609 = call i32 @llvm.ctpop.i32(i32 %5608)
  %5610 = trunc i32 %5609 to i8
  %5611 = and i8 %5610, 1
  %5612 = xor i8 %5611, 1
  %5613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5612, i8* %5613, align 1
  %5614 = xor i64 16, %5598
  %5615 = xor i64 %5614, %5601
  %5616 = lshr i64 %5615, 4
  %5617 = trunc i64 %5616 to i8
  %5618 = and i8 %5617, 1
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5618, i8* %5619, align 1
  %5620 = icmp eq i64 %5601, 0
  %5621 = zext i1 %5620 to i8
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5621, i8* %5622, align 1
  %5623 = lshr i64 %5601, 63
  %5624 = trunc i64 %5623 to i8
  %5625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5624, i8* %5625, align 1
  %5626 = lshr i64 %5598, 63
  %5627 = xor i64 %5623, %5626
  %5628 = add i64 %5627, %5623
  %5629 = icmp eq i64 %5628, 2
  %5630 = zext i1 %5629 to i8
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5630, i8* %5631, align 1
  store %struct.Memory* %loadMem_40b621, %struct.Memory** %MEMORY
  %loadMem_40b625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5633 = getelementptr inbounds %struct.GPR, %struct.GPR* %5632, i32 0, i32 33
  %5634 = getelementptr inbounds %struct.Reg, %struct.Reg* %5633, i32 0, i32 0
  %PC.i1472 = bitcast %union.anon* %5634 to i64*
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5636 = getelementptr inbounds %struct.GPR, %struct.GPR* %5635, i32 0, i32 9
  %5637 = getelementptr inbounds %struct.Reg, %struct.Reg* %5636, i32 0, i32 0
  %RSI.i1473 = bitcast %union.anon* %5637 to i64*
  %5638 = load i64, i64* %RSI.i1473
  %5639 = load i64, i64* %PC.i1472
  %5640 = add i64 %5639, 8
  store i64 %5640, i64* %PC.i1472
  store i64 %5638, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40b625, %struct.Memory** %MEMORY
  %loadMem_40b62d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5642 = getelementptr inbounds %struct.GPR, %struct.GPR* %5641, i32 0, i32 33
  %5643 = getelementptr inbounds %struct.Reg, %struct.Reg* %5642, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %5643 to i64*
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5645 = getelementptr inbounds %struct.GPR, %struct.GPR* %5644, i32 0, i32 5
  %5646 = getelementptr inbounds %struct.Reg, %struct.Reg* %5645, i32 0, i32 0
  %ECX.i1470 = bitcast %union.anon* %5646 to i32*
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5648 = getelementptr inbounds %struct.GPR, %struct.GPR* %5647, i32 0, i32 7
  %5649 = getelementptr inbounds %struct.Reg, %struct.Reg* %5648, i32 0, i32 0
  %RDX.i1471 = bitcast %union.anon* %5649 to i64*
  %5650 = load i64, i64* %RDX.i1471
  %5651 = add i64 %5650, 8
  %5652 = load i32, i32* %ECX.i1470
  %5653 = zext i32 %5652 to i64
  %5654 = load i64, i64* %PC.i1469
  %5655 = add i64 %5654, 3
  store i64 %5655, i64* %PC.i1469
  %5656 = inttoptr i64 %5651 to i32*
  store i32 %5652, i32* %5656
  store %struct.Memory* %loadMem_40b62d, %struct.Memory** %MEMORY
  %loadMem_40b630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5658 = getelementptr inbounds %struct.GPR, %struct.GPR* %5657, i32 0, i32 33
  %5659 = getelementptr inbounds %struct.Reg, %struct.Reg* %5658, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %5659 to i64*
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5661 = getelementptr inbounds %struct.GPR, %struct.GPR* %5660, i32 0, i32 5
  %5662 = getelementptr inbounds %struct.Reg, %struct.Reg* %5661, i32 0, i32 0
  %RCX.i1467 = bitcast %union.anon* %5662 to i64*
  %5663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5664 = getelementptr inbounds %struct.GPR, %struct.GPR* %5663, i32 0, i32 15
  %5665 = getelementptr inbounds %struct.Reg, %struct.Reg* %5664, i32 0, i32 0
  %RBP.i1468 = bitcast %union.anon* %5665 to i64*
  %5666 = load i64, i64* %RBP.i1468
  %5667 = sub i64 %5666, 4
  %5668 = load i64, i64* %PC.i1466
  %5669 = add i64 %5668, 3
  store i64 %5669, i64* %PC.i1466
  %5670 = inttoptr i64 %5667 to i32*
  %5671 = load i32, i32* %5670
  %5672 = zext i32 %5671 to i64
  store i64 %5672, i64* %RCX.i1467, align 8
  store %struct.Memory* %loadMem_40b630, %struct.Memory** %MEMORY
  %loadMem_40b633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5674 = getelementptr inbounds %struct.GPR, %struct.GPR* %5673, i32 0, i32 33
  %5675 = getelementptr inbounds %struct.Reg, %struct.Reg* %5674, i32 0, i32 0
  %PC.i1464 = bitcast %union.anon* %5675 to i64*
  %5676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5677 = getelementptr inbounds %struct.GPR, %struct.GPR* %5676, i32 0, i32 5
  %5678 = getelementptr inbounds %struct.Reg, %struct.Reg* %5677, i32 0, i32 0
  %RCX.i1465 = bitcast %union.anon* %5678 to i64*
  %5679 = load i64, i64* %RCX.i1465
  %5680 = load i64, i64* %PC.i1464
  %5681 = add i64 %5680, 3
  store i64 %5681, i64* %PC.i1464
  %5682 = trunc i64 %5679 to i32
  %5683 = add i32 20, %5682
  %5684 = zext i32 %5683 to i64
  store i64 %5684, i64* %RCX.i1465, align 8
  %5685 = icmp ult i32 %5683, %5682
  %5686 = icmp ult i32 %5683, 20
  %5687 = or i1 %5685, %5686
  %5688 = zext i1 %5687 to i8
  %5689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5688, i8* %5689, align 1
  %5690 = and i32 %5683, 255
  %5691 = call i32 @llvm.ctpop.i32(i32 %5690)
  %5692 = trunc i32 %5691 to i8
  %5693 = and i8 %5692, 1
  %5694 = xor i8 %5693, 1
  %5695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5694, i8* %5695, align 1
  %5696 = xor i64 20, %5679
  %5697 = trunc i64 %5696 to i32
  %5698 = xor i32 %5697, %5683
  %5699 = lshr i32 %5698, 4
  %5700 = trunc i32 %5699 to i8
  %5701 = and i8 %5700, 1
  %5702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5701, i8* %5702, align 1
  %5703 = icmp eq i32 %5683, 0
  %5704 = zext i1 %5703 to i8
  %5705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5704, i8* %5705, align 1
  %5706 = lshr i32 %5683, 31
  %5707 = trunc i32 %5706 to i8
  %5708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5707, i8* %5708, align 1
  %5709 = lshr i32 %5682, 31
  %5710 = xor i32 %5706, %5709
  %5711 = add i32 %5710, %5706
  %5712 = icmp eq i32 %5711, 2
  %5713 = zext i1 %5712 to i8
  %5714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5713, i8* %5714, align 1
  store %struct.Memory* %loadMem_40b633, %struct.Memory** %MEMORY
  %loadMem_40b636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5716 = getelementptr inbounds %struct.GPR, %struct.GPR* %5715, i32 0, i32 33
  %5717 = getelementptr inbounds %struct.Reg, %struct.Reg* %5716, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %5717 to i64*
  %5718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5719 = getelementptr inbounds %struct.GPR, %struct.GPR* %5718, i32 0, i32 5
  %5720 = getelementptr inbounds %struct.Reg, %struct.Reg* %5719, i32 0, i32 0
  %ECX.i1462 = bitcast %union.anon* %5720 to i32*
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5722 = getelementptr inbounds %struct.GPR, %struct.GPR* %5721, i32 0, i32 7
  %5723 = getelementptr inbounds %struct.Reg, %struct.Reg* %5722, i32 0, i32 0
  %RDX.i1463 = bitcast %union.anon* %5723 to i64*
  %5724 = load i32, i32* %ECX.i1462
  %5725 = zext i32 %5724 to i64
  %5726 = load i64, i64* %PC.i1461
  %5727 = add i64 %5726, 3
  store i64 %5727, i64* %PC.i1461
  %5728 = shl i64 %5725, 32
  %5729 = ashr exact i64 %5728, 32
  store i64 %5729, i64* %RDX.i1463, align 8
  store %struct.Memory* %loadMem_40b636, %struct.Memory** %MEMORY
  %loadMem_40b639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5731 = getelementptr inbounds %struct.GPR, %struct.GPR* %5730, i32 0, i32 33
  %5732 = getelementptr inbounds %struct.Reg, %struct.Reg* %5731, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %5732 to i64*
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5734 = getelementptr inbounds %struct.GPR, %struct.GPR* %5733, i32 0, i32 5
  %5735 = getelementptr inbounds %struct.Reg, %struct.Reg* %5734, i32 0, i32 0
  %RCX.i1459 = bitcast %union.anon* %5735 to i64*
  %5736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5737 = getelementptr inbounds %struct.GPR, %struct.GPR* %5736, i32 0, i32 7
  %5738 = getelementptr inbounds %struct.Reg, %struct.Reg* %5737, i32 0, i32 0
  %RDX.i1460 = bitcast %union.anon* %5738 to i64*
  %5739 = load i64, i64* %RDX.i1460
  %5740 = mul i64 %5739, 4
  %5741 = add i64 %5740, 11187184
  %5742 = load i64, i64* %PC.i1458
  %5743 = add i64 %5742, 7
  store i64 %5743, i64* %PC.i1458
  %5744 = inttoptr i64 %5741 to i32*
  %5745 = load i32, i32* %5744
  %5746 = zext i32 %5745 to i64
  store i64 %5746, i64* %RCX.i1459, align 8
  store %struct.Memory* %loadMem_40b639, %struct.Memory** %MEMORY
  %loadMem_40b640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5748 = getelementptr inbounds %struct.GPR, %struct.GPR* %5747, i32 0, i32 33
  %5749 = getelementptr inbounds %struct.Reg, %struct.Reg* %5748, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %5749 to i64*
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 7
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %RDX.i1456 = bitcast %union.anon* %5752 to i64*
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5754 = getelementptr inbounds %struct.GPR, %struct.GPR* %5753, i32 0, i32 15
  %5755 = getelementptr inbounds %struct.Reg, %struct.Reg* %5754, i32 0, i32 0
  %RBP.i1457 = bitcast %union.anon* %5755 to i64*
  %5756 = load i64, i64* %RBP.i1457
  %5757 = sub i64 %5756, 8
  %5758 = load i64, i64* %PC.i1455
  %5759 = add i64 %5758, 4
  store i64 %5759, i64* %PC.i1455
  %5760 = inttoptr i64 %5757 to i32*
  %5761 = load i32, i32* %5760
  %5762 = sext i32 %5761 to i64
  store i64 %5762, i64* %RDX.i1456, align 8
  store %struct.Memory* %loadMem_40b640, %struct.Memory** %MEMORY
  %loadMem_40b644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5764 = getelementptr inbounds %struct.GPR, %struct.GPR* %5763, i32 0, i32 33
  %5765 = getelementptr inbounds %struct.Reg, %struct.Reg* %5764, i32 0, i32 0
  %PC.i1453 = bitcast %union.anon* %5765 to i64*
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5767 = getelementptr inbounds %struct.GPR, %struct.GPR* %5766, i32 0, i32 7
  %5768 = getelementptr inbounds %struct.Reg, %struct.Reg* %5767, i32 0, i32 0
  %RDX.i1454 = bitcast %union.anon* %5768 to i64*
  %5769 = load i64, i64* %RDX.i1454
  %5770 = load i64, i64* %PC.i1453
  %5771 = add i64 %5770, 7
  store i64 %5771, i64* %PC.i1453
  %5772 = sext i64 %5769 to i128
  %5773 = and i128 %5772, -18446744073709551616
  %5774 = zext i64 %5769 to i128
  %5775 = or i128 %5773, %5774
  %5776 = mul i128 744, %5775
  %5777 = trunc i128 %5776 to i64
  store i64 %5777, i64* %RDX.i1454, align 8
  %5778 = sext i64 %5777 to i128
  %5779 = icmp ne i128 %5778, %5776
  %5780 = zext i1 %5779 to i8
  %5781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5780, i8* %5781, align 1
  %5782 = trunc i128 %5776 to i32
  %5783 = and i32 %5782, 255
  %5784 = call i32 @llvm.ctpop.i32(i32 %5783)
  %5785 = trunc i32 %5784 to i8
  %5786 = and i8 %5785, 1
  %5787 = xor i8 %5786, 1
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5787, i8* %5788, align 1
  %5789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5789, align 1
  %5790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5790, align 1
  %5791 = lshr i64 %5777, 63
  %5792 = trunc i64 %5791 to i8
  %5793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5792, i8* %5793, align 1
  %5794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5780, i8* %5794, align 1
  store %struct.Memory* %loadMem_40b644, %struct.Memory** %MEMORY
  %loadMem_40b64b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5796 = getelementptr inbounds %struct.GPR, %struct.GPR* %5795, i32 0, i32 33
  %5797 = getelementptr inbounds %struct.Reg, %struct.Reg* %5796, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %5797 to i64*
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5799 = getelementptr inbounds %struct.GPR, %struct.GPR* %5798, i32 0, i32 1
  %5800 = getelementptr inbounds %struct.Reg, %struct.Reg* %5799, i32 0, i32 0
  %RAX.i1451 = bitcast %union.anon* %5800 to i64*
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5802 = getelementptr inbounds %struct.GPR, %struct.GPR* %5801, i32 0, i32 9
  %5803 = getelementptr inbounds %struct.Reg, %struct.Reg* %5802, i32 0, i32 0
  %RSI.i1452 = bitcast %union.anon* %5803 to i64*
  %5804 = load i64, i64* %RAX.i1451
  %5805 = load i64, i64* %PC.i1450
  %5806 = add i64 %5805, 3
  store i64 %5806, i64* %PC.i1450
  store i64 %5804, i64* %RSI.i1452, align 8
  store %struct.Memory* %loadMem_40b64b, %struct.Memory** %MEMORY
  %loadMem_40b64e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5808 = getelementptr inbounds %struct.GPR, %struct.GPR* %5807, i32 0, i32 33
  %5809 = getelementptr inbounds %struct.Reg, %struct.Reg* %5808, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %5809 to i64*
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5811 = getelementptr inbounds %struct.GPR, %struct.GPR* %5810, i32 0, i32 7
  %5812 = getelementptr inbounds %struct.Reg, %struct.Reg* %5811, i32 0, i32 0
  %RDX.i1448 = bitcast %union.anon* %5812 to i64*
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5814 = getelementptr inbounds %struct.GPR, %struct.GPR* %5813, i32 0, i32 9
  %5815 = getelementptr inbounds %struct.Reg, %struct.Reg* %5814, i32 0, i32 0
  %RSI.i1449 = bitcast %union.anon* %5815 to i64*
  %5816 = load i64, i64* %RSI.i1449
  %5817 = load i64, i64* %RDX.i1448
  %5818 = load i64, i64* %PC.i1447
  %5819 = add i64 %5818, 3
  store i64 %5819, i64* %PC.i1447
  %5820 = add i64 %5817, %5816
  store i64 %5820, i64* %RSI.i1449, align 8
  %5821 = icmp ult i64 %5820, %5816
  %5822 = icmp ult i64 %5820, %5817
  %5823 = or i1 %5821, %5822
  %5824 = zext i1 %5823 to i8
  %5825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5824, i8* %5825, align 1
  %5826 = trunc i64 %5820 to i32
  %5827 = and i32 %5826, 255
  %5828 = call i32 @llvm.ctpop.i32(i32 %5827)
  %5829 = trunc i32 %5828 to i8
  %5830 = and i8 %5829, 1
  %5831 = xor i8 %5830, 1
  %5832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5831, i8* %5832, align 1
  %5833 = xor i64 %5817, %5816
  %5834 = xor i64 %5833, %5820
  %5835 = lshr i64 %5834, 4
  %5836 = trunc i64 %5835 to i8
  %5837 = and i8 %5836, 1
  %5838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5837, i8* %5838, align 1
  %5839 = icmp eq i64 %5820, 0
  %5840 = zext i1 %5839 to i8
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5840, i8* %5841, align 1
  %5842 = lshr i64 %5820, 63
  %5843 = trunc i64 %5842 to i8
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5843, i8* %5844, align 1
  %5845 = lshr i64 %5816, 63
  %5846 = lshr i64 %5817, 63
  %5847 = xor i64 %5842, %5845
  %5848 = xor i64 %5842, %5846
  %5849 = add i64 %5847, %5848
  %5850 = icmp eq i64 %5849, 2
  %5851 = zext i1 %5850 to i8
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5851, i8* %5852, align 1
  store %struct.Memory* %loadMem_40b64e, %struct.Memory** %MEMORY
  %loadMem_40b651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5854 = getelementptr inbounds %struct.GPR, %struct.GPR* %5853, i32 0, i32 33
  %5855 = getelementptr inbounds %struct.Reg, %struct.Reg* %5854, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %5855 to i64*
  %5856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5857 = getelementptr inbounds %struct.GPR, %struct.GPR* %5856, i32 0, i32 7
  %5858 = getelementptr inbounds %struct.Reg, %struct.Reg* %5857, i32 0, i32 0
  %RDX.i1445 = bitcast %union.anon* %5858 to i64*
  %5859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5860 = getelementptr inbounds %struct.GPR, %struct.GPR* %5859, i32 0, i32 15
  %5861 = getelementptr inbounds %struct.Reg, %struct.Reg* %5860, i32 0, i32 0
  %RBP.i1446 = bitcast %union.anon* %5861 to i64*
  %5862 = load i64, i64* %RBP.i1446
  %5863 = sub i64 %5862, 8
  %5864 = load i64, i64* %PC.i1444
  %5865 = add i64 %5864, 4
  store i64 %5865, i64* %PC.i1444
  %5866 = inttoptr i64 %5863 to i32*
  %5867 = load i32, i32* %5866
  %5868 = sext i32 %5867 to i64
  store i64 %5868, i64* %RDX.i1445, align 8
  store %struct.Memory* %loadMem_40b651, %struct.Memory** %MEMORY
  %loadMem_40b655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5870 = getelementptr inbounds %struct.GPR, %struct.GPR* %5869, i32 0, i32 33
  %5871 = getelementptr inbounds %struct.Reg, %struct.Reg* %5870, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %5871 to i64*
  %5872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5873 = getelementptr inbounds %struct.GPR, %struct.GPR* %5872, i32 0, i32 7
  %5874 = getelementptr inbounds %struct.Reg, %struct.Reg* %5873, i32 0, i32 0
  %RDX.i1443 = bitcast %union.anon* %5874 to i64*
  %5875 = load i64, i64* %RDX.i1443
  %5876 = load i64, i64* %PC.i1442
  %5877 = add i64 %5876, 7
  store i64 %5877, i64* %PC.i1442
  %5878 = sext i64 %5875 to i128
  %5879 = and i128 %5878, -18446744073709551616
  %5880 = zext i64 %5875 to i128
  %5881 = or i128 %5879, %5880
  %5882 = mul i128 744, %5881
  %5883 = trunc i128 %5882 to i64
  store i64 %5883, i64* %RDX.i1443, align 8
  %5884 = sext i64 %5883 to i128
  %5885 = icmp ne i128 %5884, %5882
  %5886 = zext i1 %5885 to i8
  %5887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5886, i8* %5887, align 1
  %5888 = trunc i128 %5882 to i32
  %5889 = and i32 %5888, 255
  %5890 = call i32 @llvm.ctpop.i32(i32 %5889)
  %5891 = trunc i32 %5890 to i8
  %5892 = and i8 %5891, 1
  %5893 = xor i8 %5892, 1
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5893, i8* %5894, align 1
  %5895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5895, align 1
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5896, align 1
  %5897 = lshr i64 %5883, 63
  %5898 = trunc i64 %5897 to i8
  %5899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5898, i8* %5899, align 1
  %5900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5886, i8* %5900, align 1
  store %struct.Memory* %loadMem_40b655, %struct.Memory** %MEMORY
  %loadMem_40b65c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5902 = getelementptr inbounds %struct.GPR, %struct.GPR* %5901, i32 0, i32 33
  %5903 = getelementptr inbounds %struct.Reg, %struct.Reg* %5902, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %5903 to i64*
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5905 = getelementptr inbounds %struct.GPR, %struct.GPR* %5904, i32 0, i32 1
  %5906 = getelementptr inbounds %struct.Reg, %struct.Reg* %5905, i32 0, i32 0
  %RAX.i1440 = bitcast %union.anon* %5906 to i64*
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5908 = getelementptr inbounds %struct.GPR, %struct.GPR* %5907, i32 0, i32 11
  %5909 = getelementptr inbounds %struct.Reg, %struct.Reg* %5908, i32 0, i32 0
  %RDI.i1441 = bitcast %union.anon* %5909 to i64*
  %5910 = load i64, i64* %RAX.i1440
  %5911 = load i64, i64* %PC.i1439
  %5912 = add i64 %5911, 3
  store i64 %5912, i64* %PC.i1439
  store i64 %5910, i64* %RDI.i1441, align 8
  store %struct.Memory* %loadMem_40b65c, %struct.Memory** %MEMORY
  %loadMem_40b65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5914 = getelementptr inbounds %struct.GPR, %struct.GPR* %5913, i32 0, i32 33
  %5915 = getelementptr inbounds %struct.Reg, %struct.Reg* %5914, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %5915 to i64*
  %5916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5917 = getelementptr inbounds %struct.GPR, %struct.GPR* %5916, i32 0, i32 7
  %5918 = getelementptr inbounds %struct.Reg, %struct.Reg* %5917, i32 0, i32 0
  %RDX.i1437 = bitcast %union.anon* %5918 to i64*
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5920 = getelementptr inbounds %struct.GPR, %struct.GPR* %5919, i32 0, i32 11
  %5921 = getelementptr inbounds %struct.Reg, %struct.Reg* %5920, i32 0, i32 0
  %RDI.i1438 = bitcast %union.anon* %5921 to i64*
  %5922 = load i64, i64* %RDI.i1438
  %5923 = load i64, i64* %RDX.i1437
  %5924 = load i64, i64* %PC.i1436
  %5925 = add i64 %5924, 3
  store i64 %5925, i64* %PC.i1436
  %5926 = add i64 %5923, %5922
  store i64 %5926, i64* %RDI.i1438, align 8
  %5927 = icmp ult i64 %5926, %5922
  %5928 = icmp ult i64 %5926, %5923
  %5929 = or i1 %5927, %5928
  %5930 = zext i1 %5929 to i8
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5930, i8* %5931, align 1
  %5932 = trunc i64 %5926 to i32
  %5933 = and i32 %5932, 255
  %5934 = call i32 @llvm.ctpop.i32(i32 %5933)
  %5935 = trunc i32 %5934 to i8
  %5936 = and i8 %5935, 1
  %5937 = xor i8 %5936, 1
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5937, i8* %5938, align 1
  %5939 = xor i64 %5923, %5922
  %5940 = xor i64 %5939, %5926
  %5941 = lshr i64 %5940, 4
  %5942 = trunc i64 %5941 to i8
  %5943 = and i8 %5942, 1
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5943, i8* %5944, align 1
  %5945 = icmp eq i64 %5926, 0
  %5946 = zext i1 %5945 to i8
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5946, i8* %5947, align 1
  %5948 = lshr i64 %5926, 63
  %5949 = trunc i64 %5948 to i8
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5949, i8* %5950, align 1
  %5951 = lshr i64 %5922, 63
  %5952 = lshr i64 %5923, 63
  %5953 = xor i64 %5948, %5951
  %5954 = xor i64 %5948, %5952
  %5955 = add i64 %5953, %5954
  %5956 = icmp eq i64 %5955, 2
  %5957 = zext i1 %5956 to i8
  %5958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5957, i8* %5958, align 1
  store %struct.Memory* %loadMem_40b65f, %struct.Memory** %MEMORY
  %loadMem_40b662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5960 = getelementptr inbounds %struct.GPR, %struct.GPR* %5959, i32 0, i32 33
  %5961 = getelementptr inbounds %struct.Reg, %struct.Reg* %5960, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %5961 to i64*
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5963 = getelementptr inbounds %struct.GPR, %struct.GPR* %5962, i32 0, i32 17
  %5964 = getelementptr inbounds %struct.Reg, %struct.Reg* %5963, i32 0, i32 0
  %R8D.i1434 = bitcast %union.anon* %5964 to i32*
  %5965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5966 = getelementptr inbounds %struct.GPR, %struct.GPR* %5965, i32 0, i32 11
  %5967 = getelementptr inbounds %struct.Reg, %struct.Reg* %5966, i32 0, i32 0
  %RDI.i1435 = bitcast %union.anon* %5967 to i64*
  %5968 = bitcast i32* %R8D.i1434 to i64*
  %5969 = load i64, i64* %RDI.i1435
  %5970 = add i64 %5969, 96
  %5971 = load i64, i64* %PC.i1433
  %5972 = add i64 %5971, 4
  store i64 %5972, i64* %PC.i1433
  %5973 = inttoptr i64 %5970 to i32*
  %5974 = load i32, i32* %5973
  %5975 = zext i32 %5974 to i64
  store i64 %5975, i64* %5968, align 8
  store %struct.Memory* %loadMem_40b662, %struct.Memory** %MEMORY
  %loadMem_40b666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5977 = getelementptr inbounds %struct.GPR, %struct.GPR* %5976, i32 0, i32 33
  %5978 = getelementptr inbounds %struct.Reg, %struct.Reg* %5977, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %5978 to i64*
  %5979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5980 = getelementptr inbounds %struct.GPR, %struct.GPR* %5979, i32 0, i32 17
  %5981 = getelementptr inbounds %struct.Reg, %struct.Reg* %5980, i32 0, i32 0
  %R8D.i1431 = bitcast %union.anon* %5981 to i32*
  %5982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5983 = getelementptr inbounds %struct.GPR, %struct.GPR* %5982, i32 0, i32 19
  %5984 = getelementptr inbounds %struct.Reg, %struct.Reg* %5983, i32 0, i32 0
  %R9D.i1432 = bitcast %union.anon* %5984 to i32*
  %5985 = bitcast i32* %R9D.i1432 to i64*
  %5986 = load i32, i32* %R8D.i1431
  %5987 = zext i32 %5986 to i64
  %5988 = load i64, i64* %PC.i1430
  %5989 = add i64 %5988, 3
  store i64 %5989, i64* %PC.i1430
  %5990 = and i64 %5987, 4294967295
  store i64 %5990, i64* %5985, align 8
  store %struct.Memory* %loadMem_40b666, %struct.Memory** %MEMORY
  %loadMem_40b669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5992 = getelementptr inbounds %struct.GPR, %struct.GPR* %5991, i32 0, i32 33
  %5993 = getelementptr inbounds %struct.Reg, %struct.Reg* %5992, i32 0, i32 0
  %PC.i1428 = bitcast %union.anon* %5993 to i64*
  %5994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5995 = getelementptr inbounds %struct.GPR, %struct.GPR* %5994, i32 0, i32 19
  %5996 = getelementptr inbounds %struct.Reg, %struct.Reg* %5995, i32 0, i32 0
  %R9D.i1429 = bitcast %union.anon* %5996 to i32*
  %5997 = bitcast i32* %R9D.i1429 to i64*
  %5998 = load i32, i32* %R9D.i1429
  %5999 = zext i32 %5998 to i64
  %6000 = load i64, i64* %PC.i1428
  %6001 = add i64 %6000, 4
  store i64 %6001, i64* %PC.i1428
  %6002 = add i32 1, %5998
  %6003 = zext i32 %6002 to i64
  store i64 %6003, i64* %5997, align 8
  %6004 = icmp ult i32 %6002, %5998
  %6005 = icmp ult i32 %6002, 1
  %6006 = or i1 %6004, %6005
  %6007 = zext i1 %6006 to i8
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6007, i8* %6008, align 1
  %6009 = and i32 %6002, 255
  %6010 = call i32 @llvm.ctpop.i32(i32 %6009)
  %6011 = trunc i32 %6010 to i8
  %6012 = and i8 %6011, 1
  %6013 = xor i8 %6012, 1
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6013, i8* %6014, align 1
  %6015 = xor i64 1, %5999
  %6016 = trunc i64 %6015 to i32
  %6017 = xor i32 %6016, %6002
  %6018 = lshr i32 %6017, 4
  %6019 = trunc i32 %6018 to i8
  %6020 = and i8 %6019, 1
  %6021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6020, i8* %6021, align 1
  %6022 = icmp eq i32 %6002, 0
  %6023 = zext i1 %6022 to i8
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6023, i8* %6024, align 1
  %6025 = lshr i32 %6002, 31
  %6026 = trunc i32 %6025 to i8
  %6027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6026, i8* %6027, align 1
  %6028 = lshr i32 %5998, 31
  %6029 = xor i32 %6025, %6028
  %6030 = add i32 %6029, %6025
  %6031 = icmp eq i32 %6030, 2
  %6032 = zext i1 %6031 to i8
  %6033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6032, i8* %6033, align 1
  store %struct.Memory* %loadMem_40b669, %struct.Memory** %MEMORY
  %loadMem_40b66d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6035 = getelementptr inbounds %struct.GPR, %struct.GPR* %6034, i32 0, i32 33
  %6036 = getelementptr inbounds %struct.Reg, %struct.Reg* %6035, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %6036 to i64*
  %6037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6038 = getelementptr inbounds %struct.GPR, %struct.GPR* %6037, i32 0, i32 19
  %6039 = getelementptr inbounds %struct.Reg, %struct.Reg* %6038, i32 0, i32 0
  %R9D.i1426 = bitcast %union.anon* %6039 to i32*
  %6040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6041 = getelementptr inbounds %struct.GPR, %struct.GPR* %6040, i32 0, i32 11
  %6042 = getelementptr inbounds %struct.Reg, %struct.Reg* %6041, i32 0, i32 0
  %RDI.i1427 = bitcast %union.anon* %6042 to i64*
  %6043 = load i64, i64* %RDI.i1427
  %6044 = add i64 %6043, 96
  %6045 = load i32, i32* %R9D.i1426
  %6046 = zext i32 %6045 to i64
  %6047 = load i64, i64* %PC.i1425
  %6048 = add i64 %6047, 4
  store i64 %6048, i64* %PC.i1425
  %6049 = inttoptr i64 %6044 to i32*
  store i32 %6045, i32* %6049
  store %struct.Memory* %loadMem_40b66d, %struct.Memory** %MEMORY
  %loadMem_40b671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6051 = getelementptr inbounds %struct.GPR, %struct.GPR* %6050, i32 0, i32 33
  %6052 = getelementptr inbounds %struct.Reg, %struct.Reg* %6051, i32 0, i32 0
  %PC.i1422 = bitcast %union.anon* %6052 to i64*
  %6053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6054 = getelementptr inbounds %struct.GPR, %struct.GPR* %6053, i32 0, i32 17
  %6055 = getelementptr inbounds %struct.Reg, %struct.Reg* %6054, i32 0, i32 0
  %R8D.i1423 = bitcast %union.anon* %6055 to i32*
  %6056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6057 = getelementptr inbounds %struct.GPR, %struct.GPR* %6056, i32 0, i32 7
  %6058 = getelementptr inbounds %struct.Reg, %struct.Reg* %6057, i32 0, i32 0
  %RDX.i1424 = bitcast %union.anon* %6058 to i64*
  %6059 = load i32, i32* %R8D.i1423
  %6060 = zext i32 %6059 to i64
  %6061 = load i64, i64* %PC.i1422
  %6062 = add i64 %6061, 3
  store i64 %6062, i64* %PC.i1422
  %6063 = shl i64 %6060, 32
  %6064 = ashr exact i64 %6063, 32
  store i64 %6064, i64* %RDX.i1424, align 8
  store %struct.Memory* %loadMem_40b671, %struct.Memory** %MEMORY
  %loadMem_40b674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6066 = getelementptr inbounds %struct.GPR, %struct.GPR* %6065, i32 0, i32 33
  %6067 = getelementptr inbounds %struct.Reg, %struct.Reg* %6066, i32 0, i32 0
  %PC.i1418 = bitcast %union.anon* %6067 to i64*
  %6068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6069 = getelementptr inbounds %struct.GPR, %struct.GPR* %6068, i32 0, i32 5
  %6070 = getelementptr inbounds %struct.Reg, %struct.Reg* %6069, i32 0, i32 0
  %ECX.i1419 = bitcast %union.anon* %6070 to i32*
  %6071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6072 = getelementptr inbounds %struct.GPR, %struct.GPR* %6071, i32 0, i32 7
  %6073 = getelementptr inbounds %struct.Reg, %struct.Reg* %6072, i32 0, i32 0
  %RDX.i1420 = bitcast %union.anon* %6073 to i64*
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6075 = getelementptr inbounds %struct.GPR, %struct.GPR* %6074, i32 0, i32 9
  %6076 = getelementptr inbounds %struct.Reg, %struct.Reg* %6075, i32 0, i32 0
  %RSI.i1421 = bitcast %union.anon* %6076 to i64*
  %6077 = load i64, i64* %RSI.i1421
  %6078 = load i64, i64* %RDX.i1420
  %6079 = mul i64 %6078, 4
  %6080 = add i64 %6077, 100
  %6081 = add i64 %6080, %6079
  %6082 = load i32, i32* %ECX.i1419
  %6083 = zext i32 %6082 to i64
  %6084 = load i64, i64* %PC.i1418
  %6085 = add i64 %6084, 4
  store i64 %6085, i64* %PC.i1418
  %6086 = inttoptr i64 %6081 to i32*
  store i32 %6082, i32* %6086
  store %struct.Memory* %loadMem_40b674, %struct.Memory** %MEMORY
  %loadMem_40b678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6088 = getelementptr inbounds %struct.GPR, %struct.GPR* %6087, i32 0, i32 33
  %6089 = getelementptr inbounds %struct.Reg, %struct.Reg* %6088, i32 0, i32 0
  %PC.i1415 = bitcast %union.anon* %6089 to i64*
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6091 = getelementptr inbounds %struct.GPR, %struct.GPR* %6090, i32 0, i32 7
  %6092 = getelementptr inbounds %struct.Reg, %struct.Reg* %6091, i32 0, i32 0
  %RDX.i1416 = bitcast %union.anon* %6092 to i64*
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6094 = getelementptr inbounds %struct.GPR, %struct.GPR* %6093, i32 0, i32 15
  %6095 = getelementptr inbounds %struct.Reg, %struct.Reg* %6094, i32 0, i32 0
  %RBP.i1417 = bitcast %union.anon* %6095 to i64*
  %6096 = load i64, i64* %RBP.i1417
  %6097 = sub i64 %6096, 32
  %6098 = load i64, i64* %PC.i1415
  %6099 = add i64 %6098, 4
  store i64 %6099, i64* %PC.i1415
  %6100 = inttoptr i64 %6097 to i32*
  %6101 = load i32, i32* %6100
  %6102 = sext i32 %6101 to i64
  store i64 %6102, i64* %RDX.i1416, align 8
  store %struct.Memory* %loadMem_40b678, %struct.Memory** %MEMORY
  %loadMem_40b67c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6104 = getelementptr inbounds %struct.GPR, %struct.GPR* %6103, i32 0, i32 33
  %6105 = getelementptr inbounds %struct.Reg, %struct.Reg* %6104, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %6105 to i64*
  %6106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6107 = getelementptr inbounds %struct.GPR, %struct.GPR* %6106, i32 0, i32 7
  %6108 = getelementptr inbounds %struct.Reg, %struct.Reg* %6107, i32 0, i32 0
  %RDX.i1414 = bitcast %union.anon* %6108 to i64*
  %6109 = load i64, i64* %RDX.i1414
  %6110 = load i64, i64* %PC.i1413
  %6111 = add i64 %6110, 7
  store i64 %6111, i64* %PC.i1413
  %6112 = sext i64 %6109 to i128
  %6113 = and i128 %6112, -18446744073709551616
  %6114 = zext i64 %6109 to i128
  %6115 = or i128 %6113, %6114
  %6116 = mul i128 744, %6115
  %6117 = trunc i128 %6116 to i64
  store i64 %6117, i64* %RDX.i1414, align 8
  %6118 = sext i64 %6117 to i128
  %6119 = icmp ne i128 %6118, %6116
  %6120 = zext i1 %6119 to i8
  %6121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6120, i8* %6121, align 1
  %6122 = trunc i128 %6116 to i32
  %6123 = and i32 %6122, 255
  %6124 = call i32 @llvm.ctpop.i32(i32 %6123)
  %6125 = trunc i32 %6124 to i8
  %6126 = and i8 %6125, 1
  %6127 = xor i8 %6126, 1
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6127, i8* %6128, align 1
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6129, align 1
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6130, align 1
  %6131 = lshr i64 %6117, 63
  %6132 = trunc i64 %6131 to i8
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6132, i8* %6133, align 1
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6120, i8* %6134, align 1
  store %struct.Memory* %loadMem_40b67c, %struct.Memory** %MEMORY
  %loadMem_40b683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6136 = getelementptr inbounds %struct.GPR, %struct.GPR* %6135, i32 0, i32 33
  %6137 = getelementptr inbounds %struct.Reg, %struct.Reg* %6136, i32 0, i32 0
  %PC.i1410 = bitcast %union.anon* %6137 to i64*
  %6138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6139 = getelementptr inbounds %struct.GPR, %struct.GPR* %6138, i32 0, i32 1
  %6140 = getelementptr inbounds %struct.Reg, %struct.Reg* %6139, i32 0, i32 0
  %RAX.i1411 = bitcast %union.anon* %6140 to i64*
  %6141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6142 = getelementptr inbounds %struct.GPR, %struct.GPR* %6141, i32 0, i32 9
  %6143 = getelementptr inbounds %struct.Reg, %struct.Reg* %6142, i32 0, i32 0
  %RSI.i1412 = bitcast %union.anon* %6143 to i64*
  %6144 = load i64, i64* %RAX.i1411
  %6145 = load i64, i64* %PC.i1410
  %6146 = add i64 %6145, 3
  store i64 %6146, i64* %PC.i1410
  store i64 %6144, i64* %RSI.i1412, align 8
  store %struct.Memory* %loadMem_40b683, %struct.Memory** %MEMORY
  %loadMem_40b686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6148 = getelementptr inbounds %struct.GPR, %struct.GPR* %6147, i32 0, i32 33
  %6149 = getelementptr inbounds %struct.Reg, %struct.Reg* %6148, i32 0, i32 0
  %PC.i1407 = bitcast %union.anon* %6149 to i64*
  %6150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6151 = getelementptr inbounds %struct.GPR, %struct.GPR* %6150, i32 0, i32 7
  %6152 = getelementptr inbounds %struct.Reg, %struct.Reg* %6151, i32 0, i32 0
  %RDX.i1408 = bitcast %union.anon* %6152 to i64*
  %6153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6154 = getelementptr inbounds %struct.GPR, %struct.GPR* %6153, i32 0, i32 9
  %6155 = getelementptr inbounds %struct.Reg, %struct.Reg* %6154, i32 0, i32 0
  %RSI.i1409 = bitcast %union.anon* %6155 to i64*
  %6156 = load i64, i64* %RSI.i1409
  %6157 = load i64, i64* %RDX.i1408
  %6158 = load i64, i64* %PC.i1407
  %6159 = add i64 %6158, 3
  store i64 %6159, i64* %PC.i1407
  %6160 = add i64 %6157, %6156
  store i64 %6160, i64* %RSI.i1409, align 8
  %6161 = icmp ult i64 %6160, %6156
  %6162 = icmp ult i64 %6160, %6157
  %6163 = or i1 %6161, %6162
  %6164 = zext i1 %6163 to i8
  %6165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6164, i8* %6165, align 1
  %6166 = trunc i64 %6160 to i32
  %6167 = and i32 %6166, 255
  %6168 = call i32 @llvm.ctpop.i32(i32 %6167)
  %6169 = trunc i32 %6168 to i8
  %6170 = and i8 %6169, 1
  %6171 = xor i8 %6170, 1
  %6172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6171, i8* %6172, align 1
  %6173 = xor i64 %6157, %6156
  %6174 = xor i64 %6173, %6160
  %6175 = lshr i64 %6174, 4
  %6176 = trunc i64 %6175 to i8
  %6177 = and i8 %6176, 1
  %6178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6177, i8* %6178, align 1
  %6179 = icmp eq i64 %6160, 0
  %6180 = zext i1 %6179 to i8
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6180, i8* %6181, align 1
  %6182 = lshr i64 %6160, 63
  %6183 = trunc i64 %6182 to i8
  %6184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6183, i8* %6184, align 1
  %6185 = lshr i64 %6156, 63
  %6186 = lshr i64 %6157, 63
  %6187 = xor i64 %6182, %6185
  %6188 = xor i64 %6182, %6186
  %6189 = add i64 %6187, %6188
  %6190 = icmp eq i64 %6189, 2
  %6191 = zext i1 %6190 to i8
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6191, i8* %6192, align 1
  store %struct.Memory* %loadMem_40b686, %struct.Memory** %MEMORY
  %loadMem_40b689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6194 = getelementptr inbounds %struct.GPR, %struct.GPR* %6193, i32 0, i32 33
  %6195 = getelementptr inbounds %struct.Reg, %struct.Reg* %6194, i32 0, i32 0
  %PC.i1405 = bitcast %union.anon* %6195 to i64*
  %6196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6197 = getelementptr inbounds %struct.GPR, %struct.GPR* %6196, i32 0, i32 9
  %6198 = getelementptr inbounds %struct.Reg, %struct.Reg* %6197, i32 0, i32 0
  %RSI.i1406 = bitcast %union.anon* %6198 to i64*
  %6199 = load i64, i64* %RSI.i1406
  %6200 = load i64, i64* %PC.i1405
  %6201 = add i64 %6200, 4
  store i64 %6201, i64* %PC.i1405
  %6202 = add i64 96, %6199
  store i64 %6202, i64* %RSI.i1406, align 8
  %6203 = icmp ult i64 %6202, %6199
  %6204 = icmp ult i64 %6202, 96
  %6205 = or i1 %6203, %6204
  %6206 = zext i1 %6205 to i8
  %6207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6206, i8* %6207, align 1
  %6208 = trunc i64 %6202 to i32
  %6209 = and i32 %6208, 255
  %6210 = call i32 @llvm.ctpop.i32(i32 %6209)
  %6211 = trunc i32 %6210 to i8
  %6212 = and i8 %6211, 1
  %6213 = xor i8 %6212, 1
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6213, i8* %6214, align 1
  %6215 = xor i64 96, %6199
  %6216 = xor i64 %6215, %6202
  %6217 = lshr i64 %6216, 4
  %6218 = trunc i64 %6217 to i8
  %6219 = and i8 %6218, 1
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6219, i8* %6220, align 1
  %6221 = icmp eq i64 %6202, 0
  %6222 = zext i1 %6221 to i8
  %6223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6222, i8* %6223, align 1
  %6224 = lshr i64 %6202, 63
  %6225 = trunc i64 %6224 to i8
  %6226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6225, i8* %6226, align 1
  %6227 = lshr i64 %6199, 63
  %6228 = xor i64 %6224, %6227
  %6229 = add i64 %6228, %6224
  %6230 = icmp eq i64 %6229, 2
  %6231 = zext i1 %6230 to i8
  %6232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6231, i8* %6232, align 1
  store %struct.Memory* %loadMem_40b689, %struct.Memory** %MEMORY
  %loadMem_40b68d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6234 = getelementptr inbounds %struct.GPR, %struct.GPR* %6233, i32 0, i32 33
  %6235 = getelementptr inbounds %struct.Reg, %struct.Reg* %6234, i32 0, i32 0
  %PC.i1403 = bitcast %union.anon* %6235 to i64*
  %6236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6237 = getelementptr inbounds %struct.GPR, %struct.GPR* %6236, i32 0, i32 7
  %6238 = getelementptr inbounds %struct.Reg, %struct.Reg* %6237, i32 0, i32 0
  %RDX.i1404 = bitcast %union.anon* %6238 to i64*
  %6239 = load i64, i64* %PC.i1403
  %6240 = add i64 %6239, 8
  store i64 %6240, i64* %PC.i1403
  %6241 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %6241, i64* %RDX.i1404, align 8
  store %struct.Memory* %loadMem_40b68d, %struct.Memory** %MEMORY
  %loadMem_40b695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6243 = getelementptr inbounds %struct.GPR, %struct.GPR* %6242, i32 0, i32 33
  %6244 = getelementptr inbounds %struct.Reg, %struct.Reg* %6243, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %6244 to i64*
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6246 = getelementptr inbounds %struct.GPR, %struct.GPR* %6245, i32 0, i32 7
  %6247 = getelementptr inbounds %struct.Reg, %struct.Reg* %6246, i32 0, i32 0
  %RDX.i1401 = bitcast %union.anon* %6247 to i64*
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6249 = getelementptr inbounds %struct.GPR, %struct.GPR* %6248, i32 0, i32 9
  %6250 = getelementptr inbounds %struct.Reg, %struct.Reg* %6249, i32 0, i32 0
  %RSI.i1402 = bitcast %union.anon* %6250 to i64*
  %6251 = load i64, i64* %RDX.i1401
  %6252 = load i64, i64* %RSI.i1402
  %6253 = load i64, i64* %PC.i1400
  %6254 = add i64 %6253, 3
  store i64 %6254, i64* %PC.i1400
  %6255 = inttoptr i64 %6251 to i64*
  store i64 %6252, i64* %6255
  store %struct.Memory* %loadMem_40b695, %struct.Memory** %MEMORY
  %loadMem_40b698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6257 = getelementptr inbounds %struct.GPR, %struct.GPR* %6256, i32 0, i32 33
  %6258 = getelementptr inbounds %struct.Reg, %struct.Reg* %6257, i32 0, i32 0
  %PC.i1397 = bitcast %union.anon* %6258 to i64*
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6260 = getelementptr inbounds %struct.GPR, %struct.GPR* %6259, i32 0, i32 7
  %6261 = getelementptr inbounds %struct.Reg, %struct.Reg* %6260, i32 0, i32 0
  %RDX.i1398 = bitcast %union.anon* %6261 to i64*
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6263 = getelementptr inbounds %struct.GPR, %struct.GPR* %6262, i32 0, i32 15
  %6264 = getelementptr inbounds %struct.Reg, %struct.Reg* %6263, i32 0, i32 0
  %RBP.i1399 = bitcast %union.anon* %6264 to i64*
  %6265 = load i64, i64* %RBP.i1399
  %6266 = sub i64 %6265, 32
  %6267 = load i64, i64* %PC.i1397
  %6268 = add i64 %6267, 4
  store i64 %6268, i64* %PC.i1397
  %6269 = inttoptr i64 %6266 to i32*
  %6270 = load i32, i32* %6269
  %6271 = sext i32 %6270 to i64
  store i64 %6271, i64* %RDX.i1398, align 8
  store %struct.Memory* %loadMem_40b698, %struct.Memory** %MEMORY
  %loadMem_40b69c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6273 = getelementptr inbounds %struct.GPR, %struct.GPR* %6272, i32 0, i32 33
  %6274 = getelementptr inbounds %struct.Reg, %struct.Reg* %6273, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %6274 to i64*
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6276 = getelementptr inbounds %struct.GPR, %struct.GPR* %6275, i32 0, i32 7
  %6277 = getelementptr inbounds %struct.Reg, %struct.Reg* %6276, i32 0, i32 0
  %RDX.i1396 = bitcast %union.anon* %6277 to i64*
  %6278 = load i64, i64* %RDX.i1396
  %6279 = load i64, i64* %PC.i1395
  %6280 = add i64 %6279, 7
  store i64 %6280, i64* %PC.i1395
  %6281 = sext i64 %6278 to i128
  %6282 = and i128 %6281, -18446744073709551616
  %6283 = zext i64 %6278 to i128
  %6284 = or i128 %6282, %6283
  %6285 = mul i128 744, %6284
  %6286 = trunc i128 %6285 to i64
  store i64 %6286, i64* %RDX.i1396, align 8
  %6287 = sext i64 %6286 to i128
  %6288 = icmp ne i128 %6287, %6285
  %6289 = zext i1 %6288 to i8
  %6290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6289, i8* %6290, align 1
  %6291 = trunc i128 %6285 to i32
  %6292 = and i32 %6291, 255
  %6293 = call i32 @llvm.ctpop.i32(i32 %6292)
  %6294 = trunc i32 %6293 to i8
  %6295 = and i8 %6294, 1
  %6296 = xor i8 %6295, 1
  %6297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6296, i8* %6297, align 1
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6298, align 1
  %6299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6299, align 1
  %6300 = lshr i64 %6286, 63
  %6301 = trunc i64 %6300 to i8
  %6302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6301, i8* %6302, align 1
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6289, i8* %6303, align 1
  store %struct.Memory* %loadMem_40b69c, %struct.Memory** %MEMORY
  %loadMem_40b6a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6305 = getelementptr inbounds %struct.GPR, %struct.GPR* %6304, i32 0, i32 33
  %6306 = getelementptr inbounds %struct.Reg, %struct.Reg* %6305, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %6306 to i64*
  %6307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6308 = getelementptr inbounds %struct.GPR, %struct.GPR* %6307, i32 0, i32 1
  %6309 = getelementptr inbounds %struct.Reg, %struct.Reg* %6308, i32 0, i32 0
  %RAX.i1393 = bitcast %union.anon* %6309 to i64*
  %6310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6311 = getelementptr inbounds %struct.GPR, %struct.GPR* %6310, i32 0, i32 9
  %6312 = getelementptr inbounds %struct.Reg, %struct.Reg* %6311, i32 0, i32 0
  %RSI.i1394 = bitcast %union.anon* %6312 to i64*
  %6313 = load i64, i64* %RAX.i1393
  %6314 = load i64, i64* %PC.i1392
  %6315 = add i64 %6314, 3
  store i64 %6315, i64* %PC.i1392
  store i64 %6313, i64* %RSI.i1394, align 8
  store %struct.Memory* %loadMem_40b6a3, %struct.Memory** %MEMORY
  %loadMem_40b6a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6317 = getelementptr inbounds %struct.GPR, %struct.GPR* %6316, i32 0, i32 33
  %6318 = getelementptr inbounds %struct.Reg, %struct.Reg* %6317, i32 0, i32 0
  %PC.i1389 = bitcast %union.anon* %6318 to i64*
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6320 = getelementptr inbounds %struct.GPR, %struct.GPR* %6319, i32 0, i32 7
  %6321 = getelementptr inbounds %struct.Reg, %struct.Reg* %6320, i32 0, i32 0
  %RDX.i1390 = bitcast %union.anon* %6321 to i64*
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6323 = getelementptr inbounds %struct.GPR, %struct.GPR* %6322, i32 0, i32 9
  %6324 = getelementptr inbounds %struct.Reg, %struct.Reg* %6323, i32 0, i32 0
  %RSI.i1391 = bitcast %union.anon* %6324 to i64*
  %6325 = load i64, i64* %RSI.i1391
  %6326 = load i64, i64* %RDX.i1390
  %6327 = load i64, i64* %PC.i1389
  %6328 = add i64 %6327, 3
  store i64 %6328, i64* %PC.i1389
  %6329 = add i64 %6326, %6325
  store i64 %6329, i64* %RSI.i1391, align 8
  %6330 = icmp ult i64 %6329, %6325
  %6331 = icmp ult i64 %6329, %6326
  %6332 = or i1 %6330, %6331
  %6333 = zext i1 %6332 to i8
  %6334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6333, i8* %6334, align 1
  %6335 = trunc i64 %6329 to i32
  %6336 = and i32 %6335, 255
  %6337 = call i32 @llvm.ctpop.i32(i32 %6336)
  %6338 = trunc i32 %6337 to i8
  %6339 = and i8 %6338, 1
  %6340 = xor i8 %6339, 1
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6340, i8* %6341, align 1
  %6342 = xor i64 %6326, %6325
  %6343 = xor i64 %6342, %6329
  %6344 = lshr i64 %6343, 4
  %6345 = trunc i64 %6344 to i8
  %6346 = and i8 %6345, 1
  %6347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6346, i8* %6347, align 1
  %6348 = icmp eq i64 %6329, 0
  %6349 = zext i1 %6348 to i8
  %6350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6349, i8* %6350, align 1
  %6351 = lshr i64 %6329, 63
  %6352 = trunc i64 %6351 to i8
  %6353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6352, i8* %6353, align 1
  %6354 = lshr i64 %6325, 63
  %6355 = lshr i64 %6326, 63
  %6356 = xor i64 %6351, %6354
  %6357 = xor i64 %6351, %6355
  %6358 = add i64 %6356, %6357
  %6359 = icmp eq i64 %6358, 2
  %6360 = zext i1 %6359 to i8
  %6361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6360, i8* %6361, align 1
  store %struct.Memory* %loadMem_40b6a6, %struct.Memory** %MEMORY
  %loadMem_40b6a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6363 = getelementptr inbounds %struct.GPR, %struct.GPR* %6362, i32 0, i32 33
  %6364 = getelementptr inbounds %struct.Reg, %struct.Reg* %6363, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %6364 to i64*
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6366 = getelementptr inbounds %struct.GPR, %struct.GPR* %6365, i32 0, i32 5
  %6367 = getelementptr inbounds %struct.Reg, %struct.Reg* %6366, i32 0, i32 0
  %RCX.i1387 = bitcast %union.anon* %6367 to i64*
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6369 = getelementptr inbounds %struct.GPR, %struct.GPR* %6368, i32 0, i32 9
  %6370 = getelementptr inbounds %struct.Reg, %struct.Reg* %6369, i32 0, i32 0
  %RSI.i1388 = bitcast %union.anon* %6370 to i64*
  %6371 = load i64, i64* %RSI.i1388
  %6372 = add i64 %6371, 96
  %6373 = load i64, i64* %PC.i1386
  %6374 = add i64 %6373, 3
  store i64 %6374, i64* %PC.i1386
  %6375 = inttoptr i64 %6372 to i32*
  %6376 = load i32, i32* %6375
  %6377 = zext i32 %6376 to i64
  store i64 %6377, i64* %RCX.i1387, align 8
  store %struct.Memory* %loadMem_40b6a9, %struct.Memory** %MEMORY
  %loadMem_40b6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %6378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6379 = getelementptr inbounds %struct.GPR, %struct.GPR* %6378, i32 0, i32 33
  %6380 = getelementptr inbounds %struct.Reg, %struct.Reg* %6379, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %6380 to i64*
  %6381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6382 = getelementptr inbounds %struct.GPR, %struct.GPR* %6381, i32 0, i32 7
  %6383 = getelementptr inbounds %struct.Reg, %struct.Reg* %6382, i32 0, i32 0
  %RDX.i1385 = bitcast %union.anon* %6383 to i64*
  %6384 = load i64, i64* %PC.i1384
  %6385 = add i64 %6384, 8
  store i64 %6385, i64* %PC.i1384
  %6386 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %6386, i64* %RDX.i1385, align 8
  store %struct.Memory* %loadMem_40b6ac, %struct.Memory** %MEMORY
  %loadMem_40b6b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6388 = getelementptr inbounds %struct.GPR, %struct.GPR* %6387, i32 0, i32 33
  %6389 = getelementptr inbounds %struct.Reg, %struct.Reg* %6388, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %6389 to i64*
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6391 = getelementptr inbounds %struct.GPR, %struct.GPR* %6390, i32 0, i32 7
  %6392 = getelementptr inbounds %struct.Reg, %struct.Reg* %6391, i32 0, i32 0
  %RDX.i1382 = bitcast %union.anon* %6392 to i64*
  %6393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6394 = getelementptr inbounds %struct.GPR, %struct.GPR* %6393, i32 0, i32 9
  %6395 = getelementptr inbounds %struct.Reg, %struct.Reg* %6394, i32 0, i32 0
  %RSI.i1383 = bitcast %union.anon* %6395 to i64*
  %6396 = load i64, i64* %RDX.i1382
  %6397 = load i64, i64* %PC.i1381
  %6398 = add i64 %6397, 3
  store i64 %6398, i64* %PC.i1381
  store i64 %6396, i64* %RSI.i1383, align 8
  store %struct.Memory* %loadMem_40b6b4, %struct.Memory** %MEMORY
  %loadMem_40b6b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6400 = getelementptr inbounds %struct.GPR, %struct.GPR* %6399, i32 0, i32 33
  %6401 = getelementptr inbounds %struct.Reg, %struct.Reg* %6400, i32 0, i32 0
  %PC.i1379 = bitcast %union.anon* %6401 to i64*
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6403 = getelementptr inbounds %struct.GPR, %struct.GPR* %6402, i32 0, i32 9
  %6404 = getelementptr inbounds %struct.Reg, %struct.Reg* %6403, i32 0, i32 0
  %RSI.i1380 = bitcast %union.anon* %6404 to i64*
  %6405 = load i64, i64* %RSI.i1380
  %6406 = load i64, i64* %PC.i1379
  %6407 = add i64 %6406, 4
  store i64 %6407, i64* %PC.i1379
  %6408 = add i64 16, %6405
  store i64 %6408, i64* %RSI.i1380, align 8
  %6409 = icmp ult i64 %6408, %6405
  %6410 = icmp ult i64 %6408, 16
  %6411 = or i1 %6409, %6410
  %6412 = zext i1 %6411 to i8
  %6413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6412, i8* %6413, align 1
  %6414 = trunc i64 %6408 to i32
  %6415 = and i32 %6414, 255
  %6416 = call i32 @llvm.ctpop.i32(i32 %6415)
  %6417 = trunc i32 %6416 to i8
  %6418 = and i8 %6417, 1
  %6419 = xor i8 %6418, 1
  %6420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6419, i8* %6420, align 1
  %6421 = xor i64 16, %6405
  %6422 = xor i64 %6421, %6408
  %6423 = lshr i64 %6422, 4
  %6424 = trunc i64 %6423 to i8
  %6425 = and i8 %6424, 1
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6425, i8* %6426, align 1
  %6427 = icmp eq i64 %6408, 0
  %6428 = zext i1 %6427 to i8
  %6429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6428, i8* %6429, align 1
  %6430 = lshr i64 %6408, 63
  %6431 = trunc i64 %6430 to i8
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6431, i8* %6432, align 1
  %6433 = lshr i64 %6405, 63
  %6434 = xor i64 %6430, %6433
  %6435 = add i64 %6434, %6430
  %6436 = icmp eq i64 %6435, 2
  %6437 = zext i1 %6436 to i8
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6437, i8* %6438, align 1
  store %struct.Memory* %loadMem_40b6b7, %struct.Memory** %MEMORY
  %loadMem_40b6bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6440 = getelementptr inbounds %struct.GPR, %struct.GPR* %6439, i32 0, i32 33
  %6441 = getelementptr inbounds %struct.Reg, %struct.Reg* %6440, i32 0, i32 0
  %PC.i1377 = bitcast %union.anon* %6441 to i64*
  %6442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6443 = getelementptr inbounds %struct.GPR, %struct.GPR* %6442, i32 0, i32 9
  %6444 = getelementptr inbounds %struct.Reg, %struct.Reg* %6443, i32 0, i32 0
  %RSI.i1378 = bitcast %union.anon* %6444 to i64*
  %6445 = load i64, i64* %RSI.i1378
  %6446 = load i64, i64* %PC.i1377
  %6447 = add i64 %6446, 8
  store i64 %6447, i64* %PC.i1377
  store i64 %6445, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40b6bb, %struct.Memory** %MEMORY
  %loadMem_40b6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6449 = getelementptr inbounds %struct.GPR, %struct.GPR* %6448, i32 0, i32 33
  %6450 = getelementptr inbounds %struct.Reg, %struct.Reg* %6449, i32 0, i32 0
  %PC.i1374 = bitcast %union.anon* %6450 to i64*
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6452 = getelementptr inbounds %struct.GPR, %struct.GPR* %6451, i32 0, i32 5
  %6453 = getelementptr inbounds %struct.Reg, %struct.Reg* %6452, i32 0, i32 0
  %ECX.i1375 = bitcast %union.anon* %6453 to i32*
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6455 = getelementptr inbounds %struct.GPR, %struct.GPR* %6454, i32 0, i32 7
  %6456 = getelementptr inbounds %struct.Reg, %struct.Reg* %6455, i32 0, i32 0
  %RDX.i1376 = bitcast %union.anon* %6456 to i64*
  %6457 = load i64, i64* %RDX.i1376
  %6458 = add i64 %6457, 8
  %6459 = load i32, i32* %ECX.i1375
  %6460 = zext i32 %6459 to i64
  %6461 = load i64, i64* %PC.i1374
  %6462 = add i64 %6461, 3
  store i64 %6462, i64* %PC.i1374
  %6463 = inttoptr i64 %6458 to i32*
  store i32 %6459, i32* %6463
  store %struct.Memory* %loadMem_40b6c3, %struct.Memory** %MEMORY
  %loadMem_40b6c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6465 = getelementptr inbounds %struct.GPR, %struct.GPR* %6464, i32 0, i32 33
  %6466 = getelementptr inbounds %struct.Reg, %struct.Reg* %6465, i32 0, i32 0
  %PC.i1371 = bitcast %union.anon* %6466 to i64*
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6468 = getelementptr inbounds %struct.GPR, %struct.GPR* %6467, i32 0, i32 7
  %6469 = getelementptr inbounds %struct.Reg, %struct.Reg* %6468, i32 0, i32 0
  %RDX.i1372 = bitcast %union.anon* %6469 to i64*
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6471 = getelementptr inbounds %struct.GPR, %struct.GPR* %6470, i32 0, i32 15
  %6472 = getelementptr inbounds %struct.Reg, %struct.Reg* %6471, i32 0, i32 0
  %RBP.i1373 = bitcast %union.anon* %6472 to i64*
  %6473 = load i64, i64* %RBP.i1373
  %6474 = sub i64 %6473, 4
  %6475 = load i64, i64* %PC.i1371
  %6476 = add i64 %6475, 4
  store i64 %6476, i64* %PC.i1371
  %6477 = inttoptr i64 %6474 to i32*
  %6478 = load i32, i32* %6477
  %6479 = sext i32 %6478 to i64
  store i64 %6479, i64* %RDX.i1372, align 8
  store %struct.Memory* %loadMem_40b6c6, %struct.Memory** %MEMORY
  %loadMem_40b6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6481 = getelementptr inbounds %struct.GPR, %struct.GPR* %6480, i32 0, i32 33
  %6482 = getelementptr inbounds %struct.Reg, %struct.Reg* %6481, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %6482 to i64*
  %6483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6484 = getelementptr inbounds %struct.GPR, %struct.GPR* %6483, i32 0, i32 5
  %6485 = getelementptr inbounds %struct.Reg, %struct.Reg* %6484, i32 0, i32 0
  %RCX.i1369 = bitcast %union.anon* %6485 to i64*
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6487 = getelementptr inbounds %struct.GPR, %struct.GPR* %6486, i32 0, i32 7
  %6488 = getelementptr inbounds %struct.Reg, %struct.Reg* %6487, i32 0, i32 0
  %RDX.i1370 = bitcast %union.anon* %6488 to i64*
  %6489 = load i64, i64* %RDX.i1370
  %6490 = mul i64 %6489, 4
  %6491 = add i64 %6490, 11187184
  %6492 = load i64, i64* %PC.i1368
  %6493 = add i64 %6492, 7
  store i64 %6493, i64* %PC.i1368
  %6494 = inttoptr i64 %6491 to i32*
  %6495 = load i32, i32* %6494
  %6496 = zext i32 %6495 to i64
  store i64 %6496, i64* %RCX.i1369, align 8
  store %struct.Memory* %loadMem_40b6ca, %struct.Memory** %MEMORY
  %loadMem_40b6d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6498 = getelementptr inbounds %struct.GPR, %struct.GPR* %6497, i32 0, i32 33
  %6499 = getelementptr inbounds %struct.Reg, %struct.Reg* %6498, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %6499 to i64*
  %6500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6501 = getelementptr inbounds %struct.GPR, %struct.GPR* %6500, i32 0, i32 7
  %6502 = getelementptr inbounds %struct.Reg, %struct.Reg* %6501, i32 0, i32 0
  %RDX.i1366 = bitcast %union.anon* %6502 to i64*
  %6503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6504 = getelementptr inbounds %struct.GPR, %struct.GPR* %6503, i32 0, i32 15
  %6505 = getelementptr inbounds %struct.Reg, %struct.Reg* %6504, i32 0, i32 0
  %RBP.i1367 = bitcast %union.anon* %6505 to i64*
  %6506 = load i64, i64* %RBP.i1367
  %6507 = sub i64 %6506, 32
  %6508 = load i64, i64* %PC.i1365
  %6509 = add i64 %6508, 4
  store i64 %6509, i64* %PC.i1365
  %6510 = inttoptr i64 %6507 to i32*
  %6511 = load i32, i32* %6510
  %6512 = sext i32 %6511 to i64
  store i64 %6512, i64* %RDX.i1366, align 8
  store %struct.Memory* %loadMem_40b6d1, %struct.Memory** %MEMORY
  %loadMem_40b6d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6514 = getelementptr inbounds %struct.GPR, %struct.GPR* %6513, i32 0, i32 33
  %6515 = getelementptr inbounds %struct.Reg, %struct.Reg* %6514, i32 0, i32 0
  %PC.i1363 = bitcast %union.anon* %6515 to i64*
  %6516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6517 = getelementptr inbounds %struct.GPR, %struct.GPR* %6516, i32 0, i32 7
  %6518 = getelementptr inbounds %struct.Reg, %struct.Reg* %6517, i32 0, i32 0
  %RDX.i1364 = bitcast %union.anon* %6518 to i64*
  %6519 = load i64, i64* %RDX.i1364
  %6520 = load i64, i64* %PC.i1363
  %6521 = add i64 %6520, 7
  store i64 %6521, i64* %PC.i1363
  %6522 = sext i64 %6519 to i128
  %6523 = and i128 %6522, -18446744073709551616
  %6524 = zext i64 %6519 to i128
  %6525 = or i128 %6523, %6524
  %6526 = mul i128 744, %6525
  %6527 = trunc i128 %6526 to i64
  store i64 %6527, i64* %RDX.i1364, align 8
  %6528 = sext i64 %6527 to i128
  %6529 = icmp ne i128 %6528, %6526
  %6530 = zext i1 %6529 to i8
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6530, i8* %6531, align 1
  %6532 = trunc i128 %6526 to i32
  %6533 = and i32 %6532, 255
  %6534 = call i32 @llvm.ctpop.i32(i32 %6533)
  %6535 = trunc i32 %6534 to i8
  %6536 = and i8 %6535, 1
  %6537 = xor i8 %6536, 1
  %6538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6537, i8* %6538, align 1
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6539, align 1
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6540, align 1
  %6541 = lshr i64 %6527, 63
  %6542 = trunc i64 %6541 to i8
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6542, i8* %6543, align 1
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6530, i8* %6544, align 1
  store %struct.Memory* %loadMem_40b6d5, %struct.Memory** %MEMORY
  %loadMem_40b6dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6546 = getelementptr inbounds %struct.GPR, %struct.GPR* %6545, i32 0, i32 33
  %6547 = getelementptr inbounds %struct.Reg, %struct.Reg* %6546, i32 0, i32 0
  %PC.i1360 = bitcast %union.anon* %6547 to i64*
  %6548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6549 = getelementptr inbounds %struct.GPR, %struct.GPR* %6548, i32 0, i32 1
  %6550 = getelementptr inbounds %struct.Reg, %struct.Reg* %6549, i32 0, i32 0
  %RAX.i1361 = bitcast %union.anon* %6550 to i64*
  %6551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6552 = getelementptr inbounds %struct.GPR, %struct.GPR* %6551, i32 0, i32 9
  %6553 = getelementptr inbounds %struct.Reg, %struct.Reg* %6552, i32 0, i32 0
  %RSI.i1362 = bitcast %union.anon* %6553 to i64*
  %6554 = load i64, i64* %RAX.i1361
  %6555 = load i64, i64* %PC.i1360
  %6556 = add i64 %6555, 3
  store i64 %6556, i64* %PC.i1360
  store i64 %6554, i64* %RSI.i1362, align 8
  store %struct.Memory* %loadMem_40b6dc, %struct.Memory** %MEMORY
  %loadMem_40b6df = load %struct.Memory*, %struct.Memory** %MEMORY
  %6557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6558 = getelementptr inbounds %struct.GPR, %struct.GPR* %6557, i32 0, i32 33
  %6559 = getelementptr inbounds %struct.Reg, %struct.Reg* %6558, i32 0, i32 0
  %PC.i1357 = bitcast %union.anon* %6559 to i64*
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6561 = getelementptr inbounds %struct.GPR, %struct.GPR* %6560, i32 0, i32 7
  %6562 = getelementptr inbounds %struct.Reg, %struct.Reg* %6561, i32 0, i32 0
  %RDX.i1358 = bitcast %union.anon* %6562 to i64*
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6564 = getelementptr inbounds %struct.GPR, %struct.GPR* %6563, i32 0, i32 9
  %6565 = getelementptr inbounds %struct.Reg, %struct.Reg* %6564, i32 0, i32 0
  %RSI.i1359 = bitcast %union.anon* %6565 to i64*
  %6566 = load i64, i64* %RSI.i1359
  %6567 = load i64, i64* %RDX.i1358
  %6568 = load i64, i64* %PC.i1357
  %6569 = add i64 %6568, 3
  store i64 %6569, i64* %PC.i1357
  %6570 = add i64 %6567, %6566
  store i64 %6570, i64* %RSI.i1359, align 8
  %6571 = icmp ult i64 %6570, %6566
  %6572 = icmp ult i64 %6570, %6567
  %6573 = or i1 %6571, %6572
  %6574 = zext i1 %6573 to i8
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6574, i8* %6575, align 1
  %6576 = trunc i64 %6570 to i32
  %6577 = and i32 %6576, 255
  %6578 = call i32 @llvm.ctpop.i32(i32 %6577)
  %6579 = trunc i32 %6578 to i8
  %6580 = and i8 %6579, 1
  %6581 = xor i8 %6580, 1
  %6582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6581, i8* %6582, align 1
  %6583 = xor i64 %6567, %6566
  %6584 = xor i64 %6583, %6570
  %6585 = lshr i64 %6584, 4
  %6586 = trunc i64 %6585 to i8
  %6587 = and i8 %6586, 1
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6587, i8* %6588, align 1
  %6589 = icmp eq i64 %6570, 0
  %6590 = zext i1 %6589 to i8
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6590, i8* %6591, align 1
  %6592 = lshr i64 %6570, 63
  %6593 = trunc i64 %6592 to i8
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6593, i8* %6594, align 1
  %6595 = lshr i64 %6566, 63
  %6596 = lshr i64 %6567, 63
  %6597 = xor i64 %6592, %6595
  %6598 = xor i64 %6592, %6596
  %6599 = add i64 %6597, %6598
  %6600 = icmp eq i64 %6599, 2
  %6601 = zext i1 %6600 to i8
  %6602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6601, i8* %6602, align 1
  store %struct.Memory* %loadMem_40b6df, %struct.Memory** %MEMORY
  %loadMem_40b6e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6604 = getelementptr inbounds %struct.GPR, %struct.GPR* %6603, i32 0, i32 33
  %6605 = getelementptr inbounds %struct.Reg, %struct.Reg* %6604, i32 0, i32 0
  %PC.i1354 = bitcast %union.anon* %6605 to i64*
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6607 = getelementptr inbounds %struct.GPR, %struct.GPR* %6606, i32 0, i32 7
  %6608 = getelementptr inbounds %struct.Reg, %struct.Reg* %6607, i32 0, i32 0
  %RDX.i1355 = bitcast %union.anon* %6608 to i64*
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6610 = getelementptr inbounds %struct.GPR, %struct.GPR* %6609, i32 0, i32 15
  %6611 = getelementptr inbounds %struct.Reg, %struct.Reg* %6610, i32 0, i32 0
  %RBP.i1356 = bitcast %union.anon* %6611 to i64*
  %6612 = load i64, i64* %RBP.i1356
  %6613 = sub i64 %6612, 32
  %6614 = load i64, i64* %PC.i1354
  %6615 = add i64 %6614, 4
  store i64 %6615, i64* %PC.i1354
  %6616 = inttoptr i64 %6613 to i32*
  %6617 = load i32, i32* %6616
  %6618 = sext i32 %6617 to i64
  store i64 %6618, i64* %RDX.i1355, align 8
  store %struct.Memory* %loadMem_40b6e2, %struct.Memory** %MEMORY
  %loadMem_40b6e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 33
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %6621 to i64*
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 7
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %RDX.i1353 = bitcast %union.anon* %6624 to i64*
  %6625 = load i64, i64* %RDX.i1353
  %6626 = load i64, i64* %PC.i1352
  %6627 = add i64 %6626, 7
  store i64 %6627, i64* %PC.i1352
  %6628 = sext i64 %6625 to i128
  %6629 = and i128 %6628, -18446744073709551616
  %6630 = zext i64 %6625 to i128
  %6631 = or i128 %6629, %6630
  %6632 = mul i128 744, %6631
  %6633 = trunc i128 %6632 to i64
  store i64 %6633, i64* %RDX.i1353, align 8
  %6634 = sext i64 %6633 to i128
  %6635 = icmp ne i128 %6634, %6632
  %6636 = zext i1 %6635 to i8
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6636, i8* %6637, align 1
  %6638 = trunc i128 %6632 to i32
  %6639 = and i32 %6638, 255
  %6640 = call i32 @llvm.ctpop.i32(i32 %6639)
  %6641 = trunc i32 %6640 to i8
  %6642 = and i8 %6641, 1
  %6643 = xor i8 %6642, 1
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6643, i8* %6644, align 1
  %6645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6645, align 1
  %6646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6646, align 1
  %6647 = lshr i64 %6633, 63
  %6648 = trunc i64 %6647 to i8
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6648, i8* %6649, align 1
  %6650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6636, i8* %6650, align 1
  store %struct.Memory* %loadMem_40b6e6, %struct.Memory** %MEMORY
  %loadMem_40b6ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %6651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6652 = getelementptr inbounds %struct.GPR, %struct.GPR* %6651, i32 0, i32 33
  %6653 = getelementptr inbounds %struct.Reg, %struct.Reg* %6652, i32 0, i32 0
  %PC.i1349 = bitcast %union.anon* %6653 to i64*
  %6654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6655 = getelementptr inbounds %struct.GPR, %struct.GPR* %6654, i32 0, i32 1
  %6656 = getelementptr inbounds %struct.Reg, %struct.Reg* %6655, i32 0, i32 0
  %RAX.i1350 = bitcast %union.anon* %6656 to i64*
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6658 = getelementptr inbounds %struct.GPR, %struct.GPR* %6657, i32 0, i32 11
  %6659 = getelementptr inbounds %struct.Reg, %struct.Reg* %6658, i32 0, i32 0
  %RDI.i1351 = bitcast %union.anon* %6659 to i64*
  %6660 = load i64, i64* %RAX.i1350
  %6661 = load i64, i64* %PC.i1349
  %6662 = add i64 %6661, 3
  store i64 %6662, i64* %PC.i1349
  store i64 %6660, i64* %RDI.i1351, align 8
  store %struct.Memory* %loadMem_40b6ed, %struct.Memory** %MEMORY
  %loadMem_40b6f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6664 = getelementptr inbounds %struct.GPR, %struct.GPR* %6663, i32 0, i32 33
  %6665 = getelementptr inbounds %struct.Reg, %struct.Reg* %6664, i32 0, i32 0
  %PC.i1346 = bitcast %union.anon* %6665 to i64*
  %6666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6667 = getelementptr inbounds %struct.GPR, %struct.GPR* %6666, i32 0, i32 7
  %6668 = getelementptr inbounds %struct.Reg, %struct.Reg* %6667, i32 0, i32 0
  %RDX.i1347 = bitcast %union.anon* %6668 to i64*
  %6669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6670 = getelementptr inbounds %struct.GPR, %struct.GPR* %6669, i32 0, i32 11
  %6671 = getelementptr inbounds %struct.Reg, %struct.Reg* %6670, i32 0, i32 0
  %RDI.i1348 = bitcast %union.anon* %6671 to i64*
  %6672 = load i64, i64* %RDI.i1348
  %6673 = load i64, i64* %RDX.i1347
  %6674 = load i64, i64* %PC.i1346
  %6675 = add i64 %6674, 3
  store i64 %6675, i64* %PC.i1346
  %6676 = add i64 %6673, %6672
  store i64 %6676, i64* %RDI.i1348, align 8
  %6677 = icmp ult i64 %6676, %6672
  %6678 = icmp ult i64 %6676, %6673
  %6679 = or i1 %6677, %6678
  %6680 = zext i1 %6679 to i8
  %6681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6680, i8* %6681, align 1
  %6682 = trunc i64 %6676 to i32
  %6683 = and i32 %6682, 255
  %6684 = call i32 @llvm.ctpop.i32(i32 %6683)
  %6685 = trunc i32 %6684 to i8
  %6686 = and i8 %6685, 1
  %6687 = xor i8 %6686, 1
  %6688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6687, i8* %6688, align 1
  %6689 = xor i64 %6673, %6672
  %6690 = xor i64 %6689, %6676
  %6691 = lshr i64 %6690, 4
  %6692 = trunc i64 %6691 to i8
  %6693 = and i8 %6692, 1
  %6694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6693, i8* %6694, align 1
  %6695 = icmp eq i64 %6676, 0
  %6696 = zext i1 %6695 to i8
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6696, i8* %6697, align 1
  %6698 = lshr i64 %6676, 63
  %6699 = trunc i64 %6698 to i8
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6699, i8* %6700, align 1
  %6701 = lshr i64 %6672, 63
  %6702 = lshr i64 %6673, 63
  %6703 = xor i64 %6698, %6701
  %6704 = xor i64 %6698, %6702
  %6705 = add i64 %6703, %6704
  %6706 = icmp eq i64 %6705, 2
  %6707 = zext i1 %6706 to i8
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6707, i8* %6708, align 1
  store %struct.Memory* %loadMem_40b6f0, %struct.Memory** %MEMORY
  %loadMem_40b6f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6710 = getelementptr inbounds %struct.GPR, %struct.GPR* %6709, i32 0, i32 33
  %6711 = getelementptr inbounds %struct.Reg, %struct.Reg* %6710, i32 0, i32 0
  %PC.i1343 = bitcast %union.anon* %6711 to i64*
  %6712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6713 = getelementptr inbounds %struct.GPR, %struct.GPR* %6712, i32 0, i32 17
  %6714 = getelementptr inbounds %struct.Reg, %struct.Reg* %6713, i32 0, i32 0
  %R8D.i1344 = bitcast %union.anon* %6714 to i32*
  %6715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6716 = getelementptr inbounds %struct.GPR, %struct.GPR* %6715, i32 0, i32 11
  %6717 = getelementptr inbounds %struct.Reg, %struct.Reg* %6716, i32 0, i32 0
  %RDI.i1345 = bitcast %union.anon* %6717 to i64*
  %6718 = bitcast i32* %R8D.i1344 to i64*
  %6719 = load i64, i64* %RDI.i1345
  %6720 = add i64 %6719, 96
  %6721 = load i64, i64* %PC.i1343
  %6722 = add i64 %6721, 4
  store i64 %6722, i64* %PC.i1343
  %6723 = inttoptr i64 %6720 to i32*
  %6724 = load i32, i32* %6723
  %6725 = zext i32 %6724 to i64
  store i64 %6725, i64* %6718, align 8
  store %struct.Memory* %loadMem_40b6f3, %struct.Memory** %MEMORY
  %loadMem_40b6f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6727 = getelementptr inbounds %struct.GPR, %struct.GPR* %6726, i32 0, i32 33
  %6728 = getelementptr inbounds %struct.Reg, %struct.Reg* %6727, i32 0, i32 0
  %PC.i1340 = bitcast %union.anon* %6728 to i64*
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6730 = getelementptr inbounds %struct.GPR, %struct.GPR* %6729, i32 0, i32 17
  %6731 = getelementptr inbounds %struct.Reg, %struct.Reg* %6730, i32 0, i32 0
  %R8D.i1341 = bitcast %union.anon* %6731 to i32*
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6733 = getelementptr inbounds %struct.GPR, %struct.GPR* %6732, i32 0, i32 19
  %6734 = getelementptr inbounds %struct.Reg, %struct.Reg* %6733, i32 0, i32 0
  %R9D.i1342 = bitcast %union.anon* %6734 to i32*
  %6735 = bitcast i32* %R9D.i1342 to i64*
  %6736 = load i32, i32* %R8D.i1341
  %6737 = zext i32 %6736 to i64
  %6738 = load i64, i64* %PC.i1340
  %6739 = add i64 %6738, 3
  store i64 %6739, i64* %PC.i1340
  %6740 = and i64 %6737, 4294967295
  store i64 %6740, i64* %6735, align 8
  store %struct.Memory* %loadMem_40b6f7, %struct.Memory** %MEMORY
  %loadMem_40b6fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6742 = getelementptr inbounds %struct.GPR, %struct.GPR* %6741, i32 0, i32 33
  %6743 = getelementptr inbounds %struct.Reg, %struct.Reg* %6742, i32 0, i32 0
  %PC.i1338 = bitcast %union.anon* %6743 to i64*
  %6744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6745 = getelementptr inbounds %struct.GPR, %struct.GPR* %6744, i32 0, i32 19
  %6746 = getelementptr inbounds %struct.Reg, %struct.Reg* %6745, i32 0, i32 0
  %R9D.i1339 = bitcast %union.anon* %6746 to i32*
  %6747 = bitcast i32* %R9D.i1339 to i64*
  %6748 = load i32, i32* %R9D.i1339
  %6749 = zext i32 %6748 to i64
  %6750 = load i64, i64* %PC.i1338
  %6751 = add i64 %6750, 4
  store i64 %6751, i64* %PC.i1338
  %6752 = add i32 1, %6748
  %6753 = zext i32 %6752 to i64
  store i64 %6753, i64* %6747, align 8
  %6754 = icmp ult i32 %6752, %6748
  %6755 = icmp ult i32 %6752, 1
  %6756 = or i1 %6754, %6755
  %6757 = zext i1 %6756 to i8
  %6758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6757, i8* %6758, align 1
  %6759 = and i32 %6752, 255
  %6760 = call i32 @llvm.ctpop.i32(i32 %6759)
  %6761 = trunc i32 %6760 to i8
  %6762 = and i8 %6761, 1
  %6763 = xor i8 %6762, 1
  %6764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6763, i8* %6764, align 1
  %6765 = xor i64 1, %6749
  %6766 = trunc i64 %6765 to i32
  %6767 = xor i32 %6766, %6752
  %6768 = lshr i32 %6767, 4
  %6769 = trunc i32 %6768 to i8
  %6770 = and i8 %6769, 1
  %6771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6770, i8* %6771, align 1
  %6772 = icmp eq i32 %6752, 0
  %6773 = zext i1 %6772 to i8
  %6774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6773, i8* %6774, align 1
  %6775 = lshr i32 %6752, 31
  %6776 = trunc i32 %6775 to i8
  %6777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6776, i8* %6777, align 1
  %6778 = lshr i32 %6748, 31
  %6779 = xor i32 %6775, %6778
  %6780 = add i32 %6779, %6775
  %6781 = icmp eq i32 %6780, 2
  %6782 = zext i1 %6781 to i8
  %6783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6782, i8* %6783, align 1
  store %struct.Memory* %loadMem_40b6fa, %struct.Memory** %MEMORY
  %loadMem_40b6fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6785 = getelementptr inbounds %struct.GPR, %struct.GPR* %6784, i32 0, i32 33
  %6786 = getelementptr inbounds %struct.Reg, %struct.Reg* %6785, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %6786 to i64*
  %6787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6788 = getelementptr inbounds %struct.GPR, %struct.GPR* %6787, i32 0, i32 19
  %6789 = getelementptr inbounds %struct.Reg, %struct.Reg* %6788, i32 0, i32 0
  %R9D.i1336 = bitcast %union.anon* %6789 to i32*
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6791 = getelementptr inbounds %struct.GPR, %struct.GPR* %6790, i32 0, i32 11
  %6792 = getelementptr inbounds %struct.Reg, %struct.Reg* %6791, i32 0, i32 0
  %RDI.i1337 = bitcast %union.anon* %6792 to i64*
  %6793 = load i64, i64* %RDI.i1337
  %6794 = add i64 %6793, 96
  %6795 = load i32, i32* %R9D.i1336
  %6796 = zext i32 %6795 to i64
  %6797 = load i64, i64* %PC.i1335
  %6798 = add i64 %6797, 4
  store i64 %6798, i64* %PC.i1335
  %6799 = inttoptr i64 %6794 to i32*
  store i32 %6795, i32* %6799
  store %struct.Memory* %loadMem_40b6fe, %struct.Memory** %MEMORY
  %loadMem_40b702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6801 = getelementptr inbounds %struct.GPR, %struct.GPR* %6800, i32 0, i32 33
  %6802 = getelementptr inbounds %struct.Reg, %struct.Reg* %6801, i32 0, i32 0
  %PC.i1332 = bitcast %union.anon* %6802 to i64*
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6804 = getelementptr inbounds %struct.GPR, %struct.GPR* %6803, i32 0, i32 17
  %6805 = getelementptr inbounds %struct.Reg, %struct.Reg* %6804, i32 0, i32 0
  %R8D.i1333 = bitcast %union.anon* %6805 to i32*
  %6806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6807 = getelementptr inbounds %struct.GPR, %struct.GPR* %6806, i32 0, i32 7
  %6808 = getelementptr inbounds %struct.Reg, %struct.Reg* %6807, i32 0, i32 0
  %RDX.i1334 = bitcast %union.anon* %6808 to i64*
  %6809 = load i32, i32* %R8D.i1333
  %6810 = zext i32 %6809 to i64
  %6811 = load i64, i64* %PC.i1332
  %6812 = add i64 %6811, 3
  store i64 %6812, i64* %PC.i1332
  %6813 = shl i64 %6810, 32
  %6814 = ashr exact i64 %6813, 32
  store i64 %6814, i64* %RDX.i1334, align 8
  store %struct.Memory* %loadMem_40b702, %struct.Memory** %MEMORY
  %loadMem_40b705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6816 = getelementptr inbounds %struct.GPR, %struct.GPR* %6815, i32 0, i32 33
  %6817 = getelementptr inbounds %struct.Reg, %struct.Reg* %6816, i32 0, i32 0
  %PC.i1328 = bitcast %union.anon* %6817 to i64*
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6819 = getelementptr inbounds %struct.GPR, %struct.GPR* %6818, i32 0, i32 5
  %6820 = getelementptr inbounds %struct.Reg, %struct.Reg* %6819, i32 0, i32 0
  %ECX.i1329 = bitcast %union.anon* %6820 to i32*
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6822 = getelementptr inbounds %struct.GPR, %struct.GPR* %6821, i32 0, i32 7
  %6823 = getelementptr inbounds %struct.Reg, %struct.Reg* %6822, i32 0, i32 0
  %RDX.i1330 = bitcast %union.anon* %6823 to i64*
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6825 = getelementptr inbounds %struct.GPR, %struct.GPR* %6824, i32 0, i32 9
  %6826 = getelementptr inbounds %struct.Reg, %struct.Reg* %6825, i32 0, i32 0
  %RSI.i1331 = bitcast %union.anon* %6826 to i64*
  %6827 = load i64, i64* %RSI.i1331
  %6828 = load i64, i64* %RDX.i1330
  %6829 = mul i64 %6828, 4
  %6830 = add i64 %6827, 100
  %6831 = add i64 %6830, %6829
  %6832 = load i32, i32* %ECX.i1329
  %6833 = zext i32 %6832 to i64
  %6834 = load i64, i64* %PC.i1328
  %6835 = add i64 %6834, 4
  store i64 %6835, i64* %PC.i1328
  %6836 = inttoptr i64 %6831 to i32*
  store i32 %6832, i32* %6836
  store %struct.Memory* %loadMem_40b705, %struct.Memory** %MEMORY
  %loadMem_40b709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6838 = getelementptr inbounds %struct.GPR, %struct.GPR* %6837, i32 0, i32 33
  %6839 = getelementptr inbounds %struct.Reg, %struct.Reg* %6838, i32 0, i32 0
  %PC.i1326 = bitcast %union.anon* %6839 to i64*
  %6840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6841 = getelementptr inbounds %struct.GPR, %struct.GPR* %6840, i32 0, i32 5
  %6842 = getelementptr inbounds %struct.Reg, %struct.Reg* %6841, i32 0, i32 0
  %RCX.i1327 = bitcast %union.anon* %6842 to i64*
  %6843 = load i64, i64* %PC.i1326
  %6844 = add i64 %6843, 7
  store i64 %6844, i64* %PC.i1326
  %6845 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %6846 = zext i32 %6845 to i64
  store i64 %6846, i64* %RCX.i1327, align 8
  store %struct.Memory* %loadMem_40b709, %struct.Memory** %MEMORY
  %loadMem_40b710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6848 = getelementptr inbounds %struct.GPR, %struct.GPR* %6847, i32 0, i32 33
  %6849 = getelementptr inbounds %struct.Reg, %struct.Reg* %6848, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %6849 to i64*
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6851 = getelementptr inbounds %struct.GPR, %struct.GPR* %6850, i32 0, i32 17
  %6852 = getelementptr inbounds %struct.Reg, %struct.Reg* %6851, i32 0, i32 0
  %R8D.i1324 = bitcast %union.anon* %6852 to i32*
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6854 = getelementptr inbounds %struct.GPR, %struct.GPR* %6853, i32 0, i32 15
  %6855 = getelementptr inbounds %struct.Reg, %struct.Reg* %6854, i32 0, i32 0
  %RBP.i1325 = bitcast %union.anon* %6855 to i64*
  %6856 = bitcast i32* %R8D.i1324 to i64*
  %6857 = load i64, i64* %RBP.i1325
  %6858 = sub i64 %6857, 4
  %6859 = load i64, i64* %PC.i1323
  %6860 = add i64 %6859, 4
  store i64 %6860, i64* %PC.i1323
  %6861 = inttoptr i64 %6858 to i32*
  %6862 = load i32, i32* %6861
  %6863 = zext i32 %6862 to i64
  store i64 %6863, i64* %6856, align 8
  store %struct.Memory* %loadMem_40b710, %struct.Memory** %MEMORY
  %loadMem_40b714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6865 = getelementptr inbounds %struct.GPR, %struct.GPR* %6864, i32 0, i32 33
  %6866 = getelementptr inbounds %struct.Reg, %struct.Reg* %6865, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %6866 to i64*
  %6867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6868 = getelementptr inbounds %struct.GPR, %struct.GPR* %6867, i32 0, i32 17
  %6869 = getelementptr inbounds %struct.Reg, %struct.Reg* %6868, i32 0, i32 0
  %R8D.i1322 = bitcast %union.anon* %6869 to i32*
  %6870 = bitcast i32* %R8D.i1322 to i64*
  %6871 = load i32, i32* %R8D.i1322
  %6872 = zext i32 %6871 to i64
  %6873 = load i64, i64* %PC.i1321
  %6874 = add i64 %6873, 4
  store i64 %6874, i64* %PC.i1321
  %6875 = add i32 20, %6871
  %6876 = zext i32 %6875 to i64
  store i64 %6876, i64* %6870, align 8
  %6877 = icmp ult i32 %6875, %6871
  %6878 = icmp ult i32 %6875, 20
  %6879 = or i1 %6877, %6878
  %6880 = zext i1 %6879 to i8
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6880, i8* %6881, align 1
  %6882 = and i32 %6875, 255
  %6883 = call i32 @llvm.ctpop.i32(i32 %6882)
  %6884 = trunc i32 %6883 to i8
  %6885 = and i8 %6884, 1
  %6886 = xor i8 %6885, 1
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6886, i8* %6887, align 1
  %6888 = xor i64 20, %6872
  %6889 = trunc i64 %6888 to i32
  %6890 = xor i32 %6889, %6875
  %6891 = lshr i32 %6890, 4
  %6892 = trunc i32 %6891 to i8
  %6893 = and i8 %6892, 1
  %6894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6893, i8* %6894, align 1
  %6895 = icmp eq i32 %6875, 0
  %6896 = zext i1 %6895 to i8
  %6897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6896, i8* %6897, align 1
  %6898 = lshr i32 %6875, 31
  %6899 = trunc i32 %6898 to i8
  %6900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6899, i8* %6900, align 1
  %6901 = lshr i32 %6871, 31
  %6902 = xor i32 %6898, %6901
  %6903 = add i32 %6902, %6898
  %6904 = icmp eq i32 %6903, 2
  %6905 = zext i1 %6904 to i8
  %6906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6905, i8* %6906, align 1
  store %struct.Memory* %loadMem_40b714, %struct.Memory** %MEMORY
  %loadMem_40b718 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6908 = getelementptr inbounds %struct.GPR, %struct.GPR* %6907, i32 0, i32 33
  %6909 = getelementptr inbounds %struct.Reg, %struct.Reg* %6908, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %6909 to i64*
  %6910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6911 = getelementptr inbounds %struct.GPR, %struct.GPR* %6910, i32 0, i32 17
  %6912 = getelementptr inbounds %struct.Reg, %struct.Reg* %6911, i32 0, i32 0
  %R8D.i1319 = bitcast %union.anon* %6912 to i32*
  %6913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6914 = getelementptr inbounds %struct.GPR, %struct.GPR* %6913, i32 0, i32 7
  %6915 = getelementptr inbounds %struct.Reg, %struct.Reg* %6914, i32 0, i32 0
  %RDX.i1320 = bitcast %union.anon* %6915 to i64*
  %6916 = load i32, i32* %R8D.i1319
  %6917 = zext i32 %6916 to i64
  %6918 = load i64, i64* %PC.i1318
  %6919 = add i64 %6918, 3
  store i64 %6919, i64* %PC.i1318
  %6920 = shl i64 %6917, 32
  %6921 = ashr exact i64 %6920, 32
  store i64 %6921, i64* %RDX.i1320, align 8
  store %struct.Memory* %loadMem_40b718, %struct.Memory** %MEMORY
  %loadMem_40b71b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6923 = getelementptr inbounds %struct.GPR, %struct.GPR* %6922, i32 0, i32 33
  %6924 = getelementptr inbounds %struct.Reg, %struct.Reg* %6923, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %6924 to i64*
  %6925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6926 = getelementptr inbounds %struct.GPR, %struct.GPR* %6925, i32 0, i32 7
  %6927 = getelementptr inbounds %struct.Reg, %struct.Reg* %6926, i32 0, i32 0
  %RDX.i1317 = bitcast %union.anon* %6927 to i64*
  %6928 = load i64, i64* %RDX.i1317
  %6929 = mul i64 %6928, 4
  %6930 = add i64 %6929, 11187184
  %6931 = load i64, i64* %PC.i1316
  %6932 = add i64 %6931, 8
  store i64 %6932, i64* %PC.i1316
  %6933 = inttoptr i64 %6930 to i32*
  %6934 = load i32, i32* %6933
  %6935 = sext i32 %6934 to i64
  store i64 %6935, i64* %RDX.i1317, align 8
  store %struct.Memory* %loadMem_40b71b, %struct.Memory** %MEMORY
  %loadMem_40b723 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6937 = getelementptr inbounds %struct.GPR, %struct.GPR* %6936, i32 0, i32 33
  %6938 = getelementptr inbounds %struct.Reg, %struct.Reg* %6937, i32 0, i32 0
  %PC.i1314 = bitcast %union.anon* %6938 to i64*
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6940 = getelementptr inbounds %struct.GPR, %struct.GPR* %6939, i32 0, i32 7
  %6941 = getelementptr inbounds %struct.Reg, %struct.Reg* %6940, i32 0, i32 0
  %RDX.i1315 = bitcast %union.anon* %6941 to i64*
  %6942 = load i64, i64* %RDX.i1315
  %6943 = load i64, i64* %PC.i1314
  %6944 = add i64 %6943, 7
  store i64 %6944, i64* %PC.i1314
  %6945 = sext i64 %6942 to i128
  %6946 = and i128 %6945, -18446744073709551616
  %6947 = zext i64 %6942 to i128
  %6948 = or i128 %6946, %6947
  %6949 = mul i128 744, %6948
  %6950 = trunc i128 %6949 to i64
  store i64 %6950, i64* %RDX.i1315, align 8
  %6951 = sext i64 %6950 to i128
  %6952 = icmp ne i128 %6951, %6949
  %6953 = zext i1 %6952 to i8
  %6954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6953, i8* %6954, align 1
  %6955 = trunc i128 %6949 to i32
  %6956 = and i32 %6955, 255
  %6957 = call i32 @llvm.ctpop.i32(i32 %6956)
  %6958 = trunc i32 %6957 to i8
  %6959 = and i8 %6958, 1
  %6960 = xor i8 %6959, 1
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6960, i8* %6961, align 1
  %6962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6962, align 1
  %6963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6963, align 1
  %6964 = lshr i64 %6950, 63
  %6965 = trunc i64 %6964 to i8
  %6966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6965, i8* %6966, align 1
  %6967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6953, i8* %6967, align 1
  store %struct.Memory* %loadMem_40b723, %struct.Memory** %MEMORY
  %loadMem_40b72a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6969 = getelementptr inbounds %struct.GPR, %struct.GPR* %6968, i32 0, i32 33
  %6970 = getelementptr inbounds %struct.Reg, %struct.Reg* %6969, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %6970 to i64*
  %6971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6972 = getelementptr inbounds %struct.GPR, %struct.GPR* %6971, i32 0, i32 1
  %6973 = getelementptr inbounds %struct.Reg, %struct.Reg* %6972, i32 0, i32 0
  %RAX.i1312 = bitcast %union.anon* %6973 to i64*
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6975 = getelementptr inbounds %struct.GPR, %struct.GPR* %6974, i32 0, i32 7
  %6976 = getelementptr inbounds %struct.Reg, %struct.Reg* %6975, i32 0, i32 0
  %RDX.i1313 = bitcast %union.anon* %6976 to i64*
  %6977 = load i64, i64* %RAX.i1312
  %6978 = load i64, i64* %RDX.i1313
  %6979 = load i64, i64* %PC.i1311
  %6980 = add i64 %6979, 3
  store i64 %6980, i64* %PC.i1311
  %6981 = add i64 %6978, %6977
  store i64 %6981, i64* %RAX.i1312, align 8
  %6982 = icmp ult i64 %6981, %6977
  %6983 = icmp ult i64 %6981, %6978
  %6984 = or i1 %6982, %6983
  %6985 = zext i1 %6984 to i8
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6985, i8* %6986, align 1
  %6987 = trunc i64 %6981 to i32
  %6988 = and i32 %6987, 255
  %6989 = call i32 @llvm.ctpop.i32(i32 %6988)
  %6990 = trunc i32 %6989 to i8
  %6991 = and i8 %6990, 1
  %6992 = xor i8 %6991, 1
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6992, i8* %6993, align 1
  %6994 = xor i64 %6978, %6977
  %6995 = xor i64 %6994, %6981
  %6996 = lshr i64 %6995, 4
  %6997 = trunc i64 %6996 to i8
  %6998 = and i8 %6997, 1
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6998, i8* %6999, align 1
  %7000 = icmp eq i64 %6981, 0
  %7001 = zext i1 %7000 to i8
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7001, i8* %7002, align 1
  %7003 = lshr i64 %6981, 63
  %7004 = trunc i64 %7003 to i8
  %7005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7004, i8* %7005, align 1
  %7006 = lshr i64 %6977, 63
  %7007 = lshr i64 %6978, 63
  %7008 = xor i64 %7003, %7006
  %7009 = xor i64 %7003, %7007
  %7010 = add i64 %7008, %7009
  %7011 = icmp eq i64 %7010, 2
  %7012 = zext i1 %7011 to i8
  %7013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7012, i8* %7013, align 1
  store %struct.Memory* %loadMem_40b72a, %struct.Memory** %MEMORY
  %loadMem_40b72d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7015 = getelementptr inbounds %struct.GPR, %struct.GPR* %7014, i32 0, i32 33
  %7016 = getelementptr inbounds %struct.Reg, %struct.Reg* %7015, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %7016 to i64*
  %7017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7018 = getelementptr inbounds %struct.GPR, %struct.GPR* %7017, i32 0, i32 5
  %7019 = getelementptr inbounds %struct.Reg, %struct.Reg* %7018, i32 0, i32 0
  %ECX.i1309 = bitcast %union.anon* %7019 to i32*
  %7020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7021 = getelementptr inbounds %struct.GPR, %struct.GPR* %7020, i32 0, i32 1
  %7022 = getelementptr inbounds %struct.Reg, %struct.Reg* %7021, i32 0, i32 0
  %RAX.i1310 = bitcast %union.anon* %7022 to i64*
  %7023 = load i64, i64* %RAX.i1310
  %7024 = add i64 %7023, 740
  %7025 = load i32, i32* %ECX.i1309
  %7026 = zext i32 %7025 to i64
  %7027 = load i64, i64* %PC.i1308
  %7028 = add i64 %7027, 6
  store i64 %7028, i64* %PC.i1308
  %7029 = inttoptr i64 %7024 to i32*
  store i32 %7025, i32* %7029
  store %struct.Memory* %loadMem_40b72d, %struct.Memory** %MEMORY
  br label %block_.L_40b733

block_.L_40b733:                                  ; preds = %block_40b5c5, %block_40b58d, %block_.L_40b573
  %loadMem_40b733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7031 = getelementptr inbounds %struct.GPR, %struct.GPR* %7030, i32 0, i32 33
  %7032 = getelementptr inbounds %struct.Reg, %struct.Reg* %7031, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %7032 to i64*
  %7033 = load i64, i64* %PC.i1307
  %7034 = add i64 %7033, 5
  %7035 = load i64, i64* %PC.i1307
  %7036 = add i64 %7035, 5
  store i64 %7036, i64* %PC.i1307
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7034, i64* %7037, align 8
  store %struct.Memory* %loadMem_40b733, %struct.Memory** %MEMORY
  br label %block_.L_40b738

block_.L_40b738:                                  ; preds = %block_.L_40b733, %block_.L_40b56e
  %loadMem_40b738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7039 = getelementptr inbounds %struct.GPR, %struct.GPR* %7038, i32 0, i32 33
  %7040 = getelementptr inbounds %struct.Reg, %struct.Reg* %7039, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %7040 to i64*
  %7041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7042 = getelementptr inbounds %struct.GPR, %struct.GPR* %7041, i32 0, i32 1
  %7043 = getelementptr inbounds %struct.Reg, %struct.Reg* %7042, i32 0, i32 0
  %RAX.i1305 = bitcast %union.anon* %7043 to i64*
  %7044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7045 = getelementptr inbounds %struct.GPR, %struct.GPR* %7044, i32 0, i32 15
  %7046 = getelementptr inbounds %struct.Reg, %struct.Reg* %7045, i32 0, i32 0
  %RBP.i1306 = bitcast %union.anon* %7046 to i64*
  %7047 = load i64, i64* %RBP.i1306
  %7048 = sub i64 %7047, 4
  %7049 = load i64, i64* %PC.i1304
  %7050 = add i64 %7049, 3
  store i64 %7050, i64* %PC.i1304
  %7051 = inttoptr i64 %7048 to i32*
  %7052 = load i32, i32* %7051
  %7053 = zext i32 %7052 to i64
  store i64 %7053, i64* %RAX.i1305, align 8
  store %struct.Memory* %loadMem_40b738, %struct.Memory** %MEMORY
  %loadMem_40b73b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7055 = getelementptr inbounds %struct.GPR, %struct.GPR* %7054, i32 0, i32 33
  %7056 = getelementptr inbounds %struct.Reg, %struct.Reg* %7055, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %7056 to i64*
  %7057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7058 = getelementptr inbounds %struct.GPR, %struct.GPR* %7057, i32 0, i32 1
  %7059 = getelementptr inbounds %struct.Reg, %struct.Reg* %7058, i32 0, i32 0
  %RAX.i1303 = bitcast %union.anon* %7059 to i64*
  %7060 = load i64, i64* %RAX.i1303
  %7061 = load i64, i64* %PC.i1302
  %7062 = add i64 %7061, 3
  store i64 %7062, i64* %PC.i1302
  %7063 = trunc i64 %7060 to i32
  %7064 = sub i32 %7063, 1
  %7065 = zext i32 %7064 to i64
  store i64 %7065, i64* %RAX.i1303, align 8
  %7066 = icmp ult i32 %7063, 1
  %7067 = zext i1 %7066 to i8
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7067, i8* %7068, align 1
  %7069 = and i32 %7064, 255
  %7070 = call i32 @llvm.ctpop.i32(i32 %7069)
  %7071 = trunc i32 %7070 to i8
  %7072 = and i8 %7071, 1
  %7073 = xor i8 %7072, 1
  %7074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7073, i8* %7074, align 1
  %7075 = xor i64 1, %7060
  %7076 = trunc i64 %7075 to i32
  %7077 = xor i32 %7076, %7064
  %7078 = lshr i32 %7077, 4
  %7079 = trunc i32 %7078 to i8
  %7080 = and i8 %7079, 1
  %7081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7080, i8* %7081, align 1
  %7082 = icmp eq i32 %7064, 0
  %7083 = zext i1 %7082 to i8
  %7084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7083, i8* %7084, align 1
  %7085 = lshr i32 %7064, 31
  %7086 = trunc i32 %7085 to i8
  %7087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7086, i8* %7087, align 1
  %7088 = lshr i32 %7063, 31
  %7089 = xor i32 %7085, %7088
  %7090 = add i32 %7089, %7088
  %7091 = icmp eq i32 %7090, 2
  %7092 = zext i1 %7091 to i8
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7092, i8* %7093, align 1
  store %struct.Memory* %loadMem_40b73b, %struct.Memory** %MEMORY
  %loadMem_40b73e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7095 = getelementptr inbounds %struct.GPR, %struct.GPR* %7094, i32 0, i32 33
  %7096 = getelementptr inbounds %struct.Reg, %struct.Reg* %7095, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %7096 to i64*
  %7097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7098 = getelementptr inbounds %struct.GPR, %struct.GPR* %7097, i32 0, i32 1
  %7099 = getelementptr inbounds %struct.Reg, %struct.Reg* %7098, i32 0, i32 0
  %EAX.i1300 = bitcast %union.anon* %7099 to i32*
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7101 = getelementptr inbounds %struct.GPR, %struct.GPR* %7100, i32 0, i32 5
  %7102 = getelementptr inbounds %struct.Reg, %struct.Reg* %7101, i32 0, i32 0
  %RCX.i1301 = bitcast %union.anon* %7102 to i64*
  %7103 = load i32, i32* %EAX.i1300
  %7104 = zext i32 %7103 to i64
  %7105 = load i64, i64* %PC.i1299
  %7106 = add i64 %7105, 3
  store i64 %7106, i64* %PC.i1299
  %7107 = shl i64 %7104, 32
  %7108 = ashr exact i64 %7107, 32
  store i64 %7108, i64* %RCX.i1301, align 8
  store %struct.Memory* %loadMem_40b73e, %struct.Memory** %MEMORY
  %loadMem_40b741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7110 = getelementptr inbounds %struct.GPR, %struct.GPR* %7109, i32 0, i32 33
  %7111 = getelementptr inbounds %struct.Reg, %struct.Reg* %7110, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %7111 to i64*
  %7112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7113 = getelementptr inbounds %struct.GPR, %struct.GPR* %7112, i32 0, i32 1
  %7114 = getelementptr inbounds %struct.Reg, %struct.Reg* %7113, i32 0, i32 0
  %RAX.i1297 = bitcast %union.anon* %7114 to i64*
  %7115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7116 = getelementptr inbounds %struct.GPR, %struct.GPR* %7115, i32 0, i32 5
  %7117 = getelementptr inbounds %struct.Reg, %struct.Reg* %7116, i32 0, i32 0
  %RCX.i1298 = bitcast %union.anon* %7117 to i64*
  %7118 = load i64, i64* %RCX.i1298
  %7119 = add i64 %7118, 12099168
  %7120 = load i64, i64* %PC.i1296
  %7121 = add i64 %7120, 8
  store i64 %7121, i64* %PC.i1296
  %7122 = inttoptr i64 %7119 to i8*
  %7123 = load i8, i8* %7122
  %7124 = zext i8 %7123 to i64
  store i64 %7124, i64* %RAX.i1297, align 8
  store %struct.Memory* %loadMem_40b741, %struct.Memory** %MEMORY
  %loadMem_40b749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7126 = getelementptr inbounds %struct.GPR, %struct.GPR* %7125, i32 0, i32 33
  %7127 = getelementptr inbounds %struct.Reg, %struct.Reg* %7126, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %7127 to i64*
  %7128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7129 = getelementptr inbounds %struct.GPR, %struct.GPR* %7128, i32 0, i32 1
  %7130 = getelementptr inbounds %struct.Reg, %struct.Reg* %7129, i32 0, i32 0
  %EAX.i1295 = bitcast %union.anon* %7130 to i32*
  %7131 = load i32, i32* %EAX.i1295
  %7132 = zext i32 %7131 to i64
  %7133 = load i64, i64* %PC.i1294
  %7134 = add i64 %7133, 3
  store i64 %7134, i64* %PC.i1294
  %7135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7135, align 1
  %7136 = and i32 %7131, 255
  %7137 = call i32 @llvm.ctpop.i32(i32 %7136)
  %7138 = trunc i32 %7137 to i8
  %7139 = and i8 %7138, 1
  %7140 = xor i8 %7139, 1
  %7141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7140, i8* %7141, align 1
  %7142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7142, align 1
  %7143 = icmp eq i32 %7131, 0
  %7144 = zext i1 %7143 to i8
  %7145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7144, i8* %7145, align 1
  %7146 = lshr i32 %7131, 31
  %7147 = trunc i32 %7146 to i8
  %7148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7147, i8* %7148, align 1
  %7149 = lshr i32 %7131, 31
  %7150 = xor i32 %7146, %7149
  %7151 = add i32 %7150, %7149
  %7152 = icmp eq i32 %7151, 2
  %7153 = zext i1 %7152 to i8
  %7154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7153, i8* %7154, align 1
  store %struct.Memory* %loadMem_40b749, %struct.Memory** %MEMORY
  %loadMem_40b74c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7156 = getelementptr inbounds %struct.GPR, %struct.GPR* %7155, i32 0, i32 33
  %7157 = getelementptr inbounds %struct.Reg, %struct.Reg* %7156, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %7157 to i64*
  %7158 = load i64, i64* %PC.i1293
  %7159 = add i64 %7158, 324
  %7160 = load i64, i64* %PC.i1293
  %7161 = add i64 %7160, 6
  %7162 = load i64, i64* %PC.i1293
  %7163 = add i64 %7162, 6
  store i64 %7163, i64* %PC.i1293
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7165 = load i8, i8* %7164, align 1
  %7166 = icmp eq i8 %7165, 0
  %7167 = zext i1 %7166 to i8
  store i8 %7167, i8* %BRANCH_TAKEN, align 1
  %7168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7169 = select i1 %7166, i64 %7159, i64 %7161
  store i64 %7169, i64* %7168, align 8
  store %struct.Memory* %loadMem_40b74c, %struct.Memory** %MEMORY
  %loadBr_40b74c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b74c = icmp eq i8 %loadBr_40b74c, 1
  br i1 %cmpBr_40b74c, label %block_.L_40b890, label %block_40b752

block_40b752:                                     ; preds = %block_.L_40b738
  %loadMem_40b752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7171 = getelementptr inbounds %struct.GPR, %struct.GPR* %7170, i32 0, i32 33
  %7172 = getelementptr inbounds %struct.Reg, %struct.Reg* %7171, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %7172 to i64*
  %7173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7174 = getelementptr inbounds %struct.GPR, %struct.GPR* %7173, i32 0, i32 15
  %7175 = getelementptr inbounds %struct.Reg, %struct.Reg* %7174, i32 0, i32 0
  %RBP.i1292 = bitcast %union.anon* %7175 to i64*
  %7176 = load i64, i64* %RBP.i1292
  %7177 = sub i64 %7176, 16
  %7178 = load i64, i64* %PC.i1291
  %7179 = add i64 %7178, 4
  store i64 %7179, i64* %PC.i1291
  %7180 = inttoptr i64 %7177 to i32*
  %7181 = load i32, i32* %7180
  %7182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7182, align 1
  %7183 = and i32 %7181, 255
  %7184 = call i32 @llvm.ctpop.i32(i32 %7183)
  %7185 = trunc i32 %7184 to i8
  %7186 = and i8 %7185, 1
  %7187 = xor i8 %7186, 1
  %7188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7187, i8* %7188, align 1
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7189, align 1
  %7190 = icmp eq i32 %7181, 0
  %7191 = zext i1 %7190 to i8
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7191, i8* %7192, align 1
  %7193 = lshr i32 %7181, 31
  %7194 = trunc i32 %7193 to i8
  %7195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7194, i8* %7195, align 1
  %7196 = lshr i32 %7181, 31
  %7197 = xor i32 %7193, %7196
  %7198 = add i32 %7197, %7196
  %7199 = icmp eq i32 %7198, 2
  %7200 = zext i1 %7199 to i8
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7200, i8* %7201, align 1
  store %struct.Memory* %loadMem_40b752, %struct.Memory** %MEMORY
  %loadMem_40b756 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7203 = getelementptr inbounds %struct.GPR, %struct.GPR* %7202, i32 0, i32 33
  %7204 = getelementptr inbounds %struct.Reg, %struct.Reg* %7203, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %7204 to i64*
  %7205 = load i64, i64* %PC.i1290
  %7206 = add i64 %7205, 309
  %7207 = load i64, i64* %PC.i1290
  %7208 = add i64 %7207, 6
  %7209 = load i64, i64* %PC.i1290
  %7210 = add i64 %7209, 6
  store i64 %7210, i64* %PC.i1290
  %7211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7212 = load i8, i8* %7211, align 1
  %7213 = icmp eq i8 %7212, 0
  %7214 = zext i1 %7213 to i8
  store i8 %7214, i8* %BRANCH_TAKEN, align 1
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7216 = select i1 %7213, i64 %7206, i64 %7208
  store i64 %7216, i64* %7215, align 8
  store %struct.Memory* %loadMem_40b756, %struct.Memory** %MEMORY
  %loadBr_40b756 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b756 = icmp eq i8 %loadBr_40b756, 1
  br i1 %cmpBr_40b756, label %block_.L_40b88b, label %block_40b75c

block_40b75c:                                     ; preds = %block_40b752
  %loadMem_40b75c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7218 = getelementptr inbounds %struct.GPR, %struct.GPR* %7217, i32 0, i32 33
  %7219 = getelementptr inbounds %struct.Reg, %struct.Reg* %7218, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %7219 to i64*
  %7220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7221 = getelementptr inbounds %struct.GPR, %struct.GPR* %7220, i32 0, i32 1
  %7222 = getelementptr inbounds %struct.Reg, %struct.Reg* %7221, i32 0, i32 0
  %RAX.i1288 = bitcast %union.anon* %7222 to i64*
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7224 = getelementptr inbounds %struct.GPR, %struct.GPR* %7223, i32 0, i32 15
  %7225 = getelementptr inbounds %struct.Reg, %struct.Reg* %7224, i32 0, i32 0
  %RBP.i1289 = bitcast %union.anon* %7225 to i64*
  %7226 = load i64, i64* %RBP.i1289
  %7227 = sub i64 %7226, 4
  %7228 = load i64, i64* %PC.i1287
  %7229 = add i64 %7228, 3
  store i64 %7229, i64* %PC.i1287
  %7230 = inttoptr i64 %7227 to i32*
  %7231 = load i32, i32* %7230
  %7232 = zext i32 %7231 to i64
  store i64 %7232, i64* %RAX.i1288, align 8
  store %struct.Memory* %loadMem_40b75c, %struct.Memory** %MEMORY
  %loadMem_40b75f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7234 = getelementptr inbounds %struct.GPR, %struct.GPR* %7233, i32 0, i32 33
  %7235 = getelementptr inbounds %struct.Reg, %struct.Reg* %7234, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %7235 to i64*
  %7236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7237 = getelementptr inbounds %struct.GPR, %struct.GPR* %7236, i32 0, i32 1
  %7238 = getelementptr inbounds %struct.Reg, %struct.Reg* %7237, i32 0, i32 0
  %RAX.i1286 = bitcast %union.anon* %7238 to i64*
  %7239 = load i64, i64* %RAX.i1286
  %7240 = load i64, i64* %PC.i1285
  %7241 = add i64 %7240, 3
  store i64 %7241, i64* %PC.i1285
  %7242 = trunc i64 %7239 to i32
  %7243 = sub i32 %7242, 1
  %7244 = zext i32 %7243 to i64
  store i64 %7244, i64* %RAX.i1286, align 8
  %7245 = icmp ult i32 %7242, 1
  %7246 = zext i1 %7245 to i8
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7246, i8* %7247, align 1
  %7248 = and i32 %7243, 255
  %7249 = call i32 @llvm.ctpop.i32(i32 %7248)
  %7250 = trunc i32 %7249 to i8
  %7251 = and i8 %7250, 1
  %7252 = xor i8 %7251, 1
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7252, i8* %7253, align 1
  %7254 = xor i64 1, %7239
  %7255 = trunc i64 %7254 to i32
  %7256 = xor i32 %7255, %7243
  %7257 = lshr i32 %7256, 4
  %7258 = trunc i32 %7257 to i8
  %7259 = and i8 %7258, 1
  %7260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7259, i8* %7260, align 1
  %7261 = icmp eq i32 %7243, 0
  %7262 = zext i1 %7261 to i8
  %7263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7262, i8* %7263, align 1
  %7264 = lshr i32 %7243, 31
  %7265 = trunc i32 %7264 to i8
  %7266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7265, i8* %7266, align 1
  %7267 = lshr i32 %7242, 31
  %7268 = xor i32 %7264, %7267
  %7269 = add i32 %7268, %7267
  %7270 = icmp eq i32 %7269, 2
  %7271 = zext i1 %7270 to i8
  %7272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7271, i8* %7272, align 1
  store %struct.Memory* %loadMem_40b75f, %struct.Memory** %MEMORY
  %loadMem_40b762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7274 = getelementptr inbounds %struct.GPR, %struct.GPR* %7273, i32 0, i32 33
  %7275 = getelementptr inbounds %struct.Reg, %struct.Reg* %7274, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %7275 to i64*
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7277 = getelementptr inbounds %struct.GPR, %struct.GPR* %7276, i32 0, i32 1
  %7278 = getelementptr inbounds %struct.Reg, %struct.Reg* %7277, i32 0, i32 0
  %RAX.i1284 = bitcast %union.anon* %7278 to i64*
  %7279 = load i64, i64* %RAX.i1284
  %7280 = load i64, i64* %PC.i1283
  %7281 = add i64 %7280, 3
  store i64 %7281, i64* %PC.i1283
  %7282 = trunc i64 %7279 to i32
  %7283 = sub i32 %7282, 1
  %7284 = zext i32 %7283 to i64
  store i64 %7284, i64* %RAX.i1284, align 8
  %7285 = icmp ult i32 %7282, 1
  %7286 = zext i1 %7285 to i8
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7286, i8* %7287, align 1
  %7288 = and i32 %7283, 255
  %7289 = call i32 @llvm.ctpop.i32(i32 %7288)
  %7290 = trunc i32 %7289 to i8
  %7291 = and i8 %7290, 1
  %7292 = xor i8 %7291, 1
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7292, i8* %7293, align 1
  %7294 = xor i64 1, %7279
  %7295 = trunc i64 %7294 to i32
  %7296 = xor i32 %7295, %7283
  %7297 = lshr i32 %7296, 4
  %7298 = trunc i32 %7297 to i8
  %7299 = and i8 %7298, 1
  %7300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7299, i8* %7300, align 1
  %7301 = icmp eq i32 %7283, 0
  %7302 = zext i1 %7301 to i8
  %7303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7302, i8* %7303, align 1
  %7304 = lshr i32 %7283, 31
  %7305 = trunc i32 %7304 to i8
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7305, i8* %7306, align 1
  %7307 = lshr i32 %7282, 31
  %7308 = xor i32 %7304, %7307
  %7309 = add i32 %7308, %7307
  %7310 = icmp eq i32 %7309, 2
  %7311 = zext i1 %7310 to i8
  %7312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7311, i8* %7312, align 1
  store %struct.Memory* %loadMem_40b762, %struct.Memory** %MEMORY
  %loadMem_40b765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7314 = getelementptr inbounds %struct.GPR, %struct.GPR* %7313, i32 0, i32 33
  %7315 = getelementptr inbounds %struct.Reg, %struct.Reg* %7314, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %7315 to i64*
  %7316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7317 = getelementptr inbounds %struct.GPR, %struct.GPR* %7316, i32 0, i32 1
  %7318 = getelementptr inbounds %struct.Reg, %struct.Reg* %7317, i32 0, i32 0
  %EAX.i1281 = bitcast %union.anon* %7318 to i32*
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7320 = getelementptr inbounds %struct.GPR, %struct.GPR* %7319, i32 0, i32 5
  %7321 = getelementptr inbounds %struct.Reg, %struct.Reg* %7320, i32 0, i32 0
  %RCX.i1282 = bitcast %union.anon* %7321 to i64*
  %7322 = load i32, i32* %EAX.i1281
  %7323 = zext i32 %7322 to i64
  %7324 = load i64, i64* %PC.i1280
  %7325 = add i64 %7324, 3
  store i64 %7325, i64* %PC.i1280
  %7326 = shl i64 %7323, 32
  %7327 = ashr exact i64 %7326, 32
  store i64 %7327, i64* %RCX.i1282, align 8
  store %struct.Memory* %loadMem_40b765, %struct.Memory** %MEMORY
  %loadMem_40b768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7329 = getelementptr inbounds %struct.GPR, %struct.GPR* %7328, i32 0, i32 33
  %7330 = getelementptr inbounds %struct.Reg, %struct.Reg* %7329, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %7330 to i64*
  %7331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7332 = getelementptr inbounds %struct.GPR, %struct.GPR* %7331, i32 0, i32 1
  %7333 = getelementptr inbounds %struct.Reg, %struct.Reg* %7332, i32 0, i32 0
  %RAX.i1278 = bitcast %union.anon* %7333 to i64*
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7335 = getelementptr inbounds %struct.GPR, %struct.GPR* %7334, i32 0, i32 5
  %7336 = getelementptr inbounds %struct.Reg, %struct.Reg* %7335, i32 0, i32 0
  %RCX.i1279 = bitcast %union.anon* %7336 to i64*
  %7337 = load i64, i64* %RCX.i1279
  %7338 = add i64 %7337, 12099168
  %7339 = load i64, i64* %PC.i1277
  %7340 = add i64 %7339, 8
  store i64 %7340, i64* %PC.i1277
  %7341 = inttoptr i64 %7338 to i8*
  %7342 = load i8, i8* %7341
  %7343 = zext i8 %7342 to i64
  store i64 %7343, i64* %RAX.i1278, align 8
  store %struct.Memory* %loadMem_40b768, %struct.Memory** %MEMORY
  %loadMem_40b770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7345 = getelementptr inbounds %struct.GPR, %struct.GPR* %7344, i32 0, i32 33
  %7346 = getelementptr inbounds %struct.Reg, %struct.Reg* %7345, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %7346 to i64*
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 1
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %EAX.i1275 = bitcast %union.anon* %7349 to i32*
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7351 = getelementptr inbounds %struct.GPR, %struct.GPR* %7350, i32 0, i32 15
  %7352 = getelementptr inbounds %struct.Reg, %struct.Reg* %7351, i32 0, i32 0
  %RBP.i1276 = bitcast %union.anon* %7352 to i64*
  %7353 = load i32, i32* %EAX.i1275
  %7354 = zext i32 %7353 to i64
  %7355 = load i64, i64* %RBP.i1276
  %7356 = sub i64 %7355, 20
  %7357 = load i64, i64* %PC.i1274
  %7358 = add i64 %7357, 3
  store i64 %7358, i64* %PC.i1274
  %7359 = inttoptr i64 %7356 to i32*
  %7360 = load i32, i32* %7359
  %7361 = sub i32 %7353, %7360
  %7362 = icmp ult i32 %7353, %7360
  %7363 = zext i1 %7362 to i8
  %7364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7363, i8* %7364, align 1
  %7365 = and i32 %7361, 255
  %7366 = call i32 @llvm.ctpop.i32(i32 %7365)
  %7367 = trunc i32 %7366 to i8
  %7368 = and i8 %7367, 1
  %7369 = xor i8 %7368, 1
  %7370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7369, i8* %7370, align 1
  %7371 = xor i32 %7360, %7353
  %7372 = xor i32 %7371, %7361
  %7373 = lshr i32 %7372, 4
  %7374 = trunc i32 %7373 to i8
  %7375 = and i8 %7374, 1
  %7376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7375, i8* %7376, align 1
  %7377 = icmp eq i32 %7361, 0
  %7378 = zext i1 %7377 to i8
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7378, i8* %7379, align 1
  %7380 = lshr i32 %7361, 31
  %7381 = trunc i32 %7380 to i8
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7381, i8* %7382, align 1
  %7383 = lshr i32 %7353, 31
  %7384 = lshr i32 %7360, 31
  %7385 = xor i32 %7384, %7383
  %7386 = xor i32 %7380, %7383
  %7387 = add i32 %7386, %7385
  %7388 = icmp eq i32 %7387, 2
  %7389 = zext i1 %7388 to i8
  %7390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7389, i8* %7390, align 1
  store %struct.Memory* %loadMem_40b770, %struct.Memory** %MEMORY
  %loadMem_40b773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7392 = getelementptr inbounds %struct.GPR, %struct.GPR* %7391, i32 0, i32 33
  %7393 = getelementptr inbounds %struct.Reg, %struct.Reg* %7392, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %7393 to i64*
  %7394 = load i64, i64* %PC.i1273
  %7395 = add i64 %7394, 34
  %7396 = load i64, i64* %PC.i1273
  %7397 = add i64 %7396, 6
  %7398 = load i64, i64* %PC.i1273
  %7399 = add i64 %7398, 6
  store i64 %7399, i64* %PC.i1273
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7401 = load i8, i8* %7400, align 1
  %7402 = icmp eq i8 %7401, 0
  %7403 = zext i1 %7402 to i8
  store i8 %7403, i8* %BRANCH_TAKEN, align 1
  %7404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7405 = select i1 %7402, i64 %7395, i64 %7397
  store i64 %7405, i64* %7404, align 8
  store %struct.Memory* %loadMem_40b773, %struct.Memory** %MEMORY
  %loadBr_40b773 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b773 = icmp eq i8 %loadBr_40b773, 1
  br i1 %cmpBr_40b773, label %block_.L_40b795, label %block_40b779

block_40b779:                                     ; preds = %block_40b75c
  %loadMem_40b779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7407 = getelementptr inbounds %struct.GPR, %struct.GPR* %7406, i32 0, i32 33
  %7408 = getelementptr inbounds %struct.Reg, %struct.Reg* %7407, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %7408 to i64*
  %7409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7410 = getelementptr inbounds %struct.GPR, %struct.GPR* %7409, i32 0, i32 1
  %7411 = getelementptr inbounds %struct.Reg, %struct.Reg* %7410, i32 0, i32 0
  %RAX.i1271 = bitcast %union.anon* %7411 to i64*
  %7412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7413 = getelementptr inbounds %struct.GPR, %struct.GPR* %7412, i32 0, i32 15
  %7414 = getelementptr inbounds %struct.Reg, %struct.Reg* %7413, i32 0, i32 0
  %RBP.i1272 = bitcast %union.anon* %7414 to i64*
  %7415 = load i64, i64* %RBP.i1272
  %7416 = sub i64 %7415, 4
  %7417 = load i64, i64* %PC.i1270
  %7418 = add i64 %7417, 3
  store i64 %7418, i64* %PC.i1270
  %7419 = inttoptr i64 %7416 to i32*
  %7420 = load i32, i32* %7419
  %7421 = zext i32 %7420 to i64
  store i64 %7421, i64* %RAX.i1271, align 8
  store %struct.Memory* %loadMem_40b779, %struct.Memory** %MEMORY
  %loadMem_40b77c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7423 = getelementptr inbounds %struct.GPR, %struct.GPR* %7422, i32 0, i32 33
  %7424 = getelementptr inbounds %struct.Reg, %struct.Reg* %7423, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %7424 to i64*
  %7425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7426 = getelementptr inbounds %struct.GPR, %struct.GPR* %7425, i32 0, i32 1
  %7427 = getelementptr inbounds %struct.Reg, %struct.Reg* %7426, i32 0, i32 0
  %RAX.i1269 = bitcast %union.anon* %7427 to i64*
  %7428 = load i64, i64* %RAX.i1269
  %7429 = load i64, i64* %PC.i1268
  %7430 = add i64 %7429, 3
  store i64 %7430, i64* %PC.i1268
  %7431 = trunc i64 %7428 to i32
  %7432 = sub i32 %7431, 1
  %7433 = zext i32 %7432 to i64
  store i64 %7433, i64* %RAX.i1269, align 8
  %7434 = icmp ult i32 %7431, 1
  %7435 = zext i1 %7434 to i8
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7435, i8* %7436, align 1
  %7437 = and i32 %7432, 255
  %7438 = call i32 @llvm.ctpop.i32(i32 %7437)
  %7439 = trunc i32 %7438 to i8
  %7440 = and i8 %7439, 1
  %7441 = xor i8 %7440, 1
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7441, i8* %7442, align 1
  %7443 = xor i64 1, %7428
  %7444 = trunc i64 %7443 to i32
  %7445 = xor i32 %7444, %7432
  %7446 = lshr i32 %7445, 4
  %7447 = trunc i32 %7446 to i8
  %7448 = and i8 %7447, 1
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7448, i8* %7449, align 1
  %7450 = icmp eq i32 %7432, 0
  %7451 = zext i1 %7450 to i8
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7451, i8* %7452, align 1
  %7453 = lshr i32 %7432, 31
  %7454 = trunc i32 %7453 to i8
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7454, i8* %7455, align 1
  %7456 = lshr i32 %7431, 31
  %7457 = xor i32 %7453, %7456
  %7458 = add i32 %7457, %7456
  %7459 = icmp eq i32 %7458, 2
  %7460 = zext i1 %7459 to i8
  %7461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7460, i8* %7461, align 1
  store %struct.Memory* %loadMem_40b77c, %struct.Memory** %MEMORY
  %loadMem_40b77f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7463 = getelementptr inbounds %struct.GPR, %struct.GPR* %7462, i32 0, i32 33
  %7464 = getelementptr inbounds %struct.Reg, %struct.Reg* %7463, i32 0, i32 0
  %PC.i1266 = bitcast %union.anon* %7464 to i64*
  %7465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7466 = getelementptr inbounds %struct.GPR, %struct.GPR* %7465, i32 0, i32 1
  %7467 = getelementptr inbounds %struct.Reg, %struct.Reg* %7466, i32 0, i32 0
  %RAX.i1267 = bitcast %union.anon* %7467 to i64*
  %7468 = load i64, i64* %RAX.i1267
  %7469 = load i64, i64* %PC.i1266
  %7470 = add i64 %7469, 3
  store i64 %7470, i64* %PC.i1266
  %7471 = trunc i64 %7468 to i32
  %7472 = sub i32 %7471, 1
  %7473 = zext i32 %7472 to i64
  store i64 %7473, i64* %RAX.i1267, align 8
  %7474 = icmp ult i32 %7471, 1
  %7475 = zext i1 %7474 to i8
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7475, i8* %7476, align 1
  %7477 = and i32 %7472, 255
  %7478 = call i32 @llvm.ctpop.i32(i32 %7477)
  %7479 = trunc i32 %7478 to i8
  %7480 = and i8 %7479, 1
  %7481 = xor i8 %7480, 1
  %7482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7481, i8* %7482, align 1
  %7483 = xor i64 1, %7468
  %7484 = trunc i64 %7483 to i32
  %7485 = xor i32 %7484, %7472
  %7486 = lshr i32 %7485, 4
  %7487 = trunc i32 %7486 to i8
  %7488 = and i8 %7487, 1
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7488, i8* %7489, align 1
  %7490 = icmp eq i32 %7472, 0
  %7491 = zext i1 %7490 to i8
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7491, i8* %7492, align 1
  %7493 = lshr i32 %7472, 31
  %7494 = trunc i32 %7493 to i8
  %7495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7494, i8* %7495, align 1
  %7496 = lshr i32 %7471, 31
  %7497 = xor i32 %7493, %7496
  %7498 = add i32 %7497, %7496
  %7499 = icmp eq i32 %7498, 2
  %7500 = zext i1 %7499 to i8
  %7501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7500, i8* %7501, align 1
  store %struct.Memory* %loadMem_40b77f, %struct.Memory** %MEMORY
  %loadMem_40b782 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7503 = getelementptr inbounds %struct.GPR, %struct.GPR* %7502, i32 0, i32 33
  %7504 = getelementptr inbounds %struct.Reg, %struct.Reg* %7503, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %7504 to i64*
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7506 = getelementptr inbounds %struct.GPR, %struct.GPR* %7505, i32 0, i32 1
  %7507 = getelementptr inbounds %struct.Reg, %struct.Reg* %7506, i32 0, i32 0
  %EAX.i1264 = bitcast %union.anon* %7507 to i32*
  %7508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7509 = getelementptr inbounds %struct.GPR, %struct.GPR* %7508, i32 0, i32 5
  %7510 = getelementptr inbounds %struct.Reg, %struct.Reg* %7509, i32 0, i32 0
  %RCX.i1265 = bitcast %union.anon* %7510 to i64*
  %7511 = load i32, i32* %EAX.i1264
  %7512 = zext i32 %7511 to i64
  %7513 = load i64, i64* %PC.i1263
  %7514 = add i64 %7513, 3
  store i64 %7514, i64* %PC.i1263
  %7515 = shl i64 %7512, 32
  %7516 = ashr exact i64 %7515, 32
  store i64 %7516, i64* %RCX.i1265, align 8
  store %struct.Memory* %loadMem_40b782, %struct.Memory** %MEMORY
  %loadMem_40b785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7518 = getelementptr inbounds %struct.GPR, %struct.GPR* %7517, i32 0, i32 33
  %7519 = getelementptr inbounds %struct.Reg, %struct.Reg* %7518, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %7519 to i64*
  %7520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7521 = getelementptr inbounds %struct.GPR, %struct.GPR* %7520, i32 0, i32 1
  %7522 = getelementptr inbounds %struct.Reg, %struct.Reg* %7521, i32 0, i32 0
  %RAX.i1261 = bitcast %union.anon* %7522 to i64*
  %7523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7524 = getelementptr inbounds %struct.GPR, %struct.GPR* %7523, i32 0, i32 5
  %7525 = getelementptr inbounds %struct.Reg, %struct.Reg* %7524, i32 0, i32 0
  %RCX.i1262 = bitcast %union.anon* %7525 to i64*
  %7526 = load i64, i64* %RCX.i1262
  %7527 = mul i64 %7526, 4
  %7528 = add i64 %7527, 11187184
  %7529 = load i64, i64* %PC.i1260
  %7530 = add i64 %7529, 7
  store i64 %7530, i64* %PC.i1260
  %7531 = inttoptr i64 %7528 to i32*
  %7532 = load i32, i32* %7531
  %7533 = zext i32 %7532 to i64
  store i64 %7533, i64* %RAX.i1261, align 8
  store %struct.Memory* %loadMem_40b785, %struct.Memory** %MEMORY
  %loadMem_40b78c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7535 = getelementptr inbounds %struct.GPR, %struct.GPR* %7534, i32 0, i32 33
  %7536 = getelementptr inbounds %struct.Reg, %struct.Reg* %7535, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %7536 to i64*
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7538 = getelementptr inbounds %struct.GPR, %struct.GPR* %7537, i32 0, i32 1
  %7539 = getelementptr inbounds %struct.Reg, %struct.Reg* %7538, i32 0, i32 0
  %EAX.i1258 = bitcast %union.anon* %7539 to i32*
  %7540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7541 = getelementptr inbounds %struct.GPR, %struct.GPR* %7540, i32 0, i32 15
  %7542 = getelementptr inbounds %struct.Reg, %struct.Reg* %7541, i32 0, i32 0
  %RBP.i1259 = bitcast %union.anon* %7542 to i64*
  %7543 = load i32, i32* %EAX.i1258
  %7544 = zext i32 %7543 to i64
  %7545 = load i64, i64* %RBP.i1259
  %7546 = sub i64 %7545, 8
  %7547 = load i64, i64* %PC.i1257
  %7548 = add i64 %7547, 3
  store i64 %7548, i64* %PC.i1257
  %7549 = inttoptr i64 %7546 to i32*
  %7550 = load i32, i32* %7549
  %7551 = sub i32 %7543, %7550
  %7552 = icmp ult i32 %7543, %7550
  %7553 = zext i1 %7552 to i8
  %7554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7553, i8* %7554, align 1
  %7555 = and i32 %7551, 255
  %7556 = call i32 @llvm.ctpop.i32(i32 %7555)
  %7557 = trunc i32 %7556 to i8
  %7558 = and i8 %7557, 1
  %7559 = xor i8 %7558, 1
  %7560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7559, i8* %7560, align 1
  %7561 = xor i32 %7550, %7543
  %7562 = xor i32 %7561, %7551
  %7563 = lshr i32 %7562, 4
  %7564 = trunc i32 %7563 to i8
  %7565 = and i8 %7564, 1
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7565, i8* %7566, align 1
  %7567 = icmp eq i32 %7551, 0
  %7568 = zext i1 %7567 to i8
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7568, i8* %7569, align 1
  %7570 = lshr i32 %7551, 31
  %7571 = trunc i32 %7570 to i8
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7571, i8* %7572, align 1
  %7573 = lshr i32 %7543, 31
  %7574 = lshr i32 %7550, 31
  %7575 = xor i32 %7574, %7573
  %7576 = xor i32 %7570, %7573
  %7577 = add i32 %7576, %7575
  %7578 = icmp eq i32 %7577, 2
  %7579 = zext i1 %7578 to i8
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7579, i8* %7580, align 1
  store %struct.Memory* %loadMem_40b78c, %struct.Memory** %MEMORY
  %loadMem_40b78f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7582 = getelementptr inbounds %struct.GPR, %struct.GPR* %7581, i32 0, i32 33
  %7583 = getelementptr inbounds %struct.Reg, %struct.Reg* %7582, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %7583 to i64*
  %7584 = load i64, i64* %PC.i1256
  %7585 = add i64 %7584, 252
  %7586 = load i64, i64* %PC.i1256
  %7587 = add i64 %7586, 6
  %7588 = load i64, i64* %PC.i1256
  %7589 = add i64 %7588, 6
  store i64 %7589, i64* %PC.i1256
  %7590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7591 = load i8, i8* %7590, align 1
  store i8 %7591, i8* %BRANCH_TAKEN, align 1
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7593 = icmp ne i8 %7591, 0
  %7594 = select i1 %7593, i64 %7585, i64 %7587
  store i64 %7594, i64* %7592, align 8
  store %struct.Memory* %loadMem_40b78f, %struct.Memory** %MEMORY
  %loadBr_40b78f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b78f = icmp eq i8 %loadBr_40b78f, 1
  br i1 %cmpBr_40b78f, label %block_.L_40b88b, label %block_.L_40b795

block_.L_40b795:                                  ; preds = %block_40b779, %block_40b75c
  %loadMem_40b795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7596 = getelementptr inbounds %struct.GPR, %struct.GPR* %7595, i32 0, i32 33
  %7597 = getelementptr inbounds %struct.Reg, %struct.Reg* %7596, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %7597 to i64*
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 1
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %RAX.i1254 = bitcast %union.anon* %7600 to i64*
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7602 = getelementptr inbounds %struct.GPR, %struct.GPR* %7601, i32 0, i32 15
  %7603 = getelementptr inbounds %struct.Reg, %struct.Reg* %7602, i32 0, i32 0
  %RBP.i1255 = bitcast %union.anon* %7603 to i64*
  %7604 = load i64, i64* %RBP.i1255
  %7605 = sub i64 %7604, 4
  %7606 = load i64, i64* %PC.i1253
  %7607 = add i64 %7606, 3
  store i64 %7607, i64* %PC.i1253
  %7608 = inttoptr i64 %7605 to i32*
  %7609 = load i32, i32* %7608
  %7610 = zext i32 %7609 to i64
  store i64 %7610, i64* %RAX.i1254, align 8
  store %struct.Memory* %loadMem_40b795, %struct.Memory** %MEMORY
  %loadMem_40b798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7612 = getelementptr inbounds %struct.GPR, %struct.GPR* %7611, i32 0, i32 33
  %7613 = getelementptr inbounds %struct.Reg, %struct.Reg* %7612, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %7613 to i64*
  %7614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7615 = getelementptr inbounds %struct.GPR, %struct.GPR* %7614, i32 0, i32 1
  %7616 = getelementptr inbounds %struct.Reg, %struct.Reg* %7615, i32 0, i32 0
  %RAX.i1252 = bitcast %union.anon* %7616 to i64*
  %7617 = load i64, i64* %RAX.i1252
  %7618 = load i64, i64* %PC.i1251
  %7619 = add i64 %7618, 3
  store i64 %7619, i64* %PC.i1251
  %7620 = trunc i64 %7617 to i32
  %7621 = sub i32 %7620, 1
  %7622 = zext i32 %7621 to i64
  store i64 %7622, i64* %RAX.i1252, align 8
  %7623 = icmp ult i32 %7620, 1
  %7624 = zext i1 %7623 to i8
  %7625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7624, i8* %7625, align 1
  %7626 = and i32 %7621, 255
  %7627 = call i32 @llvm.ctpop.i32(i32 %7626)
  %7628 = trunc i32 %7627 to i8
  %7629 = and i8 %7628, 1
  %7630 = xor i8 %7629, 1
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7630, i8* %7631, align 1
  %7632 = xor i64 1, %7617
  %7633 = trunc i64 %7632 to i32
  %7634 = xor i32 %7633, %7621
  %7635 = lshr i32 %7634, 4
  %7636 = trunc i32 %7635 to i8
  %7637 = and i8 %7636, 1
  %7638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7637, i8* %7638, align 1
  %7639 = icmp eq i32 %7621, 0
  %7640 = zext i1 %7639 to i8
  %7641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7640, i8* %7641, align 1
  %7642 = lshr i32 %7621, 31
  %7643 = trunc i32 %7642 to i8
  %7644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7643, i8* %7644, align 1
  %7645 = lshr i32 %7620, 31
  %7646 = xor i32 %7642, %7645
  %7647 = add i32 %7646, %7645
  %7648 = icmp eq i32 %7647, 2
  %7649 = zext i1 %7648 to i8
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7649, i8* %7650, align 1
  store %struct.Memory* %loadMem_40b798, %struct.Memory** %MEMORY
  %loadMem_40b79b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7652 = getelementptr inbounds %struct.GPR, %struct.GPR* %7651, i32 0, i32 33
  %7653 = getelementptr inbounds %struct.Reg, %struct.Reg* %7652, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %7653 to i64*
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7655 = getelementptr inbounds %struct.GPR, %struct.GPR* %7654, i32 0, i32 1
  %7656 = getelementptr inbounds %struct.Reg, %struct.Reg* %7655, i32 0, i32 0
  %RAX.i1250 = bitcast %union.anon* %7656 to i64*
  %7657 = load i64, i64* %RAX.i1250
  %7658 = load i64, i64* %PC.i1249
  %7659 = add i64 %7658, 3
  store i64 %7659, i64* %PC.i1249
  %7660 = trunc i64 %7657 to i32
  %7661 = sub i32 %7660, 20
  %7662 = zext i32 %7661 to i64
  store i64 %7662, i64* %RAX.i1250, align 8
  %7663 = icmp ult i32 %7660, 20
  %7664 = zext i1 %7663 to i8
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7664, i8* %7665, align 1
  %7666 = and i32 %7661, 255
  %7667 = call i32 @llvm.ctpop.i32(i32 %7666)
  %7668 = trunc i32 %7667 to i8
  %7669 = and i8 %7668, 1
  %7670 = xor i8 %7669, 1
  %7671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7670, i8* %7671, align 1
  %7672 = xor i64 20, %7657
  %7673 = trunc i64 %7672 to i32
  %7674 = xor i32 %7673, %7661
  %7675 = lshr i32 %7674, 4
  %7676 = trunc i32 %7675 to i8
  %7677 = and i8 %7676, 1
  %7678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7677, i8* %7678, align 1
  %7679 = icmp eq i32 %7661, 0
  %7680 = zext i1 %7679 to i8
  %7681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7680, i8* %7681, align 1
  %7682 = lshr i32 %7661, 31
  %7683 = trunc i32 %7682 to i8
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7683, i8* %7684, align 1
  %7685 = lshr i32 %7660, 31
  %7686 = xor i32 %7682, %7685
  %7687 = add i32 %7686, %7685
  %7688 = icmp eq i32 %7687, 2
  %7689 = zext i1 %7688 to i8
  %7690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7689, i8* %7690, align 1
  store %struct.Memory* %loadMem_40b79b, %struct.Memory** %MEMORY
  %loadMem_40b79e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7692 = getelementptr inbounds %struct.GPR, %struct.GPR* %7691, i32 0, i32 33
  %7693 = getelementptr inbounds %struct.Reg, %struct.Reg* %7692, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %7693 to i64*
  %7694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7695 = getelementptr inbounds %struct.GPR, %struct.GPR* %7694, i32 0, i32 1
  %7696 = getelementptr inbounds %struct.Reg, %struct.Reg* %7695, i32 0, i32 0
  %EAX.i1247 = bitcast %union.anon* %7696 to i32*
  %7697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7698 = getelementptr inbounds %struct.GPR, %struct.GPR* %7697, i32 0, i32 5
  %7699 = getelementptr inbounds %struct.Reg, %struct.Reg* %7698, i32 0, i32 0
  %RCX.i1248 = bitcast %union.anon* %7699 to i64*
  %7700 = load i32, i32* %EAX.i1247
  %7701 = zext i32 %7700 to i64
  %7702 = load i64, i64* %PC.i1246
  %7703 = add i64 %7702, 3
  store i64 %7703, i64* %PC.i1246
  %7704 = shl i64 %7701, 32
  %7705 = ashr exact i64 %7704, 32
  store i64 %7705, i64* %RCX.i1248, align 8
  store %struct.Memory* %loadMem_40b79e, %struct.Memory** %MEMORY
  %loadMem_40b7a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7707 = getelementptr inbounds %struct.GPR, %struct.GPR* %7706, i32 0, i32 33
  %7708 = getelementptr inbounds %struct.Reg, %struct.Reg* %7707, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %7708 to i64*
  %7709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7710 = getelementptr inbounds %struct.GPR, %struct.GPR* %7709, i32 0, i32 1
  %7711 = getelementptr inbounds %struct.Reg, %struct.Reg* %7710, i32 0, i32 0
  %RAX.i1244 = bitcast %union.anon* %7711 to i64*
  %7712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7713 = getelementptr inbounds %struct.GPR, %struct.GPR* %7712, i32 0, i32 5
  %7714 = getelementptr inbounds %struct.Reg, %struct.Reg* %7713, i32 0, i32 0
  %RCX.i1245 = bitcast %union.anon* %7714 to i64*
  %7715 = load i64, i64* %RCX.i1245
  %7716 = add i64 %7715, 12099168
  %7717 = load i64, i64* %PC.i1243
  %7718 = add i64 %7717, 8
  store i64 %7718, i64* %PC.i1243
  %7719 = inttoptr i64 %7716 to i8*
  %7720 = load i8, i8* %7719
  %7721 = zext i8 %7720 to i64
  store i64 %7721, i64* %RAX.i1244, align 8
  store %struct.Memory* %loadMem_40b7a1, %struct.Memory** %MEMORY
  %loadMem_40b7a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7723 = getelementptr inbounds %struct.GPR, %struct.GPR* %7722, i32 0, i32 33
  %7724 = getelementptr inbounds %struct.Reg, %struct.Reg* %7723, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %7724 to i64*
  %7725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7726 = getelementptr inbounds %struct.GPR, %struct.GPR* %7725, i32 0, i32 1
  %7727 = getelementptr inbounds %struct.Reg, %struct.Reg* %7726, i32 0, i32 0
  %EAX.i1241 = bitcast %union.anon* %7727 to i32*
  %7728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7729 = getelementptr inbounds %struct.GPR, %struct.GPR* %7728, i32 0, i32 15
  %7730 = getelementptr inbounds %struct.Reg, %struct.Reg* %7729, i32 0, i32 0
  %RBP.i1242 = bitcast %union.anon* %7730 to i64*
  %7731 = load i32, i32* %EAX.i1241
  %7732 = zext i32 %7731 to i64
  %7733 = load i64, i64* %RBP.i1242
  %7734 = sub i64 %7733, 20
  %7735 = load i64, i64* %PC.i1240
  %7736 = add i64 %7735, 3
  store i64 %7736, i64* %PC.i1240
  %7737 = inttoptr i64 %7734 to i32*
  %7738 = load i32, i32* %7737
  %7739 = sub i32 %7731, %7738
  %7740 = icmp ult i32 %7731, %7738
  %7741 = zext i1 %7740 to i8
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7741, i8* %7742, align 1
  %7743 = and i32 %7739, 255
  %7744 = call i32 @llvm.ctpop.i32(i32 %7743)
  %7745 = trunc i32 %7744 to i8
  %7746 = and i8 %7745, 1
  %7747 = xor i8 %7746, 1
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7747, i8* %7748, align 1
  %7749 = xor i32 %7738, %7731
  %7750 = xor i32 %7749, %7739
  %7751 = lshr i32 %7750, 4
  %7752 = trunc i32 %7751 to i8
  %7753 = and i8 %7752, 1
  %7754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7753, i8* %7754, align 1
  %7755 = icmp eq i32 %7739, 0
  %7756 = zext i1 %7755 to i8
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7756, i8* %7757, align 1
  %7758 = lshr i32 %7739, 31
  %7759 = trunc i32 %7758 to i8
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7759, i8* %7760, align 1
  %7761 = lshr i32 %7731, 31
  %7762 = lshr i32 %7738, 31
  %7763 = xor i32 %7762, %7761
  %7764 = xor i32 %7758, %7761
  %7765 = add i32 %7764, %7763
  %7766 = icmp eq i32 %7765, 2
  %7767 = zext i1 %7766 to i8
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7767, i8* %7768, align 1
  store %struct.Memory* %loadMem_40b7a9, %struct.Memory** %MEMORY
  %loadMem_40b7ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7770 = getelementptr inbounds %struct.GPR, %struct.GPR* %7769, i32 0, i32 33
  %7771 = getelementptr inbounds %struct.Reg, %struct.Reg* %7770, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %7771 to i64*
  %7772 = load i64, i64* %PC.i1239
  %7773 = add i64 %7772, 34
  %7774 = load i64, i64* %PC.i1239
  %7775 = add i64 %7774, 6
  %7776 = load i64, i64* %PC.i1239
  %7777 = add i64 %7776, 6
  store i64 %7777, i64* %PC.i1239
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7779 = load i8, i8* %7778, align 1
  %7780 = icmp eq i8 %7779, 0
  %7781 = zext i1 %7780 to i8
  store i8 %7781, i8* %BRANCH_TAKEN, align 1
  %7782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7783 = select i1 %7780, i64 %7773, i64 %7775
  store i64 %7783, i64* %7782, align 8
  store %struct.Memory* %loadMem_40b7ac, %struct.Memory** %MEMORY
  %loadBr_40b7ac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b7ac = icmp eq i8 %loadBr_40b7ac, 1
  br i1 %cmpBr_40b7ac, label %block_.L_40b7ce, label %block_40b7b2

block_40b7b2:                                     ; preds = %block_.L_40b795
  %loadMem_40b7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7785 = getelementptr inbounds %struct.GPR, %struct.GPR* %7784, i32 0, i32 33
  %7786 = getelementptr inbounds %struct.Reg, %struct.Reg* %7785, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %7786 to i64*
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7788 = getelementptr inbounds %struct.GPR, %struct.GPR* %7787, i32 0, i32 1
  %7789 = getelementptr inbounds %struct.Reg, %struct.Reg* %7788, i32 0, i32 0
  %RAX.i1237 = bitcast %union.anon* %7789 to i64*
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7791 = getelementptr inbounds %struct.GPR, %struct.GPR* %7790, i32 0, i32 15
  %7792 = getelementptr inbounds %struct.Reg, %struct.Reg* %7791, i32 0, i32 0
  %RBP.i1238 = bitcast %union.anon* %7792 to i64*
  %7793 = load i64, i64* %RBP.i1238
  %7794 = sub i64 %7793, 4
  %7795 = load i64, i64* %PC.i1236
  %7796 = add i64 %7795, 3
  store i64 %7796, i64* %PC.i1236
  %7797 = inttoptr i64 %7794 to i32*
  %7798 = load i32, i32* %7797
  %7799 = zext i32 %7798 to i64
  store i64 %7799, i64* %RAX.i1237, align 8
  store %struct.Memory* %loadMem_40b7b2, %struct.Memory** %MEMORY
  %loadMem_40b7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7801 = getelementptr inbounds %struct.GPR, %struct.GPR* %7800, i32 0, i32 33
  %7802 = getelementptr inbounds %struct.Reg, %struct.Reg* %7801, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %7802 to i64*
  %7803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7804 = getelementptr inbounds %struct.GPR, %struct.GPR* %7803, i32 0, i32 1
  %7805 = getelementptr inbounds %struct.Reg, %struct.Reg* %7804, i32 0, i32 0
  %RAX.i1235 = bitcast %union.anon* %7805 to i64*
  %7806 = load i64, i64* %RAX.i1235
  %7807 = load i64, i64* %PC.i1234
  %7808 = add i64 %7807, 3
  store i64 %7808, i64* %PC.i1234
  %7809 = trunc i64 %7806 to i32
  %7810 = sub i32 %7809, 1
  %7811 = zext i32 %7810 to i64
  store i64 %7811, i64* %RAX.i1235, align 8
  %7812 = icmp ult i32 %7809, 1
  %7813 = zext i1 %7812 to i8
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7813, i8* %7814, align 1
  %7815 = and i32 %7810, 255
  %7816 = call i32 @llvm.ctpop.i32(i32 %7815)
  %7817 = trunc i32 %7816 to i8
  %7818 = and i8 %7817, 1
  %7819 = xor i8 %7818, 1
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7819, i8* %7820, align 1
  %7821 = xor i64 1, %7806
  %7822 = trunc i64 %7821 to i32
  %7823 = xor i32 %7822, %7810
  %7824 = lshr i32 %7823, 4
  %7825 = trunc i32 %7824 to i8
  %7826 = and i8 %7825, 1
  %7827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7826, i8* %7827, align 1
  %7828 = icmp eq i32 %7810, 0
  %7829 = zext i1 %7828 to i8
  %7830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7829, i8* %7830, align 1
  %7831 = lshr i32 %7810, 31
  %7832 = trunc i32 %7831 to i8
  %7833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7832, i8* %7833, align 1
  %7834 = lshr i32 %7809, 31
  %7835 = xor i32 %7831, %7834
  %7836 = add i32 %7835, %7834
  %7837 = icmp eq i32 %7836, 2
  %7838 = zext i1 %7837 to i8
  %7839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7838, i8* %7839, align 1
  store %struct.Memory* %loadMem_40b7b5, %struct.Memory** %MEMORY
  %loadMem_40b7b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7841 = getelementptr inbounds %struct.GPR, %struct.GPR* %7840, i32 0, i32 33
  %7842 = getelementptr inbounds %struct.Reg, %struct.Reg* %7841, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %7842 to i64*
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7844 = getelementptr inbounds %struct.GPR, %struct.GPR* %7843, i32 0, i32 1
  %7845 = getelementptr inbounds %struct.Reg, %struct.Reg* %7844, i32 0, i32 0
  %RAX.i1233 = bitcast %union.anon* %7845 to i64*
  %7846 = load i64, i64* %RAX.i1233
  %7847 = load i64, i64* %PC.i1232
  %7848 = add i64 %7847, 3
  store i64 %7848, i64* %PC.i1232
  %7849 = trunc i64 %7846 to i32
  %7850 = sub i32 %7849, 20
  %7851 = zext i32 %7850 to i64
  store i64 %7851, i64* %RAX.i1233, align 8
  %7852 = icmp ult i32 %7849, 20
  %7853 = zext i1 %7852 to i8
  %7854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7853, i8* %7854, align 1
  %7855 = and i32 %7850, 255
  %7856 = call i32 @llvm.ctpop.i32(i32 %7855)
  %7857 = trunc i32 %7856 to i8
  %7858 = and i8 %7857, 1
  %7859 = xor i8 %7858, 1
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7859, i8* %7860, align 1
  %7861 = xor i64 20, %7846
  %7862 = trunc i64 %7861 to i32
  %7863 = xor i32 %7862, %7850
  %7864 = lshr i32 %7863, 4
  %7865 = trunc i32 %7864 to i8
  %7866 = and i8 %7865, 1
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7866, i8* %7867, align 1
  %7868 = icmp eq i32 %7850, 0
  %7869 = zext i1 %7868 to i8
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7869, i8* %7870, align 1
  %7871 = lshr i32 %7850, 31
  %7872 = trunc i32 %7871 to i8
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7872, i8* %7873, align 1
  %7874 = lshr i32 %7849, 31
  %7875 = xor i32 %7871, %7874
  %7876 = add i32 %7875, %7874
  %7877 = icmp eq i32 %7876, 2
  %7878 = zext i1 %7877 to i8
  %7879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7878, i8* %7879, align 1
  store %struct.Memory* %loadMem_40b7b8, %struct.Memory** %MEMORY
  %loadMem_40b7bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7881 = getelementptr inbounds %struct.GPR, %struct.GPR* %7880, i32 0, i32 33
  %7882 = getelementptr inbounds %struct.Reg, %struct.Reg* %7881, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %7882 to i64*
  %7883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7884 = getelementptr inbounds %struct.GPR, %struct.GPR* %7883, i32 0, i32 1
  %7885 = getelementptr inbounds %struct.Reg, %struct.Reg* %7884, i32 0, i32 0
  %EAX.i1230 = bitcast %union.anon* %7885 to i32*
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7887 = getelementptr inbounds %struct.GPR, %struct.GPR* %7886, i32 0, i32 5
  %7888 = getelementptr inbounds %struct.Reg, %struct.Reg* %7887, i32 0, i32 0
  %RCX.i1231 = bitcast %union.anon* %7888 to i64*
  %7889 = load i32, i32* %EAX.i1230
  %7890 = zext i32 %7889 to i64
  %7891 = load i64, i64* %PC.i1229
  %7892 = add i64 %7891, 3
  store i64 %7892, i64* %PC.i1229
  %7893 = shl i64 %7890, 32
  %7894 = ashr exact i64 %7893, 32
  store i64 %7894, i64* %RCX.i1231, align 8
  store %struct.Memory* %loadMem_40b7bb, %struct.Memory** %MEMORY
  %loadMem_40b7be = load %struct.Memory*, %struct.Memory** %MEMORY
  %7895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7896 = getelementptr inbounds %struct.GPR, %struct.GPR* %7895, i32 0, i32 33
  %7897 = getelementptr inbounds %struct.Reg, %struct.Reg* %7896, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %7897 to i64*
  %7898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7899 = getelementptr inbounds %struct.GPR, %struct.GPR* %7898, i32 0, i32 1
  %7900 = getelementptr inbounds %struct.Reg, %struct.Reg* %7899, i32 0, i32 0
  %RAX.i1227 = bitcast %union.anon* %7900 to i64*
  %7901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7902 = getelementptr inbounds %struct.GPR, %struct.GPR* %7901, i32 0, i32 5
  %7903 = getelementptr inbounds %struct.Reg, %struct.Reg* %7902, i32 0, i32 0
  %RCX.i1228 = bitcast %union.anon* %7903 to i64*
  %7904 = load i64, i64* %RCX.i1228
  %7905 = mul i64 %7904, 4
  %7906 = add i64 %7905, 11187184
  %7907 = load i64, i64* %PC.i1226
  %7908 = add i64 %7907, 7
  store i64 %7908, i64* %PC.i1226
  %7909 = inttoptr i64 %7906 to i32*
  %7910 = load i32, i32* %7909
  %7911 = zext i32 %7910 to i64
  store i64 %7911, i64* %RAX.i1227, align 8
  store %struct.Memory* %loadMem_40b7be, %struct.Memory** %MEMORY
  %loadMem_40b7c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 33
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %7914 to i64*
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7916 = getelementptr inbounds %struct.GPR, %struct.GPR* %7915, i32 0, i32 1
  %7917 = getelementptr inbounds %struct.Reg, %struct.Reg* %7916, i32 0, i32 0
  %EAX.i1224 = bitcast %union.anon* %7917 to i32*
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 15
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %RBP.i1225 = bitcast %union.anon* %7920 to i64*
  %7921 = load i32, i32* %EAX.i1224
  %7922 = zext i32 %7921 to i64
  %7923 = load i64, i64* %RBP.i1225
  %7924 = sub i64 %7923, 8
  %7925 = load i64, i64* %PC.i1223
  %7926 = add i64 %7925, 3
  store i64 %7926, i64* %PC.i1223
  %7927 = inttoptr i64 %7924 to i32*
  %7928 = load i32, i32* %7927
  %7929 = sub i32 %7921, %7928
  %7930 = icmp ult i32 %7921, %7928
  %7931 = zext i1 %7930 to i8
  %7932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7931, i8* %7932, align 1
  %7933 = and i32 %7929, 255
  %7934 = call i32 @llvm.ctpop.i32(i32 %7933)
  %7935 = trunc i32 %7934 to i8
  %7936 = and i8 %7935, 1
  %7937 = xor i8 %7936, 1
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7937, i8* %7938, align 1
  %7939 = xor i32 %7928, %7921
  %7940 = xor i32 %7939, %7929
  %7941 = lshr i32 %7940, 4
  %7942 = trunc i32 %7941 to i8
  %7943 = and i8 %7942, 1
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7943, i8* %7944, align 1
  %7945 = icmp eq i32 %7929, 0
  %7946 = zext i1 %7945 to i8
  %7947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7946, i8* %7947, align 1
  %7948 = lshr i32 %7929, 31
  %7949 = trunc i32 %7948 to i8
  %7950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7949, i8* %7950, align 1
  %7951 = lshr i32 %7921, 31
  %7952 = lshr i32 %7928, 31
  %7953 = xor i32 %7952, %7951
  %7954 = xor i32 %7948, %7951
  %7955 = add i32 %7954, %7953
  %7956 = icmp eq i32 %7955, 2
  %7957 = zext i1 %7956 to i8
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7957, i8* %7958, align 1
  store %struct.Memory* %loadMem_40b7c5, %struct.Memory** %MEMORY
  %loadMem_40b7c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7960 = getelementptr inbounds %struct.GPR, %struct.GPR* %7959, i32 0, i32 33
  %7961 = getelementptr inbounds %struct.Reg, %struct.Reg* %7960, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %7961 to i64*
  %7962 = load i64, i64* %PC.i1222
  %7963 = add i64 %7962, 195
  %7964 = load i64, i64* %PC.i1222
  %7965 = add i64 %7964, 6
  %7966 = load i64, i64* %PC.i1222
  %7967 = add i64 %7966, 6
  store i64 %7967, i64* %PC.i1222
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7969 = load i8, i8* %7968, align 1
  store i8 %7969, i8* %BRANCH_TAKEN, align 1
  %7970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7971 = icmp ne i8 %7969, 0
  %7972 = select i1 %7971, i64 %7963, i64 %7965
  store i64 %7972, i64* %7970, align 8
  store %struct.Memory* %loadMem_40b7c8, %struct.Memory** %MEMORY
  %loadBr_40b7c8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b7c8 = icmp eq i8 %loadBr_40b7c8, 1
  br i1 %cmpBr_40b7c8, label %block_.L_40b88b, label %block_.L_40b7ce

block_.L_40b7ce:                                  ; preds = %block_40b7b2, %block_.L_40b795
  %loadMem_40b7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7974 = getelementptr inbounds %struct.GPR, %struct.GPR* %7973, i32 0, i32 33
  %7975 = getelementptr inbounds %struct.Reg, %struct.Reg* %7974, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %7975 to i64*
  %7976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7977 = getelementptr inbounds %struct.GPR, %struct.GPR* %7976, i32 0, i32 1
  %7978 = getelementptr inbounds %struct.Reg, %struct.Reg* %7977, i32 0, i32 0
  %RAX.i1220 = bitcast %union.anon* %7978 to i64*
  %7979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7980 = getelementptr inbounds %struct.GPR, %struct.GPR* %7979, i32 0, i32 15
  %7981 = getelementptr inbounds %struct.Reg, %struct.Reg* %7980, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %7981 to i64*
  %7982 = load i64, i64* %RBP.i1221
  %7983 = sub i64 %7982, 4
  %7984 = load i64, i64* %PC.i1219
  %7985 = add i64 %7984, 3
  store i64 %7985, i64* %PC.i1219
  %7986 = inttoptr i64 %7983 to i32*
  %7987 = load i32, i32* %7986
  %7988 = zext i32 %7987 to i64
  store i64 %7988, i64* %RAX.i1220, align 8
  store %struct.Memory* %loadMem_40b7ce, %struct.Memory** %MEMORY
  %loadMem_40b7d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7990 = getelementptr inbounds %struct.GPR, %struct.GPR* %7989, i32 0, i32 33
  %7991 = getelementptr inbounds %struct.Reg, %struct.Reg* %7990, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %7991 to i64*
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7993 = getelementptr inbounds %struct.GPR, %struct.GPR* %7992, i32 0, i32 1
  %7994 = getelementptr inbounds %struct.Reg, %struct.Reg* %7993, i32 0, i32 0
  %RAX.i1218 = bitcast %union.anon* %7994 to i64*
  %7995 = load i64, i64* %RAX.i1218
  %7996 = load i64, i64* %PC.i1217
  %7997 = add i64 %7996, 3
  store i64 %7997, i64* %PC.i1217
  %7998 = trunc i64 %7995 to i32
  %7999 = sub i32 %7998, 1
  %8000 = zext i32 %7999 to i64
  store i64 %8000, i64* %RAX.i1218, align 8
  %8001 = icmp ult i32 %7998, 1
  %8002 = zext i1 %8001 to i8
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8002, i8* %8003, align 1
  %8004 = and i32 %7999, 255
  %8005 = call i32 @llvm.ctpop.i32(i32 %8004)
  %8006 = trunc i32 %8005 to i8
  %8007 = and i8 %8006, 1
  %8008 = xor i8 %8007, 1
  %8009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8008, i8* %8009, align 1
  %8010 = xor i64 1, %7995
  %8011 = trunc i64 %8010 to i32
  %8012 = xor i32 %8011, %7999
  %8013 = lshr i32 %8012, 4
  %8014 = trunc i32 %8013 to i8
  %8015 = and i8 %8014, 1
  %8016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8015, i8* %8016, align 1
  %8017 = icmp eq i32 %7999, 0
  %8018 = zext i1 %8017 to i8
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8018, i8* %8019, align 1
  %8020 = lshr i32 %7999, 31
  %8021 = trunc i32 %8020 to i8
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8021, i8* %8022, align 1
  %8023 = lshr i32 %7998, 31
  %8024 = xor i32 %8020, %8023
  %8025 = add i32 %8024, %8023
  %8026 = icmp eq i32 %8025, 2
  %8027 = zext i1 %8026 to i8
  %8028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8027, i8* %8028, align 1
  store %struct.Memory* %loadMem_40b7d1, %struct.Memory** %MEMORY
  %loadMem_40b7d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8030 = getelementptr inbounds %struct.GPR, %struct.GPR* %8029, i32 0, i32 33
  %8031 = getelementptr inbounds %struct.Reg, %struct.Reg* %8030, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %8031 to i64*
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8033 = getelementptr inbounds %struct.GPR, %struct.GPR* %8032, i32 0, i32 1
  %8034 = getelementptr inbounds %struct.Reg, %struct.Reg* %8033, i32 0, i32 0
  %RAX.i1216 = bitcast %union.anon* %8034 to i64*
  %8035 = load i64, i64* %RAX.i1216
  %8036 = load i64, i64* %PC.i1215
  %8037 = add i64 %8036, 3
  store i64 %8037, i64* %PC.i1215
  %8038 = trunc i64 %8035 to i32
  %8039 = add i32 20, %8038
  %8040 = zext i32 %8039 to i64
  store i64 %8040, i64* %RAX.i1216, align 8
  %8041 = icmp ult i32 %8039, %8038
  %8042 = icmp ult i32 %8039, 20
  %8043 = or i1 %8041, %8042
  %8044 = zext i1 %8043 to i8
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8044, i8* %8045, align 1
  %8046 = and i32 %8039, 255
  %8047 = call i32 @llvm.ctpop.i32(i32 %8046)
  %8048 = trunc i32 %8047 to i8
  %8049 = and i8 %8048, 1
  %8050 = xor i8 %8049, 1
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8050, i8* %8051, align 1
  %8052 = xor i64 20, %8035
  %8053 = trunc i64 %8052 to i32
  %8054 = xor i32 %8053, %8039
  %8055 = lshr i32 %8054, 4
  %8056 = trunc i32 %8055 to i8
  %8057 = and i8 %8056, 1
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8057, i8* %8058, align 1
  %8059 = icmp eq i32 %8039, 0
  %8060 = zext i1 %8059 to i8
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8060, i8* %8061, align 1
  %8062 = lshr i32 %8039, 31
  %8063 = trunc i32 %8062 to i8
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8063, i8* %8064, align 1
  %8065 = lshr i32 %8038, 31
  %8066 = xor i32 %8062, %8065
  %8067 = add i32 %8066, %8062
  %8068 = icmp eq i32 %8067, 2
  %8069 = zext i1 %8068 to i8
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8069, i8* %8070, align 1
  store %struct.Memory* %loadMem_40b7d4, %struct.Memory** %MEMORY
  %loadMem_40b7d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8072 = getelementptr inbounds %struct.GPR, %struct.GPR* %8071, i32 0, i32 33
  %8073 = getelementptr inbounds %struct.Reg, %struct.Reg* %8072, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %8073 to i64*
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8075 = getelementptr inbounds %struct.GPR, %struct.GPR* %8074, i32 0, i32 1
  %8076 = getelementptr inbounds %struct.Reg, %struct.Reg* %8075, i32 0, i32 0
  %EAX.i1213 = bitcast %union.anon* %8076 to i32*
  %8077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8078 = getelementptr inbounds %struct.GPR, %struct.GPR* %8077, i32 0, i32 5
  %8079 = getelementptr inbounds %struct.Reg, %struct.Reg* %8078, i32 0, i32 0
  %RCX.i1214 = bitcast %union.anon* %8079 to i64*
  %8080 = load i32, i32* %EAX.i1213
  %8081 = zext i32 %8080 to i64
  %8082 = load i64, i64* %PC.i1212
  %8083 = add i64 %8082, 3
  store i64 %8083, i64* %PC.i1212
  %8084 = shl i64 %8081, 32
  %8085 = ashr exact i64 %8084, 32
  store i64 %8085, i64* %RCX.i1214, align 8
  store %struct.Memory* %loadMem_40b7d7, %struct.Memory** %MEMORY
  %loadMem_40b7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %8086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8087 = getelementptr inbounds %struct.GPR, %struct.GPR* %8086, i32 0, i32 33
  %8088 = getelementptr inbounds %struct.Reg, %struct.Reg* %8087, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %8088 to i64*
  %8089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8090 = getelementptr inbounds %struct.GPR, %struct.GPR* %8089, i32 0, i32 1
  %8091 = getelementptr inbounds %struct.Reg, %struct.Reg* %8090, i32 0, i32 0
  %RAX.i1210 = bitcast %union.anon* %8091 to i64*
  %8092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8093 = getelementptr inbounds %struct.GPR, %struct.GPR* %8092, i32 0, i32 5
  %8094 = getelementptr inbounds %struct.Reg, %struct.Reg* %8093, i32 0, i32 0
  %RCX.i1211 = bitcast %union.anon* %8094 to i64*
  %8095 = load i64, i64* %RCX.i1211
  %8096 = add i64 %8095, 12099168
  %8097 = load i64, i64* %PC.i1209
  %8098 = add i64 %8097, 8
  store i64 %8098, i64* %PC.i1209
  %8099 = inttoptr i64 %8096 to i8*
  %8100 = load i8, i8* %8099
  %8101 = zext i8 %8100 to i64
  store i64 %8101, i64* %RAX.i1210, align 8
  store %struct.Memory* %loadMem_40b7da, %struct.Memory** %MEMORY
  %loadMem_40b7e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8103 = getelementptr inbounds %struct.GPR, %struct.GPR* %8102, i32 0, i32 33
  %8104 = getelementptr inbounds %struct.Reg, %struct.Reg* %8103, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %8104 to i64*
  %8105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8106 = getelementptr inbounds %struct.GPR, %struct.GPR* %8105, i32 0, i32 1
  %8107 = getelementptr inbounds %struct.Reg, %struct.Reg* %8106, i32 0, i32 0
  %EAX.i1207 = bitcast %union.anon* %8107 to i32*
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8109 = getelementptr inbounds %struct.GPR, %struct.GPR* %8108, i32 0, i32 15
  %8110 = getelementptr inbounds %struct.Reg, %struct.Reg* %8109, i32 0, i32 0
  %RBP.i1208 = bitcast %union.anon* %8110 to i64*
  %8111 = load i32, i32* %EAX.i1207
  %8112 = zext i32 %8111 to i64
  %8113 = load i64, i64* %RBP.i1208
  %8114 = sub i64 %8113, 20
  %8115 = load i64, i64* %PC.i1206
  %8116 = add i64 %8115, 3
  store i64 %8116, i64* %PC.i1206
  %8117 = inttoptr i64 %8114 to i32*
  %8118 = load i32, i32* %8117
  %8119 = sub i32 %8111, %8118
  %8120 = icmp ult i32 %8111, %8118
  %8121 = zext i1 %8120 to i8
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8121, i8* %8122, align 1
  %8123 = and i32 %8119, 255
  %8124 = call i32 @llvm.ctpop.i32(i32 %8123)
  %8125 = trunc i32 %8124 to i8
  %8126 = and i8 %8125, 1
  %8127 = xor i8 %8126, 1
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8127, i8* %8128, align 1
  %8129 = xor i32 %8118, %8111
  %8130 = xor i32 %8129, %8119
  %8131 = lshr i32 %8130, 4
  %8132 = trunc i32 %8131 to i8
  %8133 = and i8 %8132, 1
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8133, i8* %8134, align 1
  %8135 = icmp eq i32 %8119, 0
  %8136 = zext i1 %8135 to i8
  %8137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8136, i8* %8137, align 1
  %8138 = lshr i32 %8119, 31
  %8139 = trunc i32 %8138 to i8
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8139, i8* %8140, align 1
  %8141 = lshr i32 %8111, 31
  %8142 = lshr i32 %8118, 31
  %8143 = xor i32 %8142, %8141
  %8144 = xor i32 %8138, %8141
  %8145 = add i32 %8144, %8143
  %8146 = icmp eq i32 %8145, 2
  %8147 = zext i1 %8146 to i8
  %8148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8147, i8* %8148, align 1
  store %struct.Memory* %loadMem_40b7e2, %struct.Memory** %MEMORY
  %loadMem_40b7e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8150 = getelementptr inbounds %struct.GPR, %struct.GPR* %8149, i32 0, i32 33
  %8151 = getelementptr inbounds %struct.Reg, %struct.Reg* %8150, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %8151 to i64*
  %8152 = load i64, i64* %PC.i1205
  %8153 = add i64 %8152, 34
  %8154 = load i64, i64* %PC.i1205
  %8155 = add i64 %8154, 6
  %8156 = load i64, i64* %PC.i1205
  %8157 = add i64 %8156, 6
  store i64 %8157, i64* %PC.i1205
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8159 = load i8, i8* %8158, align 1
  %8160 = icmp eq i8 %8159, 0
  %8161 = zext i1 %8160 to i8
  store i8 %8161, i8* %BRANCH_TAKEN, align 1
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8163 = select i1 %8160, i64 %8153, i64 %8155
  store i64 %8163, i64* %8162, align 8
  store %struct.Memory* %loadMem_40b7e5, %struct.Memory** %MEMORY
  %loadBr_40b7e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b7e5 = icmp eq i8 %loadBr_40b7e5, 1
  br i1 %cmpBr_40b7e5, label %block_.L_40b807, label %block_40b7eb

block_40b7eb:                                     ; preds = %block_.L_40b7ce
  %loadMem_40b7eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8165 = getelementptr inbounds %struct.GPR, %struct.GPR* %8164, i32 0, i32 33
  %8166 = getelementptr inbounds %struct.Reg, %struct.Reg* %8165, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %8166 to i64*
  %8167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8168 = getelementptr inbounds %struct.GPR, %struct.GPR* %8167, i32 0, i32 1
  %8169 = getelementptr inbounds %struct.Reg, %struct.Reg* %8168, i32 0, i32 0
  %RAX.i1203 = bitcast %union.anon* %8169 to i64*
  %8170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8171 = getelementptr inbounds %struct.GPR, %struct.GPR* %8170, i32 0, i32 15
  %8172 = getelementptr inbounds %struct.Reg, %struct.Reg* %8171, i32 0, i32 0
  %RBP.i1204 = bitcast %union.anon* %8172 to i64*
  %8173 = load i64, i64* %RBP.i1204
  %8174 = sub i64 %8173, 4
  %8175 = load i64, i64* %PC.i1202
  %8176 = add i64 %8175, 3
  store i64 %8176, i64* %PC.i1202
  %8177 = inttoptr i64 %8174 to i32*
  %8178 = load i32, i32* %8177
  %8179 = zext i32 %8178 to i64
  store i64 %8179, i64* %RAX.i1203, align 8
  store %struct.Memory* %loadMem_40b7eb, %struct.Memory** %MEMORY
  %loadMem_40b7ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8181 = getelementptr inbounds %struct.GPR, %struct.GPR* %8180, i32 0, i32 33
  %8182 = getelementptr inbounds %struct.Reg, %struct.Reg* %8181, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %8182 to i64*
  %8183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8184 = getelementptr inbounds %struct.GPR, %struct.GPR* %8183, i32 0, i32 1
  %8185 = getelementptr inbounds %struct.Reg, %struct.Reg* %8184, i32 0, i32 0
  %RAX.i1201 = bitcast %union.anon* %8185 to i64*
  %8186 = load i64, i64* %RAX.i1201
  %8187 = load i64, i64* %PC.i1200
  %8188 = add i64 %8187, 3
  store i64 %8188, i64* %PC.i1200
  %8189 = trunc i64 %8186 to i32
  %8190 = sub i32 %8189, 1
  %8191 = zext i32 %8190 to i64
  store i64 %8191, i64* %RAX.i1201, align 8
  %8192 = icmp ult i32 %8189, 1
  %8193 = zext i1 %8192 to i8
  %8194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8193, i8* %8194, align 1
  %8195 = and i32 %8190, 255
  %8196 = call i32 @llvm.ctpop.i32(i32 %8195)
  %8197 = trunc i32 %8196 to i8
  %8198 = and i8 %8197, 1
  %8199 = xor i8 %8198, 1
  %8200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8199, i8* %8200, align 1
  %8201 = xor i64 1, %8186
  %8202 = trunc i64 %8201 to i32
  %8203 = xor i32 %8202, %8190
  %8204 = lshr i32 %8203, 4
  %8205 = trunc i32 %8204 to i8
  %8206 = and i8 %8205, 1
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8206, i8* %8207, align 1
  %8208 = icmp eq i32 %8190, 0
  %8209 = zext i1 %8208 to i8
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8209, i8* %8210, align 1
  %8211 = lshr i32 %8190, 31
  %8212 = trunc i32 %8211 to i8
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8212, i8* %8213, align 1
  %8214 = lshr i32 %8189, 31
  %8215 = xor i32 %8211, %8214
  %8216 = add i32 %8215, %8214
  %8217 = icmp eq i32 %8216, 2
  %8218 = zext i1 %8217 to i8
  %8219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8218, i8* %8219, align 1
  store %struct.Memory* %loadMem_40b7ee, %struct.Memory** %MEMORY
  %loadMem_40b7f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8221 = getelementptr inbounds %struct.GPR, %struct.GPR* %8220, i32 0, i32 33
  %8222 = getelementptr inbounds %struct.Reg, %struct.Reg* %8221, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %8222 to i64*
  %8223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8224 = getelementptr inbounds %struct.GPR, %struct.GPR* %8223, i32 0, i32 1
  %8225 = getelementptr inbounds %struct.Reg, %struct.Reg* %8224, i32 0, i32 0
  %RAX.i1199 = bitcast %union.anon* %8225 to i64*
  %8226 = load i64, i64* %RAX.i1199
  %8227 = load i64, i64* %PC.i1198
  %8228 = add i64 %8227, 3
  store i64 %8228, i64* %PC.i1198
  %8229 = trunc i64 %8226 to i32
  %8230 = add i32 20, %8229
  %8231 = zext i32 %8230 to i64
  store i64 %8231, i64* %RAX.i1199, align 8
  %8232 = icmp ult i32 %8230, %8229
  %8233 = icmp ult i32 %8230, 20
  %8234 = or i1 %8232, %8233
  %8235 = zext i1 %8234 to i8
  %8236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8235, i8* %8236, align 1
  %8237 = and i32 %8230, 255
  %8238 = call i32 @llvm.ctpop.i32(i32 %8237)
  %8239 = trunc i32 %8238 to i8
  %8240 = and i8 %8239, 1
  %8241 = xor i8 %8240, 1
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8241, i8* %8242, align 1
  %8243 = xor i64 20, %8226
  %8244 = trunc i64 %8243 to i32
  %8245 = xor i32 %8244, %8230
  %8246 = lshr i32 %8245, 4
  %8247 = trunc i32 %8246 to i8
  %8248 = and i8 %8247, 1
  %8249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8248, i8* %8249, align 1
  %8250 = icmp eq i32 %8230, 0
  %8251 = zext i1 %8250 to i8
  %8252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8251, i8* %8252, align 1
  %8253 = lshr i32 %8230, 31
  %8254 = trunc i32 %8253 to i8
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8254, i8* %8255, align 1
  %8256 = lshr i32 %8229, 31
  %8257 = xor i32 %8253, %8256
  %8258 = add i32 %8257, %8253
  %8259 = icmp eq i32 %8258, 2
  %8260 = zext i1 %8259 to i8
  %8261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8260, i8* %8261, align 1
  store %struct.Memory* %loadMem_40b7f1, %struct.Memory** %MEMORY
  %loadMem_40b7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8263 = getelementptr inbounds %struct.GPR, %struct.GPR* %8262, i32 0, i32 33
  %8264 = getelementptr inbounds %struct.Reg, %struct.Reg* %8263, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %8264 to i64*
  %8265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8266 = getelementptr inbounds %struct.GPR, %struct.GPR* %8265, i32 0, i32 1
  %8267 = getelementptr inbounds %struct.Reg, %struct.Reg* %8266, i32 0, i32 0
  %EAX.i1196 = bitcast %union.anon* %8267 to i32*
  %8268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8269 = getelementptr inbounds %struct.GPR, %struct.GPR* %8268, i32 0, i32 5
  %8270 = getelementptr inbounds %struct.Reg, %struct.Reg* %8269, i32 0, i32 0
  %RCX.i1197 = bitcast %union.anon* %8270 to i64*
  %8271 = load i32, i32* %EAX.i1196
  %8272 = zext i32 %8271 to i64
  %8273 = load i64, i64* %PC.i1195
  %8274 = add i64 %8273, 3
  store i64 %8274, i64* %PC.i1195
  %8275 = shl i64 %8272, 32
  %8276 = ashr exact i64 %8275, 32
  store i64 %8276, i64* %RCX.i1197, align 8
  store %struct.Memory* %loadMem_40b7f4, %struct.Memory** %MEMORY
  %loadMem_40b7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8278 = getelementptr inbounds %struct.GPR, %struct.GPR* %8277, i32 0, i32 33
  %8279 = getelementptr inbounds %struct.Reg, %struct.Reg* %8278, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %8279 to i64*
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8281 = getelementptr inbounds %struct.GPR, %struct.GPR* %8280, i32 0, i32 1
  %8282 = getelementptr inbounds %struct.Reg, %struct.Reg* %8281, i32 0, i32 0
  %RAX.i1193 = bitcast %union.anon* %8282 to i64*
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8284 = getelementptr inbounds %struct.GPR, %struct.GPR* %8283, i32 0, i32 5
  %8285 = getelementptr inbounds %struct.Reg, %struct.Reg* %8284, i32 0, i32 0
  %RCX.i1194 = bitcast %union.anon* %8285 to i64*
  %8286 = load i64, i64* %RCX.i1194
  %8287 = mul i64 %8286, 4
  %8288 = add i64 %8287, 11187184
  %8289 = load i64, i64* %PC.i1192
  %8290 = add i64 %8289, 7
  store i64 %8290, i64* %PC.i1192
  %8291 = inttoptr i64 %8288 to i32*
  %8292 = load i32, i32* %8291
  %8293 = zext i32 %8292 to i64
  store i64 %8293, i64* %RAX.i1193, align 8
  store %struct.Memory* %loadMem_40b7f7, %struct.Memory** %MEMORY
  %loadMem_40b7fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %8294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8295 = getelementptr inbounds %struct.GPR, %struct.GPR* %8294, i32 0, i32 33
  %8296 = getelementptr inbounds %struct.Reg, %struct.Reg* %8295, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %8296 to i64*
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8298 = getelementptr inbounds %struct.GPR, %struct.GPR* %8297, i32 0, i32 1
  %8299 = getelementptr inbounds %struct.Reg, %struct.Reg* %8298, i32 0, i32 0
  %EAX.i1190 = bitcast %union.anon* %8299 to i32*
  %8300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8301 = getelementptr inbounds %struct.GPR, %struct.GPR* %8300, i32 0, i32 15
  %8302 = getelementptr inbounds %struct.Reg, %struct.Reg* %8301, i32 0, i32 0
  %RBP.i1191 = bitcast %union.anon* %8302 to i64*
  %8303 = load i32, i32* %EAX.i1190
  %8304 = zext i32 %8303 to i64
  %8305 = load i64, i64* %RBP.i1191
  %8306 = sub i64 %8305, 8
  %8307 = load i64, i64* %PC.i1189
  %8308 = add i64 %8307, 3
  store i64 %8308, i64* %PC.i1189
  %8309 = inttoptr i64 %8306 to i32*
  %8310 = load i32, i32* %8309
  %8311 = sub i32 %8303, %8310
  %8312 = icmp ult i32 %8303, %8310
  %8313 = zext i1 %8312 to i8
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8313, i8* %8314, align 1
  %8315 = and i32 %8311, 255
  %8316 = call i32 @llvm.ctpop.i32(i32 %8315)
  %8317 = trunc i32 %8316 to i8
  %8318 = and i8 %8317, 1
  %8319 = xor i8 %8318, 1
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8319, i8* %8320, align 1
  %8321 = xor i32 %8310, %8303
  %8322 = xor i32 %8321, %8311
  %8323 = lshr i32 %8322, 4
  %8324 = trunc i32 %8323 to i8
  %8325 = and i8 %8324, 1
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8325, i8* %8326, align 1
  %8327 = icmp eq i32 %8311, 0
  %8328 = zext i1 %8327 to i8
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8328, i8* %8329, align 1
  %8330 = lshr i32 %8311, 31
  %8331 = trunc i32 %8330 to i8
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8331, i8* %8332, align 1
  %8333 = lshr i32 %8303, 31
  %8334 = lshr i32 %8310, 31
  %8335 = xor i32 %8334, %8333
  %8336 = xor i32 %8330, %8333
  %8337 = add i32 %8336, %8335
  %8338 = icmp eq i32 %8337, 2
  %8339 = zext i1 %8338 to i8
  %8340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8339, i8* %8340, align 1
  store %struct.Memory* %loadMem_40b7fe, %struct.Memory** %MEMORY
  %loadMem_40b801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8342 = getelementptr inbounds %struct.GPR, %struct.GPR* %8341, i32 0, i32 33
  %8343 = getelementptr inbounds %struct.Reg, %struct.Reg* %8342, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %8343 to i64*
  %8344 = load i64, i64* %PC.i1188
  %8345 = add i64 %8344, 138
  %8346 = load i64, i64* %PC.i1188
  %8347 = add i64 %8346, 6
  %8348 = load i64, i64* %PC.i1188
  %8349 = add i64 %8348, 6
  store i64 %8349, i64* %PC.i1188
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8351 = load i8, i8* %8350, align 1
  store i8 %8351, i8* %BRANCH_TAKEN, align 1
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8353 = icmp ne i8 %8351, 0
  %8354 = select i1 %8353, i64 %8345, i64 %8347
  store i64 %8354, i64* %8352, align 8
  store %struct.Memory* %loadMem_40b801, %struct.Memory** %MEMORY
  %loadBr_40b801 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b801 = icmp eq i8 %loadBr_40b801, 1
  br i1 %cmpBr_40b801, label %block_.L_40b88b, label %block_.L_40b807

block_.L_40b807:                                  ; preds = %block_40b7eb, %block_.L_40b7ce
  %loadMem_40b807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8356 = getelementptr inbounds %struct.GPR, %struct.GPR* %8355, i32 0, i32 33
  %8357 = getelementptr inbounds %struct.Reg, %struct.Reg* %8356, i32 0, i32 0
  %PC.i1187 = bitcast %union.anon* %8357 to i64*
  %8358 = load i64, i64* %PC.i1187
  %8359 = add i64 %8358, 5
  %8360 = load i64, i64* %PC.i1187
  %8361 = add i64 %8360, 5
  store i64 %8361, i64* %PC.i1187
  %8362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8359, i64* %8362, align 8
  store %struct.Memory* %loadMem_40b807, %struct.Memory** %MEMORY
  br label %block_.L_40b80c

block_.L_40b80c:                                  ; preds = %block_.L_40b807
  %loadMem_40b80c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8364 = getelementptr inbounds %struct.GPR, %struct.GPR* %8363, i32 0, i32 33
  %8365 = getelementptr inbounds %struct.Reg, %struct.Reg* %8364, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %8365 to i64*
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8367 = getelementptr inbounds %struct.GPR, %struct.GPR* %8366, i32 0, i32 1
  %8368 = getelementptr inbounds %struct.Reg, %struct.Reg* %8367, i32 0, i32 0
  %RAX.i1186 = bitcast %union.anon* %8368 to i64*
  %8369 = load i64, i64* %PC.i1185
  %8370 = add i64 %8369, 10
  store i64 %8370, i64* %PC.i1185
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1186, align 8
  store %struct.Memory* %loadMem_40b80c, %struct.Memory** %MEMORY
  %loadMem_40b816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8372 = getelementptr inbounds %struct.GPR, %struct.GPR* %8371, i32 0, i32 33
  %8373 = getelementptr inbounds %struct.Reg, %struct.Reg* %8372, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %8373 to i64*
  %8374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8375 = getelementptr inbounds %struct.GPR, %struct.GPR* %8374, i32 0, i32 5
  %8376 = getelementptr inbounds %struct.Reg, %struct.Reg* %8375, i32 0, i32 0
  %RCX.i1183 = bitcast %union.anon* %8376 to i64*
  %8377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8378 = getelementptr inbounds %struct.GPR, %struct.GPR* %8377, i32 0, i32 15
  %8379 = getelementptr inbounds %struct.Reg, %struct.Reg* %8378, i32 0, i32 0
  %RBP.i1184 = bitcast %union.anon* %8379 to i64*
  %8380 = load i64, i64* %RBP.i1184
  %8381 = sub i64 %8380, 8
  %8382 = load i64, i64* %PC.i1182
  %8383 = add i64 %8382, 4
  store i64 %8383, i64* %PC.i1182
  %8384 = inttoptr i64 %8381 to i32*
  %8385 = load i32, i32* %8384
  %8386 = sext i32 %8385 to i64
  store i64 %8386, i64* %RCX.i1183, align 8
  store %struct.Memory* %loadMem_40b816, %struct.Memory** %MEMORY
  %loadMem_40b81a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8388 = getelementptr inbounds %struct.GPR, %struct.GPR* %8387, i32 0, i32 33
  %8389 = getelementptr inbounds %struct.Reg, %struct.Reg* %8388, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %8389 to i64*
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8391 = getelementptr inbounds %struct.GPR, %struct.GPR* %8390, i32 0, i32 5
  %8392 = getelementptr inbounds %struct.Reg, %struct.Reg* %8391, i32 0, i32 0
  %RCX.i1181 = bitcast %union.anon* %8392 to i64*
  %8393 = load i64, i64* %RCX.i1181
  %8394 = load i64, i64* %PC.i1180
  %8395 = add i64 %8394, 7
  store i64 %8395, i64* %PC.i1180
  %8396 = sext i64 %8393 to i128
  %8397 = and i128 %8396, -18446744073709551616
  %8398 = zext i64 %8393 to i128
  %8399 = or i128 %8397, %8398
  %8400 = mul i128 744, %8399
  %8401 = trunc i128 %8400 to i64
  store i64 %8401, i64* %RCX.i1181, align 8
  %8402 = sext i64 %8401 to i128
  %8403 = icmp ne i128 %8402, %8400
  %8404 = zext i1 %8403 to i8
  %8405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8404, i8* %8405, align 1
  %8406 = trunc i128 %8400 to i32
  %8407 = and i32 %8406, 255
  %8408 = call i32 @llvm.ctpop.i32(i32 %8407)
  %8409 = trunc i32 %8408 to i8
  %8410 = and i8 %8409, 1
  %8411 = xor i8 %8410, 1
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8411, i8* %8412, align 1
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8413, align 1
  %8414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8414, align 1
  %8415 = lshr i64 %8401, 63
  %8416 = trunc i64 %8415 to i8
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8416, i8* %8417, align 1
  %8418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8404, i8* %8418, align 1
  store %struct.Memory* %loadMem_40b81a, %struct.Memory** %MEMORY
  %loadMem_40b821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8420 = getelementptr inbounds %struct.GPR, %struct.GPR* %8419, i32 0, i32 33
  %8421 = getelementptr inbounds %struct.Reg, %struct.Reg* %8420, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %8421 to i64*
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 1
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %RAX.i1178 = bitcast %union.anon* %8424 to i64*
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8426 = getelementptr inbounds %struct.GPR, %struct.GPR* %8425, i32 0, i32 5
  %8427 = getelementptr inbounds %struct.Reg, %struct.Reg* %8426, i32 0, i32 0
  %RCX.i1179 = bitcast %union.anon* %8427 to i64*
  %8428 = load i64, i64* %RAX.i1178
  %8429 = load i64, i64* %RCX.i1179
  %8430 = load i64, i64* %PC.i1177
  %8431 = add i64 %8430, 3
  store i64 %8431, i64* %PC.i1177
  %8432 = add i64 %8429, %8428
  store i64 %8432, i64* %RAX.i1178, align 8
  %8433 = icmp ult i64 %8432, %8428
  %8434 = icmp ult i64 %8432, %8429
  %8435 = or i1 %8433, %8434
  %8436 = zext i1 %8435 to i8
  %8437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8436, i8* %8437, align 1
  %8438 = trunc i64 %8432 to i32
  %8439 = and i32 %8438, 255
  %8440 = call i32 @llvm.ctpop.i32(i32 %8439)
  %8441 = trunc i32 %8440 to i8
  %8442 = and i8 %8441, 1
  %8443 = xor i8 %8442, 1
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8443, i8* %8444, align 1
  %8445 = xor i64 %8429, %8428
  %8446 = xor i64 %8445, %8432
  %8447 = lshr i64 %8446, 4
  %8448 = trunc i64 %8447 to i8
  %8449 = and i8 %8448, 1
  %8450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8449, i8* %8450, align 1
  %8451 = icmp eq i64 %8432, 0
  %8452 = zext i1 %8451 to i8
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8452, i8* %8453, align 1
  %8454 = lshr i64 %8432, 63
  %8455 = trunc i64 %8454 to i8
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8455, i8* %8456, align 1
  %8457 = lshr i64 %8428, 63
  %8458 = lshr i64 %8429, 63
  %8459 = xor i64 %8454, %8457
  %8460 = xor i64 %8454, %8458
  %8461 = add i64 %8459, %8460
  %8462 = icmp eq i64 %8461, 2
  %8463 = zext i1 %8462 to i8
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8463, i8* %8464, align 1
  store %struct.Memory* %loadMem_40b821, %struct.Memory** %MEMORY
  %loadMem_40b824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8466 = getelementptr inbounds %struct.GPR, %struct.GPR* %8465, i32 0, i32 33
  %8467 = getelementptr inbounds %struct.Reg, %struct.Reg* %8466, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %8467 to i64*
  %8468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8469 = getelementptr inbounds %struct.GPR, %struct.GPR* %8468, i32 0, i32 1
  %8470 = getelementptr inbounds %struct.Reg, %struct.Reg* %8469, i32 0, i32 0
  %RAX.i1176 = bitcast %union.anon* %8470 to i64*
  %8471 = load i64, i64* %RAX.i1176
  %8472 = add i64 %8471, 12
  %8473 = load i64, i64* %PC.i1175
  %8474 = add i64 %8473, 4
  store i64 %8474, i64* %PC.i1175
  %8475 = inttoptr i64 %8472 to i32*
  %8476 = load i32, i32* %8475
  %8477 = sub i32 %8476, 20
  %8478 = icmp ult i32 %8476, 20
  %8479 = zext i1 %8478 to i8
  %8480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8479, i8* %8480, align 1
  %8481 = and i32 %8477, 255
  %8482 = call i32 @llvm.ctpop.i32(i32 %8481)
  %8483 = trunc i32 %8482 to i8
  %8484 = and i8 %8483, 1
  %8485 = xor i8 %8484, 1
  %8486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8485, i8* %8486, align 1
  %8487 = xor i32 %8476, 20
  %8488 = xor i32 %8487, %8477
  %8489 = lshr i32 %8488, 4
  %8490 = trunc i32 %8489 to i8
  %8491 = and i8 %8490, 1
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8491, i8* %8492, align 1
  %8493 = icmp eq i32 %8477, 0
  %8494 = zext i1 %8493 to i8
  %8495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8494, i8* %8495, align 1
  %8496 = lshr i32 %8477, 31
  %8497 = trunc i32 %8496 to i8
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8497, i8* %8498, align 1
  %8499 = lshr i32 %8476, 31
  %8500 = xor i32 %8496, %8499
  %8501 = add i32 %8500, %8499
  %8502 = icmp eq i32 %8501, 2
  %8503 = zext i1 %8502 to i8
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8503, i8* %8504, align 1
  store %struct.Memory* %loadMem_40b824, %struct.Memory** %MEMORY
  %loadMem_40b828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8506 = getelementptr inbounds %struct.GPR, %struct.GPR* %8505, i32 0, i32 33
  %8507 = getelementptr inbounds %struct.Reg, %struct.Reg* %8506, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %8507 to i64*
  %8508 = load i64, i64* %PC.i1174
  %8509 = add i64 %8508, 61
  %8510 = load i64, i64* %PC.i1174
  %8511 = add i64 %8510, 6
  %8512 = load i64, i64* %PC.i1174
  %8513 = add i64 %8512, 6
  store i64 %8513, i64* %PC.i1174
  %8514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8515 = load i8, i8* %8514, align 1
  %8516 = icmp ne i8 %8515, 0
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8518 = load i8, i8* %8517, align 1
  %8519 = icmp ne i8 %8518, 0
  %8520 = xor i1 %8516, %8519
  %8521 = xor i1 %8520, true
  %8522 = zext i1 %8521 to i8
  store i8 %8522, i8* %BRANCH_TAKEN, align 1
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8524 = select i1 %8520, i64 %8511, i64 %8509
  store i64 %8524, i64* %8523, align 8
  store %struct.Memory* %loadMem_40b828, %struct.Memory** %MEMORY
  %loadBr_40b828 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b828 = icmp eq i8 %loadBr_40b828, 1
  br i1 %cmpBr_40b828, label %block_.L_40b865, label %block_40b82e

block_40b82e:                                     ; preds = %block_.L_40b80c
  %loadMem_40b82e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8526 = getelementptr inbounds %struct.GPR, %struct.GPR* %8525, i32 0, i32 33
  %8527 = getelementptr inbounds %struct.Reg, %struct.Reg* %8526, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %8527 to i64*
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 1
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %RAX.i1173 = bitcast %union.anon* %8530 to i64*
  %8531 = load i64, i64* %PC.i1172
  %8532 = add i64 %8531, 10
  store i64 %8532, i64* %PC.i1172
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1173, align 8
  store %struct.Memory* %loadMem_40b82e, %struct.Memory** %MEMORY
  %loadMem_40b838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8534 = getelementptr inbounds %struct.GPR, %struct.GPR* %8533, i32 0, i32 33
  %8535 = getelementptr inbounds %struct.Reg, %struct.Reg* %8534, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %8535 to i64*
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8537 = getelementptr inbounds %struct.GPR, %struct.GPR* %8536, i32 0, i32 5
  %8538 = getelementptr inbounds %struct.Reg, %struct.Reg* %8537, i32 0, i32 0
  %RCX.i1170 = bitcast %union.anon* %8538 to i64*
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8540 = getelementptr inbounds %struct.GPR, %struct.GPR* %8539, i32 0, i32 15
  %8541 = getelementptr inbounds %struct.Reg, %struct.Reg* %8540, i32 0, i32 0
  %RBP.i1171 = bitcast %union.anon* %8541 to i64*
  %8542 = load i64, i64* %RBP.i1171
  %8543 = sub i64 %8542, 4
  %8544 = load i64, i64* %PC.i1169
  %8545 = add i64 %8544, 3
  store i64 %8545, i64* %PC.i1169
  %8546 = inttoptr i64 %8543 to i32*
  %8547 = load i32, i32* %8546
  %8548 = zext i32 %8547 to i64
  store i64 %8548, i64* %RCX.i1170, align 8
  store %struct.Memory* %loadMem_40b838, %struct.Memory** %MEMORY
  %loadMem_40b83b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8550 = getelementptr inbounds %struct.GPR, %struct.GPR* %8549, i32 0, i32 33
  %8551 = getelementptr inbounds %struct.Reg, %struct.Reg* %8550, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %8551 to i64*
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8553 = getelementptr inbounds %struct.GPR, %struct.GPR* %8552, i32 0, i32 5
  %8554 = getelementptr inbounds %struct.Reg, %struct.Reg* %8553, i32 0, i32 0
  %RCX.i1168 = bitcast %union.anon* %8554 to i64*
  %8555 = load i64, i64* %RCX.i1168
  %8556 = load i64, i64* %PC.i1167
  %8557 = add i64 %8556, 3
  store i64 %8557, i64* %PC.i1167
  %8558 = trunc i64 %8555 to i32
  %8559 = sub i32 %8558, 1
  %8560 = zext i32 %8559 to i64
  store i64 %8560, i64* %RCX.i1168, align 8
  %8561 = icmp ult i32 %8558, 1
  %8562 = zext i1 %8561 to i8
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8562, i8* %8563, align 1
  %8564 = and i32 %8559, 255
  %8565 = call i32 @llvm.ctpop.i32(i32 %8564)
  %8566 = trunc i32 %8565 to i8
  %8567 = and i8 %8566, 1
  %8568 = xor i8 %8567, 1
  %8569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8568, i8* %8569, align 1
  %8570 = xor i64 1, %8555
  %8571 = trunc i64 %8570 to i32
  %8572 = xor i32 %8571, %8559
  %8573 = lshr i32 %8572, 4
  %8574 = trunc i32 %8573 to i8
  %8575 = and i8 %8574, 1
  %8576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8575, i8* %8576, align 1
  %8577 = icmp eq i32 %8559, 0
  %8578 = zext i1 %8577 to i8
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8578, i8* %8579, align 1
  %8580 = lshr i32 %8559, 31
  %8581 = trunc i32 %8580 to i8
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8581, i8* %8582, align 1
  %8583 = lshr i32 %8558, 31
  %8584 = xor i32 %8580, %8583
  %8585 = add i32 %8584, %8583
  %8586 = icmp eq i32 %8585, 2
  %8587 = zext i1 %8586 to i8
  %8588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8587, i8* %8588, align 1
  store %struct.Memory* %loadMem_40b83b, %struct.Memory** %MEMORY
  %loadMem_40b83e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8590 = getelementptr inbounds %struct.GPR, %struct.GPR* %8589, i32 0, i32 33
  %8591 = getelementptr inbounds %struct.Reg, %struct.Reg* %8590, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %8591 to i64*
  %8592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8593 = getelementptr inbounds %struct.GPR, %struct.GPR* %8592, i32 0, i32 7
  %8594 = getelementptr inbounds %struct.Reg, %struct.Reg* %8593, i32 0, i32 0
  %RDX.i1165 = bitcast %union.anon* %8594 to i64*
  %8595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8596 = getelementptr inbounds %struct.GPR, %struct.GPR* %8595, i32 0, i32 15
  %8597 = getelementptr inbounds %struct.Reg, %struct.Reg* %8596, i32 0, i32 0
  %RBP.i1166 = bitcast %union.anon* %8597 to i64*
  %8598 = load i64, i64* %RBP.i1166
  %8599 = sub i64 %8598, 8
  %8600 = load i64, i64* %PC.i1164
  %8601 = add i64 %8600, 4
  store i64 %8601, i64* %PC.i1164
  %8602 = inttoptr i64 %8599 to i32*
  %8603 = load i32, i32* %8602
  %8604 = sext i32 %8603 to i64
  store i64 %8604, i64* %RDX.i1165, align 8
  store %struct.Memory* %loadMem_40b83e, %struct.Memory** %MEMORY
  %loadMem_40b842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8606 = getelementptr inbounds %struct.GPR, %struct.GPR* %8605, i32 0, i32 33
  %8607 = getelementptr inbounds %struct.Reg, %struct.Reg* %8606, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %8607 to i64*
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8609 = getelementptr inbounds %struct.GPR, %struct.GPR* %8608, i32 0, i32 7
  %8610 = getelementptr inbounds %struct.Reg, %struct.Reg* %8609, i32 0, i32 0
  %RDX.i1163 = bitcast %union.anon* %8610 to i64*
  %8611 = load i64, i64* %RDX.i1163
  %8612 = load i64, i64* %PC.i1162
  %8613 = add i64 %8612, 7
  store i64 %8613, i64* %PC.i1162
  %8614 = sext i64 %8611 to i128
  %8615 = and i128 %8614, -18446744073709551616
  %8616 = zext i64 %8611 to i128
  %8617 = or i128 %8615, %8616
  %8618 = mul i128 744, %8617
  %8619 = trunc i128 %8618 to i64
  store i64 %8619, i64* %RDX.i1163, align 8
  %8620 = sext i64 %8619 to i128
  %8621 = icmp ne i128 %8620, %8618
  %8622 = zext i1 %8621 to i8
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8622, i8* %8623, align 1
  %8624 = trunc i128 %8618 to i32
  %8625 = and i32 %8624, 255
  %8626 = call i32 @llvm.ctpop.i32(i32 %8625)
  %8627 = trunc i32 %8626 to i8
  %8628 = and i8 %8627, 1
  %8629 = xor i8 %8628, 1
  %8630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8629, i8* %8630, align 1
  %8631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8631, align 1
  %8632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8632, align 1
  %8633 = lshr i64 %8619, 63
  %8634 = trunc i64 %8633 to i8
  %8635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8634, i8* %8635, align 1
  %8636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8622, i8* %8636, align 1
  store %struct.Memory* %loadMem_40b842, %struct.Memory** %MEMORY
  %loadMem_40b849 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8638 = getelementptr inbounds %struct.GPR, %struct.GPR* %8637, i32 0, i32 33
  %8639 = getelementptr inbounds %struct.Reg, %struct.Reg* %8638, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %8639 to i64*
  %8640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8641 = getelementptr inbounds %struct.GPR, %struct.GPR* %8640, i32 0, i32 1
  %8642 = getelementptr inbounds %struct.Reg, %struct.Reg* %8641, i32 0, i32 0
  %RAX.i1160 = bitcast %union.anon* %8642 to i64*
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8644 = getelementptr inbounds %struct.GPR, %struct.GPR* %8643, i32 0, i32 9
  %8645 = getelementptr inbounds %struct.Reg, %struct.Reg* %8644, i32 0, i32 0
  %RSI.i1161 = bitcast %union.anon* %8645 to i64*
  %8646 = load i64, i64* %RAX.i1160
  %8647 = load i64, i64* %PC.i1159
  %8648 = add i64 %8647, 3
  store i64 %8648, i64* %PC.i1159
  store i64 %8646, i64* %RSI.i1161, align 8
  store %struct.Memory* %loadMem_40b849, %struct.Memory** %MEMORY
  %loadMem_40b84c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8650 = getelementptr inbounds %struct.GPR, %struct.GPR* %8649, i32 0, i32 33
  %8651 = getelementptr inbounds %struct.Reg, %struct.Reg* %8650, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %8651 to i64*
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8653 = getelementptr inbounds %struct.GPR, %struct.GPR* %8652, i32 0, i32 7
  %8654 = getelementptr inbounds %struct.Reg, %struct.Reg* %8653, i32 0, i32 0
  %RDX.i1157 = bitcast %union.anon* %8654 to i64*
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8656 = getelementptr inbounds %struct.GPR, %struct.GPR* %8655, i32 0, i32 9
  %8657 = getelementptr inbounds %struct.Reg, %struct.Reg* %8656, i32 0, i32 0
  %RSI.i1158 = bitcast %union.anon* %8657 to i64*
  %8658 = load i64, i64* %RSI.i1158
  %8659 = load i64, i64* %RDX.i1157
  %8660 = load i64, i64* %PC.i1156
  %8661 = add i64 %8660, 3
  store i64 %8661, i64* %PC.i1156
  %8662 = add i64 %8659, %8658
  store i64 %8662, i64* %RSI.i1158, align 8
  %8663 = icmp ult i64 %8662, %8658
  %8664 = icmp ult i64 %8662, %8659
  %8665 = or i1 %8663, %8664
  %8666 = zext i1 %8665 to i8
  %8667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8666, i8* %8667, align 1
  %8668 = trunc i64 %8662 to i32
  %8669 = and i32 %8668, 255
  %8670 = call i32 @llvm.ctpop.i32(i32 %8669)
  %8671 = trunc i32 %8670 to i8
  %8672 = and i8 %8671, 1
  %8673 = xor i8 %8672, 1
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8673, i8* %8674, align 1
  %8675 = xor i64 %8659, %8658
  %8676 = xor i64 %8675, %8662
  %8677 = lshr i64 %8676, 4
  %8678 = trunc i64 %8677 to i8
  %8679 = and i8 %8678, 1
  %8680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8679, i8* %8680, align 1
  %8681 = icmp eq i64 %8662, 0
  %8682 = zext i1 %8681 to i8
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8682, i8* %8683, align 1
  %8684 = lshr i64 %8662, 63
  %8685 = trunc i64 %8684 to i8
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8685, i8* %8686, align 1
  %8687 = lshr i64 %8658, 63
  %8688 = lshr i64 %8659, 63
  %8689 = xor i64 %8684, %8687
  %8690 = xor i64 %8684, %8688
  %8691 = add i64 %8689, %8690
  %8692 = icmp eq i64 %8691, 2
  %8693 = zext i1 %8692 to i8
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8693, i8* %8694, align 1
  store %struct.Memory* %loadMem_40b84c, %struct.Memory** %MEMORY
  %loadMem_40b84f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8696 = getelementptr inbounds %struct.GPR, %struct.GPR* %8695, i32 0, i32 33
  %8697 = getelementptr inbounds %struct.Reg, %struct.Reg* %8696, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %8697 to i64*
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8699 = getelementptr inbounds %struct.GPR, %struct.GPR* %8698, i32 0, i32 7
  %8700 = getelementptr inbounds %struct.Reg, %struct.Reg* %8699, i32 0, i32 0
  %RDX.i1154 = bitcast %union.anon* %8700 to i64*
  %8701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8702 = getelementptr inbounds %struct.GPR, %struct.GPR* %8701, i32 0, i32 15
  %8703 = getelementptr inbounds %struct.Reg, %struct.Reg* %8702, i32 0, i32 0
  %RBP.i1155 = bitcast %union.anon* %8703 to i64*
  %8704 = load i64, i64* %RBP.i1155
  %8705 = sub i64 %8704, 8
  %8706 = load i64, i64* %PC.i1153
  %8707 = add i64 %8706, 4
  store i64 %8707, i64* %PC.i1153
  %8708 = inttoptr i64 %8705 to i32*
  %8709 = load i32, i32* %8708
  %8710 = sext i32 %8709 to i64
  store i64 %8710, i64* %RDX.i1154, align 8
  store %struct.Memory* %loadMem_40b84f, %struct.Memory** %MEMORY
  %loadMem_40b853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8712 = getelementptr inbounds %struct.GPR, %struct.GPR* %8711, i32 0, i32 33
  %8713 = getelementptr inbounds %struct.Reg, %struct.Reg* %8712, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %8713 to i64*
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8715 = getelementptr inbounds %struct.GPR, %struct.GPR* %8714, i32 0, i32 7
  %8716 = getelementptr inbounds %struct.Reg, %struct.Reg* %8715, i32 0, i32 0
  %RDX.i1152 = bitcast %union.anon* %8716 to i64*
  %8717 = load i64, i64* %RDX.i1152
  %8718 = load i64, i64* %PC.i1151
  %8719 = add i64 %8718, 7
  store i64 %8719, i64* %PC.i1151
  %8720 = sext i64 %8717 to i128
  %8721 = and i128 %8720, -18446744073709551616
  %8722 = zext i64 %8717 to i128
  %8723 = or i128 %8721, %8722
  %8724 = mul i128 744, %8723
  %8725 = trunc i128 %8724 to i64
  store i64 %8725, i64* %RDX.i1152, align 8
  %8726 = sext i64 %8725 to i128
  %8727 = icmp ne i128 %8726, %8724
  %8728 = zext i1 %8727 to i8
  %8729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8728, i8* %8729, align 1
  %8730 = trunc i128 %8724 to i32
  %8731 = and i32 %8730, 255
  %8732 = call i32 @llvm.ctpop.i32(i32 %8731)
  %8733 = trunc i32 %8732 to i8
  %8734 = and i8 %8733, 1
  %8735 = xor i8 %8734, 1
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8735, i8* %8736, align 1
  %8737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8737, align 1
  %8738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8738, align 1
  %8739 = lshr i64 %8725, 63
  %8740 = trunc i64 %8739 to i8
  %8741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8740, i8* %8741, align 1
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8728, i8* %8742, align 1
  store %struct.Memory* %loadMem_40b853, %struct.Memory** %MEMORY
  %loadMem_40b85a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8744 = getelementptr inbounds %struct.GPR, %struct.GPR* %8743, i32 0, i32 33
  %8745 = getelementptr inbounds %struct.Reg, %struct.Reg* %8744, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %8745 to i64*
  %8746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8747 = getelementptr inbounds %struct.GPR, %struct.GPR* %8746, i32 0, i32 1
  %8748 = getelementptr inbounds %struct.Reg, %struct.Reg* %8747, i32 0, i32 0
  %RAX.i1149 = bitcast %union.anon* %8748 to i64*
  %8749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8750 = getelementptr inbounds %struct.GPR, %struct.GPR* %8749, i32 0, i32 7
  %8751 = getelementptr inbounds %struct.Reg, %struct.Reg* %8750, i32 0, i32 0
  %RDX.i1150 = bitcast %union.anon* %8751 to i64*
  %8752 = load i64, i64* %RAX.i1149
  %8753 = load i64, i64* %RDX.i1150
  %8754 = load i64, i64* %PC.i1148
  %8755 = add i64 %8754, 3
  store i64 %8755, i64* %PC.i1148
  %8756 = add i64 %8753, %8752
  store i64 %8756, i64* %RAX.i1149, align 8
  %8757 = icmp ult i64 %8756, %8752
  %8758 = icmp ult i64 %8756, %8753
  %8759 = or i1 %8757, %8758
  %8760 = zext i1 %8759 to i8
  %8761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8760, i8* %8761, align 1
  %8762 = trunc i64 %8756 to i32
  %8763 = and i32 %8762, 255
  %8764 = call i32 @llvm.ctpop.i32(i32 %8763)
  %8765 = trunc i32 %8764 to i8
  %8766 = and i8 %8765, 1
  %8767 = xor i8 %8766, 1
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8767, i8* %8768, align 1
  %8769 = xor i64 %8753, %8752
  %8770 = xor i64 %8769, %8756
  %8771 = lshr i64 %8770, 4
  %8772 = trunc i64 %8771 to i8
  %8773 = and i8 %8772, 1
  %8774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8773, i8* %8774, align 1
  %8775 = icmp eq i64 %8756, 0
  %8776 = zext i1 %8775 to i8
  %8777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8776, i8* %8777, align 1
  %8778 = lshr i64 %8756, 63
  %8779 = trunc i64 %8778 to i8
  %8780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8779, i8* %8780, align 1
  %8781 = lshr i64 %8752, 63
  %8782 = lshr i64 %8753, 63
  %8783 = xor i64 %8778, %8781
  %8784 = xor i64 %8778, %8782
  %8785 = add i64 %8783, %8784
  %8786 = icmp eq i64 %8785, 2
  %8787 = zext i1 %8786 to i8
  %8788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8787, i8* %8788, align 1
  store %struct.Memory* %loadMem_40b85a, %struct.Memory** %MEMORY
  %loadMem_40b85d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8790 = getelementptr inbounds %struct.GPR, %struct.GPR* %8789, i32 0, i32 33
  %8791 = getelementptr inbounds %struct.Reg, %struct.Reg* %8790, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %8791 to i64*
  %8792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8793 = getelementptr inbounds %struct.GPR, %struct.GPR* %8792, i32 0, i32 1
  %8794 = getelementptr inbounds %struct.Reg, %struct.Reg* %8793, i32 0, i32 0
  %RAX.i1147 = bitcast %union.anon* %8794 to i64*
  %8795 = load i64, i64* %RAX.i1147
  %8796 = add i64 %8795, 12
  %8797 = load i64, i64* %PC.i1146
  %8798 = add i64 %8797, 4
  store i64 %8798, i64* %PC.i1146
  %8799 = inttoptr i64 %8796 to i32*
  %8800 = load i32, i32* %8799
  %8801 = sext i32 %8800 to i64
  store i64 %8801, i64* %RAX.i1147, align 8
  store %struct.Memory* %loadMem_40b85d, %struct.Memory** %MEMORY
  %loadMem_40b861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8803 = getelementptr inbounds %struct.GPR, %struct.GPR* %8802, i32 0, i32 33
  %8804 = getelementptr inbounds %struct.Reg, %struct.Reg* %8803, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %8804 to i64*
  %8805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8806 = getelementptr inbounds %struct.GPR, %struct.GPR* %8805, i32 0, i32 5
  %8807 = getelementptr inbounds %struct.Reg, %struct.Reg* %8806, i32 0, i32 0
  %ECX.i1143 = bitcast %union.anon* %8807 to i32*
  %8808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8809 = getelementptr inbounds %struct.GPR, %struct.GPR* %8808, i32 0, i32 1
  %8810 = getelementptr inbounds %struct.Reg, %struct.Reg* %8809, i32 0, i32 0
  %RAX.i1144 = bitcast %union.anon* %8810 to i64*
  %8811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8812 = getelementptr inbounds %struct.GPR, %struct.GPR* %8811, i32 0, i32 9
  %8813 = getelementptr inbounds %struct.Reg, %struct.Reg* %8812, i32 0, i32 0
  %RSI.i1145 = bitcast %union.anon* %8813 to i64*
  %8814 = load i64, i64* %RSI.i1145
  %8815 = load i64, i64* %RAX.i1144
  %8816 = mul i64 %8815, 4
  %8817 = add i64 %8814, 16
  %8818 = add i64 %8817, %8816
  %8819 = load i32, i32* %ECX.i1143
  %8820 = zext i32 %8819 to i64
  %8821 = load i64, i64* %PC.i1142
  %8822 = add i64 %8821, 4
  store i64 %8822, i64* %PC.i1142
  %8823 = inttoptr i64 %8818 to i32*
  store i32 %8819, i32* %8823
  store %struct.Memory* %loadMem_40b861, %struct.Memory** %MEMORY
  br label %block_.L_40b865

block_.L_40b865:                                  ; preds = %block_40b82e, %block_.L_40b80c
  %loadMem_40b865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8825 = getelementptr inbounds %struct.GPR, %struct.GPR* %8824, i32 0, i32 33
  %8826 = getelementptr inbounds %struct.Reg, %struct.Reg* %8825, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %8826 to i64*
  %8827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8828 = getelementptr inbounds %struct.GPR, %struct.GPR* %8827, i32 0, i32 1
  %8829 = getelementptr inbounds %struct.Reg, %struct.Reg* %8828, i32 0, i32 0
  %RAX.i1141 = bitcast %union.anon* %8829 to i64*
  %8830 = load i64, i64* %PC.i1140
  %8831 = add i64 %8830, 10
  store i64 %8831, i64* %PC.i1140
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1141, align 8
  store %struct.Memory* %loadMem_40b865, %struct.Memory** %MEMORY
  %loadMem_40b86f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8833 = getelementptr inbounds %struct.GPR, %struct.GPR* %8832, i32 0, i32 33
  %8834 = getelementptr inbounds %struct.Reg, %struct.Reg* %8833, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %8834 to i64*
  %8835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8836 = getelementptr inbounds %struct.GPR, %struct.GPR* %8835, i32 0, i32 5
  %8837 = getelementptr inbounds %struct.Reg, %struct.Reg* %8836, i32 0, i32 0
  %RCX.i1138 = bitcast %union.anon* %8837 to i64*
  %8838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8839 = getelementptr inbounds %struct.GPR, %struct.GPR* %8838, i32 0, i32 15
  %8840 = getelementptr inbounds %struct.Reg, %struct.Reg* %8839, i32 0, i32 0
  %RBP.i1139 = bitcast %union.anon* %8840 to i64*
  %8841 = load i64, i64* %RBP.i1139
  %8842 = sub i64 %8841, 8
  %8843 = load i64, i64* %PC.i1137
  %8844 = add i64 %8843, 4
  store i64 %8844, i64* %PC.i1137
  %8845 = inttoptr i64 %8842 to i32*
  %8846 = load i32, i32* %8845
  %8847 = sext i32 %8846 to i64
  store i64 %8847, i64* %RCX.i1138, align 8
  store %struct.Memory* %loadMem_40b86f, %struct.Memory** %MEMORY
  %loadMem_40b873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8849 = getelementptr inbounds %struct.GPR, %struct.GPR* %8848, i32 0, i32 33
  %8850 = getelementptr inbounds %struct.Reg, %struct.Reg* %8849, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %8850 to i64*
  %8851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8852 = getelementptr inbounds %struct.GPR, %struct.GPR* %8851, i32 0, i32 5
  %8853 = getelementptr inbounds %struct.Reg, %struct.Reg* %8852, i32 0, i32 0
  %RCX.i1136 = bitcast %union.anon* %8853 to i64*
  %8854 = load i64, i64* %RCX.i1136
  %8855 = load i64, i64* %PC.i1135
  %8856 = add i64 %8855, 7
  store i64 %8856, i64* %PC.i1135
  %8857 = sext i64 %8854 to i128
  %8858 = and i128 %8857, -18446744073709551616
  %8859 = zext i64 %8854 to i128
  %8860 = or i128 %8858, %8859
  %8861 = mul i128 744, %8860
  %8862 = trunc i128 %8861 to i64
  store i64 %8862, i64* %RCX.i1136, align 8
  %8863 = sext i64 %8862 to i128
  %8864 = icmp ne i128 %8863, %8861
  %8865 = zext i1 %8864 to i8
  %8866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8865, i8* %8866, align 1
  %8867 = trunc i128 %8861 to i32
  %8868 = and i32 %8867, 255
  %8869 = call i32 @llvm.ctpop.i32(i32 %8868)
  %8870 = trunc i32 %8869 to i8
  %8871 = and i8 %8870, 1
  %8872 = xor i8 %8871, 1
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8872, i8* %8873, align 1
  %8874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8874, align 1
  %8875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8875, align 1
  %8876 = lshr i64 %8862, 63
  %8877 = trunc i64 %8876 to i8
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8877, i8* %8878, align 1
  %8879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8865, i8* %8879, align 1
  store %struct.Memory* %loadMem_40b873, %struct.Memory** %MEMORY
  %loadMem_40b87a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8881 = getelementptr inbounds %struct.GPR, %struct.GPR* %8880, i32 0, i32 33
  %8882 = getelementptr inbounds %struct.Reg, %struct.Reg* %8881, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %8882 to i64*
  %8883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8884 = getelementptr inbounds %struct.GPR, %struct.GPR* %8883, i32 0, i32 1
  %8885 = getelementptr inbounds %struct.Reg, %struct.Reg* %8884, i32 0, i32 0
  %RAX.i1133 = bitcast %union.anon* %8885 to i64*
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8887 = getelementptr inbounds %struct.GPR, %struct.GPR* %8886, i32 0, i32 5
  %8888 = getelementptr inbounds %struct.Reg, %struct.Reg* %8887, i32 0, i32 0
  %RCX.i1134 = bitcast %union.anon* %8888 to i64*
  %8889 = load i64, i64* %RAX.i1133
  %8890 = load i64, i64* %RCX.i1134
  %8891 = load i64, i64* %PC.i1132
  %8892 = add i64 %8891, 3
  store i64 %8892, i64* %PC.i1132
  %8893 = add i64 %8890, %8889
  store i64 %8893, i64* %RAX.i1133, align 8
  %8894 = icmp ult i64 %8893, %8889
  %8895 = icmp ult i64 %8893, %8890
  %8896 = or i1 %8894, %8895
  %8897 = zext i1 %8896 to i8
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8897, i8* %8898, align 1
  %8899 = trunc i64 %8893 to i32
  %8900 = and i32 %8899, 255
  %8901 = call i32 @llvm.ctpop.i32(i32 %8900)
  %8902 = trunc i32 %8901 to i8
  %8903 = and i8 %8902, 1
  %8904 = xor i8 %8903, 1
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8904, i8* %8905, align 1
  %8906 = xor i64 %8890, %8889
  %8907 = xor i64 %8906, %8893
  %8908 = lshr i64 %8907, 4
  %8909 = trunc i64 %8908 to i8
  %8910 = and i8 %8909, 1
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8910, i8* %8911, align 1
  %8912 = icmp eq i64 %8893, 0
  %8913 = zext i1 %8912 to i8
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8913, i8* %8914, align 1
  %8915 = lshr i64 %8893, 63
  %8916 = trunc i64 %8915 to i8
  %8917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8916, i8* %8917, align 1
  %8918 = lshr i64 %8889, 63
  %8919 = lshr i64 %8890, 63
  %8920 = xor i64 %8915, %8918
  %8921 = xor i64 %8915, %8919
  %8922 = add i64 %8920, %8921
  %8923 = icmp eq i64 %8922, 2
  %8924 = zext i1 %8923 to i8
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8924, i8* %8925, align 1
  store %struct.Memory* %loadMem_40b87a, %struct.Memory** %MEMORY
  %loadMem_40b87d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8927 = getelementptr inbounds %struct.GPR, %struct.GPR* %8926, i32 0, i32 33
  %8928 = getelementptr inbounds %struct.Reg, %struct.Reg* %8927, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %8928 to i64*
  %8929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8930 = getelementptr inbounds %struct.GPR, %struct.GPR* %8929, i32 0, i32 1
  %8931 = getelementptr inbounds %struct.Reg, %struct.Reg* %8930, i32 0, i32 0
  %RAX.i1130 = bitcast %union.anon* %8931 to i64*
  %8932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8933 = getelementptr inbounds %struct.GPR, %struct.GPR* %8932, i32 0, i32 7
  %8934 = getelementptr inbounds %struct.Reg, %struct.Reg* %8933, i32 0, i32 0
  %RDX.i1131 = bitcast %union.anon* %8934 to i64*
  %8935 = load i64, i64* %RAX.i1130
  %8936 = add i64 %8935, 12
  %8937 = load i64, i64* %PC.i1129
  %8938 = add i64 %8937, 3
  store i64 %8938, i64* %PC.i1129
  %8939 = inttoptr i64 %8936 to i32*
  %8940 = load i32, i32* %8939
  %8941 = zext i32 %8940 to i64
  store i64 %8941, i64* %RDX.i1131, align 8
  store %struct.Memory* %loadMem_40b87d, %struct.Memory** %MEMORY
  %loadMem_40b880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8943 = getelementptr inbounds %struct.GPR, %struct.GPR* %8942, i32 0, i32 33
  %8944 = getelementptr inbounds %struct.Reg, %struct.Reg* %8943, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %8944 to i64*
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8946 = getelementptr inbounds %struct.GPR, %struct.GPR* %8945, i32 0, i32 7
  %8947 = getelementptr inbounds %struct.Reg, %struct.Reg* %8946, i32 0, i32 0
  %RDX.i1128 = bitcast %union.anon* %8947 to i64*
  %8948 = load i64, i64* %RDX.i1128
  %8949 = load i64, i64* %PC.i1127
  %8950 = add i64 %8949, 3
  store i64 %8950, i64* %PC.i1127
  %8951 = trunc i64 %8948 to i32
  %8952 = add i32 1, %8951
  %8953 = zext i32 %8952 to i64
  store i64 %8953, i64* %RDX.i1128, align 8
  %8954 = icmp ult i32 %8952, %8951
  %8955 = icmp ult i32 %8952, 1
  %8956 = or i1 %8954, %8955
  %8957 = zext i1 %8956 to i8
  %8958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8957, i8* %8958, align 1
  %8959 = and i32 %8952, 255
  %8960 = call i32 @llvm.ctpop.i32(i32 %8959)
  %8961 = trunc i32 %8960 to i8
  %8962 = and i8 %8961, 1
  %8963 = xor i8 %8962, 1
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8963, i8* %8964, align 1
  %8965 = xor i64 1, %8948
  %8966 = trunc i64 %8965 to i32
  %8967 = xor i32 %8966, %8952
  %8968 = lshr i32 %8967, 4
  %8969 = trunc i32 %8968 to i8
  %8970 = and i8 %8969, 1
  %8971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8970, i8* %8971, align 1
  %8972 = icmp eq i32 %8952, 0
  %8973 = zext i1 %8972 to i8
  %8974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8973, i8* %8974, align 1
  %8975 = lshr i32 %8952, 31
  %8976 = trunc i32 %8975 to i8
  %8977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8976, i8* %8977, align 1
  %8978 = lshr i32 %8951, 31
  %8979 = xor i32 %8975, %8978
  %8980 = add i32 %8979, %8975
  %8981 = icmp eq i32 %8980, 2
  %8982 = zext i1 %8981 to i8
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8982, i8* %8983, align 1
  store %struct.Memory* %loadMem_40b880, %struct.Memory** %MEMORY
  %loadMem_40b883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8985 = getelementptr inbounds %struct.GPR, %struct.GPR* %8984, i32 0, i32 33
  %8986 = getelementptr inbounds %struct.Reg, %struct.Reg* %8985, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %8986 to i64*
  %8987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8988 = getelementptr inbounds %struct.GPR, %struct.GPR* %8987, i32 0, i32 7
  %8989 = getelementptr inbounds %struct.Reg, %struct.Reg* %8988, i32 0, i32 0
  %EDX.i1125 = bitcast %union.anon* %8989 to i32*
  %8990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8991 = getelementptr inbounds %struct.GPR, %struct.GPR* %8990, i32 0, i32 1
  %8992 = getelementptr inbounds %struct.Reg, %struct.Reg* %8991, i32 0, i32 0
  %RAX.i1126 = bitcast %union.anon* %8992 to i64*
  %8993 = load i64, i64* %RAX.i1126
  %8994 = add i64 %8993, 12
  %8995 = load i32, i32* %EDX.i1125
  %8996 = zext i32 %8995 to i64
  %8997 = load i64, i64* %PC.i1124
  %8998 = add i64 %8997, 3
  store i64 %8998, i64* %PC.i1124
  %8999 = inttoptr i64 %8994 to i32*
  store i32 %8995, i32* %8999
  store %struct.Memory* %loadMem_40b883, %struct.Memory** %MEMORY
  %loadMem_40b886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9001 = getelementptr inbounds %struct.GPR, %struct.GPR* %9000, i32 0, i32 33
  %9002 = getelementptr inbounds %struct.Reg, %struct.Reg* %9001, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %9002 to i64*
  %9003 = load i64, i64* %PC.i1123
  %9004 = add i64 %9003, 5
  %9005 = load i64, i64* %PC.i1123
  %9006 = add i64 %9005, 5
  store i64 %9006, i64* %PC.i1123
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9004, i64* %9007, align 8
  store %struct.Memory* %loadMem_40b886, %struct.Memory** %MEMORY
  br label %block_.L_40b88b

block_.L_40b88b:                                  ; preds = %block_.L_40b865, %block_40b7eb, %block_40b7b2, %block_40b779, %block_40b752
  %loadMem_40b88b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9009 = getelementptr inbounds %struct.GPR, %struct.GPR* %9008, i32 0, i32 33
  %9010 = getelementptr inbounds %struct.Reg, %struct.Reg* %9009, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %9010 to i64*
  %9011 = load i64, i64* %PC.i1122
  %9012 = add i64 %9011, 458
  %9013 = load i64, i64* %PC.i1122
  %9014 = add i64 %9013, 5
  store i64 %9014, i64* %PC.i1122
  %9015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9012, i64* %9015, align 8
  store %struct.Memory* %loadMem_40b88b, %struct.Memory** %MEMORY
  br label %block_.L_40ba55

block_.L_40b890:                                  ; preds = %block_.L_40b738
  %loadMem_40b890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9017 = getelementptr inbounds %struct.GPR, %struct.GPR* %9016, i32 0, i32 33
  %9018 = getelementptr inbounds %struct.Reg, %struct.Reg* %9017, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %9018 to i64*
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9020 = getelementptr inbounds %struct.GPR, %struct.GPR* %9019, i32 0, i32 1
  %9021 = getelementptr inbounds %struct.Reg, %struct.Reg* %9020, i32 0, i32 0
  %RAX.i1120 = bitcast %union.anon* %9021 to i64*
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9023 = getelementptr inbounds %struct.GPR, %struct.GPR* %9022, i32 0, i32 15
  %9024 = getelementptr inbounds %struct.Reg, %struct.Reg* %9023, i32 0, i32 0
  %RBP.i1121 = bitcast %union.anon* %9024 to i64*
  %9025 = load i64, i64* %RBP.i1121
  %9026 = sub i64 %9025, 4
  %9027 = load i64, i64* %PC.i1119
  %9028 = add i64 %9027, 3
  store i64 %9028, i64* %PC.i1119
  %9029 = inttoptr i64 %9026 to i32*
  %9030 = load i32, i32* %9029
  %9031 = zext i32 %9030 to i64
  store i64 %9031, i64* %RAX.i1120, align 8
  store %struct.Memory* %loadMem_40b890, %struct.Memory** %MEMORY
  %loadMem_40b893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 33
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %9034 to i64*
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9036 = getelementptr inbounds %struct.GPR, %struct.GPR* %9035, i32 0, i32 1
  %9037 = getelementptr inbounds %struct.Reg, %struct.Reg* %9036, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %9037 to i64*
  %9038 = load i64, i64* %RAX.i1118
  %9039 = load i64, i64* %PC.i1117
  %9040 = add i64 %9039, 3
  store i64 %9040, i64* %PC.i1117
  %9041 = trunc i64 %9038 to i32
  %9042 = sub i32 %9041, 1
  %9043 = zext i32 %9042 to i64
  store i64 %9043, i64* %RAX.i1118, align 8
  %9044 = icmp ult i32 %9041, 1
  %9045 = zext i1 %9044 to i8
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9045, i8* %9046, align 1
  %9047 = and i32 %9042, 255
  %9048 = call i32 @llvm.ctpop.i32(i32 %9047)
  %9049 = trunc i32 %9048 to i8
  %9050 = and i8 %9049, 1
  %9051 = xor i8 %9050, 1
  %9052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9051, i8* %9052, align 1
  %9053 = xor i64 1, %9038
  %9054 = trunc i64 %9053 to i32
  %9055 = xor i32 %9054, %9042
  %9056 = lshr i32 %9055, 4
  %9057 = trunc i32 %9056 to i8
  %9058 = and i8 %9057, 1
  %9059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9058, i8* %9059, align 1
  %9060 = icmp eq i32 %9042, 0
  %9061 = zext i1 %9060 to i8
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9061, i8* %9062, align 1
  %9063 = lshr i32 %9042, 31
  %9064 = trunc i32 %9063 to i8
  %9065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9064, i8* %9065, align 1
  %9066 = lshr i32 %9041, 31
  %9067 = xor i32 %9063, %9066
  %9068 = add i32 %9067, %9066
  %9069 = icmp eq i32 %9068, 2
  %9070 = zext i1 %9069 to i8
  %9071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9070, i8* %9071, align 1
  store %struct.Memory* %loadMem_40b893, %struct.Memory** %MEMORY
  %loadMem_40b896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9073 = getelementptr inbounds %struct.GPR, %struct.GPR* %9072, i32 0, i32 33
  %9074 = getelementptr inbounds %struct.Reg, %struct.Reg* %9073, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %9074 to i64*
  %9075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9076 = getelementptr inbounds %struct.GPR, %struct.GPR* %9075, i32 0, i32 1
  %9077 = getelementptr inbounds %struct.Reg, %struct.Reg* %9076, i32 0, i32 0
  %EAX.i1115 = bitcast %union.anon* %9077 to i32*
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9079 = getelementptr inbounds %struct.GPR, %struct.GPR* %9078, i32 0, i32 5
  %9080 = getelementptr inbounds %struct.Reg, %struct.Reg* %9079, i32 0, i32 0
  %RCX.i1116 = bitcast %union.anon* %9080 to i64*
  %9081 = load i32, i32* %EAX.i1115
  %9082 = zext i32 %9081 to i64
  %9083 = load i64, i64* %PC.i1114
  %9084 = add i64 %9083, 3
  store i64 %9084, i64* %PC.i1114
  %9085 = shl i64 %9082, 32
  %9086 = ashr exact i64 %9085, 32
  store i64 %9086, i64* %RCX.i1116, align 8
  store %struct.Memory* %loadMem_40b896, %struct.Memory** %MEMORY
  %loadMem_40b899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9088 = getelementptr inbounds %struct.GPR, %struct.GPR* %9087, i32 0, i32 33
  %9089 = getelementptr inbounds %struct.Reg, %struct.Reg* %9088, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %9089 to i64*
  %9090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9091 = getelementptr inbounds %struct.GPR, %struct.GPR* %9090, i32 0, i32 1
  %9092 = getelementptr inbounds %struct.Reg, %struct.Reg* %9091, i32 0, i32 0
  %RAX.i1112 = bitcast %union.anon* %9092 to i64*
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9094 = getelementptr inbounds %struct.GPR, %struct.GPR* %9093, i32 0, i32 5
  %9095 = getelementptr inbounds %struct.Reg, %struct.Reg* %9094, i32 0, i32 0
  %RCX.i1113 = bitcast %union.anon* %9095 to i64*
  %9096 = load i64, i64* %RCX.i1113
  %9097 = add i64 %9096, 12099168
  %9098 = load i64, i64* %PC.i1111
  %9099 = add i64 %9098, 8
  store i64 %9099, i64* %PC.i1111
  %9100 = inttoptr i64 %9097 to i8*
  %9101 = load i8, i8* %9100
  %9102 = zext i8 %9101 to i64
  store i64 %9102, i64* %RAX.i1112, align 8
  store %struct.Memory* %loadMem_40b899, %struct.Memory** %MEMORY
  %loadMem_40b8a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9104 = getelementptr inbounds %struct.GPR, %struct.GPR* %9103, i32 0, i32 33
  %9105 = getelementptr inbounds %struct.Reg, %struct.Reg* %9104, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %9105 to i64*
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9107 = getelementptr inbounds %struct.GPR, %struct.GPR* %9106, i32 0, i32 1
  %9108 = getelementptr inbounds %struct.Reg, %struct.Reg* %9107, i32 0, i32 0
  %EAX.i1109 = bitcast %union.anon* %9108 to i32*
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 15
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %RBP.i1110 = bitcast %union.anon* %9111 to i64*
  %9112 = load i32, i32* %EAX.i1109
  %9113 = zext i32 %9112 to i64
  %9114 = load i64, i64* %RBP.i1110
  %9115 = sub i64 %9114, 24
  %9116 = load i64, i64* %PC.i1108
  %9117 = add i64 %9116, 3
  store i64 %9117, i64* %PC.i1108
  %9118 = inttoptr i64 %9115 to i32*
  %9119 = load i32, i32* %9118
  %9120 = sub i32 %9112, %9119
  %9121 = icmp ult i32 %9112, %9119
  %9122 = zext i1 %9121 to i8
  %9123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9122, i8* %9123, align 1
  %9124 = and i32 %9120, 255
  %9125 = call i32 @llvm.ctpop.i32(i32 %9124)
  %9126 = trunc i32 %9125 to i8
  %9127 = and i8 %9126, 1
  %9128 = xor i8 %9127, 1
  %9129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9128, i8* %9129, align 1
  %9130 = xor i32 %9119, %9112
  %9131 = xor i32 %9130, %9120
  %9132 = lshr i32 %9131, 4
  %9133 = trunc i32 %9132 to i8
  %9134 = and i8 %9133, 1
  %9135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9134, i8* %9135, align 1
  %9136 = icmp eq i32 %9120, 0
  %9137 = zext i1 %9136 to i8
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9137, i8* %9138, align 1
  %9139 = lshr i32 %9120, 31
  %9140 = trunc i32 %9139 to i8
  %9141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9140, i8* %9141, align 1
  %9142 = lshr i32 %9112, 31
  %9143 = lshr i32 %9119, 31
  %9144 = xor i32 %9143, %9142
  %9145 = xor i32 %9139, %9142
  %9146 = add i32 %9145, %9144
  %9147 = icmp eq i32 %9146, 2
  %9148 = zext i1 %9147 to i8
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9148, i8* %9149, align 1
  store %struct.Memory* %loadMem_40b8a1, %struct.Memory** %MEMORY
  %loadMem_40b8a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9151 = getelementptr inbounds %struct.GPR, %struct.GPR* %9150, i32 0, i32 33
  %9152 = getelementptr inbounds %struct.Reg, %struct.Reg* %9151, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %9152 to i64*
  %9153 = load i64, i64* %PC.i1107
  %9154 = add i64 %9153, 428
  %9155 = load i64, i64* %PC.i1107
  %9156 = add i64 %9155, 6
  %9157 = load i64, i64* %PC.i1107
  %9158 = add i64 %9157, 6
  store i64 %9158, i64* %PC.i1107
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9160 = load i8, i8* %9159, align 1
  %9161 = icmp eq i8 %9160, 0
  %9162 = zext i1 %9161 to i8
  store i8 %9162, i8* %BRANCH_TAKEN, align 1
  %9163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9164 = select i1 %9161, i64 %9154, i64 %9156
  store i64 %9164, i64* %9163, align 8
  store %struct.Memory* %loadMem_40b8a4, %struct.Memory** %MEMORY
  %loadBr_40b8a4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b8a4 = icmp eq i8 %loadBr_40b8a4, 1
  br i1 %cmpBr_40b8a4, label %block_.L_40ba50, label %block_40b8aa

block_40b8aa:                                     ; preds = %block_.L_40b890
  %loadMem_40b8aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9166 = getelementptr inbounds %struct.GPR, %struct.GPR* %9165, i32 0, i32 33
  %9167 = getelementptr inbounds %struct.Reg, %struct.Reg* %9166, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %9167 to i64*
  %9168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9169 = getelementptr inbounds %struct.GPR, %struct.GPR* %9168, i32 0, i32 1
  %9170 = getelementptr inbounds %struct.Reg, %struct.Reg* %9169, i32 0, i32 0
  %RAX.i1106 = bitcast %union.anon* %9170 to i64*
  %9171 = load i64, i64* %PC.i1105
  %9172 = add i64 %9171, 10
  store i64 %9172, i64* %PC.i1105
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1106, align 8
  store %struct.Memory* %loadMem_40b8aa, %struct.Memory** %MEMORY
  %loadMem_40b8b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9174 = getelementptr inbounds %struct.GPR, %struct.GPR* %9173, i32 0, i32 33
  %9175 = getelementptr inbounds %struct.Reg, %struct.Reg* %9174, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %9175 to i64*
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9177 = getelementptr inbounds %struct.GPR, %struct.GPR* %9176, i32 0, i32 5
  %9178 = getelementptr inbounds %struct.Reg, %struct.Reg* %9177, i32 0, i32 0
  %RCX.i1103 = bitcast %union.anon* %9178 to i64*
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9180 = getelementptr inbounds %struct.GPR, %struct.GPR* %9179, i32 0, i32 15
  %9181 = getelementptr inbounds %struct.Reg, %struct.Reg* %9180, i32 0, i32 0
  %RBP.i1104 = bitcast %union.anon* %9181 to i64*
  %9182 = load i64, i64* %RBP.i1104
  %9183 = sub i64 %9182, 4
  %9184 = load i64, i64* %PC.i1102
  %9185 = add i64 %9184, 3
  store i64 %9185, i64* %PC.i1102
  %9186 = inttoptr i64 %9183 to i32*
  %9187 = load i32, i32* %9186
  %9188 = zext i32 %9187 to i64
  store i64 %9188, i64* %RCX.i1103, align 8
  store %struct.Memory* %loadMem_40b8b4, %struct.Memory** %MEMORY
  %loadMem_40b8b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9190 = getelementptr inbounds %struct.GPR, %struct.GPR* %9189, i32 0, i32 33
  %9191 = getelementptr inbounds %struct.Reg, %struct.Reg* %9190, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %9191 to i64*
  %9192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9193 = getelementptr inbounds %struct.GPR, %struct.GPR* %9192, i32 0, i32 5
  %9194 = getelementptr inbounds %struct.Reg, %struct.Reg* %9193, i32 0, i32 0
  %RCX.i1101 = bitcast %union.anon* %9194 to i64*
  %9195 = load i64, i64* %RCX.i1101
  %9196 = load i64, i64* %PC.i1100
  %9197 = add i64 %9196, 3
  store i64 %9197, i64* %PC.i1100
  %9198 = trunc i64 %9195 to i32
  %9199 = sub i32 %9198, 1
  %9200 = zext i32 %9199 to i64
  store i64 %9200, i64* %RCX.i1101, align 8
  %9201 = icmp ult i32 %9198, 1
  %9202 = zext i1 %9201 to i8
  %9203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9202, i8* %9203, align 1
  %9204 = and i32 %9199, 255
  %9205 = call i32 @llvm.ctpop.i32(i32 %9204)
  %9206 = trunc i32 %9205 to i8
  %9207 = and i8 %9206, 1
  %9208 = xor i8 %9207, 1
  %9209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9208, i8* %9209, align 1
  %9210 = xor i64 1, %9195
  %9211 = trunc i64 %9210 to i32
  %9212 = xor i32 %9211, %9199
  %9213 = lshr i32 %9212, 4
  %9214 = trunc i32 %9213 to i8
  %9215 = and i8 %9214, 1
  %9216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9215, i8* %9216, align 1
  %9217 = icmp eq i32 %9199, 0
  %9218 = zext i1 %9217 to i8
  %9219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9218, i8* %9219, align 1
  %9220 = lshr i32 %9199, 31
  %9221 = trunc i32 %9220 to i8
  %9222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9221, i8* %9222, align 1
  %9223 = lshr i32 %9198, 31
  %9224 = xor i32 %9220, %9223
  %9225 = add i32 %9224, %9223
  %9226 = icmp eq i32 %9225, 2
  %9227 = zext i1 %9226 to i8
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9227, i8* %9228, align 1
  store %struct.Memory* %loadMem_40b8b7, %struct.Memory** %MEMORY
  %loadMem_40b8ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %9229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9230 = getelementptr inbounds %struct.GPR, %struct.GPR* %9229, i32 0, i32 33
  %9231 = getelementptr inbounds %struct.Reg, %struct.Reg* %9230, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %9231 to i64*
  %9232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9233 = getelementptr inbounds %struct.GPR, %struct.GPR* %9232, i32 0, i32 5
  %9234 = getelementptr inbounds %struct.Reg, %struct.Reg* %9233, i32 0, i32 0
  %ECX.i1098 = bitcast %union.anon* %9234 to i32*
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9236 = getelementptr inbounds %struct.GPR, %struct.GPR* %9235, i32 0, i32 7
  %9237 = getelementptr inbounds %struct.Reg, %struct.Reg* %9236, i32 0, i32 0
  %RDX.i1099 = bitcast %union.anon* %9237 to i64*
  %9238 = load i32, i32* %ECX.i1098
  %9239 = zext i32 %9238 to i64
  %9240 = load i64, i64* %PC.i1097
  %9241 = add i64 %9240, 3
  store i64 %9241, i64* %PC.i1097
  %9242 = shl i64 %9239, 32
  %9243 = ashr exact i64 %9242, 32
  store i64 %9243, i64* %RDX.i1099, align 8
  store %struct.Memory* %loadMem_40b8ba, %struct.Memory** %MEMORY
  %loadMem_40b8bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9245 = getelementptr inbounds %struct.GPR, %struct.GPR* %9244, i32 0, i32 33
  %9246 = getelementptr inbounds %struct.Reg, %struct.Reg* %9245, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %9246 to i64*
  %9247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9248 = getelementptr inbounds %struct.GPR, %struct.GPR* %9247, i32 0, i32 7
  %9249 = getelementptr inbounds %struct.Reg, %struct.Reg* %9248, i32 0, i32 0
  %RDX.i1096 = bitcast %union.anon* %9249 to i64*
  %9250 = load i64, i64* %RDX.i1096
  %9251 = mul i64 %9250, 4
  %9252 = add i64 %9251, 11187184
  %9253 = load i64, i64* %PC.i1095
  %9254 = add i64 %9253, 8
  store i64 %9254, i64* %PC.i1095
  %9255 = inttoptr i64 %9252 to i32*
  %9256 = load i32, i32* %9255
  %9257 = sext i32 %9256 to i64
  store i64 %9257, i64* %RDX.i1096, align 8
  store %struct.Memory* %loadMem_40b8bd, %struct.Memory** %MEMORY
  %loadMem_40b8c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9259 = getelementptr inbounds %struct.GPR, %struct.GPR* %9258, i32 0, i32 33
  %9260 = getelementptr inbounds %struct.Reg, %struct.Reg* %9259, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %9260 to i64*
  %9261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9262 = getelementptr inbounds %struct.GPR, %struct.GPR* %9261, i32 0, i32 7
  %9263 = getelementptr inbounds %struct.Reg, %struct.Reg* %9262, i32 0, i32 0
  %RDX.i1094 = bitcast %union.anon* %9263 to i64*
  %9264 = load i64, i64* %RDX.i1094
  %9265 = load i64, i64* %PC.i1093
  %9266 = add i64 %9265, 7
  store i64 %9266, i64* %PC.i1093
  %9267 = sext i64 %9264 to i128
  %9268 = and i128 %9267, -18446744073709551616
  %9269 = zext i64 %9264 to i128
  %9270 = or i128 %9268, %9269
  %9271 = mul i128 744, %9270
  %9272 = trunc i128 %9271 to i64
  store i64 %9272, i64* %RDX.i1094, align 8
  %9273 = sext i64 %9272 to i128
  %9274 = icmp ne i128 %9273, %9271
  %9275 = zext i1 %9274 to i8
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9275, i8* %9276, align 1
  %9277 = trunc i128 %9271 to i32
  %9278 = and i32 %9277, 255
  %9279 = call i32 @llvm.ctpop.i32(i32 %9278)
  %9280 = trunc i32 %9279 to i8
  %9281 = and i8 %9280, 1
  %9282 = xor i8 %9281, 1
  %9283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9282, i8* %9283, align 1
  %9284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9284, align 1
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9285, align 1
  %9286 = lshr i64 %9272, 63
  %9287 = trunc i64 %9286 to i8
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9287, i8* %9288, align 1
  %9289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9275, i8* %9289, align 1
  store %struct.Memory* %loadMem_40b8c5, %struct.Memory** %MEMORY
  %loadMem_40b8cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9291 = getelementptr inbounds %struct.GPR, %struct.GPR* %9290, i32 0, i32 33
  %9292 = getelementptr inbounds %struct.Reg, %struct.Reg* %9291, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %9292 to i64*
  %9293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9294 = getelementptr inbounds %struct.GPR, %struct.GPR* %9293, i32 0, i32 1
  %9295 = getelementptr inbounds %struct.Reg, %struct.Reg* %9294, i32 0, i32 0
  %RAX.i1091 = bitcast %union.anon* %9295 to i64*
  %9296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9297 = getelementptr inbounds %struct.GPR, %struct.GPR* %9296, i32 0, i32 7
  %9298 = getelementptr inbounds %struct.Reg, %struct.Reg* %9297, i32 0, i32 0
  %RDX.i1092 = bitcast %union.anon* %9298 to i64*
  %9299 = load i64, i64* %RAX.i1091
  %9300 = load i64, i64* %RDX.i1092
  %9301 = load i64, i64* %PC.i1090
  %9302 = add i64 %9301, 3
  store i64 %9302, i64* %PC.i1090
  %9303 = add i64 %9300, %9299
  store i64 %9303, i64* %RAX.i1091, align 8
  %9304 = icmp ult i64 %9303, %9299
  %9305 = icmp ult i64 %9303, %9300
  %9306 = or i1 %9304, %9305
  %9307 = zext i1 %9306 to i8
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9307, i8* %9308, align 1
  %9309 = trunc i64 %9303 to i32
  %9310 = and i32 %9309, 255
  %9311 = call i32 @llvm.ctpop.i32(i32 %9310)
  %9312 = trunc i32 %9311 to i8
  %9313 = and i8 %9312, 1
  %9314 = xor i8 %9313, 1
  %9315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9314, i8* %9315, align 1
  %9316 = xor i64 %9300, %9299
  %9317 = xor i64 %9316, %9303
  %9318 = lshr i64 %9317, 4
  %9319 = trunc i64 %9318 to i8
  %9320 = and i8 %9319, 1
  %9321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9320, i8* %9321, align 1
  %9322 = icmp eq i64 %9303, 0
  %9323 = zext i1 %9322 to i8
  %9324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9323, i8* %9324, align 1
  %9325 = lshr i64 %9303, 63
  %9326 = trunc i64 %9325 to i8
  %9327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9326, i8* %9327, align 1
  %9328 = lshr i64 %9299, 63
  %9329 = lshr i64 %9300, 63
  %9330 = xor i64 %9325, %9328
  %9331 = xor i64 %9325, %9329
  %9332 = add i64 %9330, %9331
  %9333 = icmp eq i64 %9332, 2
  %9334 = zext i1 %9333 to i8
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9334, i8* %9335, align 1
  store %struct.Memory* %loadMem_40b8cc, %struct.Memory** %MEMORY
  %loadMem_40b8cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9337 = getelementptr inbounds %struct.GPR, %struct.GPR* %9336, i32 0, i32 33
  %9338 = getelementptr inbounds %struct.Reg, %struct.Reg* %9337, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %9338 to i64*
  %9339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9340 = getelementptr inbounds %struct.GPR, %struct.GPR* %9339, i32 0, i32 1
  %9341 = getelementptr inbounds %struct.Reg, %struct.Reg* %9340, i32 0, i32 0
  %RAX.i1088 = bitcast %union.anon* %9341 to i64*
  %9342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9343 = getelementptr inbounds %struct.GPR, %struct.GPR* %9342, i32 0, i32 5
  %9344 = getelementptr inbounds %struct.Reg, %struct.Reg* %9343, i32 0, i32 0
  %RCX.i1089 = bitcast %union.anon* %9344 to i64*
  %9345 = load i64, i64* %RAX.i1088
  %9346 = add i64 %9345, 740
  %9347 = load i64, i64* %PC.i1087
  %9348 = add i64 %9347, 6
  store i64 %9348, i64* %PC.i1087
  %9349 = inttoptr i64 %9346 to i32*
  %9350 = load i32, i32* %9349
  %9351 = zext i32 %9350 to i64
  store i64 %9351, i64* %RCX.i1089, align 8
  store %struct.Memory* %loadMem_40b8cf, %struct.Memory** %MEMORY
  %loadMem_40b8d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9353 = getelementptr inbounds %struct.GPR, %struct.GPR* %9352, i32 0, i32 33
  %9354 = getelementptr inbounds %struct.Reg, %struct.Reg* %9353, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %9354 to i64*
  %9355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9356 = getelementptr inbounds %struct.GPR, %struct.GPR* %9355, i32 0, i32 5
  %9357 = getelementptr inbounds %struct.Reg, %struct.Reg* %9356, i32 0, i32 0
  %ECX.i1086 = bitcast %union.anon* %9357 to i32*
  %9358 = load i32, i32* %ECX.i1086
  %9359 = zext i32 %9358 to i64
  %9360 = load i64, i64* %PC.i1085
  %9361 = add i64 %9360, 7
  store i64 %9361, i64* %PC.i1085
  %9362 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %9363 = sub i32 %9358, %9362
  %9364 = icmp ult i32 %9358, %9362
  %9365 = zext i1 %9364 to i8
  %9366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9365, i8* %9366, align 1
  %9367 = and i32 %9363, 255
  %9368 = call i32 @llvm.ctpop.i32(i32 %9367)
  %9369 = trunc i32 %9368 to i8
  %9370 = and i8 %9369, 1
  %9371 = xor i8 %9370, 1
  %9372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9371, i8* %9372, align 1
  %9373 = xor i32 %9362, %9358
  %9374 = xor i32 %9373, %9363
  %9375 = lshr i32 %9374, 4
  %9376 = trunc i32 %9375 to i8
  %9377 = and i8 %9376, 1
  %9378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9377, i8* %9378, align 1
  %9379 = icmp eq i32 %9363, 0
  %9380 = zext i1 %9379 to i8
  %9381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9380, i8* %9381, align 1
  %9382 = lshr i32 %9363, 31
  %9383 = trunc i32 %9382 to i8
  %9384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9383, i8* %9384, align 1
  %9385 = lshr i32 %9358, 31
  %9386 = lshr i32 %9362, 31
  %9387 = xor i32 %9386, %9385
  %9388 = xor i32 %9382, %9385
  %9389 = add i32 %9388, %9387
  %9390 = icmp eq i32 %9389, 2
  %9391 = zext i1 %9390 to i8
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9391, i8* %9392, align 1
  store %struct.Memory* %loadMem_40b8d5, %struct.Memory** %MEMORY
  %loadMem_40b8dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9394 = getelementptr inbounds %struct.GPR, %struct.GPR* %9393, i32 0, i32 33
  %9395 = getelementptr inbounds %struct.Reg, %struct.Reg* %9394, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %9395 to i64*
  %9396 = load i64, i64* %PC.i1084
  %9397 = add i64 %9396, 372
  %9398 = load i64, i64* %PC.i1084
  %9399 = add i64 %9398, 6
  %9400 = load i64, i64* %PC.i1084
  %9401 = add i64 %9400, 6
  store i64 %9401, i64* %PC.i1084
  %9402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9403 = load i8, i8* %9402, align 1
  store i8 %9403, i8* %BRANCH_TAKEN, align 1
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9405 = icmp ne i8 %9403, 0
  %9406 = select i1 %9405, i64 %9397, i64 %9399
  store i64 %9406, i64* %9404, align 8
  store %struct.Memory* %loadMem_40b8dc, %struct.Memory** %MEMORY
  %loadBr_40b8dc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b8dc = icmp eq i8 %loadBr_40b8dc, 1
  br i1 %cmpBr_40b8dc, label %block_.L_40ba50, label %block_40b8e2

block_40b8e2:                                     ; preds = %block_40b8aa
  %loadMem_40b8e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 33
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %9409 to i64*
  %9410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9411 = getelementptr inbounds %struct.GPR, %struct.GPR* %9410, i32 0, i32 1
  %9412 = getelementptr inbounds %struct.Reg, %struct.Reg* %9411, i32 0, i32 0
  %RAX.i1083 = bitcast %union.anon* %9412 to i64*
  %9413 = load i64, i64* %PC.i1082
  %9414 = add i64 %9413, 10
  store i64 %9414, i64* %PC.i1082
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1083, align 8
  store %struct.Memory* %loadMem_40b8e2, %struct.Memory** %MEMORY
  %loadMem_40b8ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 33
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %9417 to i64*
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9419 = getelementptr inbounds %struct.GPR, %struct.GPR* %9418, i32 0, i32 5
  %9420 = getelementptr inbounds %struct.Reg, %struct.Reg* %9419, i32 0, i32 0
  %RCX.i1080 = bitcast %union.anon* %9420 to i64*
  %9421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9422 = getelementptr inbounds %struct.GPR, %struct.GPR* %9421, i32 0, i32 15
  %9423 = getelementptr inbounds %struct.Reg, %struct.Reg* %9422, i32 0, i32 0
  %RBP.i1081 = bitcast %union.anon* %9423 to i64*
  %9424 = load i64, i64* %RBP.i1081
  %9425 = sub i64 %9424, 4
  %9426 = load i64, i64* %PC.i1079
  %9427 = add i64 %9426, 3
  store i64 %9427, i64* %PC.i1079
  %9428 = inttoptr i64 %9425 to i32*
  %9429 = load i32, i32* %9428
  %9430 = zext i32 %9429 to i64
  store i64 %9430, i64* %RCX.i1080, align 8
  store %struct.Memory* %loadMem_40b8ec, %struct.Memory** %MEMORY
  %loadMem_40b8ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %9431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9432 = getelementptr inbounds %struct.GPR, %struct.GPR* %9431, i32 0, i32 33
  %9433 = getelementptr inbounds %struct.Reg, %struct.Reg* %9432, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %9433 to i64*
  %9434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9435 = getelementptr inbounds %struct.GPR, %struct.GPR* %9434, i32 0, i32 5
  %9436 = getelementptr inbounds %struct.Reg, %struct.Reg* %9435, i32 0, i32 0
  %RCX.i1078 = bitcast %union.anon* %9436 to i64*
  %9437 = load i64, i64* %RCX.i1078
  %9438 = load i64, i64* %PC.i1077
  %9439 = add i64 %9438, 3
  store i64 %9439, i64* %PC.i1077
  %9440 = trunc i64 %9437 to i32
  %9441 = sub i32 %9440, 1
  %9442 = zext i32 %9441 to i64
  store i64 %9442, i64* %RCX.i1078, align 8
  %9443 = icmp ult i32 %9440, 1
  %9444 = zext i1 %9443 to i8
  %9445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9444, i8* %9445, align 1
  %9446 = and i32 %9441, 255
  %9447 = call i32 @llvm.ctpop.i32(i32 %9446)
  %9448 = trunc i32 %9447 to i8
  %9449 = and i8 %9448, 1
  %9450 = xor i8 %9449, 1
  %9451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9450, i8* %9451, align 1
  %9452 = xor i64 1, %9437
  %9453 = trunc i64 %9452 to i32
  %9454 = xor i32 %9453, %9441
  %9455 = lshr i32 %9454, 4
  %9456 = trunc i32 %9455 to i8
  %9457 = and i8 %9456, 1
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9457, i8* %9458, align 1
  %9459 = icmp eq i32 %9441, 0
  %9460 = zext i1 %9459 to i8
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9460, i8* %9461, align 1
  %9462 = lshr i32 %9441, 31
  %9463 = trunc i32 %9462 to i8
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9463, i8* %9464, align 1
  %9465 = lshr i32 %9440, 31
  %9466 = xor i32 %9462, %9465
  %9467 = add i32 %9466, %9465
  %9468 = icmp eq i32 %9467, 2
  %9469 = zext i1 %9468 to i8
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9469, i8* %9470, align 1
  store %struct.Memory* %loadMem_40b8ef, %struct.Memory** %MEMORY
  %loadMem_40b8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9472 = getelementptr inbounds %struct.GPR, %struct.GPR* %9471, i32 0, i32 33
  %9473 = getelementptr inbounds %struct.Reg, %struct.Reg* %9472, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %9473 to i64*
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9475 = getelementptr inbounds %struct.GPR, %struct.GPR* %9474, i32 0, i32 5
  %9476 = getelementptr inbounds %struct.Reg, %struct.Reg* %9475, i32 0, i32 0
  %ECX.i1075 = bitcast %union.anon* %9476 to i32*
  %9477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9478 = getelementptr inbounds %struct.GPR, %struct.GPR* %9477, i32 0, i32 7
  %9479 = getelementptr inbounds %struct.Reg, %struct.Reg* %9478, i32 0, i32 0
  %RDX.i1076 = bitcast %union.anon* %9479 to i64*
  %9480 = load i32, i32* %ECX.i1075
  %9481 = zext i32 %9480 to i64
  %9482 = load i64, i64* %PC.i1074
  %9483 = add i64 %9482, 3
  store i64 %9483, i64* %PC.i1074
  %9484 = shl i64 %9481, 32
  %9485 = ashr exact i64 %9484, 32
  store i64 %9485, i64* %RDX.i1076, align 8
  store %struct.Memory* %loadMem_40b8f2, %struct.Memory** %MEMORY
  %loadMem_40b8f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9487 = getelementptr inbounds %struct.GPR, %struct.GPR* %9486, i32 0, i32 33
  %9488 = getelementptr inbounds %struct.Reg, %struct.Reg* %9487, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %9488 to i64*
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9490 = getelementptr inbounds %struct.GPR, %struct.GPR* %9489, i32 0, i32 5
  %9491 = getelementptr inbounds %struct.Reg, %struct.Reg* %9490, i32 0, i32 0
  %RCX.i1072 = bitcast %union.anon* %9491 to i64*
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9493 = getelementptr inbounds %struct.GPR, %struct.GPR* %9492, i32 0, i32 7
  %9494 = getelementptr inbounds %struct.Reg, %struct.Reg* %9493, i32 0, i32 0
  %RDX.i1073 = bitcast %union.anon* %9494 to i64*
  %9495 = load i64, i64* %RDX.i1073
  %9496 = mul i64 %9495, 4
  %9497 = add i64 %9496, 11187184
  %9498 = load i64, i64* %PC.i1071
  %9499 = add i64 %9498, 7
  store i64 %9499, i64* %PC.i1071
  %9500 = inttoptr i64 %9497 to i32*
  %9501 = load i32, i32* %9500
  %9502 = zext i32 %9501 to i64
  store i64 %9502, i64* %RCX.i1072, align 8
  store %struct.Memory* %loadMem_40b8f5, %struct.Memory** %MEMORY
  %loadMem_40b8fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9504 = getelementptr inbounds %struct.GPR, %struct.GPR* %9503, i32 0, i32 33
  %9505 = getelementptr inbounds %struct.Reg, %struct.Reg* %9504, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %9505 to i64*
  %9506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9507 = getelementptr inbounds %struct.GPR, %struct.GPR* %9506, i32 0, i32 5
  %9508 = getelementptr inbounds %struct.Reg, %struct.Reg* %9507, i32 0, i32 0
  %ECX.i1069 = bitcast %union.anon* %9508 to i32*
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9510 = getelementptr inbounds %struct.GPR, %struct.GPR* %9509, i32 0, i32 15
  %9511 = getelementptr inbounds %struct.Reg, %struct.Reg* %9510, i32 0, i32 0
  %RBP.i1070 = bitcast %union.anon* %9511 to i64*
  %9512 = load i64, i64* %RBP.i1070
  %9513 = sub i64 %9512, 36
  %9514 = load i32, i32* %ECX.i1069
  %9515 = zext i32 %9514 to i64
  %9516 = load i64, i64* %PC.i1068
  %9517 = add i64 %9516, 3
  store i64 %9517, i64* %PC.i1068
  %9518 = inttoptr i64 %9513 to i32*
  store i32 %9514, i32* %9518
  store %struct.Memory* %loadMem_40b8fc, %struct.Memory** %MEMORY
  %loadMem_40b8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %9519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9520 = getelementptr inbounds %struct.GPR, %struct.GPR* %9519, i32 0, i32 33
  %9521 = getelementptr inbounds %struct.Reg, %struct.Reg* %9520, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %9521 to i64*
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9523 = getelementptr inbounds %struct.GPR, %struct.GPR* %9522, i32 0, i32 7
  %9524 = getelementptr inbounds %struct.Reg, %struct.Reg* %9523, i32 0, i32 0
  %RDX.i1066 = bitcast %union.anon* %9524 to i64*
  %9525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9526 = getelementptr inbounds %struct.GPR, %struct.GPR* %9525, i32 0, i32 15
  %9527 = getelementptr inbounds %struct.Reg, %struct.Reg* %9526, i32 0, i32 0
  %RBP.i1067 = bitcast %union.anon* %9527 to i64*
  %9528 = load i64, i64* %RBP.i1067
  %9529 = sub i64 %9528, 8
  %9530 = load i64, i64* %PC.i1065
  %9531 = add i64 %9530, 4
  store i64 %9531, i64* %PC.i1065
  %9532 = inttoptr i64 %9529 to i32*
  %9533 = load i32, i32* %9532
  %9534 = sext i32 %9533 to i64
  store i64 %9534, i64* %RDX.i1066, align 8
  store %struct.Memory* %loadMem_40b8ff, %struct.Memory** %MEMORY
  %loadMem_40b903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9536 = getelementptr inbounds %struct.GPR, %struct.GPR* %9535, i32 0, i32 33
  %9537 = getelementptr inbounds %struct.Reg, %struct.Reg* %9536, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %9537 to i64*
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9539 = getelementptr inbounds %struct.GPR, %struct.GPR* %9538, i32 0, i32 7
  %9540 = getelementptr inbounds %struct.Reg, %struct.Reg* %9539, i32 0, i32 0
  %RDX.i1064 = bitcast %union.anon* %9540 to i64*
  %9541 = load i64, i64* %RDX.i1064
  %9542 = load i64, i64* %PC.i1063
  %9543 = add i64 %9542, 7
  store i64 %9543, i64* %PC.i1063
  %9544 = sext i64 %9541 to i128
  %9545 = and i128 %9544, -18446744073709551616
  %9546 = zext i64 %9541 to i128
  %9547 = or i128 %9545, %9546
  %9548 = mul i128 744, %9547
  %9549 = trunc i128 %9548 to i64
  store i64 %9549, i64* %RDX.i1064, align 8
  %9550 = sext i64 %9549 to i128
  %9551 = icmp ne i128 %9550, %9548
  %9552 = zext i1 %9551 to i8
  %9553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9552, i8* %9553, align 1
  %9554 = trunc i128 %9548 to i32
  %9555 = and i32 %9554, 255
  %9556 = call i32 @llvm.ctpop.i32(i32 %9555)
  %9557 = trunc i32 %9556 to i8
  %9558 = and i8 %9557, 1
  %9559 = xor i8 %9558, 1
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9559, i8* %9560, align 1
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9561, align 1
  %9562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9562, align 1
  %9563 = lshr i64 %9549, 63
  %9564 = trunc i64 %9563 to i8
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9564, i8* %9565, align 1
  %9566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9552, i8* %9566, align 1
  store %struct.Memory* %loadMem_40b903, %struct.Memory** %MEMORY
  %loadMem_40b90a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9568 = getelementptr inbounds %struct.GPR, %struct.GPR* %9567, i32 0, i32 33
  %9569 = getelementptr inbounds %struct.Reg, %struct.Reg* %9568, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %9569 to i64*
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9571 = getelementptr inbounds %struct.GPR, %struct.GPR* %9570, i32 0, i32 1
  %9572 = getelementptr inbounds %struct.Reg, %struct.Reg* %9571, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %9572 to i64*
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9574 = getelementptr inbounds %struct.GPR, %struct.GPR* %9573, i32 0, i32 9
  %9575 = getelementptr inbounds %struct.Reg, %struct.Reg* %9574, i32 0, i32 0
  %RSI.i1062 = bitcast %union.anon* %9575 to i64*
  %9576 = load i64, i64* %RAX.i1061
  %9577 = load i64, i64* %PC.i1060
  %9578 = add i64 %9577, 3
  store i64 %9578, i64* %PC.i1060
  store i64 %9576, i64* %RSI.i1062, align 8
  store %struct.Memory* %loadMem_40b90a, %struct.Memory** %MEMORY
  %loadMem_40b90d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9580 = getelementptr inbounds %struct.GPR, %struct.GPR* %9579, i32 0, i32 33
  %9581 = getelementptr inbounds %struct.Reg, %struct.Reg* %9580, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %9581 to i64*
  %9582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9583 = getelementptr inbounds %struct.GPR, %struct.GPR* %9582, i32 0, i32 7
  %9584 = getelementptr inbounds %struct.Reg, %struct.Reg* %9583, i32 0, i32 0
  %RDX.i1058 = bitcast %union.anon* %9584 to i64*
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9586 = getelementptr inbounds %struct.GPR, %struct.GPR* %9585, i32 0, i32 9
  %9587 = getelementptr inbounds %struct.Reg, %struct.Reg* %9586, i32 0, i32 0
  %RSI.i1059 = bitcast %union.anon* %9587 to i64*
  %9588 = load i64, i64* %RSI.i1059
  %9589 = load i64, i64* %RDX.i1058
  %9590 = load i64, i64* %PC.i1057
  %9591 = add i64 %9590, 3
  store i64 %9591, i64* %PC.i1057
  %9592 = add i64 %9589, %9588
  store i64 %9592, i64* %RSI.i1059, align 8
  %9593 = icmp ult i64 %9592, %9588
  %9594 = icmp ult i64 %9592, %9589
  %9595 = or i1 %9593, %9594
  %9596 = zext i1 %9595 to i8
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9596, i8* %9597, align 1
  %9598 = trunc i64 %9592 to i32
  %9599 = and i32 %9598, 255
  %9600 = call i32 @llvm.ctpop.i32(i32 %9599)
  %9601 = trunc i32 %9600 to i8
  %9602 = and i8 %9601, 1
  %9603 = xor i8 %9602, 1
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9603, i8* %9604, align 1
  %9605 = xor i64 %9589, %9588
  %9606 = xor i64 %9605, %9592
  %9607 = lshr i64 %9606, 4
  %9608 = trunc i64 %9607 to i8
  %9609 = and i8 %9608, 1
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9609, i8* %9610, align 1
  %9611 = icmp eq i64 %9592, 0
  %9612 = zext i1 %9611 to i8
  %9613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9612, i8* %9613, align 1
  %9614 = lshr i64 %9592, 63
  %9615 = trunc i64 %9614 to i8
  %9616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9615, i8* %9616, align 1
  %9617 = lshr i64 %9588, 63
  %9618 = lshr i64 %9589, 63
  %9619 = xor i64 %9614, %9617
  %9620 = xor i64 %9614, %9618
  %9621 = add i64 %9619, %9620
  %9622 = icmp eq i64 %9621, 2
  %9623 = zext i1 %9622 to i8
  %9624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9623, i8* %9624, align 1
  store %struct.Memory* %loadMem_40b90d, %struct.Memory** %MEMORY
  %loadMem_40b910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9626 = getelementptr inbounds %struct.GPR, %struct.GPR* %9625, i32 0, i32 33
  %9627 = getelementptr inbounds %struct.Reg, %struct.Reg* %9626, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %9627 to i64*
  %9628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9629 = getelementptr inbounds %struct.GPR, %struct.GPR* %9628, i32 0, i32 9
  %9630 = getelementptr inbounds %struct.Reg, %struct.Reg* %9629, i32 0, i32 0
  %RSI.i1056 = bitcast %union.anon* %9630 to i64*
  %9631 = load i64, i64* %RSI.i1056
  %9632 = load i64, i64* %PC.i1055
  %9633 = add i64 %9632, 4
  store i64 %9633, i64* %PC.i1055
  %9634 = add i64 96, %9631
  store i64 %9634, i64* %RSI.i1056, align 8
  %9635 = icmp ult i64 %9634, %9631
  %9636 = icmp ult i64 %9634, 96
  %9637 = or i1 %9635, %9636
  %9638 = zext i1 %9637 to i8
  %9639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9638, i8* %9639, align 1
  %9640 = trunc i64 %9634 to i32
  %9641 = and i32 %9640, 255
  %9642 = call i32 @llvm.ctpop.i32(i32 %9641)
  %9643 = trunc i32 %9642 to i8
  %9644 = and i8 %9643, 1
  %9645 = xor i8 %9644, 1
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9645, i8* %9646, align 1
  %9647 = xor i64 96, %9631
  %9648 = xor i64 %9647, %9634
  %9649 = lshr i64 %9648, 4
  %9650 = trunc i64 %9649 to i8
  %9651 = and i8 %9650, 1
  %9652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9651, i8* %9652, align 1
  %9653 = icmp eq i64 %9634, 0
  %9654 = zext i1 %9653 to i8
  %9655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9654, i8* %9655, align 1
  %9656 = lshr i64 %9634, 63
  %9657 = trunc i64 %9656 to i8
  %9658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9657, i8* %9658, align 1
  %9659 = lshr i64 %9631, 63
  %9660 = xor i64 %9656, %9659
  %9661 = add i64 %9660, %9656
  %9662 = icmp eq i64 %9661, 2
  %9663 = zext i1 %9662 to i8
  %9664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9663, i8* %9664, align 1
  store %struct.Memory* %loadMem_40b910, %struct.Memory** %MEMORY
  %loadMem_40b914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9666 = getelementptr inbounds %struct.GPR, %struct.GPR* %9665, i32 0, i32 33
  %9667 = getelementptr inbounds %struct.Reg, %struct.Reg* %9666, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %9667 to i64*
  %9668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9669 = getelementptr inbounds %struct.GPR, %struct.GPR* %9668, i32 0, i32 7
  %9670 = getelementptr inbounds %struct.Reg, %struct.Reg* %9669, i32 0, i32 0
  %RDX.i1054 = bitcast %union.anon* %9670 to i64*
  %9671 = load i64, i64* %PC.i1053
  %9672 = add i64 %9671, 8
  store i64 %9672, i64* %PC.i1053
  %9673 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %9673, i64* %RDX.i1054, align 8
  store %struct.Memory* %loadMem_40b914, %struct.Memory** %MEMORY
  %loadMem_40b91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9675 = getelementptr inbounds %struct.GPR, %struct.GPR* %9674, i32 0, i32 33
  %9676 = getelementptr inbounds %struct.Reg, %struct.Reg* %9675, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %9676 to i64*
  %9677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9678 = getelementptr inbounds %struct.GPR, %struct.GPR* %9677, i32 0, i32 7
  %9679 = getelementptr inbounds %struct.Reg, %struct.Reg* %9678, i32 0, i32 0
  %RDX.i1051 = bitcast %union.anon* %9679 to i64*
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9681 = getelementptr inbounds %struct.GPR, %struct.GPR* %9680, i32 0, i32 9
  %9682 = getelementptr inbounds %struct.Reg, %struct.Reg* %9681, i32 0, i32 0
  %RSI.i1052 = bitcast %union.anon* %9682 to i64*
  %9683 = load i64, i64* %RDX.i1051
  %9684 = load i64, i64* %RSI.i1052
  %9685 = load i64, i64* %PC.i1050
  %9686 = add i64 %9685, 3
  store i64 %9686, i64* %PC.i1050
  %9687 = inttoptr i64 %9683 to i64*
  store i64 %9684, i64* %9687
  store %struct.Memory* %loadMem_40b91c, %struct.Memory** %MEMORY
  %loadMem_40b91f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9689 = getelementptr inbounds %struct.GPR, %struct.GPR* %9688, i32 0, i32 33
  %9690 = getelementptr inbounds %struct.Reg, %struct.Reg* %9689, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %9690 to i64*
  %9691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9692 = getelementptr inbounds %struct.GPR, %struct.GPR* %9691, i32 0, i32 7
  %9693 = getelementptr inbounds %struct.Reg, %struct.Reg* %9692, i32 0, i32 0
  %RDX.i1048 = bitcast %union.anon* %9693 to i64*
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9695 = getelementptr inbounds %struct.GPR, %struct.GPR* %9694, i32 0, i32 15
  %9696 = getelementptr inbounds %struct.Reg, %struct.Reg* %9695, i32 0, i32 0
  %RBP.i1049 = bitcast %union.anon* %9696 to i64*
  %9697 = load i64, i64* %RBP.i1049
  %9698 = sub i64 %9697, 8
  %9699 = load i64, i64* %PC.i1047
  %9700 = add i64 %9699, 4
  store i64 %9700, i64* %PC.i1047
  %9701 = inttoptr i64 %9698 to i32*
  %9702 = load i32, i32* %9701
  %9703 = sext i32 %9702 to i64
  store i64 %9703, i64* %RDX.i1048, align 8
  store %struct.Memory* %loadMem_40b91f, %struct.Memory** %MEMORY
  %loadMem_40b923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9705 = getelementptr inbounds %struct.GPR, %struct.GPR* %9704, i32 0, i32 33
  %9706 = getelementptr inbounds %struct.Reg, %struct.Reg* %9705, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %9706 to i64*
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9708 = getelementptr inbounds %struct.GPR, %struct.GPR* %9707, i32 0, i32 7
  %9709 = getelementptr inbounds %struct.Reg, %struct.Reg* %9708, i32 0, i32 0
  %RDX.i1046 = bitcast %union.anon* %9709 to i64*
  %9710 = load i64, i64* %RDX.i1046
  %9711 = load i64, i64* %PC.i1045
  %9712 = add i64 %9711, 7
  store i64 %9712, i64* %PC.i1045
  %9713 = sext i64 %9710 to i128
  %9714 = and i128 %9713, -18446744073709551616
  %9715 = zext i64 %9710 to i128
  %9716 = or i128 %9714, %9715
  %9717 = mul i128 744, %9716
  %9718 = trunc i128 %9717 to i64
  store i64 %9718, i64* %RDX.i1046, align 8
  %9719 = sext i64 %9718 to i128
  %9720 = icmp ne i128 %9719, %9717
  %9721 = zext i1 %9720 to i8
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9721, i8* %9722, align 1
  %9723 = trunc i128 %9717 to i32
  %9724 = and i32 %9723, 255
  %9725 = call i32 @llvm.ctpop.i32(i32 %9724)
  %9726 = trunc i32 %9725 to i8
  %9727 = and i8 %9726, 1
  %9728 = xor i8 %9727, 1
  %9729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9728, i8* %9729, align 1
  %9730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9730, align 1
  %9731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9731, align 1
  %9732 = lshr i64 %9718, 63
  %9733 = trunc i64 %9732 to i8
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9733, i8* %9734, align 1
  %9735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9721, i8* %9735, align 1
  store %struct.Memory* %loadMem_40b923, %struct.Memory** %MEMORY
  %loadMem_40b92a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9737 = getelementptr inbounds %struct.GPR, %struct.GPR* %9736, i32 0, i32 33
  %9738 = getelementptr inbounds %struct.Reg, %struct.Reg* %9737, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %9738 to i64*
  %9739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9740 = getelementptr inbounds %struct.GPR, %struct.GPR* %9739, i32 0, i32 1
  %9741 = getelementptr inbounds %struct.Reg, %struct.Reg* %9740, i32 0, i32 0
  %RAX.i1043 = bitcast %union.anon* %9741 to i64*
  %9742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9743 = getelementptr inbounds %struct.GPR, %struct.GPR* %9742, i32 0, i32 9
  %9744 = getelementptr inbounds %struct.Reg, %struct.Reg* %9743, i32 0, i32 0
  %RSI.i1044 = bitcast %union.anon* %9744 to i64*
  %9745 = load i64, i64* %RAX.i1043
  %9746 = load i64, i64* %PC.i1042
  %9747 = add i64 %9746, 3
  store i64 %9747, i64* %PC.i1042
  store i64 %9745, i64* %RSI.i1044, align 8
  store %struct.Memory* %loadMem_40b92a, %struct.Memory** %MEMORY
  %loadMem_40b92d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9749 = getelementptr inbounds %struct.GPR, %struct.GPR* %9748, i32 0, i32 33
  %9750 = getelementptr inbounds %struct.Reg, %struct.Reg* %9749, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %9750 to i64*
  %9751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9752 = getelementptr inbounds %struct.GPR, %struct.GPR* %9751, i32 0, i32 7
  %9753 = getelementptr inbounds %struct.Reg, %struct.Reg* %9752, i32 0, i32 0
  %RDX.i1040 = bitcast %union.anon* %9753 to i64*
  %9754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9755 = getelementptr inbounds %struct.GPR, %struct.GPR* %9754, i32 0, i32 9
  %9756 = getelementptr inbounds %struct.Reg, %struct.Reg* %9755, i32 0, i32 0
  %RSI.i1041 = bitcast %union.anon* %9756 to i64*
  %9757 = load i64, i64* %RSI.i1041
  %9758 = load i64, i64* %RDX.i1040
  %9759 = load i64, i64* %PC.i1039
  %9760 = add i64 %9759, 3
  store i64 %9760, i64* %PC.i1039
  %9761 = add i64 %9758, %9757
  store i64 %9761, i64* %RSI.i1041, align 8
  %9762 = icmp ult i64 %9761, %9757
  %9763 = icmp ult i64 %9761, %9758
  %9764 = or i1 %9762, %9763
  %9765 = zext i1 %9764 to i8
  %9766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9765, i8* %9766, align 1
  %9767 = trunc i64 %9761 to i32
  %9768 = and i32 %9767, 255
  %9769 = call i32 @llvm.ctpop.i32(i32 %9768)
  %9770 = trunc i32 %9769 to i8
  %9771 = and i8 %9770, 1
  %9772 = xor i8 %9771, 1
  %9773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9772, i8* %9773, align 1
  %9774 = xor i64 %9758, %9757
  %9775 = xor i64 %9774, %9761
  %9776 = lshr i64 %9775, 4
  %9777 = trunc i64 %9776 to i8
  %9778 = and i8 %9777, 1
  %9779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9778, i8* %9779, align 1
  %9780 = icmp eq i64 %9761, 0
  %9781 = zext i1 %9780 to i8
  %9782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9781, i8* %9782, align 1
  %9783 = lshr i64 %9761, 63
  %9784 = trunc i64 %9783 to i8
  %9785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9784, i8* %9785, align 1
  %9786 = lshr i64 %9757, 63
  %9787 = lshr i64 %9758, 63
  %9788 = xor i64 %9783, %9786
  %9789 = xor i64 %9783, %9787
  %9790 = add i64 %9788, %9789
  %9791 = icmp eq i64 %9790, 2
  %9792 = zext i1 %9791 to i8
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9792, i8* %9793, align 1
  store %struct.Memory* %loadMem_40b92d, %struct.Memory** %MEMORY
  %loadMem_40b930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9795 = getelementptr inbounds %struct.GPR, %struct.GPR* %9794, i32 0, i32 33
  %9796 = getelementptr inbounds %struct.Reg, %struct.Reg* %9795, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %9796 to i64*
  %9797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9798 = getelementptr inbounds %struct.GPR, %struct.GPR* %9797, i32 0, i32 5
  %9799 = getelementptr inbounds %struct.Reg, %struct.Reg* %9798, i32 0, i32 0
  %RCX.i1037 = bitcast %union.anon* %9799 to i64*
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9801 = getelementptr inbounds %struct.GPR, %struct.GPR* %9800, i32 0, i32 9
  %9802 = getelementptr inbounds %struct.Reg, %struct.Reg* %9801, i32 0, i32 0
  %RSI.i1038 = bitcast %union.anon* %9802 to i64*
  %9803 = load i64, i64* %RSI.i1038
  %9804 = add i64 %9803, 96
  %9805 = load i64, i64* %PC.i1036
  %9806 = add i64 %9805, 3
  store i64 %9806, i64* %PC.i1036
  %9807 = inttoptr i64 %9804 to i32*
  %9808 = load i32, i32* %9807
  %9809 = zext i32 %9808 to i64
  store i64 %9809, i64* %RCX.i1037, align 8
  store %struct.Memory* %loadMem_40b930, %struct.Memory** %MEMORY
  %loadMem_40b933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9811 = getelementptr inbounds %struct.GPR, %struct.GPR* %9810, i32 0, i32 33
  %9812 = getelementptr inbounds %struct.Reg, %struct.Reg* %9811, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %9812 to i64*
  %9813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9814 = getelementptr inbounds %struct.GPR, %struct.GPR* %9813, i32 0, i32 7
  %9815 = getelementptr inbounds %struct.Reg, %struct.Reg* %9814, i32 0, i32 0
  %RDX.i1035 = bitcast %union.anon* %9815 to i64*
  %9816 = load i64, i64* %PC.i1034
  %9817 = add i64 %9816, 8
  store i64 %9817, i64* %PC.i1034
  %9818 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %9818, i64* %RDX.i1035, align 8
  store %struct.Memory* %loadMem_40b933, %struct.Memory** %MEMORY
  %loadMem_40b93b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9820 = getelementptr inbounds %struct.GPR, %struct.GPR* %9819, i32 0, i32 33
  %9821 = getelementptr inbounds %struct.Reg, %struct.Reg* %9820, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %9821 to i64*
  %9822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9823 = getelementptr inbounds %struct.GPR, %struct.GPR* %9822, i32 0, i32 7
  %9824 = getelementptr inbounds %struct.Reg, %struct.Reg* %9823, i32 0, i32 0
  %RDX.i1032 = bitcast %union.anon* %9824 to i64*
  %9825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9826 = getelementptr inbounds %struct.GPR, %struct.GPR* %9825, i32 0, i32 9
  %9827 = getelementptr inbounds %struct.Reg, %struct.Reg* %9826, i32 0, i32 0
  %RSI.i1033 = bitcast %union.anon* %9827 to i64*
  %9828 = load i64, i64* %RDX.i1032
  %9829 = load i64, i64* %PC.i1031
  %9830 = add i64 %9829, 3
  store i64 %9830, i64* %PC.i1031
  store i64 %9828, i64* %RSI.i1033, align 8
  store %struct.Memory* %loadMem_40b93b, %struct.Memory** %MEMORY
  %loadMem_40b93e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9832 = getelementptr inbounds %struct.GPR, %struct.GPR* %9831, i32 0, i32 33
  %9833 = getelementptr inbounds %struct.Reg, %struct.Reg* %9832, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %9833 to i64*
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9835 = getelementptr inbounds %struct.GPR, %struct.GPR* %9834, i32 0, i32 9
  %9836 = getelementptr inbounds %struct.Reg, %struct.Reg* %9835, i32 0, i32 0
  %RSI.i1030 = bitcast %union.anon* %9836 to i64*
  %9837 = load i64, i64* %RSI.i1030
  %9838 = load i64, i64* %PC.i1029
  %9839 = add i64 %9838, 4
  store i64 %9839, i64* %PC.i1029
  %9840 = add i64 16, %9837
  store i64 %9840, i64* %RSI.i1030, align 8
  %9841 = icmp ult i64 %9840, %9837
  %9842 = icmp ult i64 %9840, 16
  %9843 = or i1 %9841, %9842
  %9844 = zext i1 %9843 to i8
  %9845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9844, i8* %9845, align 1
  %9846 = trunc i64 %9840 to i32
  %9847 = and i32 %9846, 255
  %9848 = call i32 @llvm.ctpop.i32(i32 %9847)
  %9849 = trunc i32 %9848 to i8
  %9850 = and i8 %9849, 1
  %9851 = xor i8 %9850, 1
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9851, i8* %9852, align 1
  %9853 = xor i64 16, %9837
  %9854 = xor i64 %9853, %9840
  %9855 = lshr i64 %9854, 4
  %9856 = trunc i64 %9855 to i8
  %9857 = and i8 %9856, 1
  %9858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9857, i8* %9858, align 1
  %9859 = icmp eq i64 %9840, 0
  %9860 = zext i1 %9859 to i8
  %9861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9860, i8* %9861, align 1
  %9862 = lshr i64 %9840, 63
  %9863 = trunc i64 %9862 to i8
  %9864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9863, i8* %9864, align 1
  %9865 = lshr i64 %9837, 63
  %9866 = xor i64 %9862, %9865
  %9867 = add i64 %9866, %9862
  %9868 = icmp eq i64 %9867, 2
  %9869 = zext i1 %9868 to i8
  %9870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9869, i8* %9870, align 1
  store %struct.Memory* %loadMem_40b93e, %struct.Memory** %MEMORY
  %loadMem_40b942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9872 = getelementptr inbounds %struct.GPR, %struct.GPR* %9871, i32 0, i32 33
  %9873 = getelementptr inbounds %struct.Reg, %struct.Reg* %9872, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %9873 to i64*
  %9874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9875 = getelementptr inbounds %struct.GPR, %struct.GPR* %9874, i32 0, i32 9
  %9876 = getelementptr inbounds %struct.Reg, %struct.Reg* %9875, i32 0, i32 0
  %RSI.i1028 = bitcast %union.anon* %9876 to i64*
  %9877 = load i64, i64* %RSI.i1028
  %9878 = load i64, i64* %PC.i1027
  %9879 = add i64 %9878, 8
  store i64 %9879, i64* %PC.i1027
  store i64 %9877, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40b942, %struct.Memory** %MEMORY
  %loadMem_40b94a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9881 = getelementptr inbounds %struct.GPR, %struct.GPR* %9880, i32 0, i32 33
  %9882 = getelementptr inbounds %struct.Reg, %struct.Reg* %9881, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %9882 to i64*
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9884 = getelementptr inbounds %struct.GPR, %struct.GPR* %9883, i32 0, i32 5
  %9885 = getelementptr inbounds %struct.Reg, %struct.Reg* %9884, i32 0, i32 0
  %ECX.i1025 = bitcast %union.anon* %9885 to i32*
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9887 = getelementptr inbounds %struct.GPR, %struct.GPR* %9886, i32 0, i32 7
  %9888 = getelementptr inbounds %struct.Reg, %struct.Reg* %9887, i32 0, i32 0
  %RDX.i1026 = bitcast %union.anon* %9888 to i64*
  %9889 = load i64, i64* %RDX.i1026
  %9890 = add i64 %9889, 8
  %9891 = load i32, i32* %ECX.i1025
  %9892 = zext i32 %9891 to i64
  %9893 = load i64, i64* %PC.i1024
  %9894 = add i64 %9893, 3
  store i64 %9894, i64* %PC.i1024
  %9895 = inttoptr i64 %9890 to i32*
  store i32 %9891, i32* %9895
  store %struct.Memory* %loadMem_40b94a, %struct.Memory** %MEMORY
  %loadMem_40b94d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9897 = getelementptr inbounds %struct.GPR, %struct.GPR* %9896, i32 0, i32 33
  %9898 = getelementptr inbounds %struct.Reg, %struct.Reg* %9897, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %9898 to i64*
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9900 = getelementptr inbounds %struct.GPR, %struct.GPR* %9899, i32 0, i32 5
  %9901 = getelementptr inbounds %struct.Reg, %struct.Reg* %9900, i32 0, i32 0
  %RCX.i1022 = bitcast %union.anon* %9901 to i64*
  %9902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9903 = getelementptr inbounds %struct.GPR, %struct.GPR* %9902, i32 0, i32 15
  %9904 = getelementptr inbounds %struct.Reg, %struct.Reg* %9903, i32 0, i32 0
  %RBP.i1023 = bitcast %union.anon* %9904 to i64*
  %9905 = load i64, i64* %RBP.i1023
  %9906 = sub i64 %9905, 4
  %9907 = load i64, i64* %PC.i1021
  %9908 = add i64 %9907, 3
  store i64 %9908, i64* %PC.i1021
  %9909 = inttoptr i64 %9906 to i32*
  %9910 = load i32, i32* %9909
  %9911 = zext i32 %9910 to i64
  store i64 %9911, i64* %RCX.i1022, align 8
  store %struct.Memory* %loadMem_40b94d, %struct.Memory** %MEMORY
  %loadMem_40b950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9913 = getelementptr inbounds %struct.GPR, %struct.GPR* %9912, i32 0, i32 33
  %9914 = getelementptr inbounds %struct.Reg, %struct.Reg* %9913, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %9914 to i64*
  %9915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9916 = getelementptr inbounds %struct.GPR, %struct.GPR* %9915, i32 0, i32 5
  %9917 = getelementptr inbounds %struct.Reg, %struct.Reg* %9916, i32 0, i32 0
  %RCX.i1020 = bitcast %union.anon* %9917 to i64*
  %9918 = load i64, i64* %RCX.i1020
  %9919 = load i64, i64* %PC.i1019
  %9920 = add i64 %9919, 3
  store i64 %9920, i64* %PC.i1019
  %9921 = trunc i64 %9918 to i32
  %9922 = sub i32 %9921, 1
  %9923 = zext i32 %9922 to i64
  store i64 %9923, i64* %RCX.i1020, align 8
  %9924 = icmp ult i32 %9921, 1
  %9925 = zext i1 %9924 to i8
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9925, i8* %9926, align 1
  %9927 = and i32 %9922, 255
  %9928 = call i32 @llvm.ctpop.i32(i32 %9927)
  %9929 = trunc i32 %9928 to i8
  %9930 = and i8 %9929, 1
  %9931 = xor i8 %9930, 1
  %9932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9931, i8* %9932, align 1
  %9933 = xor i64 1, %9918
  %9934 = trunc i64 %9933 to i32
  %9935 = xor i32 %9934, %9922
  %9936 = lshr i32 %9935, 4
  %9937 = trunc i32 %9936 to i8
  %9938 = and i8 %9937, 1
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9938, i8* %9939, align 1
  %9940 = icmp eq i32 %9922, 0
  %9941 = zext i1 %9940 to i8
  %9942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9941, i8* %9942, align 1
  %9943 = lshr i32 %9922, 31
  %9944 = trunc i32 %9943 to i8
  %9945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9944, i8* %9945, align 1
  %9946 = lshr i32 %9921, 31
  %9947 = xor i32 %9943, %9946
  %9948 = add i32 %9947, %9946
  %9949 = icmp eq i32 %9948, 2
  %9950 = zext i1 %9949 to i8
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9950, i8* %9951, align 1
  store %struct.Memory* %loadMem_40b950, %struct.Memory** %MEMORY
  %loadMem_40b953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9953 = getelementptr inbounds %struct.GPR, %struct.GPR* %9952, i32 0, i32 33
  %9954 = getelementptr inbounds %struct.Reg, %struct.Reg* %9953, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %9954 to i64*
  %9955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9956 = getelementptr inbounds %struct.GPR, %struct.GPR* %9955, i32 0, i32 5
  %9957 = getelementptr inbounds %struct.Reg, %struct.Reg* %9956, i32 0, i32 0
  %ECX.i1017 = bitcast %union.anon* %9957 to i32*
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9959 = getelementptr inbounds %struct.GPR, %struct.GPR* %9958, i32 0, i32 7
  %9960 = getelementptr inbounds %struct.Reg, %struct.Reg* %9959, i32 0, i32 0
  %RDX.i1018 = bitcast %union.anon* %9960 to i64*
  %9961 = load i32, i32* %ECX.i1017
  %9962 = zext i32 %9961 to i64
  %9963 = load i64, i64* %PC.i1016
  %9964 = add i64 %9963, 3
  store i64 %9964, i64* %PC.i1016
  %9965 = shl i64 %9962, 32
  %9966 = ashr exact i64 %9965, 32
  store i64 %9966, i64* %RDX.i1018, align 8
  store %struct.Memory* %loadMem_40b953, %struct.Memory** %MEMORY
  %loadMem_40b956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9968 = getelementptr inbounds %struct.GPR, %struct.GPR* %9967, i32 0, i32 33
  %9969 = getelementptr inbounds %struct.Reg, %struct.Reg* %9968, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %9969 to i64*
  %9970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9971 = getelementptr inbounds %struct.GPR, %struct.GPR* %9970, i32 0, i32 5
  %9972 = getelementptr inbounds %struct.Reg, %struct.Reg* %9971, i32 0, i32 0
  %RCX.i1014 = bitcast %union.anon* %9972 to i64*
  %9973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9974 = getelementptr inbounds %struct.GPR, %struct.GPR* %9973, i32 0, i32 7
  %9975 = getelementptr inbounds %struct.Reg, %struct.Reg* %9974, i32 0, i32 0
  %RDX.i1015 = bitcast %union.anon* %9975 to i64*
  %9976 = load i64, i64* %RDX.i1015
  %9977 = mul i64 %9976, 4
  %9978 = add i64 %9977, 11187184
  %9979 = load i64, i64* %PC.i1013
  %9980 = add i64 %9979, 7
  store i64 %9980, i64* %PC.i1013
  %9981 = inttoptr i64 %9978 to i32*
  %9982 = load i32, i32* %9981
  %9983 = zext i32 %9982 to i64
  store i64 %9983, i64* %RCX.i1014, align 8
  store %struct.Memory* %loadMem_40b956, %struct.Memory** %MEMORY
  %loadMem_40b95d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9985 = getelementptr inbounds %struct.GPR, %struct.GPR* %9984, i32 0, i32 33
  %9986 = getelementptr inbounds %struct.Reg, %struct.Reg* %9985, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %9986 to i64*
  %9987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9988 = getelementptr inbounds %struct.GPR, %struct.GPR* %9987, i32 0, i32 7
  %9989 = getelementptr inbounds %struct.Reg, %struct.Reg* %9988, i32 0, i32 0
  %RDX.i1011 = bitcast %union.anon* %9989 to i64*
  %9990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9991 = getelementptr inbounds %struct.GPR, %struct.GPR* %9990, i32 0, i32 15
  %9992 = getelementptr inbounds %struct.Reg, %struct.Reg* %9991, i32 0, i32 0
  %RBP.i1012 = bitcast %union.anon* %9992 to i64*
  %9993 = load i64, i64* %RBP.i1012
  %9994 = sub i64 %9993, 8
  %9995 = load i64, i64* %PC.i1010
  %9996 = add i64 %9995, 4
  store i64 %9996, i64* %PC.i1010
  %9997 = inttoptr i64 %9994 to i32*
  %9998 = load i32, i32* %9997
  %9999 = sext i32 %9998 to i64
  store i64 %9999, i64* %RDX.i1011, align 8
  store %struct.Memory* %loadMem_40b95d, %struct.Memory** %MEMORY
  %loadMem_40b961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10001 = getelementptr inbounds %struct.GPR, %struct.GPR* %10000, i32 0, i32 33
  %10002 = getelementptr inbounds %struct.Reg, %struct.Reg* %10001, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %10002 to i64*
  %10003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10004 = getelementptr inbounds %struct.GPR, %struct.GPR* %10003, i32 0, i32 7
  %10005 = getelementptr inbounds %struct.Reg, %struct.Reg* %10004, i32 0, i32 0
  %RDX.i1009 = bitcast %union.anon* %10005 to i64*
  %10006 = load i64, i64* %RDX.i1009
  %10007 = load i64, i64* %PC.i1008
  %10008 = add i64 %10007, 7
  store i64 %10008, i64* %PC.i1008
  %10009 = sext i64 %10006 to i128
  %10010 = and i128 %10009, -18446744073709551616
  %10011 = zext i64 %10006 to i128
  %10012 = or i128 %10010, %10011
  %10013 = mul i128 744, %10012
  %10014 = trunc i128 %10013 to i64
  store i64 %10014, i64* %RDX.i1009, align 8
  %10015 = sext i64 %10014 to i128
  %10016 = icmp ne i128 %10015, %10013
  %10017 = zext i1 %10016 to i8
  %10018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10017, i8* %10018, align 1
  %10019 = trunc i128 %10013 to i32
  %10020 = and i32 %10019, 255
  %10021 = call i32 @llvm.ctpop.i32(i32 %10020)
  %10022 = trunc i32 %10021 to i8
  %10023 = and i8 %10022, 1
  %10024 = xor i8 %10023, 1
  %10025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10024, i8* %10025, align 1
  %10026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10026, align 1
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10027, align 1
  %10028 = lshr i64 %10014, 63
  %10029 = trunc i64 %10028 to i8
  %10030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10029, i8* %10030, align 1
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10017, i8* %10031, align 1
  store %struct.Memory* %loadMem_40b961, %struct.Memory** %MEMORY
  %loadMem_40b968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10033 = getelementptr inbounds %struct.GPR, %struct.GPR* %10032, i32 0, i32 33
  %10034 = getelementptr inbounds %struct.Reg, %struct.Reg* %10033, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %10034 to i64*
  %10035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10036 = getelementptr inbounds %struct.GPR, %struct.GPR* %10035, i32 0, i32 1
  %10037 = getelementptr inbounds %struct.Reg, %struct.Reg* %10036, i32 0, i32 0
  %RAX.i1006 = bitcast %union.anon* %10037 to i64*
  %10038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10039 = getelementptr inbounds %struct.GPR, %struct.GPR* %10038, i32 0, i32 9
  %10040 = getelementptr inbounds %struct.Reg, %struct.Reg* %10039, i32 0, i32 0
  %RSI.i1007 = bitcast %union.anon* %10040 to i64*
  %10041 = load i64, i64* %RAX.i1006
  %10042 = load i64, i64* %PC.i1005
  %10043 = add i64 %10042, 3
  store i64 %10043, i64* %PC.i1005
  store i64 %10041, i64* %RSI.i1007, align 8
  store %struct.Memory* %loadMem_40b968, %struct.Memory** %MEMORY
  %loadMem_40b96b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10045 = getelementptr inbounds %struct.GPR, %struct.GPR* %10044, i32 0, i32 33
  %10046 = getelementptr inbounds %struct.Reg, %struct.Reg* %10045, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %10046 to i64*
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10048 = getelementptr inbounds %struct.GPR, %struct.GPR* %10047, i32 0, i32 7
  %10049 = getelementptr inbounds %struct.Reg, %struct.Reg* %10048, i32 0, i32 0
  %RDX.i1003 = bitcast %union.anon* %10049 to i64*
  %10050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10051 = getelementptr inbounds %struct.GPR, %struct.GPR* %10050, i32 0, i32 9
  %10052 = getelementptr inbounds %struct.Reg, %struct.Reg* %10051, i32 0, i32 0
  %RSI.i1004 = bitcast %union.anon* %10052 to i64*
  %10053 = load i64, i64* %RSI.i1004
  %10054 = load i64, i64* %RDX.i1003
  %10055 = load i64, i64* %PC.i1002
  %10056 = add i64 %10055, 3
  store i64 %10056, i64* %PC.i1002
  %10057 = add i64 %10054, %10053
  store i64 %10057, i64* %RSI.i1004, align 8
  %10058 = icmp ult i64 %10057, %10053
  %10059 = icmp ult i64 %10057, %10054
  %10060 = or i1 %10058, %10059
  %10061 = zext i1 %10060 to i8
  %10062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10061, i8* %10062, align 1
  %10063 = trunc i64 %10057 to i32
  %10064 = and i32 %10063, 255
  %10065 = call i32 @llvm.ctpop.i32(i32 %10064)
  %10066 = trunc i32 %10065 to i8
  %10067 = and i8 %10066, 1
  %10068 = xor i8 %10067, 1
  %10069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10068, i8* %10069, align 1
  %10070 = xor i64 %10054, %10053
  %10071 = xor i64 %10070, %10057
  %10072 = lshr i64 %10071, 4
  %10073 = trunc i64 %10072 to i8
  %10074 = and i8 %10073, 1
  %10075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10074, i8* %10075, align 1
  %10076 = icmp eq i64 %10057, 0
  %10077 = zext i1 %10076 to i8
  %10078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10077, i8* %10078, align 1
  %10079 = lshr i64 %10057, 63
  %10080 = trunc i64 %10079 to i8
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10080, i8* %10081, align 1
  %10082 = lshr i64 %10053, 63
  %10083 = lshr i64 %10054, 63
  %10084 = xor i64 %10079, %10082
  %10085 = xor i64 %10079, %10083
  %10086 = add i64 %10084, %10085
  %10087 = icmp eq i64 %10086, 2
  %10088 = zext i1 %10087 to i8
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10088, i8* %10089, align 1
  store %struct.Memory* %loadMem_40b96b, %struct.Memory** %MEMORY
  %loadMem_40b96e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10091 = getelementptr inbounds %struct.GPR, %struct.GPR* %10090, i32 0, i32 33
  %10092 = getelementptr inbounds %struct.Reg, %struct.Reg* %10091, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %10092 to i64*
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10094 = getelementptr inbounds %struct.GPR, %struct.GPR* %10093, i32 0, i32 7
  %10095 = getelementptr inbounds %struct.Reg, %struct.Reg* %10094, i32 0, i32 0
  %RDX.i1000 = bitcast %union.anon* %10095 to i64*
  %10096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10097 = getelementptr inbounds %struct.GPR, %struct.GPR* %10096, i32 0, i32 15
  %10098 = getelementptr inbounds %struct.Reg, %struct.Reg* %10097, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %10098 to i64*
  %10099 = load i64, i64* %RBP.i1001
  %10100 = sub i64 %10099, 8
  %10101 = load i64, i64* %PC.i999
  %10102 = add i64 %10101, 4
  store i64 %10102, i64* %PC.i999
  %10103 = inttoptr i64 %10100 to i32*
  %10104 = load i32, i32* %10103
  %10105 = sext i32 %10104 to i64
  store i64 %10105, i64* %RDX.i1000, align 8
  store %struct.Memory* %loadMem_40b96e, %struct.Memory** %MEMORY
  %loadMem_40b972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10107 = getelementptr inbounds %struct.GPR, %struct.GPR* %10106, i32 0, i32 33
  %10108 = getelementptr inbounds %struct.Reg, %struct.Reg* %10107, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %10108 to i64*
  %10109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10110 = getelementptr inbounds %struct.GPR, %struct.GPR* %10109, i32 0, i32 7
  %10111 = getelementptr inbounds %struct.Reg, %struct.Reg* %10110, i32 0, i32 0
  %RDX.i998 = bitcast %union.anon* %10111 to i64*
  %10112 = load i64, i64* %RDX.i998
  %10113 = load i64, i64* %PC.i997
  %10114 = add i64 %10113, 7
  store i64 %10114, i64* %PC.i997
  %10115 = sext i64 %10112 to i128
  %10116 = and i128 %10115, -18446744073709551616
  %10117 = zext i64 %10112 to i128
  %10118 = or i128 %10116, %10117
  %10119 = mul i128 744, %10118
  %10120 = trunc i128 %10119 to i64
  store i64 %10120, i64* %RDX.i998, align 8
  %10121 = sext i64 %10120 to i128
  %10122 = icmp ne i128 %10121, %10119
  %10123 = zext i1 %10122 to i8
  %10124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10123, i8* %10124, align 1
  %10125 = trunc i128 %10119 to i32
  %10126 = and i32 %10125, 255
  %10127 = call i32 @llvm.ctpop.i32(i32 %10126)
  %10128 = trunc i32 %10127 to i8
  %10129 = and i8 %10128, 1
  %10130 = xor i8 %10129, 1
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10130, i8* %10131, align 1
  %10132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10132, align 1
  %10133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10133, align 1
  %10134 = lshr i64 %10120, 63
  %10135 = trunc i64 %10134 to i8
  %10136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10135, i8* %10136, align 1
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10123, i8* %10137, align 1
  store %struct.Memory* %loadMem_40b972, %struct.Memory** %MEMORY
  %loadMem_40b979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10139 = getelementptr inbounds %struct.GPR, %struct.GPR* %10138, i32 0, i32 33
  %10140 = getelementptr inbounds %struct.Reg, %struct.Reg* %10139, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %10140 to i64*
  %10141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10142 = getelementptr inbounds %struct.GPR, %struct.GPR* %10141, i32 0, i32 1
  %10143 = getelementptr inbounds %struct.Reg, %struct.Reg* %10142, i32 0, i32 0
  %RAX.i995 = bitcast %union.anon* %10143 to i64*
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10145 = getelementptr inbounds %struct.GPR, %struct.GPR* %10144, i32 0, i32 11
  %10146 = getelementptr inbounds %struct.Reg, %struct.Reg* %10145, i32 0, i32 0
  %RDI.i996 = bitcast %union.anon* %10146 to i64*
  %10147 = load i64, i64* %RAX.i995
  %10148 = load i64, i64* %PC.i994
  %10149 = add i64 %10148, 3
  store i64 %10149, i64* %PC.i994
  store i64 %10147, i64* %RDI.i996, align 8
  store %struct.Memory* %loadMem_40b979, %struct.Memory** %MEMORY
  %loadMem_40b97c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10151 = getelementptr inbounds %struct.GPR, %struct.GPR* %10150, i32 0, i32 33
  %10152 = getelementptr inbounds %struct.Reg, %struct.Reg* %10151, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %10152 to i64*
  %10153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10154 = getelementptr inbounds %struct.GPR, %struct.GPR* %10153, i32 0, i32 7
  %10155 = getelementptr inbounds %struct.Reg, %struct.Reg* %10154, i32 0, i32 0
  %RDX.i992 = bitcast %union.anon* %10155 to i64*
  %10156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10157 = getelementptr inbounds %struct.GPR, %struct.GPR* %10156, i32 0, i32 11
  %10158 = getelementptr inbounds %struct.Reg, %struct.Reg* %10157, i32 0, i32 0
  %RDI.i993 = bitcast %union.anon* %10158 to i64*
  %10159 = load i64, i64* %RDI.i993
  %10160 = load i64, i64* %RDX.i992
  %10161 = load i64, i64* %PC.i991
  %10162 = add i64 %10161, 3
  store i64 %10162, i64* %PC.i991
  %10163 = add i64 %10160, %10159
  store i64 %10163, i64* %RDI.i993, align 8
  %10164 = icmp ult i64 %10163, %10159
  %10165 = icmp ult i64 %10163, %10160
  %10166 = or i1 %10164, %10165
  %10167 = zext i1 %10166 to i8
  %10168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10167, i8* %10168, align 1
  %10169 = trunc i64 %10163 to i32
  %10170 = and i32 %10169, 255
  %10171 = call i32 @llvm.ctpop.i32(i32 %10170)
  %10172 = trunc i32 %10171 to i8
  %10173 = and i8 %10172, 1
  %10174 = xor i8 %10173, 1
  %10175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10174, i8* %10175, align 1
  %10176 = xor i64 %10160, %10159
  %10177 = xor i64 %10176, %10163
  %10178 = lshr i64 %10177, 4
  %10179 = trunc i64 %10178 to i8
  %10180 = and i8 %10179, 1
  %10181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10180, i8* %10181, align 1
  %10182 = icmp eq i64 %10163, 0
  %10183 = zext i1 %10182 to i8
  %10184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10183, i8* %10184, align 1
  %10185 = lshr i64 %10163, 63
  %10186 = trunc i64 %10185 to i8
  %10187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10186, i8* %10187, align 1
  %10188 = lshr i64 %10159, 63
  %10189 = lshr i64 %10160, 63
  %10190 = xor i64 %10185, %10188
  %10191 = xor i64 %10185, %10189
  %10192 = add i64 %10190, %10191
  %10193 = icmp eq i64 %10192, 2
  %10194 = zext i1 %10193 to i8
  %10195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10194, i8* %10195, align 1
  store %struct.Memory* %loadMem_40b97c, %struct.Memory** %MEMORY
  %loadMem_40b97f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10197 = getelementptr inbounds %struct.GPR, %struct.GPR* %10196, i32 0, i32 33
  %10198 = getelementptr inbounds %struct.Reg, %struct.Reg* %10197, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %10198 to i64*
  %10199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10200 = getelementptr inbounds %struct.GPR, %struct.GPR* %10199, i32 0, i32 17
  %10201 = getelementptr inbounds %struct.Reg, %struct.Reg* %10200, i32 0, i32 0
  %R8D.i989 = bitcast %union.anon* %10201 to i32*
  %10202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10203 = getelementptr inbounds %struct.GPR, %struct.GPR* %10202, i32 0, i32 11
  %10204 = getelementptr inbounds %struct.Reg, %struct.Reg* %10203, i32 0, i32 0
  %RDI.i990 = bitcast %union.anon* %10204 to i64*
  %10205 = bitcast i32* %R8D.i989 to i64*
  %10206 = load i64, i64* %RDI.i990
  %10207 = add i64 %10206, 96
  %10208 = load i64, i64* %PC.i988
  %10209 = add i64 %10208, 4
  store i64 %10209, i64* %PC.i988
  %10210 = inttoptr i64 %10207 to i32*
  %10211 = load i32, i32* %10210
  %10212 = zext i32 %10211 to i64
  store i64 %10212, i64* %10205, align 8
  store %struct.Memory* %loadMem_40b97f, %struct.Memory** %MEMORY
  %loadMem_40b983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10214 = getelementptr inbounds %struct.GPR, %struct.GPR* %10213, i32 0, i32 33
  %10215 = getelementptr inbounds %struct.Reg, %struct.Reg* %10214, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %10215 to i64*
  %10216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10217 = getelementptr inbounds %struct.GPR, %struct.GPR* %10216, i32 0, i32 17
  %10218 = getelementptr inbounds %struct.Reg, %struct.Reg* %10217, i32 0, i32 0
  %R8D.i986 = bitcast %union.anon* %10218 to i32*
  %10219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10220 = getelementptr inbounds %struct.GPR, %struct.GPR* %10219, i32 0, i32 19
  %10221 = getelementptr inbounds %struct.Reg, %struct.Reg* %10220, i32 0, i32 0
  %R9D.i987 = bitcast %union.anon* %10221 to i32*
  %10222 = bitcast i32* %R9D.i987 to i64*
  %10223 = load i32, i32* %R8D.i986
  %10224 = zext i32 %10223 to i64
  %10225 = load i64, i64* %PC.i985
  %10226 = add i64 %10225, 3
  store i64 %10226, i64* %PC.i985
  %10227 = and i64 %10224, 4294967295
  store i64 %10227, i64* %10222, align 8
  store %struct.Memory* %loadMem_40b983, %struct.Memory** %MEMORY
  %loadMem_40b986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10229 = getelementptr inbounds %struct.GPR, %struct.GPR* %10228, i32 0, i32 33
  %10230 = getelementptr inbounds %struct.Reg, %struct.Reg* %10229, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %10230 to i64*
  %10231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10232 = getelementptr inbounds %struct.GPR, %struct.GPR* %10231, i32 0, i32 19
  %10233 = getelementptr inbounds %struct.Reg, %struct.Reg* %10232, i32 0, i32 0
  %R9D.i984 = bitcast %union.anon* %10233 to i32*
  %10234 = bitcast i32* %R9D.i984 to i64*
  %10235 = load i32, i32* %R9D.i984
  %10236 = zext i32 %10235 to i64
  %10237 = load i64, i64* %PC.i983
  %10238 = add i64 %10237, 4
  store i64 %10238, i64* %PC.i983
  %10239 = add i32 1, %10235
  %10240 = zext i32 %10239 to i64
  store i64 %10240, i64* %10234, align 8
  %10241 = icmp ult i32 %10239, %10235
  %10242 = icmp ult i32 %10239, 1
  %10243 = or i1 %10241, %10242
  %10244 = zext i1 %10243 to i8
  %10245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10244, i8* %10245, align 1
  %10246 = and i32 %10239, 255
  %10247 = call i32 @llvm.ctpop.i32(i32 %10246)
  %10248 = trunc i32 %10247 to i8
  %10249 = and i8 %10248, 1
  %10250 = xor i8 %10249, 1
  %10251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10250, i8* %10251, align 1
  %10252 = xor i64 1, %10236
  %10253 = trunc i64 %10252 to i32
  %10254 = xor i32 %10253, %10239
  %10255 = lshr i32 %10254, 4
  %10256 = trunc i32 %10255 to i8
  %10257 = and i8 %10256, 1
  %10258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10257, i8* %10258, align 1
  %10259 = icmp eq i32 %10239, 0
  %10260 = zext i1 %10259 to i8
  %10261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10260, i8* %10261, align 1
  %10262 = lshr i32 %10239, 31
  %10263 = trunc i32 %10262 to i8
  %10264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10263, i8* %10264, align 1
  %10265 = lshr i32 %10235, 31
  %10266 = xor i32 %10262, %10265
  %10267 = add i32 %10266, %10262
  %10268 = icmp eq i32 %10267, 2
  %10269 = zext i1 %10268 to i8
  %10270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10269, i8* %10270, align 1
  store %struct.Memory* %loadMem_40b986, %struct.Memory** %MEMORY
  %loadMem_40b98a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10272 = getelementptr inbounds %struct.GPR, %struct.GPR* %10271, i32 0, i32 33
  %10273 = getelementptr inbounds %struct.Reg, %struct.Reg* %10272, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %10273 to i64*
  %10274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10275 = getelementptr inbounds %struct.GPR, %struct.GPR* %10274, i32 0, i32 19
  %10276 = getelementptr inbounds %struct.Reg, %struct.Reg* %10275, i32 0, i32 0
  %R9D.i981 = bitcast %union.anon* %10276 to i32*
  %10277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10278 = getelementptr inbounds %struct.GPR, %struct.GPR* %10277, i32 0, i32 11
  %10279 = getelementptr inbounds %struct.Reg, %struct.Reg* %10278, i32 0, i32 0
  %RDI.i982 = bitcast %union.anon* %10279 to i64*
  %10280 = load i64, i64* %RDI.i982
  %10281 = add i64 %10280, 96
  %10282 = load i32, i32* %R9D.i981
  %10283 = zext i32 %10282 to i64
  %10284 = load i64, i64* %PC.i980
  %10285 = add i64 %10284, 4
  store i64 %10285, i64* %PC.i980
  %10286 = inttoptr i64 %10281 to i32*
  store i32 %10282, i32* %10286
  store %struct.Memory* %loadMem_40b98a, %struct.Memory** %MEMORY
  %loadMem_40b98e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10288 = getelementptr inbounds %struct.GPR, %struct.GPR* %10287, i32 0, i32 33
  %10289 = getelementptr inbounds %struct.Reg, %struct.Reg* %10288, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %10289 to i64*
  %10290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10291 = getelementptr inbounds %struct.GPR, %struct.GPR* %10290, i32 0, i32 17
  %10292 = getelementptr inbounds %struct.Reg, %struct.Reg* %10291, i32 0, i32 0
  %R8D.i978 = bitcast %union.anon* %10292 to i32*
  %10293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10294 = getelementptr inbounds %struct.GPR, %struct.GPR* %10293, i32 0, i32 7
  %10295 = getelementptr inbounds %struct.Reg, %struct.Reg* %10294, i32 0, i32 0
  %RDX.i979 = bitcast %union.anon* %10295 to i64*
  %10296 = load i32, i32* %R8D.i978
  %10297 = zext i32 %10296 to i64
  %10298 = load i64, i64* %PC.i977
  %10299 = add i64 %10298, 3
  store i64 %10299, i64* %PC.i977
  %10300 = shl i64 %10297, 32
  %10301 = ashr exact i64 %10300, 32
  store i64 %10301, i64* %RDX.i979, align 8
  store %struct.Memory* %loadMem_40b98e, %struct.Memory** %MEMORY
  %loadMem_40b991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10303 = getelementptr inbounds %struct.GPR, %struct.GPR* %10302, i32 0, i32 33
  %10304 = getelementptr inbounds %struct.Reg, %struct.Reg* %10303, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %10304 to i64*
  %10305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10306 = getelementptr inbounds %struct.GPR, %struct.GPR* %10305, i32 0, i32 5
  %10307 = getelementptr inbounds %struct.Reg, %struct.Reg* %10306, i32 0, i32 0
  %ECX.i974 = bitcast %union.anon* %10307 to i32*
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10309 = getelementptr inbounds %struct.GPR, %struct.GPR* %10308, i32 0, i32 7
  %10310 = getelementptr inbounds %struct.Reg, %struct.Reg* %10309, i32 0, i32 0
  %RDX.i975 = bitcast %union.anon* %10310 to i64*
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10312 = getelementptr inbounds %struct.GPR, %struct.GPR* %10311, i32 0, i32 9
  %10313 = getelementptr inbounds %struct.Reg, %struct.Reg* %10312, i32 0, i32 0
  %RSI.i976 = bitcast %union.anon* %10313 to i64*
  %10314 = load i64, i64* %RSI.i976
  %10315 = load i64, i64* %RDX.i975
  %10316 = mul i64 %10315, 4
  %10317 = add i64 %10314, 100
  %10318 = add i64 %10317, %10316
  %10319 = load i32, i32* %ECX.i974
  %10320 = zext i32 %10319 to i64
  %10321 = load i64, i64* %PC.i973
  %10322 = add i64 %10321, 4
  store i64 %10322, i64* %PC.i973
  %10323 = inttoptr i64 %10318 to i32*
  store i32 %10319, i32* %10323
  store %struct.Memory* %loadMem_40b991, %struct.Memory** %MEMORY
  %loadMem_40b995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10325 = getelementptr inbounds %struct.GPR, %struct.GPR* %10324, i32 0, i32 33
  %10326 = getelementptr inbounds %struct.Reg, %struct.Reg* %10325, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %10326 to i64*
  %10327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10328 = getelementptr inbounds %struct.GPR, %struct.GPR* %10327, i32 0, i32 7
  %10329 = getelementptr inbounds %struct.Reg, %struct.Reg* %10328, i32 0, i32 0
  %RDX.i971 = bitcast %union.anon* %10329 to i64*
  %10330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10331 = getelementptr inbounds %struct.GPR, %struct.GPR* %10330, i32 0, i32 15
  %10332 = getelementptr inbounds %struct.Reg, %struct.Reg* %10331, i32 0, i32 0
  %RBP.i972 = bitcast %union.anon* %10332 to i64*
  %10333 = load i64, i64* %RBP.i972
  %10334 = sub i64 %10333, 36
  %10335 = load i64, i64* %PC.i970
  %10336 = add i64 %10335, 4
  store i64 %10336, i64* %PC.i970
  %10337 = inttoptr i64 %10334 to i32*
  %10338 = load i32, i32* %10337
  %10339 = sext i32 %10338 to i64
  store i64 %10339, i64* %RDX.i971, align 8
  store %struct.Memory* %loadMem_40b995, %struct.Memory** %MEMORY
  %loadMem_40b999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10341 = getelementptr inbounds %struct.GPR, %struct.GPR* %10340, i32 0, i32 33
  %10342 = getelementptr inbounds %struct.Reg, %struct.Reg* %10341, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %10342 to i64*
  %10343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10344 = getelementptr inbounds %struct.GPR, %struct.GPR* %10343, i32 0, i32 7
  %10345 = getelementptr inbounds %struct.Reg, %struct.Reg* %10344, i32 0, i32 0
  %RDX.i969 = bitcast %union.anon* %10345 to i64*
  %10346 = load i64, i64* %RDX.i969
  %10347 = load i64, i64* %PC.i968
  %10348 = add i64 %10347, 7
  store i64 %10348, i64* %PC.i968
  %10349 = sext i64 %10346 to i128
  %10350 = and i128 %10349, -18446744073709551616
  %10351 = zext i64 %10346 to i128
  %10352 = or i128 %10350, %10351
  %10353 = mul i128 744, %10352
  %10354 = trunc i128 %10353 to i64
  store i64 %10354, i64* %RDX.i969, align 8
  %10355 = sext i64 %10354 to i128
  %10356 = icmp ne i128 %10355, %10353
  %10357 = zext i1 %10356 to i8
  %10358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10357, i8* %10358, align 1
  %10359 = trunc i128 %10353 to i32
  %10360 = and i32 %10359, 255
  %10361 = call i32 @llvm.ctpop.i32(i32 %10360)
  %10362 = trunc i32 %10361 to i8
  %10363 = and i8 %10362, 1
  %10364 = xor i8 %10363, 1
  %10365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10364, i8* %10365, align 1
  %10366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10366, align 1
  %10367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10367, align 1
  %10368 = lshr i64 %10354, 63
  %10369 = trunc i64 %10368 to i8
  %10370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10369, i8* %10370, align 1
  %10371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10357, i8* %10371, align 1
  store %struct.Memory* %loadMem_40b999, %struct.Memory** %MEMORY
  %loadMem_40b9a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10373 = getelementptr inbounds %struct.GPR, %struct.GPR* %10372, i32 0, i32 33
  %10374 = getelementptr inbounds %struct.Reg, %struct.Reg* %10373, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %10374 to i64*
  %10375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10376 = getelementptr inbounds %struct.GPR, %struct.GPR* %10375, i32 0, i32 1
  %10377 = getelementptr inbounds %struct.Reg, %struct.Reg* %10376, i32 0, i32 0
  %RAX.i966 = bitcast %union.anon* %10377 to i64*
  %10378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10379 = getelementptr inbounds %struct.GPR, %struct.GPR* %10378, i32 0, i32 9
  %10380 = getelementptr inbounds %struct.Reg, %struct.Reg* %10379, i32 0, i32 0
  %RSI.i967 = bitcast %union.anon* %10380 to i64*
  %10381 = load i64, i64* %RAX.i966
  %10382 = load i64, i64* %PC.i965
  %10383 = add i64 %10382, 3
  store i64 %10383, i64* %PC.i965
  store i64 %10381, i64* %RSI.i967, align 8
  store %struct.Memory* %loadMem_40b9a0, %struct.Memory** %MEMORY
  %loadMem_40b9a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10385 = getelementptr inbounds %struct.GPR, %struct.GPR* %10384, i32 0, i32 33
  %10386 = getelementptr inbounds %struct.Reg, %struct.Reg* %10385, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %10386 to i64*
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10388 = getelementptr inbounds %struct.GPR, %struct.GPR* %10387, i32 0, i32 7
  %10389 = getelementptr inbounds %struct.Reg, %struct.Reg* %10388, i32 0, i32 0
  %RDX.i963 = bitcast %union.anon* %10389 to i64*
  %10390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10391 = getelementptr inbounds %struct.GPR, %struct.GPR* %10390, i32 0, i32 9
  %10392 = getelementptr inbounds %struct.Reg, %struct.Reg* %10391, i32 0, i32 0
  %RSI.i964 = bitcast %union.anon* %10392 to i64*
  %10393 = load i64, i64* %RSI.i964
  %10394 = load i64, i64* %RDX.i963
  %10395 = load i64, i64* %PC.i962
  %10396 = add i64 %10395, 3
  store i64 %10396, i64* %PC.i962
  %10397 = add i64 %10394, %10393
  store i64 %10397, i64* %RSI.i964, align 8
  %10398 = icmp ult i64 %10397, %10393
  %10399 = icmp ult i64 %10397, %10394
  %10400 = or i1 %10398, %10399
  %10401 = zext i1 %10400 to i8
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10401, i8* %10402, align 1
  %10403 = trunc i64 %10397 to i32
  %10404 = and i32 %10403, 255
  %10405 = call i32 @llvm.ctpop.i32(i32 %10404)
  %10406 = trunc i32 %10405 to i8
  %10407 = and i8 %10406, 1
  %10408 = xor i8 %10407, 1
  %10409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10408, i8* %10409, align 1
  %10410 = xor i64 %10394, %10393
  %10411 = xor i64 %10410, %10397
  %10412 = lshr i64 %10411, 4
  %10413 = trunc i64 %10412 to i8
  %10414 = and i8 %10413, 1
  %10415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10414, i8* %10415, align 1
  %10416 = icmp eq i64 %10397, 0
  %10417 = zext i1 %10416 to i8
  %10418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10417, i8* %10418, align 1
  %10419 = lshr i64 %10397, 63
  %10420 = trunc i64 %10419 to i8
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10420, i8* %10421, align 1
  %10422 = lshr i64 %10393, 63
  %10423 = lshr i64 %10394, 63
  %10424 = xor i64 %10419, %10422
  %10425 = xor i64 %10419, %10423
  %10426 = add i64 %10424, %10425
  %10427 = icmp eq i64 %10426, 2
  %10428 = zext i1 %10427 to i8
  %10429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10428, i8* %10429, align 1
  store %struct.Memory* %loadMem_40b9a3, %struct.Memory** %MEMORY
  %loadMem_40b9a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10431 = getelementptr inbounds %struct.GPR, %struct.GPR* %10430, i32 0, i32 33
  %10432 = getelementptr inbounds %struct.Reg, %struct.Reg* %10431, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %10432 to i64*
  %10433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10434 = getelementptr inbounds %struct.GPR, %struct.GPR* %10433, i32 0, i32 9
  %10435 = getelementptr inbounds %struct.Reg, %struct.Reg* %10434, i32 0, i32 0
  %RSI.i961 = bitcast %union.anon* %10435 to i64*
  %10436 = load i64, i64* %RSI.i961
  %10437 = load i64, i64* %PC.i960
  %10438 = add i64 %10437, 4
  store i64 %10438, i64* %PC.i960
  %10439 = add i64 96, %10436
  store i64 %10439, i64* %RSI.i961, align 8
  %10440 = icmp ult i64 %10439, %10436
  %10441 = icmp ult i64 %10439, 96
  %10442 = or i1 %10440, %10441
  %10443 = zext i1 %10442 to i8
  %10444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10443, i8* %10444, align 1
  %10445 = trunc i64 %10439 to i32
  %10446 = and i32 %10445, 255
  %10447 = call i32 @llvm.ctpop.i32(i32 %10446)
  %10448 = trunc i32 %10447 to i8
  %10449 = and i8 %10448, 1
  %10450 = xor i8 %10449, 1
  %10451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10450, i8* %10451, align 1
  %10452 = xor i64 96, %10436
  %10453 = xor i64 %10452, %10439
  %10454 = lshr i64 %10453, 4
  %10455 = trunc i64 %10454 to i8
  %10456 = and i8 %10455, 1
  %10457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10456, i8* %10457, align 1
  %10458 = icmp eq i64 %10439, 0
  %10459 = zext i1 %10458 to i8
  %10460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10459, i8* %10460, align 1
  %10461 = lshr i64 %10439, 63
  %10462 = trunc i64 %10461 to i8
  %10463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10462, i8* %10463, align 1
  %10464 = lshr i64 %10436, 63
  %10465 = xor i64 %10461, %10464
  %10466 = add i64 %10465, %10461
  %10467 = icmp eq i64 %10466, 2
  %10468 = zext i1 %10467 to i8
  %10469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10468, i8* %10469, align 1
  store %struct.Memory* %loadMem_40b9a6, %struct.Memory** %MEMORY
  %loadMem_40b9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10471 = getelementptr inbounds %struct.GPR, %struct.GPR* %10470, i32 0, i32 33
  %10472 = getelementptr inbounds %struct.Reg, %struct.Reg* %10471, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %10472 to i64*
  %10473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10474 = getelementptr inbounds %struct.GPR, %struct.GPR* %10473, i32 0, i32 7
  %10475 = getelementptr inbounds %struct.Reg, %struct.Reg* %10474, i32 0, i32 0
  %RDX.i959 = bitcast %union.anon* %10475 to i64*
  %10476 = load i64, i64* %PC.i958
  %10477 = add i64 %10476, 8
  store i64 %10477, i64* %PC.i958
  %10478 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %10478, i64* %RDX.i959, align 8
  store %struct.Memory* %loadMem_40b9aa, %struct.Memory** %MEMORY
  %loadMem_40b9b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10480 = getelementptr inbounds %struct.GPR, %struct.GPR* %10479, i32 0, i32 33
  %10481 = getelementptr inbounds %struct.Reg, %struct.Reg* %10480, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %10481 to i64*
  %10482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10483 = getelementptr inbounds %struct.GPR, %struct.GPR* %10482, i32 0, i32 7
  %10484 = getelementptr inbounds %struct.Reg, %struct.Reg* %10483, i32 0, i32 0
  %RDX.i956 = bitcast %union.anon* %10484 to i64*
  %10485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10486 = getelementptr inbounds %struct.GPR, %struct.GPR* %10485, i32 0, i32 9
  %10487 = getelementptr inbounds %struct.Reg, %struct.Reg* %10486, i32 0, i32 0
  %RSI.i957 = bitcast %union.anon* %10487 to i64*
  %10488 = load i64, i64* %RDX.i956
  %10489 = load i64, i64* %RSI.i957
  %10490 = load i64, i64* %PC.i955
  %10491 = add i64 %10490, 3
  store i64 %10491, i64* %PC.i955
  %10492 = inttoptr i64 %10488 to i64*
  store i64 %10489, i64* %10492
  store %struct.Memory* %loadMem_40b9b2, %struct.Memory** %MEMORY
  %loadMem_40b9b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10494 = getelementptr inbounds %struct.GPR, %struct.GPR* %10493, i32 0, i32 33
  %10495 = getelementptr inbounds %struct.Reg, %struct.Reg* %10494, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %10495 to i64*
  %10496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10497 = getelementptr inbounds %struct.GPR, %struct.GPR* %10496, i32 0, i32 7
  %10498 = getelementptr inbounds %struct.Reg, %struct.Reg* %10497, i32 0, i32 0
  %RDX.i953 = bitcast %union.anon* %10498 to i64*
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10500 = getelementptr inbounds %struct.GPR, %struct.GPR* %10499, i32 0, i32 15
  %10501 = getelementptr inbounds %struct.Reg, %struct.Reg* %10500, i32 0, i32 0
  %RBP.i954 = bitcast %union.anon* %10501 to i64*
  %10502 = load i64, i64* %RBP.i954
  %10503 = sub i64 %10502, 36
  %10504 = load i64, i64* %PC.i952
  %10505 = add i64 %10504, 4
  store i64 %10505, i64* %PC.i952
  %10506 = inttoptr i64 %10503 to i32*
  %10507 = load i32, i32* %10506
  %10508 = sext i32 %10507 to i64
  store i64 %10508, i64* %RDX.i953, align 8
  store %struct.Memory* %loadMem_40b9b5, %struct.Memory** %MEMORY
  %loadMem_40b9b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10510 = getelementptr inbounds %struct.GPR, %struct.GPR* %10509, i32 0, i32 33
  %10511 = getelementptr inbounds %struct.Reg, %struct.Reg* %10510, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %10511 to i64*
  %10512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10513 = getelementptr inbounds %struct.GPR, %struct.GPR* %10512, i32 0, i32 7
  %10514 = getelementptr inbounds %struct.Reg, %struct.Reg* %10513, i32 0, i32 0
  %RDX.i951 = bitcast %union.anon* %10514 to i64*
  %10515 = load i64, i64* %RDX.i951
  %10516 = load i64, i64* %PC.i950
  %10517 = add i64 %10516, 7
  store i64 %10517, i64* %PC.i950
  %10518 = sext i64 %10515 to i128
  %10519 = and i128 %10518, -18446744073709551616
  %10520 = zext i64 %10515 to i128
  %10521 = or i128 %10519, %10520
  %10522 = mul i128 744, %10521
  %10523 = trunc i128 %10522 to i64
  store i64 %10523, i64* %RDX.i951, align 8
  %10524 = sext i64 %10523 to i128
  %10525 = icmp ne i128 %10524, %10522
  %10526 = zext i1 %10525 to i8
  %10527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10526, i8* %10527, align 1
  %10528 = trunc i128 %10522 to i32
  %10529 = and i32 %10528, 255
  %10530 = call i32 @llvm.ctpop.i32(i32 %10529)
  %10531 = trunc i32 %10530 to i8
  %10532 = and i8 %10531, 1
  %10533 = xor i8 %10532, 1
  %10534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10533, i8* %10534, align 1
  %10535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10535, align 1
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10536, align 1
  %10537 = lshr i64 %10523, 63
  %10538 = trunc i64 %10537 to i8
  %10539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10538, i8* %10539, align 1
  %10540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10526, i8* %10540, align 1
  store %struct.Memory* %loadMem_40b9b9, %struct.Memory** %MEMORY
  %loadMem_40b9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10542 = getelementptr inbounds %struct.GPR, %struct.GPR* %10541, i32 0, i32 33
  %10543 = getelementptr inbounds %struct.Reg, %struct.Reg* %10542, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %10543 to i64*
  %10544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10545 = getelementptr inbounds %struct.GPR, %struct.GPR* %10544, i32 0, i32 1
  %10546 = getelementptr inbounds %struct.Reg, %struct.Reg* %10545, i32 0, i32 0
  %RAX.i948 = bitcast %union.anon* %10546 to i64*
  %10547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10548 = getelementptr inbounds %struct.GPR, %struct.GPR* %10547, i32 0, i32 9
  %10549 = getelementptr inbounds %struct.Reg, %struct.Reg* %10548, i32 0, i32 0
  %RSI.i949 = bitcast %union.anon* %10549 to i64*
  %10550 = load i64, i64* %RAX.i948
  %10551 = load i64, i64* %PC.i947
  %10552 = add i64 %10551, 3
  store i64 %10552, i64* %PC.i947
  store i64 %10550, i64* %RSI.i949, align 8
  store %struct.Memory* %loadMem_40b9c0, %struct.Memory** %MEMORY
  %loadMem_40b9c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10554 = getelementptr inbounds %struct.GPR, %struct.GPR* %10553, i32 0, i32 33
  %10555 = getelementptr inbounds %struct.Reg, %struct.Reg* %10554, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %10555 to i64*
  %10556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10557 = getelementptr inbounds %struct.GPR, %struct.GPR* %10556, i32 0, i32 7
  %10558 = getelementptr inbounds %struct.Reg, %struct.Reg* %10557, i32 0, i32 0
  %RDX.i945 = bitcast %union.anon* %10558 to i64*
  %10559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10560 = getelementptr inbounds %struct.GPR, %struct.GPR* %10559, i32 0, i32 9
  %10561 = getelementptr inbounds %struct.Reg, %struct.Reg* %10560, i32 0, i32 0
  %RSI.i946 = bitcast %union.anon* %10561 to i64*
  %10562 = load i64, i64* %RSI.i946
  %10563 = load i64, i64* %RDX.i945
  %10564 = load i64, i64* %PC.i944
  %10565 = add i64 %10564, 3
  store i64 %10565, i64* %PC.i944
  %10566 = add i64 %10563, %10562
  store i64 %10566, i64* %RSI.i946, align 8
  %10567 = icmp ult i64 %10566, %10562
  %10568 = icmp ult i64 %10566, %10563
  %10569 = or i1 %10567, %10568
  %10570 = zext i1 %10569 to i8
  %10571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10570, i8* %10571, align 1
  %10572 = trunc i64 %10566 to i32
  %10573 = and i32 %10572, 255
  %10574 = call i32 @llvm.ctpop.i32(i32 %10573)
  %10575 = trunc i32 %10574 to i8
  %10576 = and i8 %10575, 1
  %10577 = xor i8 %10576, 1
  %10578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10577, i8* %10578, align 1
  %10579 = xor i64 %10563, %10562
  %10580 = xor i64 %10579, %10566
  %10581 = lshr i64 %10580, 4
  %10582 = trunc i64 %10581 to i8
  %10583 = and i8 %10582, 1
  %10584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10583, i8* %10584, align 1
  %10585 = icmp eq i64 %10566, 0
  %10586 = zext i1 %10585 to i8
  %10587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10586, i8* %10587, align 1
  %10588 = lshr i64 %10566, 63
  %10589 = trunc i64 %10588 to i8
  %10590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10589, i8* %10590, align 1
  %10591 = lshr i64 %10562, 63
  %10592 = lshr i64 %10563, 63
  %10593 = xor i64 %10588, %10591
  %10594 = xor i64 %10588, %10592
  %10595 = add i64 %10593, %10594
  %10596 = icmp eq i64 %10595, 2
  %10597 = zext i1 %10596 to i8
  %10598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10597, i8* %10598, align 1
  store %struct.Memory* %loadMem_40b9c3, %struct.Memory** %MEMORY
  %loadMem_40b9c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10600 = getelementptr inbounds %struct.GPR, %struct.GPR* %10599, i32 0, i32 33
  %10601 = getelementptr inbounds %struct.Reg, %struct.Reg* %10600, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %10601 to i64*
  %10602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10603 = getelementptr inbounds %struct.GPR, %struct.GPR* %10602, i32 0, i32 5
  %10604 = getelementptr inbounds %struct.Reg, %struct.Reg* %10603, i32 0, i32 0
  %RCX.i942 = bitcast %union.anon* %10604 to i64*
  %10605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10606 = getelementptr inbounds %struct.GPR, %struct.GPR* %10605, i32 0, i32 9
  %10607 = getelementptr inbounds %struct.Reg, %struct.Reg* %10606, i32 0, i32 0
  %RSI.i943 = bitcast %union.anon* %10607 to i64*
  %10608 = load i64, i64* %RSI.i943
  %10609 = add i64 %10608, 96
  %10610 = load i64, i64* %PC.i941
  %10611 = add i64 %10610, 3
  store i64 %10611, i64* %PC.i941
  %10612 = inttoptr i64 %10609 to i32*
  %10613 = load i32, i32* %10612
  %10614 = zext i32 %10613 to i64
  store i64 %10614, i64* %RCX.i942, align 8
  store %struct.Memory* %loadMem_40b9c6, %struct.Memory** %MEMORY
  %loadMem_40b9c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10616 = getelementptr inbounds %struct.GPR, %struct.GPR* %10615, i32 0, i32 33
  %10617 = getelementptr inbounds %struct.Reg, %struct.Reg* %10616, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %10617 to i64*
  %10618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10619 = getelementptr inbounds %struct.GPR, %struct.GPR* %10618, i32 0, i32 7
  %10620 = getelementptr inbounds %struct.Reg, %struct.Reg* %10619, i32 0, i32 0
  %RDX.i940 = bitcast %union.anon* %10620 to i64*
  %10621 = load i64, i64* %PC.i939
  %10622 = add i64 %10621, 8
  store i64 %10622, i64* %PC.i939
  %10623 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %10623, i64* %RDX.i940, align 8
  store %struct.Memory* %loadMem_40b9c9, %struct.Memory** %MEMORY
  %loadMem_40b9d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10625 = getelementptr inbounds %struct.GPR, %struct.GPR* %10624, i32 0, i32 33
  %10626 = getelementptr inbounds %struct.Reg, %struct.Reg* %10625, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %10626 to i64*
  %10627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10628 = getelementptr inbounds %struct.GPR, %struct.GPR* %10627, i32 0, i32 7
  %10629 = getelementptr inbounds %struct.Reg, %struct.Reg* %10628, i32 0, i32 0
  %RDX.i937 = bitcast %union.anon* %10629 to i64*
  %10630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10631 = getelementptr inbounds %struct.GPR, %struct.GPR* %10630, i32 0, i32 9
  %10632 = getelementptr inbounds %struct.Reg, %struct.Reg* %10631, i32 0, i32 0
  %RSI.i938 = bitcast %union.anon* %10632 to i64*
  %10633 = load i64, i64* %RDX.i937
  %10634 = load i64, i64* %PC.i936
  %10635 = add i64 %10634, 3
  store i64 %10635, i64* %PC.i936
  store i64 %10633, i64* %RSI.i938, align 8
  store %struct.Memory* %loadMem_40b9d1, %struct.Memory** %MEMORY
  %loadMem_40b9d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10637 = getelementptr inbounds %struct.GPR, %struct.GPR* %10636, i32 0, i32 33
  %10638 = getelementptr inbounds %struct.Reg, %struct.Reg* %10637, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %10638 to i64*
  %10639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10640 = getelementptr inbounds %struct.GPR, %struct.GPR* %10639, i32 0, i32 9
  %10641 = getelementptr inbounds %struct.Reg, %struct.Reg* %10640, i32 0, i32 0
  %RSI.i935 = bitcast %union.anon* %10641 to i64*
  %10642 = load i64, i64* %RSI.i935
  %10643 = load i64, i64* %PC.i934
  %10644 = add i64 %10643, 4
  store i64 %10644, i64* %PC.i934
  %10645 = add i64 16, %10642
  store i64 %10645, i64* %RSI.i935, align 8
  %10646 = icmp ult i64 %10645, %10642
  %10647 = icmp ult i64 %10645, 16
  %10648 = or i1 %10646, %10647
  %10649 = zext i1 %10648 to i8
  %10650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10649, i8* %10650, align 1
  %10651 = trunc i64 %10645 to i32
  %10652 = and i32 %10651, 255
  %10653 = call i32 @llvm.ctpop.i32(i32 %10652)
  %10654 = trunc i32 %10653 to i8
  %10655 = and i8 %10654, 1
  %10656 = xor i8 %10655, 1
  %10657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10656, i8* %10657, align 1
  %10658 = xor i64 16, %10642
  %10659 = xor i64 %10658, %10645
  %10660 = lshr i64 %10659, 4
  %10661 = trunc i64 %10660 to i8
  %10662 = and i8 %10661, 1
  %10663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10662, i8* %10663, align 1
  %10664 = icmp eq i64 %10645, 0
  %10665 = zext i1 %10664 to i8
  %10666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10665, i8* %10666, align 1
  %10667 = lshr i64 %10645, 63
  %10668 = trunc i64 %10667 to i8
  %10669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10668, i8* %10669, align 1
  %10670 = lshr i64 %10642, 63
  %10671 = xor i64 %10667, %10670
  %10672 = add i64 %10671, %10667
  %10673 = icmp eq i64 %10672, 2
  %10674 = zext i1 %10673 to i8
  %10675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10674, i8* %10675, align 1
  store %struct.Memory* %loadMem_40b9d4, %struct.Memory** %MEMORY
  %loadMem_40b9d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10677 = getelementptr inbounds %struct.GPR, %struct.GPR* %10676, i32 0, i32 33
  %10678 = getelementptr inbounds %struct.Reg, %struct.Reg* %10677, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %10678 to i64*
  %10679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10680 = getelementptr inbounds %struct.GPR, %struct.GPR* %10679, i32 0, i32 9
  %10681 = getelementptr inbounds %struct.Reg, %struct.Reg* %10680, i32 0, i32 0
  %RSI.i933 = bitcast %union.anon* %10681 to i64*
  %10682 = load i64, i64* %RSI.i933
  %10683 = load i64, i64* %PC.i932
  %10684 = add i64 %10683, 8
  store i64 %10684, i64* %PC.i932
  store i64 %10682, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40b9d8, %struct.Memory** %MEMORY
  %loadMem_40b9e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10686 = getelementptr inbounds %struct.GPR, %struct.GPR* %10685, i32 0, i32 33
  %10687 = getelementptr inbounds %struct.Reg, %struct.Reg* %10686, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %10687 to i64*
  %10688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10689 = getelementptr inbounds %struct.GPR, %struct.GPR* %10688, i32 0, i32 5
  %10690 = getelementptr inbounds %struct.Reg, %struct.Reg* %10689, i32 0, i32 0
  %ECX.i930 = bitcast %union.anon* %10690 to i32*
  %10691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10692 = getelementptr inbounds %struct.GPR, %struct.GPR* %10691, i32 0, i32 7
  %10693 = getelementptr inbounds %struct.Reg, %struct.Reg* %10692, i32 0, i32 0
  %RDX.i931 = bitcast %union.anon* %10693 to i64*
  %10694 = load i64, i64* %RDX.i931
  %10695 = add i64 %10694, 8
  %10696 = load i32, i32* %ECX.i930
  %10697 = zext i32 %10696 to i64
  %10698 = load i64, i64* %PC.i929
  %10699 = add i64 %10698, 3
  store i64 %10699, i64* %PC.i929
  %10700 = inttoptr i64 %10695 to i32*
  store i32 %10696, i32* %10700
  store %struct.Memory* %loadMem_40b9e0, %struct.Memory** %MEMORY
  %loadMem_40b9e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10702 = getelementptr inbounds %struct.GPR, %struct.GPR* %10701, i32 0, i32 33
  %10703 = getelementptr inbounds %struct.Reg, %struct.Reg* %10702, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %10703 to i64*
  %10704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10705 = getelementptr inbounds %struct.GPR, %struct.GPR* %10704, i32 0, i32 7
  %10706 = getelementptr inbounds %struct.Reg, %struct.Reg* %10705, i32 0, i32 0
  %RDX.i927 = bitcast %union.anon* %10706 to i64*
  %10707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10708 = getelementptr inbounds %struct.GPR, %struct.GPR* %10707, i32 0, i32 15
  %10709 = getelementptr inbounds %struct.Reg, %struct.Reg* %10708, i32 0, i32 0
  %RBP.i928 = bitcast %union.anon* %10709 to i64*
  %10710 = load i64, i64* %RBP.i928
  %10711 = sub i64 %10710, 4
  %10712 = load i64, i64* %PC.i926
  %10713 = add i64 %10712, 4
  store i64 %10713, i64* %PC.i926
  %10714 = inttoptr i64 %10711 to i32*
  %10715 = load i32, i32* %10714
  %10716 = sext i32 %10715 to i64
  store i64 %10716, i64* %RDX.i927, align 8
  store %struct.Memory* %loadMem_40b9e3, %struct.Memory** %MEMORY
  %loadMem_40b9e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10718 = getelementptr inbounds %struct.GPR, %struct.GPR* %10717, i32 0, i32 33
  %10719 = getelementptr inbounds %struct.Reg, %struct.Reg* %10718, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %10719 to i64*
  %10720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10721 = getelementptr inbounds %struct.GPR, %struct.GPR* %10720, i32 0, i32 5
  %10722 = getelementptr inbounds %struct.Reg, %struct.Reg* %10721, i32 0, i32 0
  %RCX.i924 = bitcast %union.anon* %10722 to i64*
  %10723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10724 = getelementptr inbounds %struct.GPR, %struct.GPR* %10723, i32 0, i32 7
  %10725 = getelementptr inbounds %struct.Reg, %struct.Reg* %10724, i32 0, i32 0
  %RDX.i925 = bitcast %union.anon* %10725 to i64*
  %10726 = load i64, i64* %RDX.i925
  %10727 = mul i64 %10726, 4
  %10728 = add i64 %10727, 11187184
  %10729 = load i64, i64* %PC.i923
  %10730 = add i64 %10729, 7
  store i64 %10730, i64* %PC.i923
  %10731 = inttoptr i64 %10728 to i32*
  %10732 = load i32, i32* %10731
  %10733 = zext i32 %10732 to i64
  store i64 %10733, i64* %RCX.i924, align 8
  store %struct.Memory* %loadMem_40b9e7, %struct.Memory** %MEMORY
  %loadMem_40b9ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10735 = getelementptr inbounds %struct.GPR, %struct.GPR* %10734, i32 0, i32 33
  %10736 = getelementptr inbounds %struct.Reg, %struct.Reg* %10735, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %10736 to i64*
  %10737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10738 = getelementptr inbounds %struct.GPR, %struct.GPR* %10737, i32 0, i32 7
  %10739 = getelementptr inbounds %struct.Reg, %struct.Reg* %10738, i32 0, i32 0
  %RDX.i921 = bitcast %union.anon* %10739 to i64*
  %10740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10741 = getelementptr inbounds %struct.GPR, %struct.GPR* %10740, i32 0, i32 15
  %10742 = getelementptr inbounds %struct.Reg, %struct.Reg* %10741, i32 0, i32 0
  %RBP.i922 = bitcast %union.anon* %10742 to i64*
  %10743 = load i64, i64* %RBP.i922
  %10744 = sub i64 %10743, 36
  %10745 = load i64, i64* %PC.i920
  %10746 = add i64 %10745, 4
  store i64 %10746, i64* %PC.i920
  %10747 = inttoptr i64 %10744 to i32*
  %10748 = load i32, i32* %10747
  %10749 = sext i32 %10748 to i64
  store i64 %10749, i64* %RDX.i921, align 8
  store %struct.Memory* %loadMem_40b9ee, %struct.Memory** %MEMORY
  %loadMem_40b9f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10751 = getelementptr inbounds %struct.GPR, %struct.GPR* %10750, i32 0, i32 33
  %10752 = getelementptr inbounds %struct.Reg, %struct.Reg* %10751, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %10752 to i64*
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10754 = getelementptr inbounds %struct.GPR, %struct.GPR* %10753, i32 0, i32 7
  %10755 = getelementptr inbounds %struct.Reg, %struct.Reg* %10754, i32 0, i32 0
  %RDX.i919 = bitcast %union.anon* %10755 to i64*
  %10756 = load i64, i64* %RDX.i919
  %10757 = load i64, i64* %PC.i918
  %10758 = add i64 %10757, 7
  store i64 %10758, i64* %PC.i918
  %10759 = sext i64 %10756 to i128
  %10760 = and i128 %10759, -18446744073709551616
  %10761 = zext i64 %10756 to i128
  %10762 = or i128 %10760, %10761
  %10763 = mul i128 744, %10762
  %10764 = trunc i128 %10763 to i64
  store i64 %10764, i64* %RDX.i919, align 8
  %10765 = sext i64 %10764 to i128
  %10766 = icmp ne i128 %10765, %10763
  %10767 = zext i1 %10766 to i8
  %10768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10767, i8* %10768, align 1
  %10769 = trunc i128 %10763 to i32
  %10770 = and i32 %10769, 255
  %10771 = call i32 @llvm.ctpop.i32(i32 %10770)
  %10772 = trunc i32 %10771 to i8
  %10773 = and i8 %10772, 1
  %10774 = xor i8 %10773, 1
  %10775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10774, i8* %10775, align 1
  %10776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10776, align 1
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10777, align 1
  %10778 = lshr i64 %10764, 63
  %10779 = trunc i64 %10778 to i8
  %10780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10779, i8* %10780, align 1
  %10781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10767, i8* %10781, align 1
  store %struct.Memory* %loadMem_40b9f2, %struct.Memory** %MEMORY
  %loadMem_40b9f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10783 = getelementptr inbounds %struct.GPR, %struct.GPR* %10782, i32 0, i32 33
  %10784 = getelementptr inbounds %struct.Reg, %struct.Reg* %10783, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %10784 to i64*
  %10785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10786 = getelementptr inbounds %struct.GPR, %struct.GPR* %10785, i32 0, i32 1
  %10787 = getelementptr inbounds %struct.Reg, %struct.Reg* %10786, i32 0, i32 0
  %RAX.i916 = bitcast %union.anon* %10787 to i64*
  %10788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10789 = getelementptr inbounds %struct.GPR, %struct.GPR* %10788, i32 0, i32 9
  %10790 = getelementptr inbounds %struct.Reg, %struct.Reg* %10789, i32 0, i32 0
  %RSI.i917 = bitcast %union.anon* %10790 to i64*
  %10791 = load i64, i64* %RAX.i916
  %10792 = load i64, i64* %PC.i915
  %10793 = add i64 %10792, 3
  store i64 %10793, i64* %PC.i915
  store i64 %10791, i64* %RSI.i917, align 8
  store %struct.Memory* %loadMem_40b9f9, %struct.Memory** %MEMORY
  %loadMem_40b9fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10795 = getelementptr inbounds %struct.GPR, %struct.GPR* %10794, i32 0, i32 33
  %10796 = getelementptr inbounds %struct.Reg, %struct.Reg* %10795, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %10796 to i64*
  %10797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10798 = getelementptr inbounds %struct.GPR, %struct.GPR* %10797, i32 0, i32 7
  %10799 = getelementptr inbounds %struct.Reg, %struct.Reg* %10798, i32 0, i32 0
  %RDX.i913 = bitcast %union.anon* %10799 to i64*
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10801 = getelementptr inbounds %struct.GPR, %struct.GPR* %10800, i32 0, i32 9
  %10802 = getelementptr inbounds %struct.Reg, %struct.Reg* %10801, i32 0, i32 0
  %RSI.i914 = bitcast %union.anon* %10802 to i64*
  %10803 = load i64, i64* %RSI.i914
  %10804 = load i64, i64* %RDX.i913
  %10805 = load i64, i64* %PC.i912
  %10806 = add i64 %10805, 3
  store i64 %10806, i64* %PC.i912
  %10807 = add i64 %10804, %10803
  store i64 %10807, i64* %RSI.i914, align 8
  %10808 = icmp ult i64 %10807, %10803
  %10809 = icmp ult i64 %10807, %10804
  %10810 = or i1 %10808, %10809
  %10811 = zext i1 %10810 to i8
  %10812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10811, i8* %10812, align 1
  %10813 = trunc i64 %10807 to i32
  %10814 = and i32 %10813, 255
  %10815 = call i32 @llvm.ctpop.i32(i32 %10814)
  %10816 = trunc i32 %10815 to i8
  %10817 = and i8 %10816, 1
  %10818 = xor i8 %10817, 1
  %10819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10818, i8* %10819, align 1
  %10820 = xor i64 %10804, %10803
  %10821 = xor i64 %10820, %10807
  %10822 = lshr i64 %10821, 4
  %10823 = trunc i64 %10822 to i8
  %10824 = and i8 %10823, 1
  %10825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10824, i8* %10825, align 1
  %10826 = icmp eq i64 %10807, 0
  %10827 = zext i1 %10826 to i8
  %10828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10827, i8* %10828, align 1
  %10829 = lshr i64 %10807, 63
  %10830 = trunc i64 %10829 to i8
  %10831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10830, i8* %10831, align 1
  %10832 = lshr i64 %10803, 63
  %10833 = lshr i64 %10804, 63
  %10834 = xor i64 %10829, %10832
  %10835 = xor i64 %10829, %10833
  %10836 = add i64 %10834, %10835
  %10837 = icmp eq i64 %10836, 2
  %10838 = zext i1 %10837 to i8
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10838, i8* %10839, align 1
  store %struct.Memory* %loadMem_40b9fc, %struct.Memory** %MEMORY
  %loadMem_40b9ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10841 = getelementptr inbounds %struct.GPR, %struct.GPR* %10840, i32 0, i32 33
  %10842 = getelementptr inbounds %struct.Reg, %struct.Reg* %10841, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %10842 to i64*
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10844 = getelementptr inbounds %struct.GPR, %struct.GPR* %10843, i32 0, i32 7
  %10845 = getelementptr inbounds %struct.Reg, %struct.Reg* %10844, i32 0, i32 0
  %RDX.i910 = bitcast %union.anon* %10845 to i64*
  %10846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10847 = getelementptr inbounds %struct.GPR, %struct.GPR* %10846, i32 0, i32 15
  %10848 = getelementptr inbounds %struct.Reg, %struct.Reg* %10847, i32 0, i32 0
  %RBP.i911 = bitcast %union.anon* %10848 to i64*
  %10849 = load i64, i64* %RBP.i911
  %10850 = sub i64 %10849, 36
  %10851 = load i64, i64* %PC.i909
  %10852 = add i64 %10851, 4
  store i64 %10852, i64* %PC.i909
  %10853 = inttoptr i64 %10850 to i32*
  %10854 = load i32, i32* %10853
  %10855 = sext i32 %10854 to i64
  store i64 %10855, i64* %RDX.i910, align 8
  store %struct.Memory* %loadMem_40b9ff, %struct.Memory** %MEMORY
  %loadMem_40ba03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10857 = getelementptr inbounds %struct.GPR, %struct.GPR* %10856, i32 0, i32 33
  %10858 = getelementptr inbounds %struct.Reg, %struct.Reg* %10857, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %10858 to i64*
  %10859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10860 = getelementptr inbounds %struct.GPR, %struct.GPR* %10859, i32 0, i32 7
  %10861 = getelementptr inbounds %struct.Reg, %struct.Reg* %10860, i32 0, i32 0
  %RDX.i908 = bitcast %union.anon* %10861 to i64*
  %10862 = load i64, i64* %RDX.i908
  %10863 = load i64, i64* %PC.i907
  %10864 = add i64 %10863, 7
  store i64 %10864, i64* %PC.i907
  %10865 = sext i64 %10862 to i128
  %10866 = and i128 %10865, -18446744073709551616
  %10867 = zext i64 %10862 to i128
  %10868 = or i128 %10866, %10867
  %10869 = mul i128 744, %10868
  %10870 = trunc i128 %10869 to i64
  store i64 %10870, i64* %RDX.i908, align 8
  %10871 = sext i64 %10870 to i128
  %10872 = icmp ne i128 %10871, %10869
  %10873 = zext i1 %10872 to i8
  %10874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10873, i8* %10874, align 1
  %10875 = trunc i128 %10869 to i32
  %10876 = and i32 %10875, 255
  %10877 = call i32 @llvm.ctpop.i32(i32 %10876)
  %10878 = trunc i32 %10877 to i8
  %10879 = and i8 %10878, 1
  %10880 = xor i8 %10879, 1
  %10881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10880, i8* %10881, align 1
  %10882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10882, align 1
  %10883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10883, align 1
  %10884 = lshr i64 %10870, 63
  %10885 = trunc i64 %10884 to i8
  %10886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10885, i8* %10886, align 1
  %10887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10873, i8* %10887, align 1
  store %struct.Memory* %loadMem_40ba03, %struct.Memory** %MEMORY
  %loadMem_40ba0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10889 = getelementptr inbounds %struct.GPR, %struct.GPR* %10888, i32 0, i32 33
  %10890 = getelementptr inbounds %struct.Reg, %struct.Reg* %10889, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %10890 to i64*
  %10891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10892 = getelementptr inbounds %struct.GPR, %struct.GPR* %10891, i32 0, i32 1
  %10893 = getelementptr inbounds %struct.Reg, %struct.Reg* %10892, i32 0, i32 0
  %RAX.i905 = bitcast %union.anon* %10893 to i64*
  %10894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10895 = getelementptr inbounds %struct.GPR, %struct.GPR* %10894, i32 0, i32 11
  %10896 = getelementptr inbounds %struct.Reg, %struct.Reg* %10895, i32 0, i32 0
  %RDI.i906 = bitcast %union.anon* %10896 to i64*
  %10897 = load i64, i64* %RAX.i905
  %10898 = load i64, i64* %PC.i904
  %10899 = add i64 %10898, 3
  store i64 %10899, i64* %PC.i904
  store i64 %10897, i64* %RDI.i906, align 8
  store %struct.Memory* %loadMem_40ba0a, %struct.Memory** %MEMORY
  %loadMem_40ba0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10901 = getelementptr inbounds %struct.GPR, %struct.GPR* %10900, i32 0, i32 33
  %10902 = getelementptr inbounds %struct.Reg, %struct.Reg* %10901, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %10902 to i64*
  %10903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10904 = getelementptr inbounds %struct.GPR, %struct.GPR* %10903, i32 0, i32 7
  %10905 = getelementptr inbounds %struct.Reg, %struct.Reg* %10904, i32 0, i32 0
  %RDX.i902 = bitcast %union.anon* %10905 to i64*
  %10906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10907 = getelementptr inbounds %struct.GPR, %struct.GPR* %10906, i32 0, i32 11
  %10908 = getelementptr inbounds %struct.Reg, %struct.Reg* %10907, i32 0, i32 0
  %RDI.i903 = bitcast %union.anon* %10908 to i64*
  %10909 = load i64, i64* %RDI.i903
  %10910 = load i64, i64* %RDX.i902
  %10911 = load i64, i64* %PC.i901
  %10912 = add i64 %10911, 3
  store i64 %10912, i64* %PC.i901
  %10913 = add i64 %10910, %10909
  store i64 %10913, i64* %RDI.i903, align 8
  %10914 = icmp ult i64 %10913, %10909
  %10915 = icmp ult i64 %10913, %10910
  %10916 = or i1 %10914, %10915
  %10917 = zext i1 %10916 to i8
  %10918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10917, i8* %10918, align 1
  %10919 = trunc i64 %10913 to i32
  %10920 = and i32 %10919, 255
  %10921 = call i32 @llvm.ctpop.i32(i32 %10920)
  %10922 = trunc i32 %10921 to i8
  %10923 = and i8 %10922, 1
  %10924 = xor i8 %10923, 1
  %10925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10924, i8* %10925, align 1
  %10926 = xor i64 %10910, %10909
  %10927 = xor i64 %10926, %10913
  %10928 = lshr i64 %10927, 4
  %10929 = trunc i64 %10928 to i8
  %10930 = and i8 %10929, 1
  %10931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10930, i8* %10931, align 1
  %10932 = icmp eq i64 %10913, 0
  %10933 = zext i1 %10932 to i8
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10933, i8* %10934, align 1
  %10935 = lshr i64 %10913, 63
  %10936 = trunc i64 %10935 to i8
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10936, i8* %10937, align 1
  %10938 = lshr i64 %10909, 63
  %10939 = lshr i64 %10910, 63
  %10940 = xor i64 %10935, %10938
  %10941 = xor i64 %10935, %10939
  %10942 = add i64 %10940, %10941
  %10943 = icmp eq i64 %10942, 2
  %10944 = zext i1 %10943 to i8
  %10945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10944, i8* %10945, align 1
  store %struct.Memory* %loadMem_40ba0d, %struct.Memory** %MEMORY
  %loadMem_40ba10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10947 = getelementptr inbounds %struct.GPR, %struct.GPR* %10946, i32 0, i32 33
  %10948 = getelementptr inbounds %struct.Reg, %struct.Reg* %10947, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %10948 to i64*
  %10949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10950 = getelementptr inbounds %struct.GPR, %struct.GPR* %10949, i32 0, i32 17
  %10951 = getelementptr inbounds %struct.Reg, %struct.Reg* %10950, i32 0, i32 0
  %R8D.i899 = bitcast %union.anon* %10951 to i32*
  %10952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10953 = getelementptr inbounds %struct.GPR, %struct.GPR* %10952, i32 0, i32 11
  %10954 = getelementptr inbounds %struct.Reg, %struct.Reg* %10953, i32 0, i32 0
  %RDI.i900 = bitcast %union.anon* %10954 to i64*
  %10955 = bitcast i32* %R8D.i899 to i64*
  %10956 = load i64, i64* %RDI.i900
  %10957 = add i64 %10956, 96
  %10958 = load i64, i64* %PC.i898
  %10959 = add i64 %10958, 4
  store i64 %10959, i64* %PC.i898
  %10960 = inttoptr i64 %10957 to i32*
  %10961 = load i32, i32* %10960
  %10962 = zext i32 %10961 to i64
  store i64 %10962, i64* %10955, align 8
  store %struct.Memory* %loadMem_40ba10, %struct.Memory** %MEMORY
  %loadMem_40ba14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10964 = getelementptr inbounds %struct.GPR, %struct.GPR* %10963, i32 0, i32 33
  %10965 = getelementptr inbounds %struct.Reg, %struct.Reg* %10964, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %10965 to i64*
  %10966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10967 = getelementptr inbounds %struct.GPR, %struct.GPR* %10966, i32 0, i32 17
  %10968 = getelementptr inbounds %struct.Reg, %struct.Reg* %10967, i32 0, i32 0
  %R8D.i896 = bitcast %union.anon* %10968 to i32*
  %10969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10970 = getelementptr inbounds %struct.GPR, %struct.GPR* %10969, i32 0, i32 19
  %10971 = getelementptr inbounds %struct.Reg, %struct.Reg* %10970, i32 0, i32 0
  %R9D.i897 = bitcast %union.anon* %10971 to i32*
  %10972 = bitcast i32* %R9D.i897 to i64*
  %10973 = load i32, i32* %R8D.i896
  %10974 = zext i32 %10973 to i64
  %10975 = load i64, i64* %PC.i895
  %10976 = add i64 %10975, 3
  store i64 %10976, i64* %PC.i895
  %10977 = and i64 %10974, 4294967295
  store i64 %10977, i64* %10972, align 8
  store %struct.Memory* %loadMem_40ba14, %struct.Memory** %MEMORY
  %loadMem_40ba17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10979 = getelementptr inbounds %struct.GPR, %struct.GPR* %10978, i32 0, i32 33
  %10980 = getelementptr inbounds %struct.Reg, %struct.Reg* %10979, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %10980 to i64*
  %10981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10982 = getelementptr inbounds %struct.GPR, %struct.GPR* %10981, i32 0, i32 19
  %10983 = getelementptr inbounds %struct.Reg, %struct.Reg* %10982, i32 0, i32 0
  %R9D.i894 = bitcast %union.anon* %10983 to i32*
  %10984 = bitcast i32* %R9D.i894 to i64*
  %10985 = load i32, i32* %R9D.i894
  %10986 = zext i32 %10985 to i64
  %10987 = load i64, i64* %PC.i893
  %10988 = add i64 %10987, 4
  store i64 %10988, i64* %PC.i893
  %10989 = add i32 1, %10985
  %10990 = zext i32 %10989 to i64
  store i64 %10990, i64* %10984, align 8
  %10991 = icmp ult i32 %10989, %10985
  %10992 = icmp ult i32 %10989, 1
  %10993 = or i1 %10991, %10992
  %10994 = zext i1 %10993 to i8
  %10995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10994, i8* %10995, align 1
  %10996 = and i32 %10989, 255
  %10997 = call i32 @llvm.ctpop.i32(i32 %10996)
  %10998 = trunc i32 %10997 to i8
  %10999 = and i8 %10998, 1
  %11000 = xor i8 %10999, 1
  %11001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11000, i8* %11001, align 1
  %11002 = xor i64 1, %10986
  %11003 = trunc i64 %11002 to i32
  %11004 = xor i32 %11003, %10989
  %11005 = lshr i32 %11004, 4
  %11006 = trunc i32 %11005 to i8
  %11007 = and i8 %11006, 1
  %11008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11007, i8* %11008, align 1
  %11009 = icmp eq i32 %10989, 0
  %11010 = zext i1 %11009 to i8
  %11011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11010, i8* %11011, align 1
  %11012 = lshr i32 %10989, 31
  %11013 = trunc i32 %11012 to i8
  %11014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11013, i8* %11014, align 1
  %11015 = lshr i32 %10985, 31
  %11016 = xor i32 %11012, %11015
  %11017 = add i32 %11016, %11012
  %11018 = icmp eq i32 %11017, 2
  %11019 = zext i1 %11018 to i8
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11019, i8* %11020, align 1
  store %struct.Memory* %loadMem_40ba17, %struct.Memory** %MEMORY
  %loadMem_40ba1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11022 = getelementptr inbounds %struct.GPR, %struct.GPR* %11021, i32 0, i32 33
  %11023 = getelementptr inbounds %struct.Reg, %struct.Reg* %11022, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %11023 to i64*
  %11024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11025 = getelementptr inbounds %struct.GPR, %struct.GPR* %11024, i32 0, i32 19
  %11026 = getelementptr inbounds %struct.Reg, %struct.Reg* %11025, i32 0, i32 0
  %R9D.i891 = bitcast %union.anon* %11026 to i32*
  %11027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11028 = getelementptr inbounds %struct.GPR, %struct.GPR* %11027, i32 0, i32 11
  %11029 = getelementptr inbounds %struct.Reg, %struct.Reg* %11028, i32 0, i32 0
  %RDI.i892 = bitcast %union.anon* %11029 to i64*
  %11030 = load i64, i64* %RDI.i892
  %11031 = add i64 %11030, 96
  %11032 = load i32, i32* %R9D.i891
  %11033 = zext i32 %11032 to i64
  %11034 = load i64, i64* %PC.i890
  %11035 = add i64 %11034, 4
  store i64 %11035, i64* %PC.i890
  %11036 = inttoptr i64 %11031 to i32*
  store i32 %11032, i32* %11036
  store %struct.Memory* %loadMem_40ba1b, %struct.Memory** %MEMORY
  %loadMem_40ba1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11038 = getelementptr inbounds %struct.GPR, %struct.GPR* %11037, i32 0, i32 33
  %11039 = getelementptr inbounds %struct.Reg, %struct.Reg* %11038, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %11039 to i64*
  %11040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11041 = getelementptr inbounds %struct.GPR, %struct.GPR* %11040, i32 0, i32 17
  %11042 = getelementptr inbounds %struct.Reg, %struct.Reg* %11041, i32 0, i32 0
  %R8D.i888 = bitcast %union.anon* %11042 to i32*
  %11043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11044 = getelementptr inbounds %struct.GPR, %struct.GPR* %11043, i32 0, i32 7
  %11045 = getelementptr inbounds %struct.Reg, %struct.Reg* %11044, i32 0, i32 0
  %RDX.i889 = bitcast %union.anon* %11045 to i64*
  %11046 = load i32, i32* %R8D.i888
  %11047 = zext i32 %11046 to i64
  %11048 = load i64, i64* %PC.i887
  %11049 = add i64 %11048, 3
  store i64 %11049, i64* %PC.i887
  %11050 = shl i64 %11047, 32
  %11051 = ashr exact i64 %11050, 32
  store i64 %11051, i64* %RDX.i889, align 8
  store %struct.Memory* %loadMem_40ba1f, %struct.Memory** %MEMORY
  %loadMem_40ba22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11053 = getelementptr inbounds %struct.GPR, %struct.GPR* %11052, i32 0, i32 33
  %11054 = getelementptr inbounds %struct.Reg, %struct.Reg* %11053, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %11054 to i64*
  %11055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11056 = getelementptr inbounds %struct.GPR, %struct.GPR* %11055, i32 0, i32 5
  %11057 = getelementptr inbounds %struct.Reg, %struct.Reg* %11056, i32 0, i32 0
  %ECX.i884 = bitcast %union.anon* %11057 to i32*
  %11058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11059 = getelementptr inbounds %struct.GPR, %struct.GPR* %11058, i32 0, i32 7
  %11060 = getelementptr inbounds %struct.Reg, %struct.Reg* %11059, i32 0, i32 0
  %RDX.i885 = bitcast %union.anon* %11060 to i64*
  %11061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11062 = getelementptr inbounds %struct.GPR, %struct.GPR* %11061, i32 0, i32 9
  %11063 = getelementptr inbounds %struct.Reg, %struct.Reg* %11062, i32 0, i32 0
  %RSI.i886 = bitcast %union.anon* %11063 to i64*
  %11064 = load i64, i64* %RSI.i886
  %11065 = load i64, i64* %RDX.i885
  %11066 = mul i64 %11065, 4
  %11067 = add i64 %11064, 100
  %11068 = add i64 %11067, %11066
  %11069 = load i32, i32* %ECX.i884
  %11070 = zext i32 %11069 to i64
  %11071 = load i64, i64* %PC.i883
  %11072 = add i64 %11071, 4
  store i64 %11072, i64* %PC.i883
  %11073 = inttoptr i64 %11068 to i32*
  store i32 %11069, i32* %11073
  store %struct.Memory* %loadMem_40ba22, %struct.Memory** %MEMORY
  %loadMem_40ba26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11075 = getelementptr inbounds %struct.GPR, %struct.GPR* %11074, i32 0, i32 33
  %11076 = getelementptr inbounds %struct.Reg, %struct.Reg* %11075, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %11076 to i64*
  %11077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11078 = getelementptr inbounds %struct.GPR, %struct.GPR* %11077, i32 0, i32 5
  %11079 = getelementptr inbounds %struct.Reg, %struct.Reg* %11078, i32 0, i32 0
  %RCX.i882 = bitcast %union.anon* %11079 to i64*
  %11080 = load i64, i64* %PC.i881
  %11081 = add i64 %11080, 7
  store i64 %11081, i64* %PC.i881
  %11082 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %11083 = zext i32 %11082 to i64
  store i64 %11083, i64* %RCX.i882, align 8
  store %struct.Memory* %loadMem_40ba26, %struct.Memory** %MEMORY
  %loadMem_40ba2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11085 = getelementptr inbounds %struct.GPR, %struct.GPR* %11084, i32 0, i32 33
  %11086 = getelementptr inbounds %struct.Reg, %struct.Reg* %11085, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %11086 to i64*
  %11087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11088 = getelementptr inbounds %struct.GPR, %struct.GPR* %11087, i32 0, i32 17
  %11089 = getelementptr inbounds %struct.Reg, %struct.Reg* %11088, i32 0, i32 0
  %R8D.i879 = bitcast %union.anon* %11089 to i32*
  %11090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11091 = getelementptr inbounds %struct.GPR, %struct.GPR* %11090, i32 0, i32 15
  %11092 = getelementptr inbounds %struct.Reg, %struct.Reg* %11091, i32 0, i32 0
  %RBP.i880 = bitcast %union.anon* %11092 to i64*
  %11093 = bitcast i32* %R8D.i879 to i64*
  %11094 = load i64, i64* %RBP.i880
  %11095 = sub i64 %11094, 4
  %11096 = load i64, i64* %PC.i878
  %11097 = add i64 %11096, 4
  store i64 %11097, i64* %PC.i878
  %11098 = inttoptr i64 %11095 to i32*
  %11099 = load i32, i32* %11098
  %11100 = zext i32 %11099 to i64
  store i64 %11100, i64* %11093, align 8
  store %struct.Memory* %loadMem_40ba2d, %struct.Memory** %MEMORY
  %loadMem_40ba31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11102 = getelementptr inbounds %struct.GPR, %struct.GPR* %11101, i32 0, i32 33
  %11103 = getelementptr inbounds %struct.Reg, %struct.Reg* %11102, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %11103 to i64*
  %11104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11105 = getelementptr inbounds %struct.GPR, %struct.GPR* %11104, i32 0, i32 17
  %11106 = getelementptr inbounds %struct.Reg, %struct.Reg* %11105, i32 0, i32 0
  %R8D.i877 = bitcast %union.anon* %11106 to i32*
  %11107 = bitcast i32* %R8D.i877 to i64*
  %11108 = load i32, i32* %R8D.i877
  %11109 = zext i32 %11108 to i64
  %11110 = load i64, i64* %PC.i876
  %11111 = add i64 %11110, 4
  store i64 %11111, i64* %PC.i876
  %11112 = sub i32 %11108, 1
  %11113 = zext i32 %11112 to i64
  store i64 %11113, i64* %11107, align 8
  %11114 = icmp ult i32 %11108, 1
  %11115 = zext i1 %11114 to i8
  %11116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11115, i8* %11116, align 1
  %11117 = and i32 %11112, 255
  %11118 = call i32 @llvm.ctpop.i32(i32 %11117)
  %11119 = trunc i32 %11118 to i8
  %11120 = and i8 %11119, 1
  %11121 = xor i8 %11120, 1
  %11122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11121, i8* %11122, align 1
  %11123 = xor i64 1, %11109
  %11124 = trunc i64 %11123 to i32
  %11125 = xor i32 %11124, %11112
  %11126 = lshr i32 %11125, 4
  %11127 = trunc i32 %11126 to i8
  %11128 = and i8 %11127, 1
  %11129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11128, i8* %11129, align 1
  %11130 = icmp eq i32 %11112, 0
  %11131 = zext i1 %11130 to i8
  %11132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11131, i8* %11132, align 1
  %11133 = lshr i32 %11112, 31
  %11134 = trunc i32 %11133 to i8
  %11135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11134, i8* %11135, align 1
  %11136 = lshr i32 %11108, 31
  %11137 = xor i32 %11133, %11136
  %11138 = add i32 %11137, %11136
  %11139 = icmp eq i32 %11138, 2
  %11140 = zext i1 %11139 to i8
  %11141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11140, i8* %11141, align 1
  store %struct.Memory* %loadMem_40ba31, %struct.Memory** %MEMORY
  %loadMem_40ba35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11143 = getelementptr inbounds %struct.GPR, %struct.GPR* %11142, i32 0, i32 33
  %11144 = getelementptr inbounds %struct.Reg, %struct.Reg* %11143, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %11144 to i64*
  %11145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11146 = getelementptr inbounds %struct.GPR, %struct.GPR* %11145, i32 0, i32 17
  %11147 = getelementptr inbounds %struct.Reg, %struct.Reg* %11146, i32 0, i32 0
  %R8D.i874 = bitcast %union.anon* %11147 to i32*
  %11148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11149 = getelementptr inbounds %struct.GPR, %struct.GPR* %11148, i32 0, i32 7
  %11150 = getelementptr inbounds %struct.Reg, %struct.Reg* %11149, i32 0, i32 0
  %RDX.i875 = bitcast %union.anon* %11150 to i64*
  %11151 = load i32, i32* %R8D.i874
  %11152 = zext i32 %11151 to i64
  %11153 = load i64, i64* %PC.i873
  %11154 = add i64 %11153, 3
  store i64 %11154, i64* %PC.i873
  %11155 = shl i64 %11152, 32
  %11156 = ashr exact i64 %11155, 32
  store i64 %11156, i64* %RDX.i875, align 8
  store %struct.Memory* %loadMem_40ba35, %struct.Memory** %MEMORY
  %loadMem_40ba38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11158 = getelementptr inbounds %struct.GPR, %struct.GPR* %11157, i32 0, i32 33
  %11159 = getelementptr inbounds %struct.Reg, %struct.Reg* %11158, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %11159 to i64*
  %11160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11161 = getelementptr inbounds %struct.GPR, %struct.GPR* %11160, i32 0, i32 7
  %11162 = getelementptr inbounds %struct.Reg, %struct.Reg* %11161, i32 0, i32 0
  %RDX.i872 = bitcast %union.anon* %11162 to i64*
  %11163 = load i64, i64* %RDX.i872
  %11164 = mul i64 %11163, 4
  %11165 = add i64 %11164, 11187184
  %11166 = load i64, i64* %PC.i871
  %11167 = add i64 %11166, 8
  store i64 %11167, i64* %PC.i871
  %11168 = inttoptr i64 %11165 to i32*
  %11169 = load i32, i32* %11168
  %11170 = sext i32 %11169 to i64
  store i64 %11170, i64* %RDX.i872, align 8
  store %struct.Memory* %loadMem_40ba38, %struct.Memory** %MEMORY
  %loadMem_40ba40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11172 = getelementptr inbounds %struct.GPR, %struct.GPR* %11171, i32 0, i32 33
  %11173 = getelementptr inbounds %struct.Reg, %struct.Reg* %11172, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %11173 to i64*
  %11174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11175 = getelementptr inbounds %struct.GPR, %struct.GPR* %11174, i32 0, i32 7
  %11176 = getelementptr inbounds %struct.Reg, %struct.Reg* %11175, i32 0, i32 0
  %RDX.i870 = bitcast %union.anon* %11176 to i64*
  %11177 = load i64, i64* %RDX.i870
  %11178 = load i64, i64* %PC.i869
  %11179 = add i64 %11178, 7
  store i64 %11179, i64* %PC.i869
  %11180 = sext i64 %11177 to i128
  %11181 = and i128 %11180, -18446744073709551616
  %11182 = zext i64 %11177 to i128
  %11183 = or i128 %11181, %11182
  %11184 = mul i128 744, %11183
  %11185 = trunc i128 %11184 to i64
  store i64 %11185, i64* %RDX.i870, align 8
  %11186 = sext i64 %11185 to i128
  %11187 = icmp ne i128 %11186, %11184
  %11188 = zext i1 %11187 to i8
  %11189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11188, i8* %11189, align 1
  %11190 = trunc i128 %11184 to i32
  %11191 = and i32 %11190, 255
  %11192 = call i32 @llvm.ctpop.i32(i32 %11191)
  %11193 = trunc i32 %11192 to i8
  %11194 = and i8 %11193, 1
  %11195 = xor i8 %11194, 1
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11195, i8* %11196, align 1
  %11197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11197, align 1
  %11198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11198, align 1
  %11199 = lshr i64 %11185, 63
  %11200 = trunc i64 %11199 to i8
  %11201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11200, i8* %11201, align 1
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11188, i8* %11202, align 1
  store %struct.Memory* %loadMem_40ba40, %struct.Memory** %MEMORY
  %loadMem_40ba47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11204 = getelementptr inbounds %struct.GPR, %struct.GPR* %11203, i32 0, i32 33
  %11205 = getelementptr inbounds %struct.Reg, %struct.Reg* %11204, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %11205 to i64*
  %11206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11207 = getelementptr inbounds %struct.GPR, %struct.GPR* %11206, i32 0, i32 1
  %11208 = getelementptr inbounds %struct.Reg, %struct.Reg* %11207, i32 0, i32 0
  %RAX.i867 = bitcast %union.anon* %11208 to i64*
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11210 = getelementptr inbounds %struct.GPR, %struct.GPR* %11209, i32 0, i32 7
  %11211 = getelementptr inbounds %struct.Reg, %struct.Reg* %11210, i32 0, i32 0
  %RDX.i868 = bitcast %union.anon* %11211 to i64*
  %11212 = load i64, i64* %RAX.i867
  %11213 = load i64, i64* %RDX.i868
  %11214 = load i64, i64* %PC.i866
  %11215 = add i64 %11214, 3
  store i64 %11215, i64* %PC.i866
  %11216 = add i64 %11213, %11212
  store i64 %11216, i64* %RAX.i867, align 8
  %11217 = icmp ult i64 %11216, %11212
  %11218 = icmp ult i64 %11216, %11213
  %11219 = or i1 %11217, %11218
  %11220 = zext i1 %11219 to i8
  %11221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11220, i8* %11221, align 1
  %11222 = trunc i64 %11216 to i32
  %11223 = and i32 %11222, 255
  %11224 = call i32 @llvm.ctpop.i32(i32 %11223)
  %11225 = trunc i32 %11224 to i8
  %11226 = and i8 %11225, 1
  %11227 = xor i8 %11226, 1
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11227, i8* %11228, align 1
  %11229 = xor i64 %11213, %11212
  %11230 = xor i64 %11229, %11216
  %11231 = lshr i64 %11230, 4
  %11232 = trunc i64 %11231 to i8
  %11233 = and i8 %11232, 1
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11233, i8* %11234, align 1
  %11235 = icmp eq i64 %11216, 0
  %11236 = zext i1 %11235 to i8
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11236, i8* %11237, align 1
  %11238 = lshr i64 %11216, 63
  %11239 = trunc i64 %11238 to i8
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11239, i8* %11240, align 1
  %11241 = lshr i64 %11212, 63
  %11242 = lshr i64 %11213, 63
  %11243 = xor i64 %11238, %11241
  %11244 = xor i64 %11238, %11242
  %11245 = add i64 %11243, %11244
  %11246 = icmp eq i64 %11245, 2
  %11247 = zext i1 %11246 to i8
  %11248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11247, i8* %11248, align 1
  store %struct.Memory* %loadMem_40ba47, %struct.Memory** %MEMORY
  %loadMem_40ba4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11250 = getelementptr inbounds %struct.GPR, %struct.GPR* %11249, i32 0, i32 33
  %11251 = getelementptr inbounds %struct.Reg, %struct.Reg* %11250, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %11251 to i64*
  %11252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11253 = getelementptr inbounds %struct.GPR, %struct.GPR* %11252, i32 0, i32 5
  %11254 = getelementptr inbounds %struct.Reg, %struct.Reg* %11253, i32 0, i32 0
  %ECX.i864 = bitcast %union.anon* %11254 to i32*
  %11255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11256 = getelementptr inbounds %struct.GPR, %struct.GPR* %11255, i32 0, i32 1
  %11257 = getelementptr inbounds %struct.Reg, %struct.Reg* %11256, i32 0, i32 0
  %RAX.i865 = bitcast %union.anon* %11257 to i64*
  %11258 = load i64, i64* %RAX.i865
  %11259 = add i64 %11258, 740
  %11260 = load i32, i32* %ECX.i864
  %11261 = zext i32 %11260 to i64
  %11262 = load i64, i64* %PC.i863
  %11263 = add i64 %11262, 6
  store i64 %11263, i64* %PC.i863
  %11264 = inttoptr i64 %11259 to i32*
  store i32 %11260, i32* %11264
  store %struct.Memory* %loadMem_40ba4a, %struct.Memory** %MEMORY
  br label %block_.L_40ba50

block_.L_40ba50:                                  ; preds = %block_40b8e2, %block_40b8aa, %block_.L_40b890
  %loadMem_40ba50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11266 = getelementptr inbounds %struct.GPR, %struct.GPR* %11265, i32 0, i32 33
  %11267 = getelementptr inbounds %struct.Reg, %struct.Reg* %11266, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %11267 to i64*
  %11268 = load i64, i64* %PC.i862
  %11269 = add i64 %11268, 5
  %11270 = load i64, i64* %PC.i862
  %11271 = add i64 %11270, 5
  store i64 %11271, i64* %PC.i862
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11269, i64* %11272, align 8
  store %struct.Memory* %loadMem_40ba50, %struct.Memory** %MEMORY
  br label %block_.L_40ba55

block_.L_40ba55:                                  ; preds = %block_.L_40ba50, %block_.L_40b88b
  %loadMem_40ba55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11274 = getelementptr inbounds %struct.GPR, %struct.GPR* %11273, i32 0, i32 33
  %11275 = getelementptr inbounds %struct.Reg, %struct.Reg* %11274, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %11275 to i64*
  %11276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11277 = getelementptr inbounds %struct.GPR, %struct.GPR* %11276, i32 0, i32 1
  %11278 = getelementptr inbounds %struct.Reg, %struct.Reg* %11277, i32 0, i32 0
  %RAX.i860 = bitcast %union.anon* %11278 to i64*
  %11279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11280 = getelementptr inbounds %struct.GPR, %struct.GPR* %11279, i32 0, i32 15
  %11281 = getelementptr inbounds %struct.Reg, %struct.Reg* %11280, i32 0, i32 0
  %RBP.i861 = bitcast %union.anon* %11281 to i64*
  %11282 = load i64, i64* %RBP.i861
  %11283 = sub i64 %11282, 4
  %11284 = load i64, i64* %PC.i859
  %11285 = add i64 %11284, 3
  store i64 %11285, i64* %PC.i859
  %11286 = inttoptr i64 %11283 to i32*
  %11287 = load i32, i32* %11286
  %11288 = zext i32 %11287 to i64
  store i64 %11288, i64* %RAX.i860, align 8
  store %struct.Memory* %loadMem_40ba55, %struct.Memory** %MEMORY
  %loadMem_40ba58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11290 = getelementptr inbounds %struct.GPR, %struct.GPR* %11289, i32 0, i32 33
  %11291 = getelementptr inbounds %struct.Reg, %struct.Reg* %11290, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %11291 to i64*
  %11292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11293 = getelementptr inbounds %struct.GPR, %struct.GPR* %11292, i32 0, i32 1
  %11294 = getelementptr inbounds %struct.Reg, %struct.Reg* %11293, i32 0, i32 0
  %RAX.i858 = bitcast %union.anon* %11294 to i64*
  %11295 = load i64, i64* %RAX.i858
  %11296 = load i64, i64* %PC.i857
  %11297 = add i64 %11296, 3
  store i64 %11297, i64* %PC.i857
  %11298 = trunc i64 %11295 to i32
  %11299 = sub i32 %11298, 20
  %11300 = zext i32 %11299 to i64
  store i64 %11300, i64* %RAX.i858, align 8
  %11301 = icmp ult i32 %11298, 20
  %11302 = zext i1 %11301 to i8
  %11303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11302, i8* %11303, align 1
  %11304 = and i32 %11299, 255
  %11305 = call i32 @llvm.ctpop.i32(i32 %11304)
  %11306 = trunc i32 %11305 to i8
  %11307 = and i8 %11306, 1
  %11308 = xor i8 %11307, 1
  %11309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11308, i8* %11309, align 1
  %11310 = xor i64 20, %11295
  %11311 = trunc i64 %11310 to i32
  %11312 = xor i32 %11311, %11299
  %11313 = lshr i32 %11312, 4
  %11314 = trunc i32 %11313 to i8
  %11315 = and i8 %11314, 1
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11315, i8* %11316, align 1
  %11317 = icmp eq i32 %11299, 0
  %11318 = zext i1 %11317 to i8
  %11319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11318, i8* %11319, align 1
  %11320 = lshr i32 %11299, 31
  %11321 = trunc i32 %11320 to i8
  %11322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11321, i8* %11322, align 1
  %11323 = lshr i32 %11298, 31
  %11324 = xor i32 %11320, %11323
  %11325 = add i32 %11324, %11323
  %11326 = icmp eq i32 %11325, 2
  %11327 = zext i1 %11326 to i8
  %11328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11327, i8* %11328, align 1
  store %struct.Memory* %loadMem_40ba58, %struct.Memory** %MEMORY
  %loadMem_40ba5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11330 = getelementptr inbounds %struct.GPR, %struct.GPR* %11329, i32 0, i32 33
  %11331 = getelementptr inbounds %struct.Reg, %struct.Reg* %11330, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %11331 to i64*
  %11332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11333 = getelementptr inbounds %struct.GPR, %struct.GPR* %11332, i32 0, i32 1
  %11334 = getelementptr inbounds %struct.Reg, %struct.Reg* %11333, i32 0, i32 0
  %EAX.i855 = bitcast %union.anon* %11334 to i32*
  %11335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11336 = getelementptr inbounds %struct.GPR, %struct.GPR* %11335, i32 0, i32 5
  %11337 = getelementptr inbounds %struct.Reg, %struct.Reg* %11336, i32 0, i32 0
  %RCX.i856 = bitcast %union.anon* %11337 to i64*
  %11338 = load i32, i32* %EAX.i855
  %11339 = zext i32 %11338 to i64
  %11340 = load i64, i64* %PC.i854
  %11341 = add i64 %11340, 3
  store i64 %11341, i64* %PC.i854
  %11342 = shl i64 %11339, 32
  %11343 = ashr exact i64 %11342, 32
  store i64 %11343, i64* %RCX.i856, align 8
  store %struct.Memory* %loadMem_40ba5b, %struct.Memory** %MEMORY
  %loadMem_40ba5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11345 = getelementptr inbounds %struct.GPR, %struct.GPR* %11344, i32 0, i32 33
  %11346 = getelementptr inbounds %struct.Reg, %struct.Reg* %11345, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %11346 to i64*
  %11347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11348 = getelementptr inbounds %struct.GPR, %struct.GPR* %11347, i32 0, i32 1
  %11349 = getelementptr inbounds %struct.Reg, %struct.Reg* %11348, i32 0, i32 0
  %RAX.i852 = bitcast %union.anon* %11349 to i64*
  %11350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11351 = getelementptr inbounds %struct.GPR, %struct.GPR* %11350, i32 0, i32 5
  %11352 = getelementptr inbounds %struct.Reg, %struct.Reg* %11351, i32 0, i32 0
  %RCX.i853 = bitcast %union.anon* %11352 to i64*
  %11353 = load i64, i64* %RCX.i853
  %11354 = add i64 %11353, 12099168
  %11355 = load i64, i64* %PC.i851
  %11356 = add i64 %11355, 8
  store i64 %11356, i64* %PC.i851
  %11357 = inttoptr i64 %11354 to i8*
  %11358 = load i8, i8* %11357
  %11359 = zext i8 %11358 to i64
  store i64 %11359, i64* %RAX.i852, align 8
  store %struct.Memory* %loadMem_40ba5e, %struct.Memory** %MEMORY
  %loadMem_40ba66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11361 = getelementptr inbounds %struct.GPR, %struct.GPR* %11360, i32 0, i32 33
  %11362 = getelementptr inbounds %struct.Reg, %struct.Reg* %11361, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %11362 to i64*
  %11363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11364 = getelementptr inbounds %struct.GPR, %struct.GPR* %11363, i32 0, i32 1
  %11365 = getelementptr inbounds %struct.Reg, %struct.Reg* %11364, i32 0, i32 0
  %EAX.i850 = bitcast %union.anon* %11365 to i32*
  %11366 = load i32, i32* %EAX.i850
  %11367 = zext i32 %11366 to i64
  %11368 = load i64, i64* %PC.i849
  %11369 = add i64 %11368, 3
  store i64 %11369, i64* %PC.i849
  %11370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11370, align 1
  %11371 = and i32 %11366, 255
  %11372 = call i32 @llvm.ctpop.i32(i32 %11371)
  %11373 = trunc i32 %11372 to i8
  %11374 = and i8 %11373, 1
  %11375 = xor i8 %11374, 1
  %11376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11375, i8* %11376, align 1
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11377, align 1
  %11378 = icmp eq i32 %11366, 0
  %11379 = zext i1 %11378 to i8
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11379, i8* %11380, align 1
  %11381 = lshr i32 %11366, 31
  %11382 = trunc i32 %11381 to i8
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11382, i8* %11383, align 1
  %11384 = lshr i32 %11366, 31
  %11385 = xor i32 %11381, %11384
  %11386 = add i32 %11385, %11384
  %11387 = icmp eq i32 %11386, 2
  %11388 = zext i1 %11387 to i8
  %11389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11388, i8* %11389, align 1
  store %struct.Memory* %loadMem_40ba66, %struct.Memory** %MEMORY
  %loadMem_40ba69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11391 = getelementptr inbounds %struct.GPR, %struct.GPR* %11390, i32 0, i32 33
  %11392 = getelementptr inbounds %struct.Reg, %struct.Reg* %11391, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %11392 to i64*
  %11393 = load i64, i64* %PC.i848
  %11394 = add i64 %11393, 324
  %11395 = load i64, i64* %PC.i848
  %11396 = add i64 %11395, 6
  %11397 = load i64, i64* %PC.i848
  %11398 = add i64 %11397, 6
  store i64 %11398, i64* %PC.i848
  %11399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11400 = load i8, i8* %11399, align 1
  %11401 = icmp eq i8 %11400, 0
  %11402 = zext i1 %11401 to i8
  store i8 %11402, i8* %BRANCH_TAKEN, align 1
  %11403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11404 = select i1 %11401, i64 %11394, i64 %11396
  store i64 %11404, i64* %11403, align 8
  store %struct.Memory* %loadMem_40ba69, %struct.Memory** %MEMORY
  %loadBr_40ba69 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ba69 = icmp eq i8 %loadBr_40ba69, 1
  br i1 %cmpBr_40ba69, label %block_.L_40bbad, label %block_40ba6f

block_40ba6f:                                     ; preds = %block_.L_40ba55
  %loadMem_40ba6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11406 = getelementptr inbounds %struct.GPR, %struct.GPR* %11405, i32 0, i32 33
  %11407 = getelementptr inbounds %struct.Reg, %struct.Reg* %11406, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %11407 to i64*
  %11408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11409 = getelementptr inbounds %struct.GPR, %struct.GPR* %11408, i32 0, i32 15
  %11410 = getelementptr inbounds %struct.Reg, %struct.Reg* %11409, i32 0, i32 0
  %RBP.i847 = bitcast %union.anon* %11410 to i64*
  %11411 = load i64, i64* %RBP.i847
  %11412 = sub i64 %11411, 16
  %11413 = load i64, i64* %PC.i846
  %11414 = add i64 %11413, 4
  store i64 %11414, i64* %PC.i846
  %11415 = inttoptr i64 %11412 to i32*
  %11416 = load i32, i32* %11415
  %11417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11417, align 1
  %11418 = and i32 %11416, 255
  %11419 = call i32 @llvm.ctpop.i32(i32 %11418)
  %11420 = trunc i32 %11419 to i8
  %11421 = and i8 %11420, 1
  %11422 = xor i8 %11421, 1
  %11423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11422, i8* %11423, align 1
  %11424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11424, align 1
  %11425 = icmp eq i32 %11416, 0
  %11426 = zext i1 %11425 to i8
  %11427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11426, i8* %11427, align 1
  %11428 = lshr i32 %11416, 31
  %11429 = trunc i32 %11428 to i8
  %11430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11429, i8* %11430, align 1
  %11431 = lshr i32 %11416, 31
  %11432 = xor i32 %11428, %11431
  %11433 = add i32 %11432, %11431
  %11434 = icmp eq i32 %11433, 2
  %11435 = zext i1 %11434 to i8
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11435, i8* %11436, align 1
  store %struct.Memory* %loadMem_40ba6f, %struct.Memory** %MEMORY
  %loadMem_40ba73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11438 = getelementptr inbounds %struct.GPR, %struct.GPR* %11437, i32 0, i32 33
  %11439 = getelementptr inbounds %struct.Reg, %struct.Reg* %11438, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %11439 to i64*
  %11440 = load i64, i64* %PC.i845
  %11441 = add i64 %11440, 309
  %11442 = load i64, i64* %PC.i845
  %11443 = add i64 %11442, 6
  %11444 = load i64, i64* %PC.i845
  %11445 = add i64 %11444, 6
  store i64 %11445, i64* %PC.i845
  %11446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11447 = load i8, i8* %11446, align 1
  %11448 = icmp eq i8 %11447, 0
  %11449 = zext i1 %11448 to i8
  store i8 %11449, i8* %BRANCH_TAKEN, align 1
  %11450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11451 = select i1 %11448, i64 %11441, i64 %11443
  store i64 %11451, i64* %11450, align 8
  store %struct.Memory* %loadMem_40ba73, %struct.Memory** %MEMORY
  %loadBr_40ba73 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ba73 = icmp eq i8 %loadBr_40ba73, 1
  br i1 %cmpBr_40ba73, label %block_.L_40bba8, label %block_40ba79

block_40ba79:                                     ; preds = %block_40ba6f
  %loadMem_40ba79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11453 = getelementptr inbounds %struct.GPR, %struct.GPR* %11452, i32 0, i32 33
  %11454 = getelementptr inbounds %struct.Reg, %struct.Reg* %11453, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %11454 to i64*
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11456 = getelementptr inbounds %struct.GPR, %struct.GPR* %11455, i32 0, i32 1
  %11457 = getelementptr inbounds %struct.Reg, %struct.Reg* %11456, i32 0, i32 0
  %RAX.i843 = bitcast %union.anon* %11457 to i64*
  %11458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11459 = getelementptr inbounds %struct.GPR, %struct.GPR* %11458, i32 0, i32 15
  %11460 = getelementptr inbounds %struct.Reg, %struct.Reg* %11459, i32 0, i32 0
  %RBP.i844 = bitcast %union.anon* %11460 to i64*
  %11461 = load i64, i64* %RBP.i844
  %11462 = sub i64 %11461, 4
  %11463 = load i64, i64* %PC.i842
  %11464 = add i64 %11463, 3
  store i64 %11464, i64* %PC.i842
  %11465 = inttoptr i64 %11462 to i32*
  %11466 = load i32, i32* %11465
  %11467 = zext i32 %11466 to i64
  store i64 %11467, i64* %RAX.i843, align 8
  store %struct.Memory* %loadMem_40ba79, %struct.Memory** %MEMORY
  %loadMem_40ba7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11469 = getelementptr inbounds %struct.GPR, %struct.GPR* %11468, i32 0, i32 33
  %11470 = getelementptr inbounds %struct.Reg, %struct.Reg* %11469, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %11470 to i64*
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11472 = getelementptr inbounds %struct.GPR, %struct.GPR* %11471, i32 0, i32 1
  %11473 = getelementptr inbounds %struct.Reg, %struct.Reg* %11472, i32 0, i32 0
  %RAX.i841 = bitcast %union.anon* %11473 to i64*
  %11474 = load i64, i64* %RAX.i841
  %11475 = load i64, i64* %PC.i840
  %11476 = add i64 %11475, 3
  store i64 %11476, i64* %PC.i840
  %11477 = trunc i64 %11474 to i32
  %11478 = sub i32 %11477, 20
  %11479 = zext i32 %11478 to i64
  store i64 %11479, i64* %RAX.i841, align 8
  %11480 = icmp ult i32 %11477, 20
  %11481 = zext i1 %11480 to i8
  %11482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11481, i8* %11482, align 1
  %11483 = and i32 %11478, 255
  %11484 = call i32 @llvm.ctpop.i32(i32 %11483)
  %11485 = trunc i32 %11484 to i8
  %11486 = and i8 %11485, 1
  %11487 = xor i8 %11486, 1
  %11488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11487, i8* %11488, align 1
  %11489 = xor i64 20, %11474
  %11490 = trunc i64 %11489 to i32
  %11491 = xor i32 %11490, %11478
  %11492 = lshr i32 %11491, 4
  %11493 = trunc i32 %11492 to i8
  %11494 = and i8 %11493, 1
  %11495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11494, i8* %11495, align 1
  %11496 = icmp eq i32 %11478, 0
  %11497 = zext i1 %11496 to i8
  %11498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11497, i8* %11498, align 1
  %11499 = lshr i32 %11478, 31
  %11500 = trunc i32 %11499 to i8
  %11501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11500, i8* %11501, align 1
  %11502 = lshr i32 %11477, 31
  %11503 = xor i32 %11499, %11502
  %11504 = add i32 %11503, %11502
  %11505 = icmp eq i32 %11504, 2
  %11506 = zext i1 %11505 to i8
  %11507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11506, i8* %11507, align 1
  store %struct.Memory* %loadMem_40ba7c, %struct.Memory** %MEMORY
  %loadMem_40ba7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11509 = getelementptr inbounds %struct.GPR, %struct.GPR* %11508, i32 0, i32 33
  %11510 = getelementptr inbounds %struct.Reg, %struct.Reg* %11509, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %11510 to i64*
  %11511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11512 = getelementptr inbounds %struct.GPR, %struct.GPR* %11511, i32 0, i32 1
  %11513 = getelementptr inbounds %struct.Reg, %struct.Reg* %11512, i32 0, i32 0
  %RAX.i839 = bitcast %union.anon* %11513 to i64*
  %11514 = load i64, i64* %RAX.i839
  %11515 = load i64, i64* %PC.i838
  %11516 = add i64 %11515, 3
  store i64 %11516, i64* %PC.i838
  %11517 = trunc i64 %11514 to i32
  %11518 = sub i32 %11517, 20
  %11519 = zext i32 %11518 to i64
  store i64 %11519, i64* %RAX.i839, align 8
  %11520 = icmp ult i32 %11517, 20
  %11521 = zext i1 %11520 to i8
  %11522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11521, i8* %11522, align 1
  %11523 = and i32 %11518, 255
  %11524 = call i32 @llvm.ctpop.i32(i32 %11523)
  %11525 = trunc i32 %11524 to i8
  %11526 = and i8 %11525, 1
  %11527 = xor i8 %11526, 1
  %11528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11527, i8* %11528, align 1
  %11529 = xor i64 20, %11514
  %11530 = trunc i64 %11529 to i32
  %11531 = xor i32 %11530, %11518
  %11532 = lshr i32 %11531, 4
  %11533 = trunc i32 %11532 to i8
  %11534 = and i8 %11533, 1
  %11535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11534, i8* %11535, align 1
  %11536 = icmp eq i32 %11518, 0
  %11537 = zext i1 %11536 to i8
  %11538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11537, i8* %11538, align 1
  %11539 = lshr i32 %11518, 31
  %11540 = trunc i32 %11539 to i8
  %11541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11540, i8* %11541, align 1
  %11542 = lshr i32 %11517, 31
  %11543 = xor i32 %11539, %11542
  %11544 = add i32 %11543, %11542
  %11545 = icmp eq i32 %11544, 2
  %11546 = zext i1 %11545 to i8
  %11547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11546, i8* %11547, align 1
  store %struct.Memory* %loadMem_40ba7f, %struct.Memory** %MEMORY
  %loadMem_40ba82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11549 = getelementptr inbounds %struct.GPR, %struct.GPR* %11548, i32 0, i32 33
  %11550 = getelementptr inbounds %struct.Reg, %struct.Reg* %11549, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %11550 to i64*
  %11551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11552 = getelementptr inbounds %struct.GPR, %struct.GPR* %11551, i32 0, i32 1
  %11553 = getelementptr inbounds %struct.Reg, %struct.Reg* %11552, i32 0, i32 0
  %EAX.i836 = bitcast %union.anon* %11553 to i32*
  %11554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11555 = getelementptr inbounds %struct.GPR, %struct.GPR* %11554, i32 0, i32 5
  %11556 = getelementptr inbounds %struct.Reg, %struct.Reg* %11555, i32 0, i32 0
  %RCX.i837 = bitcast %union.anon* %11556 to i64*
  %11557 = load i32, i32* %EAX.i836
  %11558 = zext i32 %11557 to i64
  %11559 = load i64, i64* %PC.i835
  %11560 = add i64 %11559, 3
  store i64 %11560, i64* %PC.i835
  %11561 = shl i64 %11558, 32
  %11562 = ashr exact i64 %11561, 32
  store i64 %11562, i64* %RCX.i837, align 8
  store %struct.Memory* %loadMem_40ba82, %struct.Memory** %MEMORY
  %loadMem_40ba85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11564 = getelementptr inbounds %struct.GPR, %struct.GPR* %11563, i32 0, i32 33
  %11565 = getelementptr inbounds %struct.Reg, %struct.Reg* %11564, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %11565 to i64*
  %11566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11567 = getelementptr inbounds %struct.GPR, %struct.GPR* %11566, i32 0, i32 1
  %11568 = getelementptr inbounds %struct.Reg, %struct.Reg* %11567, i32 0, i32 0
  %RAX.i833 = bitcast %union.anon* %11568 to i64*
  %11569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11570 = getelementptr inbounds %struct.GPR, %struct.GPR* %11569, i32 0, i32 5
  %11571 = getelementptr inbounds %struct.Reg, %struct.Reg* %11570, i32 0, i32 0
  %RCX.i834 = bitcast %union.anon* %11571 to i64*
  %11572 = load i64, i64* %RCX.i834
  %11573 = add i64 %11572, 12099168
  %11574 = load i64, i64* %PC.i832
  %11575 = add i64 %11574, 8
  store i64 %11575, i64* %PC.i832
  %11576 = inttoptr i64 %11573 to i8*
  %11577 = load i8, i8* %11576
  %11578 = zext i8 %11577 to i64
  store i64 %11578, i64* %RAX.i833, align 8
  store %struct.Memory* %loadMem_40ba85, %struct.Memory** %MEMORY
  %loadMem_40ba8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11580 = getelementptr inbounds %struct.GPR, %struct.GPR* %11579, i32 0, i32 33
  %11581 = getelementptr inbounds %struct.Reg, %struct.Reg* %11580, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %11581 to i64*
  %11582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11583 = getelementptr inbounds %struct.GPR, %struct.GPR* %11582, i32 0, i32 1
  %11584 = getelementptr inbounds %struct.Reg, %struct.Reg* %11583, i32 0, i32 0
  %EAX.i830 = bitcast %union.anon* %11584 to i32*
  %11585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11586 = getelementptr inbounds %struct.GPR, %struct.GPR* %11585, i32 0, i32 15
  %11587 = getelementptr inbounds %struct.Reg, %struct.Reg* %11586, i32 0, i32 0
  %RBP.i831 = bitcast %union.anon* %11587 to i64*
  %11588 = load i32, i32* %EAX.i830
  %11589 = zext i32 %11588 to i64
  %11590 = load i64, i64* %RBP.i831
  %11591 = sub i64 %11590, 20
  %11592 = load i64, i64* %PC.i829
  %11593 = add i64 %11592, 3
  store i64 %11593, i64* %PC.i829
  %11594 = inttoptr i64 %11591 to i32*
  %11595 = load i32, i32* %11594
  %11596 = sub i32 %11588, %11595
  %11597 = icmp ult i32 %11588, %11595
  %11598 = zext i1 %11597 to i8
  %11599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11598, i8* %11599, align 1
  %11600 = and i32 %11596, 255
  %11601 = call i32 @llvm.ctpop.i32(i32 %11600)
  %11602 = trunc i32 %11601 to i8
  %11603 = and i8 %11602, 1
  %11604 = xor i8 %11603, 1
  %11605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11604, i8* %11605, align 1
  %11606 = xor i32 %11595, %11588
  %11607 = xor i32 %11606, %11596
  %11608 = lshr i32 %11607, 4
  %11609 = trunc i32 %11608 to i8
  %11610 = and i8 %11609, 1
  %11611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11610, i8* %11611, align 1
  %11612 = icmp eq i32 %11596, 0
  %11613 = zext i1 %11612 to i8
  %11614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11613, i8* %11614, align 1
  %11615 = lshr i32 %11596, 31
  %11616 = trunc i32 %11615 to i8
  %11617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11616, i8* %11617, align 1
  %11618 = lshr i32 %11588, 31
  %11619 = lshr i32 %11595, 31
  %11620 = xor i32 %11619, %11618
  %11621 = xor i32 %11615, %11618
  %11622 = add i32 %11621, %11620
  %11623 = icmp eq i32 %11622, 2
  %11624 = zext i1 %11623 to i8
  %11625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11624, i8* %11625, align 1
  store %struct.Memory* %loadMem_40ba8d, %struct.Memory** %MEMORY
  %loadMem_40ba90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11627 = getelementptr inbounds %struct.GPR, %struct.GPR* %11626, i32 0, i32 33
  %11628 = getelementptr inbounds %struct.Reg, %struct.Reg* %11627, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %11628 to i64*
  %11629 = load i64, i64* %PC.i828
  %11630 = add i64 %11629, 34
  %11631 = load i64, i64* %PC.i828
  %11632 = add i64 %11631, 6
  %11633 = load i64, i64* %PC.i828
  %11634 = add i64 %11633, 6
  store i64 %11634, i64* %PC.i828
  %11635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11636 = load i8, i8* %11635, align 1
  %11637 = icmp eq i8 %11636, 0
  %11638 = zext i1 %11637 to i8
  store i8 %11638, i8* %BRANCH_TAKEN, align 1
  %11639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11640 = select i1 %11637, i64 %11630, i64 %11632
  store i64 %11640, i64* %11639, align 8
  store %struct.Memory* %loadMem_40ba90, %struct.Memory** %MEMORY
  %loadBr_40ba90 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ba90 = icmp eq i8 %loadBr_40ba90, 1
  br i1 %cmpBr_40ba90, label %block_.L_40bab2, label %block_40ba96

block_40ba96:                                     ; preds = %block_40ba79
  %loadMem_40ba96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11642 = getelementptr inbounds %struct.GPR, %struct.GPR* %11641, i32 0, i32 33
  %11643 = getelementptr inbounds %struct.Reg, %struct.Reg* %11642, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %11643 to i64*
  %11644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11645 = getelementptr inbounds %struct.GPR, %struct.GPR* %11644, i32 0, i32 1
  %11646 = getelementptr inbounds %struct.Reg, %struct.Reg* %11645, i32 0, i32 0
  %RAX.i826 = bitcast %union.anon* %11646 to i64*
  %11647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11648 = getelementptr inbounds %struct.GPR, %struct.GPR* %11647, i32 0, i32 15
  %11649 = getelementptr inbounds %struct.Reg, %struct.Reg* %11648, i32 0, i32 0
  %RBP.i827 = bitcast %union.anon* %11649 to i64*
  %11650 = load i64, i64* %RBP.i827
  %11651 = sub i64 %11650, 4
  %11652 = load i64, i64* %PC.i825
  %11653 = add i64 %11652, 3
  store i64 %11653, i64* %PC.i825
  %11654 = inttoptr i64 %11651 to i32*
  %11655 = load i32, i32* %11654
  %11656 = zext i32 %11655 to i64
  store i64 %11656, i64* %RAX.i826, align 8
  store %struct.Memory* %loadMem_40ba96, %struct.Memory** %MEMORY
  %loadMem_40ba99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11658 = getelementptr inbounds %struct.GPR, %struct.GPR* %11657, i32 0, i32 33
  %11659 = getelementptr inbounds %struct.Reg, %struct.Reg* %11658, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %11659 to i64*
  %11660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11661 = getelementptr inbounds %struct.GPR, %struct.GPR* %11660, i32 0, i32 1
  %11662 = getelementptr inbounds %struct.Reg, %struct.Reg* %11661, i32 0, i32 0
  %RAX.i824 = bitcast %union.anon* %11662 to i64*
  %11663 = load i64, i64* %RAX.i824
  %11664 = load i64, i64* %PC.i823
  %11665 = add i64 %11664, 3
  store i64 %11665, i64* %PC.i823
  %11666 = trunc i64 %11663 to i32
  %11667 = sub i32 %11666, 20
  %11668 = zext i32 %11667 to i64
  store i64 %11668, i64* %RAX.i824, align 8
  %11669 = icmp ult i32 %11666, 20
  %11670 = zext i1 %11669 to i8
  %11671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11670, i8* %11671, align 1
  %11672 = and i32 %11667, 255
  %11673 = call i32 @llvm.ctpop.i32(i32 %11672)
  %11674 = trunc i32 %11673 to i8
  %11675 = and i8 %11674, 1
  %11676 = xor i8 %11675, 1
  %11677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11676, i8* %11677, align 1
  %11678 = xor i64 20, %11663
  %11679 = trunc i64 %11678 to i32
  %11680 = xor i32 %11679, %11667
  %11681 = lshr i32 %11680, 4
  %11682 = trunc i32 %11681 to i8
  %11683 = and i8 %11682, 1
  %11684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11683, i8* %11684, align 1
  %11685 = icmp eq i32 %11667, 0
  %11686 = zext i1 %11685 to i8
  %11687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11686, i8* %11687, align 1
  %11688 = lshr i32 %11667, 31
  %11689 = trunc i32 %11688 to i8
  %11690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11689, i8* %11690, align 1
  %11691 = lshr i32 %11666, 31
  %11692 = xor i32 %11688, %11691
  %11693 = add i32 %11692, %11691
  %11694 = icmp eq i32 %11693, 2
  %11695 = zext i1 %11694 to i8
  %11696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11695, i8* %11696, align 1
  store %struct.Memory* %loadMem_40ba99, %struct.Memory** %MEMORY
  %loadMem_40ba9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11698 = getelementptr inbounds %struct.GPR, %struct.GPR* %11697, i32 0, i32 33
  %11699 = getelementptr inbounds %struct.Reg, %struct.Reg* %11698, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %11699 to i64*
  %11700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11701 = getelementptr inbounds %struct.GPR, %struct.GPR* %11700, i32 0, i32 1
  %11702 = getelementptr inbounds %struct.Reg, %struct.Reg* %11701, i32 0, i32 0
  %RAX.i822 = bitcast %union.anon* %11702 to i64*
  %11703 = load i64, i64* %RAX.i822
  %11704 = load i64, i64* %PC.i821
  %11705 = add i64 %11704, 3
  store i64 %11705, i64* %PC.i821
  %11706 = trunc i64 %11703 to i32
  %11707 = sub i32 %11706, 20
  %11708 = zext i32 %11707 to i64
  store i64 %11708, i64* %RAX.i822, align 8
  %11709 = icmp ult i32 %11706, 20
  %11710 = zext i1 %11709 to i8
  %11711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11710, i8* %11711, align 1
  %11712 = and i32 %11707, 255
  %11713 = call i32 @llvm.ctpop.i32(i32 %11712)
  %11714 = trunc i32 %11713 to i8
  %11715 = and i8 %11714, 1
  %11716 = xor i8 %11715, 1
  %11717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11716, i8* %11717, align 1
  %11718 = xor i64 20, %11703
  %11719 = trunc i64 %11718 to i32
  %11720 = xor i32 %11719, %11707
  %11721 = lshr i32 %11720, 4
  %11722 = trunc i32 %11721 to i8
  %11723 = and i8 %11722, 1
  %11724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11723, i8* %11724, align 1
  %11725 = icmp eq i32 %11707, 0
  %11726 = zext i1 %11725 to i8
  %11727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11726, i8* %11727, align 1
  %11728 = lshr i32 %11707, 31
  %11729 = trunc i32 %11728 to i8
  %11730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11729, i8* %11730, align 1
  %11731 = lshr i32 %11706, 31
  %11732 = xor i32 %11728, %11731
  %11733 = add i32 %11732, %11731
  %11734 = icmp eq i32 %11733, 2
  %11735 = zext i1 %11734 to i8
  %11736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11735, i8* %11736, align 1
  store %struct.Memory* %loadMem_40ba9c, %struct.Memory** %MEMORY
  %loadMem_40ba9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11738 = getelementptr inbounds %struct.GPR, %struct.GPR* %11737, i32 0, i32 33
  %11739 = getelementptr inbounds %struct.Reg, %struct.Reg* %11738, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %11739 to i64*
  %11740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11741 = getelementptr inbounds %struct.GPR, %struct.GPR* %11740, i32 0, i32 1
  %11742 = getelementptr inbounds %struct.Reg, %struct.Reg* %11741, i32 0, i32 0
  %EAX.i819 = bitcast %union.anon* %11742 to i32*
  %11743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11744 = getelementptr inbounds %struct.GPR, %struct.GPR* %11743, i32 0, i32 5
  %11745 = getelementptr inbounds %struct.Reg, %struct.Reg* %11744, i32 0, i32 0
  %RCX.i820 = bitcast %union.anon* %11745 to i64*
  %11746 = load i32, i32* %EAX.i819
  %11747 = zext i32 %11746 to i64
  %11748 = load i64, i64* %PC.i818
  %11749 = add i64 %11748, 3
  store i64 %11749, i64* %PC.i818
  %11750 = shl i64 %11747, 32
  %11751 = ashr exact i64 %11750, 32
  store i64 %11751, i64* %RCX.i820, align 8
  store %struct.Memory* %loadMem_40ba9f, %struct.Memory** %MEMORY
  %loadMem_40baa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11753 = getelementptr inbounds %struct.GPR, %struct.GPR* %11752, i32 0, i32 33
  %11754 = getelementptr inbounds %struct.Reg, %struct.Reg* %11753, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %11754 to i64*
  %11755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11756 = getelementptr inbounds %struct.GPR, %struct.GPR* %11755, i32 0, i32 1
  %11757 = getelementptr inbounds %struct.Reg, %struct.Reg* %11756, i32 0, i32 0
  %RAX.i816 = bitcast %union.anon* %11757 to i64*
  %11758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11759 = getelementptr inbounds %struct.GPR, %struct.GPR* %11758, i32 0, i32 5
  %11760 = getelementptr inbounds %struct.Reg, %struct.Reg* %11759, i32 0, i32 0
  %RCX.i817 = bitcast %union.anon* %11760 to i64*
  %11761 = load i64, i64* %RCX.i817
  %11762 = mul i64 %11761, 4
  %11763 = add i64 %11762, 11187184
  %11764 = load i64, i64* %PC.i815
  %11765 = add i64 %11764, 7
  store i64 %11765, i64* %PC.i815
  %11766 = inttoptr i64 %11763 to i32*
  %11767 = load i32, i32* %11766
  %11768 = zext i32 %11767 to i64
  store i64 %11768, i64* %RAX.i816, align 8
  store %struct.Memory* %loadMem_40baa2, %struct.Memory** %MEMORY
  %loadMem_40baa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11770 = getelementptr inbounds %struct.GPR, %struct.GPR* %11769, i32 0, i32 33
  %11771 = getelementptr inbounds %struct.Reg, %struct.Reg* %11770, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %11771 to i64*
  %11772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11773 = getelementptr inbounds %struct.GPR, %struct.GPR* %11772, i32 0, i32 1
  %11774 = getelementptr inbounds %struct.Reg, %struct.Reg* %11773, i32 0, i32 0
  %EAX.i813 = bitcast %union.anon* %11774 to i32*
  %11775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11776 = getelementptr inbounds %struct.GPR, %struct.GPR* %11775, i32 0, i32 15
  %11777 = getelementptr inbounds %struct.Reg, %struct.Reg* %11776, i32 0, i32 0
  %RBP.i814 = bitcast %union.anon* %11777 to i64*
  %11778 = load i32, i32* %EAX.i813
  %11779 = zext i32 %11778 to i64
  %11780 = load i64, i64* %RBP.i814
  %11781 = sub i64 %11780, 8
  %11782 = load i64, i64* %PC.i812
  %11783 = add i64 %11782, 3
  store i64 %11783, i64* %PC.i812
  %11784 = inttoptr i64 %11781 to i32*
  %11785 = load i32, i32* %11784
  %11786 = sub i32 %11778, %11785
  %11787 = icmp ult i32 %11778, %11785
  %11788 = zext i1 %11787 to i8
  %11789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11788, i8* %11789, align 1
  %11790 = and i32 %11786, 255
  %11791 = call i32 @llvm.ctpop.i32(i32 %11790)
  %11792 = trunc i32 %11791 to i8
  %11793 = and i8 %11792, 1
  %11794 = xor i8 %11793, 1
  %11795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11794, i8* %11795, align 1
  %11796 = xor i32 %11785, %11778
  %11797 = xor i32 %11796, %11786
  %11798 = lshr i32 %11797, 4
  %11799 = trunc i32 %11798 to i8
  %11800 = and i8 %11799, 1
  %11801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11800, i8* %11801, align 1
  %11802 = icmp eq i32 %11786, 0
  %11803 = zext i1 %11802 to i8
  %11804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11803, i8* %11804, align 1
  %11805 = lshr i32 %11786, 31
  %11806 = trunc i32 %11805 to i8
  %11807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11806, i8* %11807, align 1
  %11808 = lshr i32 %11778, 31
  %11809 = lshr i32 %11785, 31
  %11810 = xor i32 %11809, %11808
  %11811 = xor i32 %11805, %11808
  %11812 = add i32 %11811, %11810
  %11813 = icmp eq i32 %11812, 2
  %11814 = zext i1 %11813 to i8
  %11815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11814, i8* %11815, align 1
  store %struct.Memory* %loadMem_40baa9, %struct.Memory** %MEMORY
  %loadMem_40baac = load %struct.Memory*, %struct.Memory** %MEMORY
  %11816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11817 = getelementptr inbounds %struct.GPR, %struct.GPR* %11816, i32 0, i32 33
  %11818 = getelementptr inbounds %struct.Reg, %struct.Reg* %11817, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %11818 to i64*
  %11819 = load i64, i64* %PC.i811
  %11820 = add i64 %11819, 252
  %11821 = load i64, i64* %PC.i811
  %11822 = add i64 %11821, 6
  %11823 = load i64, i64* %PC.i811
  %11824 = add i64 %11823, 6
  store i64 %11824, i64* %PC.i811
  %11825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11826 = load i8, i8* %11825, align 1
  store i8 %11826, i8* %BRANCH_TAKEN, align 1
  %11827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11828 = icmp ne i8 %11826, 0
  %11829 = select i1 %11828, i64 %11820, i64 %11822
  store i64 %11829, i64* %11827, align 8
  store %struct.Memory* %loadMem_40baac, %struct.Memory** %MEMORY
  %loadBr_40baac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40baac = icmp eq i8 %loadBr_40baac, 1
  br i1 %cmpBr_40baac, label %block_.L_40bba8, label %block_.L_40bab2

block_.L_40bab2:                                  ; preds = %block_40ba96, %block_40ba79
  %loadMem_40bab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11831 = getelementptr inbounds %struct.GPR, %struct.GPR* %11830, i32 0, i32 33
  %11832 = getelementptr inbounds %struct.Reg, %struct.Reg* %11831, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %11832 to i64*
  %11833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11834 = getelementptr inbounds %struct.GPR, %struct.GPR* %11833, i32 0, i32 1
  %11835 = getelementptr inbounds %struct.Reg, %struct.Reg* %11834, i32 0, i32 0
  %RAX.i809 = bitcast %union.anon* %11835 to i64*
  %11836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11837 = getelementptr inbounds %struct.GPR, %struct.GPR* %11836, i32 0, i32 15
  %11838 = getelementptr inbounds %struct.Reg, %struct.Reg* %11837, i32 0, i32 0
  %RBP.i810 = bitcast %union.anon* %11838 to i64*
  %11839 = load i64, i64* %RBP.i810
  %11840 = sub i64 %11839, 4
  %11841 = load i64, i64* %PC.i808
  %11842 = add i64 %11841, 3
  store i64 %11842, i64* %PC.i808
  %11843 = inttoptr i64 %11840 to i32*
  %11844 = load i32, i32* %11843
  %11845 = zext i32 %11844 to i64
  store i64 %11845, i64* %RAX.i809, align 8
  store %struct.Memory* %loadMem_40bab2, %struct.Memory** %MEMORY
  %loadMem_40bab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11847 = getelementptr inbounds %struct.GPR, %struct.GPR* %11846, i32 0, i32 33
  %11848 = getelementptr inbounds %struct.Reg, %struct.Reg* %11847, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %11848 to i64*
  %11849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11850 = getelementptr inbounds %struct.GPR, %struct.GPR* %11849, i32 0, i32 1
  %11851 = getelementptr inbounds %struct.Reg, %struct.Reg* %11850, i32 0, i32 0
  %RAX.i807 = bitcast %union.anon* %11851 to i64*
  %11852 = load i64, i64* %RAX.i807
  %11853 = load i64, i64* %PC.i806
  %11854 = add i64 %11853, 3
  store i64 %11854, i64* %PC.i806
  %11855 = trunc i64 %11852 to i32
  %11856 = sub i32 %11855, 20
  %11857 = zext i32 %11856 to i64
  store i64 %11857, i64* %RAX.i807, align 8
  %11858 = icmp ult i32 %11855, 20
  %11859 = zext i1 %11858 to i8
  %11860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11859, i8* %11860, align 1
  %11861 = and i32 %11856, 255
  %11862 = call i32 @llvm.ctpop.i32(i32 %11861)
  %11863 = trunc i32 %11862 to i8
  %11864 = and i8 %11863, 1
  %11865 = xor i8 %11864, 1
  %11866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11865, i8* %11866, align 1
  %11867 = xor i64 20, %11852
  %11868 = trunc i64 %11867 to i32
  %11869 = xor i32 %11868, %11856
  %11870 = lshr i32 %11869, 4
  %11871 = trunc i32 %11870 to i8
  %11872 = and i8 %11871, 1
  %11873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11872, i8* %11873, align 1
  %11874 = icmp eq i32 %11856, 0
  %11875 = zext i1 %11874 to i8
  %11876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11875, i8* %11876, align 1
  %11877 = lshr i32 %11856, 31
  %11878 = trunc i32 %11877 to i8
  %11879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11878, i8* %11879, align 1
  %11880 = lshr i32 %11855, 31
  %11881 = xor i32 %11877, %11880
  %11882 = add i32 %11881, %11880
  %11883 = icmp eq i32 %11882, 2
  %11884 = zext i1 %11883 to i8
  %11885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11884, i8* %11885, align 1
  store %struct.Memory* %loadMem_40bab5, %struct.Memory** %MEMORY
  %loadMem_40bab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11887 = getelementptr inbounds %struct.GPR, %struct.GPR* %11886, i32 0, i32 33
  %11888 = getelementptr inbounds %struct.Reg, %struct.Reg* %11887, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %11888 to i64*
  %11889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11890 = getelementptr inbounds %struct.GPR, %struct.GPR* %11889, i32 0, i32 1
  %11891 = getelementptr inbounds %struct.Reg, %struct.Reg* %11890, i32 0, i32 0
  %RAX.i805 = bitcast %union.anon* %11891 to i64*
  %11892 = load i64, i64* %RAX.i805
  %11893 = load i64, i64* %PC.i804
  %11894 = add i64 %11893, 3
  store i64 %11894, i64* %PC.i804
  %11895 = trunc i64 %11892 to i32
  %11896 = add i32 1, %11895
  %11897 = zext i32 %11896 to i64
  store i64 %11897, i64* %RAX.i805, align 8
  %11898 = icmp ult i32 %11896, %11895
  %11899 = icmp ult i32 %11896, 1
  %11900 = or i1 %11898, %11899
  %11901 = zext i1 %11900 to i8
  %11902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11901, i8* %11902, align 1
  %11903 = and i32 %11896, 255
  %11904 = call i32 @llvm.ctpop.i32(i32 %11903)
  %11905 = trunc i32 %11904 to i8
  %11906 = and i8 %11905, 1
  %11907 = xor i8 %11906, 1
  %11908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11907, i8* %11908, align 1
  %11909 = xor i64 1, %11892
  %11910 = trunc i64 %11909 to i32
  %11911 = xor i32 %11910, %11896
  %11912 = lshr i32 %11911, 4
  %11913 = trunc i32 %11912 to i8
  %11914 = and i8 %11913, 1
  %11915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11914, i8* %11915, align 1
  %11916 = icmp eq i32 %11896, 0
  %11917 = zext i1 %11916 to i8
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11917, i8* %11918, align 1
  %11919 = lshr i32 %11896, 31
  %11920 = trunc i32 %11919 to i8
  %11921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11920, i8* %11921, align 1
  %11922 = lshr i32 %11895, 31
  %11923 = xor i32 %11919, %11922
  %11924 = add i32 %11923, %11919
  %11925 = icmp eq i32 %11924, 2
  %11926 = zext i1 %11925 to i8
  %11927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11926, i8* %11927, align 1
  store %struct.Memory* %loadMem_40bab8, %struct.Memory** %MEMORY
  %loadMem_40babb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11929 = getelementptr inbounds %struct.GPR, %struct.GPR* %11928, i32 0, i32 33
  %11930 = getelementptr inbounds %struct.Reg, %struct.Reg* %11929, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %11930 to i64*
  %11931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11932 = getelementptr inbounds %struct.GPR, %struct.GPR* %11931, i32 0, i32 1
  %11933 = getelementptr inbounds %struct.Reg, %struct.Reg* %11932, i32 0, i32 0
  %EAX.i802 = bitcast %union.anon* %11933 to i32*
  %11934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11935 = getelementptr inbounds %struct.GPR, %struct.GPR* %11934, i32 0, i32 5
  %11936 = getelementptr inbounds %struct.Reg, %struct.Reg* %11935, i32 0, i32 0
  %RCX.i803 = bitcast %union.anon* %11936 to i64*
  %11937 = load i32, i32* %EAX.i802
  %11938 = zext i32 %11937 to i64
  %11939 = load i64, i64* %PC.i801
  %11940 = add i64 %11939, 3
  store i64 %11940, i64* %PC.i801
  %11941 = shl i64 %11938, 32
  %11942 = ashr exact i64 %11941, 32
  store i64 %11942, i64* %RCX.i803, align 8
  store %struct.Memory* %loadMem_40babb, %struct.Memory** %MEMORY
  %loadMem_40babe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11944 = getelementptr inbounds %struct.GPR, %struct.GPR* %11943, i32 0, i32 33
  %11945 = getelementptr inbounds %struct.Reg, %struct.Reg* %11944, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %11945 to i64*
  %11946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11947 = getelementptr inbounds %struct.GPR, %struct.GPR* %11946, i32 0, i32 1
  %11948 = getelementptr inbounds %struct.Reg, %struct.Reg* %11947, i32 0, i32 0
  %RAX.i799 = bitcast %union.anon* %11948 to i64*
  %11949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11950 = getelementptr inbounds %struct.GPR, %struct.GPR* %11949, i32 0, i32 5
  %11951 = getelementptr inbounds %struct.Reg, %struct.Reg* %11950, i32 0, i32 0
  %RCX.i800 = bitcast %union.anon* %11951 to i64*
  %11952 = load i64, i64* %RCX.i800
  %11953 = add i64 %11952, 12099168
  %11954 = load i64, i64* %PC.i798
  %11955 = add i64 %11954, 8
  store i64 %11955, i64* %PC.i798
  %11956 = inttoptr i64 %11953 to i8*
  %11957 = load i8, i8* %11956
  %11958 = zext i8 %11957 to i64
  store i64 %11958, i64* %RAX.i799, align 8
  store %struct.Memory* %loadMem_40babe, %struct.Memory** %MEMORY
  %loadMem_40bac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11960 = getelementptr inbounds %struct.GPR, %struct.GPR* %11959, i32 0, i32 33
  %11961 = getelementptr inbounds %struct.Reg, %struct.Reg* %11960, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %11961 to i64*
  %11962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11963 = getelementptr inbounds %struct.GPR, %struct.GPR* %11962, i32 0, i32 1
  %11964 = getelementptr inbounds %struct.Reg, %struct.Reg* %11963, i32 0, i32 0
  %EAX.i796 = bitcast %union.anon* %11964 to i32*
  %11965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11966 = getelementptr inbounds %struct.GPR, %struct.GPR* %11965, i32 0, i32 15
  %11967 = getelementptr inbounds %struct.Reg, %struct.Reg* %11966, i32 0, i32 0
  %RBP.i797 = bitcast %union.anon* %11967 to i64*
  %11968 = load i32, i32* %EAX.i796
  %11969 = zext i32 %11968 to i64
  %11970 = load i64, i64* %RBP.i797
  %11971 = sub i64 %11970, 20
  %11972 = load i64, i64* %PC.i795
  %11973 = add i64 %11972, 3
  store i64 %11973, i64* %PC.i795
  %11974 = inttoptr i64 %11971 to i32*
  %11975 = load i32, i32* %11974
  %11976 = sub i32 %11968, %11975
  %11977 = icmp ult i32 %11968, %11975
  %11978 = zext i1 %11977 to i8
  %11979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11978, i8* %11979, align 1
  %11980 = and i32 %11976, 255
  %11981 = call i32 @llvm.ctpop.i32(i32 %11980)
  %11982 = trunc i32 %11981 to i8
  %11983 = and i8 %11982, 1
  %11984 = xor i8 %11983, 1
  %11985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11984, i8* %11985, align 1
  %11986 = xor i32 %11975, %11968
  %11987 = xor i32 %11986, %11976
  %11988 = lshr i32 %11987, 4
  %11989 = trunc i32 %11988 to i8
  %11990 = and i8 %11989, 1
  %11991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11990, i8* %11991, align 1
  %11992 = icmp eq i32 %11976, 0
  %11993 = zext i1 %11992 to i8
  %11994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11993, i8* %11994, align 1
  %11995 = lshr i32 %11976, 31
  %11996 = trunc i32 %11995 to i8
  %11997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11996, i8* %11997, align 1
  %11998 = lshr i32 %11968, 31
  %11999 = lshr i32 %11975, 31
  %12000 = xor i32 %11999, %11998
  %12001 = xor i32 %11995, %11998
  %12002 = add i32 %12001, %12000
  %12003 = icmp eq i32 %12002, 2
  %12004 = zext i1 %12003 to i8
  %12005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12004, i8* %12005, align 1
  store %struct.Memory* %loadMem_40bac6, %struct.Memory** %MEMORY
  %loadMem_40bac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12007 = getelementptr inbounds %struct.GPR, %struct.GPR* %12006, i32 0, i32 33
  %12008 = getelementptr inbounds %struct.Reg, %struct.Reg* %12007, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %12008 to i64*
  %12009 = load i64, i64* %PC.i794
  %12010 = add i64 %12009, 34
  %12011 = load i64, i64* %PC.i794
  %12012 = add i64 %12011, 6
  %12013 = load i64, i64* %PC.i794
  %12014 = add i64 %12013, 6
  store i64 %12014, i64* %PC.i794
  %12015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12016 = load i8, i8* %12015, align 1
  %12017 = icmp eq i8 %12016, 0
  %12018 = zext i1 %12017 to i8
  store i8 %12018, i8* %BRANCH_TAKEN, align 1
  %12019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12020 = select i1 %12017, i64 %12010, i64 %12012
  store i64 %12020, i64* %12019, align 8
  store %struct.Memory* %loadMem_40bac9, %struct.Memory** %MEMORY
  %loadBr_40bac9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bac9 = icmp eq i8 %loadBr_40bac9, 1
  br i1 %cmpBr_40bac9, label %block_.L_40baeb, label %block_40bacf

block_40bacf:                                     ; preds = %block_.L_40bab2
  %loadMem_40bacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12022 = getelementptr inbounds %struct.GPR, %struct.GPR* %12021, i32 0, i32 33
  %12023 = getelementptr inbounds %struct.Reg, %struct.Reg* %12022, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %12023 to i64*
  %12024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12025 = getelementptr inbounds %struct.GPR, %struct.GPR* %12024, i32 0, i32 1
  %12026 = getelementptr inbounds %struct.Reg, %struct.Reg* %12025, i32 0, i32 0
  %RAX.i792 = bitcast %union.anon* %12026 to i64*
  %12027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12028 = getelementptr inbounds %struct.GPR, %struct.GPR* %12027, i32 0, i32 15
  %12029 = getelementptr inbounds %struct.Reg, %struct.Reg* %12028, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %12029 to i64*
  %12030 = load i64, i64* %RBP.i793
  %12031 = sub i64 %12030, 4
  %12032 = load i64, i64* %PC.i791
  %12033 = add i64 %12032, 3
  store i64 %12033, i64* %PC.i791
  %12034 = inttoptr i64 %12031 to i32*
  %12035 = load i32, i32* %12034
  %12036 = zext i32 %12035 to i64
  store i64 %12036, i64* %RAX.i792, align 8
  store %struct.Memory* %loadMem_40bacf, %struct.Memory** %MEMORY
  %loadMem_40bad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12038 = getelementptr inbounds %struct.GPR, %struct.GPR* %12037, i32 0, i32 33
  %12039 = getelementptr inbounds %struct.Reg, %struct.Reg* %12038, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %12039 to i64*
  %12040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12041 = getelementptr inbounds %struct.GPR, %struct.GPR* %12040, i32 0, i32 1
  %12042 = getelementptr inbounds %struct.Reg, %struct.Reg* %12041, i32 0, i32 0
  %RAX.i790 = bitcast %union.anon* %12042 to i64*
  %12043 = load i64, i64* %RAX.i790
  %12044 = load i64, i64* %PC.i789
  %12045 = add i64 %12044, 3
  store i64 %12045, i64* %PC.i789
  %12046 = trunc i64 %12043 to i32
  %12047 = sub i32 %12046, 20
  %12048 = zext i32 %12047 to i64
  store i64 %12048, i64* %RAX.i790, align 8
  %12049 = icmp ult i32 %12046, 20
  %12050 = zext i1 %12049 to i8
  %12051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12050, i8* %12051, align 1
  %12052 = and i32 %12047, 255
  %12053 = call i32 @llvm.ctpop.i32(i32 %12052)
  %12054 = trunc i32 %12053 to i8
  %12055 = and i8 %12054, 1
  %12056 = xor i8 %12055, 1
  %12057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12056, i8* %12057, align 1
  %12058 = xor i64 20, %12043
  %12059 = trunc i64 %12058 to i32
  %12060 = xor i32 %12059, %12047
  %12061 = lshr i32 %12060, 4
  %12062 = trunc i32 %12061 to i8
  %12063 = and i8 %12062, 1
  %12064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12063, i8* %12064, align 1
  %12065 = icmp eq i32 %12047, 0
  %12066 = zext i1 %12065 to i8
  %12067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12066, i8* %12067, align 1
  %12068 = lshr i32 %12047, 31
  %12069 = trunc i32 %12068 to i8
  %12070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12069, i8* %12070, align 1
  %12071 = lshr i32 %12046, 31
  %12072 = xor i32 %12068, %12071
  %12073 = add i32 %12072, %12071
  %12074 = icmp eq i32 %12073, 2
  %12075 = zext i1 %12074 to i8
  %12076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12075, i8* %12076, align 1
  store %struct.Memory* %loadMem_40bad2, %struct.Memory** %MEMORY
  %loadMem_40bad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12078 = getelementptr inbounds %struct.GPR, %struct.GPR* %12077, i32 0, i32 33
  %12079 = getelementptr inbounds %struct.Reg, %struct.Reg* %12078, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %12079 to i64*
  %12080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12081 = getelementptr inbounds %struct.GPR, %struct.GPR* %12080, i32 0, i32 1
  %12082 = getelementptr inbounds %struct.Reg, %struct.Reg* %12081, i32 0, i32 0
  %RAX.i788 = bitcast %union.anon* %12082 to i64*
  %12083 = load i64, i64* %RAX.i788
  %12084 = load i64, i64* %PC.i787
  %12085 = add i64 %12084, 3
  store i64 %12085, i64* %PC.i787
  %12086 = trunc i64 %12083 to i32
  %12087 = add i32 1, %12086
  %12088 = zext i32 %12087 to i64
  store i64 %12088, i64* %RAX.i788, align 8
  %12089 = icmp ult i32 %12087, %12086
  %12090 = icmp ult i32 %12087, 1
  %12091 = or i1 %12089, %12090
  %12092 = zext i1 %12091 to i8
  %12093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12092, i8* %12093, align 1
  %12094 = and i32 %12087, 255
  %12095 = call i32 @llvm.ctpop.i32(i32 %12094)
  %12096 = trunc i32 %12095 to i8
  %12097 = and i8 %12096, 1
  %12098 = xor i8 %12097, 1
  %12099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12098, i8* %12099, align 1
  %12100 = xor i64 1, %12083
  %12101 = trunc i64 %12100 to i32
  %12102 = xor i32 %12101, %12087
  %12103 = lshr i32 %12102, 4
  %12104 = trunc i32 %12103 to i8
  %12105 = and i8 %12104, 1
  %12106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12105, i8* %12106, align 1
  %12107 = icmp eq i32 %12087, 0
  %12108 = zext i1 %12107 to i8
  %12109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12108, i8* %12109, align 1
  %12110 = lshr i32 %12087, 31
  %12111 = trunc i32 %12110 to i8
  %12112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12111, i8* %12112, align 1
  %12113 = lshr i32 %12086, 31
  %12114 = xor i32 %12110, %12113
  %12115 = add i32 %12114, %12110
  %12116 = icmp eq i32 %12115, 2
  %12117 = zext i1 %12116 to i8
  %12118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12117, i8* %12118, align 1
  store %struct.Memory* %loadMem_40bad5, %struct.Memory** %MEMORY
  %loadMem_40bad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12120 = getelementptr inbounds %struct.GPR, %struct.GPR* %12119, i32 0, i32 33
  %12121 = getelementptr inbounds %struct.Reg, %struct.Reg* %12120, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %12121 to i64*
  %12122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12123 = getelementptr inbounds %struct.GPR, %struct.GPR* %12122, i32 0, i32 1
  %12124 = getelementptr inbounds %struct.Reg, %struct.Reg* %12123, i32 0, i32 0
  %EAX.i785 = bitcast %union.anon* %12124 to i32*
  %12125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12126 = getelementptr inbounds %struct.GPR, %struct.GPR* %12125, i32 0, i32 5
  %12127 = getelementptr inbounds %struct.Reg, %struct.Reg* %12126, i32 0, i32 0
  %RCX.i786 = bitcast %union.anon* %12127 to i64*
  %12128 = load i32, i32* %EAX.i785
  %12129 = zext i32 %12128 to i64
  %12130 = load i64, i64* %PC.i784
  %12131 = add i64 %12130, 3
  store i64 %12131, i64* %PC.i784
  %12132 = shl i64 %12129, 32
  %12133 = ashr exact i64 %12132, 32
  store i64 %12133, i64* %RCX.i786, align 8
  store %struct.Memory* %loadMem_40bad8, %struct.Memory** %MEMORY
  %loadMem_40badb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12135 = getelementptr inbounds %struct.GPR, %struct.GPR* %12134, i32 0, i32 33
  %12136 = getelementptr inbounds %struct.Reg, %struct.Reg* %12135, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %12136 to i64*
  %12137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12138 = getelementptr inbounds %struct.GPR, %struct.GPR* %12137, i32 0, i32 1
  %12139 = getelementptr inbounds %struct.Reg, %struct.Reg* %12138, i32 0, i32 0
  %RAX.i782 = bitcast %union.anon* %12139 to i64*
  %12140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12141 = getelementptr inbounds %struct.GPR, %struct.GPR* %12140, i32 0, i32 5
  %12142 = getelementptr inbounds %struct.Reg, %struct.Reg* %12141, i32 0, i32 0
  %RCX.i783 = bitcast %union.anon* %12142 to i64*
  %12143 = load i64, i64* %RCX.i783
  %12144 = mul i64 %12143, 4
  %12145 = add i64 %12144, 11187184
  %12146 = load i64, i64* %PC.i781
  %12147 = add i64 %12146, 7
  store i64 %12147, i64* %PC.i781
  %12148 = inttoptr i64 %12145 to i32*
  %12149 = load i32, i32* %12148
  %12150 = zext i32 %12149 to i64
  store i64 %12150, i64* %RAX.i782, align 8
  store %struct.Memory* %loadMem_40badb, %struct.Memory** %MEMORY
  %loadMem_40bae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12152 = getelementptr inbounds %struct.GPR, %struct.GPR* %12151, i32 0, i32 33
  %12153 = getelementptr inbounds %struct.Reg, %struct.Reg* %12152, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %12153 to i64*
  %12154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12155 = getelementptr inbounds %struct.GPR, %struct.GPR* %12154, i32 0, i32 1
  %12156 = getelementptr inbounds %struct.Reg, %struct.Reg* %12155, i32 0, i32 0
  %EAX.i779 = bitcast %union.anon* %12156 to i32*
  %12157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12158 = getelementptr inbounds %struct.GPR, %struct.GPR* %12157, i32 0, i32 15
  %12159 = getelementptr inbounds %struct.Reg, %struct.Reg* %12158, i32 0, i32 0
  %RBP.i780 = bitcast %union.anon* %12159 to i64*
  %12160 = load i32, i32* %EAX.i779
  %12161 = zext i32 %12160 to i64
  %12162 = load i64, i64* %RBP.i780
  %12163 = sub i64 %12162, 8
  %12164 = load i64, i64* %PC.i778
  %12165 = add i64 %12164, 3
  store i64 %12165, i64* %PC.i778
  %12166 = inttoptr i64 %12163 to i32*
  %12167 = load i32, i32* %12166
  %12168 = sub i32 %12160, %12167
  %12169 = icmp ult i32 %12160, %12167
  %12170 = zext i1 %12169 to i8
  %12171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12170, i8* %12171, align 1
  %12172 = and i32 %12168, 255
  %12173 = call i32 @llvm.ctpop.i32(i32 %12172)
  %12174 = trunc i32 %12173 to i8
  %12175 = and i8 %12174, 1
  %12176 = xor i8 %12175, 1
  %12177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12176, i8* %12177, align 1
  %12178 = xor i32 %12167, %12160
  %12179 = xor i32 %12178, %12168
  %12180 = lshr i32 %12179, 4
  %12181 = trunc i32 %12180 to i8
  %12182 = and i8 %12181, 1
  %12183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12182, i8* %12183, align 1
  %12184 = icmp eq i32 %12168, 0
  %12185 = zext i1 %12184 to i8
  %12186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12185, i8* %12186, align 1
  %12187 = lshr i32 %12168, 31
  %12188 = trunc i32 %12187 to i8
  %12189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12188, i8* %12189, align 1
  %12190 = lshr i32 %12160, 31
  %12191 = lshr i32 %12167, 31
  %12192 = xor i32 %12191, %12190
  %12193 = xor i32 %12187, %12190
  %12194 = add i32 %12193, %12192
  %12195 = icmp eq i32 %12194, 2
  %12196 = zext i1 %12195 to i8
  %12197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12196, i8* %12197, align 1
  store %struct.Memory* %loadMem_40bae2, %struct.Memory** %MEMORY
  %loadMem_40bae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12199 = getelementptr inbounds %struct.GPR, %struct.GPR* %12198, i32 0, i32 33
  %12200 = getelementptr inbounds %struct.Reg, %struct.Reg* %12199, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %12200 to i64*
  %12201 = load i64, i64* %PC.i777
  %12202 = add i64 %12201, 195
  %12203 = load i64, i64* %PC.i777
  %12204 = add i64 %12203, 6
  %12205 = load i64, i64* %PC.i777
  %12206 = add i64 %12205, 6
  store i64 %12206, i64* %PC.i777
  %12207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12208 = load i8, i8* %12207, align 1
  store i8 %12208, i8* %BRANCH_TAKEN, align 1
  %12209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12210 = icmp ne i8 %12208, 0
  %12211 = select i1 %12210, i64 %12202, i64 %12204
  store i64 %12211, i64* %12209, align 8
  store %struct.Memory* %loadMem_40bae5, %struct.Memory** %MEMORY
  %loadBr_40bae5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bae5 = icmp eq i8 %loadBr_40bae5, 1
  br i1 %cmpBr_40bae5, label %block_.L_40bba8, label %block_.L_40baeb

block_.L_40baeb:                                  ; preds = %block_40bacf, %block_.L_40bab2
  %loadMem_40baeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12213 = getelementptr inbounds %struct.GPR, %struct.GPR* %12212, i32 0, i32 33
  %12214 = getelementptr inbounds %struct.Reg, %struct.Reg* %12213, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %12214 to i64*
  %12215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12216 = getelementptr inbounds %struct.GPR, %struct.GPR* %12215, i32 0, i32 1
  %12217 = getelementptr inbounds %struct.Reg, %struct.Reg* %12216, i32 0, i32 0
  %RAX.i775 = bitcast %union.anon* %12217 to i64*
  %12218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12219 = getelementptr inbounds %struct.GPR, %struct.GPR* %12218, i32 0, i32 15
  %12220 = getelementptr inbounds %struct.Reg, %struct.Reg* %12219, i32 0, i32 0
  %RBP.i776 = bitcast %union.anon* %12220 to i64*
  %12221 = load i64, i64* %RBP.i776
  %12222 = sub i64 %12221, 4
  %12223 = load i64, i64* %PC.i774
  %12224 = add i64 %12223, 3
  store i64 %12224, i64* %PC.i774
  %12225 = inttoptr i64 %12222 to i32*
  %12226 = load i32, i32* %12225
  %12227 = zext i32 %12226 to i64
  store i64 %12227, i64* %RAX.i775, align 8
  store %struct.Memory* %loadMem_40baeb, %struct.Memory** %MEMORY
  %loadMem_40baee = load %struct.Memory*, %struct.Memory** %MEMORY
  %12228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12229 = getelementptr inbounds %struct.GPR, %struct.GPR* %12228, i32 0, i32 33
  %12230 = getelementptr inbounds %struct.Reg, %struct.Reg* %12229, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %12230 to i64*
  %12231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12232 = getelementptr inbounds %struct.GPR, %struct.GPR* %12231, i32 0, i32 1
  %12233 = getelementptr inbounds %struct.Reg, %struct.Reg* %12232, i32 0, i32 0
  %RAX.i773 = bitcast %union.anon* %12233 to i64*
  %12234 = load i64, i64* %RAX.i773
  %12235 = load i64, i64* %PC.i772
  %12236 = add i64 %12235, 3
  store i64 %12236, i64* %PC.i772
  %12237 = trunc i64 %12234 to i32
  %12238 = sub i32 %12237, 20
  %12239 = zext i32 %12238 to i64
  store i64 %12239, i64* %RAX.i773, align 8
  %12240 = icmp ult i32 %12237, 20
  %12241 = zext i1 %12240 to i8
  %12242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12241, i8* %12242, align 1
  %12243 = and i32 %12238, 255
  %12244 = call i32 @llvm.ctpop.i32(i32 %12243)
  %12245 = trunc i32 %12244 to i8
  %12246 = and i8 %12245, 1
  %12247 = xor i8 %12246, 1
  %12248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12247, i8* %12248, align 1
  %12249 = xor i64 20, %12234
  %12250 = trunc i64 %12249 to i32
  %12251 = xor i32 %12250, %12238
  %12252 = lshr i32 %12251, 4
  %12253 = trunc i32 %12252 to i8
  %12254 = and i8 %12253, 1
  %12255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12254, i8* %12255, align 1
  %12256 = icmp eq i32 %12238, 0
  %12257 = zext i1 %12256 to i8
  %12258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12257, i8* %12258, align 1
  %12259 = lshr i32 %12238, 31
  %12260 = trunc i32 %12259 to i8
  %12261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12260, i8* %12261, align 1
  %12262 = lshr i32 %12237, 31
  %12263 = xor i32 %12259, %12262
  %12264 = add i32 %12263, %12262
  %12265 = icmp eq i32 %12264, 2
  %12266 = zext i1 %12265 to i8
  %12267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12266, i8* %12267, align 1
  store %struct.Memory* %loadMem_40baee, %struct.Memory** %MEMORY
  %loadMem_40baf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12269 = getelementptr inbounds %struct.GPR, %struct.GPR* %12268, i32 0, i32 33
  %12270 = getelementptr inbounds %struct.Reg, %struct.Reg* %12269, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %12270 to i64*
  %12271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12272 = getelementptr inbounds %struct.GPR, %struct.GPR* %12271, i32 0, i32 1
  %12273 = getelementptr inbounds %struct.Reg, %struct.Reg* %12272, i32 0, i32 0
  %RAX.i771 = bitcast %union.anon* %12273 to i64*
  %12274 = load i64, i64* %RAX.i771
  %12275 = load i64, i64* %PC.i770
  %12276 = add i64 %12275, 3
  store i64 %12276, i64* %PC.i770
  %12277 = trunc i64 %12274 to i32
  %12278 = sub i32 %12277, 1
  %12279 = zext i32 %12278 to i64
  store i64 %12279, i64* %RAX.i771, align 8
  %12280 = icmp ult i32 %12277, 1
  %12281 = zext i1 %12280 to i8
  %12282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12281, i8* %12282, align 1
  %12283 = and i32 %12278, 255
  %12284 = call i32 @llvm.ctpop.i32(i32 %12283)
  %12285 = trunc i32 %12284 to i8
  %12286 = and i8 %12285, 1
  %12287 = xor i8 %12286, 1
  %12288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12287, i8* %12288, align 1
  %12289 = xor i64 1, %12274
  %12290 = trunc i64 %12289 to i32
  %12291 = xor i32 %12290, %12278
  %12292 = lshr i32 %12291, 4
  %12293 = trunc i32 %12292 to i8
  %12294 = and i8 %12293, 1
  %12295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12294, i8* %12295, align 1
  %12296 = icmp eq i32 %12278, 0
  %12297 = zext i1 %12296 to i8
  %12298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12297, i8* %12298, align 1
  %12299 = lshr i32 %12278, 31
  %12300 = trunc i32 %12299 to i8
  %12301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12300, i8* %12301, align 1
  %12302 = lshr i32 %12277, 31
  %12303 = xor i32 %12299, %12302
  %12304 = add i32 %12303, %12302
  %12305 = icmp eq i32 %12304, 2
  %12306 = zext i1 %12305 to i8
  %12307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12306, i8* %12307, align 1
  store %struct.Memory* %loadMem_40baf1, %struct.Memory** %MEMORY
  %loadMem_40baf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12309 = getelementptr inbounds %struct.GPR, %struct.GPR* %12308, i32 0, i32 33
  %12310 = getelementptr inbounds %struct.Reg, %struct.Reg* %12309, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %12310 to i64*
  %12311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12312 = getelementptr inbounds %struct.GPR, %struct.GPR* %12311, i32 0, i32 1
  %12313 = getelementptr inbounds %struct.Reg, %struct.Reg* %12312, i32 0, i32 0
  %EAX.i768 = bitcast %union.anon* %12313 to i32*
  %12314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12315 = getelementptr inbounds %struct.GPR, %struct.GPR* %12314, i32 0, i32 5
  %12316 = getelementptr inbounds %struct.Reg, %struct.Reg* %12315, i32 0, i32 0
  %RCX.i769 = bitcast %union.anon* %12316 to i64*
  %12317 = load i32, i32* %EAX.i768
  %12318 = zext i32 %12317 to i64
  %12319 = load i64, i64* %PC.i767
  %12320 = add i64 %12319, 3
  store i64 %12320, i64* %PC.i767
  %12321 = shl i64 %12318, 32
  %12322 = ashr exact i64 %12321, 32
  store i64 %12322, i64* %RCX.i769, align 8
  store %struct.Memory* %loadMem_40baf4, %struct.Memory** %MEMORY
  %loadMem_40baf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12324 = getelementptr inbounds %struct.GPR, %struct.GPR* %12323, i32 0, i32 33
  %12325 = getelementptr inbounds %struct.Reg, %struct.Reg* %12324, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %12325 to i64*
  %12326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12327 = getelementptr inbounds %struct.GPR, %struct.GPR* %12326, i32 0, i32 1
  %12328 = getelementptr inbounds %struct.Reg, %struct.Reg* %12327, i32 0, i32 0
  %RAX.i765 = bitcast %union.anon* %12328 to i64*
  %12329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12330 = getelementptr inbounds %struct.GPR, %struct.GPR* %12329, i32 0, i32 5
  %12331 = getelementptr inbounds %struct.Reg, %struct.Reg* %12330, i32 0, i32 0
  %RCX.i766 = bitcast %union.anon* %12331 to i64*
  %12332 = load i64, i64* %RCX.i766
  %12333 = add i64 %12332, 12099168
  %12334 = load i64, i64* %PC.i764
  %12335 = add i64 %12334, 8
  store i64 %12335, i64* %PC.i764
  %12336 = inttoptr i64 %12333 to i8*
  %12337 = load i8, i8* %12336
  %12338 = zext i8 %12337 to i64
  store i64 %12338, i64* %RAX.i765, align 8
  store %struct.Memory* %loadMem_40baf7, %struct.Memory** %MEMORY
  %loadMem_40baff = load %struct.Memory*, %struct.Memory** %MEMORY
  %12339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12340 = getelementptr inbounds %struct.GPR, %struct.GPR* %12339, i32 0, i32 33
  %12341 = getelementptr inbounds %struct.Reg, %struct.Reg* %12340, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %12341 to i64*
  %12342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12343 = getelementptr inbounds %struct.GPR, %struct.GPR* %12342, i32 0, i32 1
  %12344 = getelementptr inbounds %struct.Reg, %struct.Reg* %12343, i32 0, i32 0
  %EAX.i762 = bitcast %union.anon* %12344 to i32*
  %12345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12346 = getelementptr inbounds %struct.GPR, %struct.GPR* %12345, i32 0, i32 15
  %12347 = getelementptr inbounds %struct.Reg, %struct.Reg* %12346, i32 0, i32 0
  %RBP.i763 = bitcast %union.anon* %12347 to i64*
  %12348 = load i32, i32* %EAX.i762
  %12349 = zext i32 %12348 to i64
  %12350 = load i64, i64* %RBP.i763
  %12351 = sub i64 %12350, 20
  %12352 = load i64, i64* %PC.i761
  %12353 = add i64 %12352, 3
  store i64 %12353, i64* %PC.i761
  %12354 = inttoptr i64 %12351 to i32*
  %12355 = load i32, i32* %12354
  %12356 = sub i32 %12348, %12355
  %12357 = icmp ult i32 %12348, %12355
  %12358 = zext i1 %12357 to i8
  %12359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12358, i8* %12359, align 1
  %12360 = and i32 %12356, 255
  %12361 = call i32 @llvm.ctpop.i32(i32 %12360)
  %12362 = trunc i32 %12361 to i8
  %12363 = and i8 %12362, 1
  %12364 = xor i8 %12363, 1
  %12365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12364, i8* %12365, align 1
  %12366 = xor i32 %12355, %12348
  %12367 = xor i32 %12366, %12356
  %12368 = lshr i32 %12367, 4
  %12369 = trunc i32 %12368 to i8
  %12370 = and i8 %12369, 1
  %12371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12370, i8* %12371, align 1
  %12372 = icmp eq i32 %12356, 0
  %12373 = zext i1 %12372 to i8
  %12374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12373, i8* %12374, align 1
  %12375 = lshr i32 %12356, 31
  %12376 = trunc i32 %12375 to i8
  %12377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12376, i8* %12377, align 1
  %12378 = lshr i32 %12348, 31
  %12379 = lshr i32 %12355, 31
  %12380 = xor i32 %12379, %12378
  %12381 = xor i32 %12375, %12378
  %12382 = add i32 %12381, %12380
  %12383 = icmp eq i32 %12382, 2
  %12384 = zext i1 %12383 to i8
  %12385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12384, i8* %12385, align 1
  store %struct.Memory* %loadMem_40baff, %struct.Memory** %MEMORY
  %loadMem_40bb02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12387 = getelementptr inbounds %struct.GPR, %struct.GPR* %12386, i32 0, i32 33
  %12388 = getelementptr inbounds %struct.Reg, %struct.Reg* %12387, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %12388 to i64*
  %12389 = load i64, i64* %PC.i760
  %12390 = add i64 %12389, 34
  %12391 = load i64, i64* %PC.i760
  %12392 = add i64 %12391, 6
  %12393 = load i64, i64* %PC.i760
  %12394 = add i64 %12393, 6
  store i64 %12394, i64* %PC.i760
  %12395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12396 = load i8, i8* %12395, align 1
  %12397 = icmp eq i8 %12396, 0
  %12398 = zext i1 %12397 to i8
  store i8 %12398, i8* %BRANCH_TAKEN, align 1
  %12399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12400 = select i1 %12397, i64 %12390, i64 %12392
  store i64 %12400, i64* %12399, align 8
  store %struct.Memory* %loadMem_40bb02, %struct.Memory** %MEMORY
  %loadBr_40bb02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bb02 = icmp eq i8 %loadBr_40bb02, 1
  br i1 %cmpBr_40bb02, label %block_.L_40bb24, label %block_40bb08

block_40bb08:                                     ; preds = %block_.L_40baeb
  %loadMem_40bb08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12402 = getelementptr inbounds %struct.GPR, %struct.GPR* %12401, i32 0, i32 33
  %12403 = getelementptr inbounds %struct.Reg, %struct.Reg* %12402, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %12403 to i64*
  %12404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12405 = getelementptr inbounds %struct.GPR, %struct.GPR* %12404, i32 0, i32 1
  %12406 = getelementptr inbounds %struct.Reg, %struct.Reg* %12405, i32 0, i32 0
  %RAX.i758 = bitcast %union.anon* %12406 to i64*
  %12407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12408 = getelementptr inbounds %struct.GPR, %struct.GPR* %12407, i32 0, i32 15
  %12409 = getelementptr inbounds %struct.Reg, %struct.Reg* %12408, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %12409 to i64*
  %12410 = load i64, i64* %RBP.i759
  %12411 = sub i64 %12410, 4
  %12412 = load i64, i64* %PC.i757
  %12413 = add i64 %12412, 3
  store i64 %12413, i64* %PC.i757
  %12414 = inttoptr i64 %12411 to i32*
  %12415 = load i32, i32* %12414
  %12416 = zext i32 %12415 to i64
  store i64 %12416, i64* %RAX.i758, align 8
  store %struct.Memory* %loadMem_40bb08, %struct.Memory** %MEMORY
  %loadMem_40bb0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12418 = getelementptr inbounds %struct.GPR, %struct.GPR* %12417, i32 0, i32 33
  %12419 = getelementptr inbounds %struct.Reg, %struct.Reg* %12418, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %12419 to i64*
  %12420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12421 = getelementptr inbounds %struct.GPR, %struct.GPR* %12420, i32 0, i32 1
  %12422 = getelementptr inbounds %struct.Reg, %struct.Reg* %12421, i32 0, i32 0
  %RAX.i756 = bitcast %union.anon* %12422 to i64*
  %12423 = load i64, i64* %RAX.i756
  %12424 = load i64, i64* %PC.i755
  %12425 = add i64 %12424, 3
  store i64 %12425, i64* %PC.i755
  %12426 = trunc i64 %12423 to i32
  %12427 = sub i32 %12426, 20
  %12428 = zext i32 %12427 to i64
  store i64 %12428, i64* %RAX.i756, align 8
  %12429 = icmp ult i32 %12426, 20
  %12430 = zext i1 %12429 to i8
  %12431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12430, i8* %12431, align 1
  %12432 = and i32 %12427, 255
  %12433 = call i32 @llvm.ctpop.i32(i32 %12432)
  %12434 = trunc i32 %12433 to i8
  %12435 = and i8 %12434, 1
  %12436 = xor i8 %12435, 1
  %12437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12436, i8* %12437, align 1
  %12438 = xor i64 20, %12423
  %12439 = trunc i64 %12438 to i32
  %12440 = xor i32 %12439, %12427
  %12441 = lshr i32 %12440, 4
  %12442 = trunc i32 %12441 to i8
  %12443 = and i8 %12442, 1
  %12444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12443, i8* %12444, align 1
  %12445 = icmp eq i32 %12427, 0
  %12446 = zext i1 %12445 to i8
  %12447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12446, i8* %12447, align 1
  %12448 = lshr i32 %12427, 31
  %12449 = trunc i32 %12448 to i8
  %12450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12449, i8* %12450, align 1
  %12451 = lshr i32 %12426, 31
  %12452 = xor i32 %12448, %12451
  %12453 = add i32 %12452, %12451
  %12454 = icmp eq i32 %12453, 2
  %12455 = zext i1 %12454 to i8
  %12456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12455, i8* %12456, align 1
  store %struct.Memory* %loadMem_40bb0b, %struct.Memory** %MEMORY
  %loadMem_40bb0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12458 = getelementptr inbounds %struct.GPR, %struct.GPR* %12457, i32 0, i32 33
  %12459 = getelementptr inbounds %struct.Reg, %struct.Reg* %12458, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %12459 to i64*
  %12460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12461 = getelementptr inbounds %struct.GPR, %struct.GPR* %12460, i32 0, i32 1
  %12462 = getelementptr inbounds %struct.Reg, %struct.Reg* %12461, i32 0, i32 0
  %RAX.i754 = bitcast %union.anon* %12462 to i64*
  %12463 = load i64, i64* %RAX.i754
  %12464 = load i64, i64* %PC.i753
  %12465 = add i64 %12464, 3
  store i64 %12465, i64* %PC.i753
  %12466 = trunc i64 %12463 to i32
  %12467 = sub i32 %12466, 1
  %12468 = zext i32 %12467 to i64
  store i64 %12468, i64* %RAX.i754, align 8
  %12469 = icmp ult i32 %12466, 1
  %12470 = zext i1 %12469 to i8
  %12471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12470, i8* %12471, align 1
  %12472 = and i32 %12467, 255
  %12473 = call i32 @llvm.ctpop.i32(i32 %12472)
  %12474 = trunc i32 %12473 to i8
  %12475 = and i8 %12474, 1
  %12476 = xor i8 %12475, 1
  %12477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12476, i8* %12477, align 1
  %12478 = xor i64 1, %12463
  %12479 = trunc i64 %12478 to i32
  %12480 = xor i32 %12479, %12467
  %12481 = lshr i32 %12480, 4
  %12482 = trunc i32 %12481 to i8
  %12483 = and i8 %12482, 1
  %12484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12483, i8* %12484, align 1
  %12485 = icmp eq i32 %12467, 0
  %12486 = zext i1 %12485 to i8
  %12487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12486, i8* %12487, align 1
  %12488 = lshr i32 %12467, 31
  %12489 = trunc i32 %12488 to i8
  %12490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12489, i8* %12490, align 1
  %12491 = lshr i32 %12466, 31
  %12492 = xor i32 %12488, %12491
  %12493 = add i32 %12492, %12491
  %12494 = icmp eq i32 %12493, 2
  %12495 = zext i1 %12494 to i8
  %12496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12495, i8* %12496, align 1
  store %struct.Memory* %loadMem_40bb0e, %struct.Memory** %MEMORY
  %loadMem_40bb11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12498 = getelementptr inbounds %struct.GPR, %struct.GPR* %12497, i32 0, i32 33
  %12499 = getelementptr inbounds %struct.Reg, %struct.Reg* %12498, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %12499 to i64*
  %12500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12501 = getelementptr inbounds %struct.GPR, %struct.GPR* %12500, i32 0, i32 1
  %12502 = getelementptr inbounds %struct.Reg, %struct.Reg* %12501, i32 0, i32 0
  %EAX.i751 = bitcast %union.anon* %12502 to i32*
  %12503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12504 = getelementptr inbounds %struct.GPR, %struct.GPR* %12503, i32 0, i32 5
  %12505 = getelementptr inbounds %struct.Reg, %struct.Reg* %12504, i32 0, i32 0
  %RCX.i752 = bitcast %union.anon* %12505 to i64*
  %12506 = load i32, i32* %EAX.i751
  %12507 = zext i32 %12506 to i64
  %12508 = load i64, i64* %PC.i750
  %12509 = add i64 %12508, 3
  store i64 %12509, i64* %PC.i750
  %12510 = shl i64 %12507, 32
  %12511 = ashr exact i64 %12510, 32
  store i64 %12511, i64* %RCX.i752, align 8
  store %struct.Memory* %loadMem_40bb11, %struct.Memory** %MEMORY
  %loadMem_40bb14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12513 = getelementptr inbounds %struct.GPR, %struct.GPR* %12512, i32 0, i32 33
  %12514 = getelementptr inbounds %struct.Reg, %struct.Reg* %12513, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %12514 to i64*
  %12515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12516 = getelementptr inbounds %struct.GPR, %struct.GPR* %12515, i32 0, i32 1
  %12517 = getelementptr inbounds %struct.Reg, %struct.Reg* %12516, i32 0, i32 0
  %RAX.i748 = bitcast %union.anon* %12517 to i64*
  %12518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12519 = getelementptr inbounds %struct.GPR, %struct.GPR* %12518, i32 0, i32 5
  %12520 = getelementptr inbounds %struct.Reg, %struct.Reg* %12519, i32 0, i32 0
  %RCX.i749 = bitcast %union.anon* %12520 to i64*
  %12521 = load i64, i64* %RCX.i749
  %12522 = mul i64 %12521, 4
  %12523 = add i64 %12522, 11187184
  %12524 = load i64, i64* %PC.i747
  %12525 = add i64 %12524, 7
  store i64 %12525, i64* %PC.i747
  %12526 = inttoptr i64 %12523 to i32*
  %12527 = load i32, i32* %12526
  %12528 = zext i32 %12527 to i64
  store i64 %12528, i64* %RAX.i748, align 8
  store %struct.Memory* %loadMem_40bb14, %struct.Memory** %MEMORY
  %loadMem_40bb1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12530 = getelementptr inbounds %struct.GPR, %struct.GPR* %12529, i32 0, i32 33
  %12531 = getelementptr inbounds %struct.Reg, %struct.Reg* %12530, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %12531 to i64*
  %12532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12533 = getelementptr inbounds %struct.GPR, %struct.GPR* %12532, i32 0, i32 1
  %12534 = getelementptr inbounds %struct.Reg, %struct.Reg* %12533, i32 0, i32 0
  %EAX.i745 = bitcast %union.anon* %12534 to i32*
  %12535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12536 = getelementptr inbounds %struct.GPR, %struct.GPR* %12535, i32 0, i32 15
  %12537 = getelementptr inbounds %struct.Reg, %struct.Reg* %12536, i32 0, i32 0
  %RBP.i746 = bitcast %union.anon* %12537 to i64*
  %12538 = load i32, i32* %EAX.i745
  %12539 = zext i32 %12538 to i64
  %12540 = load i64, i64* %RBP.i746
  %12541 = sub i64 %12540, 8
  %12542 = load i64, i64* %PC.i744
  %12543 = add i64 %12542, 3
  store i64 %12543, i64* %PC.i744
  %12544 = inttoptr i64 %12541 to i32*
  %12545 = load i32, i32* %12544
  %12546 = sub i32 %12538, %12545
  %12547 = icmp ult i32 %12538, %12545
  %12548 = zext i1 %12547 to i8
  %12549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12548, i8* %12549, align 1
  %12550 = and i32 %12546, 255
  %12551 = call i32 @llvm.ctpop.i32(i32 %12550)
  %12552 = trunc i32 %12551 to i8
  %12553 = and i8 %12552, 1
  %12554 = xor i8 %12553, 1
  %12555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12554, i8* %12555, align 1
  %12556 = xor i32 %12545, %12538
  %12557 = xor i32 %12556, %12546
  %12558 = lshr i32 %12557, 4
  %12559 = trunc i32 %12558 to i8
  %12560 = and i8 %12559, 1
  %12561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12560, i8* %12561, align 1
  %12562 = icmp eq i32 %12546, 0
  %12563 = zext i1 %12562 to i8
  %12564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12563, i8* %12564, align 1
  %12565 = lshr i32 %12546, 31
  %12566 = trunc i32 %12565 to i8
  %12567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12566, i8* %12567, align 1
  %12568 = lshr i32 %12538, 31
  %12569 = lshr i32 %12545, 31
  %12570 = xor i32 %12569, %12568
  %12571 = xor i32 %12565, %12568
  %12572 = add i32 %12571, %12570
  %12573 = icmp eq i32 %12572, 2
  %12574 = zext i1 %12573 to i8
  %12575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12574, i8* %12575, align 1
  store %struct.Memory* %loadMem_40bb1b, %struct.Memory** %MEMORY
  %loadMem_40bb1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12577 = getelementptr inbounds %struct.GPR, %struct.GPR* %12576, i32 0, i32 33
  %12578 = getelementptr inbounds %struct.Reg, %struct.Reg* %12577, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %12578 to i64*
  %12579 = load i64, i64* %PC.i743
  %12580 = add i64 %12579, 138
  %12581 = load i64, i64* %PC.i743
  %12582 = add i64 %12581, 6
  %12583 = load i64, i64* %PC.i743
  %12584 = add i64 %12583, 6
  store i64 %12584, i64* %PC.i743
  %12585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12586 = load i8, i8* %12585, align 1
  store i8 %12586, i8* %BRANCH_TAKEN, align 1
  %12587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12588 = icmp ne i8 %12586, 0
  %12589 = select i1 %12588, i64 %12580, i64 %12582
  store i64 %12589, i64* %12587, align 8
  store %struct.Memory* %loadMem_40bb1e, %struct.Memory** %MEMORY
  %loadBr_40bb1e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bb1e = icmp eq i8 %loadBr_40bb1e, 1
  br i1 %cmpBr_40bb1e, label %block_.L_40bba8, label %block_.L_40bb24

block_.L_40bb24:                                  ; preds = %block_40bb08, %block_.L_40baeb
  %loadMem_40bb24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12591 = getelementptr inbounds %struct.GPR, %struct.GPR* %12590, i32 0, i32 33
  %12592 = getelementptr inbounds %struct.Reg, %struct.Reg* %12591, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %12592 to i64*
  %12593 = load i64, i64* %PC.i742
  %12594 = add i64 %12593, 5
  %12595 = load i64, i64* %PC.i742
  %12596 = add i64 %12595, 5
  store i64 %12596, i64* %PC.i742
  %12597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12594, i64* %12597, align 8
  store %struct.Memory* %loadMem_40bb24, %struct.Memory** %MEMORY
  br label %block_.L_40bb29

block_.L_40bb29:                                  ; preds = %block_.L_40bb24
  %loadMem_40bb29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12599 = getelementptr inbounds %struct.GPR, %struct.GPR* %12598, i32 0, i32 33
  %12600 = getelementptr inbounds %struct.Reg, %struct.Reg* %12599, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %12600 to i64*
  %12601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12602 = getelementptr inbounds %struct.GPR, %struct.GPR* %12601, i32 0, i32 1
  %12603 = getelementptr inbounds %struct.Reg, %struct.Reg* %12602, i32 0, i32 0
  %RAX.i741 = bitcast %union.anon* %12603 to i64*
  %12604 = load i64, i64* %PC.i740
  %12605 = add i64 %12604, 10
  store i64 %12605, i64* %PC.i740
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i741, align 8
  store %struct.Memory* %loadMem_40bb29, %struct.Memory** %MEMORY
  %loadMem_40bb33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12607 = getelementptr inbounds %struct.GPR, %struct.GPR* %12606, i32 0, i32 33
  %12608 = getelementptr inbounds %struct.Reg, %struct.Reg* %12607, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %12608 to i64*
  %12609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12610 = getelementptr inbounds %struct.GPR, %struct.GPR* %12609, i32 0, i32 5
  %12611 = getelementptr inbounds %struct.Reg, %struct.Reg* %12610, i32 0, i32 0
  %RCX.i738 = bitcast %union.anon* %12611 to i64*
  %12612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12613 = getelementptr inbounds %struct.GPR, %struct.GPR* %12612, i32 0, i32 15
  %12614 = getelementptr inbounds %struct.Reg, %struct.Reg* %12613, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %12614 to i64*
  %12615 = load i64, i64* %RBP.i739
  %12616 = sub i64 %12615, 8
  %12617 = load i64, i64* %PC.i737
  %12618 = add i64 %12617, 4
  store i64 %12618, i64* %PC.i737
  %12619 = inttoptr i64 %12616 to i32*
  %12620 = load i32, i32* %12619
  %12621 = sext i32 %12620 to i64
  store i64 %12621, i64* %RCX.i738, align 8
  store %struct.Memory* %loadMem_40bb33, %struct.Memory** %MEMORY
  %loadMem_40bb37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12623 = getelementptr inbounds %struct.GPR, %struct.GPR* %12622, i32 0, i32 33
  %12624 = getelementptr inbounds %struct.Reg, %struct.Reg* %12623, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %12624 to i64*
  %12625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12626 = getelementptr inbounds %struct.GPR, %struct.GPR* %12625, i32 0, i32 5
  %12627 = getelementptr inbounds %struct.Reg, %struct.Reg* %12626, i32 0, i32 0
  %RCX.i736 = bitcast %union.anon* %12627 to i64*
  %12628 = load i64, i64* %RCX.i736
  %12629 = load i64, i64* %PC.i735
  %12630 = add i64 %12629, 7
  store i64 %12630, i64* %PC.i735
  %12631 = sext i64 %12628 to i128
  %12632 = and i128 %12631, -18446744073709551616
  %12633 = zext i64 %12628 to i128
  %12634 = or i128 %12632, %12633
  %12635 = mul i128 744, %12634
  %12636 = trunc i128 %12635 to i64
  store i64 %12636, i64* %RCX.i736, align 8
  %12637 = sext i64 %12636 to i128
  %12638 = icmp ne i128 %12637, %12635
  %12639 = zext i1 %12638 to i8
  %12640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12639, i8* %12640, align 1
  %12641 = trunc i128 %12635 to i32
  %12642 = and i32 %12641, 255
  %12643 = call i32 @llvm.ctpop.i32(i32 %12642)
  %12644 = trunc i32 %12643 to i8
  %12645 = and i8 %12644, 1
  %12646 = xor i8 %12645, 1
  %12647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12646, i8* %12647, align 1
  %12648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12648, align 1
  %12649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12649, align 1
  %12650 = lshr i64 %12636, 63
  %12651 = trunc i64 %12650 to i8
  %12652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12651, i8* %12652, align 1
  %12653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12639, i8* %12653, align 1
  store %struct.Memory* %loadMem_40bb37, %struct.Memory** %MEMORY
  %loadMem_40bb3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12655 = getelementptr inbounds %struct.GPR, %struct.GPR* %12654, i32 0, i32 33
  %12656 = getelementptr inbounds %struct.Reg, %struct.Reg* %12655, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %12656 to i64*
  %12657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12658 = getelementptr inbounds %struct.GPR, %struct.GPR* %12657, i32 0, i32 1
  %12659 = getelementptr inbounds %struct.Reg, %struct.Reg* %12658, i32 0, i32 0
  %RAX.i733 = bitcast %union.anon* %12659 to i64*
  %12660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12661 = getelementptr inbounds %struct.GPR, %struct.GPR* %12660, i32 0, i32 5
  %12662 = getelementptr inbounds %struct.Reg, %struct.Reg* %12661, i32 0, i32 0
  %RCX.i734 = bitcast %union.anon* %12662 to i64*
  %12663 = load i64, i64* %RAX.i733
  %12664 = load i64, i64* %RCX.i734
  %12665 = load i64, i64* %PC.i732
  %12666 = add i64 %12665, 3
  store i64 %12666, i64* %PC.i732
  %12667 = add i64 %12664, %12663
  store i64 %12667, i64* %RAX.i733, align 8
  %12668 = icmp ult i64 %12667, %12663
  %12669 = icmp ult i64 %12667, %12664
  %12670 = or i1 %12668, %12669
  %12671 = zext i1 %12670 to i8
  %12672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12671, i8* %12672, align 1
  %12673 = trunc i64 %12667 to i32
  %12674 = and i32 %12673, 255
  %12675 = call i32 @llvm.ctpop.i32(i32 %12674)
  %12676 = trunc i32 %12675 to i8
  %12677 = and i8 %12676, 1
  %12678 = xor i8 %12677, 1
  %12679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12678, i8* %12679, align 1
  %12680 = xor i64 %12664, %12663
  %12681 = xor i64 %12680, %12667
  %12682 = lshr i64 %12681, 4
  %12683 = trunc i64 %12682 to i8
  %12684 = and i8 %12683, 1
  %12685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12684, i8* %12685, align 1
  %12686 = icmp eq i64 %12667, 0
  %12687 = zext i1 %12686 to i8
  %12688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12687, i8* %12688, align 1
  %12689 = lshr i64 %12667, 63
  %12690 = trunc i64 %12689 to i8
  %12691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12690, i8* %12691, align 1
  %12692 = lshr i64 %12663, 63
  %12693 = lshr i64 %12664, 63
  %12694 = xor i64 %12689, %12692
  %12695 = xor i64 %12689, %12693
  %12696 = add i64 %12694, %12695
  %12697 = icmp eq i64 %12696, 2
  %12698 = zext i1 %12697 to i8
  %12699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12698, i8* %12699, align 1
  store %struct.Memory* %loadMem_40bb3e, %struct.Memory** %MEMORY
  %loadMem_40bb41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12701 = getelementptr inbounds %struct.GPR, %struct.GPR* %12700, i32 0, i32 33
  %12702 = getelementptr inbounds %struct.Reg, %struct.Reg* %12701, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %12702 to i64*
  %12703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12704 = getelementptr inbounds %struct.GPR, %struct.GPR* %12703, i32 0, i32 1
  %12705 = getelementptr inbounds %struct.Reg, %struct.Reg* %12704, i32 0, i32 0
  %RAX.i731 = bitcast %union.anon* %12705 to i64*
  %12706 = load i64, i64* %RAX.i731
  %12707 = add i64 %12706, 12
  %12708 = load i64, i64* %PC.i730
  %12709 = add i64 %12708, 4
  store i64 %12709, i64* %PC.i730
  %12710 = inttoptr i64 %12707 to i32*
  %12711 = load i32, i32* %12710
  %12712 = sub i32 %12711, 20
  %12713 = icmp ult i32 %12711, 20
  %12714 = zext i1 %12713 to i8
  %12715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12714, i8* %12715, align 1
  %12716 = and i32 %12712, 255
  %12717 = call i32 @llvm.ctpop.i32(i32 %12716)
  %12718 = trunc i32 %12717 to i8
  %12719 = and i8 %12718, 1
  %12720 = xor i8 %12719, 1
  %12721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12720, i8* %12721, align 1
  %12722 = xor i32 %12711, 20
  %12723 = xor i32 %12722, %12712
  %12724 = lshr i32 %12723, 4
  %12725 = trunc i32 %12724 to i8
  %12726 = and i8 %12725, 1
  %12727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12726, i8* %12727, align 1
  %12728 = icmp eq i32 %12712, 0
  %12729 = zext i1 %12728 to i8
  %12730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12729, i8* %12730, align 1
  %12731 = lshr i32 %12712, 31
  %12732 = trunc i32 %12731 to i8
  %12733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12732, i8* %12733, align 1
  %12734 = lshr i32 %12711, 31
  %12735 = xor i32 %12731, %12734
  %12736 = add i32 %12735, %12734
  %12737 = icmp eq i32 %12736, 2
  %12738 = zext i1 %12737 to i8
  %12739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12738, i8* %12739, align 1
  store %struct.Memory* %loadMem_40bb41, %struct.Memory** %MEMORY
  %loadMem_40bb45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12741 = getelementptr inbounds %struct.GPR, %struct.GPR* %12740, i32 0, i32 33
  %12742 = getelementptr inbounds %struct.Reg, %struct.Reg* %12741, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %12742 to i64*
  %12743 = load i64, i64* %PC.i729
  %12744 = add i64 %12743, 61
  %12745 = load i64, i64* %PC.i729
  %12746 = add i64 %12745, 6
  %12747 = load i64, i64* %PC.i729
  %12748 = add i64 %12747, 6
  store i64 %12748, i64* %PC.i729
  %12749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12750 = load i8, i8* %12749, align 1
  %12751 = icmp ne i8 %12750, 0
  %12752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12753 = load i8, i8* %12752, align 1
  %12754 = icmp ne i8 %12753, 0
  %12755 = xor i1 %12751, %12754
  %12756 = xor i1 %12755, true
  %12757 = zext i1 %12756 to i8
  store i8 %12757, i8* %BRANCH_TAKEN, align 1
  %12758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12759 = select i1 %12755, i64 %12746, i64 %12744
  store i64 %12759, i64* %12758, align 8
  store %struct.Memory* %loadMem_40bb45, %struct.Memory** %MEMORY
  %loadBr_40bb45 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bb45 = icmp eq i8 %loadBr_40bb45, 1
  br i1 %cmpBr_40bb45, label %block_.L_40bb82, label %block_40bb4b

block_40bb4b:                                     ; preds = %block_.L_40bb29
  %loadMem_40bb4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12761 = getelementptr inbounds %struct.GPR, %struct.GPR* %12760, i32 0, i32 33
  %12762 = getelementptr inbounds %struct.Reg, %struct.Reg* %12761, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %12762 to i64*
  %12763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12764 = getelementptr inbounds %struct.GPR, %struct.GPR* %12763, i32 0, i32 1
  %12765 = getelementptr inbounds %struct.Reg, %struct.Reg* %12764, i32 0, i32 0
  %RAX.i728 = bitcast %union.anon* %12765 to i64*
  %12766 = load i64, i64* %PC.i727
  %12767 = add i64 %12766, 10
  store i64 %12767, i64* %PC.i727
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i728, align 8
  store %struct.Memory* %loadMem_40bb4b, %struct.Memory** %MEMORY
  %loadMem_40bb55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12769 = getelementptr inbounds %struct.GPR, %struct.GPR* %12768, i32 0, i32 33
  %12770 = getelementptr inbounds %struct.Reg, %struct.Reg* %12769, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %12770 to i64*
  %12771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12772 = getelementptr inbounds %struct.GPR, %struct.GPR* %12771, i32 0, i32 5
  %12773 = getelementptr inbounds %struct.Reg, %struct.Reg* %12772, i32 0, i32 0
  %RCX.i725 = bitcast %union.anon* %12773 to i64*
  %12774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12775 = getelementptr inbounds %struct.GPR, %struct.GPR* %12774, i32 0, i32 15
  %12776 = getelementptr inbounds %struct.Reg, %struct.Reg* %12775, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %12776 to i64*
  %12777 = load i64, i64* %RBP.i726
  %12778 = sub i64 %12777, 4
  %12779 = load i64, i64* %PC.i724
  %12780 = add i64 %12779, 3
  store i64 %12780, i64* %PC.i724
  %12781 = inttoptr i64 %12778 to i32*
  %12782 = load i32, i32* %12781
  %12783 = zext i32 %12782 to i64
  store i64 %12783, i64* %RCX.i725, align 8
  store %struct.Memory* %loadMem_40bb55, %struct.Memory** %MEMORY
  %loadMem_40bb58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12785 = getelementptr inbounds %struct.GPR, %struct.GPR* %12784, i32 0, i32 33
  %12786 = getelementptr inbounds %struct.Reg, %struct.Reg* %12785, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %12786 to i64*
  %12787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12788 = getelementptr inbounds %struct.GPR, %struct.GPR* %12787, i32 0, i32 5
  %12789 = getelementptr inbounds %struct.Reg, %struct.Reg* %12788, i32 0, i32 0
  %RCX.i723 = bitcast %union.anon* %12789 to i64*
  %12790 = load i64, i64* %RCX.i723
  %12791 = load i64, i64* %PC.i722
  %12792 = add i64 %12791, 3
  store i64 %12792, i64* %PC.i722
  %12793 = trunc i64 %12790 to i32
  %12794 = sub i32 %12793, 20
  %12795 = zext i32 %12794 to i64
  store i64 %12795, i64* %RCX.i723, align 8
  %12796 = icmp ult i32 %12793, 20
  %12797 = zext i1 %12796 to i8
  %12798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12797, i8* %12798, align 1
  %12799 = and i32 %12794, 255
  %12800 = call i32 @llvm.ctpop.i32(i32 %12799)
  %12801 = trunc i32 %12800 to i8
  %12802 = and i8 %12801, 1
  %12803 = xor i8 %12802, 1
  %12804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12803, i8* %12804, align 1
  %12805 = xor i64 20, %12790
  %12806 = trunc i64 %12805 to i32
  %12807 = xor i32 %12806, %12794
  %12808 = lshr i32 %12807, 4
  %12809 = trunc i32 %12808 to i8
  %12810 = and i8 %12809, 1
  %12811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12810, i8* %12811, align 1
  %12812 = icmp eq i32 %12794, 0
  %12813 = zext i1 %12812 to i8
  %12814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12813, i8* %12814, align 1
  %12815 = lshr i32 %12794, 31
  %12816 = trunc i32 %12815 to i8
  %12817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12816, i8* %12817, align 1
  %12818 = lshr i32 %12793, 31
  %12819 = xor i32 %12815, %12818
  %12820 = add i32 %12819, %12818
  %12821 = icmp eq i32 %12820, 2
  %12822 = zext i1 %12821 to i8
  %12823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12822, i8* %12823, align 1
  store %struct.Memory* %loadMem_40bb58, %struct.Memory** %MEMORY
  %loadMem_40bb5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12825 = getelementptr inbounds %struct.GPR, %struct.GPR* %12824, i32 0, i32 33
  %12826 = getelementptr inbounds %struct.Reg, %struct.Reg* %12825, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %12826 to i64*
  %12827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12828 = getelementptr inbounds %struct.GPR, %struct.GPR* %12827, i32 0, i32 7
  %12829 = getelementptr inbounds %struct.Reg, %struct.Reg* %12828, i32 0, i32 0
  %RDX.i720 = bitcast %union.anon* %12829 to i64*
  %12830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12831 = getelementptr inbounds %struct.GPR, %struct.GPR* %12830, i32 0, i32 15
  %12832 = getelementptr inbounds %struct.Reg, %struct.Reg* %12831, i32 0, i32 0
  %RBP.i721 = bitcast %union.anon* %12832 to i64*
  %12833 = load i64, i64* %RBP.i721
  %12834 = sub i64 %12833, 8
  %12835 = load i64, i64* %PC.i719
  %12836 = add i64 %12835, 4
  store i64 %12836, i64* %PC.i719
  %12837 = inttoptr i64 %12834 to i32*
  %12838 = load i32, i32* %12837
  %12839 = sext i32 %12838 to i64
  store i64 %12839, i64* %RDX.i720, align 8
  store %struct.Memory* %loadMem_40bb5b, %struct.Memory** %MEMORY
  %loadMem_40bb5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12841 = getelementptr inbounds %struct.GPR, %struct.GPR* %12840, i32 0, i32 33
  %12842 = getelementptr inbounds %struct.Reg, %struct.Reg* %12841, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %12842 to i64*
  %12843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12844 = getelementptr inbounds %struct.GPR, %struct.GPR* %12843, i32 0, i32 7
  %12845 = getelementptr inbounds %struct.Reg, %struct.Reg* %12844, i32 0, i32 0
  %RDX.i718 = bitcast %union.anon* %12845 to i64*
  %12846 = load i64, i64* %RDX.i718
  %12847 = load i64, i64* %PC.i717
  %12848 = add i64 %12847, 7
  store i64 %12848, i64* %PC.i717
  %12849 = sext i64 %12846 to i128
  %12850 = and i128 %12849, -18446744073709551616
  %12851 = zext i64 %12846 to i128
  %12852 = or i128 %12850, %12851
  %12853 = mul i128 744, %12852
  %12854 = trunc i128 %12853 to i64
  store i64 %12854, i64* %RDX.i718, align 8
  %12855 = sext i64 %12854 to i128
  %12856 = icmp ne i128 %12855, %12853
  %12857 = zext i1 %12856 to i8
  %12858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12857, i8* %12858, align 1
  %12859 = trunc i128 %12853 to i32
  %12860 = and i32 %12859, 255
  %12861 = call i32 @llvm.ctpop.i32(i32 %12860)
  %12862 = trunc i32 %12861 to i8
  %12863 = and i8 %12862, 1
  %12864 = xor i8 %12863, 1
  %12865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12864, i8* %12865, align 1
  %12866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12866, align 1
  %12867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12867, align 1
  %12868 = lshr i64 %12854, 63
  %12869 = trunc i64 %12868 to i8
  %12870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12869, i8* %12870, align 1
  %12871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12857, i8* %12871, align 1
  store %struct.Memory* %loadMem_40bb5f, %struct.Memory** %MEMORY
  %loadMem_40bb66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12873 = getelementptr inbounds %struct.GPR, %struct.GPR* %12872, i32 0, i32 33
  %12874 = getelementptr inbounds %struct.Reg, %struct.Reg* %12873, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %12874 to i64*
  %12875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12876 = getelementptr inbounds %struct.GPR, %struct.GPR* %12875, i32 0, i32 1
  %12877 = getelementptr inbounds %struct.Reg, %struct.Reg* %12876, i32 0, i32 0
  %RAX.i715 = bitcast %union.anon* %12877 to i64*
  %12878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12879 = getelementptr inbounds %struct.GPR, %struct.GPR* %12878, i32 0, i32 9
  %12880 = getelementptr inbounds %struct.Reg, %struct.Reg* %12879, i32 0, i32 0
  %RSI.i716 = bitcast %union.anon* %12880 to i64*
  %12881 = load i64, i64* %RAX.i715
  %12882 = load i64, i64* %PC.i714
  %12883 = add i64 %12882, 3
  store i64 %12883, i64* %PC.i714
  store i64 %12881, i64* %RSI.i716, align 8
  store %struct.Memory* %loadMem_40bb66, %struct.Memory** %MEMORY
  %loadMem_40bb69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12885 = getelementptr inbounds %struct.GPR, %struct.GPR* %12884, i32 0, i32 33
  %12886 = getelementptr inbounds %struct.Reg, %struct.Reg* %12885, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %12886 to i64*
  %12887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12888 = getelementptr inbounds %struct.GPR, %struct.GPR* %12887, i32 0, i32 7
  %12889 = getelementptr inbounds %struct.Reg, %struct.Reg* %12888, i32 0, i32 0
  %RDX.i712 = bitcast %union.anon* %12889 to i64*
  %12890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12891 = getelementptr inbounds %struct.GPR, %struct.GPR* %12890, i32 0, i32 9
  %12892 = getelementptr inbounds %struct.Reg, %struct.Reg* %12891, i32 0, i32 0
  %RSI.i713 = bitcast %union.anon* %12892 to i64*
  %12893 = load i64, i64* %RSI.i713
  %12894 = load i64, i64* %RDX.i712
  %12895 = load i64, i64* %PC.i711
  %12896 = add i64 %12895, 3
  store i64 %12896, i64* %PC.i711
  %12897 = add i64 %12894, %12893
  store i64 %12897, i64* %RSI.i713, align 8
  %12898 = icmp ult i64 %12897, %12893
  %12899 = icmp ult i64 %12897, %12894
  %12900 = or i1 %12898, %12899
  %12901 = zext i1 %12900 to i8
  %12902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12901, i8* %12902, align 1
  %12903 = trunc i64 %12897 to i32
  %12904 = and i32 %12903, 255
  %12905 = call i32 @llvm.ctpop.i32(i32 %12904)
  %12906 = trunc i32 %12905 to i8
  %12907 = and i8 %12906, 1
  %12908 = xor i8 %12907, 1
  %12909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12908, i8* %12909, align 1
  %12910 = xor i64 %12894, %12893
  %12911 = xor i64 %12910, %12897
  %12912 = lshr i64 %12911, 4
  %12913 = trunc i64 %12912 to i8
  %12914 = and i8 %12913, 1
  %12915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12914, i8* %12915, align 1
  %12916 = icmp eq i64 %12897, 0
  %12917 = zext i1 %12916 to i8
  %12918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12917, i8* %12918, align 1
  %12919 = lshr i64 %12897, 63
  %12920 = trunc i64 %12919 to i8
  %12921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12920, i8* %12921, align 1
  %12922 = lshr i64 %12893, 63
  %12923 = lshr i64 %12894, 63
  %12924 = xor i64 %12919, %12922
  %12925 = xor i64 %12919, %12923
  %12926 = add i64 %12924, %12925
  %12927 = icmp eq i64 %12926, 2
  %12928 = zext i1 %12927 to i8
  %12929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12928, i8* %12929, align 1
  store %struct.Memory* %loadMem_40bb69, %struct.Memory** %MEMORY
  %loadMem_40bb6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12931 = getelementptr inbounds %struct.GPR, %struct.GPR* %12930, i32 0, i32 33
  %12932 = getelementptr inbounds %struct.Reg, %struct.Reg* %12931, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %12932 to i64*
  %12933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12934 = getelementptr inbounds %struct.GPR, %struct.GPR* %12933, i32 0, i32 7
  %12935 = getelementptr inbounds %struct.Reg, %struct.Reg* %12934, i32 0, i32 0
  %RDX.i709 = bitcast %union.anon* %12935 to i64*
  %12936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12937 = getelementptr inbounds %struct.GPR, %struct.GPR* %12936, i32 0, i32 15
  %12938 = getelementptr inbounds %struct.Reg, %struct.Reg* %12937, i32 0, i32 0
  %RBP.i710 = bitcast %union.anon* %12938 to i64*
  %12939 = load i64, i64* %RBP.i710
  %12940 = sub i64 %12939, 8
  %12941 = load i64, i64* %PC.i708
  %12942 = add i64 %12941, 4
  store i64 %12942, i64* %PC.i708
  %12943 = inttoptr i64 %12940 to i32*
  %12944 = load i32, i32* %12943
  %12945 = sext i32 %12944 to i64
  store i64 %12945, i64* %RDX.i709, align 8
  store %struct.Memory* %loadMem_40bb6c, %struct.Memory** %MEMORY
  %loadMem_40bb70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12947 = getelementptr inbounds %struct.GPR, %struct.GPR* %12946, i32 0, i32 33
  %12948 = getelementptr inbounds %struct.Reg, %struct.Reg* %12947, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %12948 to i64*
  %12949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12950 = getelementptr inbounds %struct.GPR, %struct.GPR* %12949, i32 0, i32 7
  %12951 = getelementptr inbounds %struct.Reg, %struct.Reg* %12950, i32 0, i32 0
  %RDX.i707 = bitcast %union.anon* %12951 to i64*
  %12952 = load i64, i64* %RDX.i707
  %12953 = load i64, i64* %PC.i706
  %12954 = add i64 %12953, 7
  store i64 %12954, i64* %PC.i706
  %12955 = sext i64 %12952 to i128
  %12956 = and i128 %12955, -18446744073709551616
  %12957 = zext i64 %12952 to i128
  %12958 = or i128 %12956, %12957
  %12959 = mul i128 744, %12958
  %12960 = trunc i128 %12959 to i64
  store i64 %12960, i64* %RDX.i707, align 8
  %12961 = sext i64 %12960 to i128
  %12962 = icmp ne i128 %12961, %12959
  %12963 = zext i1 %12962 to i8
  %12964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12963, i8* %12964, align 1
  %12965 = trunc i128 %12959 to i32
  %12966 = and i32 %12965, 255
  %12967 = call i32 @llvm.ctpop.i32(i32 %12966)
  %12968 = trunc i32 %12967 to i8
  %12969 = and i8 %12968, 1
  %12970 = xor i8 %12969, 1
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12970, i8* %12971, align 1
  %12972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12972, align 1
  %12973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12973, align 1
  %12974 = lshr i64 %12960, 63
  %12975 = trunc i64 %12974 to i8
  %12976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12975, i8* %12976, align 1
  %12977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12963, i8* %12977, align 1
  store %struct.Memory* %loadMem_40bb70, %struct.Memory** %MEMORY
  %loadMem_40bb77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12979 = getelementptr inbounds %struct.GPR, %struct.GPR* %12978, i32 0, i32 33
  %12980 = getelementptr inbounds %struct.Reg, %struct.Reg* %12979, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %12980 to i64*
  %12981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12982 = getelementptr inbounds %struct.GPR, %struct.GPR* %12981, i32 0, i32 1
  %12983 = getelementptr inbounds %struct.Reg, %struct.Reg* %12982, i32 0, i32 0
  %RAX.i704 = bitcast %union.anon* %12983 to i64*
  %12984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12985 = getelementptr inbounds %struct.GPR, %struct.GPR* %12984, i32 0, i32 7
  %12986 = getelementptr inbounds %struct.Reg, %struct.Reg* %12985, i32 0, i32 0
  %RDX.i705 = bitcast %union.anon* %12986 to i64*
  %12987 = load i64, i64* %RAX.i704
  %12988 = load i64, i64* %RDX.i705
  %12989 = load i64, i64* %PC.i703
  %12990 = add i64 %12989, 3
  store i64 %12990, i64* %PC.i703
  %12991 = add i64 %12988, %12987
  store i64 %12991, i64* %RAX.i704, align 8
  %12992 = icmp ult i64 %12991, %12987
  %12993 = icmp ult i64 %12991, %12988
  %12994 = or i1 %12992, %12993
  %12995 = zext i1 %12994 to i8
  %12996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12995, i8* %12996, align 1
  %12997 = trunc i64 %12991 to i32
  %12998 = and i32 %12997, 255
  %12999 = call i32 @llvm.ctpop.i32(i32 %12998)
  %13000 = trunc i32 %12999 to i8
  %13001 = and i8 %13000, 1
  %13002 = xor i8 %13001, 1
  %13003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13002, i8* %13003, align 1
  %13004 = xor i64 %12988, %12987
  %13005 = xor i64 %13004, %12991
  %13006 = lshr i64 %13005, 4
  %13007 = trunc i64 %13006 to i8
  %13008 = and i8 %13007, 1
  %13009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13008, i8* %13009, align 1
  %13010 = icmp eq i64 %12991, 0
  %13011 = zext i1 %13010 to i8
  %13012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13011, i8* %13012, align 1
  %13013 = lshr i64 %12991, 63
  %13014 = trunc i64 %13013 to i8
  %13015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13014, i8* %13015, align 1
  %13016 = lshr i64 %12987, 63
  %13017 = lshr i64 %12988, 63
  %13018 = xor i64 %13013, %13016
  %13019 = xor i64 %13013, %13017
  %13020 = add i64 %13018, %13019
  %13021 = icmp eq i64 %13020, 2
  %13022 = zext i1 %13021 to i8
  %13023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13022, i8* %13023, align 1
  store %struct.Memory* %loadMem_40bb77, %struct.Memory** %MEMORY
  %loadMem_40bb7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13025 = getelementptr inbounds %struct.GPR, %struct.GPR* %13024, i32 0, i32 33
  %13026 = getelementptr inbounds %struct.Reg, %struct.Reg* %13025, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %13026 to i64*
  %13027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13028 = getelementptr inbounds %struct.GPR, %struct.GPR* %13027, i32 0, i32 1
  %13029 = getelementptr inbounds %struct.Reg, %struct.Reg* %13028, i32 0, i32 0
  %RAX.i702 = bitcast %union.anon* %13029 to i64*
  %13030 = load i64, i64* %RAX.i702
  %13031 = add i64 %13030, 12
  %13032 = load i64, i64* %PC.i701
  %13033 = add i64 %13032, 4
  store i64 %13033, i64* %PC.i701
  %13034 = inttoptr i64 %13031 to i32*
  %13035 = load i32, i32* %13034
  %13036 = sext i32 %13035 to i64
  store i64 %13036, i64* %RAX.i702, align 8
  store %struct.Memory* %loadMem_40bb7a, %struct.Memory** %MEMORY
  %loadMem_40bb7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13038 = getelementptr inbounds %struct.GPR, %struct.GPR* %13037, i32 0, i32 33
  %13039 = getelementptr inbounds %struct.Reg, %struct.Reg* %13038, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %13039 to i64*
  %13040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13041 = getelementptr inbounds %struct.GPR, %struct.GPR* %13040, i32 0, i32 5
  %13042 = getelementptr inbounds %struct.Reg, %struct.Reg* %13041, i32 0, i32 0
  %ECX.i698 = bitcast %union.anon* %13042 to i32*
  %13043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13044 = getelementptr inbounds %struct.GPR, %struct.GPR* %13043, i32 0, i32 1
  %13045 = getelementptr inbounds %struct.Reg, %struct.Reg* %13044, i32 0, i32 0
  %RAX.i699 = bitcast %union.anon* %13045 to i64*
  %13046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13047 = getelementptr inbounds %struct.GPR, %struct.GPR* %13046, i32 0, i32 9
  %13048 = getelementptr inbounds %struct.Reg, %struct.Reg* %13047, i32 0, i32 0
  %RSI.i700 = bitcast %union.anon* %13048 to i64*
  %13049 = load i64, i64* %RSI.i700
  %13050 = load i64, i64* %RAX.i699
  %13051 = mul i64 %13050, 4
  %13052 = add i64 %13049, 16
  %13053 = add i64 %13052, %13051
  %13054 = load i32, i32* %ECX.i698
  %13055 = zext i32 %13054 to i64
  %13056 = load i64, i64* %PC.i697
  %13057 = add i64 %13056, 4
  store i64 %13057, i64* %PC.i697
  %13058 = inttoptr i64 %13053 to i32*
  store i32 %13054, i32* %13058
  store %struct.Memory* %loadMem_40bb7e, %struct.Memory** %MEMORY
  br label %block_.L_40bb82

block_.L_40bb82:                                  ; preds = %block_40bb4b, %block_.L_40bb29
  %loadMem_40bb82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13060 = getelementptr inbounds %struct.GPR, %struct.GPR* %13059, i32 0, i32 33
  %13061 = getelementptr inbounds %struct.Reg, %struct.Reg* %13060, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %13061 to i64*
  %13062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13063 = getelementptr inbounds %struct.GPR, %struct.GPR* %13062, i32 0, i32 1
  %13064 = getelementptr inbounds %struct.Reg, %struct.Reg* %13063, i32 0, i32 0
  %RAX.i696 = bitcast %union.anon* %13064 to i64*
  %13065 = load i64, i64* %PC.i695
  %13066 = add i64 %13065, 10
  store i64 %13066, i64* %PC.i695
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i696, align 8
  store %struct.Memory* %loadMem_40bb82, %struct.Memory** %MEMORY
  %loadMem_40bb8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13068 = getelementptr inbounds %struct.GPR, %struct.GPR* %13067, i32 0, i32 33
  %13069 = getelementptr inbounds %struct.Reg, %struct.Reg* %13068, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %13069 to i64*
  %13070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13071 = getelementptr inbounds %struct.GPR, %struct.GPR* %13070, i32 0, i32 5
  %13072 = getelementptr inbounds %struct.Reg, %struct.Reg* %13071, i32 0, i32 0
  %RCX.i693 = bitcast %union.anon* %13072 to i64*
  %13073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13074 = getelementptr inbounds %struct.GPR, %struct.GPR* %13073, i32 0, i32 15
  %13075 = getelementptr inbounds %struct.Reg, %struct.Reg* %13074, i32 0, i32 0
  %RBP.i694 = bitcast %union.anon* %13075 to i64*
  %13076 = load i64, i64* %RBP.i694
  %13077 = sub i64 %13076, 8
  %13078 = load i64, i64* %PC.i692
  %13079 = add i64 %13078, 4
  store i64 %13079, i64* %PC.i692
  %13080 = inttoptr i64 %13077 to i32*
  %13081 = load i32, i32* %13080
  %13082 = sext i32 %13081 to i64
  store i64 %13082, i64* %RCX.i693, align 8
  store %struct.Memory* %loadMem_40bb8c, %struct.Memory** %MEMORY
  %loadMem_40bb90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13084 = getelementptr inbounds %struct.GPR, %struct.GPR* %13083, i32 0, i32 33
  %13085 = getelementptr inbounds %struct.Reg, %struct.Reg* %13084, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %13085 to i64*
  %13086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13087 = getelementptr inbounds %struct.GPR, %struct.GPR* %13086, i32 0, i32 5
  %13088 = getelementptr inbounds %struct.Reg, %struct.Reg* %13087, i32 0, i32 0
  %RCX.i691 = bitcast %union.anon* %13088 to i64*
  %13089 = load i64, i64* %RCX.i691
  %13090 = load i64, i64* %PC.i690
  %13091 = add i64 %13090, 7
  store i64 %13091, i64* %PC.i690
  %13092 = sext i64 %13089 to i128
  %13093 = and i128 %13092, -18446744073709551616
  %13094 = zext i64 %13089 to i128
  %13095 = or i128 %13093, %13094
  %13096 = mul i128 744, %13095
  %13097 = trunc i128 %13096 to i64
  store i64 %13097, i64* %RCX.i691, align 8
  %13098 = sext i64 %13097 to i128
  %13099 = icmp ne i128 %13098, %13096
  %13100 = zext i1 %13099 to i8
  %13101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13100, i8* %13101, align 1
  %13102 = trunc i128 %13096 to i32
  %13103 = and i32 %13102, 255
  %13104 = call i32 @llvm.ctpop.i32(i32 %13103)
  %13105 = trunc i32 %13104 to i8
  %13106 = and i8 %13105, 1
  %13107 = xor i8 %13106, 1
  %13108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13107, i8* %13108, align 1
  %13109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13109, align 1
  %13110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13110, align 1
  %13111 = lshr i64 %13097, 63
  %13112 = trunc i64 %13111 to i8
  %13113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13112, i8* %13113, align 1
  %13114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13100, i8* %13114, align 1
  store %struct.Memory* %loadMem_40bb90, %struct.Memory** %MEMORY
  %loadMem_40bb97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13116 = getelementptr inbounds %struct.GPR, %struct.GPR* %13115, i32 0, i32 33
  %13117 = getelementptr inbounds %struct.Reg, %struct.Reg* %13116, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %13117 to i64*
  %13118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13119 = getelementptr inbounds %struct.GPR, %struct.GPR* %13118, i32 0, i32 1
  %13120 = getelementptr inbounds %struct.Reg, %struct.Reg* %13119, i32 0, i32 0
  %RAX.i688 = bitcast %union.anon* %13120 to i64*
  %13121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13122 = getelementptr inbounds %struct.GPR, %struct.GPR* %13121, i32 0, i32 5
  %13123 = getelementptr inbounds %struct.Reg, %struct.Reg* %13122, i32 0, i32 0
  %RCX.i689 = bitcast %union.anon* %13123 to i64*
  %13124 = load i64, i64* %RAX.i688
  %13125 = load i64, i64* %RCX.i689
  %13126 = load i64, i64* %PC.i687
  %13127 = add i64 %13126, 3
  store i64 %13127, i64* %PC.i687
  %13128 = add i64 %13125, %13124
  store i64 %13128, i64* %RAX.i688, align 8
  %13129 = icmp ult i64 %13128, %13124
  %13130 = icmp ult i64 %13128, %13125
  %13131 = or i1 %13129, %13130
  %13132 = zext i1 %13131 to i8
  %13133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13132, i8* %13133, align 1
  %13134 = trunc i64 %13128 to i32
  %13135 = and i32 %13134, 255
  %13136 = call i32 @llvm.ctpop.i32(i32 %13135)
  %13137 = trunc i32 %13136 to i8
  %13138 = and i8 %13137, 1
  %13139 = xor i8 %13138, 1
  %13140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13139, i8* %13140, align 1
  %13141 = xor i64 %13125, %13124
  %13142 = xor i64 %13141, %13128
  %13143 = lshr i64 %13142, 4
  %13144 = trunc i64 %13143 to i8
  %13145 = and i8 %13144, 1
  %13146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13145, i8* %13146, align 1
  %13147 = icmp eq i64 %13128, 0
  %13148 = zext i1 %13147 to i8
  %13149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13148, i8* %13149, align 1
  %13150 = lshr i64 %13128, 63
  %13151 = trunc i64 %13150 to i8
  %13152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13151, i8* %13152, align 1
  %13153 = lshr i64 %13124, 63
  %13154 = lshr i64 %13125, 63
  %13155 = xor i64 %13150, %13153
  %13156 = xor i64 %13150, %13154
  %13157 = add i64 %13155, %13156
  %13158 = icmp eq i64 %13157, 2
  %13159 = zext i1 %13158 to i8
  %13160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13159, i8* %13160, align 1
  store %struct.Memory* %loadMem_40bb97, %struct.Memory** %MEMORY
  %loadMem_40bb9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13162 = getelementptr inbounds %struct.GPR, %struct.GPR* %13161, i32 0, i32 33
  %13163 = getelementptr inbounds %struct.Reg, %struct.Reg* %13162, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %13163 to i64*
  %13164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13165 = getelementptr inbounds %struct.GPR, %struct.GPR* %13164, i32 0, i32 1
  %13166 = getelementptr inbounds %struct.Reg, %struct.Reg* %13165, i32 0, i32 0
  %RAX.i685 = bitcast %union.anon* %13166 to i64*
  %13167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13168 = getelementptr inbounds %struct.GPR, %struct.GPR* %13167, i32 0, i32 7
  %13169 = getelementptr inbounds %struct.Reg, %struct.Reg* %13168, i32 0, i32 0
  %RDX.i686 = bitcast %union.anon* %13169 to i64*
  %13170 = load i64, i64* %RAX.i685
  %13171 = add i64 %13170, 12
  %13172 = load i64, i64* %PC.i684
  %13173 = add i64 %13172, 3
  store i64 %13173, i64* %PC.i684
  %13174 = inttoptr i64 %13171 to i32*
  %13175 = load i32, i32* %13174
  %13176 = zext i32 %13175 to i64
  store i64 %13176, i64* %RDX.i686, align 8
  store %struct.Memory* %loadMem_40bb9a, %struct.Memory** %MEMORY
  %loadMem_40bb9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13178 = getelementptr inbounds %struct.GPR, %struct.GPR* %13177, i32 0, i32 33
  %13179 = getelementptr inbounds %struct.Reg, %struct.Reg* %13178, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %13179 to i64*
  %13180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13181 = getelementptr inbounds %struct.GPR, %struct.GPR* %13180, i32 0, i32 7
  %13182 = getelementptr inbounds %struct.Reg, %struct.Reg* %13181, i32 0, i32 0
  %RDX.i683 = bitcast %union.anon* %13182 to i64*
  %13183 = load i64, i64* %RDX.i683
  %13184 = load i64, i64* %PC.i682
  %13185 = add i64 %13184, 3
  store i64 %13185, i64* %PC.i682
  %13186 = trunc i64 %13183 to i32
  %13187 = add i32 1, %13186
  %13188 = zext i32 %13187 to i64
  store i64 %13188, i64* %RDX.i683, align 8
  %13189 = icmp ult i32 %13187, %13186
  %13190 = icmp ult i32 %13187, 1
  %13191 = or i1 %13189, %13190
  %13192 = zext i1 %13191 to i8
  %13193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13192, i8* %13193, align 1
  %13194 = and i32 %13187, 255
  %13195 = call i32 @llvm.ctpop.i32(i32 %13194)
  %13196 = trunc i32 %13195 to i8
  %13197 = and i8 %13196, 1
  %13198 = xor i8 %13197, 1
  %13199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13198, i8* %13199, align 1
  %13200 = xor i64 1, %13183
  %13201 = trunc i64 %13200 to i32
  %13202 = xor i32 %13201, %13187
  %13203 = lshr i32 %13202, 4
  %13204 = trunc i32 %13203 to i8
  %13205 = and i8 %13204, 1
  %13206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13205, i8* %13206, align 1
  %13207 = icmp eq i32 %13187, 0
  %13208 = zext i1 %13207 to i8
  %13209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13208, i8* %13209, align 1
  %13210 = lshr i32 %13187, 31
  %13211 = trunc i32 %13210 to i8
  %13212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13211, i8* %13212, align 1
  %13213 = lshr i32 %13186, 31
  %13214 = xor i32 %13210, %13213
  %13215 = add i32 %13214, %13210
  %13216 = icmp eq i32 %13215, 2
  %13217 = zext i1 %13216 to i8
  %13218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13217, i8* %13218, align 1
  store %struct.Memory* %loadMem_40bb9d, %struct.Memory** %MEMORY
  %loadMem_40bba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13220 = getelementptr inbounds %struct.GPR, %struct.GPR* %13219, i32 0, i32 33
  %13221 = getelementptr inbounds %struct.Reg, %struct.Reg* %13220, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %13221 to i64*
  %13222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13223 = getelementptr inbounds %struct.GPR, %struct.GPR* %13222, i32 0, i32 7
  %13224 = getelementptr inbounds %struct.Reg, %struct.Reg* %13223, i32 0, i32 0
  %EDX.i680 = bitcast %union.anon* %13224 to i32*
  %13225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13226 = getelementptr inbounds %struct.GPR, %struct.GPR* %13225, i32 0, i32 1
  %13227 = getelementptr inbounds %struct.Reg, %struct.Reg* %13226, i32 0, i32 0
  %RAX.i681 = bitcast %union.anon* %13227 to i64*
  %13228 = load i64, i64* %RAX.i681
  %13229 = add i64 %13228, 12
  %13230 = load i32, i32* %EDX.i680
  %13231 = zext i32 %13230 to i64
  %13232 = load i64, i64* %PC.i679
  %13233 = add i64 %13232, 3
  store i64 %13233, i64* %PC.i679
  %13234 = inttoptr i64 %13229 to i32*
  store i32 %13230, i32* %13234
  store %struct.Memory* %loadMem_40bba0, %struct.Memory** %MEMORY
  %loadMem_40bba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13236 = getelementptr inbounds %struct.GPR, %struct.GPR* %13235, i32 0, i32 33
  %13237 = getelementptr inbounds %struct.Reg, %struct.Reg* %13236, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %13237 to i64*
  %13238 = load i64, i64* %PC.i678
  %13239 = add i64 %13238, 5
  %13240 = load i64, i64* %PC.i678
  %13241 = add i64 %13240, 5
  store i64 %13241, i64* %PC.i678
  %13242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13239, i64* %13242, align 8
  store %struct.Memory* %loadMem_40bba3, %struct.Memory** %MEMORY
  br label %block_.L_40bba8

block_.L_40bba8:                                  ; preds = %block_.L_40bb82, %block_40bb08, %block_40bacf, %block_40ba96, %block_40ba6f
  %loadMem_40bba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13244 = getelementptr inbounds %struct.GPR, %struct.GPR* %13243, i32 0, i32 33
  %13245 = getelementptr inbounds %struct.Reg, %struct.Reg* %13244, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %13245 to i64*
  %13246 = load i64, i64* %PC.i677
  %13247 = add i64 %13246, 458
  %13248 = load i64, i64* %PC.i677
  %13249 = add i64 %13248, 5
  store i64 %13249, i64* %PC.i677
  %13250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13247, i64* %13250, align 8
  store %struct.Memory* %loadMem_40bba8, %struct.Memory** %MEMORY
  br label %block_.L_40bd72

block_.L_40bbad:                                  ; preds = %block_.L_40ba55
  %loadMem_40bbad = load %struct.Memory*, %struct.Memory** %MEMORY
  %13251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13252 = getelementptr inbounds %struct.GPR, %struct.GPR* %13251, i32 0, i32 33
  %13253 = getelementptr inbounds %struct.Reg, %struct.Reg* %13252, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %13253 to i64*
  %13254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13255 = getelementptr inbounds %struct.GPR, %struct.GPR* %13254, i32 0, i32 1
  %13256 = getelementptr inbounds %struct.Reg, %struct.Reg* %13255, i32 0, i32 0
  %RAX.i675 = bitcast %union.anon* %13256 to i64*
  %13257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13258 = getelementptr inbounds %struct.GPR, %struct.GPR* %13257, i32 0, i32 15
  %13259 = getelementptr inbounds %struct.Reg, %struct.Reg* %13258, i32 0, i32 0
  %RBP.i676 = bitcast %union.anon* %13259 to i64*
  %13260 = load i64, i64* %RBP.i676
  %13261 = sub i64 %13260, 4
  %13262 = load i64, i64* %PC.i674
  %13263 = add i64 %13262, 3
  store i64 %13263, i64* %PC.i674
  %13264 = inttoptr i64 %13261 to i32*
  %13265 = load i32, i32* %13264
  %13266 = zext i32 %13265 to i64
  store i64 %13266, i64* %RAX.i675, align 8
  store %struct.Memory* %loadMem_40bbad, %struct.Memory** %MEMORY
  %loadMem_40bbb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13268 = getelementptr inbounds %struct.GPR, %struct.GPR* %13267, i32 0, i32 33
  %13269 = getelementptr inbounds %struct.Reg, %struct.Reg* %13268, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %13269 to i64*
  %13270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13271 = getelementptr inbounds %struct.GPR, %struct.GPR* %13270, i32 0, i32 1
  %13272 = getelementptr inbounds %struct.Reg, %struct.Reg* %13271, i32 0, i32 0
  %RAX.i673 = bitcast %union.anon* %13272 to i64*
  %13273 = load i64, i64* %RAX.i673
  %13274 = load i64, i64* %PC.i672
  %13275 = add i64 %13274, 3
  store i64 %13275, i64* %PC.i672
  %13276 = trunc i64 %13273 to i32
  %13277 = sub i32 %13276, 20
  %13278 = zext i32 %13277 to i64
  store i64 %13278, i64* %RAX.i673, align 8
  %13279 = icmp ult i32 %13276, 20
  %13280 = zext i1 %13279 to i8
  %13281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13280, i8* %13281, align 1
  %13282 = and i32 %13277, 255
  %13283 = call i32 @llvm.ctpop.i32(i32 %13282)
  %13284 = trunc i32 %13283 to i8
  %13285 = and i8 %13284, 1
  %13286 = xor i8 %13285, 1
  %13287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13286, i8* %13287, align 1
  %13288 = xor i64 20, %13273
  %13289 = trunc i64 %13288 to i32
  %13290 = xor i32 %13289, %13277
  %13291 = lshr i32 %13290, 4
  %13292 = trunc i32 %13291 to i8
  %13293 = and i8 %13292, 1
  %13294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13293, i8* %13294, align 1
  %13295 = icmp eq i32 %13277, 0
  %13296 = zext i1 %13295 to i8
  %13297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13296, i8* %13297, align 1
  %13298 = lshr i32 %13277, 31
  %13299 = trunc i32 %13298 to i8
  %13300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13299, i8* %13300, align 1
  %13301 = lshr i32 %13276, 31
  %13302 = xor i32 %13298, %13301
  %13303 = add i32 %13302, %13301
  %13304 = icmp eq i32 %13303, 2
  %13305 = zext i1 %13304 to i8
  %13306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13305, i8* %13306, align 1
  store %struct.Memory* %loadMem_40bbb0, %struct.Memory** %MEMORY
  %loadMem_40bbb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13308 = getelementptr inbounds %struct.GPR, %struct.GPR* %13307, i32 0, i32 33
  %13309 = getelementptr inbounds %struct.Reg, %struct.Reg* %13308, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %13309 to i64*
  %13310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13311 = getelementptr inbounds %struct.GPR, %struct.GPR* %13310, i32 0, i32 1
  %13312 = getelementptr inbounds %struct.Reg, %struct.Reg* %13311, i32 0, i32 0
  %EAX.i670 = bitcast %union.anon* %13312 to i32*
  %13313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13314 = getelementptr inbounds %struct.GPR, %struct.GPR* %13313, i32 0, i32 5
  %13315 = getelementptr inbounds %struct.Reg, %struct.Reg* %13314, i32 0, i32 0
  %RCX.i671 = bitcast %union.anon* %13315 to i64*
  %13316 = load i32, i32* %EAX.i670
  %13317 = zext i32 %13316 to i64
  %13318 = load i64, i64* %PC.i669
  %13319 = add i64 %13318, 3
  store i64 %13319, i64* %PC.i669
  %13320 = shl i64 %13317, 32
  %13321 = ashr exact i64 %13320, 32
  store i64 %13321, i64* %RCX.i671, align 8
  store %struct.Memory* %loadMem_40bbb3, %struct.Memory** %MEMORY
  %loadMem_40bbb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13323 = getelementptr inbounds %struct.GPR, %struct.GPR* %13322, i32 0, i32 33
  %13324 = getelementptr inbounds %struct.Reg, %struct.Reg* %13323, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %13324 to i64*
  %13325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13326 = getelementptr inbounds %struct.GPR, %struct.GPR* %13325, i32 0, i32 1
  %13327 = getelementptr inbounds %struct.Reg, %struct.Reg* %13326, i32 0, i32 0
  %RAX.i667 = bitcast %union.anon* %13327 to i64*
  %13328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13329 = getelementptr inbounds %struct.GPR, %struct.GPR* %13328, i32 0, i32 5
  %13330 = getelementptr inbounds %struct.Reg, %struct.Reg* %13329, i32 0, i32 0
  %RCX.i668 = bitcast %union.anon* %13330 to i64*
  %13331 = load i64, i64* %RCX.i668
  %13332 = add i64 %13331, 12099168
  %13333 = load i64, i64* %PC.i666
  %13334 = add i64 %13333, 8
  store i64 %13334, i64* %PC.i666
  %13335 = inttoptr i64 %13332 to i8*
  %13336 = load i8, i8* %13335
  %13337 = zext i8 %13336 to i64
  store i64 %13337, i64* %RAX.i667, align 8
  store %struct.Memory* %loadMem_40bbb6, %struct.Memory** %MEMORY
  %loadMem_40bbbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %13338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13339 = getelementptr inbounds %struct.GPR, %struct.GPR* %13338, i32 0, i32 33
  %13340 = getelementptr inbounds %struct.Reg, %struct.Reg* %13339, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %13340 to i64*
  %13341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13342 = getelementptr inbounds %struct.GPR, %struct.GPR* %13341, i32 0, i32 1
  %13343 = getelementptr inbounds %struct.Reg, %struct.Reg* %13342, i32 0, i32 0
  %EAX.i664 = bitcast %union.anon* %13343 to i32*
  %13344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13345 = getelementptr inbounds %struct.GPR, %struct.GPR* %13344, i32 0, i32 15
  %13346 = getelementptr inbounds %struct.Reg, %struct.Reg* %13345, i32 0, i32 0
  %RBP.i665 = bitcast %union.anon* %13346 to i64*
  %13347 = load i32, i32* %EAX.i664
  %13348 = zext i32 %13347 to i64
  %13349 = load i64, i64* %RBP.i665
  %13350 = sub i64 %13349, 24
  %13351 = load i64, i64* %PC.i663
  %13352 = add i64 %13351, 3
  store i64 %13352, i64* %PC.i663
  %13353 = inttoptr i64 %13350 to i32*
  %13354 = load i32, i32* %13353
  %13355 = sub i32 %13347, %13354
  %13356 = icmp ult i32 %13347, %13354
  %13357 = zext i1 %13356 to i8
  %13358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13357, i8* %13358, align 1
  %13359 = and i32 %13355, 255
  %13360 = call i32 @llvm.ctpop.i32(i32 %13359)
  %13361 = trunc i32 %13360 to i8
  %13362 = and i8 %13361, 1
  %13363 = xor i8 %13362, 1
  %13364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13363, i8* %13364, align 1
  %13365 = xor i32 %13354, %13347
  %13366 = xor i32 %13365, %13355
  %13367 = lshr i32 %13366, 4
  %13368 = trunc i32 %13367 to i8
  %13369 = and i8 %13368, 1
  %13370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13369, i8* %13370, align 1
  %13371 = icmp eq i32 %13355, 0
  %13372 = zext i1 %13371 to i8
  %13373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13372, i8* %13373, align 1
  %13374 = lshr i32 %13355, 31
  %13375 = trunc i32 %13374 to i8
  %13376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13375, i8* %13376, align 1
  %13377 = lshr i32 %13347, 31
  %13378 = lshr i32 %13354, 31
  %13379 = xor i32 %13378, %13377
  %13380 = xor i32 %13374, %13377
  %13381 = add i32 %13380, %13379
  %13382 = icmp eq i32 %13381, 2
  %13383 = zext i1 %13382 to i8
  %13384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13383, i8* %13384, align 1
  store %struct.Memory* %loadMem_40bbbe, %struct.Memory** %MEMORY
  %loadMem_40bbc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13386 = getelementptr inbounds %struct.GPR, %struct.GPR* %13385, i32 0, i32 33
  %13387 = getelementptr inbounds %struct.Reg, %struct.Reg* %13386, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %13387 to i64*
  %13388 = load i64, i64* %PC.i662
  %13389 = add i64 %13388, 428
  %13390 = load i64, i64* %PC.i662
  %13391 = add i64 %13390, 6
  %13392 = load i64, i64* %PC.i662
  %13393 = add i64 %13392, 6
  store i64 %13393, i64* %PC.i662
  %13394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13395 = load i8, i8* %13394, align 1
  %13396 = icmp eq i8 %13395, 0
  %13397 = zext i1 %13396 to i8
  store i8 %13397, i8* %BRANCH_TAKEN, align 1
  %13398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13399 = select i1 %13396, i64 %13389, i64 %13391
  store i64 %13399, i64* %13398, align 8
  store %struct.Memory* %loadMem_40bbc1, %struct.Memory** %MEMORY
  %loadBr_40bbc1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bbc1 = icmp eq i8 %loadBr_40bbc1, 1
  br i1 %cmpBr_40bbc1, label %block_.L_40bd6d, label %block_40bbc7

block_40bbc7:                                     ; preds = %block_.L_40bbad
  %loadMem_40bbc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13401 = getelementptr inbounds %struct.GPR, %struct.GPR* %13400, i32 0, i32 33
  %13402 = getelementptr inbounds %struct.Reg, %struct.Reg* %13401, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %13402 to i64*
  %13403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13404 = getelementptr inbounds %struct.GPR, %struct.GPR* %13403, i32 0, i32 1
  %13405 = getelementptr inbounds %struct.Reg, %struct.Reg* %13404, i32 0, i32 0
  %RAX.i661 = bitcast %union.anon* %13405 to i64*
  %13406 = load i64, i64* %PC.i660
  %13407 = add i64 %13406, 10
  store i64 %13407, i64* %PC.i660
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i661, align 8
  store %struct.Memory* %loadMem_40bbc7, %struct.Memory** %MEMORY
  %loadMem_40bbd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13409 = getelementptr inbounds %struct.GPR, %struct.GPR* %13408, i32 0, i32 33
  %13410 = getelementptr inbounds %struct.Reg, %struct.Reg* %13409, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %13410 to i64*
  %13411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13412 = getelementptr inbounds %struct.GPR, %struct.GPR* %13411, i32 0, i32 5
  %13413 = getelementptr inbounds %struct.Reg, %struct.Reg* %13412, i32 0, i32 0
  %RCX.i658 = bitcast %union.anon* %13413 to i64*
  %13414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13415 = getelementptr inbounds %struct.GPR, %struct.GPR* %13414, i32 0, i32 15
  %13416 = getelementptr inbounds %struct.Reg, %struct.Reg* %13415, i32 0, i32 0
  %RBP.i659 = bitcast %union.anon* %13416 to i64*
  %13417 = load i64, i64* %RBP.i659
  %13418 = sub i64 %13417, 4
  %13419 = load i64, i64* %PC.i657
  %13420 = add i64 %13419, 3
  store i64 %13420, i64* %PC.i657
  %13421 = inttoptr i64 %13418 to i32*
  %13422 = load i32, i32* %13421
  %13423 = zext i32 %13422 to i64
  store i64 %13423, i64* %RCX.i658, align 8
  store %struct.Memory* %loadMem_40bbd1, %struct.Memory** %MEMORY
  %loadMem_40bbd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13425 = getelementptr inbounds %struct.GPR, %struct.GPR* %13424, i32 0, i32 33
  %13426 = getelementptr inbounds %struct.Reg, %struct.Reg* %13425, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %13426 to i64*
  %13427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13428 = getelementptr inbounds %struct.GPR, %struct.GPR* %13427, i32 0, i32 5
  %13429 = getelementptr inbounds %struct.Reg, %struct.Reg* %13428, i32 0, i32 0
  %RCX.i656 = bitcast %union.anon* %13429 to i64*
  %13430 = load i64, i64* %RCX.i656
  %13431 = load i64, i64* %PC.i655
  %13432 = add i64 %13431, 3
  store i64 %13432, i64* %PC.i655
  %13433 = trunc i64 %13430 to i32
  %13434 = sub i32 %13433, 20
  %13435 = zext i32 %13434 to i64
  store i64 %13435, i64* %RCX.i656, align 8
  %13436 = icmp ult i32 %13433, 20
  %13437 = zext i1 %13436 to i8
  %13438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13437, i8* %13438, align 1
  %13439 = and i32 %13434, 255
  %13440 = call i32 @llvm.ctpop.i32(i32 %13439)
  %13441 = trunc i32 %13440 to i8
  %13442 = and i8 %13441, 1
  %13443 = xor i8 %13442, 1
  %13444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13443, i8* %13444, align 1
  %13445 = xor i64 20, %13430
  %13446 = trunc i64 %13445 to i32
  %13447 = xor i32 %13446, %13434
  %13448 = lshr i32 %13447, 4
  %13449 = trunc i32 %13448 to i8
  %13450 = and i8 %13449, 1
  %13451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13450, i8* %13451, align 1
  %13452 = icmp eq i32 %13434, 0
  %13453 = zext i1 %13452 to i8
  %13454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13453, i8* %13454, align 1
  %13455 = lshr i32 %13434, 31
  %13456 = trunc i32 %13455 to i8
  %13457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13456, i8* %13457, align 1
  %13458 = lshr i32 %13433, 31
  %13459 = xor i32 %13455, %13458
  %13460 = add i32 %13459, %13458
  %13461 = icmp eq i32 %13460, 2
  %13462 = zext i1 %13461 to i8
  %13463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13462, i8* %13463, align 1
  store %struct.Memory* %loadMem_40bbd4, %struct.Memory** %MEMORY
  %loadMem_40bbd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13465 = getelementptr inbounds %struct.GPR, %struct.GPR* %13464, i32 0, i32 33
  %13466 = getelementptr inbounds %struct.Reg, %struct.Reg* %13465, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %13466 to i64*
  %13467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13468 = getelementptr inbounds %struct.GPR, %struct.GPR* %13467, i32 0, i32 5
  %13469 = getelementptr inbounds %struct.Reg, %struct.Reg* %13468, i32 0, i32 0
  %ECX.i653 = bitcast %union.anon* %13469 to i32*
  %13470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13471 = getelementptr inbounds %struct.GPR, %struct.GPR* %13470, i32 0, i32 7
  %13472 = getelementptr inbounds %struct.Reg, %struct.Reg* %13471, i32 0, i32 0
  %RDX.i654 = bitcast %union.anon* %13472 to i64*
  %13473 = load i32, i32* %ECX.i653
  %13474 = zext i32 %13473 to i64
  %13475 = load i64, i64* %PC.i652
  %13476 = add i64 %13475, 3
  store i64 %13476, i64* %PC.i652
  %13477 = shl i64 %13474, 32
  %13478 = ashr exact i64 %13477, 32
  store i64 %13478, i64* %RDX.i654, align 8
  store %struct.Memory* %loadMem_40bbd7, %struct.Memory** %MEMORY
  %loadMem_40bbda = load %struct.Memory*, %struct.Memory** %MEMORY
  %13479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13480 = getelementptr inbounds %struct.GPR, %struct.GPR* %13479, i32 0, i32 33
  %13481 = getelementptr inbounds %struct.Reg, %struct.Reg* %13480, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %13481 to i64*
  %13482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13483 = getelementptr inbounds %struct.GPR, %struct.GPR* %13482, i32 0, i32 7
  %13484 = getelementptr inbounds %struct.Reg, %struct.Reg* %13483, i32 0, i32 0
  %RDX.i651 = bitcast %union.anon* %13484 to i64*
  %13485 = load i64, i64* %RDX.i651
  %13486 = mul i64 %13485, 4
  %13487 = add i64 %13486, 11187184
  %13488 = load i64, i64* %PC.i650
  %13489 = add i64 %13488, 8
  store i64 %13489, i64* %PC.i650
  %13490 = inttoptr i64 %13487 to i32*
  %13491 = load i32, i32* %13490
  %13492 = sext i32 %13491 to i64
  store i64 %13492, i64* %RDX.i651, align 8
  store %struct.Memory* %loadMem_40bbda, %struct.Memory** %MEMORY
  %loadMem_40bbe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13494 = getelementptr inbounds %struct.GPR, %struct.GPR* %13493, i32 0, i32 33
  %13495 = getelementptr inbounds %struct.Reg, %struct.Reg* %13494, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %13495 to i64*
  %13496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13497 = getelementptr inbounds %struct.GPR, %struct.GPR* %13496, i32 0, i32 7
  %13498 = getelementptr inbounds %struct.Reg, %struct.Reg* %13497, i32 0, i32 0
  %RDX.i649 = bitcast %union.anon* %13498 to i64*
  %13499 = load i64, i64* %RDX.i649
  %13500 = load i64, i64* %PC.i648
  %13501 = add i64 %13500, 7
  store i64 %13501, i64* %PC.i648
  %13502 = sext i64 %13499 to i128
  %13503 = and i128 %13502, -18446744073709551616
  %13504 = zext i64 %13499 to i128
  %13505 = or i128 %13503, %13504
  %13506 = mul i128 744, %13505
  %13507 = trunc i128 %13506 to i64
  store i64 %13507, i64* %RDX.i649, align 8
  %13508 = sext i64 %13507 to i128
  %13509 = icmp ne i128 %13508, %13506
  %13510 = zext i1 %13509 to i8
  %13511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13510, i8* %13511, align 1
  %13512 = trunc i128 %13506 to i32
  %13513 = and i32 %13512, 255
  %13514 = call i32 @llvm.ctpop.i32(i32 %13513)
  %13515 = trunc i32 %13514 to i8
  %13516 = and i8 %13515, 1
  %13517 = xor i8 %13516, 1
  %13518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13517, i8* %13518, align 1
  %13519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13519, align 1
  %13520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13520, align 1
  %13521 = lshr i64 %13507, 63
  %13522 = trunc i64 %13521 to i8
  %13523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13522, i8* %13523, align 1
  %13524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13510, i8* %13524, align 1
  store %struct.Memory* %loadMem_40bbe2, %struct.Memory** %MEMORY
  %loadMem_40bbe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13526 = getelementptr inbounds %struct.GPR, %struct.GPR* %13525, i32 0, i32 33
  %13527 = getelementptr inbounds %struct.Reg, %struct.Reg* %13526, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %13527 to i64*
  %13528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13529 = getelementptr inbounds %struct.GPR, %struct.GPR* %13528, i32 0, i32 1
  %13530 = getelementptr inbounds %struct.Reg, %struct.Reg* %13529, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %13530 to i64*
  %13531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13532 = getelementptr inbounds %struct.GPR, %struct.GPR* %13531, i32 0, i32 7
  %13533 = getelementptr inbounds %struct.Reg, %struct.Reg* %13532, i32 0, i32 0
  %RDX.i647 = bitcast %union.anon* %13533 to i64*
  %13534 = load i64, i64* %RAX.i646
  %13535 = load i64, i64* %RDX.i647
  %13536 = load i64, i64* %PC.i645
  %13537 = add i64 %13536, 3
  store i64 %13537, i64* %PC.i645
  %13538 = add i64 %13535, %13534
  store i64 %13538, i64* %RAX.i646, align 8
  %13539 = icmp ult i64 %13538, %13534
  %13540 = icmp ult i64 %13538, %13535
  %13541 = or i1 %13539, %13540
  %13542 = zext i1 %13541 to i8
  %13543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13542, i8* %13543, align 1
  %13544 = trunc i64 %13538 to i32
  %13545 = and i32 %13544, 255
  %13546 = call i32 @llvm.ctpop.i32(i32 %13545)
  %13547 = trunc i32 %13546 to i8
  %13548 = and i8 %13547, 1
  %13549 = xor i8 %13548, 1
  %13550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13549, i8* %13550, align 1
  %13551 = xor i64 %13535, %13534
  %13552 = xor i64 %13551, %13538
  %13553 = lshr i64 %13552, 4
  %13554 = trunc i64 %13553 to i8
  %13555 = and i8 %13554, 1
  %13556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13555, i8* %13556, align 1
  %13557 = icmp eq i64 %13538, 0
  %13558 = zext i1 %13557 to i8
  %13559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13558, i8* %13559, align 1
  %13560 = lshr i64 %13538, 63
  %13561 = trunc i64 %13560 to i8
  %13562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13561, i8* %13562, align 1
  %13563 = lshr i64 %13534, 63
  %13564 = lshr i64 %13535, 63
  %13565 = xor i64 %13560, %13563
  %13566 = xor i64 %13560, %13564
  %13567 = add i64 %13565, %13566
  %13568 = icmp eq i64 %13567, 2
  %13569 = zext i1 %13568 to i8
  %13570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13569, i8* %13570, align 1
  store %struct.Memory* %loadMem_40bbe9, %struct.Memory** %MEMORY
  %loadMem_40bbec = load %struct.Memory*, %struct.Memory** %MEMORY
  %13571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13572 = getelementptr inbounds %struct.GPR, %struct.GPR* %13571, i32 0, i32 33
  %13573 = getelementptr inbounds %struct.Reg, %struct.Reg* %13572, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %13573 to i64*
  %13574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13575 = getelementptr inbounds %struct.GPR, %struct.GPR* %13574, i32 0, i32 1
  %13576 = getelementptr inbounds %struct.Reg, %struct.Reg* %13575, i32 0, i32 0
  %RAX.i643 = bitcast %union.anon* %13576 to i64*
  %13577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13578 = getelementptr inbounds %struct.GPR, %struct.GPR* %13577, i32 0, i32 5
  %13579 = getelementptr inbounds %struct.Reg, %struct.Reg* %13578, i32 0, i32 0
  %RCX.i644 = bitcast %union.anon* %13579 to i64*
  %13580 = load i64, i64* %RAX.i643
  %13581 = add i64 %13580, 740
  %13582 = load i64, i64* %PC.i642
  %13583 = add i64 %13582, 6
  store i64 %13583, i64* %PC.i642
  %13584 = inttoptr i64 %13581 to i32*
  %13585 = load i32, i32* %13584
  %13586 = zext i32 %13585 to i64
  store i64 %13586, i64* %RCX.i644, align 8
  store %struct.Memory* %loadMem_40bbec, %struct.Memory** %MEMORY
  %loadMem_40bbf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13588 = getelementptr inbounds %struct.GPR, %struct.GPR* %13587, i32 0, i32 33
  %13589 = getelementptr inbounds %struct.Reg, %struct.Reg* %13588, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %13589 to i64*
  %13590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13591 = getelementptr inbounds %struct.GPR, %struct.GPR* %13590, i32 0, i32 5
  %13592 = getelementptr inbounds %struct.Reg, %struct.Reg* %13591, i32 0, i32 0
  %ECX.i641 = bitcast %union.anon* %13592 to i32*
  %13593 = load i32, i32* %ECX.i641
  %13594 = zext i32 %13593 to i64
  %13595 = load i64, i64* %PC.i640
  %13596 = add i64 %13595, 7
  store i64 %13596, i64* %PC.i640
  %13597 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %13598 = sub i32 %13593, %13597
  %13599 = icmp ult i32 %13593, %13597
  %13600 = zext i1 %13599 to i8
  %13601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13600, i8* %13601, align 1
  %13602 = and i32 %13598, 255
  %13603 = call i32 @llvm.ctpop.i32(i32 %13602)
  %13604 = trunc i32 %13603 to i8
  %13605 = and i8 %13604, 1
  %13606 = xor i8 %13605, 1
  %13607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13606, i8* %13607, align 1
  %13608 = xor i32 %13597, %13593
  %13609 = xor i32 %13608, %13598
  %13610 = lshr i32 %13609, 4
  %13611 = trunc i32 %13610 to i8
  %13612 = and i8 %13611, 1
  %13613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13612, i8* %13613, align 1
  %13614 = icmp eq i32 %13598, 0
  %13615 = zext i1 %13614 to i8
  %13616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13615, i8* %13616, align 1
  %13617 = lshr i32 %13598, 31
  %13618 = trunc i32 %13617 to i8
  %13619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13618, i8* %13619, align 1
  %13620 = lshr i32 %13593, 31
  %13621 = lshr i32 %13597, 31
  %13622 = xor i32 %13621, %13620
  %13623 = xor i32 %13617, %13620
  %13624 = add i32 %13623, %13622
  %13625 = icmp eq i32 %13624, 2
  %13626 = zext i1 %13625 to i8
  %13627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13626, i8* %13627, align 1
  store %struct.Memory* %loadMem_40bbf2, %struct.Memory** %MEMORY
  %loadMem_40bbf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13629 = getelementptr inbounds %struct.GPR, %struct.GPR* %13628, i32 0, i32 33
  %13630 = getelementptr inbounds %struct.Reg, %struct.Reg* %13629, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %13630 to i64*
  %13631 = load i64, i64* %PC.i639
  %13632 = add i64 %13631, 372
  %13633 = load i64, i64* %PC.i639
  %13634 = add i64 %13633, 6
  %13635 = load i64, i64* %PC.i639
  %13636 = add i64 %13635, 6
  store i64 %13636, i64* %PC.i639
  %13637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13638 = load i8, i8* %13637, align 1
  store i8 %13638, i8* %BRANCH_TAKEN, align 1
  %13639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13640 = icmp ne i8 %13638, 0
  %13641 = select i1 %13640, i64 %13632, i64 %13634
  store i64 %13641, i64* %13639, align 8
  store %struct.Memory* %loadMem_40bbf9, %struct.Memory** %MEMORY
  %loadBr_40bbf9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bbf9 = icmp eq i8 %loadBr_40bbf9, 1
  br i1 %cmpBr_40bbf9, label %block_.L_40bd6d, label %block_40bbff

block_40bbff:                                     ; preds = %block_40bbc7
  %loadMem_40bbff = load %struct.Memory*, %struct.Memory** %MEMORY
  %13642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13643 = getelementptr inbounds %struct.GPR, %struct.GPR* %13642, i32 0, i32 33
  %13644 = getelementptr inbounds %struct.Reg, %struct.Reg* %13643, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %13644 to i64*
  %13645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13646 = getelementptr inbounds %struct.GPR, %struct.GPR* %13645, i32 0, i32 1
  %13647 = getelementptr inbounds %struct.Reg, %struct.Reg* %13646, i32 0, i32 0
  %RAX.i638 = bitcast %union.anon* %13647 to i64*
  %13648 = load i64, i64* %PC.i637
  %13649 = add i64 %13648, 10
  store i64 %13649, i64* %PC.i637
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i638, align 8
  store %struct.Memory* %loadMem_40bbff, %struct.Memory** %MEMORY
  %loadMem_40bc09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13651 = getelementptr inbounds %struct.GPR, %struct.GPR* %13650, i32 0, i32 33
  %13652 = getelementptr inbounds %struct.Reg, %struct.Reg* %13651, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %13652 to i64*
  %13653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13654 = getelementptr inbounds %struct.GPR, %struct.GPR* %13653, i32 0, i32 5
  %13655 = getelementptr inbounds %struct.Reg, %struct.Reg* %13654, i32 0, i32 0
  %RCX.i635 = bitcast %union.anon* %13655 to i64*
  %13656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13657 = getelementptr inbounds %struct.GPR, %struct.GPR* %13656, i32 0, i32 15
  %13658 = getelementptr inbounds %struct.Reg, %struct.Reg* %13657, i32 0, i32 0
  %RBP.i636 = bitcast %union.anon* %13658 to i64*
  %13659 = load i64, i64* %RBP.i636
  %13660 = sub i64 %13659, 4
  %13661 = load i64, i64* %PC.i634
  %13662 = add i64 %13661, 3
  store i64 %13662, i64* %PC.i634
  %13663 = inttoptr i64 %13660 to i32*
  %13664 = load i32, i32* %13663
  %13665 = zext i32 %13664 to i64
  store i64 %13665, i64* %RCX.i635, align 8
  store %struct.Memory* %loadMem_40bc09, %struct.Memory** %MEMORY
  %loadMem_40bc0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13667 = getelementptr inbounds %struct.GPR, %struct.GPR* %13666, i32 0, i32 33
  %13668 = getelementptr inbounds %struct.Reg, %struct.Reg* %13667, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %13668 to i64*
  %13669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13670 = getelementptr inbounds %struct.GPR, %struct.GPR* %13669, i32 0, i32 5
  %13671 = getelementptr inbounds %struct.Reg, %struct.Reg* %13670, i32 0, i32 0
  %RCX.i633 = bitcast %union.anon* %13671 to i64*
  %13672 = load i64, i64* %RCX.i633
  %13673 = load i64, i64* %PC.i632
  %13674 = add i64 %13673, 3
  store i64 %13674, i64* %PC.i632
  %13675 = trunc i64 %13672 to i32
  %13676 = sub i32 %13675, 20
  %13677 = zext i32 %13676 to i64
  store i64 %13677, i64* %RCX.i633, align 8
  %13678 = icmp ult i32 %13675, 20
  %13679 = zext i1 %13678 to i8
  %13680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13679, i8* %13680, align 1
  %13681 = and i32 %13676, 255
  %13682 = call i32 @llvm.ctpop.i32(i32 %13681)
  %13683 = trunc i32 %13682 to i8
  %13684 = and i8 %13683, 1
  %13685 = xor i8 %13684, 1
  %13686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13685, i8* %13686, align 1
  %13687 = xor i64 20, %13672
  %13688 = trunc i64 %13687 to i32
  %13689 = xor i32 %13688, %13676
  %13690 = lshr i32 %13689, 4
  %13691 = trunc i32 %13690 to i8
  %13692 = and i8 %13691, 1
  %13693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13692, i8* %13693, align 1
  %13694 = icmp eq i32 %13676, 0
  %13695 = zext i1 %13694 to i8
  %13696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13695, i8* %13696, align 1
  %13697 = lshr i32 %13676, 31
  %13698 = trunc i32 %13697 to i8
  %13699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13698, i8* %13699, align 1
  %13700 = lshr i32 %13675, 31
  %13701 = xor i32 %13697, %13700
  %13702 = add i32 %13701, %13700
  %13703 = icmp eq i32 %13702, 2
  %13704 = zext i1 %13703 to i8
  %13705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13704, i8* %13705, align 1
  store %struct.Memory* %loadMem_40bc0c, %struct.Memory** %MEMORY
  %loadMem_40bc0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13707 = getelementptr inbounds %struct.GPR, %struct.GPR* %13706, i32 0, i32 33
  %13708 = getelementptr inbounds %struct.Reg, %struct.Reg* %13707, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %13708 to i64*
  %13709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13710 = getelementptr inbounds %struct.GPR, %struct.GPR* %13709, i32 0, i32 5
  %13711 = getelementptr inbounds %struct.Reg, %struct.Reg* %13710, i32 0, i32 0
  %ECX.i630 = bitcast %union.anon* %13711 to i32*
  %13712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13713 = getelementptr inbounds %struct.GPR, %struct.GPR* %13712, i32 0, i32 7
  %13714 = getelementptr inbounds %struct.Reg, %struct.Reg* %13713, i32 0, i32 0
  %RDX.i631 = bitcast %union.anon* %13714 to i64*
  %13715 = load i32, i32* %ECX.i630
  %13716 = zext i32 %13715 to i64
  %13717 = load i64, i64* %PC.i629
  %13718 = add i64 %13717, 3
  store i64 %13718, i64* %PC.i629
  %13719 = shl i64 %13716, 32
  %13720 = ashr exact i64 %13719, 32
  store i64 %13720, i64* %RDX.i631, align 8
  store %struct.Memory* %loadMem_40bc0f, %struct.Memory** %MEMORY
  %loadMem_40bc12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13722 = getelementptr inbounds %struct.GPR, %struct.GPR* %13721, i32 0, i32 33
  %13723 = getelementptr inbounds %struct.Reg, %struct.Reg* %13722, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %13723 to i64*
  %13724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13725 = getelementptr inbounds %struct.GPR, %struct.GPR* %13724, i32 0, i32 5
  %13726 = getelementptr inbounds %struct.Reg, %struct.Reg* %13725, i32 0, i32 0
  %RCX.i627 = bitcast %union.anon* %13726 to i64*
  %13727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13728 = getelementptr inbounds %struct.GPR, %struct.GPR* %13727, i32 0, i32 7
  %13729 = getelementptr inbounds %struct.Reg, %struct.Reg* %13728, i32 0, i32 0
  %RDX.i628 = bitcast %union.anon* %13729 to i64*
  %13730 = load i64, i64* %RDX.i628
  %13731 = mul i64 %13730, 4
  %13732 = add i64 %13731, 11187184
  %13733 = load i64, i64* %PC.i626
  %13734 = add i64 %13733, 7
  store i64 %13734, i64* %PC.i626
  %13735 = inttoptr i64 %13732 to i32*
  %13736 = load i32, i32* %13735
  %13737 = zext i32 %13736 to i64
  store i64 %13737, i64* %RCX.i627, align 8
  store %struct.Memory* %loadMem_40bc12, %struct.Memory** %MEMORY
  %loadMem_40bc19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13739 = getelementptr inbounds %struct.GPR, %struct.GPR* %13738, i32 0, i32 33
  %13740 = getelementptr inbounds %struct.Reg, %struct.Reg* %13739, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %13740 to i64*
  %13741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13742 = getelementptr inbounds %struct.GPR, %struct.GPR* %13741, i32 0, i32 5
  %13743 = getelementptr inbounds %struct.Reg, %struct.Reg* %13742, i32 0, i32 0
  %ECX.i624 = bitcast %union.anon* %13743 to i32*
  %13744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13745 = getelementptr inbounds %struct.GPR, %struct.GPR* %13744, i32 0, i32 15
  %13746 = getelementptr inbounds %struct.Reg, %struct.Reg* %13745, i32 0, i32 0
  %RBP.i625 = bitcast %union.anon* %13746 to i64*
  %13747 = load i64, i64* %RBP.i625
  %13748 = sub i64 %13747, 40
  %13749 = load i32, i32* %ECX.i624
  %13750 = zext i32 %13749 to i64
  %13751 = load i64, i64* %PC.i623
  %13752 = add i64 %13751, 3
  store i64 %13752, i64* %PC.i623
  %13753 = inttoptr i64 %13748 to i32*
  store i32 %13749, i32* %13753
  store %struct.Memory* %loadMem_40bc19, %struct.Memory** %MEMORY
  %loadMem_40bc1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13755 = getelementptr inbounds %struct.GPR, %struct.GPR* %13754, i32 0, i32 33
  %13756 = getelementptr inbounds %struct.Reg, %struct.Reg* %13755, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %13756 to i64*
  %13757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13758 = getelementptr inbounds %struct.GPR, %struct.GPR* %13757, i32 0, i32 7
  %13759 = getelementptr inbounds %struct.Reg, %struct.Reg* %13758, i32 0, i32 0
  %RDX.i621 = bitcast %union.anon* %13759 to i64*
  %13760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13761 = getelementptr inbounds %struct.GPR, %struct.GPR* %13760, i32 0, i32 15
  %13762 = getelementptr inbounds %struct.Reg, %struct.Reg* %13761, i32 0, i32 0
  %RBP.i622 = bitcast %union.anon* %13762 to i64*
  %13763 = load i64, i64* %RBP.i622
  %13764 = sub i64 %13763, 8
  %13765 = load i64, i64* %PC.i620
  %13766 = add i64 %13765, 4
  store i64 %13766, i64* %PC.i620
  %13767 = inttoptr i64 %13764 to i32*
  %13768 = load i32, i32* %13767
  %13769 = sext i32 %13768 to i64
  store i64 %13769, i64* %RDX.i621, align 8
  store %struct.Memory* %loadMem_40bc1c, %struct.Memory** %MEMORY
  %loadMem_40bc20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13771 = getelementptr inbounds %struct.GPR, %struct.GPR* %13770, i32 0, i32 33
  %13772 = getelementptr inbounds %struct.Reg, %struct.Reg* %13771, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %13772 to i64*
  %13773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13774 = getelementptr inbounds %struct.GPR, %struct.GPR* %13773, i32 0, i32 7
  %13775 = getelementptr inbounds %struct.Reg, %struct.Reg* %13774, i32 0, i32 0
  %RDX.i619 = bitcast %union.anon* %13775 to i64*
  %13776 = load i64, i64* %RDX.i619
  %13777 = load i64, i64* %PC.i618
  %13778 = add i64 %13777, 7
  store i64 %13778, i64* %PC.i618
  %13779 = sext i64 %13776 to i128
  %13780 = and i128 %13779, -18446744073709551616
  %13781 = zext i64 %13776 to i128
  %13782 = or i128 %13780, %13781
  %13783 = mul i128 744, %13782
  %13784 = trunc i128 %13783 to i64
  store i64 %13784, i64* %RDX.i619, align 8
  %13785 = sext i64 %13784 to i128
  %13786 = icmp ne i128 %13785, %13783
  %13787 = zext i1 %13786 to i8
  %13788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13787, i8* %13788, align 1
  %13789 = trunc i128 %13783 to i32
  %13790 = and i32 %13789, 255
  %13791 = call i32 @llvm.ctpop.i32(i32 %13790)
  %13792 = trunc i32 %13791 to i8
  %13793 = and i8 %13792, 1
  %13794 = xor i8 %13793, 1
  %13795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13794, i8* %13795, align 1
  %13796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13796, align 1
  %13797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13797, align 1
  %13798 = lshr i64 %13784, 63
  %13799 = trunc i64 %13798 to i8
  %13800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13799, i8* %13800, align 1
  %13801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13787, i8* %13801, align 1
  store %struct.Memory* %loadMem_40bc20, %struct.Memory** %MEMORY
  %loadMem_40bc27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13803 = getelementptr inbounds %struct.GPR, %struct.GPR* %13802, i32 0, i32 33
  %13804 = getelementptr inbounds %struct.Reg, %struct.Reg* %13803, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %13804 to i64*
  %13805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13806 = getelementptr inbounds %struct.GPR, %struct.GPR* %13805, i32 0, i32 1
  %13807 = getelementptr inbounds %struct.Reg, %struct.Reg* %13806, i32 0, i32 0
  %RAX.i616 = bitcast %union.anon* %13807 to i64*
  %13808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13809 = getelementptr inbounds %struct.GPR, %struct.GPR* %13808, i32 0, i32 9
  %13810 = getelementptr inbounds %struct.Reg, %struct.Reg* %13809, i32 0, i32 0
  %RSI.i617 = bitcast %union.anon* %13810 to i64*
  %13811 = load i64, i64* %RAX.i616
  %13812 = load i64, i64* %PC.i615
  %13813 = add i64 %13812, 3
  store i64 %13813, i64* %PC.i615
  store i64 %13811, i64* %RSI.i617, align 8
  store %struct.Memory* %loadMem_40bc27, %struct.Memory** %MEMORY
  %loadMem_40bc2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13815 = getelementptr inbounds %struct.GPR, %struct.GPR* %13814, i32 0, i32 33
  %13816 = getelementptr inbounds %struct.Reg, %struct.Reg* %13815, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %13816 to i64*
  %13817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13818 = getelementptr inbounds %struct.GPR, %struct.GPR* %13817, i32 0, i32 7
  %13819 = getelementptr inbounds %struct.Reg, %struct.Reg* %13818, i32 0, i32 0
  %RDX.i613 = bitcast %union.anon* %13819 to i64*
  %13820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13821 = getelementptr inbounds %struct.GPR, %struct.GPR* %13820, i32 0, i32 9
  %13822 = getelementptr inbounds %struct.Reg, %struct.Reg* %13821, i32 0, i32 0
  %RSI.i614 = bitcast %union.anon* %13822 to i64*
  %13823 = load i64, i64* %RSI.i614
  %13824 = load i64, i64* %RDX.i613
  %13825 = load i64, i64* %PC.i612
  %13826 = add i64 %13825, 3
  store i64 %13826, i64* %PC.i612
  %13827 = add i64 %13824, %13823
  store i64 %13827, i64* %RSI.i614, align 8
  %13828 = icmp ult i64 %13827, %13823
  %13829 = icmp ult i64 %13827, %13824
  %13830 = or i1 %13828, %13829
  %13831 = zext i1 %13830 to i8
  %13832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13831, i8* %13832, align 1
  %13833 = trunc i64 %13827 to i32
  %13834 = and i32 %13833, 255
  %13835 = call i32 @llvm.ctpop.i32(i32 %13834)
  %13836 = trunc i32 %13835 to i8
  %13837 = and i8 %13836, 1
  %13838 = xor i8 %13837, 1
  %13839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13838, i8* %13839, align 1
  %13840 = xor i64 %13824, %13823
  %13841 = xor i64 %13840, %13827
  %13842 = lshr i64 %13841, 4
  %13843 = trunc i64 %13842 to i8
  %13844 = and i8 %13843, 1
  %13845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13844, i8* %13845, align 1
  %13846 = icmp eq i64 %13827, 0
  %13847 = zext i1 %13846 to i8
  %13848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13847, i8* %13848, align 1
  %13849 = lshr i64 %13827, 63
  %13850 = trunc i64 %13849 to i8
  %13851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13850, i8* %13851, align 1
  %13852 = lshr i64 %13823, 63
  %13853 = lshr i64 %13824, 63
  %13854 = xor i64 %13849, %13852
  %13855 = xor i64 %13849, %13853
  %13856 = add i64 %13854, %13855
  %13857 = icmp eq i64 %13856, 2
  %13858 = zext i1 %13857 to i8
  %13859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13858, i8* %13859, align 1
  store %struct.Memory* %loadMem_40bc2a, %struct.Memory** %MEMORY
  %loadMem_40bc2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13861 = getelementptr inbounds %struct.GPR, %struct.GPR* %13860, i32 0, i32 33
  %13862 = getelementptr inbounds %struct.Reg, %struct.Reg* %13861, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %13862 to i64*
  %13863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13864 = getelementptr inbounds %struct.GPR, %struct.GPR* %13863, i32 0, i32 9
  %13865 = getelementptr inbounds %struct.Reg, %struct.Reg* %13864, i32 0, i32 0
  %RSI.i611 = bitcast %union.anon* %13865 to i64*
  %13866 = load i64, i64* %RSI.i611
  %13867 = load i64, i64* %PC.i610
  %13868 = add i64 %13867, 4
  store i64 %13868, i64* %PC.i610
  %13869 = add i64 96, %13866
  store i64 %13869, i64* %RSI.i611, align 8
  %13870 = icmp ult i64 %13869, %13866
  %13871 = icmp ult i64 %13869, 96
  %13872 = or i1 %13870, %13871
  %13873 = zext i1 %13872 to i8
  %13874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13873, i8* %13874, align 1
  %13875 = trunc i64 %13869 to i32
  %13876 = and i32 %13875, 255
  %13877 = call i32 @llvm.ctpop.i32(i32 %13876)
  %13878 = trunc i32 %13877 to i8
  %13879 = and i8 %13878, 1
  %13880 = xor i8 %13879, 1
  %13881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13880, i8* %13881, align 1
  %13882 = xor i64 96, %13866
  %13883 = xor i64 %13882, %13869
  %13884 = lshr i64 %13883, 4
  %13885 = trunc i64 %13884 to i8
  %13886 = and i8 %13885, 1
  %13887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13886, i8* %13887, align 1
  %13888 = icmp eq i64 %13869, 0
  %13889 = zext i1 %13888 to i8
  %13890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13889, i8* %13890, align 1
  %13891 = lshr i64 %13869, 63
  %13892 = trunc i64 %13891 to i8
  %13893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13892, i8* %13893, align 1
  %13894 = lshr i64 %13866, 63
  %13895 = xor i64 %13891, %13894
  %13896 = add i64 %13895, %13891
  %13897 = icmp eq i64 %13896, 2
  %13898 = zext i1 %13897 to i8
  %13899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13898, i8* %13899, align 1
  store %struct.Memory* %loadMem_40bc2d, %struct.Memory** %MEMORY
  %loadMem_40bc31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13901 = getelementptr inbounds %struct.GPR, %struct.GPR* %13900, i32 0, i32 33
  %13902 = getelementptr inbounds %struct.Reg, %struct.Reg* %13901, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %13902 to i64*
  %13903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13904 = getelementptr inbounds %struct.GPR, %struct.GPR* %13903, i32 0, i32 7
  %13905 = getelementptr inbounds %struct.Reg, %struct.Reg* %13904, i32 0, i32 0
  %RDX.i609 = bitcast %union.anon* %13905 to i64*
  %13906 = load i64, i64* %PC.i608
  %13907 = add i64 %13906, 8
  store i64 %13907, i64* %PC.i608
  %13908 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %13908, i64* %RDX.i609, align 8
  store %struct.Memory* %loadMem_40bc31, %struct.Memory** %MEMORY
  %loadMem_40bc39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13910 = getelementptr inbounds %struct.GPR, %struct.GPR* %13909, i32 0, i32 33
  %13911 = getelementptr inbounds %struct.Reg, %struct.Reg* %13910, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %13911 to i64*
  %13912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13913 = getelementptr inbounds %struct.GPR, %struct.GPR* %13912, i32 0, i32 7
  %13914 = getelementptr inbounds %struct.Reg, %struct.Reg* %13913, i32 0, i32 0
  %RDX.i606 = bitcast %union.anon* %13914 to i64*
  %13915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13916 = getelementptr inbounds %struct.GPR, %struct.GPR* %13915, i32 0, i32 9
  %13917 = getelementptr inbounds %struct.Reg, %struct.Reg* %13916, i32 0, i32 0
  %RSI.i607 = bitcast %union.anon* %13917 to i64*
  %13918 = load i64, i64* %RDX.i606
  %13919 = load i64, i64* %RSI.i607
  %13920 = load i64, i64* %PC.i605
  %13921 = add i64 %13920, 3
  store i64 %13921, i64* %PC.i605
  %13922 = inttoptr i64 %13918 to i64*
  store i64 %13919, i64* %13922
  store %struct.Memory* %loadMem_40bc39, %struct.Memory** %MEMORY
  %loadMem_40bc3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13924 = getelementptr inbounds %struct.GPR, %struct.GPR* %13923, i32 0, i32 33
  %13925 = getelementptr inbounds %struct.Reg, %struct.Reg* %13924, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %13925 to i64*
  %13926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13927 = getelementptr inbounds %struct.GPR, %struct.GPR* %13926, i32 0, i32 7
  %13928 = getelementptr inbounds %struct.Reg, %struct.Reg* %13927, i32 0, i32 0
  %RDX.i603 = bitcast %union.anon* %13928 to i64*
  %13929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13930 = getelementptr inbounds %struct.GPR, %struct.GPR* %13929, i32 0, i32 15
  %13931 = getelementptr inbounds %struct.Reg, %struct.Reg* %13930, i32 0, i32 0
  %RBP.i604 = bitcast %union.anon* %13931 to i64*
  %13932 = load i64, i64* %RBP.i604
  %13933 = sub i64 %13932, 8
  %13934 = load i64, i64* %PC.i602
  %13935 = add i64 %13934, 4
  store i64 %13935, i64* %PC.i602
  %13936 = inttoptr i64 %13933 to i32*
  %13937 = load i32, i32* %13936
  %13938 = sext i32 %13937 to i64
  store i64 %13938, i64* %RDX.i603, align 8
  store %struct.Memory* %loadMem_40bc3c, %struct.Memory** %MEMORY
  %loadMem_40bc40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13940 = getelementptr inbounds %struct.GPR, %struct.GPR* %13939, i32 0, i32 33
  %13941 = getelementptr inbounds %struct.Reg, %struct.Reg* %13940, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %13941 to i64*
  %13942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13943 = getelementptr inbounds %struct.GPR, %struct.GPR* %13942, i32 0, i32 7
  %13944 = getelementptr inbounds %struct.Reg, %struct.Reg* %13943, i32 0, i32 0
  %RDX.i601 = bitcast %union.anon* %13944 to i64*
  %13945 = load i64, i64* %RDX.i601
  %13946 = load i64, i64* %PC.i600
  %13947 = add i64 %13946, 7
  store i64 %13947, i64* %PC.i600
  %13948 = sext i64 %13945 to i128
  %13949 = and i128 %13948, -18446744073709551616
  %13950 = zext i64 %13945 to i128
  %13951 = or i128 %13949, %13950
  %13952 = mul i128 744, %13951
  %13953 = trunc i128 %13952 to i64
  store i64 %13953, i64* %RDX.i601, align 8
  %13954 = sext i64 %13953 to i128
  %13955 = icmp ne i128 %13954, %13952
  %13956 = zext i1 %13955 to i8
  %13957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13956, i8* %13957, align 1
  %13958 = trunc i128 %13952 to i32
  %13959 = and i32 %13958, 255
  %13960 = call i32 @llvm.ctpop.i32(i32 %13959)
  %13961 = trunc i32 %13960 to i8
  %13962 = and i8 %13961, 1
  %13963 = xor i8 %13962, 1
  %13964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13963, i8* %13964, align 1
  %13965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13965, align 1
  %13966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13966, align 1
  %13967 = lshr i64 %13953, 63
  %13968 = trunc i64 %13967 to i8
  %13969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13968, i8* %13969, align 1
  %13970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13956, i8* %13970, align 1
  store %struct.Memory* %loadMem_40bc40, %struct.Memory** %MEMORY
  %loadMem_40bc47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13972 = getelementptr inbounds %struct.GPR, %struct.GPR* %13971, i32 0, i32 33
  %13973 = getelementptr inbounds %struct.Reg, %struct.Reg* %13972, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %13973 to i64*
  %13974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13975 = getelementptr inbounds %struct.GPR, %struct.GPR* %13974, i32 0, i32 1
  %13976 = getelementptr inbounds %struct.Reg, %struct.Reg* %13975, i32 0, i32 0
  %RAX.i598 = bitcast %union.anon* %13976 to i64*
  %13977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13978 = getelementptr inbounds %struct.GPR, %struct.GPR* %13977, i32 0, i32 9
  %13979 = getelementptr inbounds %struct.Reg, %struct.Reg* %13978, i32 0, i32 0
  %RSI.i599 = bitcast %union.anon* %13979 to i64*
  %13980 = load i64, i64* %RAX.i598
  %13981 = load i64, i64* %PC.i597
  %13982 = add i64 %13981, 3
  store i64 %13982, i64* %PC.i597
  store i64 %13980, i64* %RSI.i599, align 8
  store %struct.Memory* %loadMem_40bc47, %struct.Memory** %MEMORY
  %loadMem_40bc4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13984 = getelementptr inbounds %struct.GPR, %struct.GPR* %13983, i32 0, i32 33
  %13985 = getelementptr inbounds %struct.Reg, %struct.Reg* %13984, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %13985 to i64*
  %13986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13987 = getelementptr inbounds %struct.GPR, %struct.GPR* %13986, i32 0, i32 7
  %13988 = getelementptr inbounds %struct.Reg, %struct.Reg* %13987, i32 0, i32 0
  %RDX.i595 = bitcast %union.anon* %13988 to i64*
  %13989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13990 = getelementptr inbounds %struct.GPR, %struct.GPR* %13989, i32 0, i32 9
  %13991 = getelementptr inbounds %struct.Reg, %struct.Reg* %13990, i32 0, i32 0
  %RSI.i596 = bitcast %union.anon* %13991 to i64*
  %13992 = load i64, i64* %RSI.i596
  %13993 = load i64, i64* %RDX.i595
  %13994 = load i64, i64* %PC.i594
  %13995 = add i64 %13994, 3
  store i64 %13995, i64* %PC.i594
  %13996 = add i64 %13993, %13992
  store i64 %13996, i64* %RSI.i596, align 8
  %13997 = icmp ult i64 %13996, %13992
  %13998 = icmp ult i64 %13996, %13993
  %13999 = or i1 %13997, %13998
  %14000 = zext i1 %13999 to i8
  %14001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14000, i8* %14001, align 1
  %14002 = trunc i64 %13996 to i32
  %14003 = and i32 %14002, 255
  %14004 = call i32 @llvm.ctpop.i32(i32 %14003)
  %14005 = trunc i32 %14004 to i8
  %14006 = and i8 %14005, 1
  %14007 = xor i8 %14006, 1
  %14008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14007, i8* %14008, align 1
  %14009 = xor i64 %13993, %13992
  %14010 = xor i64 %14009, %13996
  %14011 = lshr i64 %14010, 4
  %14012 = trunc i64 %14011 to i8
  %14013 = and i8 %14012, 1
  %14014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14013, i8* %14014, align 1
  %14015 = icmp eq i64 %13996, 0
  %14016 = zext i1 %14015 to i8
  %14017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14016, i8* %14017, align 1
  %14018 = lshr i64 %13996, 63
  %14019 = trunc i64 %14018 to i8
  %14020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14019, i8* %14020, align 1
  %14021 = lshr i64 %13992, 63
  %14022 = lshr i64 %13993, 63
  %14023 = xor i64 %14018, %14021
  %14024 = xor i64 %14018, %14022
  %14025 = add i64 %14023, %14024
  %14026 = icmp eq i64 %14025, 2
  %14027 = zext i1 %14026 to i8
  %14028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14027, i8* %14028, align 1
  store %struct.Memory* %loadMem_40bc4a, %struct.Memory** %MEMORY
  %loadMem_40bc4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14030 = getelementptr inbounds %struct.GPR, %struct.GPR* %14029, i32 0, i32 33
  %14031 = getelementptr inbounds %struct.Reg, %struct.Reg* %14030, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %14031 to i64*
  %14032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14033 = getelementptr inbounds %struct.GPR, %struct.GPR* %14032, i32 0, i32 5
  %14034 = getelementptr inbounds %struct.Reg, %struct.Reg* %14033, i32 0, i32 0
  %RCX.i592 = bitcast %union.anon* %14034 to i64*
  %14035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14036 = getelementptr inbounds %struct.GPR, %struct.GPR* %14035, i32 0, i32 9
  %14037 = getelementptr inbounds %struct.Reg, %struct.Reg* %14036, i32 0, i32 0
  %RSI.i593 = bitcast %union.anon* %14037 to i64*
  %14038 = load i64, i64* %RSI.i593
  %14039 = add i64 %14038, 96
  %14040 = load i64, i64* %PC.i591
  %14041 = add i64 %14040, 3
  store i64 %14041, i64* %PC.i591
  %14042 = inttoptr i64 %14039 to i32*
  %14043 = load i32, i32* %14042
  %14044 = zext i32 %14043 to i64
  store i64 %14044, i64* %RCX.i592, align 8
  store %struct.Memory* %loadMem_40bc4d, %struct.Memory** %MEMORY
  %loadMem_40bc50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14046 = getelementptr inbounds %struct.GPR, %struct.GPR* %14045, i32 0, i32 33
  %14047 = getelementptr inbounds %struct.Reg, %struct.Reg* %14046, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %14047 to i64*
  %14048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14049 = getelementptr inbounds %struct.GPR, %struct.GPR* %14048, i32 0, i32 7
  %14050 = getelementptr inbounds %struct.Reg, %struct.Reg* %14049, i32 0, i32 0
  %RDX.i590 = bitcast %union.anon* %14050 to i64*
  %14051 = load i64, i64* %PC.i589
  %14052 = add i64 %14051, 8
  store i64 %14052, i64* %PC.i589
  %14053 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %14053, i64* %RDX.i590, align 8
  store %struct.Memory* %loadMem_40bc50, %struct.Memory** %MEMORY
  %loadMem_40bc58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14055 = getelementptr inbounds %struct.GPR, %struct.GPR* %14054, i32 0, i32 33
  %14056 = getelementptr inbounds %struct.Reg, %struct.Reg* %14055, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %14056 to i64*
  %14057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14058 = getelementptr inbounds %struct.GPR, %struct.GPR* %14057, i32 0, i32 7
  %14059 = getelementptr inbounds %struct.Reg, %struct.Reg* %14058, i32 0, i32 0
  %RDX.i587 = bitcast %union.anon* %14059 to i64*
  %14060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14061 = getelementptr inbounds %struct.GPR, %struct.GPR* %14060, i32 0, i32 9
  %14062 = getelementptr inbounds %struct.Reg, %struct.Reg* %14061, i32 0, i32 0
  %RSI.i588 = bitcast %union.anon* %14062 to i64*
  %14063 = load i64, i64* %RDX.i587
  %14064 = load i64, i64* %PC.i586
  %14065 = add i64 %14064, 3
  store i64 %14065, i64* %PC.i586
  store i64 %14063, i64* %RSI.i588, align 8
  store %struct.Memory* %loadMem_40bc58, %struct.Memory** %MEMORY
  %loadMem_40bc5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14067 = getelementptr inbounds %struct.GPR, %struct.GPR* %14066, i32 0, i32 33
  %14068 = getelementptr inbounds %struct.Reg, %struct.Reg* %14067, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %14068 to i64*
  %14069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14070 = getelementptr inbounds %struct.GPR, %struct.GPR* %14069, i32 0, i32 9
  %14071 = getelementptr inbounds %struct.Reg, %struct.Reg* %14070, i32 0, i32 0
  %RSI.i585 = bitcast %union.anon* %14071 to i64*
  %14072 = load i64, i64* %RSI.i585
  %14073 = load i64, i64* %PC.i584
  %14074 = add i64 %14073, 4
  store i64 %14074, i64* %PC.i584
  %14075 = add i64 16, %14072
  store i64 %14075, i64* %RSI.i585, align 8
  %14076 = icmp ult i64 %14075, %14072
  %14077 = icmp ult i64 %14075, 16
  %14078 = or i1 %14076, %14077
  %14079 = zext i1 %14078 to i8
  %14080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14079, i8* %14080, align 1
  %14081 = trunc i64 %14075 to i32
  %14082 = and i32 %14081, 255
  %14083 = call i32 @llvm.ctpop.i32(i32 %14082)
  %14084 = trunc i32 %14083 to i8
  %14085 = and i8 %14084, 1
  %14086 = xor i8 %14085, 1
  %14087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14086, i8* %14087, align 1
  %14088 = xor i64 16, %14072
  %14089 = xor i64 %14088, %14075
  %14090 = lshr i64 %14089, 4
  %14091 = trunc i64 %14090 to i8
  %14092 = and i8 %14091, 1
  %14093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14092, i8* %14093, align 1
  %14094 = icmp eq i64 %14075, 0
  %14095 = zext i1 %14094 to i8
  %14096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14095, i8* %14096, align 1
  %14097 = lshr i64 %14075, 63
  %14098 = trunc i64 %14097 to i8
  %14099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14098, i8* %14099, align 1
  %14100 = lshr i64 %14072, 63
  %14101 = xor i64 %14097, %14100
  %14102 = add i64 %14101, %14097
  %14103 = icmp eq i64 %14102, 2
  %14104 = zext i1 %14103 to i8
  %14105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14104, i8* %14105, align 1
  store %struct.Memory* %loadMem_40bc5b, %struct.Memory** %MEMORY
  %loadMem_40bc5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14107 = getelementptr inbounds %struct.GPR, %struct.GPR* %14106, i32 0, i32 33
  %14108 = getelementptr inbounds %struct.Reg, %struct.Reg* %14107, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %14108 to i64*
  %14109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14110 = getelementptr inbounds %struct.GPR, %struct.GPR* %14109, i32 0, i32 9
  %14111 = getelementptr inbounds %struct.Reg, %struct.Reg* %14110, i32 0, i32 0
  %RSI.i583 = bitcast %union.anon* %14111 to i64*
  %14112 = load i64, i64* %RSI.i583
  %14113 = load i64, i64* %PC.i582
  %14114 = add i64 %14113, 8
  store i64 %14114, i64* %PC.i582
  store i64 %14112, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40bc5f, %struct.Memory** %MEMORY
  %loadMem_40bc67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14116 = getelementptr inbounds %struct.GPR, %struct.GPR* %14115, i32 0, i32 33
  %14117 = getelementptr inbounds %struct.Reg, %struct.Reg* %14116, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %14117 to i64*
  %14118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14119 = getelementptr inbounds %struct.GPR, %struct.GPR* %14118, i32 0, i32 5
  %14120 = getelementptr inbounds %struct.Reg, %struct.Reg* %14119, i32 0, i32 0
  %ECX.i580 = bitcast %union.anon* %14120 to i32*
  %14121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14122 = getelementptr inbounds %struct.GPR, %struct.GPR* %14121, i32 0, i32 7
  %14123 = getelementptr inbounds %struct.Reg, %struct.Reg* %14122, i32 0, i32 0
  %RDX.i581 = bitcast %union.anon* %14123 to i64*
  %14124 = load i64, i64* %RDX.i581
  %14125 = add i64 %14124, 8
  %14126 = load i32, i32* %ECX.i580
  %14127 = zext i32 %14126 to i64
  %14128 = load i64, i64* %PC.i579
  %14129 = add i64 %14128, 3
  store i64 %14129, i64* %PC.i579
  %14130 = inttoptr i64 %14125 to i32*
  store i32 %14126, i32* %14130
  store %struct.Memory* %loadMem_40bc67, %struct.Memory** %MEMORY
  %loadMem_40bc6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14132 = getelementptr inbounds %struct.GPR, %struct.GPR* %14131, i32 0, i32 33
  %14133 = getelementptr inbounds %struct.Reg, %struct.Reg* %14132, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %14133 to i64*
  %14134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14135 = getelementptr inbounds %struct.GPR, %struct.GPR* %14134, i32 0, i32 5
  %14136 = getelementptr inbounds %struct.Reg, %struct.Reg* %14135, i32 0, i32 0
  %RCX.i577 = bitcast %union.anon* %14136 to i64*
  %14137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14138 = getelementptr inbounds %struct.GPR, %struct.GPR* %14137, i32 0, i32 15
  %14139 = getelementptr inbounds %struct.Reg, %struct.Reg* %14138, i32 0, i32 0
  %RBP.i578 = bitcast %union.anon* %14139 to i64*
  %14140 = load i64, i64* %RBP.i578
  %14141 = sub i64 %14140, 4
  %14142 = load i64, i64* %PC.i576
  %14143 = add i64 %14142, 3
  store i64 %14143, i64* %PC.i576
  %14144 = inttoptr i64 %14141 to i32*
  %14145 = load i32, i32* %14144
  %14146 = zext i32 %14145 to i64
  store i64 %14146, i64* %RCX.i577, align 8
  store %struct.Memory* %loadMem_40bc6a, %struct.Memory** %MEMORY
  %loadMem_40bc6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14148 = getelementptr inbounds %struct.GPR, %struct.GPR* %14147, i32 0, i32 33
  %14149 = getelementptr inbounds %struct.Reg, %struct.Reg* %14148, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %14149 to i64*
  %14150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14151 = getelementptr inbounds %struct.GPR, %struct.GPR* %14150, i32 0, i32 5
  %14152 = getelementptr inbounds %struct.Reg, %struct.Reg* %14151, i32 0, i32 0
  %RCX.i575 = bitcast %union.anon* %14152 to i64*
  %14153 = load i64, i64* %RCX.i575
  %14154 = load i64, i64* %PC.i574
  %14155 = add i64 %14154, 3
  store i64 %14155, i64* %PC.i574
  %14156 = trunc i64 %14153 to i32
  %14157 = sub i32 %14156, 20
  %14158 = zext i32 %14157 to i64
  store i64 %14158, i64* %RCX.i575, align 8
  %14159 = icmp ult i32 %14156, 20
  %14160 = zext i1 %14159 to i8
  %14161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14160, i8* %14161, align 1
  %14162 = and i32 %14157, 255
  %14163 = call i32 @llvm.ctpop.i32(i32 %14162)
  %14164 = trunc i32 %14163 to i8
  %14165 = and i8 %14164, 1
  %14166 = xor i8 %14165, 1
  %14167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14166, i8* %14167, align 1
  %14168 = xor i64 20, %14153
  %14169 = trunc i64 %14168 to i32
  %14170 = xor i32 %14169, %14157
  %14171 = lshr i32 %14170, 4
  %14172 = trunc i32 %14171 to i8
  %14173 = and i8 %14172, 1
  %14174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14173, i8* %14174, align 1
  %14175 = icmp eq i32 %14157, 0
  %14176 = zext i1 %14175 to i8
  %14177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14176, i8* %14177, align 1
  %14178 = lshr i32 %14157, 31
  %14179 = trunc i32 %14178 to i8
  %14180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14179, i8* %14180, align 1
  %14181 = lshr i32 %14156, 31
  %14182 = xor i32 %14178, %14181
  %14183 = add i32 %14182, %14181
  %14184 = icmp eq i32 %14183, 2
  %14185 = zext i1 %14184 to i8
  %14186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14185, i8* %14186, align 1
  store %struct.Memory* %loadMem_40bc6d, %struct.Memory** %MEMORY
  %loadMem_40bc70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14188 = getelementptr inbounds %struct.GPR, %struct.GPR* %14187, i32 0, i32 33
  %14189 = getelementptr inbounds %struct.Reg, %struct.Reg* %14188, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %14189 to i64*
  %14190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14191 = getelementptr inbounds %struct.GPR, %struct.GPR* %14190, i32 0, i32 5
  %14192 = getelementptr inbounds %struct.Reg, %struct.Reg* %14191, i32 0, i32 0
  %ECX.i572 = bitcast %union.anon* %14192 to i32*
  %14193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14194 = getelementptr inbounds %struct.GPR, %struct.GPR* %14193, i32 0, i32 7
  %14195 = getelementptr inbounds %struct.Reg, %struct.Reg* %14194, i32 0, i32 0
  %RDX.i573 = bitcast %union.anon* %14195 to i64*
  %14196 = load i32, i32* %ECX.i572
  %14197 = zext i32 %14196 to i64
  %14198 = load i64, i64* %PC.i571
  %14199 = add i64 %14198, 3
  store i64 %14199, i64* %PC.i571
  %14200 = shl i64 %14197, 32
  %14201 = ashr exact i64 %14200, 32
  store i64 %14201, i64* %RDX.i573, align 8
  store %struct.Memory* %loadMem_40bc70, %struct.Memory** %MEMORY
  %loadMem_40bc73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14203 = getelementptr inbounds %struct.GPR, %struct.GPR* %14202, i32 0, i32 33
  %14204 = getelementptr inbounds %struct.Reg, %struct.Reg* %14203, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %14204 to i64*
  %14205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14206 = getelementptr inbounds %struct.GPR, %struct.GPR* %14205, i32 0, i32 5
  %14207 = getelementptr inbounds %struct.Reg, %struct.Reg* %14206, i32 0, i32 0
  %RCX.i569 = bitcast %union.anon* %14207 to i64*
  %14208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14209 = getelementptr inbounds %struct.GPR, %struct.GPR* %14208, i32 0, i32 7
  %14210 = getelementptr inbounds %struct.Reg, %struct.Reg* %14209, i32 0, i32 0
  %RDX.i570 = bitcast %union.anon* %14210 to i64*
  %14211 = load i64, i64* %RDX.i570
  %14212 = mul i64 %14211, 4
  %14213 = add i64 %14212, 11187184
  %14214 = load i64, i64* %PC.i568
  %14215 = add i64 %14214, 7
  store i64 %14215, i64* %PC.i568
  %14216 = inttoptr i64 %14213 to i32*
  %14217 = load i32, i32* %14216
  %14218 = zext i32 %14217 to i64
  store i64 %14218, i64* %RCX.i569, align 8
  store %struct.Memory* %loadMem_40bc73, %struct.Memory** %MEMORY
  %loadMem_40bc7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14220 = getelementptr inbounds %struct.GPR, %struct.GPR* %14219, i32 0, i32 33
  %14221 = getelementptr inbounds %struct.Reg, %struct.Reg* %14220, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %14221 to i64*
  %14222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14223 = getelementptr inbounds %struct.GPR, %struct.GPR* %14222, i32 0, i32 7
  %14224 = getelementptr inbounds %struct.Reg, %struct.Reg* %14223, i32 0, i32 0
  %RDX.i566 = bitcast %union.anon* %14224 to i64*
  %14225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14226 = getelementptr inbounds %struct.GPR, %struct.GPR* %14225, i32 0, i32 15
  %14227 = getelementptr inbounds %struct.Reg, %struct.Reg* %14226, i32 0, i32 0
  %RBP.i567 = bitcast %union.anon* %14227 to i64*
  %14228 = load i64, i64* %RBP.i567
  %14229 = sub i64 %14228, 8
  %14230 = load i64, i64* %PC.i565
  %14231 = add i64 %14230, 4
  store i64 %14231, i64* %PC.i565
  %14232 = inttoptr i64 %14229 to i32*
  %14233 = load i32, i32* %14232
  %14234 = sext i32 %14233 to i64
  store i64 %14234, i64* %RDX.i566, align 8
  store %struct.Memory* %loadMem_40bc7a, %struct.Memory** %MEMORY
  %loadMem_40bc7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14236 = getelementptr inbounds %struct.GPR, %struct.GPR* %14235, i32 0, i32 33
  %14237 = getelementptr inbounds %struct.Reg, %struct.Reg* %14236, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %14237 to i64*
  %14238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14239 = getelementptr inbounds %struct.GPR, %struct.GPR* %14238, i32 0, i32 7
  %14240 = getelementptr inbounds %struct.Reg, %struct.Reg* %14239, i32 0, i32 0
  %RDX.i564 = bitcast %union.anon* %14240 to i64*
  %14241 = load i64, i64* %RDX.i564
  %14242 = load i64, i64* %PC.i563
  %14243 = add i64 %14242, 7
  store i64 %14243, i64* %PC.i563
  %14244 = sext i64 %14241 to i128
  %14245 = and i128 %14244, -18446744073709551616
  %14246 = zext i64 %14241 to i128
  %14247 = or i128 %14245, %14246
  %14248 = mul i128 744, %14247
  %14249 = trunc i128 %14248 to i64
  store i64 %14249, i64* %RDX.i564, align 8
  %14250 = sext i64 %14249 to i128
  %14251 = icmp ne i128 %14250, %14248
  %14252 = zext i1 %14251 to i8
  %14253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14252, i8* %14253, align 1
  %14254 = trunc i128 %14248 to i32
  %14255 = and i32 %14254, 255
  %14256 = call i32 @llvm.ctpop.i32(i32 %14255)
  %14257 = trunc i32 %14256 to i8
  %14258 = and i8 %14257, 1
  %14259 = xor i8 %14258, 1
  %14260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14259, i8* %14260, align 1
  %14261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14261, align 1
  %14262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14262, align 1
  %14263 = lshr i64 %14249, 63
  %14264 = trunc i64 %14263 to i8
  %14265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14264, i8* %14265, align 1
  %14266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14252, i8* %14266, align 1
  store %struct.Memory* %loadMem_40bc7e, %struct.Memory** %MEMORY
  %loadMem_40bc85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14268 = getelementptr inbounds %struct.GPR, %struct.GPR* %14267, i32 0, i32 33
  %14269 = getelementptr inbounds %struct.Reg, %struct.Reg* %14268, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %14269 to i64*
  %14270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14271 = getelementptr inbounds %struct.GPR, %struct.GPR* %14270, i32 0, i32 1
  %14272 = getelementptr inbounds %struct.Reg, %struct.Reg* %14271, i32 0, i32 0
  %RAX.i561 = bitcast %union.anon* %14272 to i64*
  %14273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14274 = getelementptr inbounds %struct.GPR, %struct.GPR* %14273, i32 0, i32 9
  %14275 = getelementptr inbounds %struct.Reg, %struct.Reg* %14274, i32 0, i32 0
  %RSI.i562 = bitcast %union.anon* %14275 to i64*
  %14276 = load i64, i64* %RAX.i561
  %14277 = load i64, i64* %PC.i560
  %14278 = add i64 %14277, 3
  store i64 %14278, i64* %PC.i560
  store i64 %14276, i64* %RSI.i562, align 8
  store %struct.Memory* %loadMem_40bc85, %struct.Memory** %MEMORY
  %loadMem_40bc88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14280 = getelementptr inbounds %struct.GPR, %struct.GPR* %14279, i32 0, i32 33
  %14281 = getelementptr inbounds %struct.Reg, %struct.Reg* %14280, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %14281 to i64*
  %14282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14283 = getelementptr inbounds %struct.GPR, %struct.GPR* %14282, i32 0, i32 7
  %14284 = getelementptr inbounds %struct.Reg, %struct.Reg* %14283, i32 0, i32 0
  %RDX.i558 = bitcast %union.anon* %14284 to i64*
  %14285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14286 = getelementptr inbounds %struct.GPR, %struct.GPR* %14285, i32 0, i32 9
  %14287 = getelementptr inbounds %struct.Reg, %struct.Reg* %14286, i32 0, i32 0
  %RSI.i559 = bitcast %union.anon* %14287 to i64*
  %14288 = load i64, i64* %RSI.i559
  %14289 = load i64, i64* %RDX.i558
  %14290 = load i64, i64* %PC.i557
  %14291 = add i64 %14290, 3
  store i64 %14291, i64* %PC.i557
  %14292 = add i64 %14289, %14288
  store i64 %14292, i64* %RSI.i559, align 8
  %14293 = icmp ult i64 %14292, %14288
  %14294 = icmp ult i64 %14292, %14289
  %14295 = or i1 %14293, %14294
  %14296 = zext i1 %14295 to i8
  %14297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14296, i8* %14297, align 1
  %14298 = trunc i64 %14292 to i32
  %14299 = and i32 %14298, 255
  %14300 = call i32 @llvm.ctpop.i32(i32 %14299)
  %14301 = trunc i32 %14300 to i8
  %14302 = and i8 %14301, 1
  %14303 = xor i8 %14302, 1
  %14304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14303, i8* %14304, align 1
  %14305 = xor i64 %14289, %14288
  %14306 = xor i64 %14305, %14292
  %14307 = lshr i64 %14306, 4
  %14308 = trunc i64 %14307 to i8
  %14309 = and i8 %14308, 1
  %14310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14309, i8* %14310, align 1
  %14311 = icmp eq i64 %14292, 0
  %14312 = zext i1 %14311 to i8
  %14313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14312, i8* %14313, align 1
  %14314 = lshr i64 %14292, 63
  %14315 = trunc i64 %14314 to i8
  %14316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14315, i8* %14316, align 1
  %14317 = lshr i64 %14288, 63
  %14318 = lshr i64 %14289, 63
  %14319 = xor i64 %14314, %14317
  %14320 = xor i64 %14314, %14318
  %14321 = add i64 %14319, %14320
  %14322 = icmp eq i64 %14321, 2
  %14323 = zext i1 %14322 to i8
  %14324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14323, i8* %14324, align 1
  store %struct.Memory* %loadMem_40bc88, %struct.Memory** %MEMORY
  %loadMem_40bc8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14326 = getelementptr inbounds %struct.GPR, %struct.GPR* %14325, i32 0, i32 33
  %14327 = getelementptr inbounds %struct.Reg, %struct.Reg* %14326, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %14327 to i64*
  %14328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14329 = getelementptr inbounds %struct.GPR, %struct.GPR* %14328, i32 0, i32 7
  %14330 = getelementptr inbounds %struct.Reg, %struct.Reg* %14329, i32 0, i32 0
  %RDX.i555 = bitcast %union.anon* %14330 to i64*
  %14331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14332 = getelementptr inbounds %struct.GPR, %struct.GPR* %14331, i32 0, i32 15
  %14333 = getelementptr inbounds %struct.Reg, %struct.Reg* %14332, i32 0, i32 0
  %RBP.i556 = bitcast %union.anon* %14333 to i64*
  %14334 = load i64, i64* %RBP.i556
  %14335 = sub i64 %14334, 8
  %14336 = load i64, i64* %PC.i554
  %14337 = add i64 %14336, 4
  store i64 %14337, i64* %PC.i554
  %14338 = inttoptr i64 %14335 to i32*
  %14339 = load i32, i32* %14338
  %14340 = sext i32 %14339 to i64
  store i64 %14340, i64* %RDX.i555, align 8
  store %struct.Memory* %loadMem_40bc8b, %struct.Memory** %MEMORY
  %loadMem_40bc8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14342 = getelementptr inbounds %struct.GPR, %struct.GPR* %14341, i32 0, i32 33
  %14343 = getelementptr inbounds %struct.Reg, %struct.Reg* %14342, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %14343 to i64*
  %14344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14345 = getelementptr inbounds %struct.GPR, %struct.GPR* %14344, i32 0, i32 7
  %14346 = getelementptr inbounds %struct.Reg, %struct.Reg* %14345, i32 0, i32 0
  %RDX.i553 = bitcast %union.anon* %14346 to i64*
  %14347 = load i64, i64* %RDX.i553
  %14348 = load i64, i64* %PC.i552
  %14349 = add i64 %14348, 7
  store i64 %14349, i64* %PC.i552
  %14350 = sext i64 %14347 to i128
  %14351 = and i128 %14350, -18446744073709551616
  %14352 = zext i64 %14347 to i128
  %14353 = or i128 %14351, %14352
  %14354 = mul i128 744, %14353
  %14355 = trunc i128 %14354 to i64
  store i64 %14355, i64* %RDX.i553, align 8
  %14356 = sext i64 %14355 to i128
  %14357 = icmp ne i128 %14356, %14354
  %14358 = zext i1 %14357 to i8
  %14359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14358, i8* %14359, align 1
  %14360 = trunc i128 %14354 to i32
  %14361 = and i32 %14360, 255
  %14362 = call i32 @llvm.ctpop.i32(i32 %14361)
  %14363 = trunc i32 %14362 to i8
  %14364 = and i8 %14363, 1
  %14365 = xor i8 %14364, 1
  %14366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14365, i8* %14366, align 1
  %14367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14367, align 1
  %14368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14368, align 1
  %14369 = lshr i64 %14355, 63
  %14370 = trunc i64 %14369 to i8
  %14371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14370, i8* %14371, align 1
  %14372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14358, i8* %14372, align 1
  store %struct.Memory* %loadMem_40bc8f, %struct.Memory** %MEMORY
  %loadMem_40bc96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14374 = getelementptr inbounds %struct.GPR, %struct.GPR* %14373, i32 0, i32 33
  %14375 = getelementptr inbounds %struct.Reg, %struct.Reg* %14374, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %14375 to i64*
  %14376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14377 = getelementptr inbounds %struct.GPR, %struct.GPR* %14376, i32 0, i32 1
  %14378 = getelementptr inbounds %struct.Reg, %struct.Reg* %14377, i32 0, i32 0
  %RAX.i550 = bitcast %union.anon* %14378 to i64*
  %14379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14380 = getelementptr inbounds %struct.GPR, %struct.GPR* %14379, i32 0, i32 11
  %14381 = getelementptr inbounds %struct.Reg, %struct.Reg* %14380, i32 0, i32 0
  %RDI.i551 = bitcast %union.anon* %14381 to i64*
  %14382 = load i64, i64* %RAX.i550
  %14383 = load i64, i64* %PC.i549
  %14384 = add i64 %14383, 3
  store i64 %14384, i64* %PC.i549
  store i64 %14382, i64* %RDI.i551, align 8
  store %struct.Memory* %loadMem_40bc96, %struct.Memory** %MEMORY
  %loadMem_40bc99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14386 = getelementptr inbounds %struct.GPR, %struct.GPR* %14385, i32 0, i32 33
  %14387 = getelementptr inbounds %struct.Reg, %struct.Reg* %14386, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %14387 to i64*
  %14388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14389 = getelementptr inbounds %struct.GPR, %struct.GPR* %14388, i32 0, i32 7
  %14390 = getelementptr inbounds %struct.Reg, %struct.Reg* %14389, i32 0, i32 0
  %RDX.i547 = bitcast %union.anon* %14390 to i64*
  %14391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14392 = getelementptr inbounds %struct.GPR, %struct.GPR* %14391, i32 0, i32 11
  %14393 = getelementptr inbounds %struct.Reg, %struct.Reg* %14392, i32 0, i32 0
  %RDI.i548 = bitcast %union.anon* %14393 to i64*
  %14394 = load i64, i64* %RDI.i548
  %14395 = load i64, i64* %RDX.i547
  %14396 = load i64, i64* %PC.i546
  %14397 = add i64 %14396, 3
  store i64 %14397, i64* %PC.i546
  %14398 = add i64 %14395, %14394
  store i64 %14398, i64* %RDI.i548, align 8
  %14399 = icmp ult i64 %14398, %14394
  %14400 = icmp ult i64 %14398, %14395
  %14401 = or i1 %14399, %14400
  %14402 = zext i1 %14401 to i8
  %14403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14402, i8* %14403, align 1
  %14404 = trunc i64 %14398 to i32
  %14405 = and i32 %14404, 255
  %14406 = call i32 @llvm.ctpop.i32(i32 %14405)
  %14407 = trunc i32 %14406 to i8
  %14408 = and i8 %14407, 1
  %14409 = xor i8 %14408, 1
  %14410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14409, i8* %14410, align 1
  %14411 = xor i64 %14395, %14394
  %14412 = xor i64 %14411, %14398
  %14413 = lshr i64 %14412, 4
  %14414 = trunc i64 %14413 to i8
  %14415 = and i8 %14414, 1
  %14416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14415, i8* %14416, align 1
  %14417 = icmp eq i64 %14398, 0
  %14418 = zext i1 %14417 to i8
  %14419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14418, i8* %14419, align 1
  %14420 = lshr i64 %14398, 63
  %14421 = trunc i64 %14420 to i8
  %14422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14421, i8* %14422, align 1
  %14423 = lshr i64 %14394, 63
  %14424 = lshr i64 %14395, 63
  %14425 = xor i64 %14420, %14423
  %14426 = xor i64 %14420, %14424
  %14427 = add i64 %14425, %14426
  %14428 = icmp eq i64 %14427, 2
  %14429 = zext i1 %14428 to i8
  %14430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14429, i8* %14430, align 1
  store %struct.Memory* %loadMem_40bc99, %struct.Memory** %MEMORY
  %loadMem_40bc9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14432 = getelementptr inbounds %struct.GPR, %struct.GPR* %14431, i32 0, i32 33
  %14433 = getelementptr inbounds %struct.Reg, %struct.Reg* %14432, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %14433 to i64*
  %14434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14435 = getelementptr inbounds %struct.GPR, %struct.GPR* %14434, i32 0, i32 17
  %14436 = getelementptr inbounds %struct.Reg, %struct.Reg* %14435, i32 0, i32 0
  %R8D.i544 = bitcast %union.anon* %14436 to i32*
  %14437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14438 = getelementptr inbounds %struct.GPR, %struct.GPR* %14437, i32 0, i32 11
  %14439 = getelementptr inbounds %struct.Reg, %struct.Reg* %14438, i32 0, i32 0
  %RDI.i545 = bitcast %union.anon* %14439 to i64*
  %14440 = bitcast i32* %R8D.i544 to i64*
  %14441 = load i64, i64* %RDI.i545
  %14442 = add i64 %14441, 96
  %14443 = load i64, i64* %PC.i543
  %14444 = add i64 %14443, 4
  store i64 %14444, i64* %PC.i543
  %14445 = inttoptr i64 %14442 to i32*
  %14446 = load i32, i32* %14445
  %14447 = zext i32 %14446 to i64
  store i64 %14447, i64* %14440, align 8
  store %struct.Memory* %loadMem_40bc9c, %struct.Memory** %MEMORY
  %loadMem_40bca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14449 = getelementptr inbounds %struct.GPR, %struct.GPR* %14448, i32 0, i32 33
  %14450 = getelementptr inbounds %struct.Reg, %struct.Reg* %14449, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %14450 to i64*
  %14451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14452 = getelementptr inbounds %struct.GPR, %struct.GPR* %14451, i32 0, i32 17
  %14453 = getelementptr inbounds %struct.Reg, %struct.Reg* %14452, i32 0, i32 0
  %R8D.i541 = bitcast %union.anon* %14453 to i32*
  %14454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14455 = getelementptr inbounds %struct.GPR, %struct.GPR* %14454, i32 0, i32 19
  %14456 = getelementptr inbounds %struct.Reg, %struct.Reg* %14455, i32 0, i32 0
  %R9D.i542 = bitcast %union.anon* %14456 to i32*
  %14457 = bitcast i32* %R9D.i542 to i64*
  %14458 = load i32, i32* %R8D.i541
  %14459 = zext i32 %14458 to i64
  %14460 = load i64, i64* %PC.i540
  %14461 = add i64 %14460, 3
  store i64 %14461, i64* %PC.i540
  %14462 = and i64 %14459, 4294967295
  store i64 %14462, i64* %14457, align 8
  store %struct.Memory* %loadMem_40bca0, %struct.Memory** %MEMORY
  %loadMem_40bca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14464 = getelementptr inbounds %struct.GPR, %struct.GPR* %14463, i32 0, i32 33
  %14465 = getelementptr inbounds %struct.Reg, %struct.Reg* %14464, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %14465 to i64*
  %14466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14467 = getelementptr inbounds %struct.GPR, %struct.GPR* %14466, i32 0, i32 19
  %14468 = getelementptr inbounds %struct.Reg, %struct.Reg* %14467, i32 0, i32 0
  %R9D.i539 = bitcast %union.anon* %14468 to i32*
  %14469 = bitcast i32* %R9D.i539 to i64*
  %14470 = load i32, i32* %R9D.i539
  %14471 = zext i32 %14470 to i64
  %14472 = load i64, i64* %PC.i538
  %14473 = add i64 %14472, 4
  store i64 %14473, i64* %PC.i538
  %14474 = add i32 1, %14470
  %14475 = zext i32 %14474 to i64
  store i64 %14475, i64* %14469, align 8
  %14476 = icmp ult i32 %14474, %14470
  %14477 = icmp ult i32 %14474, 1
  %14478 = or i1 %14476, %14477
  %14479 = zext i1 %14478 to i8
  %14480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14479, i8* %14480, align 1
  %14481 = and i32 %14474, 255
  %14482 = call i32 @llvm.ctpop.i32(i32 %14481)
  %14483 = trunc i32 %14482 to i8
  %14484 = and i8 %14483, 1
  %14485 = xor i8 %14484, 1
  %14486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14485, i8* %14486, align 1
  %14487 = xor i64 1, %14471
  %14488 = trunc i64 %14487 to i32
  %14489 = xor i32 %14488, %14474
  %14490 = lshr i32 %14489, 4
  %14491 = trunc i32 %14490 to i8
  %14492 = and i8 %14491, 1
  %14493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14492, i8* %14493, align 1
  %14494 = icmp eq i32 %14474, 0
  %14495 = zext i1 %14494 to i8
  %14496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14495, i8* %14496, align 1
  %14497 = lshr i32 %14474, 31
  %14498 = trunc i32 %14497 to i8
  %14499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14498, i8* %14499, align 1
  %14500 = lshr i32 %14470, 31
  %14501 = xor i32 %14497, %14500
  %14502 = add i32 %14501, %14497
  %14503 = icmp eq i32 %14502, 2
  %14504 = zext i1 %14503 to i8
  %14505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14504, i8* %14505, align 1
  store %struct.Memory* %loadMem_40bca3, %struct.Memory** %MEMORY
  %loadMem_40bca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14507 = getelementptr inbounds %struct.GPR, %struct.GPR* %14506, i32 0, i32 33
  %14508 = getelementptr inbounds %struct.Reg, %struct.Reg* %14507, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %14508 to i64*
  %14509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14510 = getelementptr inbounds %struct.GPR, %struct.GPR* %14509, i32 0, i32 19
  %14511 = getelementptr inbounds %struct.Reg, %struct.Reg* %14510, i32 0, i32 0
  %R9D.i536 = bitcast %union.anon* %14511 to i32*
  %14512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14513 = getelementptr inbounds %struct.GPR, %struct.GPR* %14512, i32 0, i32 11
  %14514 = getelementptr inbounds %struct.Reg, %struct.Reg* %14513, i32 0, i32 0
  %RDI.i537 = bitcast %union.anon* %14514 to i64*
  %14515 = load i64, i64* %RDI.i537
  %14516 = add i64 %14515, 96
  %14517 = load i32, i32* %R9D.i536
  %14518 = zext i32 %14517 to i64
  %14519 = load i64, i64* %PC.i535
  %14520 = add i64 %14519, 4
  store i64 %14520, i64* %PC.i535
  %14521 = inttoptr i64 %14516 to i32*
  store i32 %14517, i32* %14521
  store %struct.Memory* %loadMem_40bca7, %struct.Memory** %MEMORY
  %loadMem_40bcab = load %struct.Memory*, %struct.Memory** %MEMORY
  %14522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14523 = getelementptr inbounds %struct.GPR, %struct.GPR* %14522, i32 0, i32 33
  %14524 = getelementptr inbounds %struct.Reg, %struct.Reg* %14523, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %14524 to i64*
  %14525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14526 = getelementptr inbounds %struct.GPR, %struct.GPR* %14525, i32 0, i32 17
  %14527 = getelementptr inbounds %struct.Reg, %struct.Reg* %14526, i32 0, i32 0
  %R8D.i533 = bitcast %union.anon* %14527 to i32*
  %14528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14529 = getelementptr inbounds %struct.GPR, %struct.GPR* %14528, i32 0, i32 7
  %14530 = getelementptr inbounds %struct.Reg, %struct.Reg* %14529, i32 0, i32 0
  %RDX.i534 = bitcast %union.anon* %14530 to i64*
  %14531 = load i32, i32* %R8D.i533
  %14532 = zext i32 %14531 to i64
  %14533 = load i64, i64* %PC.i532
  %14534 = add i64 %14533, 3
  store i64 %14534, i64* %PC.i532
  %14535 = shl i64 %14532, 32
  %14536 = ashr exact i64 %14535, 32
  store i64 %14536, i64* %RDX.i534, align 8
  store %struct.Memory* %loadMem_40bcab, %struct.Memory** %MEMORY
  %loadMem_40bcae = load %struct.Memory*, %struct.Memory** %MEMORY
  %14537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14538 = getelementptr inbounds %struct.GPR, %struct.GPR* %14537, i32 0, i32 33
  %14539 = getelementptr inbounds %struct.Reg, %struct.Reg* %14538, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %14539 to i64*
  %14540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14541 = getelementptr inbounds %struct.GPR, %struct.GPR* %14540, i32 0, i32 5
  %14542 = getelementptr inbounds %struct.Reg, %struct.Reg* %14541, i32 0, i32 0
  %ECX.i529 = bitcast %union.anon* %14542 to i32*
  %14543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14544 = getelementptr inbounds %struct.GPR, %struct.GPR* %14543, i32 0, i32 7
  %14545 = getelementptr inbounds %struct.Reg, %struct.Reg* %14544, i32 0, i32 0
  %RDX.i530 = bitcast %union.anon* %14545 to i64*
  %14546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14547 = getelementptr inbounds %struct.GPR, %struct.GPR* %14546, i32 0, i32 9
  %14548 = getelementptr inbounds %struct.Reg, %struct.Reg* %14547, i32 0, i32 0
  %RSI.i531 = bitcast %union.anon* %14548 to i64*
  %14549 = load i64, i64* %RSI.i531
  %14550 = load i64, i64* %RDX.i530
  %14551 = mul i64 %14550, 4
  %14552 = add i64 %14549, 100
  %14553 = add i64 %14552, %14551
  %14554 = load i32, i32* %ECX.i529
  %14555 = zext i32 %14554 to i64
  %14556 = load i64, i64* %PC.i528
  %14557 = add i64 %14556, 4
  store i64 %14557, i64* %PC.i528
  %14558 = inttoptr i64 %14553 to i32*
  store i32 %14554, i32* %14558
  store %struct.Memory* %loadMem_40bcae, %struct.Memory** %MEMORY
  %loadMem_40bcb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14560 = getelementptr inbounds %struct.GPR, %struct.GPR* %14559, i32 0, i32 33
  %14561 = getelementptr inbounds %struct.Reg, %struct.Reg* %14560, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %14561 to i64*
  %14562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14563 = getelementptr inbounds %struct.GPR, %struct.GPR* %14562, i32 0, i32 7
  %14564 = getelementptr inbounds %struct.Reg, %struct.Reg* %14563, i32 0, i32 0
  %RDX.i526 = bitcast %union.anon* %14564 to i64*
  %14565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14566 = getelementptr inbounds %struct.GPR, %struct.GPR* %14565, i32 0, i32 15
  %14567 = getelementptr inbounds %struct.Reg, %struct.Reg* %14566, i32 0, i32 0
  %RBP.i527 = bitcast %union.anon* %14567 to i64*
  %14568 = load i64, i64* %RBP.i527
  %14569 = sub i64 %14568, 40
  %14570 = load i64, i64* %PC.i525
  %14571 = add i64 %14570, 4
  store i64 %14571, i64* %PC.i525
  %14572 = inttoptr i64 %14569 to i32*
  %14573 = load i32, i32* %14572
  %14574 = sext i32 %14573 to i64
  store i64 %14574, i64* %RDX.i526, align 8
  store %struct.Memory* %loadMem_40bcb2, %struct.Memory** %MEMORY
  %loadMem_40bcb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14576 = getelementptr inbounds %struct.GPR, %struct.GPR* %14575, i32 0, i32 33
  %14577 = getelementptr inbounds %struct.Reg, %struct.Reg* %14576, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %14577 to i64*
  %14578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14579 = getelementptr inbounds %struct.GPR, %struct.GPR* %14578, i32 0, i32 7
  %14580 = getelementptr inbounds %struct.Reg, %struct.Reg* %14579, i32 0, i32 0
  %RDX.i524 = bitcast %union.anon* %14580 to i64*
  %14581 = load i64, i64* %RDX.i524
  %14582 = load i64, i64* %PC.i523
  %14583 = add i64 %14582, 7
  store i64 %14583, i64* %PC.i523
  %14584 = sext i64 %14581 to i128
  %14585 = and i128 %14584, -18446744073709551616
  %14586 = zext i64 %14581 to i128
  %14587 = or i128 %14585, %14586
  %14588 = mul i128 744, %14587
  %14589 = trunc i128 %14588 to i64
  store i64 %14589, i64* %RDX.i524, align 8
  %14590 = sext i64 %14589 to i128
  %14591 = icmp ne i128 %14590, %14588
  %14592 = zext i1 %14591 to i8
  %14593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14592, i8* %14593, align 1
  %14594 = trunc i128 %14588 to i32
  %14595 = and i32 %14594, 255
  %14596 = call i32 @llvm.ctpop.i32(i32 %14595)
  %14597 = trunc i32 %14596 to i8
  %14598 = and i8 %14597, 1
  %14599 = xor i8 %14598, 1
  %14600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14599, i8* %14600, align 1
  %14601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14601, align 1
  %14602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14602, align 1
  %14603 = lshr i64 %14589, 63
  %14604 = trunc i64 %14603 to i8
  %14605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14604, i8* %14605, align 1
  %14606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14592, i8* %14606, align 1
  store %struct.Memory* %loadMem_40bcb6, %struct.Memory** %MEMORY
  %loadMem_40bcbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14608 = getelementptr inbounds %struct.GPR, %struct.GPR* %14607, i32 0, i32 33
  %14609 = getelementptr inbounds %struct.Reg, %struct.Reg* %14608, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %14609 to i64*
  %14610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14611 = getelementptr inbounds %struct.GPR, %struct.GPR* %14610, i32 0, i32 1
  %14612 = getelementptr inbounds %struct.Reg, %struct.Reg* %14611, i32 0, i32 0
  %RAX.i521 = bitcast %union.anon* %14612 to i64*
  %14613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14614 = getelementptr inbounds %struct.GPR, %struct.GPR* %14613, i32 0, i32 9
  %14615 = getelementptr inbounds %struct.Reg, %struct.Reg* %14614, i32 0, i32 0
  %RSI.i522 = bitcast %union.anon* %14615 to i64*
  %14616 = load i64, i64* %RAX.i521
  %14617 = load i64, i64* %PC.i520
  %14618 = add i64 %14617, 3
  store i64 %14618, i64* %PC.i520
  store i64 %14616, i64* %RSI.i522, align 8
  store %struct.Memory* %loadMem_40bcbd, %struct.Memory** %MEMORY
  %loadMem_40bcc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14620 = getelementptr inbounds %struct.GPR, %struct.GPR* %14619, i32 0, i32 33
  %14621 = getelementptr inbounds %struct.Reg, %struct.Reg* %14620, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %14621 to i64*
  %14622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14623 = getelementptr inbounds %struct.GPR, %struct.GPR* %14622, i32 0, i32 7
  %14624 = getelementptr inbounds %struct.Reg, %struct.Reg* %14623, i32 0, i32 0
  %RDX.i518 = bitcast %union.anon* %14624 to i64*
  %14625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14626 = getelementptr inbounds %struct.GPR, %struct.GPR* %14625, i32 0, i32 9
  %14627 = getelementptr inbounds %struct.Reg, %struct.Reg* %14626, i32 0, i32 0
  %RSI.i519 = bitcast %union.anon* %14627 to i64*
  %14628 = load i64, i64* %RSI.i519
  %14629 = load i64, i64* %RDX.i518
  %14630 = load i64, i64* %PC.i517
  %14631 = add i64 %14630, 3
  store i64 %14631, i64* %PC.i517
  %14632 = add i64 %14629, %14628
  store i64 %14632, i64* %RSI.i519, align 8
  %14633 = icmp ult i64 %14632, %14628
  %14634 = icmp ult i64 %14632, %14629
  %14635 = or i1 %14633, %14634
  %14636 = zext i1 %14635 to i8
  %14637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14636, i8* %14637, align 1
  %14638 = trunc i64 %14632 to i32
  %14639 = and i32 %14638, 255
  %14640 = call i32 @llvm.ctpop.i32(i32 %14639)
  %14641 = trunc i32 %14640 to i8
  %14642 = and i8 %14641, 1
  %14643 = xor i8 %14642, 1
  %14644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14643, i8* %14644, align 1
  %14645 = xor i64 %14629, %14628
  %14646 = xor i64 %14645, %14632
  %14647 = lshr i64 %14646, 4
  %14648 = trunc i64 %14647 to i8
  %14649 = and i8 %14648, 1
  %14650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14649, i8* %14650, align 1
  %14651 = icmp eq i64 %14632, 0
  %14652 = zext i1 %14651 to i8
  %14653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14652, i8* %14653, align 1
  %14654 = lshr i64 %14632, 63
  %14655 = trunc i64 %14654 to i8
  %14656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14655, i8* %14656, align 1
  %14657 = lshr i64 %14628, 63
  %14658 = lshr i64 %14629, 63
  %14659 = xor i64 %14654, %14657
  %14660 = xor i64 %14654, %14658
  %14661 = add i64 %14659, %14660
  %14662 = icmp eq i64 %14661, 2
  %14663 = zext i1 %14662 to i8
  %14664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14663, i8* %14664, align 1
  store %struct.Memory* %loadMem_40bcc0, %struct.Memory** %MEMORY
  %loadMem_40bcc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14666 = getelementptr inbounds %struct.GPR, %struct.GPR* %14665, i32 0, i32 33
  %14667 = getelementptr inbounds %struct.Reg, %struct.Reg* %14666, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %14667 to i64*
  %14668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14669 = getelementptr inbounds %struct.GPR, %struct.GPR* %14668, i32 0, i32 9
  %14670 = getelementptr inbounds %struct.Reg, %struct.Reg* %14669, i32 0, i32 0
  %RSI.i516 = bitcast %union.anon* %14670 to i64*
  %14671 = load i64, i64* %RSI.i516
  %14672 = load i64, i64* %PC.i515
  %14673 = add i64 %14672, 4
  store i64 %14673, i64* %PC.i515
  %14674 = add i64 96, %14671
  store i64 %14674, i64* %RSI.i516, align 8
  %14675 = icmp ult i64 %14674, %14671
  %14676 = icmp ult i64 %14674, 96
  %14677 = or i1 %14675, %14676
  %14678 = zext i1 %14677 to i8
  %14679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14678, i8* %14679, align 1
  %14680 = trunc i64 %14674 to i32
  %14681 = and i32 %14680, 255
  %14682 = call i32 @llvm.ctpop.i32(i32 %14681)
  %14683 = trunc i32 %14682 to i8
  %14684 = and i8 %14683, 1
  %14685 = xor i8 %14684, 1
  %14686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14685, i8* %14686, align 1
  %14687 = xor i64 96, %14671
  %14688 = xor i64 %14687, %14674
  %14689 = lshr i64 %14688, 4
  %14690 = trunc i64 %14689 to i8
  %14691 = and i8 %14690, 1
  %14692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14691, i8* %14692, align 1
  %14693 = icmp eq i64 %14674, 0
  %14694 = zext i1 %14693 to i8
  %14695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14694, i8* %14695, align 1
  %14696 = lshr i64 %14674, 63
  %14697 = trunc i64 %14696 to i8
  %14698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14697, i8* %14698, align 1
  %14699 = lshr i64 %14671, 63
  %14700 = xor i64 %14696, %14699
  %14701 = add i64 %14700, %14696
  %14702 = icmp eq i64 %14701, 2
  %14703 = zext i1 %14702 to i8
  %14704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14703, i8* %14704, align 1
  store %struct.Memory* %loadMem_40bcc3, %struct.Memory** %MEMORY
  %loadMem_40bcc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14706 = getelementptr inbounds %struct.GPR, %struct.GPR* %14705, i32 0, i32 33
  %14707 = getelementptr inbounds %struct.Reg, %struct.Reg* %14706, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %14707 to i64*
  %14708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14709 = getelementptr inbounds %struct.GPR, %struct.GPR* %14708, i32 0, i32 7
  %14710 = getelementptr inbounds %struct.Reg, %struct.Reg* %14709, i32 0, i32 0
  %RDX.i514 = bitcast %union.anon* %14710 to i64*
  %14711 = load i64, i64* %PC.i513
  %14712 = add i64 %14711, 8
  store i64 %14712, i64* %PC.i513
  %14713 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %14713, i64* %RDX.i514, align 8
  store %struct.Memory* %loadMem_40bcc7, %struct.Memory** %MEMORY
  %loadMem_40bccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %14714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14715 = getelementptr inbounds %struct.GPR, %struct.GPR* %14714, i32 0, i32 33
  %14716 = getelementptr inbounds %struct.Reg, %struct.Reg* %14715, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %14716 to i64*
  %14717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14718 = getelementptr inbounds %struct.GPR, %struct.GPR* %14717, i32 0, i32 7
  %14719 = getelementptr inbounds %struct.Reg, %struct.Reg* %14718, i32 0, i32 0
  %RDX.i511 = bitcast %union.anon* %14719 to i64*
  %14720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14721 = getelementptr inbounds %struct.GPR, %struct.GPR* %14720, i32 0, i32 9
  %14722 = getelementptr inbounds %struct.Reg, %struct.Reg* %14721, i32 0, i32 0
  %RSI.i512 = bitcast %union.anon* %14722 to i64*
  %14723 = load i64, i64* %RDX.i511
  %14724 = load i64, i64* %RSI.i512
  %14725 = load i64, i64* %PC.i510
  %14726 = add i64 %14725, 3
  store i64 %14726, i64* %PC.i510
  %14727 = inttoptr i64 %14723 to i64*
  store i64 %14724, i64* %14727
  store %struct.Memory* %loadMem_40bccf, %struct.Memory** %MEMORY
  %loadMem_40bcd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14729 = getelementptr inbounds %struct.GPR, %struct.GPR* %14728, i32 0, i32 33
  %14730 = getelementptr inbounds %struct.Reg, %struct.Reg* %14729, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %14730 to i64*
  %14731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14732 = getelementptr inbounds %struct.GPR, %struct.GPR* %14731, i32 0, i32 7
  %14733 = getelementptr inbounds %struct.Reg, %struct.Reg* %14732, i32 0, i32 0
  %RDX.i508 = bitcast %union.anon* %14733 to i64*
  %14734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14735 = getelementptr inbounds %struct.GPR, %struct.GPR* %14734, i32 0, i32 15
  %14736 = getelementptr inbounds %struct.Reg, %struct.Reg* %14735, i32 0, i32 0
  %RBP.i509 = bitcast %union.anon* %14736 to i64*
  %14737 = load i64, i64* %RBP.i509
  %14738 = sub i64 %14737, 40
  %14739 = load i64, i64* %PC.i507
  %14740 = add i64 %14739, 4
  store i64 %14740, i64* %PC.i507
  %14741 = inttoptr i64 %14738 to i32*
  %14742 = load i32, i32* %14741
  %14743 = sext i32 %14742 to i64
  store i64 %14743, i64* %RDX.i508, align 8
  store %struct.Memory* %loadMem_40bcd2, %struct.Memory** %MEMORY
  %loadMem_40bcd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14745 = getelementptr inbounds %struct.GPR, %struct.GPR* %14744, i32 0, i32 33
  %14746 = getelementptr inbounds %struct.Reg, %struct.Reg* %14745, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %14746 to i64*
  %14747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14748 = getelementptr inbounds %struct.GPR, %struct.GPR* %14747, i32 0, i32 7
  %14749 = getelementptr inbounds %struct.Reg, %struct.Reg* %14748, i32 0, i32 0
  %RDX.i506 = bitcast %union.anon* %14749 to i64*
  %14750 = load i64, i64* %RDX.i506
  %14751 = load i64, i64* %PC.i505
  %14752 = add i64 %14751, 7
  store i64 %14752, i64* %PC.i505
  %14753 = sext i64 %14750 to i128
  %14754 = and i128 %14753, -18446744073709551616
  %14755 = zext i64 %14750 to i128
  %14756 = or i128 %14754, %14755
  %14757 = mul i128 744, %14756
  %14758 = trunc i128 %14757 to i64
  store i64 %14758, i64* %RDX.i506, align 8
  %14759 = sext i64 %14758 to i128
  %14760 = icmp ne i128 %14759, %14757
  %14761 = zext i1 %14760 to i8
  %14762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14761, i8* %14762, align 1
  %14763 = trunc i128 %14757 to i32
  %14764 = and i32 %14763, 255
  %14765 = call i32 @llvm.ctpop.i32(i32 %14764)
  %14766 = trunc i32 %14765 to i8
  %14767 = and i8 %14766, 1
  %14768 = xor i8 %14767, 1
  %14769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14768, i8* %14769, align 1
  %14770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14770, align 1
  %14771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14771, align 1
  %14772 = lshr i64 %14758, 63
  %14773 = trunc i64 %14772 to i8
  %14774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14773, i8* %14774, align 1
  %14775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14761, i8* %14775, align 1
  store %struct.Memory* %loadMem_40bcd6, %struct.Memory** %MEMORY
  %loadMem_40bcdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14777 = getelementptr inbounds %struct.GPR, %struct.GPR* %14776, i32 0, i32 33
  %14778 = getelementptr inbounds %struct.Reg, %struct.Reg* %14777, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %14778 to i64*
  %14779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14780 = getelementptr inbounds %struct.GPR, %struct.GPR* %14779, i32 0, i32 1
  %14781 = getelementptr inbounds %struct.Reg, %struct.Reg* %14780, i32 0, i32 0
  %RAX.i503 = bitcast %union.anon* %14781 to i64*
  %14782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14783 = getelementptr inbounds %struct.GPR, %struct.GPR* %14782, i32 0, i32 9
  %14784 = getelementptr inbounds %struct.Reg, %struct.Reg* %14783, i32 0, i32 0
  %RSI.i504 = bitcast %union.anon* %14784 to i64*
  %14785 = load i64, i64* %RAX.i503
  %14786 = load i64, i64* %PC.i502
  %14787 = add i64 %14786, 3
  store i64 %14787, i64* %PC.i502
  store i64 %14785, i64* %RSI.i504, align 8
  store %struct.Memory* %loadMem_40bcdd, %struct.Memory** %MEMORY
  %loadMem_40bce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14789 = getelementptr inbounds %struct.GPR, %struct.GPR* %14788, i32 0, i32 33
  %14790 = getelementptr inbounds %struct.Reg, %struct.Reg* %14789, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %14790 to i64*
  %14791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14792 = getelementptr inbounds %struct.GPR, %struct.GPR* %14791, i32 0, i32 7
  %14793 = getelementptr inbounds %struct.Reg, %struct.Reg* %14792, i32 0, i32 0
  %RDX.i500 = bitcast %union.anon* %14793 to i64*
  %14794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14795 = getelementptr inbounds %struct.GPR, %struct.GPR* %14794, i32 0, i32 9
  %14796 = getelementptr inbounds %struct.Reg, %struct.Reg* %14795, i32 0, i32 0
  %RSI.i501 = bitcast %union.anon* %14796 to i64*
  %14797 = load i64, i64* %RSI.i501
  %14798 = load i64, i64* %RDX.i500
  %14799 = load i64, i64* %PC.i499
  %14800 = add i64 %14799, 3
  store i64 %14800, i64* %PC.i499
  %14801 = add i64 %14798, %14797
  store i64 %14801, i64* %RSI.i501, align 8
  %14802 = icmp ult i64 %14801, %14797
  %14803 = icmp ult i64 %14801, %14798
  %14804 = or i1 %14802, %14803
  %14805 = zext i1 %14804 to i8
  %14806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14805, i8* %14806, align 1
  %14807 = trunc i64 %14801 to i32
  %14808 = and i32 %14807, 255
  %14809 = call i32 @llvm.ctpop.i32(i32 %14808)
  %14810 = trunc i32 %14809 to i8
  %14811 = and i8 %14810, 1
  %14812 = xor i8 %14811, 1
  %14813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14812, i8* %14813, align 1
  %14814 = xor i64 %14798, %14797
  %14815 = xor i64 %14814, %14801
  %14816 = lshr i64 %14815, 4
  %14817 = trunc i64 %14816 to i8
  %14818 = and i8 %14817, 1
  %14819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14818, i8* %14819, align 1
  %14820 = icmp eq i64 %14801, 0
  %14821 = zext i1 %14820 to i8
  %14822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14821, i8* %14822, align 1
  %14823 = lshr i64 %14801, 63
  %14824 = trunc i64 %14823 to i8
  %14825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14824, i8* %14825, align 1
  %14826 = lshr i64 %14797, 63
  %14827 = lshr i64 %14798, 63
  %14828 = xor i64 %14823, %14826
  %14829 = xor i64 %14823, %14827
  %14830 = add i64 %14828, %14829
  %14831 = icmp eq i64 %14830, 2
  %14832 = zext i1 %14831 to i8
  %14833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14832, i8* %14833, align 1
  store %struct.Memory* %loadMem_40bce0, %struct.Memory** %MEMORY
  %loadMem_40bce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14835 = getelementptr inbounds %struct.GPR, %struct.GPR* %14834, i32 0, i32 33
  %14836 = getelementptr inbounds %struct.Reg, %struct.Reg* %14835, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %14836 to i64*
  %14837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14838 = getelementptr inbounds %struct.GPR, %struct.GPR* %14837, i32 0, i32 5
  %14839 = getelementptr inbounds %struct.Reg, %struct.Reg* %14838, i32 0, i32 0
  %RCX.i497 = bitcast %union.anon* %14839 to i64*
  %14840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14841 = getelementptr inbounds %struct.GPR, %struct.GPR* %14840, i32 0, i32 9
  %14842 = getelementptr inbounds %struct.Reg, %struct.Reg* %14841, i32 0, i32 0
  %RSI.i498 = bitcast %union.anon* %14842 to i64*
  %14843 = load i64, i64* %RSI.i498
  %14844 = add i64 %14843, 96
  %14845 = load i64, i64* %PC.i496
  %14846 = add i64 %14845, 3
  store i64 %14846, i64* %PC.i496
  %14847 = inttoptr i64 %14844 to i32*
  %14848 = load i32, i32* %14847
  %14849 = zext i32 %14848 to i64
  store i64 %14849, i64* %RCX.i497, align 8
  store %struct.Memory* %loadMem_40bce3, %struct.Memory** %MEMORY
  %loadMem_40bce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14851 = getelementptr inbounds %struct.GPR, %struct.GPR* %14850, i32 0, i32 33
  %14852 = getelementptr inbounds %struct.Reg, %struct.Reg* %14851, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %14852 to i64*
  %14853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14854 = getelementptr inbounds %struct.GPR, %struct.GPR* %14853, i32 0, i32 7
  %14855 = getelementptr inbounds %struct.Reg, %struct.Reg* %14854, i32 0, i32 0
  %RDX.i495 = bitcast %union.anon* %14855 to i64*
  %14856 = load i64, i64* %PC.i494
  %14857 = add i64 %14856, 8
  store i64 %14857, i64* %PC.i494
  %14858 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %14858, i64* %RDX.i495, align 8
  store %struct.Memory* %loadMem_40bce6, %struct.Memory** %MEMORY
  %loadMem_40bcee = load %struct.Memory*, %struct.Memory** %MEMORY
  %14859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14860 = getelementptr inbounds %struct.GPR, %struct.GPR* %14859, i32 0, i32 33
  %14861 = getelementptr inbounds %struct.Reg, %struct.Reg* %14860, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %14861 to i64*
  %14862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14863 = getelementptr inbounds %struct.GPR, %struct.GPR* %14862, i32 0, i32 7
  %14864 = getelementptr inbounds %struct.Reg, %struct.Reg* %14863, i32 0, i32 0
  %RDX.i492 = bitcast %union.anon* %14864 to i64*
  %14865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14866 = getelementptr inbounds %struct.GPR, %struct.GPR* %14865, i32 0, i32 9
  %14867 = getelementptr inbounds %struct.Reg, %struct.Reg* %14866, i32 0, i32 0
  %RSI.i493 = bitcast %union.anon* %14867 to i64*
  %14868 = load i64, i64* %RDX.i492
  %14869 = load i64, i64* %PC.i491
  %14870 = add i64 %14869, 3
  store i64 %14870, i64* %PC.i491
  store i64 %14868, i64* %RSI.i493, align 8
  store %struct.Memory* %loadMem_40bcee, %struct.Memory** %MEMORY
  %loadMem_40bcf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14872 = getelementptr inbounds %struct.GPR, %struct.GPR* %14871, i32 0, i32 33
  %14873 = getelementptr inbounds %struct.Reg, %struct.Reg* %14872, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %14873 to i64*
  %14874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14875 = getelementptr inbounds %struct.GPR, %struct.GPR* %14874, i32 0, i32 9
  %14876 = getelementptr inbounds %struct.Reg, %struct.Reg* %14875, i32 0, i32 0
  %RSI.i490 = bitcast %union.anon* %14876 to i64*
  %14877 = load i64, i64* %RSI.i490
  %14878 = load i64, i64* %PC.i489
  %14879 = add i64 %14878, 4
  store i64 %14879, i64* %PC.i489
  %14880 = add i64 16, %14877
  store i64 %14880, i64* %RSI.i490, align 8
  %14881 = icmp ult i64 %14880, %14877
  %14882 = icmp ult i64 %14880, 16
  %14883 = or i1 %14881, %14882
  %14884 = zext i1 %14883 to i8
  %14885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14884, i8* %14885, align 1
  %14886 = trunc i64 %14880 to i32
  %14887 = and i32 %14886, 255
  %14888 = call i32 @llvm.ctpop.i32(i32 %14887)
  %14889 = trunc i32 %14888 to i8
  %14890 = and i8 %14889, 1
  %14891 = xor i8 %14890, 1
  %14892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14891, i8* %14892, align 1
  %14893 = xor i64 16, %14877
  %14894 = xor i64 %14893, %14880
  %14895 = lshr i64 %14894, 4
  %14896 = trunc i64 %14895 to i8
  %14897 = and i8 %14896, 1
  %14898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14897, i8* %14898, align 1
  %14899 = icmp eq i64 %14880, 0
  %14900 = zext i1 %14899 to i8
  %14901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14900, i8* %14901, align 1
  %14902 = lshr i64 %14880, 63
  %14903 = trunc i64 %14902 to i8
  %14904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14903, i8* %14904, align 1
  %14905 = lshr i64 %14877, 63
  %14906 = xor i64 %14902, %14905
  %14907 = add i64 %14906, %14902
  %14908 = icmp eq i64 %14907, 2
  %14909 = zext i1 %14908 to i8
  %14910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14909, i8* %14910, align 1
  store %struct.Memory* %loadMem_40bcf1, %struct.Memory** %MEMORY
  %loadMem_40bcf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14912 = getelementptr inbounds %struct.GPR, %struct.GPR* %14911, i32 0, i32 33
  %14913 = getelementptr inbounds %struct.Reg, %struct.Reg* %14912, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %14913 to i64*
  %14914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14915 = getelementptr inbounds %struct.GPR, %struct.GPR* %14914, i32 0, i32 9
  %14916 = getelementptr inbounds %struct.Reg, %struct.Reg* %14915, i32 0, i32 0
  %RSI.i488 = bitcast %union.anon* %14916 to i64*
  %14917 = load i64, i64* %RSI.i488
  %14918 = load i64, i64* %PC.i487
  %14919 = add i64 %14918, 8
  store i64 %14919, i64* %PC.i487
  store i64 %14917, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40bcf5, %struct.Memory** %MEMORY
  %loadMem_40bcfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14921 = getelementptr inbounds %struct.GPR, %struct.GPR* %14920, i32 0, i32 33
  %14922 = getelementptr inbounds %struct.Reg, %struct.Reg* %14921, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %14922 to i64*
  %14923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14924 = getelementptr inbounds %struct.GPR, %struct.GPR* %14923, i32 0, i32 5
  %14925 = getelementptr inbounds %struct.Reg, %struct.Reg* %14924, i32 0, i32 0
  %ECX.i485 = bitcast %union.anon* %14925 to i32*
  %14926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14927 = getelementptr inbounds %struct.GPR, %struct.GPR* %14926, i32 0, i32 7
  %14928 = getelementptr inbounds %struct.Reg, %struct.Reg* %14927, i32 0, i32 0
  %RDX.i486 = bitcast %union.anon* %14928 to i64*
  %14929 = load i64, i64* %RDX.i486
  %14930 = add i64 %14929, 8
  %14931 = load i32, i32* %ECX.i485
  %14932 = zext i32 %14931 to i64
  %14933 = load i64, i64* %PC.i484
  %14934 = add i64 %14933, 3
  store i64 %14934, i64* %PC.i484
  %14935 = inttoptr i64 %14930 to i32*
  store i32 %14931, i32* %14935
  store %struct.Memory* %loadMem_40bcfd, %struct.Memory** %MEMORY
  %loadMem_40bd00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14937 = getelementptr inbounds %struct.GPR, %struct.GPR* %14936, i32 0, i32 33
  %14938 = getelementptr inbounds %struct.Reg, %struct.Reg* %14937, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %14938 to i64*
  %14939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14940 = getelementptr inbounds %struct.GPR, %struct.GPR* %14939, i32 0, i32 7
  %14941 = getelementptr inbounds %struct.Reg, %struct.Reg* %14940, i32 0, i32 0
  %RDX.i482 = bitcast %union.anon* %14941 to i64*
  %14942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14943 = getelementptr inbounds %struct.GPR, %struct.GPR* %14942, i32 0, i32 15
  %14944 = getelementptr inbounds %struct.Reg, %struct.Reg* %14943, i32 0, i32 0
  %RBP.i483 = bitcast %union.anon* %14944 to i64*
  %14945 = load i64, i64* %RBP.i483
  %14946 = sub i64 %14945, 4
  %14947 = load i64, i64* %PC.i481
  %14948 = add i64 %14947, 4
  store i64 %14948, i64* %PC.i481
  %14949 = inttoptr i64 %14946 to i32*
  %14950 = load i32, i32* %14949
  %14951 = sext i32 %14950 to i64
  store i64 %14951, i64* %RDX.i482, align 8
  store %struct.Memory* %loadMem_40bd00, %struct.Memory** %MEMORY
  %loadMem_40bd04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14953 = getelementptr inbounds %struct.GPR, %struct.GPR* %14952, i32 0, i32 33
  %14954 = getelementptr inbounds %struct.Reg, %struct.Reg* %14953, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %14954 to i64*
  %14955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14956 = getelementptr inbounds %struct.GPR, %struct.GPR* %14955, i32 0, i32 5
  %14957 = getelementptr inbounds %struct.Reg, %struct.Reg* %14956, i32 0, i32 0
  %RCX.i479 = bitcast %union.anon* %14957 to i64*
  %14958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14959 = getelementptr inbounds %struct.GPR, %struct.GPR* %14958, i32 0, i32 7
  %14960 = getelementptr inbounds %struct.Reg, %struct.Reg* %14959, i32 0, i32 0
  %RDX.i480 = bitcast %union.anon* %14960 to i64*
  %14961 = load i64, i64* %RDX.i480
  %14962 = mul i64 %14961, 4
  %14963 = add i64 %14962, 11187184
  %14964 = load i64, i64* %PC.i478
  %14965 = add i64 %14964, 7
  store i64 %14965, i64* %PC.i478
  %14966 = inttoptr i64 %14963 to i32*
  %14967 = load i32, i32* %14966
  %14968 = zext i32 %14967 to i64
  store i64 %14968, i64* %RCX.i479, align 8
  store %struct.Memory* %loadMem_40bd04, %struct.Memory** %MEMORY
  %loadMem_40bd0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14970 = getelementptr inbounds %struct.GPR, %struct.GPR* %14969, i32 0, i32 33
  %14971 = getelementptr inbounds %struct.Reg, %struct.Reg* %14970, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %14971 to i64*
  %14972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14973 = getelementptr inbounds %struct.GPR, %struct.GPR* %14972, i32 0, i32 7
  %14974 = getelementptr inbounds %struct.Reg, %struct.Reg* %14973, i32 0, i32 0
  %RDX.i476 = bitcast %union.anon* %14974 to i64*
  %14975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14976 = getelementptr inbounds %struct.GPR, %struct.GPR* %14975, i32 0, i32 15
  %14977 = getelementptr inbounds %struct.Reg, %struct.Reg* %14976, i32 0, i32 0
  %RBP.i477 = bitcast %union.anon* %14977 to i64*
  %14978 = load i64, i64* %RBP.i477
  %14979 = sub i64 %14978, 40
  %14980 = load i64, i64* %PC.i475
  %14981 = add i64 %14980, 4
  store i64 %14981, i64* %PC.i475
  %14982 = inttoptr i64 %14979 to i32*
  %14983 = load i32, i32* %14982
  %14984 = sext i32 %14983 to i64
  store i64 %14984, i64* %RDX.i476, align 8
  store %struct.Memory* %loadMem_40bd0b, %struct.Memory** %MEMORY
  %loadMem_40bd0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14986 = getelementptr inbounds %struct.GPR, %struct.GPR* %14985, i32 0, i32 33
  %14987 = getelementptr inbounds %struct.Reg, %struct.Reg* %14986, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %14987 to i64*
  %14988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14989 = getelementptr inbounds %struct.GPR, %struct.GPR* %14988, i32 0, i32 7
  %14990 = getelementptr inbounds %struct.Reg, %struct.Reg* %14989, i32 0, i32 0
  %RDX.i474 = bitcast %union.anon* %14990 to i64*
  %14991 = load i64, i64* %RDX.i474
  %14992 = load i64, i64* %PC.i473
  %14993 = add i64 %14992, 7
  store i64 %14993, i64* %PC.i473
  %14994 = sext i64 %14991 to i128
  %14995 = and i128 %14994, -18446744073709551616
  %14996 = zext i64 %14991 to i128
  %14997 = or i128 %14995, %14996
  %14998 = mul i128 744, %14997
  %14999 = trunc i128 %14998 to i64
  store i64 %14999, i64* %RDX.i474, align 8
  %15000 = sext i64 %14999 to i128
  %15001 = icmp ne i128 %15000, %14998
  %15002 = zext i1 %15001 to i8
  %15003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15002, i8* %15003, align 1
  %15004 = trunc i128 %14998 to i32
  %15005 = and i32 %15004, 255
  %15006 = call i32 @llvm.ctpop.i32(i32 %15005)
  %15007 = trunc i32 %15006 to i8
  %15008 = and i8 %15007, 1
  %15009 = xor i8 %15008, 1
  %15010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15009, i8* %15010, align 1
  %15011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15011, align 1
  %15012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15012, align 1
  %15013 = lshr i64 %14999, 63
  %15014 = trunc i64 %15013 to i8
  %15015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15014, i8* %15015, align 1
  %15016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15002, i8* %15016, align 1
  store %struct.Memory* %loadMem_40bd0f, %struct.Memory** %MEMORY
  %loadMem_40bd16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15018 = getelementptr inbounds %struct.GPR, %struct.GPR* %15017, i32 0, i32 33
  %15019 = getelementptr inbounds %struct.Reg, %struct.Reg* %15018, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %15019 to i64*
  %15020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15021 = getelementptr inbounds %struct.GPR, %struct.GPR* %15020, i32 0, i32 1
  %15022 = getelementptr inbounds %struct.Reg, %struct.Reg* %15021, i32 0, i32 0
  %RAX.i471 = bitcast %union.anon* %15022 to i64*
  %15023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15024 = getelementptr inbounds %struct.GPR, %struct.GPR* %15023, i32 0, i32 9
  %15025 = getelementptr inbounds %struct.Reg, %struct.Reg* %15024, i32 0, i32 0
  %RSI.i472 = bitcast %union.anon* %15025 to i64*
  %15026 = load i64, i64* %RAX.i471
  %15027 = load i64, i64* %PC.i470
  %15028 = add i64 %15027, 3
  store i64 %15028, i64* %PC.i470
  store i64 %15026, i64* %RSI.i472, align 8
  store %struct.Memory* %loadMem_40bd16, %struct.Memory** %MEMORY
  %loadMem_40bd19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15030 = getelementptr inbounds %struct.GPR, %struct.GPR* %15029, i32 0, i32 33
  %15031 = getelementptr inbounds %struct.Reg, %struct.Reg* %15030, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %15031 to i64*
  %15032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15033 = getelementptr inbounds %struct.GPR, %struct.GPR* %15032, i32 0, i32 7
  %15034 = getelementptr inbounds %struct.Reg, %struct.Reg* %15033, i32 0, i32 0
  %RDX.i468 = bitcast %union.anon* %15034 to i64*
  %15035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15036 = getelementptr inbounds %struct.GPR, %struct.GPR* %15035, i32 0, i32 9
  %15037 = getelementptr inbounds %struct.Reg, %struct.Reg* %15036, i32 0, i32 0
  %RSI.i469 = bitcast %union.anon* %15037 to i64*
  %15038 = load i64, i64* %RSI.i469
  %15039 = load i64, i64* %RDX.i468
  %15040 = load i64, i64* %PC.i467
  %15041 = add i64 %15040, 3
  store i64 %15041, i64* %PC.i467
  %15042 = add i64 %15039, %15038
  store i64 %15042, i64* %RSI.i469, align 8
  %15043 = icmp ult i64 %15042, %15038
  %15044 = icmp ult i64 %15042, %15039
  %15045 = or i1 %15043, %15044
  %15046 = zext i1 %15045 to i8
  %15047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15046, i8* %15047, align 1
  %15048 = trunc i64 %15042 to i32
  %15049 = and i32 %15048, 255
  %15050 = call i32 @llvm.ctpop.i32(i32 %15049)
  %15051 = trunc i32 %15050 to i8
  %15052 = and i8 %15051, 1
  %15053 = xor i8 %15052, 1
  %15054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15053, i8* %15054, align 1
  %15055 = xor i64 %15039, %15038
  %15056 = xor i64 %15055, %15042
  %15057 = lshr i64 %15056, 4
  %15058 = trunc i64 %15057 to i8
  %15059 = and i8 %15058, 1
  %15060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15059, i8* %15060, align 1
  %15061 = icmp eq i64 %15042, 0
  %15062 = zext i1 %15061 to i8
  %15063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15062, i8* %15063, align 1
  %15064 = lshr i64 %15042, 63
  %15065 = trunc i64 %15064 to i8
  %15066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15065, i8* %15066, align 1
  %15067 = lshr i64 %15038, 63
  %15068 = lshr i64 %15039, 63
  %15069 = xor i64 %15064, %15067
  %15070 = xor i64 %15064, %15068
  %15071 = add i64 %15069, %15070
  %15072 = icmp eq i64 %15071, 2
  %15073 = zext i1 %15072 to i8
  %15074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15073, i8* %15074, align 1
  store %struct.Memory* %loadMem_40bd19, %struct.Memory** %MEMORY
  %loadMem_40bd1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15076 = getelementptr inbounds %struct.GPR, %struct.GPR* %15075, i32 0, i32 33
  %15077 = getelementptr inbounds %struct.Reg, %struct.Reg* %15076, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %15077 to i64*
  %15078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15079 = getelementptr inbounds %struct.GPR, %struct.GPR* %15078, i32 0, i32 7
  %15080 = getelementptr inbounds %struct.Reg, %struct.Reg* %15079, i32 0, i32 0
  %RDX.i465 = bitcast %union.anon* %15080 to i64*
  %15081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15082 = getelementptr inbounds %struct.GPR, %struct.GPR* %15081, i32 0, i32 15
  %15083 = getelementptr inbounds %struct.Reg, %struct.Reg* %15082, i32 0, i32 0
  %RBP.i466 = bitcast %union.anon* %15083 to i64*
  %15084 = load i64, i64* %RBP.i466
  %15085 = sub i64 %15084, 40
  %15086 = load i64, i64* %PC.i464
  %15087 = add i64 %15086, 4
  store i64 %15087, i64* %PC.i464
  %15088 = inttoptr i64 %15085 to i32*
  %15089 = load i32, i32* %15088
  %15090 = sext i32 %15089 to i64
  store i64 %15090, i64* %RDX.i465, align 8
  store %struct.Memory* %loadMem_40bd1c, %struct.Memory** %MEMORY
  %loadMem_40bd20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15092 = getelementptr inbounds %struct.GPR, %struct.GPR* %15091, i32 0, i32 33
  %15093 = getelementptr inbounds %struct.Reg, %struct.Reg* %15092, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %15093 to i64*
  %15094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15095 = getelementptr inbounds %struct.GPR, %struct.GPR* %15094, i32 0, i32 7
  %15096 = getelementptr inbounds %struct.Reg, %struct.Reg* %15095, i32 0, i32 0
  %RDX.i463 = bitcast %union.anon* %15096 to i64*
  %15097 = load i64, i64* %RDX.i463
  %15098 = load i64, i64* %PC.i462
  %15099 = add i64 %15098, 7
  store i64 %15099, i64* %PC.i462
  %15100 = sext i64 %15097 to i128
  %15101 = and i128 %15100, -18446744073709551616
  %15102 = zext i64 %15097 to i128
  %15103 = or i128 %15101, %15102
  %15104 = mul i128 744, %15103
  %15105 = trunc i128 %15104 to i64
  store i64 %15105, i64* %RDX.i463, align 8
  %15106 = sext i64 %15105 to i128
  %15107 = icmp ne i128 %15106, %15104
  %15108 = zext i1 %15107 to i8
  %15109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15108, i8* %15109, align 1
  %15110 = trunc i128 %15104 to i32
  %15111 = and i32 %15110, 255
  %15112 = call i32 @llvm.ctpop.i32(i32 %15111)
  %15113 = trunc i32 %15112 to i8
  %15114 = and i8 %15113, 1
  %15115 = xor i8 %15114, 1
  %15116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15115, i8* %15116, align 1
  %15117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15117, align 1
  %15118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15118, align 1
  %15119 = lshr i64 %15105, 63
  %15120 = trunc i64 %15119 to i8
  %15121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15120, i8* %15121, align 1
  %15122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15108, i8* %15122, align 1
  store %struct.Memory* %loadMem_40bd20, %struct.Memory** %MEMORY
  %loadMem_40bd27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15124 = getelementptr inbounds %struct.GPR, %struct.GPR* %15123, i32 0, i32 33
  %15125 = getelementptr inbounds %struct.Reg, %struct.Reg* %15124, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %15125 to i64*
  %15126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15127 = getelementptr inbounds %struct.GPR, %struct.GPR* %15126, i32 0, i32 1
  %15128 = getelementptr inbounds %struct.Reg, %struct.Reg* %15127, i32 0, i32 0
  %RAX.i460 = bitcast %union.anon* %15128 to i64*
  %15129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15130 = getelementptr inbounds %struct.GPR, %struct.GPR* %15129, i32 0, i32 11
  %15131 = getelementptr inbounds %struct.Reg, %struct.Reg* %15130, i32 0, i32 0
  %RDI.i461 = bitcast %union.anon* %15131 to i64*
  %15132 = load i64, i64* %RAX.i460
  %15133 = load i64, i64* %PC.i459
  %15134 = add i64 %15133, 3
  store i64 %15134, i64* %PC.i459
  store i64 %15132, i64* %RDI.i461, align 8
  store %struct.Memory* %loadMem_40bd27, %struct.Memory** %MEMORY
  %loadMem_40bd2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15136 = getelementptr inbounds %struct.GPR, %struct.GPR* %15135, i32 0, i32 33
  %15137 = getelementptr inbounds %struct.Reg, %struct.Reg* %15136, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %15137 to i64*
  %15138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15139 = getelementptr inbounds %struct.GPR, %struct.GPR* %15138, i32 0, i32 7
  %15140 = getelementptr inbounds %struct.Reg, %struct.Reg* %15139, i32 0, i32 0
  %RDX.i457 = bitcast %union.anon* %15140 to i64*
  %15141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15142 = getelementptr inbounds %struct.GPR, %struct.GPR* %15141, i32 0, i32 11
  %15143 = getelementptr inbounds %struct.Reg, %struct.Reg* %15142, i32 0, i32 0
  %RDI.i458 = bitcast %union.anon* %15143 to i64*
  %15144 = load i64, i64* %RDI.i458
  %15145 = load i64, i64* %RDX.i457
  %15146 = load i64, i64* %PC.i456
  %15147 = add i64 %15146, 3
  store i64 %15147, i64* %PC.i456
  %15148 = add i64 %15145, %15144
  store i64 %15148, i64* %RDI.i458, align 8
  %15149 = icmp ult i64 %15148, %15144
  %15150 = icmp ult i64 %15148, %15145
  %15151 = or i1 %15149, %15150
  %15152 = zext i1 %15151 to i8
  %15153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15152, i8* %15153, align 1
  %15154 = trunc i64 %15148 to i32
  %15155 = and i32 %15154, 255
  %15156 = call i32 @llvm.ctpop.i32(i32 %15155)
  %15157 = trunc i32 %15156 to i8
  %15158 = and i8 %15157, 1
  %15159 = xor i8 %15158, 1
  %15160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15159, i8* %15160, align 1
  %15161 = xor i64 %15145, %15144
  %15162 = xor i64 %15161, %15148
  %15163 = lshr i64 %15162, 4
  %15164 = trunc i64 %15163 to i8
  %15165 = and i8 %15164, 1
  %15166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15165, i8* %15166, align 1
  %15167 = icmp eq i64 %15148, 0
  %15168 = zext i1 %15167 to i8
  %15169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15168, i8* %15169, align 1
  %15170 = lshr i64 %15148, 63
  %15171 = trunc i64 %15170 to i8
  %15172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15171, i8* %15172, align 1
  %15173 = lshr i64 %15144, 63
  %15174 = lshr i64 %15145, 63
  %15175 = xor i64 %15170, %15173
  %15176 = xor i64 %15170, %15174
  %15177 = add i64 %15175, %15176
  %15178 = icmp eq i64 %15177, 2
  %15179 = zext i1 %15178 to i8
  %15180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15179, i8* %15180, align 1
  store %struct.Memory* %loadMem_40bd2a, %struct.Memory** %MEMORY
  %loadMem_40bd2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15182 = getelementptr inbounds %struct.GPR, %struct.GPR* %15181, i32 0, i32 33
  %15183 = getelementptr inbounds %struct.Reg, %struct.Reg* %15182, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %15183 to i64*
  %15184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15185 = getelementptr inbounds %struct.GPR, %struct.GPR* %15184, i32 0, i32 17
  %15186 = getelementptr inbounds %struct.Reg, %struct.Reg* %15185, i32 0, i32 0
  %R8D.i454 = bitcast %union.anon* %15186 to i32*
  %15187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15188 = getelementptr inbounds %struct.GPR, %struct.GPR* %15187, i32 0, i32 11
  %15189 = getelementptr inbounds %struct.Reg, %struct.Reg* %15188, i32 0, i32 0
  %RDI.i455 = bitcast %union.anon* %15189 to i64*
  %15190 = bitcast i32* %R8D.i454 to i64*
  %15191 = load i64, i64* %RDI.i455
  %15192 = add i64 %15191, 96
  %15193 = load i64, i64* %PC.i453
  %15194 = add i64 %15193, 4
  store i64 %15194, i64* %PC.i453
  %15195 = inttoptr i64 %15192 to i32*
  %15196 = load i32, i32* %15195
  %15197 = zext i32 %15196 to i64
  store i64 %15197, i64* %15190, align 8
  store %struct.Memory* %loadMem_40bd2d, %struct.Memory** %MEMORY
  %loadMem_40bd31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15199 = getelementptr inbounds %struct.GPR, %struct.GPR* %15198, i32 0, i32 33
  %15200 = getelementptr inbounds %struct.Reg, %struct.Reg* %15199, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %15200 to i64*
  %15201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15202 = getelementptr inbounds %struct.GPR, %struct.GPR* %15201, i32 0, i32 17
  %15203 = getelementptr inbounds %struct.Reg, %struct.Reg* %15202, i32 0, i32 0
  %R8D.i451 = bitcast %union.anon* %15203 to i32*
  %15204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15205 = getelementptr inbounds %struct.GPR, %struct.GPR* %15204, i32 0, i32 19
  %15206 = getelementptr inbounds %struct.Reg, %struct.Reg* %15205, i32 0, i32 0
  %R9D.i452 = bitcast %union.anon* %15206 to i32*
  %15207 = bitcast i32* %R9D.i452 to i64*
  %15208 = load i32, i32* %R8D.i451
  %15209 = zext i32 %15208 to i64
  %15210 = load i64, i64* %PC.i450
  %15211 = add i64 %15210, 3
  store i64 %15211, i64* %PC.i450
  %15212 = and i64 %15209, 4294967295
  store i64 %15212, i64* %15207, align 8
  store %struct.Memory* %loadMem_40bd31, %struct.Memory** %MEMORY
  %loadMem_40bd34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15214 = getelementptr inbounds %struct.GPR, %struct.GPR* %15213, i32 0, i32 33
  %15215 = getelementptr inbounds %struct.Reg, %struct.Reg* %15214, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %15215 to i64*
  %15216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15217 = getelementptr inbounds %struct.GPR, %struct.GPR* %15216, i32 0, i32 19
  %15218 = getelementptr inbounds %struct.Reg, %struct.Reg* %15217, i32 0, i32 0
  %R9D.i449 = bitcast %union.anon* %15218 to i32*
  %15219 = bitcast i32* %R9D.i449 to i64*
  %15220 = load i32, i32* %R9D.i449
  %15221 = zext i32 %15220 to i64
  %15222 = load i64, i64* %PC.i448
  %15223 = add i64 %15222, 4
  store i64 %15223, i64* %PC.i448
  %15224 = add i32 1, %15220
  %15225 = zext i32 %15224 to i64
  store i64 %15225, i64* %15219, align 8
  %15226 = icmp ult i32 %15224, %15220
  %15227 = icmp ult i32 %15224, 1
  %15228 = or i1 %15226, %15227
  %15229 = zext i1 %15228 to i8
  %15230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15229, i8* %15230, align 1
  %15231 = and i32 %15224, 255
  %15232 = call i32 @llvm.ctpop.i32(i32 %15231)
  %15233 = trunc i32 %15232 to i8
  %15234 = and i8 %15233, 1
  %15235 = xor i8 %15234, 1
  %15236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15235, i8* %15236, align 1
  %15237 = xor i64 1, %15221
  %15238 = trunc i64 %15237 to i32
  %15239 = xor i32 %15238, %15224
  %15240 = lshr i32 %15239, 4
  %15241 = trunc i32 %15240 to i8
  %15242 = and i8 %15241, 1
  %15243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15242, i8* %15243, align 1
  %15244 = icmp eq i32 %15224, 0
  %15245 = zext i1 %15244 to i8
  %15246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15245, i8* %15246, align 1
  %15247 = lshr i32 %15224, 31
  %15248 = trunc i32 %15247 to i8
  %15249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15248, i8* %15249, align 1
  %15250 = lshr i32 %15220, 31
  %15251 = xor i32 %15247, %15250
  %15252 = add i32 %15251, %15247
  %15253 = icmp eq i32 %15252, 2
  %15254 = zext i1 %15253 to i8
  %15255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15254, i8* %15255, align 1
  store %struct.Memory* %loadMem_40bd34, %struct.Memory** %MEMORY
  %loadMem_40bd38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15257 = getelementptr inbounds %struct.GPR, %struct.GPR* %15256, i32 0, i32 33
  %15258 = getelementptr inbounds %struct.Reg, %struct.Reg* %15257, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %15258 to i64*
  %15259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15260 = getelementptr inbounds %struct.GPR, %struct.GPR* %15259, i32 0, i32 19
  %15261 = getelementptr inbounds %struct.Reg, %struct.Reg* %15260, i32 0, i32 0
  %R9D.i446 = bitcast %union.anon* %15261 to i32*
  %15262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15263 = getelementptr inbounds %struct.GPR, %struct.GPR* %15262, i32 0, i32 11
  %15264 = getelementptr inbounds %struct.Reg, %struct.Reg* %15263, i32 0, i32 0
  %RDI.i447 = bitcast %union.anon* %15264 to i64*
  %15265 = load i64, i64* %RDI.i447
  %15266 = add i64 %15265, 96
  %15267 = load i32, i32* %R9D.i446
  %15268 = zext i32 %15267 to i64
  %15269 = load i64, i64* %PC.i445
  %15270 = add i64 %15269, 4
  store i64 %15270, i64* %PC.i445
  %15271 = inttoptr i64 %15266 to i32*
  store i32 %15267, i32* %15271
  store %struct.Memory* %loadMem_40bd38, %struct.Memory** %MEMORY
  %loadMem_40bd3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15273 = getelementptr inbounds %struct.GPR, %struct.GPR* %15272, i32 0, i32 33
  %15274 = getelementptr inbounds %struct.Reg, %struct.Reg* %15273, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %15274 to i64*
  %15275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15276 = getelementptr inbounds %struct.GPR, %struct.GPR* %15275, i32 0, i32 17
  %15277 = getelementptr inbounds %struct.Reg, %struct.Reg* %15276, i32 0, i32 0
  %R8D.i443 = bitcast %union.anon* %15277 to i32*
  %15278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15279 = getelementptr inbounds %struct.GPR, %struct.GPR* %15278, i32 0, i32 7
  %15280 = getelementptr inbounds %struct.Reg, %struct.Reg* %15279, i32 0, i32 0
  %RDX.i444 = bitcast %union.anon* %15280 to i64*
  %15281 = load i32, i32* %R8D.i443
  %15282 = zext i32 %15281 to i64
  %15283 = load i64, i64* %PC.i442
  %15284 = add i64 %15283, 3
  store i64 %15284, i64* %PC.i442
  %15285 = shl i64 %15282, 32
  %15286 = ashr exact i64 %15285, 32
  store i64 %15286, i64* %RDX.i444, align 8
  store %struct.Memory* %loadMem_40bd3c, %struct.Memory** %MEMORY
  %loadMem_40bd3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15288 = getelementptr inbounds %struct.GPR, %struct.GPR* %15287, i32 0, i32 33
  %15289 = getelementptr inbounds %struct.Reg, %struct.Reg* %15288, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %15289 to i64*
  %15290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15291 = getelementptr inbounds %struct.GPR, %struct.GPR* %15290, i32 0, i32 5
  %15292 = getelementptr inbounds %struct.Reg, %struct.Reg* %15291, i32 0, i32 0
  %ECX.i439 = bitcast %union.anon* %15292 to i32*
  %15293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15294 = getelementptr inbounds %struct.GPR, %struct.GPR* %15293, i32 0, i32 7
  %15295 = getelementptr inbounds %struct.Reg, %struct.Reg* %15294, i32 0, i32 0
  %RDX.i440 = bitcast %union.anon* %15295 to i64*
  %15296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15297 = getelementptr inbounds %struct.GPR, %struct.GPR* %15296, i32 0, i32 9
  %15298 = getelementptr inbounds %struct.Reg, %struct.Reg* %15297, i32 0, i32 0
  %RSI.i441 = bitcast %union.anon* %15298 to i64*
  %15299 = load i64, i64* %RSI.i441
  %15300 = load i64, i64* %RDX.i440
  %15301 = mul i64 %15300, 4
  %15302 = add i64 %15299, 100
  %15303 = add i64 %15302, %15301
  %15304 = load i32, i32* %ECX.i439
  %15305 = zext i32 %15304 to i64
  %15306 = load i64, i64* %PC.i438
  %15307 = add i64 %15306, 4
  store i64 %15307, i64* %PC.i438
  %15308 = inttoptr i64 %15303 to i32*
  store i32 %15304, i32* %15308
  store %struct.Memory* %loadMem_40bd3f, %struct.Memory** %MEMORY
  %loadMem_40bd43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15310 = getelementptr inbounds %struct.GPR, %struct.GPR* %15309, i32 0, i32 33
  %15311 = getelementptr inbounds %struct.Reg, %struct.Reg* %15310, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %15311 to i64*
  %15312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15313 = getelementptr inbounds %struct.GPR, %struct.GPR* %15312, i32 0, i32 5
  %15314 = getelementptr inbounds %struct.Reg, %struct.Reg* %15313, i32 0, i32 0
  %RCX.i437 = bitcast %union.anon* %15314 to i64*
  %15315 = load i64, i64* %PC.i436
  %15316 = add i64 %15315, 7
  store i64 %15316, i64* %PC.i436
  %15317 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %15318 = zext i32 %15317 to i64
  store i64 %15318, i64* %RCX.i437, align 8
  store %struct.Memory* %loadMem_40bd43, %struct.Memory** %MEMORY
  %loadMem_40bd4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15320 = getelementptr inbounds %struct.GPR, %struct.GPR* %15319, i32 0, i32 33
  %15321 = getelementptr inbounds %struct.Reg, %struct.Reg* %15320, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %15321 to i64*
  %15322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15323 = getelementptr inbounds %struct.GPR, %struct.GPR* %15322, i32 0, i32 17
  %15324 = getelementptr inbounds %struct.Reg, %struct.Reg* %15323, i32 0, i32 0
  %R8D.i434 = bitcast %union.anon* %15324 to i32*
  %15325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15326 = getelementptr inbounds %struct.GPR, %struct.GPR* %15325, i32 0, i32 15
  %15327 = getelementptr inbounds %struct.Reg, %struct.Reg* %15326, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %15327 to i64*
  %15328 = bitcast i32* %R8D.i434 to i64*
  %15329 = load i64, i64* %RBP.i435
  %15330 = sub i64 %15329, 4
  %15331 = load i64, i64* %PC.i433
  %15332 = add i64 %15331, 4
  store i64 %15332, i64* %PC.i433
  %15333 = inttoptr i64 %15330 to i32*
  %15334 = load i32, i32* %15333
  %15335 = zext i32 %15334 to i64
  store i64 %15335, i64* %15328, align 8
  store %struct.Memory* %loadMem_40bd4a, %struct.Memory** %MEMORY
  %loadMem_40bd4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15337 = getelementptr inbounds %struct.GPR, %struct.GPR* %15336, i32 0, i32 33
  %15338 = getelementptr inbounds %struct.Reg, %struct.Reg* %15337, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %15338 to i64*
  %15339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15340 = getelementptr inbounds %struct.GPR, %struct.GPR* %15339, i32 0, i32 17
  %15341 = getelementptr inbounds %struct.Reg, %struct.Reg* %15340, i32 0, i32 0
  %R8D.i432 = bitcast %union.anon* %15341 to i32*
  %15342 = bitcast i32* %R8D.i432 to i64*
  %15343 = load i32, i32* %R8D.i432
  %15344 = zext i32 %15343 to i64
  %15345 = load i64, i64* %PC.i431
  %15346 = add i64 %15345, 4
  store i64 %15346, i64* %PC.i431
  %15347 = sub i32 %15343, 20
  %15348 = zext i32 %15347 to i64
  store i64 %15348, i64* %15342, align 8
  %15349 = icmp ult i32 %15343, 20
  %15350 = zext i1 %15349 to i8
  %15351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15350, i8* %15351, align 1
  %15352 = and i32 %15347, 255
  %15353 = call i32 @llvm.ctpop.i32(i32 %15352)
  %15354 = trunc i32 %15353 to i8
  %15355 = and i8 %15354, 1
  %15356 = xor i8 %15355, 1
  %15357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15356, i8* %15357, align 1
  %15358 = xor i64 20, %15344
  %15359 = trunc i64 %15358 to i32
  %15360 = xor i32 %15359, %15347
  %15361 = lshr i32 %15360, 4
  %15362 = trunc i32 %15361 to i8
  %15363 = and i8 %15362, 1
  %15364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15363, i8* %15364, align 1
  %15365 = icmp eq i32 %15347, 0
  %15366 = zext i1 %15365 to i8
  %15367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15366, i8* %15367, align 1
  %15368 = lshr i32 %15347, 31
  %15369 = trunc i32 %15368 to i8
  %15370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15369, i8* %15370, align 1
  %15371 = lshr i32 %15343, 31
  %15372 = xor i32 %15368, %15371
  %15373 = add i32 %15372, %15371
  %15374 = icmp eq i32 %15373, 2
  %15375 = zext i1 %15374 to i8
  %15376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15375, i8* %15376, align 1
  store %struct.Memory* %loadMem_40bd4e, %struct.Memory** %MEMORY
  %loadMem_40bd52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15378 = getelementptr inbounds %struct.GPR, %struct.GPR* %15377, i32 0, i32 33
  %15379 = getelementptr inbounds %struct.Reg, %struct.Reg* %15378, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %15379 to i64*
  %15380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15381 = getelementptr inbounds %struct.GPR, %struct.GPR* %15380, i32 0, i32 17
  %15382 = getelementptr inbounds %struct.Reg, %struct.Reg* %15381, i32 0, i32 0
  %R8D.i429 = bitcast %union.anon* %15382 to i32*
  %15383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15384 = getelementptr inbounds %struct.GPR, %struct.GPR* %15383, i32 0, i32 7
  %15385 = getelementptr inbounds %struct.Reg, %struct.Reg* %15384, i32 0, i32 0
  %RDX.i430 = bitcast %union.anon* %15385 to i64*
  %15386 = load i32, i32* %R8D.i429
  %15387 = zext i32 %15386 to i64
  %15388 = load i64, i64* %PC.i428
  %15389 = add i64 %15388, 3
  store i64 %15389, i64* %PC.i428
  %15390 = shl i64 %15387, 32
  %15391 = ashr exact i64 %15390, 32
  store i64 %15391, i64* %RDX.i430, align 8
  store %struct.Memory* %loadMem_40bd52, %struct.Memory** %MEMORY
  %loadMem_40bd55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15393 = getelementptr inbounds %struct.GPR, %struct.GPR* %15392, i32 0, i32 33
  %15394 = getelementptr inbounds %struct.Reg, %struct.Reg* %15393, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %15394 to i64*
  %15395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15396 = getelementptr inbounds %struct.GPR, %struct.GPR* %15395, i32 0, i32 7
  %15397 = getelementptr inbounds %struct.Reg, %struct.Reg* %15396, i32 0, i32 0
  %RDX.i427 = bitcast %union.anon* %15397 to i64*
  %15398 = load i64, i64* %RDX.i427
  %15399 = mul i64 %15398, 4
  %15400 = add i64 %15399, 11187184
  %15401 = load i64, i64* %PC.i426
  %15402 = add i64 %15401, 8
  store i64 %15402, i64* %PC.i426
  %15403 = inttoptr i64 %15400 to i32*
  %15404 = load i32, i32* %15403
  %15405 = sext i32 %15404 to i64
  store i64 %15405, i64* %RDX.i427, align 8
  store %struct.Memory* %loadMem_40bd55, %struct.Memory** %MEMORY
  %loadMem_40bd5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15407 = getelementptr inbounds %struct.GPR, %struct.GPR* %15406, i32 0, i32 33
  %15408 = getelementptr inbounds %struct.Reg, %struct.Reg* %15407, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %15408 to i64*
  %15409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15410 = getelementptr inbounds %struct.GPR, %struct.GPR* %15409, i32 0, i32 7
  %15411 = getelementptr inbounds %struct.Reg, %struct.Reg* %15410, i32 0, i32 0
  %RDX.i425 = bitcast %union.anon* %15411 to i64*
  %15412 = load i64, i64* %RDX.i425
  %15413 = load i64, i64* %PC.i424
  %15414 = add i64 %15413, 7
  store i64 %15414, i64* %PC.i424
  %15415 = sext i64 %15412 to i128
  %15416 = and i128 %15415, -18446744073709551616
  %15417 = zext i64 %15412 to i128
  %15418 = or i128 %15416, %15417
  %15419 = mul i128 744, %15418
  %15420 = trunc i128 %15419 to i64
  store i64 %15420, i64* %RDX.i425, align 8
  %15421 = sext i64 %15420 to i128
  %15422 = icmp ne i128 %15421, %15419
  %15423 = zext i1 %15422 to i8
  %15424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15423, i8* %15424, align 1
  %15425 = trunc i128 %15419 to i32
  %15426 = and i32 %15425, 255
  %15427 = call i32 @llvm.ctpop.i32(i32 %15426)
  %15428 = trunc i32 %15427 to i8
  %15429 = and i8 %15428, 1
  %15430 = xor i8 %15429, 1
  %15431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15430, i8* %15431, align 1
  %15432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15432, align 1
  %15433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15433, align 1
  %15434 = lshr i64 %15420, 63
  %15435 = trunc i64 %15434 to i8
  %15436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15435, i8* %15436, align 1
  %15437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15423, i8* %15437, align 1
  store %struct.Memory* %loadMem_40bd5d, %struct.Memory** %MEMORY
  %loadMem_40bd64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15439 = getelementptr inbounds %struct.GPR, %struct.GPR* %15438, i32 0, i32 33
  %15440 = getelementptr inbounds %struct.Reg, %struct.Reg* %15439, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %15440 to i64*
  %15441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15442 = getelementptr inbounds %struct.GPR, %struct.GPR* %15441, i32 0, i32 1
  %15443 = getelementptr inbounds %struct.Reg, %struct.Reg* %15442, i32 0, i32 0
  %RAX.i422 = bitcast %union.anon* %15443 to i64*
  %15444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15445 = getelementptr inbounds %struct.GPR, %struct.GPR* %15444, i32 0, i32 7
  %15446 = getelementptr inbounds %struct.Reg, %struct.Reg* %15445, i32 0, i32 0
  %RDX.i423 = bitcast %union.anon* %15446 to i64*
  %15447 = load i64, i64* %RAX.i422
  %15448 = load i64, i64* %RDX.i423
  %15449 = load i64, i64* %PC.i421
  %15450 = add i64 %15449, 3
  store i64 %15450, i64* %PC.i421
  %15451 = add i64 %15448, %15447
  store i64 %15451, i64* %RAX.i422, align 8
  %15452 = icmp ult i64 %15451, %15447
  %15453 = icmp ult i64 %15451, %15448
  %15454 = or i1 %15452, %15453
  %15455 = zext i1 %15454 to i8
  %15456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15455, i8* %15456, align 1
  %15457 = trunc i64 %15451 to i32
  %15458 = and i32 %15457, 255
  %15459 = call i32 @llvm.ctpop.i32(i32 %15458)
  %15460 = trunc i32 %15459 to i8
  %15461 = and i8 %15460, 1
  %15462 = xor i8 %15461, 1
  %15463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15462, i8* %15463, align 1
  %15464 = xor i64 %15448, %15447
  %15465 = xor i64 %15464, %15451
  %15466 = lshr i64 %15465, 4
  %15467 = trunc i64 %15466 to i8
  %15468 = and i8 %15467, 1
  %15469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15468, i8* %15469, align 1
  %15470 = icmp eq i64 %15451, 0
  %15471 = zext i1 %15470 to i8
  %15472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15471, i8* %15472, align 1
  %15473 = lshr i64 %15451, 63
  %15474 = trunc i64 %15473 to i8
  %15475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15474, i8* %15475, align 1
  %15476 = lshr i64 %15447, 63
  %15477 = lshr i64 %15448, 63
  %15478 = xor i64 %15473, %15476
  %15479 = xor i64 %15473, %15477
  %15480 = add i64 %15478, %15479
  %15481 = icmp eq i64 %15480, 2
  %15482 = zext i1 %15481 to i8
  %15483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15482, i8* %15483, align 1
  store %struct.Memory* %loadMem_40bd64, %struct.Memory** %MEMORY
  %loadMem_40bd67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15485 = getelementptr inbounds %struct.GPR, %struct.GPR* %15484, i32 0, i32 33
  %15486 = getelementptr inbounds %struct.Reg, %struct.Reg* %15485, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %15486 to i64*
  %15487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15488 = getelementptr inbounds %struct.GPR, %struct.GPR* %15487, i32 0, i32 5
  %15489 = getelementptr inbounds %struct.Reg, %struct.Reg* %15488, i32 0, i32 0
  %ECX.i419 = bitcast %union.anon* %15489 to i32*
  %15490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15491 = getelementptr inbounds %struct.GPR, %struct.GPR* %15490, i32 0, i32 1
  %15492 = getelementptr inbounds %struct.Reg, %struct.Reg* %15491, i32 0, i32 0
  %RAX.i420 = bitcast %union.anon* %15492 to i64*
  %15493 = load i64, i64* %RAX.i420
  %15494 = add i64 %15493, 740
  %15495 = load i32, i32* %ECX.i419
  %15496 = zext i32 %15495 to i64
  %15497 = load i64, i64* %PC.i418
  %15498 = add i64 %15497, 6
  store i64 %15498, i64* %PC.i418
  %15499 = inttoptr i64 %15494 to i32*
  store i32 %15495, i32* %15499
  store %struct.Memory* %loadMem_40bd67, %struct.Memory** %MEMORY
  br label %block_.L_40bd6d

block_.L_40bd6d:                                  ; preds = %block_40bbff, %block_40bbc7, %block_.L_40bbad
  %loadMem_40bd6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15501 = getelementptr inbounds %struct.GPR, %struct.GPR* %15500, i32 0, i32 33
  %15502 = getelementptr inbounds %struct.Reg, %struct.Reg* %15501, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %15502 to i64*
  %15503 = load i64, i64* %PC.i417
  %15504 = add i64 %15503, 5
  %15505 = load i64, i64* %PC.i417
  %15506 = add i64 %15505, 5
  store i64 %15506, i64* %PC.i417
  %15507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15504, i64* %15507, align 8
  store %struct.Memory* %loadMem_40bd6d, %struct.Memory** %MEMORY
  br label %block_.L_40bd72

block_.L_40bd72:                                  ; preds = %block_.L_40bd6d, %block_.L_40bba8
  %loadMem_40bd72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15509 = getelementptr inbounds %struct.GPR, %struct.GPR* %15508, i32 0, i32 33
  %15510 = getelementptr inbounds %struct.Reg, %struct.Reg* %15509, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %15510 to i64*
  %15511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15512 = getelementptr inbounds %struct.GPR, %struct.GPR* %15511, i32 0, i32 1
  %15513 = getelementptr inbounds %struct.Reg, %struct.Reg* %15512, i32 0, i32 0
  %RAX.i415 = bitcast %union.anon* %15513 to i64*
  %15514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15515 = getelementptr inbounds %struct.GPR, %struct.GPR* %15514, i32 0, i32 15
  %15516 = getelementptr inbounds %struct.Reg, %struct.Reg* %15515, i32 0, i32 0
  %RBP.i416 = bitcast %union.anon* %15516 to i64*
  %15517 = load i64, i64* %RBP.i416
  %15518 = sub i64 %15517, 4
  %15519 = load i64, i64* %PC.i414
  %15520 = add i64 %15519, 3
  store i64 %15520, i64* %PC.i414
  %15521 = inttoptr i64 %15518 to i32*
  %15522 = load i32, i32* %15521
  %15523 = zext i32 %15522 to i64
  store i64 %15523, i64* %RAX.i415, align 8
  store %struct.Memory* %loadMem_40bd72, %struct.Memory** %MEMORY
  %loadMem_40bd75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15525 = getelementptr inbounds %struct.GPR, %struct.GPR* %15524, i32 0, i32 33
  %15526 = getelementptr inbounds %struct.Reg, %struct.Reg* %15525, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %15526 to i64*
  %15527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15528 = getelementptr inbounds %struct.GPR, %struct.GPR* %15527, i32 0, i32 1
  %15529 = getelementptr inbounds %struct.Reg, %struct.Reg* %15528, i32 0, i32 0
  %RAX.i413 = bitcast %union.anon* %15529 to i64*
  %15530 = load i64, i64* %RAX.i413
  %15531 = load i64, i64* %PC.i412
  %15532 = add i64 %15531, 3
  store i64 %15532, i64* %PC.i412
  %15533 = trunc i64 %15530 to i32
  %15534 = add i32 1, %15533
  %15535 = zext i32 %15534 to i64
  store i64 %15535, i64* %RAX.i413, align 8
  %15536 = icmp ult i32 %15534, %15533
  %15537 = icmp ult i32 %15534, 1
  %15538 = or i1 %15536, %15537
  %15539 = zext i1 %15538 to i8
  %15540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15539, i8* %15540, align 1
  %15541 = and i32 %15534, 255
  %15542 = call i32 @llvm.ctpop.i32(i32 %15541)
  %15543 = trunc i32 %15542 to i8
  %15544 = and i8 %15543, 1
  %15545 = xor i8 %15544, 1
  %15546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15545, i8* %15546, align 1
  %15547 = xor i64 1, %15530
  %15548 = trunc i64 %15547 to i32
  %15549 = xor i32 %15548, %15534
  %15550 = lshr i32 %15549, 4
  %15551 = trunc i32 %15550 to i8
  %15552 = and i8 %15551, 1
  %15553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15552, i8* %15553, align 1
  %15554 = icmp eq i32 %15534, 0
  %15555 = zext i1 %15554 to i8
  %15556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15555, i8* %15556, align 1
  %15557 = lshr i32 %15534, 31
  %15558 = trunc i32 %15557 to i8
  %15559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15558, i8* %15559, align 1
  %15560 = lshr i32 %15533, 31
  %15561 = xor i32 %15557, %15560
  %15562 = add i32 %15561, %15557
  %15563 = icmp eq i32 %15562, 2
  %15564 = zext i1 %15563 to i8
  %15565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15564, i8* %15565, align 1
  store %struct.Memory* %loadMem_40bd75, %struct.Memory** %MEMORY
  %loadMem_40bd78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15567 = getelementptr inbounds %struct.GPR, %struct.GPR* %15566, i32 0, i32 33
  %15568 = getelementptr inbounds %struct.Reg, %struct.Reg* %15567, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %15568 to i64*
  %15569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15570 = getelementptr inbounds %struct.GPR, %struct.GPR* %15569, i32 0, i32 1
  %15571 = getelementptr inbounds %struct.Reg, %struct.Reg* %15570, i32 0, i32 0
  %EAX.i410 = bitcast %union.anon* %15571 to i32*
  %15572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15573 = getelementptr inbounds %struct.GPR, %struct.GPR* %15572, i32 0, i32 5
  %15574 = getelementptr inbounds %struct.Reg, %struct.Reg* %15573, i32 0, i32 0
  %RCX.i411 = bitcast %union.anon* %15574 to i64*
  %15575 = load i32, i32* %EAX.i410
  %15576 = zext i32 %15575 to i64
  %15577 = load i64, i64* %PC.i409
  %15578 = add i64 %15577, 3
  store i64 %15578, i64* %PC.i409
  %15579 = shl i64 %15576, 32
  %15580 = ashr exact i64 %15579, 32
  store i64 %15580, i64* %RCX.i411, align 8
  store %struct.Memory* %loadMem_40bd78, %struct.Memory** %MEMORY
  %loadMem_40bd7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15582 = getelementptr inbounds %struct.GPR, %struct.GPR* %15581, i32 0, i32 33
  %15583 = getelementptr inbounds %struct.Reg, %struct.Reg* %15582, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %15583 to i64*
  %15584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15585 = getelementptr inbounds %struct.GPR, %struct.GPR* %15584, i32 0, i32 1
  %15586 = getelementptr inbounds %struct.Reg, %struct.Reg* %15585, i32 0, i32 0
  %RAX.i407 = bitcast %union.anon* %15586 to i64*
  %15587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15588 = getelementptr inbounds %struct.GPR, %struct.GPR* %15587, i32 0, i32 5
  %15589 = getelementptr inbounds %struct.Reg, %struct.Reg* %15588, i32 0, i32 0
  %RCX.i408 = bitcast %union.anon* %15589 to i64*
  %15590 = load i64, i64* %RCX.i408
  %15591 = add i64 %15590, 12099168
  %15592 = load i64, i64* %PC.i406
  %15593 = add i64 %15592, 8
  store i64 %15593, i64* %PC.i406
  %15594 = inttoptr i64 %15591 to i8*
  %15595 = load i8, i8* %15594
  %15596 = zext i8 %15595 to i64
  store i64 %15596, i64* %RAX.i407, align 8
  store %struct.Memory* %loadMem_40bd7b, %struct.Memory** %MEMORY
  %loadMem_40bd83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15598 = getelementptr inbounds %struct.GPR, %struct.GPR* %15597, i32 0, i32 33
  %15599 = getelementptr inbounds %struct.Reg, %struct.Reg* %15598, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %15599 to i64*
  %15600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15601 = getelementptr inbounds %struct.GPR, %struct.GPR* %15600, i32 0, i32 1
  %15602 = getelementptr inbounds %struct.Reg, %struct.Reg* %15601, i32 0, i32 0
  %EAX.i405 = bitcast %union.anon* %15602 to i32*
  %15603 = load i32, i32* %EAX.i405
  %15604 = zext i32 %15603 to i64
  %15605 = load i64, i64* %PC.i404
  %15606 = add i64 %15605, 3
  store i64 %15606, i64* %PC.i404
  %15607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15607, align 1
  %15608 = and i32 %15603, 255
  %15609 = call i32 @llvm.ctpop.i32(i32 %15608)
  %15610 = trunc i32 %15609 to i8
  %15611 = and i8 %15610, 1
  %15612 = xor i8 %15611, 1
  %15613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15612, i8* %15613, align 1
  %15614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15614, align 1
  %15615 = icmp eq i32 %15603, 0
  %15616 = zext i1 %15615 to i8
  %15617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15616, i8* %15617, align 1
  %15618 = lshr i32 %15603, 31
  %15619 = trunc i32 %15618 to i8
  %15620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15619, i8* %15620, align 1
  %15621 = lshr i32 %15603, 31
  %15622 = xor i32 %15618, %15621
  %15623 = add i32 %15622, %15621
  %15624 = icmp eq i32 %15623, 2
  %15625 = zext i1 %15624 to i8
  %15626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15625, i8* %15626, align 1
  store %struct.Memory* %loadMem_40bd83, %struct.Memory** %MEMORY
  %loadMem_40bd86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15628 = getelementptr inbounds %struct.GPR, %struct.GPR* %15627, i32 0, i32 33
  %15629 = getelementptr inbounds %struct.Reg, %struct.Reg* %15628, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %15629 to i64*
  %15630 = load i64, i64* %PC.i403
  %15631 = add i64 %15630, 324
  %15632 = load i64, i64* %PC.i403
  %15633 = add i64 %15632, 6
  %15634 = load i64, i64* %PC.i403
  %15635 = add i64 %15634, 6
  store i64 %15635, i64* %PC.i403
  %15636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15637 = load i8, i8* %15636, align 1
  %15638 = icmp eq i8 %15637, 0
  %15639 = zext i1 %15638 to i8
  store i8 %15639, i8* %BRANCH_TAKEN, align 1
  %15640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15641 = select i1 %15638, i64 %15631, i64 %15633
  store i64 %15641, i64* %15640, align 8
  store %struct.Memory* %loadMem_40bd86, %struct.Memory** %MEMORY
  %loadBr_40bd86 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bd86 = icmp eq i8 %loadBr_40bd86, 1
  br i1 %cmpBr_40bd86, label %block_.L_40beca, label %block_40bd8c

block_40bd8c:                                     ; preds = %block_.L_40bd72
  %loadMem_40bd8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15643 = getelementptr inbounds %struct.GPR, %struct.GPR* %15642, i32 0, i32 33
  %15644 = getelementptr inbounds %struct.Reg, %struct.Reg* %15643, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %15644 to i64*
  %15645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15646 = getelementptr inbounds %struct.GPR, %struct.GPR* %15645, i32 0, i32 15
  %15647 = getelementptr inbounds %struct.Reg, %struct.Reg* %15646, i32 0, i32 0
  %RBP.i402 = bitcast %union.anon* %15647 to i64*
  %15648 = load i64, i64* %RBP.i402
  %15649 = sub i64 %15648, 16
  %15650 = load i64, i64* %PC.i401
  %15651 = add i64 %15650, 4
  store i64 %15651, i64* %PC.i401
  %15652 = inttoptr i64 %15649 to i32*
  %15653 = load i32, i32* %15652
  %15654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15654, align 1
  %15655 = and i32 %15653, 255
  %15656 = call i32 @llvm.ctpop.i32(i32 %15655)
  %15657 = trunc i32 %15656 to i8
  %15658 = and i8 %15657, 1
  %15659 = xor i8 %15658, 1
  %15660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15659, i8* %15660, align 1
  %15661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15661, align 1
  %15662 = icmp eq i32 %15653, 0
  %15663 = zext i1 %15662 to i8
  %15664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15663, i8* %15664, align 1
  %15665 = lshr i32 %15653, 31
  %15666 = trunc i32 %15665 to i8
  %15667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15666, i8* %15667, align 1
  %15668 = lshr i32 %15653, 31
  %15669 = xor i32 %15665, %15668
  %15670 = add i32 %15669, %15668
  %15671 = icmp eq i32 %15670, 2
  %15672 = zext i1 %15671 to i8
  %15673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15672, i8* %15673, align 1
  store %struct.Memory* %loadMem_40bd8c, %struct.Memory** %MEMORY
  %loadMem_40bd90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15675 = getelementptr inbounds %struct.GPR, %struct.GPR* %15674, i32 0, i32 33
  %15676 = getelementptr inbounds %struct.Reg, %struct.Reg* %15675, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %15676 to i64*
  %15677 = load i64, i64* %PC.i400
  %15678 = add i64 %15677, 309
  %15679 = load i64, i64* %PC.i400
  %15680 = add i64 %15679, 6
  %15681 = load i64, i64* %PC.i400
  %15682 = add i64 %15681, 6
  store i64 %15682, i64* %PC.i400
  %15683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15684 = load i8, i8* %15683, align 1
  %15685 = icmp eq i8 %15684, 0
  %15686 = zext i1 %15685 to i8
  store i8 %15686, i8* %BRANCH_TAKEN, align 1
  %15687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15688 = select i1 %15685, i64 %15678, i64 %15680
  store i64 %15688, i64* %15687, align 8
  store %struct.Memory* %loadMem_40bd90, %struct.Memory** %MEMORY
  %loadBr_40bd90 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bd90 = icmp eq i8 %loadBr_40bd90, 1
  br i1 %cmpBr_40bd90, label %block_.L_40bec5, label %block_40bd96

block_40bd96:                                     ; preds = %block_40bd8c
  %loadMem_40bd96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15690 = getelementptr inbounds %struct.GPR, %struct.GPR* %15689, i32 0, i32 33
  %15691 = getelementptr inbounds %struct.Reg, %struct.Reg* %15690, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %15691 to i64*
  %15692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15693 = getelementptr inbounds %struct.GPR, %struct.GPR* %15692, i32 0, i32 1
  %15694 = getelementptr inbounds %struct.Reg, %struct.Reg* %15693, i32 0, i32 0
  %RAX.i398 = bitcast %union.anon* %15694 to i64*
  %15695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15696 = getelementptr inbounds %struct.GPR, %struct.GPR* %15695, i32 0, i32 15
  %15697 = getelementptr inbounds %struct.Reg, %struct.Reg* %15696, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %15697 to i64*
  %15698 = load i64, i64* %RBP.i399
  %15699 = sub i64 %15698, 4
  %15700 = load i64, i64* %PC.i397
  %15701 = add i64 %15700, 3
  store i64 %15701, i64* %PC.i397
  %15702 = inttoptr i64 %15699 to i32*
  %15703 = load i32, i32* %15702
  %15704 = zext i32 %15703 to i64
  store i64 %15704, i64* %RAX.i398, align 8
  store %struct.Memory* %loadMem_40bd96, %struct.Memory** %MEMORY
  %loadMem_40bd99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15706 = getelementptr inbounds %struct.GPR, %struct.GPR* %15705, i32 0, i32 33
  %15707 = getelementptr inbounds %struct.Reg, %struct.Reg* %15706, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %15707 to i64*
  %15708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15709 = getelementptr inbounds %struct.GPR, %struct.GPR* %15708, i32 0, i32 1
  %15710 = getelementptr inbounds %struct.Reg, %struct.Reg* %15709, i32 0, i32 0
  %RAX.i396 = bitcast %union.anon* %15710 to i64*
  %15711 = load i64, i64* %RAX.i396
  %15712 = load i64, i64* %PC.i395
  %15713 = add i64 %15712, 3
  store i64 %15713, i64* %PC.i395
  %15714 = trunc i64 %15711 to i32
  %15715 = add i32 1, %15714
  %15716 = zext i32 %15715 to i64
  store i64 %15716, i64* %RAX.i396, align 8
  %15717 = icmp ult i32 %15715, %15714
  %15718 = icmp ult i32 %15715, 1
  %15719 = or i1 %15717, %15718
  %15720 = zext i1 %15719 to i8
  %15721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15720, i8* %15721, align 1
  %15722 = and i32 %15715, 255
  %15723 = call i32 @llvm.ctpop.i32(i32 %15722)
  %15724 = trunc i32 %15723 to i8
  %15725 = and i8 %15724, 1
  %15726 = xor i8 %15725, 1
  %15727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15726, i8* %15727, align 1
  %15728 = xor i64 1, %15711
  %15729 = trunc i64 %15728 to i32
  %15730 = xor i32 %15729, %15715
  %15731 = lshr i32 %15730, 4
  %15732 = trunc i32 %15731 to i8
  %15733 = and i8 %15732, 1
  %15734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15733, i8* %15734, align 1
  %15735 = icmp eq i32 %15715, 0
  %15736 = zext i1 %15735 to i8
  %15737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15736, i8* %15737, align 1
  %15738 = lshr i32 %15715, 31
  %15739 = trunc i32 %15738 to i8
  %15740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15739, i8* %15740, align 1
  %15741 = lshr i32 %15714, 31
  %15742 = xor i32 %15738, %15741
  %15743 = add i32 %15742, %15738
  %15744 = icmp eq i32 %15743, 2
  %15745 = zext i1 %15744 to i8
  %15746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15745, i8* %15746, align 1
  store %struct.Memory* %loadMem_40bd99, %struct.Memory** %MEMORY
  %loadMem_40bd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15748 = getelementptr inbounds %struct.GPR, %struct.GPR* %15747, i32 0, i32 33
  %15749 = getelementptr inbounds %struct.Reg, %struct.Reg* %15748, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %15749 to i64*
  %15750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15751 = getelementptr inbounds %struct.GPR, %struct.GPR* %15750, i32 0, i32 1
  %15752 = getelementptr inbounds %struct.Reg, %struct.Reg* %15751, i32 0, i32 0
  %RAX.i394 = bitcast %union.anon* %15752 to i64*
  %15753 = load i64, i64* %RAX.i394
  %15754 = load i64, i64* %PC.i393
  %15755 = add i64 %15754, 3
  store i64 %15755, i64* %PC.i393
  %15756 = trunc i64 %15753 to i32
  %15757 = add i32 1, %15756
  %15758 = zext i32 %15757 to i64
  store i64 %15758, i64* %RAX.i394, align 8
  %15759 = icmp ult i32 %15757, %15756
  %15760 = icmp ult i32 %15757, 1
  %15761 = or i1 %15759, %15760
  %15762 = zext i1 %15761 to i8
  %15763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15762, i8* %15763, align 1
  %15764 = and i32 %15757, 255
  %15765 = call i32 @llvm.ctpop.i32(i32 %15764)
  %15766 = trunc i32 %15765 to i8
  %15767 = and i8 %15766, 1
  %15768 = xor i8 %15767, 1
  %15769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15768, i8* %15769, align 1
  %15770 = xor i64 1, %15753
  %15771 = trunc i64 %15770 to i32
  %15772 = xor i32 %15771, %15757
  %15773 = lshr i32 %15772, 4
  %15774 = trunc i32 %15773 to i8
  %15775 = and i8 %15774, 1
  %15776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15775, i8* %15776, align 1
  %15777 = icmp eq i32 %15757, 0
  %15778 = zext i1 %15777 to i8
  %15779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15778, i8* %15779, align 1
  %15780 = lshr i32 %15757, 31
  %15781 = trunc i32 %15780 to i8
  %15782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15781, i8* %15782, align 1
  %15783 = lshr i32 %15756, 31
  %15784 = xor i32 %15780, %15783
  %15785 = add i32 %15784, %15780
  %15786 = icmp eq i32 %15785, 2
  %15787 = zext i1 %15786 to i8
  %15788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15787, i8* %15788, align 1
  store %struct.Memory* %loadMem_40bd9c, %struct.Memory** %MEMORY
  %loadMem_40bd9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15790 = getelementptr inbounds %struct.GPR, %struct.GPR* %15789, i32 0, i32 33
  %15791 = getelementptr inbounds %struct.Reg, %struct.Reg* %15790, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %15791 to i64*
  %15792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15793 = getelementptr inbounds %struct.GPR, %struct.GPR* %15792, i32 0, i32 1
  %15794 = getelementptr inbounds %struct.Reg, %struct.Reg* %15793, i32 0, i32 0
  %EAX.i391 = bitcast %union.anon* %15794 to i32*
  %15795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15796 = getelementptr inbounds %struct.GPR, %struct.GPR* %15795, i32 0, i32 5
  %15797 = getelementptr inbounds %struct.Reg, %struct.Reg* %15796, i32 0, i32 0
  %RCX.i392 = bitcast %union.anon* %15797 to i64*
  %15798 = load i32, i32* %EAX.i391
  %15799 = zext i32 %15798 to i64
  %15800 = load i64, i64* %PC.i390
  %15801 = add i64 %15800, 3
  store i64 %15801, i64* %PC.i390
  %15802 = shl i64 %15799, 32
  %15803 = ashr exact i64 %15802, 32
  store i64 %15803, i64* %RCX.i392, align 8
  store %struct.Memory* %loadMem_40bd9f, %struct.Memory** %MEMORY
  %loadMem_40bda2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15805 = getelementptr inbounds %struct.GPR, %struct.GPR* %15804, i32 0, i32 33
  %15806 = getelementptr inbounds %struct.Reg, %struct.Reg* %15805, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %15806 to i64*
  %15807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15808 = getelementptr inbounds %struct.GPR, %struct.GPR* %15807, i32 0, i32 1
  %15809 = getelementptr inbounds %struct.Reg, %struct.Reg* %15808, i32 0, i32 0
  %RAX.i388 = bitcast %union.anon* %15809 to i64*
  %15810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15811 = getelementptr inbounds %struct.GPR, %struct.GPR* %15810, i32 0, i32 5
  %15812 = getelementptr inbounds %struct.Reg, %struct.Reg* %15811, i32 0, i32 0
  %RCX.i389 = bitcast %union.anon* %15812 to i64*
  %15813 = load i64, i64* %RCX.i389
  %15814 = add i64 %15813, 12099168
  %15815 = load i64, i64* %PC.i387
  %15816 = add i64 %15815, 8
  store i64 %15816, i64* %PC.i387
  %15817 = inttoptr i64 %15814 to i8*
  %15818 = load i8, i8* %15817
  %15819 = zext i8 %15818 to i64
  store i64 %15819, i64* %RAX.i388, align 8
  store %struct.Memory* %loadMem_40bda2, %struct.Memory** %MEMORY
  %loadMem_40bdaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %15820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15821 = getelementptr inbounds %struct.GPR, %struct.GPR* %15820, i32 0, i32 33
  %15822 = getelementptr inbounds %struct.Reg, %struct.Reg* %15821, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %15822 to i64*
  %15823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15824 = getelementptr inbounds %struct.GPR, %struct.GPR* %15823, i32 0, i32 1
  %15825 = getelementptr inbounds %struct.Reg, %struct.Reg* %15824, i32 0, i32 0
  %EAX.i385 = bitcast %union.anon* %15825 to i32*
  %15826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15827 = getelementptr inbounds %struct.GPR, %struct.GPR* %15826, i32 0, i32 15
  %15828 = getelementptr inbounds %struct.Reg, %struct.Reg* %15827, i32 0, i32 0
  %RBP.i386 = bitcast %union.anon* %15828 to i64*
  %15829 = load i32, i32* %EAX.i385
  %15830 = zext i32 %15829 to i64
  %15831 = load i64, i64* %RBP.i386
  %15832 = sub i64 %15831, 20
  %15833 = load i64, i64* %PC.i384
  %15834 = add i64 %15833, 3
  store i64 %15834, i64* %PC.i384
  %15835 = inttoptr i64 %15832 to i32*
  %15836 = load i32, i32* %15835
  %15837 = sub i32 %15829, %15836
  %15838 = icmp ult i32 %15829, %15836
  %15839 = zext i1 %15838 to i8
  %15840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15839, i8* %15840, align 1
  %15841 = and i32 %15837, 255
  %15842 = call i32 @llvm.ctpop.i32(i32 %15841)
  %15843 = trunc i32 %15842 to i8
  %15844 = and i8 %15843, 1
  %15845 = xor i8 %15844, 1
  %15846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15845, i8* %15846, align 1
  %15847 = xor i32 %15836, %15829
  %15848 = xor i32 %15847, %15837
  %15849 = lshr i32 %15848, 4
  %15850 = trunc i32 %15849 to i8
  %15851 = and i8 %15850, 1
  %15852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15851, i8* %15852, align 1
  %15853 = icmp eq i32 %15837, 0
  %15854 = zext i1 %15853 to i8
  %15855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15854, i8* %15855, align 1
  %15856 = lshr i32 %15837, 31
  %15857 = trunc i32 %15856 to i8
  %15858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15857, i8* %15858, align 1
  %15859 = lshr i32 %15829, 31
  %15860 = lshr i32 %15836, 31
  %15861 = xor i32 %15860, %15859
  %15862 = xor i32 %15856, %15859
  %15863 = add i32 %15862, %15861
  %15864 = icmp eq i32 %15863, 2
  %15865 = zext i1 %15864 to i8
  %15866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15865, i8* %15866, align 1
  store %struct.Memory* %loadMem_40bdaa, %struct.Memory** %MEMORY
  %loadMem_40bdad = load %struct.Memory*, %struct.Memory** %MEMORY
  %15867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15868 = getelementptr inbounds %struct.GPR, %struct.GPR* %15867, i32 0, i32 33
  %15869 = getelementptr inbounds %struct.Reg, %struct.Reg* %15868, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %15869 to i64*
  %15870 = load i64, i64* %PC.i383
  %15871 = add i64 %15870, 34
  %15872 = load i64, i64* %PC.i383
  %15873 = add i64 %15872, 6
  %15874 = load i64, i64* %PC.i383
  %15875 = add i64 %15874, 6
  store i64 %15875, i64* %PC.i383
  %15876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15877 = load i8, i8* %15876, align 1
  %15878 = icmp eq i8 %15877, 0
  %15879 = zext i1 %15878 to i8
  store i8 %15879, i8* %BRANCH_TAKEN, align 1
  %15880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15881 = select i1 %15878, i64 %15871, i64 %15873
  store i64 %15881, i64* %15880, align 8
  store %struct.Memory* %loadMem_40bdad, %struct.Memory** %MEMORY
  %loadBr_40bdad = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bdad = icmp eq i8 %loadBr_40bdad, 1
  br i1 %cmpBr_40bdad, label %block_.L_40bdcf, label %block_40bdb3

block_40bdb3:                                     ; preds = %block_40bd96
  %loadMem_40bdb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15883 = getelementptr inbounds %struct.GPR, %struct.GPR* %15882, i32 0, i32 33
  %15884 = getelementptr inbounds %struct.Reg, %struct.Reg* %15883, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %15884 to i64*
  %15885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15886 = getelementptr inbounds %struct.GPR, %struct.GPR* %15885, i32 0, i32 1
  %15887 = getelementptr inbounds %struct.Reg, %struct.Reg* %15886, i32 0, i32 0
  %RAX.i381 = bitcast %union.anon* %15887 to i64*
  %15888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15889 = getelementptr inbounds %struct.GPR, %struct.GPR* %15888, i32 0, i32 15
  %15890 = getelementptr inbounds %struct.Reg, %struct.Reg* %15889, i32 0, i32 0
  %RBP.i382 = bitcast %union.anon* %15890 to i64*
  %15891 = load i64, i64* %RBP.i382
  %15892 = sub i64 %15891, 4
  %15893 = load i64, i64* %PC.i380
  %15894 = add i64 %15893, 3
  store i64 %15894, i64* %PC.i380
  %15895 = inttoptr i64 %15892 to i32*
  %15896 = load i32, i32* %15895
  %15897 = zext i32 %15896 to i64
  store i64 %15897, i64* %RAX.i381, align 8
  store %struct.Memory* %loadMem_40bdb3, %struct.Memory** %MEMORY
  %loadMem_40bdb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15899 = getelementptr inbounds %struct.GPR, %struct.GPR* %15898, i32 0, i32 33
  %15900 = getelementptr inbounds %struct.Reg, %struct.Reg* %15899, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %15900 to i64*
  %15901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15902 = getelementptr inbounds %struct.GPR, %struct.GPR* %15901, i32 0, i32 1
  %15903 = getelementptr inbounds %struct.Reg, %struct.Reg* %15902, i32 0, i32 0
  %RAX.i379 = bitcast %union.anon* %15903 to i64*
  %15904 = load i64, i64* %RAX.i379
  %15905 = load i64, i64* %PC.i378
  %15906 = add i64 %15905, 3
  store i64 %15906, i64* %PC.i378
  %15907 = trunc i64 %15904 to i32
  %15908 = add i32 1, %15907
  %15909 = zext i32 %15908 to i64
  store i64 %15909, i64* %RAX.i379, align 8
  %15910 = icmp ult i32 %15908, %15907
  %15911 = icmp ult i32 %15908, 1
  %15912 = or i1 %15910, %15911
  %15913 = zext i1 %15912 to i8
  %15914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15913, i8* %15914, align 1
  %15915 = and i32 %15908, 255
  %15916 = call i32 @llvm.ctpop.i32(i32 %15915)
  %15917 = trunc i32 %15916 to i8
  %15918 = and i8 %15917, 1
  %15919 = xor i8 %15918, 1
  %15920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15919, i8* %15920, align 1
  %15921 = xor i64 1, %15904
  %15922 = trunc i64 %15921 to i32
  %15923 = xor i32 %15922, %15908
  %15924 = lshr i32 %15923, 4
  %15925 = trunc i32 %15924 to i8
  %15926 = and i8 %15925, 1
  %15927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15926, i8* %15927, align 1
  %15928 = icmp eq i32 %15908, 0
  %15929 = zext i1 %15928 to i8
  %15930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15929, i8* %15930, align 1
  %15931 = lshr i32 %15908, 31
  %15932 = trunc i32 %15931 to i8
  %15933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15932, i8* %15933, align 1
  %15934 = lshr i32 %15907, 31
  %15935 = xor i32 %15931, %15934
  %15936 = add i32 %15935, %15931
  %15937 = icmp eq i32 %15936, 2
  %15938 = zext i1 %15937 to i8
  %15939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15938, i8* %15939, align 1
  store %struct.Memory* %loadMem_40bdb6, %struct.Memory** %MEMORY
  %loadMem_40bdb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15941 = getelementptr inbounds %struct.GPR, %struct.GPR* %15940, i32 0, i32 33
  %15942 = getelementptr inbounds %struct.Reg, %struct.Reg* %15941, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %15942 to i64*
  %15943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15944 = getelementptr inbounds %struct.GPR, %struct.GPR* %15943, i32 0, i32 1
  %15945 = getelementptr inbounds %struct.Reg, %struct.Reg* %15944, i32 0, i32 0
  %RAX.i377 = bitcast %union.anon* %15945 to i64*
  %15946 = load i64, i64* %RAX.i377
  %15947 = load i64, i64* %PC.i376
  %15948 = add i64 %15947, 3
  store i64 %15948, i64* %PC.i376
  %15949 = trunc i64 %15946 to i32
  %15950 = add i32 1, %15949
  %15951 = zext i32 %15950 to i64
  store i64 %15951, i64* %RAX.i377, align 8
  %15952 = icmp ult i32 %15950, %15949
  %15953 = icmp ult i32 %15950, 1
  %15954 = or i1 %15952, %15953
  %15955 = zext i1 %15954 to i8
  %15956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15955, i8* %15956, align 1
  %15957 = and i32 %15950, 255
  %15958 = call i32 @llvm.ctpop.i32(i32 %15957)
  %15959 = trunc i32 %15958 to i8
  %15960 = and i8 %15959, 1
  %15961 = xor i8 %15960, 1
  %15962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15961, i8* %15962, align 1
  %15963 = xor i64 1, %15946
  %15964 = trunc i64 %15963 to i32
  %15965 = xor i32 %15964, %15950
  %15966 = lshr i32 %15965, 4
  %15967 = trunc i32 %15966 to i8
  %15968 = and i8 %15967, 1
  %15969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15968, i8* %15969, align 1
  %15970 = icmp eq i32 %15950, 0
  %15971 = zext i1 %15970 to i8
  %15972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15971, i8* %15972, align 1
  %15973 = lshr i32 %15950, 31
  %15974 = trunc i32 %15973 to i8
  %15975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15974, i8* %15975, align 1
  %15976 = lshr i32 %15949, 31
  %15977 = xor i32 %15973, %15976
  %15978 = add i32 %15977, %15973
  %15979 = icmp eq i32 %15978, 2
  %15980 = zext i1 %15979 to i8
  %15981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15980, i8* %15981, align 1
  store %struct.Memory* %loadMem_40bdb9, %struct.Memory** %MEMORY
  %loadMem_40bdbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15983 = getelementptr inbounds %struct.GPR, %struct.GPR* %15982, i32 0, i32 33
  %15984 = getelementptr inbounds %struct.Reg, %struct.Reg* %15983, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %15984 to i64*
  %15985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15986 = getelementptr inbounds %struct.GPR, %struct.GPR* %15985, i32 0, i32 1
  %15987 = getelementptr inbounds %struct.Reg, %struct.Reg* %15986, i32 0, i32 0
  %EAX.i374 = bitcast %union.anon* %15987 to i32*
  %15988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15989 = getelementptr inbounds %struct.GPR, %struct.GPR* %15988, i32 0, i32 5
  %15990 = getelementptr inbounds %struct.Reg, %struct.Reg* %15989, i32 0, i32 0
  %RCX.i375 = bitcast %union.anon* %15990 to i64*
  %15991 = load i32, i32* %EAX.i374
  %15992 = zext i32 %15991 to i64
  %15993 = load i64, i64* %PC.i373
  %15994 = add i64 %15993, 3
  store i64 %15994, i64* %PC.i373
  %15995 = shl i64 %15992, 32
  %15996 = ashr exact i64 %15995, 32
  store i64 %15996, i64* %RCX.i375, align 8
  store %struct.Memory* %loadMem_40bdbc, %struct.Memory** %MEMORY
  %loadMem_40bdbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %15997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15998 = getelementptr inbounds %struct.GPR, %struct.GPR* %15997, i32 0, i32 33
  %15999 = getelementptr inbounds %struct.Reg, %struct.Reg* %15998, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %15999 to i64*
  %16000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16001 = getelementptr inbounds %struct.GPR, %struct.GPR* %16000, i32 0, i32 1
  %16002 = getelementptr inbounds %struct.Reg, %struct.Reg* %16001, i32 0, i32 0
  %RAX.i371 = bitcast %union.anon* %16002 to i64*
  %16003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16004 = getelementptr inbounds %struct.GPR, %struct.GPR* %16003, i32 0, i32 5
  %16005 = getelementptr inbounds %struct.Reg, %struct.Reg* %16004, i32 0, i32 0
  %RCX.i372 = bitcast %union.anon* %16005 to i64*
  %16006 = load i64, i64* %RCX.i372
  %16007 = mul i64 %16006, 4
  %16008 = add i64 %16007, 11187184
  %16009 = load i64, i64* %PC.i370
  %16010 = add i64 %16009, 7
  store i64 %16010, i64* %PC.i370
  %16011 = inttoptr i64 %16008 to i32*
  %16012 = load i32, i32* %16011
  %16013 = zext i32 %16012 to i64
  store i64 %16013, i64* %RAX.i371, align 8
  store %struct.Memory* %loadMem_40bdbf, %struct.Memory** %MEMORY
  %loadMem_40bdc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16015 = getelementptr inbounds %struct.GPR, %struct.GPR* %16014, i32 0, i32 33
  %16016 = getelementptr inbounds %struct.Reg, %struct.Reg* %16015, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %16016 to i64*
  %16017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16018 = getelementptr inbounds %struct.GPR, %struct.GPR* %16017, i32 0, i32 1
  %16019 = getelementptr inbounds %struct.Reg, %struct.Reg* %16018, i32 0, i32 0
  %EAX.i368 = bitcast %union.anon* %16019 to i32*
  %16020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16021 = getelementptr inbounds %struct.GPR, %struct.GPR* %16020, i32 0, i32 15
  %16022 = getelementptr inbounds %struct.Reg, %struct.Reg* %16021, i32 0, i32 0
  %RBP.i369 = bitcast %union.anon* %16022 to i64*
  %16023 = load i32, i32* %EAX.i368
  %16024 = zext i32 %16023 to i64
  %16025 = load i64, i64* %RBP.i369
  %16026 = sub i64 %16025, 8
  %16027 = load i64, i64* %PC.i367
  %16028 = add i64 %16027, 3
  store i64 %16028, i64* %PC.i367
  %16029 = inttoptr i64 %16026 to i32*
  %16030 = load i32, i32* %16029
  %16031 = sub i32 %16023, %16030
  %16032 = icmp ult i32 %16023, %16030
  %16033 = zext i1 %16032 to i8
  %16034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16033, i8* %16034, align 1
  %16035 = and i32 %16031, 255
  %16036 = call i32 @llvm.ctpop.i32(i32 %16035)
  %16037 = trunc i32 %16036 to i8
  %16038 = and i8 %16037, 1
  %16039 = xor i8 %16038, 1
  %16040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16039, i8* %16040, align 1
  %16041 = xor i32 %16030, %16023
  %16042 = xor i32 %16041, %16031
  %16043 = lshr i32 %16042, 4
  %16044 = trunc i32 %16043 to i8
  %16045 = and i8 %16044, 1
  %16046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16045, i8* %16046, align 1
  %16047 = icmp eq i32 %16031, 0
  %16048 = zext i1 %16047 to i8
  %16049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16048, i8* %16049, align 1
  %16050 = lshr i32 %16031, 31
  %16051 = trunc i32 %16050 to i8
  %16052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16051, i8* %16052, align 1
  %16053 = lshr i32 %16023, 31
  %16054 = lshr i32 %16030, 31
  %16055 = xor i32 %16054, %16053
  %16056 = xor i32 %16050, %16053
  %16057 = add i32 %16056, %16055
  %16058 = icmp eq i32 %16057, 2
  %16059 = zext i1 %16058 to i8
  %16060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16059, i8* %16060, align 1
  store %struct.Memory* %loadMem_40bdc6, %struct.Memory** %MEMORY
  %loadMem_40bdc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16062 = getelementptr inbounds %struct.GPR, %struct.GPR* %16061, i32 0, i32 33
  %16063 = getelementptr inbounds %struct.Reg, %struct.Reg* %16062, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %16063 to i64*
  %16064 = load i64, i64* %PC.i366
  %16065 = add i64 %16064, 252
  %16066 = load i64, i64* %PC.i366
  %16067 = add i64 %16066, 6
  %16068 = load i64, i64* %PC.i366
  %16069 = add i64 %16068, 6
  store i64 %16069, i64* %PC.i366
  %16070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16071 = load i8, i8* %16070, align 1
  store i8 %16071, i8* %BRANCH_TAKEN, align 1
  %16072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16073 = icmp ne i8 %16071, 0
  %16074 = select i1 %16073, i64 %16065, i64 %16067
  store i64 %16074, i64* %16072, align 8
  store %struct.Memory* %loadMem_40bdc9, %struct.Memory** %MEMORY
  %loadBr_40bdc9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bdc9 = icmp eq i8 %loadBr_40bdc9, 1
  br i1 %cmpBr_40bdc9, label %block_.L_40bec5, label %block_.L_40bdcf

block_.L_40bdcf:                                  ; preds = %block_40bdb3, %block_40bd96
  %loadMem_40bdcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %16075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16076 = getelementptr inbounds %struct.GPR, %struct.GPR* %16075, i32 0, i32 33
  %16077 = getelementptr inbounds %struct.Reg, %struct.Reg* %16076, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %16077 to i64*
  %16078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16079 = getelementptr inbounds %struct.GPR, %struct.GPR* %16078, i32 0, i32 1
  %16080 = getelementptr inbounds %struct.Reg, %struct.Reg* %16079, i32 0, i32 0
  %RAX.i364 = bitcast %union.anon* %16080 to i64*
  %16081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16082 = getelementptr inbounds %struct.GPR, %struct.GPR* %16081, i32 0, i32 15
  %16083 = getelementptr inbounds %struct.Reg, %struct.Reg* %16082, i32 0, i32 0
  %RBP.i365 = bitcast %union.anon* %16083 to i64*
  %16084 = load i64, i64* %RBP.i365
  %16085 = sub i64 %16084, 4
  %16086 = load i64, i64* %PC.i363
  %16087 = add i64 %16086, 3
  store i64 %16087, i64* %PC.i363
  %16088 = inttoptr i64 %16085 to i32*
  %16089 = load i32, i32* %16088
  %16090 = zext i32 %16089 to i64
  store i64 %16090, i64* %RAX.i364, align 8
  store %struct.Memory* %loadMem_40bdcf, %struct.Memory** %MEMORY
  %loadMem_40bdd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16092 = getelementptr inbounds %struct.GPR, %struct.GPR* %16091, i32 0, i32 33
  %16093 = getelementptr inbounds %struct.Reg, %struct.Reg* %16092, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %16093 to i64*
  %16094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16095 = getelementptr inbounds %struct.GPR, %struct.GPR* %16094, i32 0, i32 1
  %16096 = getelementptr inbounds %struct.Reg, %struct.Reg* %16095, i32 0, i32 0
  %RAX.i362 = bitcast %union.anon* %16096 to i64*
  %16097 = load i64, i64* %RAX.i362
  %16098 = load i64, i64* %PC.i361
  %16099 = add i64 %16098, 3
  store i64 %16099, i64* %PC.i361
  %16100 = trunc i64 %16097 to i32
  %16101 = add i32 1, %16100
  %16102 = zext i32 %16101 to i64
  store i64 %16102, i64* %RAX.i362, align 8
  %16103 = icmp ult i32 %16101, %16100
  %16104 = icmp ult i32 %16101, 1
  %16105 = or i1 %16103, %16104
  %16106 = zext i1 %16105 to i8
  %16107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16106, i8* %16107, align 1
  %16108 = and i32 %16101, 255
  %16109 = call i32 @llvm.ctpop.i32(i32 %16108)
  %16110 = trunc i32 %16109 to i8
  %16111 = and i8 %16110, 1
  %16112 = xor i8 %16111, 1
  %16113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16112, i8* %16113, align 1
  %16114 = xor i64 1, %16097
  %16115 = trunc i64 %16114 to i32
  %16116 = xor i32 %16115, %16101
  %16117 = lshr i32 %16116, 4
  %16118 = trunc i32 %16117 to i8
  %16119 = and i8 %16118, 1
  %16120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16119, i8* %16120, align 1
  %16121 = icmp eq i32 %16101, 0
  %16122 = zext i1 %16121 to i8
  %16123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16122, i8* %16123, align 1
  %16124 = lshr i32 %16101, 31
  %16125 = trunc i32 %16124 to i8
  %16126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16125, i8* %16126, align 1
  %16127 = lshr i32 %16100, 31
  %16128 = xor i32 %16124, %16127
  %16129 = add i32 %16128, %16124
  %16130 = icmp eq i32 %16129, 2
  %16131 = zext i1 %16130 to i8
  %16132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16131, i8* %16132, align 1
  store %struct.Memory* %loadMem_40bdd2, %struct.Memory** %MEMORY
  %loadMem_40bdd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16134 = getelementptr inbounds %struct.GPR, %struct.GPR* %16133, i32 0, i32 33
  %16135 = getelementptr inbounds %struct.Reg, %struct.Reg* %16134, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %16135 to i64*
  %16136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16137 = getelementptr inbounds %struct.GPR, %struct.GPR* %16136, i32 0, i32 1
  %16138 = getelementptr inbounds %struct.Reg, %struct.Reg* %16137, i32 0, i32 0
  %RAX.i360 = bitcast %union.anon* %16138 to i64*
  %16139 = load i64, i64* %RAX.i360
  %16140 = load i64, i64* %PC.i359
  %16141 = add i64 %16140, 3
  store i64 %16141, i64* %PC.i359
  %16142 = trunc i64 %16139 to i32
  %16143 = add i32 20, %16142
  %16144 = zext i32 %16143 to i64
  store i64 %16144, i64* %RAX.i360, align 8
  %16145 = icmp ult i32 %16143, %16142
  %16146 = icmp ult i32 %16143, 20
  %16147 = or i1 %16145, %16146
  %16148 = zext i1 %16147 to i8
  %16149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16148, i8* %16149, align 1
  %16150 = and i32 %16143, 255
  %16151 = call i32 @llvm.ctpop.i32(i32 %16150)
  %16152 = trunc i32 %16151 to i8
  %16153 = and i8 %16152, 1
  %16154 = xor i8 %16153, 1
  %16155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16154, i8* %16155, align 1
  %16156 = xor i64 20, %16139
  %16157 = trunc i64 %16156 to i32
  %16158 = xor i32 %16157, %16143
  %16159 = lshr i32 %16158, 4
  %16160 = trunc i32 %16159 to i8
  %16161 = and i8 %16160, 1
  %16162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16161, i8* %16162, align 1
  %16163 = icmp eq i32 %16143, 0
  %16164 = zext i1 %16163 to i8
  %16165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16164, i8* %16165, align 1
  %16166 = lshr i32 %16143, 31
  %16167 = trunc i32 %16166 to i8
  %16168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16167, i8* %16168, align 1
  %16169 = lshr i32 %16142, 31
  %16170 = xor i32 %16166, %16169
  %16171 = add i32 %16170, %16166
  %16172 = icmp eq i32 %16171, 2
  %16173 = zext i1 %16172 to i8
  %16174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16173, i8* %16174, align 1
  store %struct.Memory* %loadMem_40bdd5, %struct.Memory** %MEMORY
  %loadMem_40bdd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16176 = getelementptr inbounds %struct.GPR, %struct.GPR* %16175, i32 0, i32 33
  %16177 = getelementptr inbounds %struct.Reg, %struct.Reg* %16176, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %16177 to i64*
  %16178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16179 = getelementptr inbounds %struct.GPR, %struct.GPR* %16178, i32 0, i32 1
  %16180 = getelementptr inbounds %struct.Reg, %struct.Reg* %16179, i32 0, i32 0
  %EAX.i357 = bitcast %union.anon* %16180 to i32*
  %16181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16182 = getelementptr inbounds %struct.GPR, %struct.GPR* %16181, i32 0, i32 5
  %16183 = getelementptr inbounds %struct.Reg, %struct.Reg* %16182, i32 0, i32 0
  %RCX.i358 = bitcast %union.anon* %16183 to i64*
  %16184 = load i32, i32* %EAX.i357
  %16185 = zext i32 %16184 to i64
  %16186 = load i64, i64* %PC.i356
  %16187 = add i64 %16186, 3
  store i64 %16187, i64* %PC.i356
  %16188 = shl i64 %16185, 32
  %16189 = ashr exact i64 %16188, 32
  store i64 %16189, i64* %RCX.i358, align 8
  store %struct.Memory* %loadMem_40bdd8, %struct.Memory** %MEMORY
  %loadMem_40bddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16191 = getelementptr inbounds %struct.GPR, %struct.GPR* %16190, i32 0, i32 33
  %16192 = getelementptr inbounds %struct.Reg, %struct.Reg* %16191, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %16192 to i64*
  %16193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16194 = getelementptr inbounds %struct.GPR, %struct.GPR* %16193, i32 0, i32 1
  %16195 = getelementptr inbounds %struct.Reg, %struct.Reg* %16194, i32 0, i32 0
  %RAX.i354 = bitcast %union.anon* %16195 to i64*
  %16196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16197 = getelementptr inbounds %struct.GPR, %struct.GPR* %16196, i32 0, i32 5
  %16198 = getelementptr inbounds %struct.Reg, %struct.Reg* %16197, i32 0, i32 0
  %RCX.i355 = bitcast %union.anon* %16198 to i64*
  %16199 = load i64, i64* %RCX.i355
  %16200 = add i64 %16199, 12099168
  %16201 = load i64, i64* %PC.i353
  %16202 = add i64 %16201, 8
  store i64 %16202, i64* %PC.i353
  %16203 = inttoptr i64 %16200 to i8*
  %16204 = load i8, i8* %16203
  %16205 = zext i8 %16204 to i64
  store i64 %16205, i64* %RAX.i354, align 8
  store %struct.Memory* %loadMem_40bddb, %struct.Memory** %MEMORY
  %loadMem_40bde3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16207 = getelementptr inbounds %struct.GPR, %struct.GPR* %16206, i32 0, i32 33
  %16208 = getelementptr inbounds %struct.Reg, %struct.Reg* %16207, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %16208 to i64*
  %16209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16210 = getelementptr inbounds %struct.GPR, %struct.GPR* %16209, i32 0, i32 1
  %16211 = getelementptr inbounds %struct.Reg, %struct.Reg* %16210, i32 0, i32 0
  %EAX.i351 = bitcast %union.anon* %16211 to i32*
  %16212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16213 = getelementptr inbounds %struct.GPR, %struct.GPR* %16212, i32 0, i32 15
  %16214 = getelementptr inbounds %struct.Reg, %struct.Reg* %16213, i32 0, i32 0
  %RBP.i352 = bitcast %union.anon* %16214 to i64*
  %16215 = load i32, i32* %EAX.i351
  %16216 = zext i32 %16215 to i64
  %16217 = load i64, i64* %RBP.i352
  %16218 = sub i64 %16217, 20
  %16219 = load i64, i64* %PC.i350
  %16220 = add i64 %16219, 3
  store i64 %16220, i64* %PC.i350
  %16221 = inttoptr i64 %16218 to i32*
  %16222 = load i32, i32* %16221
  %16223 = sub i32 %16215, %16222
  %16224 = icmp ult i32 %16215, %16222
  %16225 = zext i1 %16224 to i8
  %16226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16225, i8* %16226, align 1
  %16227 = and i32 %16223, 255
  %16228 = call i32 @llvm.ctpop.i32(i32 %16227)
  %16229 = trunc i32 %16228 to i8
  %16230 = and i8 %16229, 1
  %16231 = xor i8 %16230, 1
  %16232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16231, i8* %16232, align 1
  %16233 = xor i32 %16222, %16215
  %16234 = xor i32 %16233, %16223
  %16235 = lshr i32 %16234, 4
  %16236 = trunc i32 %16235 to i8
  %16237 = and i8 %16236, 1
  %16238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16237, i8* %16238, align 1
  %16239 = icmp eq i32 %16223, 0
  %16240 = zext i1 %16239 to i8
  %16241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16240, i8* %16241, align 1
  %16242 = lshr i32 %16223, 31
  %16243 = trunc i32 %16242 to i8
  %16244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16243, i8* %16244, align 1
  %16245 = lshr i32 %16215, 31
  %16246 = lshr i32 %16222, 31
  %16247 = xor i32 %16246, %16245
  %16248 = xor i32 %16242, %16245
  %16249 = add i32 %16248, %16247
  %16250 = icmp eq i32 %16249, 2
  %16251 = zext i1 %16250 to i8
  %16252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16251, i8* %16252, align 1
  store %struct.Memory* %loadMem_40bde3, %struct.Memory** %MEMORY
  %loadMem_40bde6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16254 = getelementptr inbounds %struct.GPR, %struct.GPR* %16253, i32 0, i32 33
  %16255 = getelementptr inbounds %struct.Reg, %struct.Reg* %16254, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %16255 to i64*
  %16256 = load i64, i64* %PC.i349
  %16257 = add i64 %16256, 34
  %16258 = load i64, i64* %PC.i349
  %16259 = add i64 %16258, 6
  %16260 = load i64, i64* %PC.i349
  %16261 = add i64 %16260, 6
  store i64 %16261, i64* %PC.i349
  %16262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16263 = load i8, i8* %16262, align 1
  %16264 = icmp eq i8 %16263, 0
  %16265 = zext i1 %16264 to i8
  store i8 %16265, i8* %BRANCH_TAKEN, align 1
  %16266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16267 = select i1 %16264, i64 %16257, i64 %16259
  store i64 %16267, i64* %16266, align 8
  store %struct.Memory* %loadMem_40bde6, %struct.Memory** %MEMORY
  %loadBr_40bde6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bde6 = icmp eq i8 %loadBr_40bde6, 1
  br i1 %cmpBr_40bde6, label %block_.L_40be08, label %block_40bdec

block_40bdec:                                     ; preds = %block_.L_40bdcf
  %loadMem_40bdec = load %struct.Memory*, %struct.Memory** %MEMORY
  %16268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16269 = getelementptr inbounds %struct.GPR, %struct.GPR* %16268, i32 0, i32 33
  %16270 = getelementptr inbounds %struct.Reg, %struct.Reg* %16269, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %16270 to i64*
  %16271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16272 = getelementptr inbounds %struct.GPR, %struct.GPR* %16271, i32 0, i32 1
  %16273 = getelementptr inbounds %struct.Reg, %struct.Reg* %16272, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %16273 to i64*
  %16274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16275 = getelementptr inbounds %struct.GPR, %struct.GPR* %16274, i32 0, i32 15
  %16276 = getelementptr inbounds %struct.Reg, %struct.Reg* %16275, i32 0, i32 0
  %RBP.i348 = bitcast %union.anon* %16276 to i64*
  %16277 = load i64, i64* %RBP.i348
  %16278 = sub i64 %16277, 4
  %16279 = load i64, i64* %PC.i346
  %16280 = add i64 %16279, 3
  store i64 %16280, i64* %PC.i346
  %16281 = inttoptr i64 %16278 to i32*
  %16282 = load i32, i32* %16281
  %16283 = zext i32 %16282 to i64
  store i64 %16283, i64* %RAX.i347, align 8
  store %struct.Memory* %loadMem_40bdec, %struct.Memory** %MEMORY
  %loadMem_40bdef = load %struct.Memory*, %struct.Memory** %MEMORY
  %16284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16285 = getelementptr inbounds %struct.GPR, %struct.GPR* %16284, i32 0, i32 33
  %16286 = getelementptr inbounds %struct.Reg, %struct.Reg* %16285, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %16286 to i64*
  %16287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16288 = getelementptr inbounds %struct.GPR, %struct.GPR* %16287, i32 0, i32 1
  %16289 = getelementptr inbounds %struct.Reg, %struct.Reg* %16288, i32 0, i32 0
  %RAX.i345 = bitcast %union.anon* %16289 to i64*
  %16290 = load i64, i64* %RAX.i345
  %16291 = load i64, i64* %PC.i344
  %16292 = add i64 %16291, 3
  store i64 %16292, i64* %PC.i344
  %16293 = trunc i64 %16290 to i32
  %16294 = add i32 1, %16293
  %16295 = zext i32 %16294 to i64
  store i64 %16295, i64* %RAX.i345, align 8
  %16296 = icmp ult i32 %16294, %16293
  %16297 = icmp ult i32 %16294, 1
  %16298 = or i1 %16296, %16297
  %16299 = zext i1 %16298 to i8
  %16300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16299, i8* %16300, align 1
  %16301 = and i32 %16294, 255
  %16302 = call i32 @llvm.ctpop.i32(i32 %16301)
  %16303 = trunc i32 %16302 to i8
  %16304 = and i8 %16303, 1
  %16305 = xor i8 %16304, 1
  %16306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16305, i8* %16306, align 1
  %16307 = xor i64 1, %16290
  %16308 = trunc i64 %16307 to i32
  %16309 = xor i32 %16308, %16294
  %16310 = lshr i32 %16309, 4
  %16311 = trunc i32 %16310 to i8
  %16312 = and i8 %16311, 1
  %16313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16312, i8* %16313, align 1
  %16314 = icmp eq i32 %16294, 0
  %16315 = zext i1 %16314 to i8
  %16316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16315, i8* %16316, align 1
  %16317 = lshr i32 %16294, 31
  %16318 = trunc i32 %16317 to i8
  %16319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16318, i8* %16319, align 1
  %16320 = lshr i32 %16293, 31
  %16321 = xor i32 %16317, %16320
  %16322 = add i32 %16321, %16317
  %16323 = icmp eq i32 %16322, 2
  %16324 = zext i1 %16323 to i8
  %16325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16324, i8* %16325, align 1
  store %struct.Memory* %loadMem_40bdef, %struct.Memory** %MEMORY
  %loadMem_40bdf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16327 = getelementptr inbounds %struct.GPR, %struct.GPR* %16326, i32 0, i32 33
  %16328 = getelementptr inbounds %struct.Reg, %struct.Reg* %16327, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %16328 to i64*
  %16329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16330 = getelementptr inbounds %struct.GPR, %struct.GPR* %16329, i32 0, i32 1
  %16331 = getelementptr inbounds %struct.Reg, %struct.Reg* %16330, i32 0, i32 0
  %RAX.i343 = bitcast %union.anon* %16331 to i64*
  %16332 = load i64, i64* %RAX.i343
  %16333 = load i64, i64* %PC.i342
  %16334 = add i64 %16333, 3
  store i64 %16334, i64* %PC.i342
  %16335 = trunc i64 %16332 to i32
  %16336 = add i32 20, %16335
  %16337 = zext i32 %16336 to i64
  store i64 %16337, i64* %RAX.i343, align 8
  %16338 = icmp ult i32 %16336, %16335
  %16339 = icmp ult i32 %16336, 20
  %16340 = or i1 %16338, %16339
  %16341 = zext i1 %16340 to i8
  %16342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16341, i8* %16342, align 1
  %16343 = and i32 %16336, 255
  %16344 = call i32 @llvm.ctpop.i32(i32 %16343)
  %16345 = trunc i32 %16344 to i8
  %16346 = and i8 %16345, 1
  %16347 = xor i8 %16346, 1
  %16348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16347, i8* %16348, align 1
  %16349 = xor i64 20, %16332
  %16350 = trunc i64 %16349 to i32
  %16351 = xor i32 %16350, %16336
  %16352 = lshr i32 %16351, 4
  %16353 = trunc i32 %16352 to i8
  %16354 = and i8 %16353, 1
  %16355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16354, i8* %16355, align 1
  %16356 = icmp eq i32 %16336, 0
  %16357 = zext i1 %16356 to i8
  %16358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16357, i8* %16358, align 1
  %16359 = lshr i32 %16336, 31
  %16360 = trunc i32 %16359 to i8
  %16361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16360, i8* %16361, align 1
  %16362 = lshr i32 %16335, 31
  %16363 = xor i32 %16359, %16362
  %16364 = add i32 %16363, %16359
  %16365 = icmp eq i32 %16364, 2
  %16366 = zext i1 %16365 to i8
  %16367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16366, i8* %16367, align 1
  store %struct.Memory* %loadMem_40bdf2, %struct.Memory** %MEMORY
  %loadMem_40bdf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16369 = getelementptr inbounds %struct.GPR, %struct.GPR* %16368, i32 0, i32 33
  %16370 = getelementptr inbounds %struct.Reg, %struct.Reg* %16369, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %16370 to i64*
  %16371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16372 = getelementptr inbounds %struct.GPR, %struct.GPR* %16371, i32 0, i32 1
  %16373 = getelementptr inbounds %struct.Reg, %struct.Reg* %16372, i32 0, i32 0
  %EAX.i340 = bitcast %union.anon* %16373 to i32*
  %16374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16375 = getelementptr inbounds %struct.GPR, %struct.GPR* %16374, i32 0, i32 5
  %16376 = getelementptr inbounds %struct.Reg, %struct.Reg* %16375, i32 0, i32 0
  %RCX.i341 = bitcast %union.anon* %16376 to i64*
  %16377 = load i32, i32* %EAX.i340
  %16378 = zext i32 %16377 to i64
  %16379 = load i64, i64* %PC.i339
  %16380 = add i64 %16379, 3
  store i64 %16380, i64* %PC.i339
  %16381 = shl i64 %16378, 32
  %16382 = ashr exact i64 %16381, 32
  store i64 %16382, i64* %RCX.i341, align 8
  store %struct.Memory* %loadMem_40bdf5, %struct.Memory** %MEMORY
  %loadMem_40bdf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16384 = getelementptr inbounds %struct.GPR, %struct.GPR* %16383, i32 0, i32 33
  %16385 = getelementptr inbounds %struct.Reg, %struct.Reg* %16384, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %16385 to i64*
  %16386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16387 = getelementptr inbounds %struct.GPR, %struct.GPR* %16386, i32 0, i32 1
  %16388 = getelementptr inbounds %struct.Reg, %struct.Reg* %16387, i32 0, i32 0
  %RAX.i337 = bitcast %union.anon* %16388 to i64*
  %16389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16390 = getelementptr inbounds %struct.GPR, %struct.GPR* %16389, i32 0, i32 5
  %16391 = getelementptr inbounds %struct.Reg, %struct.Reg* %16390, i32 0, i32 0
  %RCX.i338 = bitcast %union.anon* %16391 to i64*
  %16392 = load i64, i64* %RCX.i338
  %16393 = mul i64 %16392, 4
  %16394 = add i64 %16393, 11187184
  %16395 = load i64, i64* %PC.i336
  %16396 = add i64 %16395, 7
  store i64 %16396, i64* %PC.i336
  %16397 = inttoptr i64 %16394 to i32*
  %16398 = load i32, i32* %16397
  %16399 = zext i32 %16398 to i64
  store i64 %16399, i64* %RAX.i337, align 8
  store %struct.Memory* %loadMem_40bdf8, %struct.Memory** %MEMORY
  %loadMem_40bdff = load %struct.Memory*, %struct.Memory** %MEMORY
  %16400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16401 = getelementptr inbounds %struct.GPR, %struct.GPR* %16400, i32 0, i32 33
  %16402 = getelementptr inbounds %struct.Reg, %struct.Reg* %16401, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %16402 to i64*
  %16403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16404 = getelementptr inbounds %struct.GPR, %struct.GPR* %16403, i32 0, i32 1
  %16405 = getelementptr inbounds %struct.Reg, %struct.Reg* %16404, i32 0, i32 0
  %EAX.i334 = bitcast %union.anon* %16405 to i32*
  %16406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16407 = getelementptr inbounds %struct.GPR, %struct.GPR* %16406, i32 0, i32 15
  %16408 = getelementptr inbounds %struct.Reg, %struct.Reg* %16407, i32 0, i32 0
  %RBP.i335 = bitcast %union.anon* %16408 to i64*
  %16409 = load i32, i32* %EAX.i334
  %16410 = zext i32 %16409 to i64
  %16411 = load i64, i64* %RBP.i335
  %16412 = sub i64 %16411, 8
  %16413 = load i64, i64* %PC.i333
  %16414 = add i64 %16413, 3
  store i64 %16414, i64* %PC.i333
  %16415 = inttoptr i64 %16412 to i32*
  %16416 = load i32, i32* %16415
  %16417 = sub i32 %16409, %16416
  %16418 = icmp ult i32 %16409, %16416
  %16419 = zext i1 %16418 to i8
  %16420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16419, i8* %16420, align 1
  %16421 = and i32 %16417, 255
  %16422 = call i32 @llvm.ctpop.i32(i32 %16421)
  %16423 = trunc i32 %16422 to i8
  %16424 = and i8 %16423, 1
  %16425 = xor i8 %16424, 1
  %16426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16425, i8* %16426, align 1
  %16427 = xor i32 %16416, %16409
  %16428 = xor i32 %16427, %16417
  %16429 = lshr i32 %16428, 4
  %16430 = trunc i32 %16429 to i8
  %16431 = and i8 %16430, 1
  %16432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16431, i8* %16432, align 1
  %16433 = icmp eq i32 %16417, 0
  %16434 = zext i1 %16433 to i8
  %16435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16434, i8* %16435, align 1
  %16436 = lshr i32 %16417, 31
  %16437 = trunc i32 %16436 to i8
  %16438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16437, i8* %16438, align 1
  %16439 = lshr i32 %16409, 31
  %16440 = lshr i32 %16416, 31
  %16441 = xor i32 %16440, %16439
  %16442 = xor i32 %16436, %16439
  %16443 = add i32 %16442, %16441
  %16444 = icmp eq i32 %16443, 2
  %16445 = zext i1 %16444 to i8
  %16446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16445, i8* %16446, align 1
  store %struct.Memory* %loadMem_40bdff, %struct.Memory** %MEMORY
  %loadMem_40be02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16448 = getelementptr inbounds %struct.GPR, %struct.GPR* %16447, i32 0, i32 33
  %16449 = getelementptr inbounds %struct.Reg, %struct.Reg* %16448, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %16449 to i64*
  %16450 = load i64, i64* %PC.i332
  %16451 = add i64 %16450, 195
  %16452 = load i64, i64* %PC.i332
  %16453 = add i64 %16452, 6
  %16454 = load i64, i64* %PC.i332
  %16455 = add i64 %16454, 6
  store i64 %16455, i64* %PC.i332
  %16456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16457 = load i8, i8* %16456, align 1
  store i8 %16457, i8* %BRANCH_TAKEN, align 1
  %16458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16459 = icmp ne i8 %16457, 0
  %16460 = select i1 %16459, i64 %16451, i64 %16453
  store i64 %16460, i64* %16458, align 8
  store %struct.Memory* %loadMem_40be02, %struct.Memory** %MEMORY
  %loadBr_40be02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40be02 = icmp eq i8 %loadBr_40be02, 1
  br i1 %cmpBr_40be02, label %block_.L_40bec5, label %block_.L_40be08

block_.L_40be08:                                  ; preds = %block_40bdec, %block_.L_40bdcf
  %loadMem_40be08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16462 = getelementptr inbounds %struct.GPR, %struct.GPR* %16461, i32 0, i32 33
  %16463 = getelementptr inbounds %struct.Reg, %struct.Reg* %16462, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %16463 to i64*
  %16464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16465 = getelementptr inbounds %struct.GPR, %struct.GPR* %16464, i32 0, i32 1
  %16466 = getelementptr inbounds %struct.Reg, %struct.Reg* %16465, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %16466 to i64*
  %16467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16468 = getelementptr inbounds %struct.GPR, %struct.GPR* %16467, i32 0, i32 15
  %16469 = getelementptr inbounds %struct.Reg, %struct.Reg* %16468, i32 0, i32 0
  %RBP.i331 = bitcast %union.anon* %16469 to i64*
  %16470 = load i64, i64* %RBP.i331
  %16471 = sub i64 %16470, 4
  %16472 = load i64, i64* %PC.i329
  %16473 = add i64 %16472, 3
  store i64 %16473, i64* %PC.i329
  %16474 = inttoptr i64 %16471 to i32*
  %16475 = load i32, i32* %16474
  %16476 = zext i32 %16475 to i64
  store i64 %16476, i64* %RAX.i330, align 8
  store %struct.Memory* %loadMem_40be08, %struct.Memory** %MEMORY
  %loadMem_40be0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16478 = getelementptr inbounds %struct.GPR, %struct.GPR* %16477, i32 0, i32 33
  %16479 = getelementptr inbounds %struct.Reg, %struct.Reg* %16478, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %16479 to i64*
  %16480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16481 = getelementptr inbounds %struct.GPR, %struct.GPR* %16480, i32 0, i32 1
  %16482 = getelementptr inbounds %struct.Reg, %struct.Reg* %16481, i32 0, i32 0
  %RAX.i328 = bitcast %union.anon* %16482 to i64*
  %16483 = load i64, i64* %RAX.i328
  %16484 = load i64, i64* %PC.i327
  %16485 = add i64 %16484, 3
  store i64 %16485, i64* %PC.i327
  %16486 = trunc i64 %16483 to i32
  %16487 = add i32 1, %16486
  %16488 = zext i32 %16487 to i64
  store i64 %16488, i64* %RAX.i328, align 8
  %16489 = icmp ult i32 %16487, %16486
  %16490 = icmp ult i32 %16487, 1
  %16491 = or i1 %16489, %16490
  %16492 = zext i1 %16491 to i8
  %16493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16492, i8* %16493, align 1
  %16494 = and i32 %16487, 255
  %16495 = call i32 @llvm.ctpop.i32(i32 %16494)
  %16496 = trunc i32 %16495 to i8
  %16497 = and i8 %16496, 1
  %16498 = xor i8 %16497, 1
  %16499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16498, i8* %16499, align 1
  %16500 = xor i64 1, %16483
  %16501 = trunc i64 %16500 to i32
  %16502 = xor i32 %16501, %16487
  %16503 = lshr i32 %16502, 4
  %16504 = trunc i32 %16503 to i8
  %16505 = and i8 %16504, 1
  %16506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16505, i8* %16506, align 1
  %16507 = icmp eq i32 %16487, 0
  %16508 = zext i1 %16507 to i8
  %16509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16508, i8* %16509, align 1
  %16510 = lshr i32 %16487, 31
  %16511 = trunc i32 %16510 to i8
  %16512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16511, i8* %16512, align 1
  %16513 = lshr i32 %16486, 31
  %16514 = xor i32 %16510, %16513
  %16515 = add i32 %16514, %16510
  %16516 = icmp eq i32 %16515, 2
  %16517 = zext i1 %16516 to i8
  %16518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16517, i8* %16518, align 1
  store %struct.Memory* %loadMem_40be0b, %struct.Memory** %MEMORY
  %loadMem_40be0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16520 = getelementptr inbounds %struct.GPR, %struct.GPR* %16519, i32 0, i32 33
  %16521 = getelementptr inbounds %struct.Reg, %struct.Reg* %16520, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %16521 to i64*
  %16522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16523 = getelementptr inbounds %struct.GPR, %struct.GPR* %16522, i32 0, i32 1
  %16524 = getelementptr inbounds %struct.Reg, %struct.Reg* %16523, i32 0, i32 0
  %RAX.i326 = bitcast %union.anon* %16524 to i64*
  %16525 = load i64, i64* %RAX.i326
  %16526 = load i64, i64* %PC.i325
  %16527 = add i64 %16526, 3
  store i64 %16527, i64* %PC.i325
  %16528 = trunc i64 %16525 to i32
  %16529 = sub i32 %16528, 20
  %16530 = zext i32 %16529 to i64
  store i64 %16530, i64* %RAX.i326, align 8
  %16531 = icmp ult i32 %16528, 20
  %16532 = zext i1 %16531 to i8
  %16533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16532, i8* %16533, align 1
  %16534 = and i32 %16529, 255
  %16535 = call i32 @llvm.ctpop.i32(i32 %16534)
  %16536 = trunc i32 %16535 to i8
  %16537 = and i8 %16536, 1
  %16538 = xor i8 %16537, 1
  %16539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16538, i8* %16539, align 1
  %16540 = xor i64 20, %16525
  %16541 = trunc i64 %16540 to i32
  %16542 = xor i32 %16541, %16529
  %16543 = lshr i32 %16542, 4
  %16544 = trunc i32 %16543 to i8
  %16545 = and i8 %16544, 1
  %16546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16545, i8* %16546, align 1
  %16547 = icmp eq i32 %16529, 0
  %16548 = zext i1 %16547 to i8
  %16549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16548, i8* %16549, align 1
  %16550 = lshr i32 %16529, 31
  %16551 = trunc i32 %16550 to i8
  %16552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16551, i8* %16552, align 1
  %16553 = lshr i32 %16528, 31
  %16554 = xor i32 %16550, %16553
  %16555 = add i32 %16554, %16553
  %16556 = icmp eq i32 %16555, 2
  %16557 = zext i1 %16556 to i8
  %16558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16557, i8* %16558, align 1
  store %struct.Memory* %loadMem_40be0e, %struct.Memory** %MEMORY
  %loadMem_40be11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16560 = getelementptr inbounds %struct.GPR, %struct.GPR* %16559, i32 0, i32 33
  %16561 = getelementptr inbounds %struct.Reg, %struct.Reg* %16560, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %16561 to i64*
  %16562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16563 = getelementptr inbounds %struct.GPR, %struct.GPR* %16562, i32 0, i32 1
  %16564 = getelementptr inbounds %struct.Reg, %struct.Reg* %16563, i32 0, i32 0
  %EAX.i323 = bitcast %union.anon* %16564 to i32*
  %16565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16566 = getelementptr inbounds %struct.GPR, %struct.GPR* %16565, i32 0, i32 5
  %16567 = getelementptr inbounds %struct.Reg, %struct.Reg* %16566, i32 0, i32 0
  %RCX.i324 = bitcast %union.anon* %16567 to i64*
  %16568 = load i32, i32* %EAX.i323
  %16569 = zext i32 %16568 to i64
  %16570 = load i64, i64* %PC.i322
  %16571 = add i64 %16570, 3
  store i64 %16571, i64* %PC.i322
  %16572 = shl i64 %16569, 32
  %16573 = ashr exact i64 %16572, 32
  store i64 %16573, i64* %RCX.i324, align 8
  store %struct.Memory* %loadMem_40be11, %struct.Memory** %MEMORY
  %loadMem_40be14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16575 = getelementptr inbounds %struct.GPR, %struct.GPR* %16574, i32 0, i32 33
  %16576 = getelementptr inbounds %struct.Reg, %struct.Reg* %16575, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %16576 to i64*
  %16577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16578 = getelementptr inbounds %struct.GPR, %struct.GPR* %16577, i32 0, i32 1
  %16579 = getelementptr inbounds %struct.Reg, %struct.Reg* %16578, i32 0, i32 0
  %RAX.i320 = bitcast %union.anon* %16579 to i64*
  %16580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16581 = getelementptr inbounds %struct.GPR, %struct.GPR* %16580, i32 0, i32 5
  %16582 = getelementptr inbounds %struct.Reg, %struct.Reg* %16581, i32 0, i32 0
  %RCX.i321 = bitcast %union.anon* %16582 to i64*
  %16583 = load i64, i64* %RCX.i321
  %16584 = add i64 %16583, 12099168
  %16585 = load i64, i64* %PC.i319
  %16586 = add i64 %16585, 8
  store i64 %16586, i64* %PC.i319
  %16587 = inttoptr i64 %16584 to i8*
  %16588 = load i8, i8* %16587
  %16589 = zext i8 %16588 to i64
  store i64 %16589, i64* %RAX.i320, align 8
  store %struct.Memory* %loadMem_40be14, %struct.Memory** %MEMORY
  %loadMem_40be1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16591 = getelementptr inbounds %struct.GPR, %struct.GPR* %16590, i32 0, i32 33
  %16592 = getelementptr inbounds %struct.Reg, %struct.Reg* %16591, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %16592 to i64*
  %16593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16594 = getelementptr inbounds %struct.GPR, %struct.GPR* %16593, i32 0, i32 1
  %16595 = getelementptr inbounds %struct.Reg, %struct.Reg* %16594, i32 0, i32 0
  %EAX.i317 = bitcast %union.anon* %16595 to i32*
  %16596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16597 = getelementptr inbounds %struct.GPR, %struct.GPR* %16596, i32 0, i32 15
  %16598 = getelementptr inbounds %struct.Reg, %struct.Reg* %16597, i32 0, i32 0
  %RBP.i318 = bitcast %union.anon* %16598 to i64*
  %16599 = load i32, i32* %EAX.i317
  %16600 = zext i32 %16599 to i64
  %16601 = load i64, i64* %RBP.i318
  %16602 = sub i64 %16601, 20
  %16603 = load i64, i64* %PC.i316
  %16604 = add i64 %16603, 3
  store i64 %16604, i64* %PC.i316
  %16605 = inttoptr i64 %16602 to i32*
  %16606 = load i32, i32* %16605
  %16607 = sub i32 %16599, %16606
  %16608 = icmp ult i32 %16599, %16606
  %16609 = zext i1 %16608 to i8
  %16610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16609, i8* %16610, align 1
  %16611 = and i32 %16607, 255
  %16612 = call i32 @llvm.ctpop.i32(i32 %16611)
  %16613 = trunc i32 %16612 to i8
  %16614 = and i8 %16613, 1
  %16615 = xor i8 %16614, 1
  %16616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16615, i8* %16616, align 1
  %16617 = xor i32 %16606, %16599
  %16618 = xor i32 %16617, %16607
  %16619 = lshr i32 %16618, 4
  %16620 = trunc i32 %16619 to i8
  %16621 = and i8 %16620, 1
  %16622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16621, i8* %16622, align 1
  %16623 = icmp eq i32 %16607, 0
  %16624 = zext i1 %16623 to i8
  %16625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16624, i8* %16625, align 1
  %16626 = lshr i32 %16607, 31
  %16627 = trunc i32 %16626 to i8
  %16628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16627, i8* %16628, align 1
  %16629 = lshr i32 %16599, 31
  %16630 = lshr i32 %16606, 31
  %16631 = xor i32 %16630, %16629
  %16632 = xor i32 %16626, %16629
  %16633 = add i32 %16632, %16631
  %16634 = icmp eq i32 %16633, 2
  %16635 = zext i1 %16634 to i8
  %16636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16635, i8* %16636, align 1
  store %struct.Memory* %loadMem_40be1c, %struct.Memory** %MEMORY
  %loadMem_40be1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16638 = getelementptr inbounds %struct.GPR, %struct.GPR* %16637, i32 0, i32 33
  %16639 = getelementptr inbounds %struct.Reg, %struct.Reg* %16638, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %16639 to i64*
  %16640 = load i64, i64* %PC.i315
  %16641 = add i64 %16640, 34
  %16642 = load i64, i64* %PC.i315
  %16643 = add i64 %16642, 6
  %16644 = load i64, i64* %PC.i315
  %16645 = add i64 %16644, 6
  store i64 %16645, i64* %PC.i315
  %16646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16647 = load i8, i8* %16646, align 1
  %16648 = icmp eq i8 %16647, 0
  %16649 = zext i1 %16648 to i8
  store i8 %16649, i8* %BRANCH_TAKEN, align 1
  %16650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16651 = select i1 %16648, i64 %16641, i64 %16643
  store i64 %16651, i64* %16650, align 8
  store %struct.Memory* %loadMem_40be1f, %struct.Memory** %MEMORY
  %loadBr_40be1f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40be1f = icmp eq i8 %loadBr_40be1f, 1
  br i1 %cmpBr_40be1f, label %block_.L_40be41, label %block_40be25

block_40be25:                                     ; preds = %block_.L_40be08
  %loadMem_40be25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16653 = getelementptr inbounds %struct.GPR, %struct.GPR* %16652, i32 0, i32 33
  %16654 = getelementptr inbounds %struct.Reg, %struct.Reg* %16653, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %16654 to i64*
  %16655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16656 = getelementptr inbounds %struct.GPR, %struct.GPR* %16655, i32 0, i32 1
  %16657 = getelementptr inbounds %struct.Reg, %struct.Reg* %16656, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %16657 to i64*
  %16658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16659 = getelementptr inbounds %struct.GPR, %struct.GPR* %16658, i32 0, i32 15
  %16660 = getelementptr inbounds %struct.Reg, %struct.Reg* %16659, i32 0, i32 0
  %RBP.i314 = bitcast %union.anon* %16660 to i64*
  %16661 = load i64, i64* %RBP.i314
  %16662 = sub i64 %16661, 4
  %16663 = load i64, i64* %PC.i312
  %16664 = add i64 %16663, 3
  store i64 %16664, i64* %PC.i312
  %16665 = inttoptr i64 %16662 to i32*
  %16666 = load i32, i32* %16665
  %16667 = zext i32 %16666 to i64
  store i64 %16667, i64* %RAX.i313, align 8
  store %struct.Memory* %loadMem_40be25, %struct.Memory** %MEMORY
  %loadMem_40be28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16669 = getelementptr inbounds %struct.GPR, %struct.GPR* %16668, i32 0, i32 33
  %16670 = getelementptr inbounds %struct.Reg, %struct.Reg* %16669, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %16670 to i64*
  %16671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16672 = getelementptr inbounds %struct.GPR, %struct.GPR* %16671, i32 0, i32 1
  %16673 = getelementptr inbounds %struct.Reg, %struct.Reg* %16672, i32 0, i32 0
  %RAX.i311 = bitcast %union.anon* %16673 to i64*
  %16674 = load i64, i64* %RAX.i311
  %16675 = load i64, i64* %PC.i310
  %16676 = add i64 %16675, 3
  store i64 %16676, i64* %PC.i310
  %16677 = trunc i64 %16674 to i32
  %16678 = add i32 1, %16677
  %16679 = zext i32 %16678 to i64
  store i64 %16679, i64* %RAX.i311, align 8
  %16680 = icmp ult i32 %16678, %16677
  %16681 = icmp ult i32 %16678, 1
  %16682 = or i1 %16680, %16681
  %16683 = zext i1 %16682 to i8
  %16684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16683, i8* %16684, align 1
  %16685 = and i32 %16678, 255
  %16686 = call i32 @llvm.ctpop.i32(i32 %16685)
  %16687 = trunc i32 %16686 to i8
  %16688 = and i8 %16687, 1
  %16689 = xor i8 %16688, 1
  %16690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16689, i8* %16690, align 1
  %16691 = xor i64 1, %16674
  %16692 = trunc i64 %16691 to i32
  %16693 = xor i32 %16692, %16678
  %16694 = lshr i32 %16693, 4
  %16695 = trunc i32 %16694 to i8
  %16696 = and i8 %16695, 1
  %16697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16696, i8* %16697, align 1
  %16698 = icmp eq i32 %16678, 0
  %16699 = zext i1 %16698 to i8
  %16700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16699, i8* %16700, align 1
  %16701 = lshr i32 %16678, 31
  %16702 = trunc i32 %16701 to i8
  %16703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16702, i8* %16703, align 1
  %16704 = lshr i32 %16677, 31
  %16705 = xor i32 %16701, %16704
  %16706 = add i32 %16705, %16701
  %16707 = icmp eq i32 %16706, 2
  %16708 = zext i1 %16707 to i8
  %16709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16708, i8* %16709, align 1
  store %struct.Memory* %loadMem_40be28, %struct.Memory** %MEMORY
  %loadMem_40be2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16711 = getelementptr inbounds %struct.GPR, %struct.GPR* %16710, i32 0, i32 33
  %16712 = getelementptr inbounds %struct.Reg, %struct.Reg* %16711, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %16712 to i64*
  %16713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16714 = getelementptr inbounds %struct.GPR, %struct.GPR* %16713, i32 0, i32 1
  %16715 = getelementptr inbounds %struct.Reg, %struct.Reg* %16714, i32 0, i32 0
  %RAX.i309 = bitcast %union.anon* %16715 to i64*
  %16716 = load i64, i64* %RAX.i309
  %16717 = load i64, i64* %PC.i308
  %16718 = add i64 %16717, 3
  store i64 %16718, i64* %PC.i308
  %16719 = trunc i64 %16716 to i32
  %16720 = sub i32 %16719, 20
  %16721 = zext i32 %16720 to i64
  store i64 %16721, i64* %RAX.i309, align 8
  %16722 = icmp ult i32 %16719, 20
  %16723 = zext i1 %16722 to i8
  %16724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16723, i8* %16724, align 1
  %16725 = and i32 %16720, 255
  %16726 = call i32 @llvm.ctpop.i32(i32 %16725)
  %16727 = trunc i32 %16726 to i8
  %16728 = and i8 %16727, 1
  %16729 = xor i8 %16728, 1
  %16730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16729, i8* %16730, align 1
  %16731 = xor i64 20, %16716
  %16732 = trunc i64 %16731 to i32
  %16733 = xor i32 %16732, %16720
  %16734 = lshr i32 %16733, 4
  %16735 = trunc i32 %16734 to i8
  %16736 = and i8 %16735, 1
  %16737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16736, i8* %16737, align 1
  %16738 = icmp eq i32 %16720, 0
  %16739 = zext i1 %16738 to i8
  %16740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16739, i8* %16740, align 1
  %16741 = lshr i32 %16720, 31
  %16742 = trunc i32 %16741 to i8
  %16743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16742, i8* %16743, align 1
  %16744 = lshr i32 %16719, 31
  %16745 = xor i32 %16741, %16744
  %16746 = add i32 %16745, %16744
  %16747 = icmp eq i32 %16746, 2
  %16748 = zext i1 %16747 to i8
  %16749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16748, i8* %16749, align 1
  store %struct.Memory* %loadMem_40be2b, %struct.Memory** %MEMORY
  %loadMem_40be2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16751 = getelementptr inbounds %struct.GPR, %struct.GPR* %16750, i32 0, i32 33
  %16752 = getelementptr inbounds %struct.Reg, %struct.Reg* %16751, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %16752 to i64*
  %16753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16754 = getelementptr inbounds %struct.GPR, %struct.GPR* %16753, i32 0, i32 1
  %16755 = getelementptr inbounds %struct.Reg, %struct.Reg* %16754, i32 0, i32 0
  %EAX.i306 = bitcast %union.anon* %16755 to i32*
  %16756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16757 = getelementptr inbounds %struct.GPR, %struct.GPR* %16756, i32 0, i32 5
  %16758 = getelementptr inbounds %struct.Reg, %struct.Reg* %16757, i32 0, i32 0
  %RCX.i307 = bitcast %union.anon* %16758 to i64*
  %16759 = load i32, i32* %EAX.i306
  %16760 = zext i32 %16759 to i64
  %16761 = load i64, i64* %PC.i305
  %16762 = add i64 %16761, 3
  store i64 %16762, i64* %PC.i305
  %16763 = shl i64 %16760, 32
  %16764 = ashr exact i64 %16763, 32
  store i64 %16764, i64* %RCX.i307, align 8
  store %struct.Memory* %loadMem_40be2e, %struct.Memory** %MEMORY
  %loadMem_40be31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16766 = getelementptr inbounds %struct.GPR, %struct.GPR* %16765, i32 0, i32 33
  %16767 = getelementptr inbounds %struct.Reg, %struct.Reg* %16766, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %16767 to i64*
  %16768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16769 = getelementptr inbounds %struct.GPR, %struct.GPR* %16768, i32 0, i32 1
  %16770 = getelementptr inbounds %struct.Reg, %struct.Reg* %16769, i32 0, i32 0
  %RAX.i303 = bitcast %union.anon* %16770 to i64*
  %16771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16772 = getelementptr inbounds %struct.GPR, %struct.GPR* %16771, i32 0, i32 5
  %16773 = getelementptr inbounds %struct.Reg, %struct.Reg* %16772, i32 0, i32 0
  %RCX.i304 = bitcast %union.anon* %16773 to i64*
  %16774 = load i64, i64* %RCX.i304
  %16775 = mul i64 %16774, 4
  %16776 = add i64 %16775, 11187184
  %16777 = load i64, i64* %PC.i302
  %16778 = add i64 %16777, 7
  store i64 %16778, i64* %PC.i302
  %16779 = inttoptr i64 %16776 to i32*
  %16780 = load i32, i32* %16779
  %16781 = zext i32 %16780 to i64
  store i64 %16781, i64* %RAX.i303, align 8
  store %struct.Memory* %loadMem_40be31, %struct.Memory** %MEMORY
  %loadMem_40be38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16783 = getelementptr inbounds %struct.GPR, %struct.GPR* %16782, i32 0, i32 33
  %16784 = getelementptr inbounds %struct.Reg, %struct.Reg* %16783, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %16784 to i64*
  %16785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16786 = getelementptr inbounds %struct.GPR, %struct.GPR* %16785, i32 0, i32 1
  %16787 = getelementptr inbounds %struct.Reg, %struct.Reg* %16786, i32 0, i32 0
  %EAX.i300 = bitcast %union.anon* %16787 to i32*
  %16788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16789 = getelementptr inbounds %struct.GPR, %struct.GPR* %16788, i32 0, i32 15
  %16790 = getelementptr inbounds %struct.Reg, %struct.Reg* %16789, i32 0, i32 0
  %RBP.i301 = bitcast %union.anon* %16790 to i64*
  %16791 = load i32, i32* %EAX.i300
  %16792 = zext i32 %16791 to i64
  %16793 = load i64, i64* %RBP.i301
  %16794 = sub i64 %16793, 8
  %16795 = load i64, i64* %PC.i299
  %16796 = add i64 %16795, 3
  store i64 %16796, i64* %PC.i299
  %16797 = inttoptr i64 %16794 to i32*
  %16798 = load i32, i32* %16797
  %16799 = sub i32 %16791, %16798
  %16800 = icmp ult i32 %16791, %16798
  %16801 = zext i1 %16800 to i8
  %16802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16801, i8* %16802, align 1
  %16803 = and i32 %16799, 255
  %16804 = call i32 @llvm.ctpop.i32(i32 %16803)
  %16805 = trunc i32 %16804 to i8
  %16806 = and i8 %16805, 1
  %16807 = xor i8 %16806, 1
  %16808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16807, i8* %16808, align 1
  %16809 = xor i32 %16798, %16791
  %16810 = xor i32 %16809, %16799
  %16811 = lshr i32 %16810, 4
  %16812 = trunc i32 %16811 to i8
  %16813 = and i8 %16812, 1
  %16814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16813, i8* %16814, align 1
  %16815 = icmp eq i32 %16799, 0
  %16816 = zext i1 %16815 to i8
  %16817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16816, i8* %16817, align 1
  %16818 = lshr i32 %16799, 31
  %16819 = trunc i32 %16818 to i8
  %16820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16819, i8* %16820, align 1
  %16821 = lshr i32 %16791, 31
  %16822 = lshr i32 %16798, 31
  %16823 = xor i32 %16822, %16821
  %16824 = xor i32 %16818, %16821
  %16825 = add i32 %16824, %16823
  %16826 = icmp eq i32 %16825, 2
  %16827 = zext i1 %16826 to i8
  %16828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16827, i8* %16828, align 1
  store %struct.Memory* %loadMem_40be38, %struct.Memory** %MEMORY
  %loadMem_40be3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16830 = getelementptr inbounds %struct.GPR, %struct.GPR* %16829, i32 0, i32 33
  %16831 = getelementptr inbounds %struct.Reg, %struct.Reg* %16830, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %16831 to i64*
  %16832 = load i64, i64* %PC.i298
  %16833 = add i64 %16832, 138
  %16834 = load i64, i64* %PC.i298
  %16835 = add i64 %16834, 6
  %16836 = load i64, i64* %PC.i298
  %16837 = add i64 %16836, 6
  store i64 %16837, i64* %PC.i298
  %16838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16839 = load i8, i8* %16838, align 1
  store i8 %16839, i8* %BRANCH_TAKEN, align 1
  %16840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16841 = icmp ne i8 %16839, 0
  %16842 = select i1 %16841, i64 %16833, i64 %16835
  store i64 %16842, i64* %16840, align 8
  store %struct.Memory* %loadMem_40be3b, %struct.Memory** %MEMORY
  %loadBr_40be3b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40be3b = icmp eq i8 %loadBr_40be3b, 1
  br i1 %cmpBr_40be3b, label %block_.L_40bec5, label %block_.L_40be41

block_.L_40be41:                                  ; preds = %block_40be25, %block_.L_40be08
  %loadMem_40be41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16844 = getelementptr inbounds %struct.GPR, %struct.GPR* %16843, i32 0, i32 33
  %16845 = getelementptr inbounds %struct.Reg, %struct.Reg* %16844, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %16845 to i64*
  %16846 = load i64, i64* %PC.i297
  %16847 = add i64 %16846, 5
  %16848 = load i64, i64* %PC.i297
  %16849 = add i64 %16848, 5
  store i64 %16849, i64* %PC.i297
  %16850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16847, i64* %16850, align 8
  store %struct.Memory* %loadMem_40be41, %struct.Memory** %MEMORY
  br label %block_.L_40be46

block_.L_40be46:                                  ; preds = %block_.L_40be41
  %loadMem_40be46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16852 = getelementptr inbounds %struct.GPR, %struct.GPR* %16851, i32 0, i32 33
  %16853 = getelementptr inbounds %struct.Reg, %struct.Reg* %16852, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %16853 to i64*
  %16854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16855 = getelementptr inbounds %struct.GPR, %struct.GPR* %16854, i32 0, i32 1
  %16856 = getelementptr inbounds %struct.Reg, %struct.Reg* %16855, i32 0, i32 0
  %RAX.i296 = bitcast %union.anon* %16856 to i64*
  %16857 = load i64, i64* %PC.i295
  %16858 = add i64 %16857, 10
  store i64 %16858, i64* %PC.i295
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i296, align 8
  store %struct.Memory* %loadMem_40be46, %struct.Memory** %MEMORY
  %loadMem_40be50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16860 = getelementptr inbounds %struct.GPR, %struct.GPR* %16859, i32 0, i32 33
  %16861 = getelementptr inbounds %struct.Reg, %struct.Reg* %16860, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %16861 to i64*
  %16862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16863 = getelementptr inbounds %struct.GPR, %struct.GPR* %16862, i32 0, i32 5
  %16864 = getelementptr inbounds %struct.Reg, %struct.Reg* %16863, i32 0, i32 0
  %RCX.i293 = bitcast %union.anon* %16864 to i64*
  %16865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16866 = getelementptr inbounds %struct.GPR, %struct.GPR* %16865, i32 0, i32 15
  %16867 = getelementptr inbounds %struct.Reg, %struct.Reg* %16866, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %16867 to i64*
  %16868 = load i64, i64* %RBP.i294
  %16869 = sub i64 %16868, 8
  %16870 = load i64, i64* %PC.i292
  %16871 = add i64 %16870, 4
  store i64 %16871, i64* %PC.i292
  %16872 = inttoptr i64 %16869 to i32*
  %16873 = load i32, i32* %16872
  %16874 = sext i32 %16873 to i64
  store i64 %16874, i64* %RCX.i293, align 8
  store %struct.Memory* %loadMem_40be50, %struct.Memory** %MEMORY
  %loadMem_40be54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16876 = getelementptr inbounds %struct.GPR, %struct.GPR* %16875, i32 0, i32 33
  %16877 = getelementptr inbounds %struct.Reg, %struct.Reg* %16876, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %16877 to i64*
  %16878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16879 = getelementptr inbounds %struct.GPR, %struct.GPR* %16878, i32 0, i32 5
  %16880 = getelementptr inbounds %struct.Reg, %struct.Reg* %16879, i32 0, i32 0
  %RCX.i291 = bitcast %union.anon* %16880 to i64*
  %16881 = load i64, i64* %RCX.i291
  %16882 = load i64, i64* %PC.i290
  %16883 = add i64 %16882, 7
  store i64 %16883, i64* %PC.i290
  %16884 = sext i64 %16881 to i128
  %16885 = and i128 %16884, -18446744073709551616
  %16886 = zext i64 %16881 to i128
  %16887 = or i128 %16885, %16886
  %16888 = mul i128 744, %16887
  %16889 = trunc i128 %16888 to i64
  store i64 %16889, i64* %RCX.i291, align 8
  %16890 = sext i64 %16889 to i128
  %16891 = icmp ne i128 %16890, %16888
  %16892 = zext i1 %16891 to i8
  %16893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16892, i8* %16893, align 1
  %16894 = trunc i128 %16888 to i32
  %16895 = and i32 %16894, 255
  %16896 = call i32 @llvm.ctpop.i32(i32 %16895)
  %16897 = trunc i32 %16896 to i8
  %16898 = and i8 %16897, 1
  %16899 = xor i8 %16898, 1
  %16900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16899, i8* %16900, align 1
  %16901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16901, align 1
  %16902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16902, align 1
  %16903 = lshr i64 %16889, 63
  %16904 = trunc i64 %16903 to i8
  %16905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16904, i8* %16905, align 1
  %16906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16892, i8* %16906, align 1
  store %struct.Memory* %loadMem_40be54, %struct.Memory** %MEMORY
  %loadMem_40be5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16908 = getelementptr inbounds %struct.GPR, %struct.GPR* %16907, i32 0, i32 33
  %16909 = getelementptr inbounds %struct.Reg, %struct.Reg* %16908, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %16909 to i64*
  %16910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16911 = getelementptr inbounds %struct.GPR, %struct.GPR* %16910, i32 0, i32 1
  %16912 = getelementptr inbounds %struct.Reg, %struct.Reg* %16911, i32 0, i32 0
  %RAX.i288 = bitcast %union.anon* %16912 to i64*
  %16913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16914 = getelementptr inbounds %struct.GPR, %struct.GPR* %16913, i32 0, i32 5
  %16915 = getelementptr inbounds %struct.Reg, %struct.Reg* %16914, i32 0, i32 0
  %RCX.i289 = bitcast %union.anon* %16915 to i64*
  %16916 = load i64, i64* %RAX.i288
  %16917 = load i64, i64* %RCX.i289
  %16918 = load i64, i64* %PC.i287
  %16919 = add i64 %16918, 3
  store i64 %16919, i64* %PC.i287
  %16920 = add i64 %16917, %16916
  store i64 %16920, i64* %RAX.i288, align 8
  %16921 = icmp ult i64 %16920, %16916
  %16922 = icmp ult i64 %16920, %16917
  %16923 = or i1 %16921, %16922
  %16924 = zext i1 %16923 to i8
  %16925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16924, i8* %16925, align 1
  %16926 = trunc i64 %16920 to i32
  %16927 = and i32 %16926, 255
  %16928 = call i32 @llvm.ctpop.i32(i32 %16927)
  %16929 = trunc i32 %16928 to i8
  %16930 = and i8 %16929, 1
  %16931 = xor i8 %16930, 1
  %16932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16931, i8* %16932, align 1
  %16933 = xor i64 %16917, %16916
  %16934 = xor i64 %16933, %16920
  %16935 = lshr i64 %16934, 4
  %16936 = trunc i64 %16935 to i8
  %16937 = and i8 %16936, 1
  %16938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16937, i8* %16938, align 1
  %16939 = icmp eq i64 %16920, 0
  %16940 = zext i1 %16939 to i8
  %16941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16940, i8* %16941, align 1
  %16942 = lshr i64 %16920, 63
  %16943 = trunc i64 %16942 to i8
  %16944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16943, i8* %16944, align 1
  %16945 = lshr i64 %16916, 63
  %16946 = lshr i64 %16917, 63
  %16947 = xor i64 %16942, %16945
  %16948 = xor i64 %16942, %16946
  %16949 = add i64 %16947, %16948
  %16950 = icmp eq i64 %16949, 2
  %16951 = zext i1 %16950 to i8
  %16952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16951, i8* %16952, align 1
  store %struct.Memory* %loadMem_40be5b, %struct.Memory** %MEMORY
  %loadMem_40be5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16954 = getelementptr inbounds %struct.GPR, %struct.GPR* %16953, i32 0, i32 33
  %16955 = getelementptr inbounds %struct.Reg, %struct.Reg* %16954, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %16955 to i64*
  %16956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16957 = getelementptr inbounds %struct.GPR, %struct.GPR* %16956, i32 0, i32 1
  %16958 = getelementptr inbounds %struct.Reg, %struct.Reg* %16957, i32 0, i32 0
  %RAX.i286 = bitcast %union.anon* %16958 to i64*
  %16959 = load i64, i64* %RAX.i286
  %16960 = add i64 %16959, 12
  %16961 = load i64, i64* %PC.i285
  %16962 = add i64 %16961, 4
  store i64 %16962, i64* %PC.i285
  %16963 = inttoptr i64 %16960 to i32*
  %16964 = load i32, i32* %16963
  %16965 = sub i32 %16964, 20
  %16966 = icmp ult i32 %16964, 20
  %16967 = zext i1 %16966 to i8
  %16968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16967, i8* %16968, align 1
  %16969 = and i32 %16965, 255
  %16970 = call i32 @llvm.ctpop.i32(i32 %16969)
  %16971 = trunc i32 %16970 to i8
  %16972 = and i8 %16971, 1
  %16973 = xor i8 %16972, 1
  %16974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16973, i8* %16974, align 1
  %16975 = xor i32 %16964, 20
  %16976 = xor i32 %16975, %16965
  %16977 = lshr i32 %16976, 4
  %16978 = trunc i32 %16977 to i8
  %16979 = and i8 %16978, 1
  %16980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16979, i8* %16980, align 1
  %16981 = icmp eq i32 %16965, 0
  %16982 = zext i1 %16981 to i8
  %16983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16982, i8* %16983, align 1
  %16984 = lshr i32 %16965, 31
  %16985 = trunc i32 %16984 to i8
  %16986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16985, i8* %16986, align 1
  %16987 = lshr i32 %16964, 31
  %16988 = xor i32 %16984, %16987
  %16989 = add i32 %16988, %16987
  %16990 = icmp eq i32 %16989, 2
  %16991 = zext i1 %16990 to i8
  %16992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16991, i8* %16992, align 1
  store %struct.Memory* %loadMem_40be5e, %struct.Memory** %MEMORY
  %loadMem_40be62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16994 = getelementptr inbounds %struct.GPR, %struct.GPR* %16993, i32 0, i32 33
  %16995 = getelementptr inbounds %struct.Reg, %struct.Reg* %16994, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %16995 to i64*
  %16996 = load i64, i64* %PC.i284
  %16997 = add i64 %16996, 61
  %16998 = load i64, i64* %PC.i284
  %16999 = add i64 %16998, 6
  %17000 = load i64, i64* %PC.i284
  %17001 = add i64 %17000, 6
  store i64 %17001, i64* %PC.i284
  %17002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17003 = load i8, i8* %17002, align 1
  %17004 = icmp ne i8 %17003, 0
  %17005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17006 = load i8, i8* %17005, align 1
  %17007 = icmp ne i8 %17006, 0
  %17008 = xor i1 %17004, %17007
  %17009 = xor i1 %17008, true
  %17010 = zext i1 %17009 to i8
  store i8 %17010, i8* %BRANCH_TAKEN, align 1
  %17011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17012 = select i1 %17008, i64 %16999, i64 %16997
  store i64 %17012, i64* %17011, align 8
  store %struct.Memory* %loadMem_40be62, %struct.Memory** %MEMORY
  %loadBr_40be62 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40be62 = icmp eq i8 %loadBr_40be62, 1
  br i1 %cmpBr_40be62, label %block_.L_40be9f, label %block_40be68

block_40be68:                                     ; preds = %block_.L_40be46
  %loadMem_40be68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17014 = getelementptr inbounds %struct.GPR, %struct.GPR* %17013, i32 0, i32 33
  %17015 = getelementptr inbounds %struct.Reg, %struct.Reg* %17014, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %17015 to i64*
  %17016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17017 = getelementptr inbounds %struct.GPR, %struct.GPR* %17016, i32 0, i32 1
  %17018 = getelementptr inbounds %struct.Reg, %struct.Reg* %17017, i32 0, i32 0
  %RAX.i283 = bitcast %union.anon* %17018 to i64*
  %17019 = load i64, i64* %PC.i282
  %17020 = add i64 %17019, 10
  store i64 %17020, i64* %PC.i282
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i283, align 8
  store %struct.Memory* %loadMem_40be68, %struct.Memory** %MEMORY
  %loadMem_40be72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17022 = getelementptr inbounds %struct.GPR, %struct.GPR* %17021, i32 0, i32 33
  %17023 = getelementptr inbounds %struct.Reg, %struct.Reg* %17022, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %17023 to i64*
  %17024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17025 = getelementptr inbounds %struct.GPR, %struct.GPR* %17024, i32 0, i32 5
  %17026 = getelementptr inbounds %struct.Reg, %struct.Reg* %17025, i32 0, i32 0
  %RCX.i280 = bitcast %union.anon* %17026 to i64*
  %17027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17028 = getelementptr inbounds %struct.GPR, %struct.GPR* %17027, i32 0, i32 15
  %17029 = getelementptr inbounds %struct.Reg, %struct.Reg* %17028, i32 0, i32 0
  %RBP.i281 = bitcast %union.anon* %17029 to i64*
  %17030 = load i64, i64* %RBP.i281
  %17031 = sub i64 %17030, 4
  %17032 = load i64, i64* %PC.i279
  %17033 = add i64 %17032, 3
  store i64 %17033, i64* %PC.i279
  %17034 = inttoptr i64 %17031 to i32*
  %17035 = load i32, i32* %17034
  %17036 = zext i32 %17035 to i64
  store i64 %17036, i64* %RCX.i280, align 8
  store %struct.Memory* %loadMem_40be72, %struct.Memory** %MEMORY
  %loadMem_40be75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17038 = getelementptr inbounds %struct.GPR, %struct.GPR* %17037, i32 0, i32 33
  %17039 = getelementptr inbounds %struct.Reg, %struct.Reg* %17038, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %17039 to i64*
  %17040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17041 = getelementptr inbounds %struct.GPR, %struct.GPR* %17040, i32 0, i32 5
  %17042 = getelementptr inbounds %struct.Reg, %struct.Reg* %17041, i32 0, i32 0
  %RCX.i278 = bitcast %union.anon* %17042 to i64*
  %17043 = load i64, i64* %RCX.i278
  %17044 = load i64, i64* %PC.i277
  %17045 = add i64 %17044, 3
  store i64 %17045, i64* %PC.i277
  %17046 = trunc i64 %17043 to i32
  %17047 = add i32 1, %17046
  %17048 = zext i32 %17047 to i64
  store i64 %17048, i64* %RCX.i278, align 8
  %17049 = icmp ult i32 %17047, %17046
  %17050 = icmp ult i32 %17047, 1
  %17051 = or i1 %17049, %17050
  %17052 = zext i1 %17051 to i8
  %17053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17052, i8* %17053, align 1
  %17054 = and i32 %17047, 255
  %17055 = call i32 @llvm.ctpop.i32(i32 %17054)
  %17056 = trunc i32 %17055 to i8
  %17057 = and i8 %17056, 1
  %17058 = xor i8 %17057, 1
  %17059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17058, i8* %17059, align 1
  %17060 = xor i64 1, %17043
  %17061 = trunc i64 %17060 to i32
  %17062 = xor i32 %17061, %17047
  %17063 = lshr i32 %17062, 4
  %17064 = trunc i32 %17063 to i8
  %17065 = and i8 %17064, 1
  %17066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17065, i8* %17066, align 1
  %17067 = icmp eq i32 %17047, 0
  %17068 = zext i1 %17067 to i8
  %17069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17068, i8* %17069, align 1
  %17070 = lshr i32 %17047, 31
  %17071 = trunc i32 %17070 to i8
  %17072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17071, i8* %17072, align 1
  %17073 = lshr i32 %17046, 31
  %17074 = xor i32 %17070, %17073
  %17075 = add i32 %17074, %17070
  %17076 = icmp eq i32 %17075, 2
  %17077 = zext i1 %17076 to i8
  %17078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17077, i8* %17078, align 1
  store %struct.Memory* %loadMem_40be75, %struct.Memory** %MEMORY
  %loadMem_40be78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17080 = getelementptr inbounds %struct.GPR, %struct.GPR* %17079, i32 0, i32 33
  %17081 = getelementptr inbounds %struct.Reg, %struct.Reg* %17080, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %17081 to i64*
  %17082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17083 = getelementptr inbounds %struct.GPR, %struct.GPR* %17082, i32 0, i32 7
  %17084 = getelementptr inbounds %struct.Reg, %struct.Reg* %17083, i32 0, i32 0
  %RDX.i275 = bitcast %union.anon* %17084 to i64*
  %17085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17086 = getelementptr inbounds %struct.GPR, %struct.GPR* %17085, i32 0, i32 15
  %17087 = getelementptr inbounds %struct.Reg, %struct.Reg* %17086, i32 0, i32 0
  %RBP.i276 = bitcast %union.anon* %17087 to i64*
  %17088 = load i64, i64* %RBP.i276
  %17089 = sub i64 %17088, 8
  %17090 = load i64, i64* %PC.i274
  %17091 = add i64 %17090, 4
  store i64 %17091, i64* %PC.i274
  %17092 = inttoptr i64 %17089 to i32*
  %17093 = load i32, i32* %17092
  %17094 = sext i32 %17093 to i64
  store i64 %17094, i64* %RDX.i275, align 8
  store %struct.Memory* %loadMem_40be78, %struct.Memory** %MEMORY
  %loadMem_40be7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17096 = getelementptr inbounds %struct.GPR, %struct.GPR* %17095, i32 0, i32 33
  %17097 = getelementptr inbounds %struct.Reg, %struct.Reg* %17096, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %17097 to i64*
  %17098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17099 = getelementptr inbounds %struct.GPR, %struct.GPR* %17098, i32 0, i32 7
  %17100 = getelementptr inbounds %struct.Reg, %struct.Reg* %17099, i32 0, i32 0
  %RDX.i273 = bitcast %union.anon* %17100 to i64*
  %17101 = load i64, i64* %RDX.i273
  %17102 = load i64, i64* %PC.i272
  %17103 = add i64 %17102, 7
  store i64 %17103, i64* %PC.i272
  %17104 = sext i64 %17101 to i128
  %17105 = and i128 %17104, -18446744073709551616
  %17106 = zext i64 %17101 to i128
  %17107 = or i128 %17105, %17106
  %17108 = mul i128 744, %17107
  %17109 = trunc i128 %17108 to i64
  store i64 %17109, i64* %RDX.i273, align 8
  %17110 = sext i64 %17109 to i128
  %17111 = icmp ne i128 %17110, %17108
  %17112 = zext i1 %17111 to i8
  %17113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17112, i8* %17113, align 1
  %17114 = trunc i128 %17108 to i32
  %17115 = and i32 %17114, 255
  %17116 = call i32 @llvm.ctpop.i32(i32 %17115)
  %17117 = trunc i32 %17116 to i8
  %17118 = and i8 %17117, 1
  %17119 = xor i8 %17118, 1
  %17120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17119, i8* %17120, align 1
  %17121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17121, align 1
  %17122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17122, align 1
  %17123 = lshr i64 %17109, 63
  %17124 = trunc i64 %17123 to i8
  %17125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17124, i8* %17125, align 1
  %17126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17112, i8* %17126, align 1
  store %struct.Memory* %loadMem_40be7c, %struct.Memory** %MEMORY
  %loadMem_40be83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17128 = getelementptr inbounds %struct.GPR, %struct.GPR* %17127, i32 0, i32 33
  %17129 = getelementptr inbounds %struct.Reg, %struct.Reg* %17128, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %17129 to i64*
  %17130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17131 = getelementptr inbounds %struct.GPR, %struct.GPR* %17130, i32 0, i32 1
  %17132 = getelementptr inbounds %struct.Reg, %struct.Reg* %17131, i32 0, i32 0
  %RAX.i270 = bitcast %union.anon* %17132 to i64*
  %17133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17134 = getelementptr inbounds %struct.GPR, %struct.GPR* %17133, i32 0, i32 9
  %17135 = getelementptr inbounds %struct.Reg, %struct.Reg* %17134, i32 0, i32 0
  %RSI.i271 = bitcast %union.anon* %17135 to i64*
  %17136 = load i64, i64* %RAX.i270
  %17137 = load i64, i64* %PC.i269
  %17138 = add i64 %17137, 3
  store i64 %17138, i64* %PC.i269
  store i64 %17136, i64* %RSI.i271, align 8
  store %struct.Memory* %loadMem_40be83, %struct.Memory** %MEMORY
  %loadMem_40be86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17140 = getelementptr inbounds %struct.GPR, %struct.GPR* %17139, i32 0, i32 33
  %17141 = getelementptr inbounds %struct.Reg, %struct.Reg* %17140, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %17141 to i64*
  %17142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17143 = getelementptr inbounds %struct.GPR, %struct.GPR* %17142, i32 0, i32 7
  %17144 = getelementptr inbounds %struct.Reg, %struct.Reg* %17143, i32 0, i32 0
  %RDX.i267 = bitcast %union.anon* %17144 to i64*
  %17145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17146 = getelementptr inbounds %struct.GPR, %struct.GPR* %17145, i32 0, i32 9
  %17147 = getelementptr inbounds %struct.Reg, %struct.Reg* %17146, i32 0, i32 0
  %RSI.i268 = bitcast %union.anon* %17147 to i64*
  %17148 = load i64, i64* %RSI.i268
  %17149 = load i64, i64* %RDX.i267
  %17150 = load i64, i64* %PC.i266
  %17151 = add i64 %17150, 3
  store i64 %17151, i64* %PC.i266
  %17152 = add i64 %17149, %17148
  store i64 %17152, i64* %RSI.i268, align 8
  %17153 = icmp ult i64 %17152, %17148
  %17154 = icmp ult i64 %17152, %17149
  %17155 = or i1 %17153, %17154
  %17156 = zext i1 %17155 to i8
  %17157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17156, i8* %17157, align 1
  %17158 = trunc i64 %17152 to i32
  %17159 = and i32 %17158, 255
  %17160 = call i32 @llvm.ctpop.i32(i32 %17159)
  %17161 = trunc i32 %17160 to i8
  %17162 = and i8 %17161, 1
  %17163 = xor i8 %17162, 1
  %17164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17163, i8* %17164, align 1
  %17165 = xor i64 %17149, %17148
  %17166 = xor i64 %17165, %17152
  %17167 = lshr i64 %17166, 4
  %17168 = trunc i64 %17167 to i8
  %17169 = and i8 %17168, 1
  %17170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17169, i8* %17170, align 1
  %17171 = icmp eq i64 %17152, 0
  %17172 = zext i1 %17171 to i8
  %17173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17172, i8* %17173, align 1
  %17174 = lshr i64 %17152, 63
  %17175 = trunc i64 %17174 to i8
  %17176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17175, i8* %17176, align 1
  %17177 = lshr i64 %17148, 63
  %17178 = lshr i64 %17149, 63
  %17179 = xor i64 %17174, %17177
  %17180 = xor i64 %17174, %17178
  %17181 = add i64 %17179, %17180
  %17182 = icmp eq i64 %17181, 2
  %17183 = zext i1 %17182 to i8
  %17184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17183, i8* %17184, align 1
  store %struct.Memory* %loadMem_40be86, %struct.Memory** %MEMORY
  %loadMem_40be89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17186 = getelementptr inbounds %struct.GPR, %struct.GPR* %17185, i32 0, i32 33
  %17187 = getelementptr inbounds %struct.Reg, %struct.Reg* %17186, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %17187 to i64*
  %17188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17189 = getelementptr inbounds %struct.GPR, %struct.GPR* %17188, i32 0, i32 7
  %17190 = getelementptr inbounds %struct.Reg, %struct.Reg* %17189, i32 0, i32 0
  %RDX.i264 = bitcast %union.anon* %17190 to i64*
  %17191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17192 = getelementptr inbounds %struct.GPR, %struct.GPR* %17191, i32 0, i32 15
  %17193 = getelementptr inbounds %struct.Reg, %struct.Reg* %17192, i32 0, i32 0
  %RBP.i265 = bitcast %union.anon* %17193 to i64*
  %17194 = load i64, i64* %RBP.i265
  %17195 = sub i64 %17194, 8
  %17196 = load i64, i64* %PC.i263
  %17197 = add i64 %17196, 4
  store i64 %17197, i64* %PC.i263
  %17198 = inttoptr i64 %17195 to i32*
  %17199 = load i32, i32* %17198
  %17200 = sext i32 %17199 to i64
  store i64 %17200, i64* %RDX.i264, align 8
  store %struct.Memory* %loadMem_40be89, %struct.Memory** %MEMORY
  %loadMem_40be8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17202 = getelementptr inbounds %struct.GPR, %struct.GPR* %17201, i32 0, i32 33
  %17203 = getelementptr inbounds %struct.Reg, %struct.Reg* %17202, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %17203 to i64*
  %17204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17205 = getelementptr inbounds %struct.GPR, %struct.GPR* %17204, i32 0, i32 7
  %17206 = getelementptr inbounds %struct.Reg, %struct.Reg* %17205, i32 0, i32 0
  %RDX.i262 = bitcast %union.anon* %17206 to i64*
  %17207 = load i64, i64* %RDX.i262
  %17208 = load i64, i64* %PC.i261
  %17209 = add i64 %17208, 7
  store i64 %17209, i64* %PC.i261
  %17210 = sext i64 %17207 to i128
  %17211 = and i128 %17210, -18446744073709551616
  %17212 = zext i64 %17207 to i128
  %17213 = or i128 %17211, %17212
  %17214 = mul i128 744, %17213
  %17215 = trunc i128 %17214 to i64
  store i64 %17215, i64* %RDX.i262, align 8
  %17216 = sext i64 %17215 to i128
  %17217 = icmp ne i128 %17216, %17214
  %17218 = zext i1 %17217 to i8
  %17219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17218, i8* %17219, align 1
  %17220 = trunc i128 %17214 to i32
  %17221 = and i32 %17220, 255
  %17222 = call i32 @llvm.ctpop.i32(i32 %17221)
  %17223 = trunc i32 %17222 to i8
  %17224 = and i8 %17223, 1
  %17225 = xor i8 %17224, 1
  %17226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17225, i8* %17226, align 1
  %17227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17227, align 1
  %17228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17228, align 1
  %17229 = lshr i64 %17215, 63
  %17230 = trunc i64 %17229 to i8
  %17231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17230, i8* %17231, align 1
  %17232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17218, i8* %17232, align 1
  store %struct.Memory* %loadMem_40be8d, %struct.Memory** %MEMORY
  %loadMem_40be94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17234 = getelementptr inbounds %struct.GPR, %struct.GPR* %17233, i32 0, i32 33
  %17235 = getelementptr inbounds %struct.Reg, %struct.Reg* %17234, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %17235 to i64*
  %17236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17237 = getelementptr inbounds %struct.GPR, %struct.GPR* %17236, i32 0, i32 1
  %17238 = getelementptr inbounds %struct.Reg, %struct.Reg* %17237, i32 0, i32 0
  %RAX.i259 = bitcast %union.anon* %17238 to i64*
  %17239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17240 = getelementptr inbounds %struct.GPR, %struct.GPR* %17239, i32 0, i32 7
  %17241 = getelementptr inbounds %struct.Reg, %struct.Reg* %17240, i32 0, i32 0
  %RDX.i260 = bitcast %union.anon* %17241 to i64*
  %17242 = load i64, i64* %RAX.i259
  %17243 = load i64, i64* %RDX.i260
  %17244 = load i64, i64* %PC.i258
  %17245 = add i64 %17244, 3
  store i64 %17245, i64* %PC.i258
  %17246 = add i64 %17243, %17242
  store i64 %17246, i64* %RAX.i259, align 8
  %17247 = icmp ult i64 %17246, %17242
  %17248 = icmp ult i64 %17246, %17243
  %17249 = or i1 %17247, %17248
  %17250 = zext i1 %17249 to i8
  %17251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17250, i8* %17251, align 1
  %17252 = trunc i64 %17246 to i32
  %17253 = and i32 %17252, 255
  %17254 = call i32 @llvm.ctpop.i32(i32 %17253)
  %17255 = trunc i32 %17254 to i8
  %17256 = and i8 %17255, 1
  %17257 = xor i8 %17256, 1
  %17258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17257, i8* %17258, align 1
  %17259 = xor i64 %17243, %17242
  %17260 = xor i64 %17259, %17246
  %17261 = lshr i64 %17260, 4
  %17262 = trunc i64 %17261 to i8
  %17263 = and i8 %17262, 1
  %17264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17263, i8* %17264, align 1
  %17265 = icmp eq i64 %17246, 0
  %17266 = zext i1 %17265 to i8
  %17267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17266, i8* %17267, align 1
  %17268 = lshr i64 %17246, 63
  %17269 = trunc i64 %17268 to i8
  %17270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17269, i8* %17270, align 1
  %17271 = lshr i64 %17242, 63
  %17272 = lshr i64 %17243, 63
  %17273 = xor i64 %17268, %17271
  %17274 = xor i64 %17268, %17272
  %17275 = add i64 %17273, %17274
  %17276 = icmp eq i64 %17275, 2
  %17277 = zext i1 %17276 to i8
  %17278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17277, i8* %17278, align 1
  store %struct.Memory* %loadMem_40be94, %struct.Memory** %MEMORY
  %loadMem_40be97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17280 = getelementptr inbounds %struct.GPR, %struct.GPR* %17279, i32 0, i32 33
  %17281 = getelementptr inbounds %struct.Reg, %struct.Reg* %17280, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %17281 to i64*
  %17282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17283 = getelementptr inbounds %struct.GPR, %struct.GPR* %17282, i32 0, i32 1
  %17284 = getelementptr inbounds %struct.Reg, %struct.Reg* %17283, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %17284 to i64*
  %17285 = load i64, i64* %RAX.i257
  %17286 = add i64 %17285, 12
  %17287 = load i64, i64* %PC.i256
  %17288 = add i64 %17287, 4
  store i64 %17288, i64* %PC.i256
  %17289 = inttoptr i64 %17286 to i32*
  %17290 = load i32, i32* %17289
  %17291 = sext i32 %17290 to i64
  store i64 %17291, i64* %RAX.i257, align 8
  store %struct.Memory* %loadMem_40be97, %struct.Memory** %MEMORY
  %loadMem_40be9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17293 = getelementptr inbounds %struct.GPR, %struct.GPR* %17292, i32 0, i32 33
  %17294 = getelementptr inbounds %struct.Reg, %struct.Reg* %17293, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %17294 to i64*
  %17295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17296 = getelementptr inbounds %struct.GPR, %struct.GPR* %17295, i32 0, i32 5
  %17297 = getelementptr inbounds %struct.Reg, %struct.Reg* %17296, i32 0, i32 0
  %ECX.i253 = bitcast %union.anon* %17297 to i32*
  %17298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17299 = getelementptr inbounds %struct.GPR, %struct.GPR* %17298, i32 0, i32 1
  %17300 = getelementptr inbounds %struct.Reg, %struct.Reg* %17299, i32 0, i32 0
  %RAX.i254 = bitcast %union.anon* %17300 to i64*
  %17301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17302 = getelementptr inbounds %struct.GPR, %struct.GPR* %17301, i32 0, i32 9
  %17303 = getelementptr inbounds %struct.Reg, %struct.Reg* %17302, i32 0, i32 0
  %RSI.i255 = bitcast %union.anon* %17303 to i64*
  %17304 = load i64, i64* %RSI.i255
  %17305 = load i64, i64* %RAX.i254
  %17306 = mul i64 %17305, 4
  %17307 = add i64 %17304, 16
  %17308 = add i64 %17307, %17306
  %17309 = load i32, i32* %ECX.i253
  %17310 = zext i32 %17309 to i64
  %17311 = load i64, i64* %PC.i252
  %17312 = add i64 %17311, 4
  store i64 %17312, i64* %PC.i252
  %17313 = inttoptr i64 %17308 to i32*
  store i32 %17309, i32* %17313
  store %struct.Memory* %loadMem_40be9b, %struct.Memory** %MEMORY
  br label %block_.L_40be9f

block_.L_40be9f:                                  ; preds = %block_40be68, %block_.L_40be46
  %loadMem_40be9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17315 = getelementptr inbounds %struct.GPR, %struct.GPR* %17314, i32 0, i32 33
  %17316 = getelementptr inbounds %struct.Reg, %struct.Reg* %17315, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %17316 to i64*
  %17317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17318 = getelementptr inbounds %struct.GPR, %struct.GPR* %17317, i32 0, i32 1
  %17319 = getelementptr inbounds %struct.Reg, %struct.Reg* %17318, i32 0, i32 0
  %RAX.i251 = bitcast %union.anon* %17319 to i64*
  %17320 = load i64, i64* %PC.i250
  %17321 = add i64 %17320, 10
  store i64 %17321, i64* %PC.i250
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i251, align 8
  store %struct.Memory* %loadMem_40be9f, %struct.Memory** %MEMORY
  %loadMem_40bea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17323 = getelementptr inbounds %struct.GPR, %struct.GPR* %17322, i32 0, i32 33
  %17324 = getelementptr inbounds %struct.Reg, %struct.Reg* %17323, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %17324 to i64*
  %17325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17326 = getelementptr inbounds %struct.GPR, %struct.GPR* %17325, i32 0, i32 5
  %17327 = getelementptr inbounds %struct.Reg, %struct.Reg* %17326, i32 0, i32 0
  %RCX.i248 = bitcast %union.anon* %17327 to i64*
  %17328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17329 = getelementptr inbounds %struct.GPR, %struct.GPR* %17328, i32 0, i32 15
  %17330 = getelementptr inbounds %struct.Reg, %struct.Reg* %17329, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %17330 to i64*
  %17331 = load i64, i64* %RBP.i249
  %17332 = sub i64 %17331, 8
  %17333 = load i64, i64* %PC.i247
  %17334 = add i64 %17333, 4
  store i64 %17334, i64* %PC.i247
  %17335 = inttoptr i64 %17332 to i32*
  %17336 = load i32, i32* %17335
  %17337 = sext i32 %17336 to i64
  store i64 %17337, i64* %RCX.i248, align 8
  store %struct.Memory* %loadMem_40bea9, %struct.Memory** %MEMORY
  %loadMem_40bead = load %struct.Memory*, %struct.Memory** %MEMORY
  %17338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17339 = getelementptr inbounds %struct.GPR, %struct.GPR* %17338, i32 0, i32 33
  %17340 = getelementptr inbounds %struct.Reg, %struct.Reg* %17339, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %17340 to i64*
  %17341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17342 = getelementptr inbounds %struct.GPR, %struct.GPR* %17341, i32 0, i32 5
  %17343 = getelementptr inbounds %struct.Reg, %struct.Reg* %17342, i32 0, i32 0
  %RCX.i246 = bitcast %union.anon* %17343 to i64*
  %17344 = load i64, i64* %RCX.i246
  %17345 = load i64, i64* %PC.i245
  %17346 = add i64 %17345, 7
  store i64 %17346, i64* %PC.i245
  %17347 = sext i64 %17344 to i128
  %17348 = and i128 %17347, -18446744073709551616
  %17349 = zext i64 %17344 to i128
  %17350 = or i128 %17348, %17349
  %17351 = mul i128 744, %17350
  %17352 = trunc i128 %17351 to i64
  store i64 %17352, i64* %RCX.i246, align 8
  %17353 = sext i64 %17352 to i128
  %17354 = icmp ne i128 %17353, %17351
  %17355 = zext i1 %17354 to i8
  %17356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17355, i8* %17356, align 1
  %17357 = trunc i128 %17351 to i32
  %17358 = and i32 %17357, 255
  %17359 = call i32 @llvm.ctpop.i32(i32 %17358)
  %17360 = trunc i32 %17359 to i8
  %17361 = and i8 %17360, 1
  %17362 = xor i8 %17361, 1
  %17363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17362, i8* %17363, align 1
  %17364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17364, align 1
  %17365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17365, align 1
  %17366 = lshr i64 %17352, 63
  %17367 = trunc i64 %17366 to i8
  %17368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17367, i8* %17368, align 1
  %17369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17355, i8* %17369, align 1
  store %struct.Memory* %loadMem_40bead, %struct.Memory** %MEMORY
  %loadMem_40beb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17371 = getelementptr inbounds %struct.GPR, %struct.GPR* %17370, i32 0, i32 33
  %17372 = getelementptr inbounds %struct.Reg, %struct.Reg* %17371, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %17372 to i64*
  %17373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17374 = getelementptr inbounds %struct.GPR, %struct.GPR* %17373, i32 0, i32 1
  %17375 = getelementptr inbounds %struct.Reg, %struct.Reg* %17374, i32 0, i32 0
  %RAX.i243 = bitcast %union.anon* %17375 to i64*
  %17376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17377 = getelementptr inbounds %struct.GPR, %struct.GPR* %17376, i32 0, i32 5
  %17378 = getelementptr inbounds %struct.Reg, %struct.Reg* %17377, i32 0, i32 0
  %RCX.i244 = bitcast %union.anon* %17378 to i64*
  %17379 = load i64, i64* %RAX.i243
  %17380 = load i64, i64* %RCX.i244
  %17381 = load i64, i64* %PC.i242
  %17382 = add i64 %17381, 3
  store i64 %17382, i64* %PC.i242
  %17383 = add i64 %17380, %17379
  store i64 %17383, i64* %RAX.i243, align 8
  %17384 = icmp ult i64 %17383, %17379
  %17385 = icmp ult i64 %17383, %17380
  %17386 = or i1 %17384, %17385
  %17387 = zext i1 %17386 to i8
  %17388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17387, i8* %17388, align 1
  %17389 = trunc i64 %17383 to i32
  %17390 = and i32 %17389, 255
  %17391 = call i32 @llvm.ctpop.i32(i32 %17390)
  %17392 = trunc i32 %17391 to i8
  %17393 = and i8 %17392, 1
  %17394 = xor i8 %17393, 1
  %17395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17394, i8* %17395, align 1
  %17396 = xor i64 %17380, %17379
  %17397 = xor i64 %17396, %17383
  %17398 = lshr i64 %17397, 4
  %17399 = trunc i64 %17398 to i8
  %17400 = and i8 %17399, 1
  %17401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17400, i8* %17401, align 1
  %17402 = icmp eq i64 %17383, 0
  %17403 = zext i1 %17402 to i8
  %17404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17403, i8* %17404, align 1
  %17405 = lshr i64 %17383, 63
  %17406 = trunc i64 %17405 to i8
  %17407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17406, i8* %17407, align 1
  %17408 = lshr i64 %17379, 63
  %17409 = lshr i64 %17380, 63
  %17410 = xor i64 %17405, %17408
  %17411 = xor i64 %17405, %17409
  %17412 = add i64 %17410, %17411
  %17413 = icmp eq i64 %17412, 2
  %17414 = zext i1 %17413 to i8
  %17415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17414, i8* %17415, align 1
  store %struct.Memory* %loadMem_40beb4, %struct.Memory** %MEMORY
  %loadMem_40beb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17417 = getelementptr inbounds %struct.GPR, %struct.GPR* %17416, i32 0, i32 33
  %17418 = getelementptr inbounds %struct.Reg, %struct.Reg* %17417, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %17418 to i64*
  %17419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17420 = getelementptr inbounds %struct.GPR, %struct.GPR* %17419, i32 0, i32 1
  %17421 = getelementptr inbounds %struct.Reg, %struct.Reg* %17420, i32 0, i32 0
  %RAX.i240 = bitcast %union.anon* %17421 to i64*
  %17422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17423 = getelementptr inbounds %struct.GPR, %struct.GPR* %17422, i32 0, i32 7
  %17424 = getelementptr inbounds %struct.Reg, %struct.Reg* %17423, i32 0, i32 0
  %RDX.i241 = bitcast %union.anon* %17424 to i64*
  %17425 = load i64, i64* %RAX.i240
  %17426 = add i64 %17425, 12
  %17427 = load i64, i64* %PC.i239
  %17428 = add i64 %17427, 3
  store i64 %17428, i64* %PC.i239
  %17429 = inttoptr i64 %17426 to i32*
  %17430 = load i32, i32* %17429
  %17431 = zext i32 %17430 to i64
  store i64 %17431, i64* %RDX.i241, align 8
  store %struct.Memory* %loadMem_40beb7, %struct.Memory** %MEMORY
  %loadMem_40beba = load %struct.Memory*, %struct.Memory** %MEMORY
  %17432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17433 = getelementptr inbounds %struct.GPR, %struct.GPR* %17432, i32 0, i32 33
  %17434 = getelementptr inbounds %struct.Reg, %struct.Reg* %17433, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %17434 to i64*
  %17435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17436 = getelementptr inbounds %struct.GPR, %struct.GPR* %17435, i32 0, i32 7
  %17437 = getelementptr inbounds %struct.Reg, %struct.Reg* %17436, i32 0, i32 0
  %RDX.i238 = bitcast %union.anon* %17437 to i64*
  %17438 = load i64, i64* %RDX.i238
  %17439 = load i64, i64* %PC.i237
  %17440 = add i64 %17439, 3
  store i64 %17440, i64* %PC.i237
  %17441 = trunc i64 %17438 to i32
  %17442 = add i32 1, %17441
  %17443 = zext i32 %17442 to i64
  store i64 %17443, i64* %RDX.i238, align 8
  %17444 = icmp ult i32 %17442, %17441
  %17445 = icmp ult i32 %17442, 1
  %17446 = or i1 %17444, %17445
  %17447 = zext i1 %17446 to i8
  %17448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17447, i8* %17448, align 1
  %17449 = and i32 %17442, 255
  %17450 = call i32 @llvm.ctpop.i32(i32 %17449)
  %17451 = trunc i32 %17450 to i8
  %17452 = and i8 %17451, 1
  %17453 = xor i8 %17452, 1
  %17454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17453, i8* %17454, align 1
  %17455 = xor i64 1, %17438
  %17456 = trunc i64 %17455 to i32
  %17457 = xor i32 %17456, %17442
  %17458 = lshr i32 %17457, 4
  %17459 = trunc i32 %17458 to i8
  %17460 = and i8 %17459, 1
  %17461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17460, i8* %17461, align 1
  %17462 = icmp eq i32 %17442, 0
  %17463 = zext i1 %17462 to i8
  %17464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17463, i8* %17464, align 1
  %17465 = lshr i32 %17442, 31
  %17466 = trunc i32 %17465 to i8
  %17467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17466, i8* %17467, align 1
  %17468 = lshr i32 %17441, 31
  %17469 = xor i32 %17465, %17468
  %17470 = add i32 %17469, %17465
  %17471 = icmp eq i32 %17470, 2
  %17472 = zext i1 %17471 to i8
  %17473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17472, i8* %17473, align 1
  store %struct.Memory* %loadMem_40beba, %struct.Memory** %MEMORY
  %loadMem_40bebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17475 = getelementptr inbounds %struct.GPR, %struct.GPR* %17474, i32 0, i32 33
  %17476 = getelementptr inbounds %struct.Reg, %struct.Reg* %17475, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %17476 to i64*
  %17477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17478 = getelementptr inbounds %struct.GPR, %struct.GPR* %17477, i32 0, i32 7
  %17479 = getelementptr inbounds %struct.Reg, %struct.Reg* %17478, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %17479 to i32*
  %17480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17481 = getelementptr inbounds %struct.GPR, %struct.GPR* %17480, i32 0, i32 1
  %17482 = getelementptr inbounds %struct.Reg, %struct.Reg* %17481, i32 0, i32 0
  %RAX.i236 = bitcast %union.anon* %17482 to i64*
  %17483 = load i64, i64* %RAX.i236
  %17484 = add i64 %17483, 12
  %17485 = load i32, i32* %EDX.i
  %17486 = zext i32 %17485 to i64
  %17487 = load i64, i64* %PC.i235
  %17488 = add i64 %17487, 3
  store i64 %17488, i64* %PC.i235
  %17489 = inttoptr i64 %17484 to i32*
  store i32 %17485, i32* %17489
  store %struct.Memory* %loadMem_40bebd, %struct.Memory** %MEMORY
  %loadMem_40bec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17491 = getelementptr inbounds %struct.GPR, %struct.GPR* %17490, i32 0, i32 33
  %17492 = getelementptr inbounds %struct.Reg, %struct.Reg* %17491, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %17492 to i64*
  %17493 = load i64, i64* %PC.i234
  %17494 = add i64 %17493, 5
  %17495 = load i64, i64* %PC.i234
  %17496 = add i64 %17495, 5
  store i64 %17496, i64* %PC.i234
  %17497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17494, i64* %17497, align 8
  store %struct.Memory* %loadMem_40bec0, %struct.Memory** %MEMORY
  br label %block_.L_40bec5

block_.L_40bec5:                                  ; preds = %block_.L_40be9f, %block_40be25, %block_40bdec, %block_40bdb3, %block_40bd8c
  %loadMem_40bec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17499 = getelementptr inbounds %struct.GPR, %struct.GPR* %17498, i32 0, i32 33
  %17500 = getelementptr inbounds %struct.Reg, %struct.Reg* %17499, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %17500 to i64*
  %17501 = load i64, i64* %PC.i233
  %17502 = add i64 %17501, 413
  %17503 = load i64, i64* %PC.i233
  %17504 = add i64 %17503, 5
  store i64 %17504, i64* %PC.i233
  %17505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17502, i64* %17505, align 8
  store %struct.Memory* %loadMem_40bec5, %struct.Memory** %MEMORY
  br label %block_.L_40c062

block_.L_40beca:                                  ; preds = %block_.L_40bd72
  %loadMem_40beca = load %struct.Memory*, %struct.Memory** %MEMORY
  %17506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17507 = getelementptr inbounds %struct.GPR, %struct.GPR* %17506, i32 0, i32 33
  %17508 = getelementptr inbounds %struct.Reg, %struct.Reg* %17507, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %17508 to i64*
  %17509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17510 = getelementptr inbounds %struct.GPR, %struct.GPR* %17509, i32 0, i32 1
  %17511 = getelementptr inbounds %struct.Reg, %struct.Reg* %17510, i32 0, i32 0
  %RAX.i231 = bitcast %union.anon* %17511 to i64*
  %17512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17513 = getelementptr inbounds %struct.GPR, %struct.GPR* %17512, i32 0, i32 15
  %17514 = getelementptr inbounds %struct.Reg, %struct.Reg* %17513, i32 0, i32 0
  %RBP.i232 = bitcast %union.anon* %17514 to i64*
  %17515 = load i64, i64* %RBP.i232
  %17516 = sub i64 %17515, 4
  %17517 = load i64, i64* %PC.i230
  %17518 = add i64 %17517, 3
  store i64 %17518, i64* %PC.i230
  %17519 = inttoptr i64 %17516 to i32*
  %17520 = load i32, i32* %17519
  %17521 = zext i32 %17520 to i64
  store i64 %17521, i64* %RAX.i231, align 8
  store %struct.Memory* %loadMem_40beca, %struct.Memory** %MEMORY
  %loadMem_40becd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17523 = getelementptr inbounds %struct.GPR, %struct.GPR* %17522, i32 0, i32 33
  %17524 = getelementptr inbounds %struct.Reg, %struct.Reg* %17523, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %17524 to i64*
  %17525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17526 = getelementptr inbounds %struct.GPR, %struct.GPR* %17525, i32 0, i32 1
  %17527 = getelementptr inbounds %struct.Reg, %struct.Reg* %17526, i32 0, i32 0
  %RAX.i229 = bitcast %union.anon* %17527 to i64*
  %17528 = load i64, i64* %RAX.i229
  %17529 = load i64, i64* %PC.i228
  %17530 = add i64 %17529, 3
  store i64 %17530, i64* %PC.i228
  %17531 = trunc i64 %17528 to i32
  %17532 = add i32 1, %17531
  %17533 = zext i32 %17532 to i64
  store i64 %17533, i64* %RAX.i229, align 8
  %17534 = icmp ult i32 %17532, %17531
  %17535 = icmp ult i32 %17532, 1
  %17536 = or i1 %17534, %17535
  %17537 = zext i1 %17536 to i8
  %17538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17537, i8* %17538, align 1
  %17539 = and i32 %17532, 255
  %17540 = call i32 @llvm.ctpop.i32(i32 %17539)
  %17541 = trunc i32 %17540 to i8
  %17542 = and i8 %17541, 1
  %17543 = xor i8 %17542, 1
  %17544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17543, i8* %17544, align 1
  %17545 = xor i64 1, %17528
  %17546 = trunc i64 %17545 to i32
  %17547 = xor i32 %17546, %17532
  %17548 = lshr i32 %17547, 4
  %17549 = trunc i32 %17548 to i8
  %17550 = and i8 %17549, 1
  %17551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17550, i8* %17551, align 1
  %17552 = icmp eq i32 %17532, 0
  %17553 = zext i1 %17552 to i8
  %17554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17553, i8* %17554, align 1
  %17555 = lshr i32 %17532, 31
  %17556 = trunc i32 %17555 to i8
  %17557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17556, i8* %17557, align 1
  %17558 = lshr i32 %17531, 31
  %17559 = xor i32 %17555, %17558
  %17560 = add i32 %17559, %17555
  %17561 = icmp eq i32 %17560, 2
  %17562 = zext i1 %17561 to i8
  %17563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17562, i8* %17563, align 1
  store %struct.Memory* %loadMem_40becd, %struct.Memory** %MEMORY
  %loadMem_40bed0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17565 = getelementptr inbounds %struct.GPR, %struct.GPR* %17564, i32 0, i32 33
  %17566 = getelementptr inbounds %struct.Reg, %struct.Reg* %17565, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %17566 to i64*
  %17567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17568 = getelementptr inbounds %struct.GPR, %struct.GPR* %17567, i32 0, i32 1
  %17569 = getelementptr inbounds %struct.Reg, %struct.Reg* %17568, i32 0, i32 0
  %EAX.i226 = bitcast %union.anon* %17569 to i32*
  %17570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17571 = getelementptr inbounds %struct.GPR, %struct.GPR* %17570, i32 0, i32 5
  %17572 = getelementptr inbounds %struct.Reg, %struct.Reg* %17571, i32 0, i32 0
  %RCX.i227 = bitcast %union.anon* %17572 to i64*
  %17573 = load i32, i32* %EAX.i226
  %17574 = zext i32 %17573 to i64
  %17575 = load i64, i64* %PC.i225
  %17576 = add i64 %17575, 3
  store i64 %17576, i64* %PC.i225
  %17577 = shl i64 %17574, 32
  %17578 = ashr exact i64 %17577, 32
  store i64 %17578, i64* %RCX.i227, align 8
  store %struct.Memory* %loadMem_40bed0, %struct.Memory** %MEMORY
  %loadMem_40bed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17580 = getelementptr inbounds %struct.GPR, %struct.GPR* %17579, i32 0, i32 33
  %17581 = getelementptr inbounds %struct.Reg, %struct.Reg* %17580, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %17581 to i64*
  %17582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17583 = getelementptr inbounds %struct.GPR, %struct.GPR* %17582, i32 0, i32 1
  %17584 = getelementptr inbounds %struct.Reg, %struct.Reg* %17583, i32 0, i32 0
  %RAX.i223 = bitcast %union.anon* %17584 to i64*
  %17585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17586 = getelementptr inbounds %struct.GPR, %struct.GPR* %17585, i32 0, i32 5
  %17587 = getelementptr inbounds %struct.Reg, %struct.Reg* %17586, i32 0, i32 0
  %RCX.i224 = bitcast %union.anon* %17587 to i64*
  %17588 = load i64, i64* %RCX.i224
  %17589 = add i64 %17588, 12099168
  %17590 = load i64, i64* %PC.i222
  %17591 = add i64 %17590, 8
  store i64 %17591, i64* %PC.i222
  %17592 = inttoptr i64 %17589 to i8*
  %17593 = load i8, i8* %17592
  %17594 = zext i8 %17593 to i64
  store i64 %17594, i64* %RAX.i223, align 8
  store %struct.Memory* %loadMem_40bed3, %struct.Memory** %MEMORY
  %loadMem_40bedb = load %struct.Memory*, %struct.Memory** %MEMORY
  %17595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17596 = getelementptr inbounds %struct.GPR, %struct.GPR* %17595, i32 0, i32 33
  %17597 = getelementptr inbounds %struct.Reg, %struct.Reg* %17596, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %17597 to i64*
  %17598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17599 = getelementptr inbounds %struct.GPR, %struct.GPR* %17598, i32 0, i32 1
  %17600 = getelementptr inbounds %struct.Reg, %struct.Reg* %17599, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %17600 to i32*
  %17601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17602 = getelementptr inbounds %struct.GPR, %struct.GPR* %17601, i32 0, i32 15
  %17603 = getelementptr inbounds %struct.Reg, %struct.Reg* %17602, i32 0, i32 0
  %RBP.i221 = bitcast %union.anon* %17603 to i64*
  %17604 = load i32, i32* %EAX.i
  %17605 = zext i32 %17604 to i64
  %17606 = load i64, i64* %RBP.i221
  %17607 = sub i64 %17606, 24
  %17608 = load i64, i64* %PC.i220
  %17609 = add i64 %17608, 3
  store i64 %17609, i64* %PC.i220
  %17610 = inttoptr i64 %17607 to i32*
  %17611 = load i32, i32* %17610
  %17612 = sub i32 %17604, %17611
  %17613 = icmp ult i32 %17604, %17611
  %17614 = zext i1 %17613 to i8
  %17615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17614, i8* %17615, align 1
  %17616 = and i32 %17612, 255
  %17617 = call i32 @llvm.ctpop.i32(i32 %17616)
  %17618 = trunc i32 %17617 to i8
  %17619 = and i8 %17618, 1
  %17620 = xor i8 %17619, 1
  %17621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17620, i8* %17621, align 1
  %17622 = xor i32 %17611, %17604
  %17623 = xor i32 %17622, %17612
  %17624 = lshr i32 %17623, 4
  %17625 = trunc i32 %17624 to i8
  %17626 = and i8 %17625, 1
  %17627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17626, i8* %17627, align 1
  %17628 = icmp eq i32 %17612, 0
  %17629 = zext i1 %17628 to i8
  %17630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17629, i8* %17630, align 1
  %17631 = lshr i32 %17612, 31
  %17632 = trunc i32 %17631 to i8
  %17633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17632, i8* %17633, align 1
  %17634 = lshr i32 %17604, 31
  %17635 = lshr i32 %17611, 31
  %17636 = xor i32 %17635, %17634
  %17637 = xor i32 %17631, %17634
  %17638 = add i32 %17637, %17636
  %17639 = icmp eq i32 %17638, 2
  %17640 = zext i1 %17639 to i8
  %17641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17640, i8* %17641, align 1
  store %struct.Memory* %loadMem_40bedb, %struct.Memory** %MEMORY
  %loadMem_40bede = load %struct.Memory*, %struct.Memory** %MEMORY
  %17642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17643 = getelementptr inbounds %struct.GPR, %struct.GPR* %17642, i32 0, i32 33
  %17644 = getelementptr inbounds %struct.Reg, %struct.Reg* %17643, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %17644 to i64*
  %17645 = load i64, i64* %PC.i219
  %17646 = add i64 %17645, 383
  %17647 = load i64, i64* %PC.i219
  %17648 = add i64 %17647, 6
  %17649 = load i64, i64* %PC.i219
  %17650 = add i64 %17649, 6
  store i64 %17650, i64* %PC.i219
  %17651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17652 = load i8, i8* %17651, align 1
  %17653 = icmp eq i8 %17652, 0
  %17654 = zext i1 %17653 to i8
  store i8 %17654, i8* %BRANCH_TAKEN, align 1
  %17655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17656 = select i1 %17653, i64 %17646, i64 %17648
  store i64 %17656, i64* %17655, align 8
  store %struct.Memory* %loadMem_40bede, %struct.Memory** %MEMORY
  %loadBr_40bede = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bede = icmp eq i8 %loadBr_40bede, 1
  br i1 %cmpBr_40bede, label %block_.L_40c05d, label %block_40bee4

block_40bee4:                                     ; preds = %block_.L_40beca
  %loadMem_40bee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17658 = getelementptr inbounds %struct.GPR, %struct.GPR* %17657, i32 0, i32 33
  %17659 = getelementptr inbounds %struct.Reg, %struct.Reg* %17658, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %17659 to i64*
  %17660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17661 = getelementptr inbounds %struct.GPR, %struct.GPR* %17660, i32 0, i32 1
  %17662 = getelementptr inbounds %struct.Reg, %struct.Reg* %17661, i32 0, i32 0
  %RAX.i218 = bitcast %union.anon* %17662 to i64*
  %17663 = load i64, i64* %PC.i217
  %17664 = add i64 %17663, 10
  store i64 %17664, i64* %PC.i217
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i218, align 8
  store %struct.Memory* %loadMem_40bee4, %struct.Memory** %MEMORY
  %loadMem_40beee = load %struct.Memory*, %struct.Memory** %MEMORY
  %17665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17666 = getelementptr inbounds %struct.GPR, %struct.GPR* %17665, i32 0, i32 33
  %17667 = getelementptr inbounds %struct.Reg, %struct.Reg* %17666, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %17667 to i64*
  %17668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17669 = getelementptr inbounds %struct.GPR, %struct.GPR* %17668, i32 0, i32 5
  %17670 = getelementptr inbounds %struct.Reg, %struct.Reg* %17669, i32 0, i32 0
  %RCX.i215 = bitcast %union.anon* %17670 to i64*
  %17671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17672 = getelementptr inbounds %struct.GPR, %struct.GPR* %17671, i32 0, i32 15
  %17673 = getelementptr inbounds %struct.Reg, %struct.Reg* %17672, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %17673 to i64*
  %17674 = load i64, i64* %RBP.i216
  %17675 = sub i64 %17674, 4
  %17676 = load i64, i64* %PC.i214
  %17677 = add i64 %17676, 3
  store i64 %17677, i64* %PC.i214
  %17678 = inttoptr i64 %17675 to i32*
  %17679 = load i32, i32* %17678
  %17680 = zext i32 %17679 to i64
  store i64 %17680, i64* %RCX.i215, align 8
  store %struct.Memory* %loadMem_40beee, %struct.Memory** %MEMORY
  %loadMem_40bef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17682 = getelementptr inbounds %struct.GPR, %struct.GPR* %17681, i32 0, i32 33
  %17683 = getelementptr inbounds %struct.Reg, %struct.Reg* %17682, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %17683 to i64*
  %17684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17685 = getelementptr inbounds %struct.GPR, %struct.GPR* %17684, i32 0, i32 5
  %17686 = getelementptr inbounds %struct.Reg, %struct.Reg* %17685, i32 0, i32 0
  %RCX.i213 = bitcast %union.anon* %17686 to i64*
  %17687 = load i64, i64* %RCX.i213
  %17688 = load i64, i64* %PC.i212
  %17689 = add i64 %17688, 3
  store i64 %17689, i64* %PC.i212
  %17690 = trunc i64 %17687 to i32
  %17691 = add i32 1, %17690
  %17692 = zext i32 %17691 to i64
  store i64 %17692, i64* %RCX.i213, align 8
  %17693 = icmp ult i32 %17691, %17690
  %17694 = icmp ult i32 %17691, 1
  %17695 = or i1 %17693, %17694
  %17696 = zext i1 %17695 to i8
  %17697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17696, i8* %17697, align 1
  %17698 = and i32 %17691, 255
  %17699 = call i32 @llvm.ctpop.i32(i32 %17698)
  %17700 = trunc i32 %17699 to i8
  %17701 = and i8 %17700, 1
  %17702 = xor i8 %17701, 1
  %17703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17702, i8* %17703, align 1
  %17704 = xor i64 1, %17687
  %17705 = trunc i64 %17704 to i32
  %17706 = xor i32 %17705, %17691
  %17707 = lshr i32 %17706, 4
  %17708 = trunc i32 %17707 to i8
  %17709 = and i8 %17708, 1
  %17710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17709, i8* %17710, align 1
  %17711 = icmp eq i32 %17691, 0
  %17712 = zext i1 %17711 to i8
  %17713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17712, i8* %17713, align 1
  %17714 = lshr i32 %17691, 31
  %17715 = trunc i32 %17714 to i8
  %17716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17715, i8* %17716, align 1
  %17717 = lshr i32 %17690, 31
  %17718 = xor i32 %17714, %17717
  %17719 = add i32 %17718, %17714
  %17720 = icmp eq i32 %17719, 2
  %17721 = zext i1 %17720 to i8
  %17722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17721, i8* %17722, align 1
  store %struct.Memory* %loadMem_40bef1, %struct.Memory** %MEMORY
  %loadMem_40bef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17724 = getelementptr inbounds %struct.GPR, %struct.GPR* %17723, i32 0, i32 33
  %17725 = getelementptr inbounds %struct.Reg, %struct.Reg* %17724, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %17725 to i64*
  %17726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17727 = getelementptr inbounds %struct.GPR, %struct.GPR* %17726, i32 0, i32 5
  %17728 = getelementptr inbounds %struct.Reg, %struct.Reg* %17727, i32 0, i32 0
  %ECX.i210 = bitcast %union.anon* %17728 to i32*
  %17729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17730 = getelementptr inbounds %struct.GPR, %struct.GPR* %17729, i32 0, i32 7
  %17731 = getelementptr inbounds %struct.Reg, %struct.Reg* %17730, i32 0, i32 0
  %RDX.i211 = bitcast %union.anon* %17731 to i64*
  %17732 = load i32, i32* %ECX.i210
  %17733 = zext i32 %17732 to i64
  %17734 = load i64, i64* %PC.i209
  %17735 = add i64 %17734, 3
  store i64 %17735, i64* %PC.i209
  %17736 = shl i64 %17733, 32
  %17737 = ashr exact i64 %17736, 32
  store i64 %17737, i64* %RDX.i211, align 8
  store %struct.Memory* %loadMem_40bef4, %struct.Memory** %MEMORY
  %loadMem_40bef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17739 = getelementptr inbounds %struct.GPR, %struct.GPR* %17738, i32 0, i32 33
  %17740 = getelementptr inbounds %struct.Reg, %struct.Reg* %17739, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %17740 to i64*
  %17741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17742 = getelementptr inbounds %struct.GPR, %struct.GPR* %17741, i32 0, i32 7
  %17743 = getelementptr inbounds %struct.Reg, %struct.Reg* %17742, i32 0, i32 0
  %RDX.i208 = bitcast %union.anon* %17743 to i64*
  %17744 = load i64, i64* %RDX.i208
  %17745 = mul i64 %17744, 4
  %17746 = add i64 %17745, 11187184
  %17747 = load i64, i64* %PC.i207
  %17748 = add i64 %17747, 8
  store i64 %17748, i64* %PC.i207
  %17749 = inttoptr i64 %17746 to i32*
  %17750 = load i32, i32* %17749
  %17751 = sext i32 %17750 to i64
  store i64 %17751, i64* %RDX.i208, align 8
  store %struct.Memory* %loadMem_40bef7, %struct.Memory** %MEMORY
  %loadMem_40beff = load %struct.Memory*, %struct.Memory** %MEMORY
  %17752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17753 = getelementptr inbounds %struct.GPR, %struct.GPR* %17752, i32 0, i32 33
  %17754 = getelementptr inbounds %struct.Reg, %struct.Reg* %17753, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %17754 to i64*
  %17755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17756 = getelementptr inbounds %struct.GPR, %struct.GPR* %17755, i32 0, i32 7
  %17757 = getelementptr inbounds %struct.Reg, %struct.Reg* %17756, i32 0, i32 0
  %RDX.i206 = bitcast %union.anon* %17757 to i64*
  %17758 = load i64, i64* %RDX.i206
  %17759 = load i64, i64* %PC.i205
  %17760 = add i64 %17759, 7
  store i64 %17760, i64* %PC.i205
  %17761 = sext i64 %17758 to i128
  %17762 = and i128 %17761, -18446744073709551616
  %17763 = zext i64 %17758 to i128
  %17764 = or i128 %17762, %17763
  %17765 = mul i128 744, %17764
  %17766 = trunc i128 %17765 to i64
  store i64 %17766, i64* %RDX.i206, align 8
  %17767 = sext i64 %17766 to i128
  %17768 = icmp ne i128 %17767, %17765
  %17769 = zext i1 %17768 to i8
  %17770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17769, i8* %17770, align 1
  %17771 = trunc i128 %17765 to i32
  %17772 = and i32 %17771, 255
  %17773 = call i32 @llvm.ctpop.i32(i32 %17772)
  %17774 = trunc i32 %17773 to i8
  %17775 = and i8 %17774, 1
  %17776 = xor i8 %17775, 1
  %17777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17776, i8* %17777, align 1
  %17778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17778, align 1
  %17779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17779, align 1
  %17780 = lshr i64 %17766, 63
  %17781 = trunc i64 %17780 to i8
  %17782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17781, i8* %17782, align 1
  %17783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17769, i8* %17783, align 1
  store %struct.Memory* %loadMem_40beff, %struct.Memory** %MEMORY
  %loadMem_40bf06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17785 = getelementptr inbounds %struct.GPR, %struct.GPR* %17784, i32 0, i32 33
  %17786 = getelementptr inbounds %struct.Reg, %struct.Reg* %17785, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %17786 to i64*
  %17787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17788 = getelementptr inbounds %struct.GPR, %struct.GPR* %17787, i32 0, i32 1
  %17789 = getelementptr inbounds %struct.Reg, %struct.Reg* %17788, i32 0, i32 0
  %RAX.i203 = bitcast %union.anon* %17789 to i64*
  %17790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17791 = getelementptr inbounds %struct.GPR, %struct.GPR* %17790, i32 0, i32 7
  %17792 = getelementptr inbounds %struct.Reg, %struct.Reg* %17791, i32 0, i32 0
  %RDX.i204 = bitcast %union.anon* %17792 to i64*
  %17793 = load i64, i64* %RAX.i203
  %17794 = load i64, i64* %RDX.i204
  %17795 = load i64, i64* %PC.i202
  %17796 = add i64 %17795, 3
  store i64 %17796, i64* %PC.i202
  %17797 = add i64 %17794, %17793
  store i64 %17797, i64* %RAX.i203, align 8
  %17798 = icmp ult i64 %17797, %17793
  %17799 = icmp ult i64 %17797, %17794
  %17800 = or i1 %17798, %17799
  %17801 = zext i1 %17800 to i8
  %17802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17801, i8* %17802, align 1
  %17803 = trunc i64 %17797 to i32
  %17804 = and i32 %17803, 255
  %17805 = call i32 @llvm.ctpop.i32(i32 %17804)
  %17806 = trunc i32 %17805 to i8
  %17807 = and i8 %17806, 1
  %17808 = xor i8 %17807, 1
  %17809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17808, i8* %17809, align 1
  %17810 = xor i64 %17794, %17793
  %17811 = xor i64 %17810, %17797
  %17812 = lshr i64 %17811, 4
  %17813 = trunc i64 %17812 to i8
  %17814 = and i8 %17813, 1
  %17815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17814, i8* %17815, align 1
  %17816 = icmp eq i64 %17797, 0
  %17817 = zext i1 %17816 to i8
  %17818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17817, i8* %17818, align 1
  %17819 = lshr i64 %17797, 63
  %17820 = trunc i64 %17819 to i8
  %17821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17820, i8* %17821, align 1
  %17822 = lshr i64 %17793, 63
  %17823 = lshr i64 %17794, 63
  %17824 = xor i64 %17819, %17822
  %17825 = xor i64 %17819, %17823
  %17826 = add i64 %17824, %17825
  %17827 = icmp eq i64 %17826, 2
  %17828 = zext i1 %17827 to i8
  %17829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17828, i8* %17829, align 1
  store %struct.Memory* %loadMem_40bf06, %struct.Memory** %MEMORY
  %loadMem_40bf09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17831 = getelementptr inbounds %struct.GPR, %struct.GPR* %17830, i32 0, i32 33
  %17832 = getelementptr inbounds %struct.Reg, %struct.Reg* %17831, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %17832 to i64*
  %17833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17834 = getelementptr inbounds %struct.GPR, %struct.GPR* %17833, i32 0, i32 1
  %17835 = getelementptr inbounds %struct.Reg, %struct.Reg* %17834, i32 0, i32 0
  %RAX.i200 = bitcast %union.anon* %17835 to i64*
  %17836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17837 = getelementptr inbounds %struct.GPR, %struct.GPR* %17836, i32 0, i32 5
  %17838 = getelementptr inbounds %struct.Reg, %struct.Reg* %17837, i32 0, i32 0
  %RCX.i201 = bitcast %union.anon* %17838 to i64*
  %17839 = load i64, i64* %RAX.i200
  %17840 = add i64 %17839, 740
  %17841 = load i64, i64* %PC.i199
  %17842 = add i64 %17841, 6
  store i64 %17842, i64* %PC.i199
  %17843 = inttoptr i64 %17840 to i32*
  %17844 = load i32, i32* %17843
  %17845 = zext i32 %17844 to i64
  store i64 %17845, i64* %RCX.i201, align 8
  store %struct.Memory* %loadMem_40bf09, %struct.Memory** %MEMORY
  %loadMem_40bf0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17847 = getelementptr inbounds %struct.GPR, %struct.GPR* %17846, i32 0, i32 33
  %17848 = getelementptr inbounds %struct.Reg, %struct.Reg* %17847, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %17848 to i64*
  %17849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17850 = getelementptr inbounds %struct.GPR, %struct.GPR* %17849, i32 0, i32 5
  %17851 = getelementptr inbounds %struct.Reg, %struct.Reg* %17850, i32 0, i32 0
  %ECX.i198 = bitcast %union.anon* %17851 to i32*
  %17852 = load i32, i32* %ECX.i198
  %17853 = zext i32 %17852 to i64
  %17854 = load i64, i64* %PC.i197
  %17855 = add i64 %17854, 7
  store i64 %17855, i64* %PC.i197
  %17856 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %17857 = sub i32 %17852, %17856
  %17858 = icmp ult i32 %17852, %17856
  %17859 = zext i1 %17858 to i8
  %17860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17859, i8* %17860, align 1
  %17861 = and i32 %17857, 255
  %17862 = call i32 @llvm.ctpop.i32(i32 %17861)
  %17863 = trunc i32 %17862 to i8
  %17864 = and i8 %17863, 1
  %17865 = xor i8 %17864, 1
  %17866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17865, i8* %17866, align 1
  %17867 = xor i32 %17856, %17852
  %17868 = xor i32 %17867, %17857
  %17869 = lshr i32 %17868, 4
  %17870 = trunc i32 %17869 to i8
  %17871 = and i8 %17870, 1
  %17872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17871, i8* %17872, align 1
  %17873 = icmp eq i32 %17857, 0
  %17874 = zext i1 %17873 to i8
  %17875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17874, i8* %17875, align 1
  %17876 = lshr i32 %17857, 31
  %17877 = trunc i32 %17876 to i8
  %17878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17877, i8* %17878, align 1
  %17879 = lshr i32 %17852, 31
  %17880 = lshr i32 %17856, 31
  %17881 = xor i32 %17880, %17879
  %17882 = xor i32 %17876, %17879
  %17883 = add i32 %17882, %17881
  %17884 = icmp eq i32 %17883, 2
  %17885 = zext i1 %17884 to i8
  %17886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17885, i8* %17886, align 1
  store %struct.Memory* %loadMem_40bf0f, %struct.Memory** %MEMORY
  %loadMem_40bf16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17888 = getelementptr inbounds %struct.GPR, %struct.GPR* %17887, i32 0, i32 33
  %17889 = getelementptr inbounds %struct.Reg, %struct.Reg* %17888, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %17889 to i64*
  %17890 = load i64, i64* %PC.i196
  %17891 = add i64 %17890, 327
  %17892 = load i64, i64* %PC.i196
  %17893 = add i64 %17892, 6
  %17894 = load i64, i64* %PC.i196
  %17895 = add i64 %17894, 6
  store i64 %17895, i64* %PC.i196
  %17896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17897 = load i8, i8* %17896, align 1
  store i8 %17897, i8* %BRANCH_TAKEN, align 1
  %17898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17899 = icmp ne i8 %17897, 0
  %17900 = select i1 %17899, i64 %17891, i64 %17893
  store i64 %17900, i64* %17898, align 8
  store %struct.Memory* %loadMem_40bf16, %struct.Memory** %MEMORY
  %loadBr_40bf16 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bf16 = icmp eq i8 %loadBr_40bf16, 1
  br i1 %cmpBr_40bf16, label %block_.L_40c05d, label %block_40bf1c

block_40bf1c:                                     ; preds = %block_40bee4
  %loadMem_40bf1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17902 = getelementptr inbounds %struct.GPR, %struct.GPR* %17901, i32 0, i32 33
  %17903 = getelementptr inbounds %struct.Reg, %struct.Reg* %17902, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %17903 to i64*
  %17904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17905 = getelementptr inbounds %struct.GPR, %struct.GPR* %17904, i32 0, i32 1
  %17906 = getelementptr inbounds %struct.Reg, %struct.Reg* %17905, i32 0, i32 0
  %RAX.i195 = bitcast %union.anon* %17906 to i64*
  %17907 = load i64, i64* %PC.i194
  %17908 = add i64 %17907, 10
  store i64 %17908, i64* %PC.i194
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i195, align 8
  store %struct.Memory* %loadMem_40bf1c, %struct.Memory** %MEMORY
  %loadMem_40bf26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17910 = getelementptr inbounds %struct.GPR, %struct.GPR* %17909, i32 0, i32 33
  %17911 = getelementptr inbounds %struct.Reg, %struct.Reg* %17910, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %17911 to i64*
  %17912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17913 = getelementptr inbounds %struct.GPR, %struct.GPR* %17912, i32 0, i32 5
  %17914 = getelementptr inbounds %struct.Reg, %struct.Reg* %17913, i32 0, i32 0
  %RCX.i192 = bitcast %union.anon* %17914 to i64*
  %17915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17916 = getelementptr inbounds %struct.GPR, %struct.GPR* %17915, i32 0, i32 15
  %17917 = getelementptr inbounds %struct.Reg, %struct.Reg* %17916, i32 0, i32 0
  %RBP.i193 = bitcast %union.anon* %17917 to i64*
  %17918 = load i64, i64* %RBP.i193
  %17919 = sub i64 %17918, 4
  %17920 = load i64, i64* %PC.i191
  %17921 = add i64 %17920, 3
  store i64 %17921, i64* %PC.i191
  %17922 = inttoptr i64 %17919 to i32*
  %17923 = load i32, i32* %17922
  %17924 = zext i32 %17923 to i64
  store i64 %17924, i64* %RCX.i192, align 8
  store %struct.Memory* %loadMem_40bf26, %struct.Memory** %MEMORY
  %loadMem_40bf29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17926 = getelementptr inbounds %struct.GPR, %struct.GPR* %17925, i32 0, i32 33
  %17927 = getelementptr inbounds %struct.Reg, %struct.Reg* %17926, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %17927 to i64*
  %17928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17929 = getelementptr inbounds %struct.GPR, %struct.GPR* %17928, i32 0, i32 5
  %17930 = getelementptr inbounds %struct.Reg, %struct.Reg* %17929, i32 0, i32 0
  %RCX.i190 = bitcast %union.anon* %17930 to i64*
  %17931 = load i64, i64* %RCX.i190
  %17932 = load i64, i64* %PC.i189
  %17933 = add i64 %17932, 3
  store i64 %17933, i64* %PC.i189
  %17934 = trunc i64 %17931 to i32
  %17935 = add i32 1, %17934
  %17936 = zext i32 %17935 to i64
  store i64 %17936, i64* %RCX.i190, align 8
  %17937 = icmp ult i32 %17935, %17934
  %17938 = icmp ult i32 %17935, 1
  %17939 = or i1 %17937, %17938
  %17940 = zext i1 %17939 to i8
  %17941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17940, i8* %17941, align 1
  %17942 = and i32 %17935, 255
  %17943 = call i32 @llvm.ctpop.i32(i32 %17942)
  %17944 = trunc i32 %17943 to i8
  %17945 = and i8 %17944, 1
  %17946 = xor i8 %17945, 1
  %17947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17946, i8* %17947, align 1
  %17948 = xor i64 1, %17931
  %17949 = trunc i64 %17948 to i32
  %17950 = xor i32 %17949, %17935
  %17951 = lshr i32 %17950, 4
  %17952 = trunc i32 %17951 to i8
  %17953 = and i8 %17952, 1
  %17954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17953, i8* %17954, align 1
  %17955 = icmp eq i32 %17935, 0
  %17956 = zext i1 %17955 to i8
  %17957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17956, i8* %17957, align 1
  %17958 = lshr i32 %17935, 31
  %17959 = trunc i32 %17958 to i8
  %17960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17959, i8* %17960, align 1
  %17961 = lshr i32 %17934, 31
  %17962 = xor i32 %17958, %17961
  %17963 = add i32 %17962, %17958
  %17964 = icmp eq i32 %17963, 2
  %17965 = zext i1 %17964 to i8
  %17966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17965, i8* %17966, align 1
  store %struct.Memory* %loadMem_40bf29, %struct.Memory** %MEMORY
  %loadMem_40bf2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17968 = getelementptr inbounds %struct.GPR, %struct.GPR* %17967, i32 0, i32 33
  %17969 = getelementptr inbounds %struct.Reg, %struct.Reg* %17968, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %17969 to i64*
  %17970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17971 = getelementptr inbounds %struct.GPR, %struct.GPR* %17970, i32 0, i32 5
  %17972 = getelementptr inbounds %struct.Reg, %struct.Reg* %17971, i32 0, i32 0
  %ECX.i187 = bitcast %union.anon* %17972 to i32*
  %17973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17974 = getelementptr inbounds %struct.GPR, %struct.GPR* %17973, i32 0, i32 7
  %17975 = getelementptr inbounds %struct.Reg, %struct.Reg* %17974, i32 0, i32 0
  %RDX.i188 = bitcast %union.anon* %17975 to i64*
  %17976 = load i32, i32* %ECX.i187
  %17977 = zext i32 %17976 to i64
  %17978 = load i64, i64* %PC.i186
  %17979 = add i64 %17978, 3
  store i64 %17979, i64* %PC.i186
  %17980 = shl i64 %17977, 32
  %17981 = ashr exact i64 %17980, 32
  store i64 %17981, i64* %RDX.i188, align 8
  store %struct.Memory* %loadMem_40bf2c, %struct.Memory** %MEMORY
  %loadMem_40bf2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17983 = getelementptr inbounds %struct.GPR, %struct.GPR* %17982, i32 0, i32 33
  %17984 = getelementptr inbounds %struct.Reg, %struct.Reg* %17983, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %17984 to i64*
  %17985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17986 = getelementptr inbounds %struct.GPR, %struct.GPR* %17985, i32 0, i32 5
  %17987 = getelementptr inbounds %struct.Reg, %struct.Reg* %17986, i32 0, i32 0
  %RCX.i184 = bitcast %union.anon* %17987 to i64*
  %17988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17989 = getelementptr inbounds %struct.GPR, %struct.GPR* %17988, i32 0, i32 7
  %17990 = getelementptr inbounds %struct.Reg, %struct.Reg* %17989, i32 0, i32 0
  %RDX.i185 = bitcast %union.anon* %17990 to i64*
  %17991 = load i64, i64* %RDX.i185
  %17992 = mul i64 %17991, 4
  %17993 = add i64 %17992, 11187184
  %17994 = load i64, i64* %PC.i183
  %17995 = add i64 %17994, 7
  store i64 %17995, i64* %PC.i183
  %17996 = inttoptr i64 %17993 to i32*
  %17997 = load i32, i32* %17996
  %17998 = zext i32 %17997 to i64
  store i64 %17998, i64* %RCX.i184, align 8
  store %struct.Memory* %loadMem_40bf2f, %struct.Memory** %MEMORY
  %loadMem_40bf36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18000 = getelementptr inbounds %struct.GPR, %struct.GPR* %17999, i32 0, i32 33
  %18001 = getelementptr inbounds %struct.Reg, %struct.Reg* %18000, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %18001 to i64*
  %18002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18003 = getelementptr inbounds %struct.GPR, %struct.GPR* %18002, i32 0, i32 5
  %18004 = getelementptr inbounds %struct.Reg, %struct.Reg* %18003, i32 0, i32 0
  %ECX.i181 = bitcast %union.anon* %18004 to i32*
  %18005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18006 = getelementptr inbounds %struct.GPR, %struct.GPR* %18005, i32 0, i32 15
  %18007 = getelementptr inbounds %struct.Reg, %struct.Reg* %18006, i32 0, i32 0
  %RBP.i182 = bitcast %union.anon* %18007 to i64*
  %18008 = load i64, i64* %RBP.i182
  %18009 = sub i64 %18008, 44
  %18010 = load i32, i32* %ECX.i181
  %18011 = zext i32 %18010 to i64
  %18012 = load i64, i64* %PC.i180
  %18013 = add i64 %18012, 3
  store i64 %18013, i64* %PC.i180
  %18014 = inttoptr i64 %18009 to i32*
  store i32 %18010, i32* %18014
  store %struct.Memory* %loadMem_40bf36, %struct.Memory** %MEMORY
  %loadMem_40bf39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18016 = getelementptr inbounds %struct.GPR, %struct.GPR* %18015, i32 0, i32 33
  %18017 = getelementptr inbounds %struct.Reg, %struct.Reg* %18016, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %18017 to i64*
  %18018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18019 = getelementptr inbounds %struct.GPR, %struct.GPR* %18018, i32 0, i32 7
  %18020 = getelementptr inbounds %struct.Reg, %struct.Reg* %18019, i32 0, i32 0
  %RDX.i178 = bitcast %union.anon* %18020 to i64*
  %18021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18022 = getelementptr inbounds %struct.GPR, %struct.GPR* %18021, i32 0, i32 15
  %18023 = getelementptr inbounds %struct.Reg, %struct.Reg* %18022, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %18023 to i64*
  %18024 = load i64, i64* %RBP.i179
  %18025 = sub i64 %18024, 8
  %18026 = load i64, i64* %PC.i177
  %18027 = add i64 %18026, 4
  store i64 %18027, i64* %PC.i177
  %18028 = inttoptr i64 %18025 to i32*
  %18029 = load i32, i32* %18028
  %18030 = sext i32 %18029 to i64
  store i64 %18030, i64* %RDX.i178, align 8
  store %struct.Memory* %loadMem_40bf39, %struct.Memory** %MEMORY
  %loadMem_40bf3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18032 = getelementptr inbounds %struct.GPR, %struct.GPR* %18031, i32 0, i32 33
  %18033 = getelementptr inbounds %struct.Reg, %struct.Reg* %18032, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %18033 to i64*
  %18034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18035 = getelementptr inbounds %struct.GPR, %struct.GPR* %18034, i32 0, i32 7
  %18036 = getelementptr inbounds %struct.Reg, %struct.Reg* %18035, i32 0, i32 0
  %RDX.i176 = bitcast %union.anon* %18036 to i64*
  %18037 = load i64, i64* %RDX.i176
  %18038 = load i64, i64* %PC.i175
  %18039 = add i64 %18038, 7
  store i64 %18039, i64* %PC.i175
  %18040 = sext i64 %18037 to i128
  %18041 = and i128 %18040, -18446744073709551616
  %18042 = zext i64 %18037 to i128
  %18043 = or i128 %18041, %18042
  %18044 = mul i128 744, %18043
  %18045 = trunc i128 %18044 to i64
  store i64 %18045, i64* %RDX.i176, align 8
  %18046 = sext i64 %18045 to i128
  %18047 = icmp ne i128 %18046, %18044
  %18048 = zext i1 %18047 to i8
  %18049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18048, i8* %18049, align 1
  %18050 = trunc i128 %18044 to i32
  %18051 = and i32 %18050, 255
  %18052 = call i32 @llvm.ctpop.i32(i32 %18051)
  %18053 = trunc i32 %18052 to i8
  %18054 = and i8 %18053, 1
  %18055 = xor i8 %18054, 1
  %18056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18055, i8* %18056, align 1
  %18057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18057, align 1
  %18058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %18058, align 1
  %18059 = lshr i64 %18045, 63
  %18060 = trunc i64 %18059 to i8
  %18061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18060, i8* %18061, align 1
  %18062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18048, i8* %18062, align 1
  store %struct.Memory* %loadMem_40bf3d, %struct.Memory** %MEMORY
  %loadMem_40bf44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18064 = getelementptr inbounds %struct.GPR, %struct.GPR* %18063, i32 0, i32 33
  %18065 = getelementptr inbounds %struct.Reg, %struct.Reg* %18064, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %18065 to i64*
  %18066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18067 = getelementptr inbounds %struct.GPR, %struct.GPR* %18066, i32 0, i32 1
  %18068 = getelementptr inbounds %struct.Reg, %struct.Reg* %18067, i32 0, i32 0
  %RAX.i173 = bitcast %union.anon* %18068 to i64*
  %18069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18070 = getelementptr inbounds %struct.GPR, %struct.GPR* %18069, i32 0, i32 9
  %18071 = getelementptr inbounds %struct.Reg, %struct.Reg* %18070, i32 0, i32 0
  %RSI.i174 = bitcast %union.anon* %18071 to i64*
  %18072 = load i64, i64* %RAX.i173
  %18073 = load i64, i64* %PC.i172
  %18074 = add i64 %18073, 3
  store i64 %18074, i64* %PC.i172
  store i64 %18072, i64* %RSI.i174, align 8
  store %struct.Memory* %loadMem_40bf44, %struct.Memory** %MEMORY
  %loadMem_40bf47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18076 = getelementptr inbounds %struct.GPR, %struct.GPR* %18075, i32 0, i32 33
  %18077 = getelementptr inbounds %struct.Reg, %struct.Reg* %18076, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %18077 to i64*
  %18078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18079 = getelementptr inbounds %struct.GPR, %struct.GPR* %18078, i32 0, i32 7
  %18080 = getelementptr inbounds %struct.Reg, %struct.Reg* %18079, i32 0, i32 0
  %RDX.i170 = bitcast %union.anon* %18080 to i64*
  %18081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18082 = getelementptr inbounds %struct.GPR, %struct.GPR* %18081, i32 0, i32 9
  %18083 = getelementptr inbounds %struct.Reg, %struct.Reg* %18082, i32 0, i32 0
  %RSI.i171 = bitcast %union.anon* %18083 to i64*
  %18084 = load i64, i64* %RSI.i171
  %18085 = load i64, i64* %RDX.i170
  %18086 = load i64, i64* %PC.i169
  %18087 = add i64 %18086, 3
  store i64 %18087, i64* %PC.i169
  %18088 = add i64 %18085, %18084
  store i64 %18088, i64* %RSI.i171, align 8
  %18089 = icmp ult i64 %18088, %18084
  %18090 = icmp ult i64 %18088, %18085
  %18091 = or i1 %18089, %18090
  %18092 = zext i1 %18091 to i8
  %18093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18092, i8* %18093, align 1
  %18094 = trunc i64 %18088 to i32
  %18095 = and i32 %18094, 255
  %18096 = call i32 @llvm.ctpop.i32(i32 %18095)
  %18097 = trunc i32 %18096 to i8
  %18098 = and i8 %18097, 1
  %18099 = xor i8 %18098, 1
  %18100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18099, i8* %18100, align 1
  %18101 = xor i64 %18085, %18084
  %18102 = xor i64 %18101, %18088
  %18103 = lshr i64 %18102, 4
  %18104 = trunc i64 %18103 to i8
  %18105 = and i8 %18104, 1
  %18106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18105, i8* %18106, align 1
  %18107 = icmp eq i64 %18088, 0
  %18108 = zext i1 %18107 to i8
  %18109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18108, i8* %18109, align 1
  %18110 = lshr i64 %18088, 63
  %18111 = trunc i64 %18110 to i8
  %18112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18111, i8* %18112, align 1
  %18113 = lshr i64 %18084, 63
  %18114 = lshr i64 %18085, 63
  %18115 = xor i64 %18110, %18113
  %18116 = xor i64 %18110, %18114
  %18117 = add i64 %18115, %18116
  %18118 = icmp eq i64 %18117, 2
  %18119 = zext i1 %18118 to i8
  %18120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18119, i8* %18120, align 1
  store %struct.Memory* %loadMem_40bf47, %struct.Memory** %MEMORY
  %loadMem_40bf4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18122 = getelementptr inbounds %struct.GPR, %struct.GPR* %18121, i32 0, i32 33
  %18123 = getelementptr inbounds %struct.Reg, %struct.Reg* %18122, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %18123 to i64*
  %18124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18125 = getelementptr inbounds %struct.GPR, %struct.GPR* %18124, i32 0, i32 9
  %18126 = getelementptr inbounds %struct.Reg, %struct.Reg* %18125, i32 0, i32 0
  %RSI.i168 = bitcast %union.anon* %18126 to i64*
  %18127 = load i64, i64* %RSI.i168
  %18128 = load i64, i64* %PC.i167
  %18129 = add i64 %18128, 4
  store i64 %18129, i64* %PC.i167
  %18130 = add i64 96, %18127
  store i64 %18130, i64* %RSI.i168, align 8
  %18131 = icmp ult i64 %18130, %18127
  %18132 = icmp ult i64 %18130, 96
  %18133 = or i1 %18131, %18132
  %18134 = zext i1 %18133 to i8
  %18135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18134, i8* %18135, align 1
  %18136 = trunc i64 %18130 to i32
  %18137 = and i32 %18136, 255
  %18138 = call i32 @llvm.ctpop.i32(i32 %18137)
  %18139 = trunc i32 %18138 to i8
  %18140 = and i8 %18139, 1
  %18141 = xor i8 %18140, 1
  %18142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18141, i8* %18142, align 1
  %18143 = xor i64 96, %18127
  %18144 = xor i64 %18143, %18130
  %18145 = lshr i64 %18144, 4
  %18146 = trunc i64 %18145 to i8
  %18147 = and i8 %18146, 1
  %18148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18147, i8* %18148, align 1
  %18149 = icmp eq i64 %18130, 0
  %18150 = zext i1 %18149 to i8
  %18151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18150, i8* %18151, align 1
  %18152 = lshr i64 %18130, 63
  %18153 = trunc i64 %18152 to i8
  %18154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18153, i8* %18154, align 1
  %18155 = lshr i64 %18127, 63
  %18156 = xor i64 %18152, %18155
  %18157 = add i64 %18156, %18152
  %18158 = icmp eq i64 %18157, 2
  %18159 = zext i1 %18158 to i8
  %18160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18159, i8* %18160, align 1
  store %struct.Memory* %loadMem_40bf4a, %struct.Memory** %MEMORY
  %loadMem_40bf4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18162 = getelementptr inbounds %struct.GPR, %struct.GPR* %18161, i32 0, i32 33
  %18163 = getelementptr inbounds %struct.Reg, %struct.Reg* %18162, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %18163 to i64*
  %18164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18165 = getelementptr inbounds %struct.GPR, %struct.GPR* %18164, i32 0, i32 7
  %18166 = getelementptr inbounds %struct.Reg, %struct.Reg* %18165, i32 0, i32 0
  %RDX.i166 = bitcast %union.anon* %18166 to i64*
  %18167 = load i64, i64* %PC.i165
  %18168 = add i64 %18167, 8
  store i64 %18168, i64* %PC.i165
  %18169 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %18169, i64* %RDX.i166, align 8
  store %struct.Memory* %loadMem_40bf4e, %struct.Memory** %MEMORY
  %loadMem_40bf56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18171 = getelementptr inbounds %struct.GPR, %struct.GPR* %18170, i32 0, i32 33
  %18172 = getelementptr inbounds %struct.Reg, %struct.Reg* %18171, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %18172 to i64*
  %18173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18174 = getelementptr inbounds %struct.GPR, %struct.GPR* %18173, i32 0, i32 7
  %18175 = getelementptr inbounds %struct.Reg, %struct.Reg* %18174, i32 0, i32 0
  %RDX.i163 = bitcast %union.anon* %18175 to i64*
  %18176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18177 = getelementptr inbounds %struct.GPR, %struct.GPR* %18176, i32 0, i32 9
  %18178 = getelementptr inbounds %struct.Reg, %struct.Reg* %18177, i32 0, i32 0
  %RSI.i164 = bitcast %union.anon* %18178 to i64*
  %18179 = load i64, i64* %RDX.i163
  %18180 = load i64, i64* %RSI.i164
  %18181 = load i64, i64* %PC.i162
  %18182 = add i64 %18181, 3
  store i64 %18182, i64* %PC.i162
  %18183 = inttoptr i64 %18179 to i64*
  store i64 %18180, i64* %18183
  store %struct.Memory* %loadMem_40bf56, %struct.Memory** %MEMORY
  %loadMem_40bf59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18185 = getelementptr inbounds %struct.GPR, %struct.GPR* %18184, i32 0, i32 33
  %18186 = getelementptr inbounds %struct.Reg, %struct.Reg* %18185, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %18186 to i64*
  %18187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18188 = getelementptr inbounds %struct.GPR, %struct.GPR* %18187, i32 0, i32 7
  %18189 = getelementptr inbounds %struct.Reg, %struct.Reg* %18188, i32 0, i32 0
  %RDX.i160 = bitcast %union.anon* %18189 to i64*
  %18190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18191 = getelementptr inbounds %struct.GPR, %struct.GPR* %18190, i32 0, i32 15
  %18192 = getelementptr inbounds %struct.Reg, %struct.Reg* %18191, i32 0, i32 0
  %RBP.i161 = bitcast %union.anon* %18192 to i64*
  %18193 = load i64, i64* %RBP.i161
  %18194 = sub i64 %18193, 8
  %18195 = load i64, i64* %PC.i159
  %18196 = add i64 %18195, 4
  store i64 %18196, i64* %PC.i159
  %18197 = inttoptr i64 %18194 to i32*
  %18198 = load i32, i32* %18197
  %18199 = sext i32 %18198 to i64
  store i64 %18199, i64* %RDX.i160, align 8
  store %struct.Memory* %loadMem_40bf59, %struct.Memory** %MEMORY
  %loadMem_40bf5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18201 = getelementptr inbounds %struct.GPR, %struct.GPR* %18200, i32 0, i32 33
  %18202 = getelementptr inbounds %struct.Reg, %struct.Reg* %18201, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %18202 to i64*
  %18203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18204 = getelementptr inbounds %struct.GPR, %struct.GPR* %18203, i32 0, i32 7
  %18205 = getelementptr inbounds %struct.Reg, %struct.Reg* %18204, i32 0, i32 0
  %RDX.i158 = bitcast %union.anon* %18205 to i64*
  %18206 = load i64, i64* %RDX.i158
  %18207 = load i64, i64* %PC.i157
  %18208 = add i64 %18207, 7
  store i64 %18208, i64* %PC.i157
  %18209 = sext i64 %18206 to i128
  %18210 = and i128 %18209, -18446744073709551616
  %18211 = zext i64 %18206 to i128
  %18212 = or i128 %18210, %18211
  %18213 = mul i128 744, %18212
  %18214 = trunc i128 %18213 to i64
  store i64 %18214, i64* %RDX.i158, align 8
  %18215 = sext i64 %18214 to i128
  %18216 = icmp ne i128 %18215, %18213
  %18217 = zext i1 %18216 to i8
  %18218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18217, i8* %18218, align 1
  %18219 = trunc i128 %18213 to i32
  %18220 = and i32 %18219, 255
  %18221 = call i32 @llvm.ctpop.i32(i32 %18220)
  %18222 = trunc i32 %18221 to i8
  %18223 = and i8 %18222, 1
  %18224 = xor i8 %18223, 1
  %18225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18224, i8* %18225, align 1
  %18226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18226, align 1
  %18227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %18227, align 1
  %18228 = lshr i64 %18214, 63
  %18229 = trunc i64 %18228 to i8
  %18230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18229, i8* %18230, align 1
  %18231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18217, i8* %18231, align 1
  store %struct.Memory* %loadMem_40bf5d, %struct.Memory** %MEMORY
  %loadMem_40bf64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18233 = getelementptr inbounds %struct.GPR, %struct.GPR* %18232, i32 0, i32 33
  %18234 = getelementptr inbounds %struct.Reg, %struct.Reg* %18233, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %18234 to i64*
  %18235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18236 = getelementptr inbounds %struct.GPR, %struct.GPR* %18235, i32 0, i32 1
  %18237 = getelementptr inbounds %struct.Reg, %struct.Reg* %18236, i32 0, i32 0
  %RAX.i155 = bitcast %union.anon* %18237 to i64*
  %18238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18239 = getelementptr inbounds %struct.GPR, %struct.GPR* %18238, i32 0, i32 9
  %18240 = getelementptr inbounds %struct.Reg, %struct.Reg* %18239, i32 0, i32 0
  %RSI.i156 = bitcast %union.anon* %18240 to i64*
  %18241 = load i64, i64* %RAX.i155
  %18242 = load i64, i64* %PC.i154
  %18243 = add i64 %18242, 3
  store i64 %18243, i64* %PC.i154
  store i64 %18241, i64* %RSI.i156, align 8
  store %struct.Memory* %loadMem_40bf64, %struct.Memory** %MEMORY
  %loadMem_40bf67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18245 = getelementptr inbounds %struct.GPR, %struct.GPR* %18244, i32 0, i32 33
  %18246 = getelementptr inbounds %struct.Reg, %struct.Reg* %18245, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %18246 to i64*
  %18247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18248 = getelementptr inbounds %struct.GPR, %struct.GPR* %18247, i32 0, i32 7
  %18249 = getelementptr inbounds %struct.Reg, %struct.Reg* %18248, i32 0, i32 0
  %RDX.i152 = bitcast %union.anon* %18249 to i64*
  %18250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18251 = getelementptr inbounds %struct.GPR, %struct.GPR* %18250, i32 0, i32 9
  %18252 = getelementptr inbounds %struct.Reg, %struct.Reg* %18251, i32 0, i32 0
  %RSI.i153 = bitcast %union.anon* %18252 to i64*
  %18253 = load i64, i64* %RSI.i153
  %18254 = load i64, i64* %RDX.i152
  %18255 = load i64, i64* %PC.i151
  %18256 = add i64 %18255, 3
  store i64 %18256, i64* %PC.i151
  %18257 = add i64 %18254, %18253
  store i64 %18257, i64* %RSI.i153, align 8
  %18258 = icmp ult i64 %18257, %18253
  %18259 = icmp ult i64 %18257, %18254
  %18260 = or i1 %18258, %18259
  %18261 = zext i1 %18260 to i8
  %18262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18261, i8* %18262, align 1
  %18263 = trunc i64 %18257 to i32
  %18264 = and i32 %18263, 255
  %18265 = call i32 @llvm.ctpop.i32(i32 %18264)
  %18266 = trunc i32 %18265 to i8
  %18267 = and i8 %18266, 1
  %18268 = xor i8 %18267, 1
  %18269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18268, i8* %18269, align 1
  %18270 = xor i64 %18254, %18253
  %18271 = xor i64 %18270, %18257
  %18272 = lshr i64 %18271, 4
  %18273 = trunc i64 %18272 to i8
  %18274 = and i8 %18273, 1
  %18275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18274, i8* %18275, align 1
  %18276 = icmp eq i64 %18257, 0
  %18277 = zext i1 %18276 to i8
  %18278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18277, i8* %18278, align 1
  %18279 = lshr i64 %18257, 63
  %18280 = trunc i64 %18279 to i8
  %18281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18280, i8* %18281, align 1
  %18282 = lshr i64 %18253, 63
  %18283 = lshr i64 %18254, 63
  %18284 = xor i64 %18279, %18282
  %18285 = xor i64 %18279, %18283
  %18286 = add i64 %18284, %18285
  %18287 = icmp eq i64 %18286, 2
  %18288 = zext i1 %18287 to i8
  %18289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18288, i8* %18289, align 1
  store %struct.Memory* %loadMem_40bf67, %struct.Memory** %MEMORY
  %loadMem_40bf6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18291 = getelementptr inbounds %struct.GPR, %struct.GPR* %18290, i32 0, i32 33
  %18292 = getelementptr inbounds %struct.Reg, %struct.Reg* %18291, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %18292 to i64*
  %18293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18294 = getelementptr inbounds %struct.GPR, %struct.GPR* %18293, i32 0, i32 5
  %18295 = getelementptr inbounds %struct.Reg, %struct.Reg* %18294, i32 0, i32 0
  %RCX.i149 = bitcast %union.anon* %18295 to i64*
  %18296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18297 = getelementptr inbounds %struct.GPR, %struct.GPR* %18296, i32 0, i32 9
  %18298 = getelementptr inbounds %struct.Reg, %struct.Reg* %18297, i32 0, i32 0
  %RSI.i150 = bitcast %union.anon* %18298 to i64*
  %18299 = load i64, i64* %RSI.i150
  %18300 = add i64 %18299, 96
  %18301 = load i64, i64* %PC.i148
  %18302 = add i64 %18301, 3
  store i64 %18302, i64* %PC.i148
  %18303 = inttoptr i64 %18300 to i32*
  %18304 = load i32, i32* %18303
  %18305 = zext i32 %18304 to i64
  store i64 %18305, i64* %RCX.i149, align 8
  store %struct.Memory* %loadMem_40bf6a, %struct.Memory** %MEMORY
  %loadMem_40bf6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18307 = getelementptr inbounds %struct.GPR, %struct.GPR* %18306, i32 0, i32 33
  %18308 = getelementptr inbounds %struct.Reg, %struct.Reg* %18307, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %18308 to i64*
  %18309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18310 = getelementptr inbounds %struct.GPR, %struct.GPR* %18309, i32 0, i32 7
  %18311 = getelementptr inbounds %struct.Reg, %struct.Reg* %18310, i32 0, i32 0
  %RDX.i147 = bitcast %union.anon* %18311 to i64*
  %18312 = load i64, i64* %PC.i146
  %18313 = add i64 %18312, 8
  store i64 %18313, i64* %PC.i146
  %18314 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %18314, i64* %RDX.i147, align 8
  store %struct.Memory* %loadMem_40bf6d, %struct.Memory** %MEMORY
  %loadMem_40bf75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18316 = getelementptr inbounds %struct.GPR, %struct.GPR* %18315, i32 0, i32 33
  %18317 = getelementptr inbounds %struct.Reg, %struct.Reg* %18316, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %18317 to i64*
  %18318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18319 = getelementptr inbounds %struct.GPR, %struct.GPR* %18318, i32 0, i32 7
  %18320 = getelementptr inbounds %struct.Reg, %struct.Reg* %18319, i32 0, i32 0
  %RDX.i144 = bitcast %union.anon* %18320 to i64*
  %18321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18322 = getelementptr inbounds %struct.GPR, %struct.GPR* %18321, i32 0, i32 9
  %18323 = getelementptr inbounds %struct.Reg, %struct.Reg* %18322, i32 0, i32 0
  %RSI.i145 = bitcast %union.anon* %18323 to i64*
  %18324 = load i64, i64* %RDX.i144
  %18325 = load i64, i64* %PC.i143
  %18326 = add i64 %18325, 3
  store i64 %18326, i64* %PC.i143
  store i64 %18324, i64* %RSI.i145, align 8
  store %struct.Memory* %loadMem_40bf75, %struct.Memory** %MEMORY
  %loadMem_40bf78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18328 = getelementptr inbounds %struct.GPR, %struct.GPR* %18327, i32 0, i32 33
  %18329 = getelementptr inbounds %struct.Reg, %struct.Reg* %18328, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %18329 to i64*
  %18330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18331 = getelementptr inbounds %struct.GPR, %struct.GPR* %18330, i32 0, i32 9
  %18332 = getelementptr inbounds %struct.Reg, %struct.Reg* %18331, i32 0, i32 0
  %RSI.i142 = bitcast %union.anon* %18332 to i64*
  %18333 = load i64, i64* %RSI.i142
  %18334 = load i64, i64* %PC.i141
  %18335 = add i64 %18334, 4
  store i64 %18335, i64* %PC.i141
  %18336 = add i64 16, %18333
  store i64 %18336, i64* %RSI.i142, align 8
  %18337 = icmp ult i64 %18336, %18333
  %18338 = icmp ult i64 %18336, 16
  %18339 = or i1 %18337, %18338
  %18340 = zext i1 %18339 to i8
  %18341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18340, i8* %18341, align 1
  %18342 = trunc i64 %18336 to i32
  %18343 = and i32 %18342, 255
  %18344 = call i32 @llvm.ctpop.i32(i32 %18343)
  %18345 = trunc i32 %18344 to i8
  %18346 = and i8 %18345, 1
  %18347 = xor i8 %18346, 1
  %18348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18347, i8* %18348, align 1
  %18349 = xor i64 16, %18333
  %18350 = xor i64 %18349, %18336
  %18351 = lshr i64 %18350, 4
  %18352 = trunc i64 %18351 to i8
  %18353 = and i8 %18352, 1
  %18354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18353, i8* %18354, align 1
  %18355 = icmp eq i64 %18336, 0
  %18356 = zext i1 %18355 to i8
  %18357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18356, i8* %18357, align 1
  %18358 = lshr i64 %18336, 63
  %18359 = trunc i64 %18358 to i8
  %18360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18359, i8* %18360, align 1
  %18361 = lshr i64 %18333, 63
  %18362 = xor i64 %18358, %18361
  %18363 = add i64 %18362, %18358
  %18364 = icmp eq i64 %18363, 2
  %18365 = zext i1 %18364 to i8
  %18366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18365, i8* %18366, align 1
  store %struct.Memory* %loadMem_40bf78, %struct.Memory** %MEMORY
  %loadMem_40bf7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18368 = getelementptr inbounds %struct.GPR, %struct.GPR* %18367, i32 0, i32 33
  %18369 = getelementptr inbounds %struct.Reg, %struct.Reg* %18368, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %18369 to i64*
  %18370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18371 = getelementptr inbounds %struct.GPR, %struct.GPR* %18370, i32 0, i32 9
  %18372 = getelementptr inbounds %struct.Reg, %struct.Reg* %18371, i32 0, i32 0
  %RSI.i140 = bitcast %union.anon* %18372 to i64*
  %18373 = load i64, i64* %RSI.i140
  %18374 = load i64, i64* %PC.i139
  %18375 = add i64 %18374, 8
  store i64 %18375, i64* %PC.i139
  store i64 %18373, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40bf7c, %struct.Memory** %MEMORY
  %loadMem_40bf84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18377 = getelementptr inbounds %struct.GPR, %struct.GPR* %18376, i32 0, i32 33
  %18378 = getelementptr inbounds %struct.Reg, %struct.Reg* %18377, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %18378 to i64*
  %18379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18380 = getelementptr inbounds %struct.GPR, %struct.GPR* %18379, i32 0, i32 5
  %18381 = getelementptr inbounds %struct.Reg, %struct.Reg* %18380, i32 0, i32 0
  %ECX.i137 = bitcast %union.anon* %18381 to i32*
  %18382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18383 = getelementptr inbounds %struct.GPR, %struct.GPR* %18382, i32 0, i32 7
  %18384 = getelementptr inbounds %struct.Reg, %struct.Reg* %18383, i32 0, i32 0
  %RDX.i138 = bitcast %union.anon* %18384 to i64*
  %18385 = load i64, i64* %RDX.i138
  %18386 = add i64 %18385, 8
  %18387 = load i32, i32* %ECX.i137
  %18388 = zext i32 %18387 to i64
  %18389 = load i64, i64* %PC.i136
  %18390 = add i64 %18389, 3
  store i64 %18390, i64* %PC.i136
  %18391 = inttoptr i64 %18386 to i32*
  store i32 %18387, i32* %18391
  store %struct.Memory* %loadMem_40bf84, %struct.Memory** %MEMORY
  %loadMem_40bf87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18393 = getelementptr inbounds %struct.GPR, %struct.GPR* %18392, i32 0, i32 33
  %18394 = getelementptr inbounds %struct.Reg, %struct.Reg* %18393, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %18394 to i64*
  %18395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18396 = getelementptr inbounds %struct.GPR, %struct.GPR* %18395, i32 0, i32 5
  %18397 = getelementptr inbounds %struct.Reg, %struct.Reg* %18396, i32 0, i32 0
  %RCX.i134 = bitcast %union.anon* %18397 to i64*
  %18398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18399 = getelementptr inbounds %struct.GPR, %struct.GPR* %18398, i32 0, i32 15
  %18400 = getelementptr inbounds %struct.Reg, %struct.Reg* %18399, i32 0, i32 0
  %RBP.i135 = bitcast %union.anon* %18400 to i64*
  %18401 = load i64, i64* %RBP.i135
  %18402 = sub i64 %18401, 4
  %18403 = load i64, i64* %PC.i133
  %18404 = add i64 %18403, 3
  store i64 %18404, i64* %PC.i133
  %18405 = inttoptr i64 %18402 to i32*
  %18406 = load i32, i32* %18405
  %18407 = zext i32 %18406 to i64
  store i64 %18407, i64* %RCX.i134, align 8
  store %struct.Memory* %loadMem_40bf87, %struct.Memory** %MEMORY
  %loadMem_40bf8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18409 = getelementptr inbounds %struct.GPR, %struct.GPR* %18408, i32 0, i32 33
  %18410 = getelementptr inbounds %struct.Reg, %struct.Reg* %18409, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %18410 to i64*
  %18411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18412 = getelementptr inbounds %struct.GPR, %struct.GPR* %18411, i32 0, i32 5
  %18413 = getelementptr inbounds %struct.Reg, %struct.Reg* %18412, i32 0, i32 0
  %RCX.i132 = bitcast %union.anon* %18413 to i64*
  %18414 = load i64, i64* %RCX.i132
  %18415 = load i64, i64* %PC.i131
  %18416 = add i64 %18415, 3
  store i64 %18416, i64* %PC.i131
  %18417 = trunc i64 %18414 to i32
  %18418 = add i32 1, %18417
  %18419 = zext i32 %18418 to i64
  store i64 %18419, i64* %RCX.i132, align 8
  %18420 = icmp ult i32 %18418, %18417
  %18421 = icmp ult i32 %18418, 1
  %18422 = or i1 %18420, %18421
  %18423 = zext i1 %18422 to i8
  %18424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18423, i8* %18424, align 1
  %18425 = and i32 %18418, 255
  %18426 = call i32 @llvm.ctpop.i32(i32 %18425)
  %18427 = trunc i32 %18426 to i8
  %18428 = and i8 %18427, 1
  %18429 = xor i8 %18428, 1
  %18430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18429, i8* %18430, align 1
  %18431 = xor i64 1, %18414
  %18432 = trunc i64 %18431 to i32
  %18433 = xor i32 %18432, %18418
  %18434 = lshr i32 %18433, 4
  %18435 = trunc i32 %18434 to i8
  %18436 = and i8 %18435, 1
  %18437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18436, i8* %18437, align 1
  %18438 = icmp eq i32 %18418, 0
  %18439 = zext i1 %18438 to i8
  %18440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18439, i8* %18440, align 1
  %18441 = lshr i32 %18418, 31
  %18442 = trunc i32 %18441 to i8
  %18443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18442, i8* %18443, align 1
  %18444 = lshr i32 %18417, 31
  %18445 = xor i32 %18441, %18444
  %18446 = add i32 %18445, %18441
  %18447 = icmp eq i32 %18446, 2
  %18448 = zext i1 %18447 to i8
  %18449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18448, i8* %18449, align 1
  store %struct.Memory* %loadMem_40bf8a, %struct.Memory** %MEMORY
  %loadMem_40bf8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18451 = getelementptr inbounds %struct.GPR, %struct.GPR* %18450, i32 0, i32 33
  %18452 = getelementptr inbounds %struct.Reg, %struct.Reg* %18451, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %18452 to i64*
  %18453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18454 = getelementptr inbounds %struct.GPR, %struct.GPR* %18453, i32 0, i32 5
  %18455 = getelementptr inbounds %struct.Reg, %struct.Reg* %18454, i32 0, i32 0
  %ECX.i129 = bitcast %union.anon* %18455 to i32*
  %18456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18457 = getelementptr inbounds %struct.GPR, %struct.GPR* %18456, i32 0, i32 7
  %18458 = getelementptr inbounds %struct.Reg, %struct.Reg* %18457, i32 0, i32 0
  %RDX.i130 = bitcast %union.anon* %18458 to i64*
  %18459 = load i32, i32* %ECX.i129
  %18460 = zext i32 %18459 to i64
  %18461 = load i64, i64* %PC.i128
  %18462 = add i64 %18461, 3
  store i64 %18462, i64* %PC.i128
  %18463 = shl i64 %18460, 32
  %18464 = ashr exact i64 %18463, 32
  store i64 %18464, i64* %RDX.i130, align 8
  store %struct.Memory* %loadMem_40bf8d, %struct.Memory** %MEMORY
  %loadMem_40bf90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18466 = getelementptr inbounds %struct.GPR, %struct.GPR* %18465, i32 0, i32 33
  %18467 = getelementptr inbounds %struct.Reg, %struct.Reg* %18466, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %18467 to i64*
  %18468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18469 = getelementptr inbounds %struct.GPR, %struct.GPR* %18468, i32 0, i32 5
  %18470 = getelementptr inbounds %struct.Reg, %struct.Reg* %18469, i32 0, i32 0
  %RCX.i126 = bitcast %union.anon* %18470 to i64*
  %18471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18472 = getelementptr inbounds %struct.GPR, %struct.GPR* %18471, i32 0, i32 7
  %18473 = getelementptr inbounds %struct.Reg, %struct.Reg* %18472, i32 0, i32 0
  %RDX.i127 = bitcast %union.anon* %18473 to i64*
  %18474 = load i64, i64* %RDX.i127
  %18475 = mul i64 %18474, 4
  %18476 = add i64 %18475, 11187184
  %18477 = load i64, i64* %PC.i125
  %18478 = add i64 %18477, 7
  store i64 %18478, i64* %PC.i125
  %18479 = inttoptr i64 %18476 to i32*
  %18480 = load i32, i32* %18479
  %18481 = zext i32 %18480 to i64
  store i64 %18481, i64* %RCX.i126, align 8
  store %struct.Memory* %loadMem_40bf90, %struct.Memory** %MEMORY
  %loadMem_40bf97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18483 = getelementptr inbounds %struct.GPR, %struct.GPR* %18482, i32 0, i32 33
  %18484 = getelementptr inbounds %struct.Reg, %struct.Reg* %18483, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %18484 to i64*
  %18485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18486 = getelementptr inbounds %struct.GPR, %struct.GPR* %18485, i32 0, i32 7
  %18487 = getelementptr inbounds %struct.Reg, %struct.Reg* %18486, i32 0, i32 0
  %RDX.i123 = bitcast %union.anon* %18487 to i64*
  %18488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18489 = getelementptr inbounds %struct.GPR, %struct.GPR* %18488, i32 0, i32 15
  %18490 = getelementptr inbounds %struct.Reg, %struct.Reg* %18489, i32 0, i32 0
  %RBP.i124 = bitcast %union.anon* %18490 to i64*
  %18491 = load i64, i64* %RBP.i124
  %18492 = sub i64 %18491, 8
  %18493 = load i64, i64* %PC.i122
  %18494 = add i64 %18493, 4
  store i64 %18494, i64* %PC.i122
  %18495 = inttoptr i64 %18492 to i32*
  %18496 = load i32, i32* %18495
  %18497 = sext i32 %18496 to i64
  store i64 %18497, i64* %RDX.i123, align 8
  store %struct.Memory* %loadMem_40bf97, %struct.Memory** %MEMORY
  %loadMem_40bf9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18499 = getelementptr inbounds %struct.GPR, %struct.GPR* %18498, i32 0, i32 33
  %18500 = getelementptr inbounds %struct.Reg, %struct.Reg* %18499, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %18500 to i64*
  %18501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18502 = getelementptr inbounds %struct.GPR, %struct.GPR* %18501, i32 0, i32 7
  %18503 = getelementptr inbounds %struct.Reg, %struct.Reg* %18502, i32 0, i32 0
  %RDX.i121 = bitcast %union.anon* %18503 to i64*
  %18504 = load i64, i64* %RDX.i121
  %18505 = load i64, i64* %PC.i120
  %18506 = add i64 %18505, 7
  store i64 %18506, i64* %PC.i120
  %18507 = sext i64 %18504 to i128
  %18508 = and i128 %18507, -18446744073709551616
  %18509 = zext i64 %18504 to i128
  %18510 = or i128 %18508, %18509
  %18511 = mul i128 744, %18510
  %18512 = trunc i128 %18511 to i64
  store i64 %18512, i64* %RDX.i121, align 8
  %18513 = sext i64 %18512 to i128
  %18514 = icmp ne i128 %18513, %18511
  %18515 = zext i1 %18514 to i8
  %18516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18515, i8* %18516, align 1
  %18517 = trunc i128 %18511 to i32
  %18518 = and i32 %18517, 255
  %18519 = call i32 @llvm.ctpop.i32(i32 %18518)
  %18520 = trunc i32 %18519 to i8
  %18521 = and i8 %18520, 1
  %18522 = xor i8 %18521, 1
  %18523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18522, i8* %18523, align 1
  %18524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18524, align 1
  %18525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %18525, align 1
  %18526 = lshr i64 %18512, 63
  %18527 = trunc i64 %18526 to i8
  %18528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18527, i8* %18528, align 1
  %18529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18515, i8* %18529, align 1
  store %struct.Memory* %loadMem_40bf9b, %struct.Memory** %MEMORY
  %loadMem_40bfa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18531 = getelementptr inbounds %struct.GPR, %struct.GPR* %18530, i32 0, i32 33
  %18532 = getelementptr inbounds %struct.Reg, %struct.Reg* %18531, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %18532 to i64*
  %18533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18534 = getelementptr inbounds %struct.GPR, %struct.GPR* %18533, i32 0, i32 1
  %18535 = getelementptr inbounds %struct.Reg, %struct.Reg* %18534, i32 0, i32 0
  %RAX.i118 = bitcast %union.anon* %18535 to i64*
  %18536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18537 = getelementptr inbounds %struct.GPR, %struct.GPR* %18536, i32 0, i32 9
  %18538 = getelementptr inbounds %struct.Reg, %struct.Reg* %18537, i32 0, i32 0
  %RSI.i119 = bitcast %union.anon* %18538 to i64*
  %18539 = load i64, i64* %RAX.i118
  %18540 = load i64, i64* %PC.i117
  %18541 = add i64 %18540, 3
  store i64 %18541, i64* %PC.i117
  store i64 %18539, i64* %RSI.i119, align 8
  store %struct.Memory* %loadMem_40bfa2, %struct.Memory** %MEMORY
  %loadMem_40bfa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18543 = getelementptr inbounds %struct.GPR, %struct.GPR* %18542, i32 0, i32 33
  %18544 = getelementptr inbounds %struct.Reg, %struct.Reg* %18543, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %18544 to i64*
  %18545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18546 = getelementptr inbounds %struct.GPR, %struct.GPR* %18545, i32 0, i32 7
  %18547 = getelementptr inbounds %struct.Reg, %struct.Reg* %18546, i32 0, i32 0
  %RDX.i115 = bitcast %union.anon* %18547 to i64*
  %18548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18549 = getelementptr inbounds %struct.GPR, %struct.GPR* %18548, i32 0, i32 9
  %18550 = getelementptr inbounds %struct.Reg, %struct.Reg* %18549, i32 0, i32 0
  %RSI.i116 = bitcast %union.anon* %18550 to i64*
  %18551 = load i64, i64* %RSI.i116
  %18552 = load i64, i64* %RDX.i115
  %18553 = load i64, i64* %PC.i114
  %18554 = add i64 %18553, 3
  store i64 %18554, i64* %PC.i114
  %18555 = add i64 %18552, %18551
  store i64 %18555, i64* %RSI.i116, align 8
  %18556 = icmp ult i64 %18555, %18551
  %18557 = icmp ult i64 %18555, %18552
  %18558 = or i1 %18556, %18557
  %18559 = zext i1 %18558 to i8
  %18560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18559, i8* %18560, align 1
  %18561 = trunc i64 %18555 to i32
  %18562 = and i32 %18561, 255
  %18563 = call i32 @llvm.ctpop.i32(i32 %18562)
  %18564 = trunc i32 %18563 to i8
  %18565 = and i8 %18564, 1
  %18566 = xor i8 %18565, 1
  %18567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18566, i8* %18567, align 1
  %18568 = xor i64 %18552, %18551
  %18569 = xor i64 %18568, %18555
  %18570 = lshr i64 %18569, 4
  %18571 = trunc i64 %18570 to i8
  %18572 = and i8 %18571, 1
  %18573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18572, i8* %18573, align 1
  %18574 = icmp eq i64 %18555, 0
  %18575 = zext i1 %18574 to i8
  %18576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18575, i8* %18576, align 1
  %18577 = lshr i64 %18555, 63
  %18578 = trunc i64 %18577 to i8
  %18579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18578, i8* %18579, align 1
  %18580 = lshr i64 %18551, 63
  %18581 = lshr i64 %18552, 63
  %18582 = xor i64 %18577, %18580
  %18583 = xor i64 %18577, %18581
  %18584 = add i64 %18582, %18583
  %18585 = icmp eq i64 %18584, 2
  %18586 = zext i1 %18585 to i8
  %18587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18586, i8* %18587, align 1
  store %struct.Memory* %loadMem_40bfa5, %struct.Memory** %MEMORY
  %loadMem_40bfa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18589 = getelementptr inbounds %struct.GPR, %struct.GPR* %18588, i32 0, i32 33
  %18590 = getelementptr inbounds %struct.Reg, %struct.Reg* %18589, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %18590 to i64*
  %18591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18592 = getelementptr inbounds %struct.GPR, %struct.GPR* %18591, i32 0, i32 7
  %18593 = getelementptr inbounds %struct.Reg, %struct.Reg* %18592, i32 0, i32 0
  %RDX.i112 = bitcast %union.anon* %18593 to i64*
  %18594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18595 = getelementptr inbounds %struct.GPR, %struct.GPR* %18594, i32 0, i32 15
  %18596 = getelementptr inbounds %struct.Reg, %struct.Reg* %18595, i32 0, i32 0
  %RBP.i113 = bitcast %union.anon* %18596 to i64*
  %18597 = load i64, i64* %RBP.i113
  %18598 = sub i64 %18597, 8
  %18599 = load i64, i64* %PC.i111
  %18600 = add i64 %18599, 4
  store i64 %18600, i64* %PC.i111
  %18601 = inttoptr i64 %18598 to i32*
  %18602 = load i32, i32* %18601
  %18603 = sext i32 %18602 to i64
  store i64 %18603, i64* %RDX.i112, align 8
  store %struct.Memory* %loadMem_40bfa8, %struct.Memory** %MEMORY
  %loadMem_40bfac = load %struct.Memory*, %struct.Memory** %MEMORY
  %18604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18605 = getelementptr inbounds %struct.GPR, %struct.GPR* %18604, i32 0, i32 33
  %18606 = getelementptr inbounds %struct.Reg, %struct.Reg* %18605, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %18606 to i64*
  %18607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18608 = getelementptr inbounds %struct.GPR, %struct.GPR* %18607, i32 0, i32 7
  %18609 = getelementptr inbounds %struct.Reg, %struct.Reg* %18608, i32 0, i32 0
  %RDX.i110 = bitcast %union.anon* %18609 to i64*
  %18610 = load i64, i64* %RDX.i110
  %18611 = load i64, i64* %PC.i109
  %18612 = add i64 %18611, 7
  store i64 %18612, i64* %PC.i109
  %18613 = sext i64 %18610 to i128
  %18614 = and i128 %18613, -18446744073709551616
  %18615 = zext i64 %18610 to i128
  %18616 = or i128 %18614, %18615
  %18617 = mul i128 744, %18616
  %18618 = trunc i128 %18617 to i64
  store i64 %18618, i64* %RDX.i110, align 8
  %18619 = sext i64 %18618 to i128
  %18620 = icmp ne i128 %18619, %18617
  %18621 = zext i1 %18620 to i8
  %18622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18621, i8* %18622, align 1
  %18623 = trunc i128 %18617 to i32
  %18624 = and i32 %18623, 255
  %18625 = call i32 @llvm.ctpop.i32(i32 %18624)
  %18626 = trunc i32 %18625 to i8
  %18627 = and i8 %18626, 1
  %18628 = xor i8 %18627, 1
  %18629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18628, i8* %18629, align 1
  %18630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18630, align 1
  %18631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %18631, align 1
  %18632 = lshr i64 %18618, 63
  %18633 = trunc i64 %18632 to i8
  %18634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18633, i8* %18634, align 1
  %18635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18621, i8* %18635, align 1
  store %struct.Memory* %loadMem_40bfac, %struct.Memory** %MEMORY
  %loadMem_40bfb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18637 = getelementptr inbounds %struct.GPR, %struct.GPR* %18636, i32 0, i32 33
  %18638 = getelementptr inbounds %struct.Reg, %struct.Reg* %18637, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %18638 to i64*
  %18639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18640 = getelementptr inbounds %struct.GPR, %struct.GPR* %18639, i32 0, i32 1
  %18641 = getelementptr inbounds %struct.Reg, %struct.Reg* %18640, i32 0, i32 0
  %RAX.i107 = bitcast %union.anon* %18641 to i64*
  %18642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18643 = getelementptr inbounds %struct.GPR, %struct.GPR* %18642, i32 0, i32 11
  %18644 = getelementptr inbounds %struct.Reg, %struct.Reg* %18643, i32 0, i32 0
  %RDI.i108 = bitcast %union.anon* %18644 to i64*
  %18645 = load i64, i64* %RAX.i107
  %18646 = load i64, i64* %PC.i106
  %18647 = add i64 %18646, 3
  store i64 %18647, i64* %PC.i106
  store i64 %18645, i64* %RDI.i108, align 8
  store %struct.Memory* %loadMem_40bfb3, %struct.Memory** %MEMORY
  %loadMem_40bfb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18649 = getelementptr inbounds %struct.GPR, %struct.GPR* %18648, i32 0, i32 33
  %18650 = getelementptr inbounds %struct.Reg, %struct.Reg* %18649, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %18650 to i64*
  %18651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18652 = getelementptr inbounds %struct.GPR, %struct.GPR* %18651, i32 0, i32 7
  %18653 = getelementptr inbounds %struct.Reg, %struct.Reg* %18652, i32 0, i32 0
  %RDX.i104 = bitcast %union.anon* %18653 to i64*
  %18654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18655 = getelementptr inbounds %struct.GPR, %struct.GPR* %18654, i32 0, i32 11
  %18656 = getelementptr inbounds %struct.Reg, %struct.Reg* %18655, i32 0, i32 0
  %RDI.i105 = bitcast %union.anon* %18656 to i64*
  %18657 = load i64, i64* %RDI.i105
  %18658 = load i64, i64* %RDX.i104
  %18659 = load i64, i64* %PC.i103
  %18660 = add i64 %18659, 3
  store i64 %18660, i64* %PC.i103
  %18661 = add i64 %18658, %18657
  store i64 %18661, i64* %RDI.i105, align 8
  %18662 = icmp ult i64 %18661, %18657
  %18663 = icmp ult i64 %18661, %18658
  %18664 = or i1 %18662, %18663
  %18665 = zext i1 %18664 to i8
  %18666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18665, i8* %18666, align 1
  %18667 = trunc i64 %18661 to i32
  %18668 = and i32 %18667, 255
  %18669 = call i32 @llvm.ctpop.i32(i32 %18668)
  %18670 = trunc i32 %18669 to i8
  %18671 = and i8 %18670, 1
  %18672 = xor i8 %18671, 1
  %18673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18672, i8* %18673, align 1
  %18674 = xor i64 %18658, %18657
  %18675 = xor i64 %18674, %18661
  %18676 = lshr i64 %18675, 4
  %18677 = trunc i64 %18676 to i8
  %18678 = and i8 %18677, 1
  %18679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18678, i8* %18679, align 1
  %18680 = icmp eq i64 %18661, 0
  %18681 = zext i1 %18680 to i8
  %18682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18681, i8* %18682, align 1
  %18683 = lshr i64 %18661, 63
  %18684 = trunc i64 %18683 to i8
  %18685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18684, i8* %18685, align 1
  %18686 = lshr i64 %18657, 63
  %18687 = lshr i64 %18658, 63
  %18688 = xor i64 %18683, %18686
  %18689 = xor i64 %18683, %18687
  %18690 = add i64 %18688, %18689
  %18691 = icmp eq i64 %18690, 2
  %18692 = zext i1 %18691 to i8
  %18693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18692, i8* %18693, align 1
  store %struct.Memory* %loadMem_40bfb6, %struct.Memory** %MEMORY
  %loadMem_40bfb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18695 = getelementptr inbounds %struct.GPR, %struct.GPR* %18694, i32 0, i32 33
  %18696 = getelementptr inbounds %struct.Reg, %struct.Reg* %18695, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %18696 to i64*
  %18697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18698 = getelementptr inbounds %struct.GPR, %struct.GPR* %18697, i32 0, i32 17
  %18699 = getelementptr inbounds %struct.Reg, %struct.Reg* %18698, i32 0, i32 0
  %R8D.i101 = bitcast %union.anon* %18699 to i32*
  %18700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18701 = getelementptr inbounds %struct.GPR, %struct.GPR* %18700, i32 0, i32 11
  %18702 = getelementptr inbounds %struct.Reg, %struct.Reg* %18701, i32 0, i32 0
  %RDI.i102 = bitcast %union.anon* %18702 to i64*
  %18703 = bitcast i32* %R8D.i101 to i64*
  %18704 = load i64, i64* %RDI.i102
  %18705 = add i64 %18704, 96
  %18706 = load i64, i64* %PC.i100
  %18707 = add i64 %18706, 4
  store i64 %18707, i64* %PC.i100
  %18708 = inttoptr i64 %18705 to i32*
  %18709 = load i32, i32* %18708
  %18710 = zext i32 %18709 to i64
  store i64 %18710, i64* %18703, align 8
  store %struct.Memory* %loadMem_40bfb9, %struct.Memory** %MEMORY
  %loadMem_40bfbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %18711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18712 = getelementptr inbounds %struct.GPR, %struct.GPR* %18711, i32 0, i32 33
  %18713 = getelementptr inbounds %struct.Reg, %struct.Reg* %18712, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %18713 to i64*
  %18714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18715 = getelementptr inbounds %struct.GPR, %struct.GPR* %18714, i32 0, i32 17
  %18716 = getelementptr inbounds %struct.Reg, %struct.Reg* %18715, i32 0, i32 0
  %R8D.i98 = bitcast %union.anon* %18716 to i32*
  %18717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18718 = getelementptr inbounds %struct.GPR, %struct.GPR* %18717, i32 0, i32 19
  %18719 = getelementptr inbounds %struct.Reg, %struct.Reg* %18718, i32 0, i32 0
  %R9D.i99 = bitcast %union.anon* %18719 to i32*
  %18720 = bitcast i32* %R9D.i99 to i64*
  %18721 = load i32, i32* %R8D.i98
  %18722 = zext i32 %18721 to i64
  %18723 = load i64, i64* %PC.i97
  %18724 = add i64 %18723, 3
  store i64 %18724, i64* %PC.i97
  %18725 = and i64 %18722, 4294967295
  store i64 %18725, i64* %18720, align 8
  store %struct.Memory* %loadMem_40bfbd, %struct.Memory** %MEMORY
  %loadMem_40bfc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18727 = getelementptr inbounds %struct.GPR, %struct.GPR* %18726, i32 0, i32 33
  %18728 = getelementptr inbounds %struct.Reg, %struct.Reg* %18727, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %18728 to i64*
  %18729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18730 = getelementptr inbounds %struct.GPR, %struct.GPR* %18729, i32 0, i32 19
  %18731 = getelementptr inbounds %struct.Reg, %struct.Reg* %18730, i32 0, i32 0
  %R9D.i96 = bitcast %union.anon* %18731 to i32*
  %18732 = bitcast i32* %R9D.i96 to i64*
  %18733 = load i32, i32* %R9D.i96
  %18734 = zext i32 %18733 to i64
  %18735 = load i64, i64* %PC.i95
  %18736 = add i64 %18735, 4
  store i64 %18736, i64* %PC.i95
  %18737 = add i32 1, %18733
  %18738 = zext i32 %18737 to i64
  store i64 %18738, i64* %18732, align 8
  %18739 = icmp ult i32 %18737, %18733
  %18740 = icmp ult i32 %18737, 1
  %18741 = or i1 %18739, %18740
  %18742 = zext i1 %18741 to i8
  %18743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18742, i8* %18743, align 1
  %18744 = and i32 %18737, 255
  %18745 = call i32 @llvm.ctpop.i32(i32 %18744)
  %18746 = trunc i32 %18745 to i8
  %18747 = and i8 %18746, 1
  %18748 = xor i8 %18747, 1
  %18749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18748, i8* %18749, align 1
  %18750 = xor i64 1, %18734
  %18751 = trunc i64 %18750 to i32
  %18752 = xor i32 %18751, %18737
  %18753 = lshr i32 %18752, 4
  %18754 = trunc i32 %18753 to i8
  %18755 = and i8 %18754, 1
  %18756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18755, i8* %18756, align 1
  %18757 = icmp eq i32 %18737, 0
  %18758 = zext i1 %18757 to i8
  %18759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18758, i8* %18759, align 1
  %18760 = lshr i32 %18737, 31
  %18761 = trunc i32 %18760 to i8
  %18762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18761, i8* %18762, align 1
  %18763 = lshr i32 %18733, 31
  %18764 = xor i32 %18760, %18763
  %18765 = add i32 %18764, %18760
  %18766 = icmp eq i32 %18765, 2
  %18767 = zext i1 %18766 to i8
  %18768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18767, i8* %18768, align 1
  store %struct.Memory* %loadMem_40bfc0, %struct.Memory** %MEMORY
  %loadMem_40bfc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18770 = getelementptr inbounds %struct.GPR, %struct.GPR* %18769, i32 0, i32 33
  %18771 = getelementptr inbounds %struct.Reg, %struct.Reg* %18770, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %18771 to i64*
  %18772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18773 = getelementptr inbounds %struct.GPR, %struct.GPR* %18772, i32 0, i32 19
  %18774 = getelementptr inbounds %struct.Reg, %struct.Reg* %18773, i32 0, i32 0
  %R9D.i94 = bitcast %union.anon* %18774 to i32*
  %18775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18776 = getelementptr inbounds %struct.GPR, %struct.GPR* %18775, i32 0, i32 11
  %18777 = getelementptr inbounds %struct.Reg, %struct.Reg* %18776, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %18777 to i64*
  %18778 = load i64, i64* %RDI.i
  %18779 = add i64 %18778, 96
  %18780 = load i32, i32* %R9D.i94
  %18781 = zext i32 %18780 to i64
  %18782 = load i64, i64* %PC.i93
  %18783 = add i64 %18782, 4
  store i64 %18783, i64* %PC.i93
  %18784 = inttoptr i64 %18779 to i32*
  store i32 %18780, i32* %18784
  store %struct.Memory* %loadMem_40bfc4, %struct.Memory** %MEMORY
  %loadMem_40bfc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18786 = getelementptr inbounds %struct.GPR, %struct.GPR* %18785, i32 0, i32 33
  %18787 = getelementptr inbounds %struct.Reg, %struct.Reg* %18786, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %18787 to i64*
  %18788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18789 = getelementptr inbounds %struct.GPR, %struct.GPR* %18788, i32 0, i32 17
  %18790 = getelementptr inbounds %struct.Reg, %struct.Reg* %18789, i32 0, i32 0
  %R8D.i91 = bitcast %union.anon* %18790 to i32*
  %18791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18792 = getelementptr inbounds %struct.GPR, %struct.GPR* %18791, i32 0, i32 7
  %18793 = getelementptr inbounds %struct.Reg, %struct.Reg* %18792, i32 0, i32 0
  %RDX.i92 = bitcast %union.anon* %18793 to i64*
  %18794 = load i32, i32* %R8D.i91
  %18795 = zext i32 %18794 to i64
  %18796 = load i64, i64* %PC.i90
  %18797 = add i64 %18796, 3
  store i64 %18797, i64* %PC.i90
  %18798 = shl i64 %18795, 32
  %18799 = ashr exact i64 %18798, 32
  store i64 %18799, i64* %RDX.i92, align 8
  store %struct.Memory* %loadMem_40bfc8, %struct.Memory** %MEMORY
  %loadMem_40bfcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %18800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18801 = getelementptr inbounds %struct.GPR, %struct.GPR* %18800, i32 0, i32 33
  %18802 = getelementptr inbounds %struct.Reg, %struct.Reg* %18801, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %18802 to i64*
  %18803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18804 = getelementptr inbounds %struct.GPR, %struct.GPR* %18803, i32 0, i32 5
  %18805 = getelementptr inbounds %struct.Reg, %struct.Reg* %18804, i32 0, i32 0
  %ECX.i87 = bitcast %union.anon* %18805 to i32*
  %18806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18807 = getelementptr inbounds %struct.GPR, %struct.GPR* %18806, i32 0, i32 7
  %18808 = getelementptr inbounds %struct.Reg, %struct.Reg* %18807, i32 0, i32 0
  %RDX.i88 = bitcast %union.anon* %18808 to i64*
  %18809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18810 = getelementptr inbounds %struct.GPR, %struct.GPR* %18809, i32 0, i32 9
  %18811 = getelementptr inbounds %struct.Reg, %struct.Reg* %18810, i32 0, i32 0
  %RSI.i89 = bitcast %union.anon* %18811 to i64*
  %18812 = load i64, i64* %RSI.i89
  %18813 = load i64, i64* %RDX.i88
  %18814 = mul i64 %18813, 4
  %18815 = add i64 %18812, 100
  %18816 = add i64 %18815, %18814
  %18817 = load i32, i32* %ECX.i87
  %18818 = zext i32 %18817 to i64
  %18819 = load i64, i64* %PC.i86
  %18820 = add i64 %18819, 4
  store i64 %18820, i64* %PC.i86
  %18821 = inttoptr i64 %18816 to i32*
  store i32 %18817, i32* %18821
  store %struct.Memory* %loadMem_40bfcb, %struct.Memory** %MEMORY
  %loadMem_40bfcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %18822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18823 = getelementptr inbounds %struct.GPR, %struct.GPR* %18822, i32 0, i32 33
  %18824 = getelementptr inbounds %struct.Reg, %struct.Reg* %18823, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %18824 to i64*
  %18825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18826 = getelementptr inbounds %struct.GPR, %struct.GPR* %18825, i32 0, i32 7
  %18827 = getelementptr inbounds %struct.Reg, %struct.Reg* %18826, i32 0, i32 0
  %RDX.i84 = bitcast %union.anon* %18827 to i64*
  %18828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18829 = getelementptr inbounds %struct.GPR, %struct.GPR* %18828, i32 0, i32 15
  %18830 = getelementptr inbounds %struct.Reg, %struct.Reg* %18829, i32 0, i32 0
  %RBP.i85 = bitcast %union.anon* %18830 to i64*
  %18831 = load i64, i64* %RBP.i85
  %18832 = sub i64 %18831, 44
  %18833 = load i64, i64* %PC.i83
  %18834 = add i64 %18833, 4
  store i64 %18834, i64* %PC.i83
  %18835 = inttoptr i64 %18832 to i32*
  %18836 = load i32, i32* %18835
  %18837 = sext i32 %18836 to i64
  store i64 %18837, i64* %RDX.i84, align 8
  store %struct.Memory* %loadMem_40bfcf, %struct.Memory** %MEMORY
  %loadMem_40bfd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18839 = getelementptr inbounds %struct.GPR, %struct.GPR* %18838, i32 0, i32 33
  %18840 = getelementptr inbounds %struct.Reg, %struct.Reg* %18839, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %18840 to i64*
  %18841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18842 = getelementptr inbounds %struct.GPR, %struct.GPR* %18841, i32 0, i32 7
  %18843 = getelementptr inbounds %struct.Reg, %struct.Reg* %18842, i32 0, i32 0
  %RDX.i82 = bitcast %union.anon* %18843 to i64*
  %18844 = load i64, i64* %RDX.i82
  %18845 = load i64, i64* %PC.i81
  %18846 = add i64 %18845, 7
  store i64 %18846, i64* %PC.i81
  %18847 = sext i64 %18844 to i128
  %18848 = and i128 %18847, -18446744073709551616
  %18849 = zext i64 %18844 to i128
  %18850 = or i128 %18848, %18849
  %18851 = mul i128 744, %18850
  %18852 = trunc i128 %18851 to i64
  store i64 %18852, i64* %RDX.i82, align 8
  %18853 = sext i64 %18852 to i128
  %18854 = icmp ne i128 %18853, %18851
  %18855 = zext i1 %18854 to i8
  %18856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18855, i8* %18856, align 1
  %18857 = trunc i128 %18851 to i32
  %18858 = and i32 %18857, 255
  %18859 = call i32 @llvm.ctpop.i32(i32 %18858)
  %18860 = trunc i32 %18859 to i8
  %18861 = and i8 %18860, 1
  %18862 = xor i8 %18861, 1
  %18863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18862, i8* %18863, align 1
  %18864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18864, align 1
  %18865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %18865, align 1
  %18866 = lshr i64 %18852, 63
  %18867 = trunc i64 %18866 to i8
  %18868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18867, i8* %18868, align 1
  %18869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18855, i8* %18869, align 1
  store %struct.Memory* %loadMem_40bfd3, %struct.Memory** %MEMORY
  %loadMem_40bfda = load %struct.Memory*, %struct.Memory** %MEMORY
  %18870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18871 = getelementptr inbounds %struct.GPR, %struct.GPR* %18870, i32 0, i32 33
  %18872 = getelementptr inbounds %struct.Reg, %struct.Reg* %18871, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %18872 to i64*
  %18873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18874 = getelementptr inbounds %struct.GPR, %struct.GPR* %18873, i32 0, i32 1
  %18875 = getelementptr inbounds %struct.Reg, %struct.Reg* %18874, i32 0, i32 0
  %RAX.i79 = bitcast %union.anon* %18875 to i64*
  %18876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18877 = getelementptr inbounds %struct.GPR, %struct.GPR* %18876, i32 0, i32 9
  %18878 = getelementptr inbounds %struct.Reg, %struct.Reg* %18877, i32 0, i32 0
  %RSI.i80 = bitcast %union.anon* %18878 to i64*
  %18879 = load i64, i64* %RAX.i79
  %18880 = load i64, i64* %PC.i78
  %18881 = add i64 %18880, 3
  store i64 %18881, i64* %PC.i78
  store i64 %18879, i64* %RSI.i80, align 8
  store %struct.Memory* %loadMem_40bfda, %struct.Memory** %MEMORY
  %loadMem_40bfdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %18882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18883 = getelementptr inbounds %struct.GPR, %struct.GPR* %18882, i32 0, i32 33
  %18884 = getelementptr inbounds %struct.Reg, %struct.Reg* %18883, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %18884 to i64*
  %18885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18886 = getelementptr inbounds %struct.GPR, %struct.GPR* %18885, i32 0, i32 7
  %18887 = getelementptr inbounds %struct.Reg, %struct.Reg* %18886, i32 0, i32 0
  %RDX.i76 = bitcast %union.anon* %18887 to i64*
  %18888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18889 = getelementptr inbounds %struct.GPR, %struct.GPR* %18888, i32 0, i32 9
  %18890 = getelementptr inbounds %struct.Reg, %struct.Reg* %18889, i32 0, i32 0
  %RSI.i77 = bitcast %union.anon* %18890 to i64*
  %18891 = load i64, i64* %RSI.i77
  %18892 = load i64, i64* %RDX.i76
  %18893 = load i64, i64* %PC.i75
  %18894 = add i64 %18893, 3
  store i64 %18894, i64* %PC.i75
  %18895 = add i64 %18892, %18891
  store i64 %18895, i64* %RSI.i77, align 8
  %18896 = icmp ult i64 %18895, %18891
  %18897 = icmp ult i64 %18895, %18892
  %18898 = or i1 %18896, %18897
  %18899 = zext i1 %18898 to i8
  %18900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18899, i8* %18900, align 1
  %18901 = trunc i64 %18895 to i32
  %18902 = and i32 %18901, 255
  %18903 = call i32 @llvm.ctpop.i32(i32 %18902)
  %18904 = trunc i32 %18903 to i8
  %18905 = and i8 %18904, 1
  %18906 = xor i8 %18905, 1
  %18907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18906, i8* %18907, align 1
  %18908 = xor i64 %18892, %18891
  %18909 = xor i64 %18908, %18895
  %18910 = lshr i64 %18909, 4
  %18911 = trunc i64 %18910 to i8
  %18912 = and i8 %18911, 1
  %18913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18912, i8* %18913, align 1
  %18914 = icmp eq i64 %18895, 0
  %18915 = zext i1 %18914 to i8
  %18916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18915, i8* %18916, align 1
  %18917 = lshr i64 %18895, 63
  %18918 = trunc i64 %18917 to i8
  %18919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18918, i8* %18919, align 1
  %18920 = lshr i64 %18891, 63
  %18921 = lshr i64 %18892, 63
  %18922 = xor i64 %18917, %18920
  %18923 = xor i64 %18917, %18921
  %18924 = add i64 %18922, %18923
  %18925 = icmp eq i64 %18924, 2
  %18926 = zext i1 %18925 to i8
  %18927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18926, i8* %18927, align 1
  store %struct.Memory* %loadMem_40bfdd, %struct.Memory** %MEMORY
  %loadMem_40bfe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18929 = getelementptr inbounds %struct.GPR, %struct.GPR* %18928, i32 0, i32 33
  %18930 = getelementptr inbounds %struct.Reg, %struct.Reg* %18929, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %18930 to i64*
  %18931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18932 = getelementptr inbounds %struct.GPR, %struct.GPR* %18931, i32 0, i32 9
  %18933 = getelementptr inbounds %struct.Reg, %struct.Reg* %18932, i32 0, i32 0
  %RSI.i74 = bitcast %union.anon* %18933 to i64*
  %18934 = load i64, i64* %RSI.i74
  %18935 = load i64, i64* %PC.i73
  %18936 = add i64 %18935, 4
  store i64 %18936, i64* %PC.i73
  %18937 = add i64 96, %18934
  store i64 %18937, i64* %RSI.i74, align 8
  %18938 = icmp ult i64 %18937, %18934
  %18939 = icmp ult i64 %18937, 96
  %18940 = or i1 %18938, %18939
  %18941 = zext i1 %18940 to i8
  %18942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18941, i8* %18942, align 1
  %18943 = trunc i64 %18937 to i32
  %18944 = and i32 %18943, 255
  %18945 = call i32 @llvm.ctpop.i32(i32 %18944)
  %18946 = trunc i32 %18945 to i8
  %18947 = and i8 %18946, 1
  %18948 = xor i8 %18947, 1
  %18949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18948, i8* %18949, align 1
  %18950 = xor i64 96, %18934
  %18951 = xor i64 %18950, %18937
  %18952 = lshr i64 %18951, 4
  %18953 = trunc i64 %18952 to i8
  %18954 = and i8 %18953, 1
  %18955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18954, i8* %18955, align 1
  %18956 = icmp eq i64 %18937, 0
  %18957 = zext i1 %18956 to i8
  %18958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18957, i8* %18958, align 1
  %18959 = lshr i64 %18937, 63
  %18960 = trunc i64 %18959 to i8
  %18961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18960, i8* %18961, align 1
  %18962 = lshr i64 %18934, 63
  %18963 = xor i64 %18959, %18962
  %18964 = add i64 %18963, %18959
  %18965 = icmp eq i64 %18964, 2
  %18966 = zext i1 %18965 to i8
  %18967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18966, i8* %18967, align 1
  store %struct.Memory* %loadMem_40bfe0, %struct.Memory** %MEMORY
  %loadMem_40bfe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18969 = getelementptr inbounds %struct.GPR, %struct.GPR* %18968, i32 0, i32 33
  %18970 = getelementptr inbounds %struct.Reg, %struct.Reg* %18969, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %18970 to i64*
  %18971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18972 = getelementptr inbounds %struct.GPR, %struct.GPR* %18971, i32 0, i32 7
  %18973 = getelementptr inbounds %struct.Reg, %struct.Reg* %18972, i32 0, i32 0
  %RDX.i72 = bitcast %union.anon* %18973 to i64*
  %18974 = load i64, i64* %PC.i71
  %18975 = add i64 %18974, 8
  store i64 %18975, i64* %PC.i71
  %18976 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %18976, i64* %RDX.i72, align 8
  store %struct.Memory* %loadMem_40bfe4, %struct.Memory** %MEMORY
  %loadMem_40bfec = load %struct.Memory*, %struct.Memory** %MEMORY
  %18977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18978 = getelementptr inbounds %struct.GPR, %struct.GPR* %18977, i32 0, i32 33
  %18979 = getelementptr inbounds %struct.Reg, %struct.Reg* %18978, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %18979 to i64*
  %18980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18981 = getelementptr inbounds %struct.GPR, %struct.GPR* %18980, i32 0, i32 7
  %18982 = getelementptr inbounds %struct.Reg, %struct.Reg* %18981, i32 0, i32 0
  %RDX.i69 = bitcast %union.anon* %18982 to i64*
  %18983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18984 = getelementptr inbounds %struct.GPR, %struct.GPR* %18983, i32 0, i32 9
  %18985 = getelementptr inbounds %struct.Reg, %struct.Reg* %18984, i32 0, i32 0
  %RSI.i70 = bitcast %union.anon* %18985 to i64*
  %18986 = load i64, i64* %RDX.i69
  %18987 = load i64, i64* %RSI.i70
  %18988 = load i64, i64* %PC.i68
  %18989 = add i64 %18988, 3
  store i64 %18989, i64* %PC.i68
  %18990 = inttoptr i64 %18986 to i64*
  store i64 %18987, i64* %18990
  store %struct.Memory* %loadMem_40bfec, %struct.Memory** %MEMORY
  %loadMem_40bfef = load %struct.Memory*, %struct.Memory** %MEMORY
  %18991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18992 = getelementptr inbounds %struct.GPR, %struct.GPR* %18991, i32 0, i32 33
  %18993 = getelementptr inbounds %struct.Reg, %struct.Reg* %18992, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %18993 to i64*
  %18994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18995 = getelementptr inbounds %struct.GPR, %struct.GPR* %18994, i32 0, i32 7
  %18996 = getelementptr inbounds %struct.Reg, %struct.Reg* %18995, i32 0, i32 0
  %RDX.i66 = bitcast %union.anon* %18996 to i64*
  %18997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18998 = getelementptr inbounds %struct.GPR, %struct.GPR* %18997, i32 0, i32 15
  %18999 = getelementptr inbounds %struct.Reg, %struct.Reg* %18998, i32 0, i32 0
  %RBP.i67 = bitcast %union.anon* %18999 to i64*
  %19000 = load i64, i64* %RBP.i67
  %19001 = sub i64 %19000, 44
  %19002 = load i64, i64* %PC.i65
  %19003 = add i64 %19002, 4
  store i64 %19003, i64* %PC.i65
  %19004 = inttoptr i64 %19001 to i32*
  %19005 = load i32, i32* %19004
  %19006 = sext i32 %19005 to i64
  store i64 %19006, i64* %RDX.i66, align 8
  store %struct.Memory* %loadMem_40bfef, %struct.Memory** %MEMORY
  %loadMem_40bff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19008 = getelementptr inbounds %struct.GPR, %struct.GPR* %19007, i32 0, i32 33
  %19009 = getelementptr inbounds %struct.Reg, %struct.Reg* %19008, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %19009 to i64*
  %19010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19011 = getelementptr inbounds %struct.GPR, %struct.GPR* %19010, i32 0, i32 7
  %19012 = getelementptr inbounds %struct.Reg, %struct.Reg* %19011, i32 0, i32 0
  %RDX.i64 = bitcast %union.anon* %19012 to i64*
  %19013 = load i64, i64* %RDX.i64
  %19014 = load i64, i64* %PC.i63
  %19015 = add i64 %19014, 7
  store i64 %19015, i64* %PC.i63
  %19016 = sext i64 %19013 to i128
  %19017 = and i128 %19016, -18446744073709551616
  %19018 = zext i64 %19013 to i128
  %19019 = or i128 %19017, %19018
  %19020 = mul i128 744, %19019
  %19021 = trunc i128 %19020 to i64
  store i64 %19021, i64* %RDX.i64, align 8
  %19022 = sext i64 %19021 to i128
  %19023 = icmp ne i128 %19022, %19020
  %19024 = zext i1 %19023 to i8
  %19025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19024, i8* %19025, align 1
  %19026 = trunc i128 %19020 to i32
  %19027 = and i32 %19026, 255
  %19028 = call i32 @llvm.ctpop.i32(i32 %19027)
  %19029 = trunc i32 %19028 to i8
  %19030 = and i8 %19029, 1
  %19031 = xor i8 %19030, 1
  %19032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19031, i8* %19032, align 1
  %19033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19033, align 1
  %19034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %19034, align 1
  %19035 = lshr i64 %19021, 63
  %19036 = trunc i64 %19035 to i8
  %19037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19036, i8* %19037, align 1
  %19038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19024, i8* %19038, align 1
  store %struct.Memory* %loadMem_40bff3, %struct.Memory** %MEMORY
  %loadMem_40bffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %19039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19040 = getelementptr inbounds %struct.GPR, %struct.GPR* %19039, i32 0, i32 33
  %19041 = getelementptr inbounds %struct.Reg, %struct.Reg* %19040, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %19041 to i64*
  %19042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19043 = getelementptr inbounds %struct.GPR, %struct.GPR* %19042, i32 0, i32 1
  %19044 = getelementptr inbounds %struct.Reg, %struct.Reg* %19043, i32 0, i32 0
  %RAX.i61 = bitcast %union.anon* %19044 to i64*
  %19045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19046 = getelementptr inbounds %struct.GPR, %struct.GPR* %19045, i32 0, i32 9
  %19047 = getelementptr inbounds %struct.Reg, %struct.Reg* %19046, i32 0, i32 0
  %RSI.i62 = bitcast %union.anon* %19047 to i64*
  %19048 = load i64, i64* %RAX.i61
  %19049 = load i64, i64* %PC.i60
  %19050 = add i64 %19049, 3
  store i64 %19050, i64* %PC.i60
  store i64 %19048, i64* %RSI.i62, align 8
  store %struct.Memory* %loadMem_40bffa, %struct.Memory** %MEMORY
  %loadMem_40bffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %19051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19052 = getelementptr inbounds %struct.GPR, %struct.GPR* %19051, i32 0, i32 33
  %19053 = getelementptr inbounds %struct.Reg, %struct.Reg* %19052, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %19053 to i64*
  %19054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19055 = getelementptr inbounds %struct.GPR, %struct.GPR* %19054, i32 0, i32 7
  %19056 = getelementptr inbounds %struct.Reg, %struct.Reg* %19055, i32 0, i32 0
  %RDX.i58 = bitcast %union.anon* %19056 to i64*
  %19057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19058 = getelementptr inbounds %struct.GPR, %struct.GPR* %19057, i32 0, i32 9
  %19059 = getelementptr inbounds %struct.Reg, %struct.Reg* %19058, i32 0, i32 0
  %RSI.i59 = bitcast %union.anon* %19059 to i64*
  %19060 = load i64, i64* %RSI.i59
  %19061 = load i64, i64* %RDX.i58
  %19062 = load i64, i64* %PC.i57
  %19063 = add i64 %19062, 3
  store i64 %19063, i64* %PC.i57
  %19064 = add i64 %19061, %19060
  store i64 %19064, i64* %RSI.i59, align 8
  %19065 = icmp ult i64 %19064, %19060
  %19066 = icmp ult i64 %19064, %19061
  %19067 = or i1 %19065, %19066
  %19068 = zext i1 %19067 to i8
  %19069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19068, i8* %19069, align 1
  %19070 = trunc i64 %19064 to i32
  %19071 = and i32 %19070, 255
  %19072 = call i32 @llvm.ctpop.i32(i32 %19071)
  %19073 = trunc i32 %19072 to i8
  %19074 = and i8 %19073, 1
  %19075 = xor i8 %19074, 1
  %19076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19075, i8* %19076, align 1
  %19077 = xor i64 %19061, %19060
  %19078 = xor i64 %19077, %19064
  %19079 = lshr i64 %19078, 4
  %19080 = trunc i64 %19079 to i8
  %19081 = and i8 %19080, 1
  %19082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19081, i8* %19082, align 1
  %19083 = icmp eq i64 %19064, 0
  %19084 = zext i1 %19083 to i8
  %19085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19084, i8* %19085, align 1
  %19086 = lshr i64 %19064, 63
  %19087 = trunc i64 %19086 to i8
  %19088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19087, i8* %19088, align 1
  %19089 = lshr i64 %19060, 63
  %19090 = lshr i64 %19061, 63
  %19091 = xor i64 %19086, %19089
  %19092 = xor i64 %19086, %19090
  %19093 = add i64 %19091, %19092
  %19094 = icmp eq i64 %19093, 2
  %19095 = zext i1 %19094 to i8
  %19096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19095, i8* %19096, align 1
  store %struct.Memory* %loadMem_40bffd, %struct.Memory** %MEMORY
  %loadMem_40c000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19098 = getelementptr inbounds %struct.GPR, %struct.GPR* %19097, i32 0, i32 33
  %19099 = getelementptr inbounds %struct.Reg, %struct.Reg* %19098, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %19099 to i64*
  %19100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19101 = getelementptr inbounds %struct.GPR, %struct.GPR* %19100, i32 0, i32 5
  %19102 = getelementptr inbounds %struct.Reg, %struct.Reg* %19101, i32 0, i32 0
  %RCX.i55 = bitcast %union.anon* %19102 to i64*
  %19103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19104 = getelementptr inbounds %struct.GPR, %struct.GPR* %19103, i32 0, i32 9
  %19105 = getelementptr inbounds %struct.Reg, %struct.Reg* %19104, i32 0, i32 0
  %RSI.i56 = bitcast %union.anon* %19105 to i64*
  %19106 = load i64, i64* %RSI.i56
  %19107 = add i64 %19106, 96
  %19108 = load i64, i64* %PC.i54
  %19109 = add i64 %19108, 3
  store i64 %19109, i64* %PC.i54
  %19110 = inttoptr i64 %19107 to i32*
  %19111 = load i32, i32* %19110
  %19112 = zext i32 %19111 to i64
  store i64 %19112, i64* %RCX.i55, align 8
  store %struct.Memory* %loadMem_40c000, %struct.Memory** %MEMORY
  %loadMem_40c003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19114 = getelementptr inbounds %struct.GPR, %struct.GPR* %19113, i32 0, i32 33
  %19115 = getelementptr inbounds %struct.Reg, %struct.Reg* %19114, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %19115 to i64*
  %19116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19117 = getelementptr inbounds %struct.GPR, %struct.GPR* %19116, i32 0, i32 7
  %19118 = getelementptr inbounds %struct.Reg, %struct.Reg* %19117, i32 0, i32 0
  %RDX.i53 = bitcast %union.anon* %19118 to i64*
  %19119 = load i64, i64* %PC.i52
  %19120 = add i64 %19119, 8
  store i64 %19120, i64* %PC.i52
  %19121 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %19121, i64* %RDX.i53, align 8
  store %struct.Memory* %loadMem_40c003, %struct.Memory** %MEMORY
  %loadMem_40c00b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19123 = getelementptr inbounds %struct.GPR, %struct.GPR* %19122, i32 0, i32 33
  %19124 = getelementptr inbounds %struct.Reg, %struct.Reg* %19123, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %19124 to i64*
  %19125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19126 = getelementptr inbounds %struct.GPR, %struct.GPR* %19125, i32 0, i32 7
  %19127 = getelementptr inbounds %struct.Reg, %struct.Reg* %19126, i32 0, i32 0
  %RDX.i50 = bitcast %union.anon* %19127 to i64*
  %19128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19129 = getelementptr inbounds %struct.GPR, %struct.GPR* %19128, i32 0, i32 9
  %19130 = getelementptr inbounds %struct.Reg, %struct.Reg* %19129, i32 0, i32 0
  %RSI.i51 = bitcast %union.anon* %19130 to i64*
  %19131 = load i64, i64* %RDX.i50
  %19132 = load i64, i64* %PC.i49
  %19133 = add i64 %19132, 3
  store i64 %19133, i64* %PC.i49
  store i64 %19131, i64* %RSI.i51, align 8
  store %struct.Memory* %loadMem_40c00b, %struct.Memory** %MEMORY
  %loadMem_40c00e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19135 = getelementptr inbounds %struct.GPR, %struct.GPR* %19134, i32 0, i32 33
  %19136 = getelementptr inbounds %struct.Reg, %struct.Reg* %19135, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %19136 to i64*
  %19137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19138 = getelementptr inbounds %struct.GPR, %struct.GPR* %19137, i32 0, i32 9
  %19139 = getelementptr inbounds %struct.Reg, %struct.Reg* %19138, i32 0, i32 0
  %RSI.i48 = bitcast %union.anon* %19139 to i64*
  %19140 = load i64, i64* %RSI.i48
  %19141 = load i64, i64* %PC.i47
  %19142 = add i64 %19141, 4
  store i64 %19142, i64* %PC.i47
  %19143 = add i64 16, %19140
  store i64 %19143, i64* %RSI.i48, align 8
  %19144 = icmp ult i64 %19143, %19140
  %19145 = icmp ult i64 %19143, 16
  %19146 = or i1 %19144, %19145
  %19147 = zext i1 %19146 to i8
  %19148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19147, i8* %19148, align 1
  %19149 = trunc i64 %19143 to i32
  %19150 = and i32 %19149, 255
  %19151 = call i32 @llvm.ctpop.i32(i32 %19150)
  %19152 = trunc i32 %19151 to i8
  %19153 = and i8 %19152, 1
  %19154 = xor i8 %19153, 1
  %19155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19154, i8* %19155, align 1
  %19156 = xor i64 16, %19140
  %19157 = xor i64 %19156, %19143
  %19158 = lshr i64 %19157, 4
  %19159 = trunc i64 %19158 to i8
  %19160 = and i8 %19159, 1
  %19161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19160, i8* %19161, align 1
  %19162 = icmp eq i64 %19143, 0
  %19163 = zext i1 %19162 to i8
  %19164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19163, i8* %19164, align 1
  %19165 = lshr i64 %19143, 63
  %19166 = trunc i64 %19165 to i8
  %19167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19166, i8* %19167, align 1
  %19168 = lshr i64 %19140, 63
  %19169 = xor i64 %19165, %19168
  %19170 = add i64 %19169, %19165
  %19171 = icmp eq i64 %19170, 2
  %19172 = zext i1 %19171 to i8
  %19173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19172, i8* %19173, align 1
  store %struct.Memory* %loadMem_40c00e, %struct.Memory** %MEMORY
  %loadMem_40c012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19175 = getelementptr inbounds %struct.GPR, %struct.GPR* %19174, i32 0, i32 33
  %19176 = getelementptr inbounds %struct.Reg, %struct.Reg* %19175, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %19176 to i64*
  %19177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19178 = getelementptr inbounds %struct.GPR, %struct.GPR* %19177, i32 0, i32 9
  %19179 = getelementptr inbounds %struct.Reg, %struct.Reg* %19178, i32 0, i32 0
  %RSI.i46 = bitcast %union.anon* %19179 to i64*
  %19180 = load i64, i64* %RSI.i46
  %19181 = load i64, i64* %PC.i45
  %19182 = add i64 %19181, 8
  store i64 %19182, i64* %PC.i45
  store i64 %19180, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40c012, %struct.Memory** %MEMORY
  %loadMem_40c01a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19184 = getelementptr inbounds %struct.GPR, %struct.GPR* %19183, i32 0, i32 33
  %19185 = getelementptr inbounds %struct.Reg, %struct.Reg* %19184, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %19185 to i64*
  %19186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19187 = getelementptr inbounds %struct.GPR, %struct.GPR* %19186, i32 0, i32 5
  %19188 = getelementptr inbounds %struct.Reg, %struct.Reg* %19187, i32 0, i32 0
  %ECX.i43 = bitcast %union.anon* %19188 to i32*
  %19189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19190 = getelementptr inbounds %struct.GPR, %struct.GPR* %19189, i32 0, i32 7
  %19191 = getelementptr inbounds %struct.Reg, %struct.Reg* %19190, i32 0, i32 0
  %RDX.i44 = bitcast %union.anon* %19191 to i64*
  %19192 = load i64, i64* %RDX.i44
  %19193 = add i64 %19192, 8
  %19194 = load i32, i32* %ECX.i43
  %19195 = zext i32 %19194 to i64
  %19196 = load i64, i64* %PC.i42
  %19197 = add i64 %19196, 3
  store i64 %19197, i64* %PC.i42
  %19198 = inttoptr i64 %19193 to i32*
  store i32 %19194, i32* %19198
  store %struct.Memory* %loadMem_40c01a, %struct.Memory** %MEMORY
  %loadMem_40c01d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19200 = getelementptr inbounds %struct.GPR, %struct.GPR* %19199, i32 0, i32 33
  %19201 = getelementptr inbounds %struct.Reg, %struct.Reg* %19200, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %19201 to i64*
  %19202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19203 = getelementptr inbounds %struct.GPR, %struct.GPR* %19202, i32 0, i32 7
  %19204 = getelementptr inbounds %struct.Reg, %struct.Reg* %19203, i32 0, i32 0
  %RDX.i40 = bitcast %union.anon* %19204 to i64*
  %19205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19206 = getelementptr inbounds %struct.GPR, %struct.GPR* %19205, i32 0, i32 15
  %19207 = getelementptr inbounds %struct.Reg, %struct.Reg* %19206, i32 0, i32 0
  %RBP.i41 = bitcast %union.anon* %19207 to i64*
  %19208 = load i64, i64* %RBP.i41
  %19209 = sub i64 %19208, 4
  %19210 = load i64, i64* %PC.i39
  %19211 = add i64 %19210, 4
  store i64 %19211, i64* %PC.i39
  %19212 = inttoptr i64 %19209 to i32*
  %19213 = load i32, i32* %19212
  %19214 = sext i32 %19213 to i64
  store i64 %19214, i64* %RDX.i40, align 8
  store %struct.Memory* %loadMem_40c01d, %struct.Memory** %MEMORY
  %loadMem_40c021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19216 = getelementptr inbounds %struct.GPR, %struct.GPR* %19215, i32 0, i32 33
  %19217 = getelementptr inbounds %struct.Reg, %struct.Reg* %19216, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %19217 to i64*
  %19218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19219 = getelementptr inbounds %struct.GPR, %struct.GPR* %19218, i32 0, i32 5
  %19220 = getelementptr inbounds %struct.Reg, %struct.Reg* %19219, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %19220 to i64*
  %19221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19222 = getelementptr inbounds %struct.GPR, %struct.GPR* %19221, i32 0, i32 7
  %19223 = getelementptr inbounds %struct.Reg, %struct.Reg* %19222, i32 0, i32 0
  %RDX.i38 = bitcast %union.anon* %19223 to i64*
  %19224 = load i64, i64* %RDX.i38
  %19225 = mul i64 %19224, 4
  %19226 = add i64 %19225, 11187184
  %19227 = load i64, i64* %PC.i37
  %19228 = add i64 %19227, 7
  store i64 %19228, i64* %PC.i37
  %19229 = inttoptr i64 %19226 to i32*
  %19230 = load i32, i32* %19229
  %19231 = zext i32 %19230 to i64
  store i64 %19231, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_40c021, %struct.Memory** %MEMORY
  %loadMem_40c028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19233 = getelementptr inbounds %struct.GPR, %struct.GPR* %19232, i32 0, i32 33
  %19234 = getelementptr inbounds %struct.Reg, %struct.Reg* %19233, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %19234 to i64*
  %19235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19236 = getelementptr inbounds %struct.GPR, %struct.GPR* %19235, i32 0, i32 7
  %19237 = getelementptr inbounds %struct.Reg, %struct.Reg* %19236, i32 0, i32 0
  %RDX.i35 = bitcast %union.anon* %19237 to i64*
  %19238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19239 = getelementptr inbounds %struct.GPR, %struct.GPR* %19238, i32 0, i32 15
  %19240 = getelementptr inbounds %struct.Reg, %struct.Reg* %19239, i32 0, i32 0
  %RBP.i36 = bitcast %union.anon* %19240 to i64*
  %19241 = load i64, i64* %RBP.i36
  %19242 = sub i64 %19241, 44
  %19243 = load i64, i64* %PC.i34
  %19244 = add i64 %19243, 4
  store i64 %19244, i64* %PC.i34
  %19245 = inttoptr i64 %19242 to i32*
  %19246 = load i32, i32* %19245
  %19247 = sext i32 %19246 to i64
  store i64 %19247, i64* %RDX.i35, align 8
  store %struct.Memory* %loadMem_40c028, %struct.Memory** %MEMORY
  %loadMem_40c02c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19249 = getelementptr inbounds %struct.GPR, %struct.GPR* %19248, i32 0, i32 33
  %19250 = getelementptr inbounds %struct.Reg, %struct.Reg* %19249, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %19250 to i64*
  %19251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19252 = getelementptr inbounds %struct.GPR, %struct.GPR* %19251, i32 0, i32 7
  %19253 = getelementptr inbounds %struct.Reg, %struct.Reg* %19252, i32 0, i32 0
  %RDX.i33 = bitcast %union.anon* %19253 to i64*
  %19254 = load i64, i64* %RDX.i33
  %19255 = load i64, i64* %PC.i32
  %19256 = add i64 %19255, 7
  store i64 %19256, i64* %PC.i32
  %19257 = sext i64 %19254 to i128
  %19258 = and i128 %19257, -18446744073709551616
  %19259 = zext i64 %19254 to i128
  %19260 = or i128 %19258, %19259
  %19261 = mul i128 744, %19260
  %19262 = trunc i128 %19261 to i64
  store i64 %19262, i64* %RDX.i33, align 8
  %19263 = sext i64 %19262 to i128
  %19264 = icmp ne i128 %19263, %19261
  %19265 = zext i1 %19264 to i8
  %19266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19265, i8* %19266, align 1
  %19267 = trunc i128 %19261 to i32
  %19268 = and i32 %19267, 255
  %19269 = call i32 @llvm.ctpop.i32(i32 %19268)
  %19270 = trunc i32 %19269 to i8
  %19271 = and i8 %19270, 1
  %19272 = xor i8 %19271, 1
  %19273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19272, i8* %19273, align 1
  %19274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19274, align 1
  %19275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %19275, align 1
  %19276 = lshr i64 %19262, 63
  %19277 = trunc i64 %19276 to i8
  %19278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19277, i8* %19278, align 1
  %19279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19265, i8* %19279, align 1
  store %struct.Memory* %loadMem_40c02c, %struct.Memory** %MEMORY
  %loadMem_40c033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19281 = getelementptr inbounds %struct.GPR, %struct.GPR* %19280, i32 0, i32 33
  %19282 = getelementptr inbounds %struct.Reg, %struct.Reg* %19281, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %19282 to i64*
  %19283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19284 = getelementptr inbounds %struct.GPR, %struct.GPR* %19283, i32 0, i32 1
  %19285 = getelementptr inbounds %struct.Reg, %struct.Reg* %19284, i32 0, i32 0
  %RAX.i30 = bitcast %union.anon* %19285 to i64*
  %19286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19287 = getelementptr inbounds %struct.GPR, %struct.GPR* %19286, i32 0, i32 9
  %19288 = getelementptr inbounds %struct.Reg, %struct.Reg* %19287, i32 0, i32 0
  %RSI.i31 = bitcast %union.anon* %19288 to i64*
  %19289 = load i64, i64* %RAX.i30
  %19290 = load i64, i64* %PC.i29
  %19291 = add i64 %19290, 3
  store i64 %19291, i64* %PC.i29
  store i64 %19289, i64* %RSI.i31, align 8
  store %struct.Memory* %loadMem_40c033, %struct.Memory** %MEMORY
  %loadMem_40c036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19293 = getelementptr inbounds %struct.GPR, %struct.GPR* %19292, i32 0, i32 33
  %19294 = getelementptr inbounds %struct.Reg, %struct.Reg* %19293, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %19294 to i64*
  %19295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19296 = getelementptr inbounds %struct.GPR, %struct.GPR* %19295, i32 0, i32 7
  %19297 = getelementptr inbounds %struct.Reg, %struct.Reg* %19296, i32 0, i32 0
  %RDX.i27 = bitcast %union.anon* %19297 to i64*
  %19298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19299 = getelementptr inbounds %struct.GPR, %struct.GPR* %19298, i32 0, i32 9
  %19300 = getelementptr inbounds %struct.Reg, %struct.Reg* %19299, i32 0, i32 0
  %RSI.i28 = bitcast %union.anon* %19300 to i64*
  %19301 = load i64, i64* %RSI.i28
  %19302 = load i64, i64* %RDX.i27
  %19303 = load i64, i64* %PC.i26
  %19304 = add i64 %19303, 3
  store i64 %19304, i64* %PC.i26
  %19305 = add i64 %19302, %19301
  store i64 %19305, i64* %RSI.i28, align 8
  %19306 = icmp ult i64 %19305, %19301
  %19307 = icmp ult i64 %19305, %19302
  %19308 = or i1 %19306, %19307
  %19309 = zext i1 %19308 to i8
  %19310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19309, i8* %19310, align 1
  %19311 = trunc i64 %19305 to i32
  %19312 = and i32 %19311, 255
  %19313 = call i32 @llvm.ctpop.i32(i32 %19312)
  %19314 = trunc i32 %19313 to i8
  %19315 = and i8 %19314, 1
  %19316 = xor i8 %19315, 1
  %19317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19316, i8* %19317, align 1
  %19318 = xor i64 %19302, %19301
  %19319 = xor i64 %19318, %19305
  %19320 = lshr i64 %19319, 4
  %19321 = trunc i64 %19320 to i8
  %19322 = and i8 %19321, 1
  %19323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19322, i8* %19323, align 1
  %19324 = icmp eq i64 %19305, 0
  %19325 = zext i1 %19324 to i8
  %19326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19325, i8* %19326, align 1
  %19327 = lshr i64 %19305, 63
  %19328 = trunc i64 %19327 to i8
  %19329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19328, i8* %19329, align 1
  %19330 = lshr i64 %19301, 63
  %19331 = lshr i64 %19302, 63
  %19332 = xor i64 %19327, %19330
  %19333 = xor i64 %19327, %19331
  %19334 = add i64 %19332, %19333
  %19335 = icmp eq i64 %19334, 2
  %19336 = zext i1 %19335 to i8
  %19337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19336, i8* %19337, align 1
  store %struct.Memory* %loadMem_40c036, %struct.Memory** %MEMORY
  %loadMem_40c039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19339 = getelementptr inbounds %struct.GPR, %struct.GPR* %19338, i32 0, i32 33
  %19340 = getelementptr inbounds %struct.Reg, %struct.Reg* %19339, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %19340 to i64*
  %19341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19342 = getelementptr inbounds %struct.GPR, %struct.GPR* %19341, i32 0, i32 7
  %19343 = getelementptr inbounds %struct.Reg, %struct.Reg* %19342, i32 0, i32 0
  %RDX.i24 = bitcast %union.anon* %19343 to i64*
  %19344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19345 = getelementptr inbounds %struct.GPR, %struct.GPR* %19344, i32 0, i32 15
  %19346 = getelementptr inbounds %struct.Reg, %struct.Reg* %19345, i32 0, i32 0
  %RBP.i25 = bitcast %union.anon* %19346 to i64*
  %19347 = load i64, i64* %RBP.i25
  %19348 = sub i64 %19347, 44
  %19349 = load i64, i64* %PC.i23
  %19350 = add i64 %19349, 4
  store i64 %19350, i64* %PC.i23
  %19351 = inttoptr i64 %19348 to i32*
  %19352 = load i32, i32* %19351
  %19353 = sext i32 %19352 to i64
  store i64 %19353, i64* %RDX.i24, align 8
  store %struct.Memory* %loadMem_40c039, %struct.Memory** %MEMORY
  %loadMem_40c03d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19355 = getelementptr inbounds %struct.GPR, %struct.GPR* %19354, i32 0, i32 33
  %19356 = getelementptr inbounds %struct.Reg, %struct.Reg* %19355, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %19356 to i64*
  %19357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19358 = getelementptr inbounds %struct.GPR, %struct.GPR* %19357, i32 0, i32 7
  %19359 = getelementptr inbounds %struct.Reg, %struct.Reg* %19358, i32 0, i32 0
  %RDX.i22 = bitcast %union.anon* %19359 to i64*
  %19360 = load i64, i64* %RDX.i22
  %19361 = load i64, i64* %PC.i21
  %19362 = add i64 %19361, 7
  store i64 %19362, i64* %PC.i21
  %19363 = sext i64 %19360 to i128
  %19364 = and i128 %19363, -18446744073709551616
  %19365 = zext i64 %19360 to i128
  %19366 = or i128 %19364, %19365
  %19367 = mul i128 744, %19366
  %19368 = trunc i128 %19367 to i64
  store i64 %19368, i64* %RDX.i22, align 8
  %19369 = sext i64 %19368 to i128
  %19370 = icmp ne i128 %19369, %19367
  %19371 = zext i1 %19370 to i8
  %19372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19371, i8* %19372, align 1
  %19373 = trunc i128 %19367 to i32
  %19374 = and i32 %19373, 255
  %19375 = call i32 @llvm.ctpop.i32(i32 %19374)
  %19376 = trunc i32 %19375 to i8
  %19377 = and i8 %19376, 1
  %19378 = xor i8 %19377, 1
  %19379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19378, i8* %19379, align 1
  %19380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19380, align 1
  %19381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %19381, align 1
  %19382 = lshr i64 %19368, 63
  %19383 = trunc i64 %19382 to i8
  %19384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19383, i8* %19384, align 1
  %19385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19371, i8* %19385, align 1
  store %struct.Memory* %loadMem_40c03d, %struct.Memory** %MEMORY
  %loadMem_40c044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19387 = getelementptr inbounds %struct.GPR, %struct.GPR* %19386, i32 0, i32 33
  %19388 = getelementptr inbounds %struct.Reg, %struct.Reg* %19387, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %19388 to i64*
  %19389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19390 = getelementptr inbounds %struct.GPR, %struct.GPR* %19389, i32 0, i32 1
  %19391 = getelementptr inbounds %struct.Reg, %struct.Reg* %19390, i32 0, i32 0
  %RAX.i20 = bitcast %union.anon* %19391 to i64*
  %19392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19393 = getelementptr inbounds %struct.GPR, %struct.GPR* %19392, i32 0, i32 7
  %19394 = getelementptr inbounds %struct.Reg, %struct.Reg* %19393, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %19394 to i64*
  %19395 = load i64, i64* %RAX.i20
  %19396 = load i64, i64* %RDX.i
  %19397 = load i64, i64* %PC.i19
  %19398 = add i64 %19397, 3
  store i64 %19398, i64* %PC.i19
  %19399 = add i64 %19396, %19395
  store i64 %19399, i64* %RAX.i20, align 8
  %19400 = icmp ult i64 %19399, %19395
  %19401 = icmp ult i64 %19399, %19396
  %19402 = or i1 %19400, %19401
  %19403 = zext i1 %19402 to i8
  %19404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19403, i8* %19404, align 1
  %19405 = trunc i64 %19399 to i32
  %19406 = and i32 %19405, 255
  %19407 = call i32 @llvm.ctpop.i32(i32 %19406)
  %19408 = trunc i32 %19407 to i8
  %19409 = and i8 %19408, 1
  %19410 = xor i8 %19409, 1
  %19411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19410, i8* %19411, align 1
  %19412 = xor i64 %19396, %19395
  %19413 = xor i64 %19412, %19399
  %19414 = lshr i64 %19413, 4
  %19415 = trunc i64 %19414 to i8
  %19416 = and i8 %19415, 1
  %19417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19416, i8* %19417, align 1
  %19418 = icmp eq i64 %19399, 0
  %19419 = zext i1 %19418 to i8
  %19420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19419, i8* %19420, align 1
  %19421 = lshr i64 %19399, 63
  %19422 = trunc i64 %19421 to i8
  %19423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19422, i8* %19423, align 1
  %19424 = lshr i64 %19395, 63
  %19425 = lshr i64 %19396, 63
  %19426 = xor i64 %19421, %19424
  %19427 = xor i64 %19421, %19425
  %19428 = add i64 %19426, %19427
  %19429 = icmp eq i64 %19428, 2
  %19430 = zext i1 %19429 to i8
  %19431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19430, i8* %19431, align 1
  store %struct.Memory* %loadMem_40c044, %struct.Memory** %MEMORY
  %loadMem_40c047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19433 = getelementptr inbounds %struct.GPR, %struct.GPR* %19432, i32 0, i32 33
  %19434 = getelementptr inbounds %struct.Reg, %struct.Reg* %19433, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %19434 to i64*
  %19435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19436 = getelementptr inbounds %struct.GPR, %struct.GPR* %19435, i32 0, i32 17
  %19437 = getelementptr inbounds %struct.Reg, %struct.Reg* %19436, i32 0, i32 0
  %R8D.i17 = bitcast %union.anon* %19437 to i32*
  %19438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19439 = getelementptr inbounds %struct.GPR, %struct.GPR* %19438, i32 0, i32 1
  %19440 = getelementptr inbounds %struct.Reg, %struct.Reg* %19439, i32 0, i32 0
  %RAX.i18 = bitcast %union.anon* %19440 to i64*
  %19441 = bitcast i32* %R8D.i17 to i64*
  %19442 = load i64, i64* %RAX.i18
  %19443 = add i64 %19442, 96
  %19444 = load i64, i64* %PC.i16
  %19445 = add i64 %19444, 4
  store i64 %19445, i64* %PC.i16
  %19446 = inttoptr i64 %19443 to i32*
  %19447 = load i32, i32* %19446
  %19448 = zext i32 %19447 to i64
  store i64 %19448, i64* %19441, align 8
  store %struct.Memory* %loadMem_40c047, %struct.Memory** %MEMORY
  %loadMem_40c04b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19450 = getelementptr inbounds %struct.GPR, %struct.GPR* %19449, i32 0, i32 33
  %19451 = getelementptr inbounds %struct.Reg, %struct.Reg* %19450, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %19451 to i64*
  %19452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19453 = getelementptr inbounds %struct.GPR, %struct.GPR* %19452, i32 0, i32 17
  %19454 = getelementptr inbounds %struct.Reg, %struct.Reg* %19453, i32 0, i32 0
  %R8D.i14 = bitcast %union.anon* %19454 to i32*
  %19455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19456 = getelementptr inbounds %struct.GPR, %struct.GPR* %19455, i32 0, i32 19
  %19457 = getelementptr inbounds %struct.Reg, %struct.Reg* %19456, i32 0, i32 0
  %R9D.i15 = bitcast %union.anon* %19457 to i32*
  %19458 = bitcast i32* %R9D.i15 to i64*
  %19459 = load i32, i32* %R8D.i14
  %19460 = zext i32 %19459 to i64
  %19461 = load i64, i64* %PC.i13
  %19462 = add i64 %19461, 3
  store i64 %19462, i64* %PC.i13
  %19463 = and i64 %19460, 4294967295
  store i64 %19463, i64* %19458, align 8
  store %struct.Memory* %loadMem_40c04b, %struct.Memory** %MEMORY
  %loadMem_40c04e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19465 = getelementptr inbounds %struct.GPR, %struct.GPR* %19464, i32 0, i32 33
  %19466 = getelementptr inbounds %struct.Reg, %struct.Reg* %19465, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %19466 to i64*
  %19467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19468 = getelementptr inbounds %struct.GPR, %struct.GPR* %19467, i32 0, i32 19
  %19469 = getelementptr inbounds %struct.Reg, %struct.Reg* %19468, i32 0, i32 0
  %R9D.i12 = bitcast %union.anon* %19469 to i32*
  %19470 = bitcast i32* %R9D.i12 to i64*
  %19471 = load i32, i32* %R9D.i12
  %19472 = zext i32 %19471 to i64
  %19473 = load i64, i64* %PC.i11
  %19474 = add i64 %19473, 4
  store i64 %19474, i64* %PC.i11
  %19475 = add i32 1, %19471
  %19476 = zext i32 %19475 to i64
  store i64 %19476, i64* %19470, align 8
  %19477 = icmp ult i32 %19475, %19471
  %19478 = icmp ult i32 %19475, 1
  %19479 = or i1 %19477, %19478
  %19480 = zext i1 %19479 to i8
  %19481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19480, i8* %19481, align 1
  %19482 = and i32 %19475, 255
  %19483 = call i32 @llvm.ctpop.i32(i32 %19482)
  %19484 = trunc i32 %19483 to i8
  %19485 = and i8 %19484, 1
  %19486 = xor i8 %19485, 1
  %19487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19486, i8* %19487, align 1
  %19488 = xor i64 1, %19472
  %19489 = trunc i64 %19488 to i32
  %19490 = xor i32 %19489, %19475
  %19491 = lshr i32 %19490, 4
  %19492 = trunc i32 %19491 to i8
  %19493 = and i8 %19492, 1
  %19494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19493, i8* %19494, align 1
  %19495 = icmp eq i32 %19475, 0
  %19496 = zext i1 %19495 to i8
  %19497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19496, i8* %19497, align 1
  %19498 = lshr i32 %19475, 31
  %19499 = trunc i32 %19498 to i8
  %19500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19499, i8* %19500, align 1
  %19501 = lshr i32 %19471, 31
  %19502 = xor i32 %19498, %19501
  %19503 = add i32 %19502, %19498
  %19504 = icmp eq i32 %19503, 2
  %19505 = zext i1 %19504 to i8
  %19506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19505, i8* %19506, align 1
  store %struct.Memory* %loadMem_40c04e, %struct.Memory** %MEMORY
  %loadMem_40c052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19508 = getelementptr inbounds %struct.GPR, %struct.GPR* %19507, i32 0, i32 33
  %19509 = getelementptr inbounds %struct.Reg, %struct.Reg* %19508, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %19509 to i64*
  %19510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19511 = getelementptr inbounds %struct.GPR, %struct.GPR* %19510, i32 0, i32 19
  %19512 = getelementptr inbounds %struct.Reg, %struct.Reg* %19511, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %19512 to i32*
  %19513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19514 = getelementptr inbounds %struct.GPR, %struct.GPR* %19513, i32 0, i32 1
  %19515 = getelementptr inbounds %struct.Reg, %struct.Reg* %19514, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %19515 to i64*
  %19516 = load i64, i64* %RAX.i10
  %19517 = add i64 %19516, 96
  %19518 = load i32, i32* %R9D.i
  %19519 = zext i32 %19518 to i64
  %19520 = load i64, i64* %PC.i9
  %19521 = add i64 %19520, 4
  store i64 %19521, i64* %PC.i9
  %19522 = inttoptr i64 %19517 to i32*
  store i32 %19518, i32* %19522
  store %struct.Memory* %loadMem_40c052, %struct.Memory** %MEMORY
  %loadMem_40c056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19524 = getelementptr inbounds %struct.GPR, %struct.GPR* %19523, i32 0, i32 33
  %19525 = getelementptr inbounds %struct.Reg, %struct.Reg* %19524, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %19525 to i64*
  %19526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19527 = getelementptr inbounds %struct.GPR, %struct.GPR* %19526, i32 0, i32 17
  %19528 = getelementptr inbounds %struct.Reg, %struct.Reg* %19527, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %19528 to i32*
  %19529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19530 = getelementptr inbounds %struct.GPR, %struct.GPR* %19529, i32 0, i32 1
  %19531 = getelementptr inbounds %struct.Reg, %struct.Reg* %19530, i32 0, i32 0
  %RAX.i8 = bitcast %union.anon* %19531 to i64*
  %19532 = load i32, i32* %R8D.i
  %19533 = zext i32 %19532 to i64
  %19534 = load i64, i64* %PC.i7
  %19535 = add i64 %19534, 3
  store i64 %19535, i64* %PC.i7
  %19536 = shl i64 %19533, 32
  %19537 = ashr exact i64 %19536, 32
  store i64 %19537, i64* %RAX.i8, align 8
  store %struct.Memory* %loadMem_40c056, %struct.Memory** %MEMORY
  %loadMem_40c059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19539 = getelementptr inbounds %struct.GPR, %struct.GPR* %19538, i32 0, i32 33
  %19540 = getelementptr inbounds %struct.Reg, %struct.Reg* %19539, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %19540 to i64*
  %19541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19542 = getelementptr inbounds %struct.GPR, %struct.GPR* %19541, i32 0, i32 5
  %19543 = getelementptr inbounds %struct.Reg, %struct.Reg* %19542, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %19543 to i32*
  %19544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19545 = getelementptr inbounds %struct.GPR, %struct.GPR* %19544, i32 0, i32 1
  %19546 = getelementptr inbounds %struct.Reg, %struct.Reg* %19545, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %19546 to i64*
  %19547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19548 = getelementptr inbounds %struct.GPR, %struct.GPR* %19547, i32 0, i32 9
  %19549 = getelementptr inbounds %struct.Reg, %struct.Reg* %19548, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %19549 to i64*
  %19550 = load i64, i64* %RSI.i
  %19551 = load i64, i64* %RAX.i
  %19552 = mul i64 %19551, 4
  %19553 = add i64 %19550, 100
  %19554 = add i64 %19553, %19552
  %19555 = load i32, i32* %ECX.i
  %19556 = zext i32 %19555 to i64
  %19557 = load i64, i64* %PC.i6
  %19558 = add i64 %19557, 4
  store i64 %19558, i64* %PC.i6
  %19559 = inttoptr i64 %19554 to i32*
  store i32 %19555, i32* %19559
  store %struct.Memory* %loadMem_40c059, %struct.Memory** %MEMORY
  br label %block_.L_40c05d

block_.L_40c05d:                                  ; preds = %block_40bf1c, %block_40bee4, %block_.L_40beca
  %loadMem_40c05d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19561 = getelementptr inbounds %struct.GPR, %struct.GPR* %19560, i32 0, i32 33
  %19562 = getelementptr inbounds %struct.Reg, %struct.Reg* %19561, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %19562 to i64*
  %19563 = load i64, i64* %PC.i5
  %19564 = add i64 %19563, 5
  %19565 = load i64, i64* %PC.i5
  %19566 = add i64 %19565, 5
  store i64 %19566, i64* %PC.i5
  %19567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19564, i64* %19567, align 8
  store %struct.Memory* %loadMem_40c05d, %struct.Memory** %MEMORY
  br label %block_.L_40c062

block_.L_40c062:                                  ; preds = %block_.L_40c05d, %block_.L_40bec5
  %loadMem_40c062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19569 = getelementptr inbounds %struct.GPR, %struct.GPR* %19568, i32 0, i32 33
  %19570 = getelementptr inbounds %struct.Reg, %struct.Reg* %19569, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %19570 to i64*
  %19571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19572 = getelementptr inbounds %struct.GPR, %struct.GPR* %19571, i32 0, i32 13
  %19573 = getelementptr inbounds %struct.Reg, %struct.Reg* %19572, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %19573 to i64*
  %19574 = load i64, i64* %RSP.i
  %19575 = load i64, i64* %PC.i4
  %19576 = add i64 %19575, 4
  store i64 %19576, i64* %PC.i4
  %19577 = add i64 48, %19574
  store i64 %19577, i64* %RSP.i, align 8
  %19578 = icmp ult i64 %19577, %19574
  %19579 = icmp ult i64 %19577, 48
  %19580 = or i1 %19578, %19579
  %19581 = zext i1 %19580 to i8
  %19582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19581, i8* %19582, align 1
  %19583 = trunc i64 %19577 to i32
  %19584 = and i32 %19583, 255
  %19585 = call i32 @llvm.ctpop.i32(i32 %19584)
  %19586 = trunc i32 %19585 to i8
  %19587 = and i8 %19586, 1
  %19588 = xor i8 %19587, 1
  %19589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19588, i8* %19589, align 1
  %19590 = xor i64 48, %19574
  %19591 = xor i64 %19590, %19577
  %19592 = lshr i64 %19591, 4
  %19593 = trunc i64 %19592 to i8
  %19594 = and i8 %19593, 1
  %19595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19594, i8* %19595, align 1
  %19596 = icmp eq i64 %19577, 0
  %19597 = zext i1 %19596 to i8
  %19598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19597, i8* %19598, align 1
  %19599 = lshr i64 %19577, 63
  %19600 = trunc i64 %19599 to i8
  %19601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19600, i8* %19601, align 1
  %19602 = lshr i64 %19574, 63
  %19603 = xor i64 %19599, %19602
  %19604 = add i64 %19603, %19599
  %19605 = icmp eq i64 %19604, 2
  %19606 = zext i1 %19605 to i8
  %19607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19606, i8* %19607, align 1
  store %struct.Memory* %loadMem_40c062, %struct.Memory** %MEMORY
  %loadMem_40c066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19609 = getelementptr inbounds %struct.GPR, %struct.GPR* %19608, i32 0, i32 33
  %19610 = getelementptr inbounds %struct.Reg, %struct.Reg* %19609, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %19610 to i64*
  %19611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19612 = getelementptr inbounds %struct.GPR, %struct.GPR* %19611, i32 0, i32 15
  %19613 = getelementptr inbounds %struct.Reg, %struct.Reg* %19612, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %19613 to i64*
  %19614 = load i64, i64* %PC.i2
  %19615 = add i64 %19614, 1
  store i64 %19615, i64* %PC.i2
  %19616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %19617 = load i64, i64* %19616, align 8
  %19618 = add i64 %19617, 8
  %19619 = inttoptr i64 %19617 to i64*
  %19620 = load i64, i64* %19619
  store i64 %19620, i64* %RBP.i3, align 8
  store i64 %19618, i64* %19616, align 8
  store %struct.Memory* %loadMem_40c066, %struct.Memory** %MEMORY
  %loadMem_40c067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19622 = getelementptr inbounds %struct.GPR, %struct.GPR* %19621, i32 0, i32 33
  %19623 = getelementptr inbounds %struct.Reg, %struct.Reg* %19622, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %19623 to i64*
  %19624 = load i64, i64* %PC.i1
  %19625 = add i64 %19624, 1
  store i64 %19625, i64* %PC.i1
  %19626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %19628 = load i64, i64* %19627, align 8
  %19629 = inttoptr i64 %19628 to i64*
  %19630 = load i64, i64* %19629
  store i64 %19630, i64* %19626, align 8
  %19631 = add i64 %19628, 8
  store i64 %19631, i64* %19627, align 8
  store %struct.Memory* %loadMem_40c067, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_40c067
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x30___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 48
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 48
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 48, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xaaba30___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xaaba30_type* @G__0xaaba30 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xa7f430___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___r8_1____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 9
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x14__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x2e8___r8___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 744, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R8, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaaba30___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11188784
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0xaaba30___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11188784
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x2___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 1
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xa0e710___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaaba30___rax_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11188784
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xa0e710___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x10___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 16, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 16
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 16, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__0xa0e710(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0xaaba30___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11188784
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x1c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 28
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40b2df(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xa7f430___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x2e8___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 744, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 8, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 8
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 8, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x10___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 16, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 16
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 16, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__0xa0e710(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0xaab3f0___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11187184
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x2e8___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 744, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x4___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 4, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xa0e710___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rsi____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x10___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 16, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 16
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 16, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__0xa0e710(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x4__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 4
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x14__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 20
  %16 = icmp ult i32 %14, 20
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 20
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40b38b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.update_liberties(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b396(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.remove_liberty(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da08___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x99da08(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x60__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 96
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40b41b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da08___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x64__rsi__rdx_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 100
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 5
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x2e4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 740
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b3ae(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b573(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b56e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b478(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaab3f0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11187184
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b56e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b4b1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b4ea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b4ef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40b548(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x10__rsi__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 16
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b56e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b738(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 24
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b733(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xaab3f0___rdx_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 11187184
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x2e4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x99da08___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b733(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaab3f0___rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11187184
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x60___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 96, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 96
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 96, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x60__rsi____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x60__rdi____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 1, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 1
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 1, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x60__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 96
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r8d___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x64__rsi__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 100
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 20, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 20
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 20, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b890(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b88b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b795(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b88b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b7ce(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b807(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b80c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40b865(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b88b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40ba55(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40ba50(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40ba50(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = sub i32 %10, 1
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %10, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1, %11
  %26 = trunc i64 %25 to i32
  %27 = xor i32 %26, %14
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %14, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %14, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %10, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bbad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bba8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bab2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40bba8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40baeb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bb24(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bb29(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40bb82(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bba8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bd72(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bd6d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40bd6d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = sub i32 %10, 20
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %10, 20
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 20, %11
  %26 = trunc i64 %25 to i32
  %27 = xor i32 %26, %14
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %14, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %14, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %10, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40beca(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bec5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bdcf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40bec5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40be08(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40be41(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40be46(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40be9f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bec5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c062(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c05d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40c05d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x60__rax____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x60__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 96
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r8d___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x64__rsi__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 100
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x30___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 48, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 48
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 48, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
